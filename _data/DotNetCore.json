{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2019 Preview of Quality Rollup","PublishedOn":"2019-01-16T04:08:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the January 2019 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Addresses a garbage collection...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing ML.NET 0.9 – Machine Learning for .NET","PublishedOn":"2019-01-10T20:34:16+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Announcing ML.NET 0.9 &#8211; Machine Learning for .NET ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/10/announcing-ml-net-0-9-machine-learning-for-net/","RawContent":null},{"Title":"Tell us your thoughts on ML.NET, an open source and cross-platform machine learning framework","PublishedOn":"2019-01-09T17:31:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ML.NET is an open source and cross-platform machine learning framework made for .NET developers. .NET developers can use their C# or F# skills to easily integrate custom machine learning into their...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/09/tell-us-your-thoughts-on-ml-net/","RawContent":null},{"Title":".NET Core January 2019 Updates – 2.1.7 and 2.2.1","PublishedOn":"2019-01-09T02:07:05+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2019 Update. These updates contain security and reliability fixes. .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( Download &#124; Release Notes ) .NET Core...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-core-january-2019-update/","RawContent":null},{"Title":".NET Framework January 2019 Security and Quality Rollup","PublishedOn":"2019-01-08T18:59:07+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the January 2019 Security and Quality Rollup. Security CVE-2019-0545 – Windows Security Feature Bypass Vulnerability This security update resolves a vulnerability in Microsoft...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access Build 3707","PublishedOn":"2018-12-15T02:11:55+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We have another early access build to share today! This release includes several accessibility, performance, reliability and stability fixes across the major framework libraries. We will continue to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/14/announcing-net-framework-4-8-early-access-build-3707/","RawContent":null},{"Title":"Visual Studio 2019 Preview .NET Productivity","PublishedOn":"2018-12-14T00:13:41+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"As you hopefully heard, the first preview of Visual Studio 2019 is now available. In this post I’ll cover some of the productivity improvements for .NET developers we’re most excited about. For a...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/13/visual-studio-2019-net-productivity/","RawContent":null},{"Title":".NET Framework December 2018 Security and Quality Rollup","PublishedOn":"2018-12-11T18:23:48+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the December 2018 Security and Quality Rollup. Security CVE-2018-8540 – Windows Remote Code Execution Vulnerability This security update resolves a vulnerability in Microsoft...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/11/net-framework-december-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Open Sourcing XAML Behaviors for WPF","PublishedOn":"2018-12-10T19:27:32+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are excited to announce that we are open sourcing XAML Behaviors for WPF. In the past, we open sourced XAML Behaviors for UWP which has been a great success and the Behaviors NuGet package...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/10/open-sourcing-xaml-behaviors-for-wpf/","RawContent":null},{"Title":"Take C# 8.0 for a spin","PublishedOn":"2018-12-05T23:51:33+00:00","CommentsCount":99,"FacebookCount":0,"Summary":"Take C# 8.0 for a spin Yesterday we announced the first preview of both Visual Studio 2019 (Making every developer more productive with Visual Studio 2019) and .NET Core 3.0 (Announcing .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/take-c-8-0-for-a-spin/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8887340703","Type":"PullRequestEvent","CreatedAt":"2019-01-15T05:16:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Opened pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."},{"Id":"8860916656","Type":"PullRequestEvent","CreatedAt":"2019-01-09T22:28:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Merged pull request \"Update of EF description\" (#128) at dotnet/foundation","RelatedBody":"@divega !"},{"Id":"8837337598","Type":"PullRequestEvent","CreatedAt":"2019-01-05T03:23:40","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Merged pull request \"Update to absolute path\" (#129) at dotnet/foundation","RelatedBody":"Update to absolute path so that when this list is copied the link will actually work"},{"Id":"8833785661","Type":"PullRequestEvent","CreatedAt":"2019-01-04T11:57:11","Actor":"MarcBruins","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Opened pull request \"Update to absolute path\" (#129) at dotnet/foundation","RelatedBody":"Update to absolute path so that when this list is copied the link will actually work"},{"Id":"8833210040","Type":"PullRequestEvent","CreatedAt":"2019-01-04T09:40:51","Actor":"ErikEJ","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Opened pull request \"Update of EF description\" (#128) at dotnet/foundation","RelatedBody":"@divega !"},{"Id":"8831721539","Type":"PullRequestEvent","CreatedAt":"2019-01-04T00:22:43","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Merged pull request \"Update documentation information\" (#127) at dotnet/foundation","RelatedBody":""},{"Id":"8830688181","Type":"PullRequestEvent","CreatedAt":"2019-01-03T20:00:04","Actor":"carloscds","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Opened pull request \"Update documentation information\" (#127) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8852414845","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:17:46","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Opened issue \"January 2019 .NET Updates\" (#96) at dotnet/announcements","RelatedBody":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"8852318390","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:00:28","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Opened issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Compression.ZipFile | 4.0.0, 4.0.1, 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n\r\n"},{"Id":"8852317992","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:00:24","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Net.Http | 4.3.0, 4.3.1, 4.3.2, 4.3.3, 4.3.4 | 4.3.5\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n"},{"Id":"8752496804","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:22:59","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8752467326","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:12:36","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Opened issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8741036679","Type":"IssuesEvent","CreatedAt":"2018-12-12T12:56:54","Actor":"bilalmalik777","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment"},{"Id":"8740711774","Type":"IssuesEvent","CreatedAt":"2018-12-12T11:57:02","Actor":"bilalmalik777","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Opened issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\nI am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.iothub.simulator:\r\n    image: ${DOCKER_REGISTRY-}ttcoreiothubsimulator\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.IotHub.Simulator/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.labourtelemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcorelabourtelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.LabourTelemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.telemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoretelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Telemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  redis:\r\n    image: redis\r\n    command: redis-server --appendonly yes\r\n    ports:\r\n      - '6379:6379'\r\n    volumes:\r\n      - ${APPDATA}/redis:/bitnami/redis/data\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.16\r\n\r\n  mqtt:\r\n    image: eclipse-mosquitto\r\n    hostname: mqtt\r\n    container_name: mqtt\r\n    expose:\r\n      - \"1883\"\r\n      - \"9001\"\r\n    ports:\r\n      - \"1883:1883\"\r\n      - \"9001:9001\"\r\n    volumes:\r\n      - ${APPDATA}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.8\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8901869808","Type":"PullRequestEvent","CreatedAt":"2019-01-17T04:43:31","Actor":"filipnavara","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22030","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert\" (#22030) at dotnet/coreclr","RelatedBody":"#22013 + build fixes"},{"Id":"8901755386","Type":"IssuesEvent","CreatedAt":"2019-01-17T04:03:18","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22029","RelatedDescription":"Closed issue \"Intrinsics can overwrite register use\" (#22029) at dotnet/coreclr","RelatedBody":"```csharp\r\nprivate unsafe static bool Sse2equenceEqual(ref byte first, ref byte second, IntPtr n)\r\n{\r\n    bool result = false;\r\n    IntPtr i = (IntPtr)0; // Use IntPtr for arithmetic to avoid unnecessary 64->32->64 truncations\r\n\r\n    n -= Vector128<byte>.Count;\r\n    while ((byte*)n > (byte*)i)\r\n    {\r\n        if (0xFFFF != Sse2.MoveMask(\r\n                Sse2.CompareEqual(\r\n                    Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref first, i)),\r\n                    Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref second, i))))\r\n            )\r\n        {\r\n            goto NotEqual;\r\n        }\r\n\r\n        i += Vector128<byte>.Count;\r\n    }\r\n\r\n    if (0xFFFF != Sse2.MoveMask(\r\n        Sse2.CompareEqual(\r\n            Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref first, n)),\r\n            Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref second, n))))\r\n    )\r\n    {\r\n        goto NotEqual;\r\n    }\r\n\r\n    result = true;\r\nNotEqual:\r\n    return result;\r\n}\r\n```\r\nGenerates\r\n```asm\r\n\r\nG_M57206_IG01:\r\n       C5F877               vzeroupper \r\n       6690                 nop      \r\n\r\nG_M57206_IG02:\r\n       33C0                 xor      eax, eax                   ; result set to zero\r\n       4533C9               xor      r9, r9\r\n       4983C0F0             add      r8, -16\r\n       EB23                 jmp      SHORT G_M57206_IG04\r\n\r\nG_M57206_IG03:\r\n       C4A179100409         vmovupd  xmm0, xmmword ptr [rcx+r9]\r\n       C4A179100C0A         vmovupd  xmm1, xmmword ptr [rdx+r9]\r\n       C5F974C1             vpcmpeqb xmm0, xmm0, xmm1\r\n       C579D7D0             vpmovmskb r10d, xmm0\r\n       4181FAFFFF0000       cmp      r10d, 0xFFFF\r\n       752E                 jne      SHORT G_M57206_IG05\r\n       4983C110             add      r9, 16\r\n\r\nG_M57206_IG04:\r\n       4D3BC1               cmp      r8, r9\r\n       77DA                 ja       SHORT G_M57206_IG03\r\n       C4A179100401         vmovupd  xmm0, xmmword ptr [rcx+r8]\r\n       C4A179100C02         vmovupd  xmm1, xmmword ptr [rdx+r8]\r\n       C5F974C1             vpcmpeqb xmm0, xmm0, xmm1\r\n       C5F9D7D0             vpmovmskb edx, xmm0                  ; result overwritten\r\n       81FAFFFF0000         cmp      edx, 0xFFFF\r\n       7507                 jne      SHORT G_M57206_IG05\r\n       B801000000           mov      eax, 1                      ; result set to true\r\n\r\nG_M57206_IG05:\r\n       C3                   ret      \r\n\r\n; Total bytes of code 88, prolog size 5 for method SpanHelpers:Sse2equenceEqual(byref,byref,long):bool\r\n```\r\n\r\nThis returns the incorrect result due to `vpmovmskb edx, xmm0` which overwrites the `edx` register in use by `bool result = false`\r\n\r\n/cc @CarolEidt @fiigii @tannergooding"},{"Id":"8901675751","Type":"IssuesEvent","CreatedAt":"2019-01-17T03:37:15","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22029","RelatedDescription":"Opened issue \"Intrinsics can overwrite register use\" (#22029) at dotnet/coreclr","RelatedBody":"```csharp\r\nprivate unsafe static bool Sse2equenceEqual(ref byte first, ref byte second, IntPtr n)\r\n{\r\n    bool result = false;\r\n    IntPtr i = (IntPtr)0; // Use IntPtr for arithmetic to avoid unnecessary 64->32->64 truncations\r\n\r\n    n -= Vector128<byte>.Count;\r\n    while ((byte*)n > (byte*)i)\r\n    {\r\n        if (~0 != Sse2.MoveMask(\r\n                Sse2.CompareEqual(\r\n                    Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref first, i)),\r\n                    Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref second, i))))\r\n            )\r\n        {\r\n            goto NotEqual;\r\n        }\r\n\r\n        i += Vector128<byte>.Count;\r\n    }\r\n\r\n    if (~0 != Sse2.MoveMask(\r\n        Sse2.CompareEqual(\r\n            Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref first, n)),\r\n            Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref second, n))))\r\n    )\r\n    {\r\n        goto NotEqual;\r\n    }\r\n\r\n    result = true;\r\nNotEqual:\r\n    return result;\r\n}\r\n```\r\nGenerates\r\n```asm\r\nG_M57206_IG01:\r\n       C5F877               vzeroupper \r\n       6690                 nop      \r\n\r\nG_M57206_IG02:\r\n       33C0                 xor      eax, eax                   ; result set to zero\r\n       4533C9               xor      r9, r9\r\n       4983C0F0             add      r8, -16\r\n       EB20                 jmp      SHORT G_M57206_IG04\r\n\r\nG_M57206_IG03:\r\n       C4A179100409         vmovupd  xmm0, xmmword ptr [rcx+r9]\r\n       C4A179100C0A         vmovupd  xmm1, xmmword ptr [rdx+r9]\r\n       C5F974C1             vpcmpeqb xmm0, xmm0, xmm1\r\n       C579D7D0             vpmovmskb r10d, xmm0\r\n       4183FAFF             cmp      r10d, -1\r\n       752B                 jne      SHORT G_M57206_IG05\r\n       4983C110             add      r9, 16\r\n\r\nG_M57206_IG04:\r\n       4D3BC1               cmp      r8, r9\r\n       77DD                 ja       SHORT G_M57206_IG03\r\n       C4A179100401         vmovupd  xmm0, xmmword ptr [rcx+r8]\r\n       C4A179100C02         vmovupd  xmm1, xmmword ptr [rdx+r8]\r\n       C5F974C1             vpcmpeqb xmm0, xmm0, xmm1\r\n       C5F9D7D0             vpmovmskb edx, xmm0                  ; result overwritten\r\n       83FAFF               cmp      edx, -1\r\n       7507                 jne      SHORT G_M57206_IG05\r\n       B801000000           mov      eax, 1                      ; result set to true\r\n\r\nG_M57206_IG05:\r\n       C3                   ret      \r\n\r\n; Total bytes of code 82, prolog size 5 for method SpanHelpers:Sse2equenceEqual(byref,byref,long):bool\r\n```\r\n\r\nThis returns the incorrect result due to `vpmovmskb edx, xmm0` which overwrites the `edx` register in use by `bool result = false`\r\n\r\n/cc @CarolEidt @fiigii @tannergooding"},{"Id":"8901436461","Type":"IssuesEvent","CreatedAt":"2019-01-17T02:23:54","Actor":"swaroop-sridhar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21584","RelatedDescription":"Closed issue \"Investigate semantics of DllImportSearchPath attribute on Non-Windows platforms\" (#21584) at dotnet/coreclr","RelatedBody":"Currently, the [DllImportSearchPath](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.dllimportsearchpath?view=netframework-4.7.2) attribute on PInvokes and assemblies mostly only has meaning on Windows. Attributes other than SearchAssemblyDirectory are ignored for non-windows platforms. Should the other enum values have semantics on other platforms? \r\n\r\n"},{"Id":"8901430799","Type":"IssuesEvent","CreatedAt":"2019-01-17T02:22:11","Actor":"swaroop-sridhar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22028","RelatedDescription":"Opened issue \"NativeLibrary API: Provide facility to pass flags on Non-Windows\" (#22028) at dotnet/coreclr","RelatedBody":"Currrently NativeLibrary.Load APIs and callbacks provide a way to handle DllImportSearchPath, which largely only has meaning on Windows. We don't have a way to specify flags to `dlopen()`.\r\n\r\nThere are a few places in CoreFX that use specific flags with `dlopen()`.\r\nhttps://github.com/dotnet/corefx/search?l=csharp&q=dlopen \r\nCurrently the only way to do this is to call `dlopen` directly.\r\n\r\nIn the long term, investigate whether to have a cross-platform enumeration of flags (across dlopen flags and DllImportSearchPath) and use them in NativeLibrary API."},{"Id":"8901360593","Type":"IssuesEvent","CreatedAt":"2019-01-17T02:01:24","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22027","RelatedDescription":"Opened issue \"[x64][r2r] superpmicollect started to fail after #21965\" (#22027) at dotnet/coreclr","RelatedBody":"It fails with\r\n```\r\n ERROR: Input redirection is not supported, exiting the process immediately.\r\nA subdirectory or file D:\\\\j\\\\workspace\\\\x64_checked_w---d4257bd6\\\\bin\\\\tests\\\\Windows_NT.x64.Checked\\\\JIT\\\\superpmi\\\\superpmicollect\\\\\\\\lock already exists.\r\n```\r\n\r\n[ci example](https://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/x64_checked_windows_nt_r2r/3112/testReport/junit/JIT_superpmi/_superpmicollect_superpmicollect_/_superpmicollect_superpmicollect_cmd/)\r\n\r\n\r\nPTAL @echesakovMSFT"},{"Id":"8901347434","Type":"IssuesEvent","CreatedAt":"2019-01-17T01:57:44","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22026","RelatedDescription":"Opened issue \"[x64[r2r] ObjectStackAllocationTests is broken after #21950\" (#22026) at dotnet/coreclr","RelatedBody":"The output shows:\r\n\r\n`FAILURE (AllocateSimpleClassAndCheckTypeNoHelper): unexpected allocation of 24 bytes`\r\n\r\nStarted to fail afer  #21950.\r\n\r\n[CI example:](https://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/x64_checked_windows_nt_r2r/3100/testReport/junit/JIT_opt/_ObjectStackAllocation_ObjectStackAllocationTests_ObjectStackAllocationTests_/_ObjectStackAllocation_ObjectStackAllocationTests_ObjectStackAllocationTests_cmd/).\r\n\r\nPTAL @erozenfeld , cc @dotnet/jit-contrib "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8900956793","Type":"IssuesEvent","CreatedAt":"2019-01-17T00:06:29","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10406","RelatedDescription":"Closed issue \"Builds of solutions frequently fail with CS2012 \"Cannot open\" file errors\" (#10406) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Clone my repro repository: https://github.com/cjablonski76/dotnetCoreBuildIssue.git\r\n\r\n1. Restart your machine (this was the only consistent way I could repro the issue).\r\n\r\n1. open command prompt, navigate to the cloned repo location\r\n\r\n1. run `dotnet build ./WebApplication1/WebApplication1.sln --framework netcoreapp2.1`\r\n    - Removing the `--framework` option seems to build without any \"Cannot open\" errors.\r\n\r\n1. build command will error with: \r\n\r\n      > CSC : error CS2012: Cannot open 'c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\obj\\Debug\\netcoreapp2.1\\ClassLibrary1.dll' for writing -- 'The process cannot access the file 'c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\obj\\Debug\\netcoreapp2.1\\ClassLibrary1.dll' because it is being used by another process.' [c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\ClassLibrary1.csproj]\r\n\r\n**NOTE:** you must restart the machine each time you wish to reproduce the error. During my testing, after the first run on a fresh restart `dotnet build --framework netcoreapp2.1` ran successfully. I'm sure there is a way to get into the bad state without restarting the machine, but this was the simplest thing I could find with my knowledge around the build process. When running on our CI servers, they tend to fail with a project like this a majority of the time if we build with the `--framework` flag.\r\n\r\n## Expected  behavior\r\nSuccessful build of the solution.\r\n\r\n## Actual behavior\r\nErrors on build with output:\r\n```Microsoft (R) Build Engine version 15.8.169+g1ccb72aefa for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 57.46 ms for c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\ClassLibrary1.csproj.\r\n  Restore completed in 259.57 ms for c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\WebApplication1\\WebApplication1.csproj.\r\n  ClassLibrary1 -> c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\bin\\Debug\\netcoreapp2.1\\ClassLibrary1.dll\r\nCSC : error CS2012: Cannot open 'c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\obj\\Debug\\netcoreapp2.1\\ClassLibrary1.dll' for writing -- 'The process cannot access the file 'c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\obj\\Debug\\netcoreapp2.1\\ClassLibrary1.dll' because it is being used by another process.' [c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\ClassLibrary1.csproj]\r\n  WebApplication1 -> c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\WebApplication1\\bin\\Debug\\netcoreapp2.1\\WebApplication1.dll\r\n\r\nBuild FAILED.\r\n\r\nCSC : error CS2012: Cannot open 'c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\obj\\Debug\\netcoreapp2.1\\ClassLibrary1.dll' for writing -- 'The process cannot access the file 'c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\obj\\Debug\\netcoreapp2.1\\ClassLibrary1.dll' because it is being used by another process.' [c:\\src\\dotnetCoreBuildIssue\\WebApplication1\\ClassLibrary1\\ClassLibrary1.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.97\r\n```\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8900936688","Type":"PullRequestEvent","CreatedAt":"2019-01-17T00:01:25","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10623","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#10623) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8900936523","Type":"PullRequestEvent","CreatedAt":"2019-01-17T00:01:23","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10622","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#10622) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8900936341","Type":"PullRequestEvent","CreatedAt":"2019-01-17T00:01:20","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10621","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.1.6xx\" (#10621) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8900758678","Type":"PullRequestEvent","CreatedAt":"2019-01-16T23:16:34","Actor":"sdmaclea","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10620","RelatedDescription":"Opened pull request \"Update FXVersion to use SemVer 2.0.0\" (#10620) at dotnet/cli","RelatedBody":"Update FXVersion to use SemVer 2.0.0\r\nExtend and fix tests\r\n\r\nFixes #10608"},{"Id":"8900509194","Type":"PullRequestEvent","CreatedAt":"2019-01-16T22:23:33","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10619","RelatedDescription":"Merged pull request \"Update 'Architecture' help documentation.\" (#10619) at dotnet/cli","RelatedBody":"Update 'Architecture' help documentation; other...\r\n"},{"Id":"8900453572","Type":"PullRequestEvent","CreatedAt":"2019-01-16T22:12:44","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10610","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#10610) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8900366352","Type":"PullRequestEvent","CreatedAt":"2019-01-16T21:56:25","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10619","RelatedDescription":"Opened pull request \"Update 'Architecture' help documentation.\" (#10619) at dotnet/cli","RelatedBody":"Update 'Architecture' help documentation; other...\r\n"},{"Id":"8899930281","Type":"IssuesEvent","CreatedAt":"2019-01-16T20:39:56","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10614","RelatedDescription":"Closed issue \"dotnet tool install should support --interactive\" (#10614) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n- Create a new console project (dotnet new console)\r\n- Add <PackAsTool>true</PackAsTool> to csproj\r\n- Pack project and publish NuGet package to (for example) Azure Artifacts\r\n- Try to install the tool locally using dotnet tool install --add-source <feed-url> --interactive\r\n\r\n## Expected  behavior\r\nIf the feed hasn't been authenticated before, the install command should prompt for credentials in order to authenticate to the feed.\r\n\r\n## Actual behavior\r\nCommand errors out stating that the --interactive flag is not supported.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.102\r\n Commit:    96ff75a873\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.102/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  2.2.102 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8900145912","Type":"PullRequestEvent","CreatedAt":"2019-01-16T21:17:04","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1047","RelatedDescription":"Merged pull request \"Bump AssemblyVersion for nestandard.dll to 2.1.0.0\" (#1047) at dotnet/standard","RelatedBody":"Fixes https://github.com/dotnet/standard/issues/929\r\n\r\nCC @ericstj @terrajobst "},{"Id":"8900145903","Type":"IssuesEvent","CreatedAt":"2019-01-16T21:17:04","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/929","RelatedDescription":"Closed issue \"Bump version of .NET Standard to 2.1\" (#929) at dotnet/standard","RelatedBody":"This should include:\r\n\r\n* TFM version\r\n* Assembly version\r\n* File informational version\r\n* File version\r\n* Package version"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8901487611","Type":"PullRequestEvent","CreatedAt":"2019-01-17T02:39:40","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/34627","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert,coreclr\" (#34627) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @benaadams"},{"Id":"8901447839","Type":"IssuesEvent","CreatedAt":"2019-01-17T02:27:19","Actor":"swaroop-sridhar","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34633","RelatedDescription":"Opened issue \"Use NativeLibrary APIs where possible\" (#34633) at dotnet/corefx","RelatedBody":"Use `System.Runtime.Interop.NativeLibray`  APIs instead of directly using native calls when possible in CoreFX libraries.\r\n\r\nThere are some calls to `dlopen` in CoreFX libraries, especially in System.Drawing, where it would be good to use the `NativeLibrary` API. However, these calls may run into the [limitation](https://github.com/dotnet/coreclr/issues/22028) that there is no way to pass additional flags to `dlopen` via the `NativeLibrary.Load`. "},{"Id":"8901261436","Type":"IssuesEvent","CreatedAt":"2019-01-17T01:31:49","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34632","RelatedDescription":"Opened issue \"Semantics of writing null string using the Utf8JsonWriter (for properties and values)\" (#34632) at dotnet/corefx","RelatedBody":"Currently, for consistency with the span overload, the Utf8JsonWriter treats a null string parameter equivalent to an empty span and writes an empty string.\r\n\r\nThis applies to both property names and values.\r\n\r\nSo, for example:\r\n```C#\r\nstring propertyName = null;\r\nstring value = null;\r\n\r\njsonUtf8.WriteStartObject();\r\njsonUtf8.WriteString(propertyName, value); // equivalent to writing propertyName.AsSpan(), value.AsSpan()\r\njsonUtf8.WriteStartArray(propertyName); // equivalent to writing propertyName.AsSpan()\r\njsonUtf8.WriteStringValue(value); // equivalent to writing value.AsSpan()\r\njsonUtf8.WriteEndArray();\r\njsonUtf8.WriteEndObject();\r\njsonUtf8.Flush();\r\n\r\n// output = {\"\":\"\",\"\":[\"\"]}\r\n// output from Json.NET = {\"\":null,\"\":[null]}\r\n```\r\n\r\n1) Should we instead change the semantics of **writing string values** and write the `null` characters instead (to match Json.NET)?\r\n2) Should we throw an exception if the **property name** being passed in is a null string or continue to write an empty property name (to match Json.NET)?\r\n\r\nUnlike strings, there is no difference between a \"null\" span and an empty span.\r\n\r\n**Note:** Json.NET treats \"null\" property name strings as empty strings, but \"null\" values as `null`.\r\n\r\ncc @JamesNK, @bartonjs, @jkotas, @GrabYourPitchforks  "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8901858191","Type":"IssuesEvent","CreatedAt":"2019-01-17T04:39:27","Actor":"dnegstad","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32554","RelatedDescription":"Opened issue \"IntelliSense errors for dependency references in newly created Service Fabric project\" (#32554) at dotnet/roslyn","RelatedBody":"Regression in 16.0.\r\n\r\n1. Launch the new project dialog\r\n2. Create a Service Fabric Application project\r\n3. Select the .NET Core Actor Service template from the New Service Fabric Service dialog\r\n4. Wait for the solution to load and dependencies to restore\r\n5. Check the Error List window and ensure the filter is set to show IntelliSense errors\r\n\r\nExpected:\r\nNo IntelliSense errors should be reported (dependencies are restored and all references are resolvable).\r\n\r\nActual:\r\nAll references to dependencies (NuGet, SDK, or Project references) in the primary service project (Actor1 by default) are flagged as IntelliSense errors.\r\n\r\nThe errors are only reported for the newly created project and don't reappear after closing and re-opening the solution or unloading and reloading the specific project the errors are associated with. A full build succeeds without any errors or warnings, but doesn't clear the IntelliSense errors."},{"Id":"8901853515","Type":"IssuesEvent","CreatedAt":"2019-01-17T04:37:49","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32553","RelatedDescription":"Opened issue \"Handle tuple conversion on tuple with suppression\" (#32553) at dotnet/roslyn","RelatedBody":"In order to segment my current work on suppressions, I'm going to split the tuple scenarios off.\r\n\r\n```C#\r\n        [Fact, WorkItem(31370, \"https://github.com/dotnet/roslyn/issues/31370\")]\r\n        public void SuppressNullableWarning_Deconstruction()\r\n        {\r\n            var source =\r\n@\"class C\r\n{\r\n    void M(C<string?> c)\r\n    {\r\n        (string d1, (C<string> d2, string d3)) = (null, (c, null));\r\n        (string e1, (C<string> e2, string e3)) = (null, (c, null))!;\r\n        (string f1, (C<string> f2, string f3)) = (null, (c, null)!);\r\n    }\r\n}\";\r\n            var comp = CreateCompilation(source, options: WithNonNullTypesTrue());\r\n            comp.VerifyDiagnostics(\r\n                );\r\n            // TODO2 verify diagnostics, fix crash\r\n            CompileAndVerify(comp);\r\n            // TODO2: verify semantic model\r\n        }\r\n\r\n        [Fact, WorkItem(31370, \"https://github.com/dotnet/roslyn/issues/31370\")]\r\n        public void SuppressNullableWarning_Tuple()\r\n        {\r\n            // TODO2 crash\r\n            var source =\r\n@\"class C<T>\r\n{\r\n    static void M(C<string?> x)\r\n    {\r\n        (string, C<string>) tuple = (null, x);\r\n        _ = tuple;\r\n        (string, C<string>) tuple2 = (null, x)!;\r\n        _ = tuple2;\r\n        (string, C<string>) tuple3 = (null!, x!);\r\n        _ = tuple3;\r\n    }\r\n}\";\r\n            var comp = CreateCompilation(source, options: WithNonNullTypesTrue());\r\n            comp.VerifyDiagnostics(\r\n                // (5,37): warning CS8619: Nullability of reference types in value of type '(string?, C<string?> x)' doesn't match target type '(string, C<string>)'.\r\n                //         (string, C<string>) tuple = (null, x);\r\n                Diagnostic(ErrorCode.WRN_NullabilityMismatchInAssignment, \"(null, x)\").WithArguments(\"(string?, C<string?> x)\", \"(string, C<string>)\").WithLocation(5, 37)\r\n                );\r\n            CompileAndVerify(comp);\r\n        }\r\n\r\n        [Fact, WorkItem(31370, \"https://github.com/dotnet/roslyn/issues/31370\")]\r\n        public void SuppressNullableWarning_TupleEquality()\r\n        {\r\n            // TODO2 unexpected diagnostic\r\n            var source =\r\n@\"class C<T>\r\n{\r\n    static void M((string, C<string>) tuple, C<string?> x)\r\n    {\r\n        _ = tuple == (null, x);\r\n        _ = tuple == (null, x)!;\r\n        _ = (1, tuple) == (1, (null, x)!);\r\n    }\r\n}\";\r\n            var comp = CreateCompilation(source, options: WithNonNullTypesTrue());\r\n            comp.VerifyDiagnostics(\r\n                // (6,13): error CS0019: Operator '==' cannot be applied to operands of type '(string, C<string>)' and '(<null>, C<string?>)'\r\n                //         _ = tuple == (null, x)!;\r\n                Diagnostic(ErrorCode.ERR_BadBinaryOps, \"tuple == (null, x)!\").WithArguments(\"==\", \"(string, C<string>)\", \"(<null>, C<string?>)\").WithLocation(6, 13)\r\n                );\r\n            CompileAndVerify(comp);\r\n            // TODO2: verify semantic model\r\n        }\r\n```"},{"Id":"8901561002","Type":"PullRequestEvent","CreatedAt":"2019-01-17T03:01:11","Actor":"lorcanmooney","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/13430","RelatedDescription":"Closed pull request \"Completion fixes\" (#13430) at dotnet/roslyn","RelatedBody":"- Fixes #4585\r\n- ~Fixes #13161~ Cherry-picked and merged by @rchande\r\n- Fixes a regression in VB where commiting a generic symbol with `(` wouldn't truncate the insertion text\r\n- Fixes a handful of issues around escaping identifiers\r\n  - In C#, `await` identifiers weren't being escaped in async methods\r\n  - In VB, `Await` identifiers were always escaped, even when preceded by `.`\r\n  - ~~Contextual keyword identifiers in symbol display strings weren't being escaped~~ Opened #13610 instead\r\n- Fixes #17269 - use `ImmutableArray.Empty` instead of `Nothing`.\r\n"},{"Id":"8901557207","Type":"PullRequestEvent","CreatedAt":"2019-01-17T03:00:08","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32542","RelatedDescription":"Merged pull request \"Merge dev16.0-preview2-vs-deps to master-vs-deps\" (#32542) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0-preview2-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8901536108","Type":"PullRequestEvent","CreatedAt":"2019-01-17T02:54:35","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/32552","RelatedDescription":"Opened pull request \"workaround for concurrent event causing VS to crash\" (#32552) at dotnet/roslyn","RelatedBody":"basically, if RegisteryText happens and then UnregisterText happens in perfect timing, RegisterText got slightly delayed since it is async event, and UnregisterText happens at the same time since it is a synchronous event, and they happens in 2 different threads, boom, we get NRE.\r\n\r\nthis is a workaround for preview 2."},{"Id":"8901470727","Type":"IssuesEvent","CreatedAt":"2019-01-17T02:34:19","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/32551","RelatedDescription":"Opened issue \"make sure workspace related events are serialized\" (#32551) at dotnet/roslyn","RelatedBody":"currently, we have async event queue per workspace for workspace events. and we have WorkspaceRegistration.WorkspaceChanged event.\r\n\r\nour workspace events within the same workspace, we make sure all events are serialized. we guarantee the ordering of all events as they happens.\r\n\r\nit gets interesting when a file is opened in the editor, we have this dance where the file is first added to misc workspace and then moved to another workspace such as VSWorkspace. same goes for when the file is closed.\r\n\r\nit is interesting since a file is now interacting with 2 workspaces. currently, we don't have a way to preserve ordering of events between 2 different workspaces. when a file is moved between 2 workspaces, one might see the file added to 1 workspace before it is removed from the other workspace even though the actual event happened in reverse order since events are happening in 2 different async queues.\r\n\r\nfurthermore, WorkspaceRegistration.WorkspaceChanged events use the async queue of a workspace to raise \"RegisterText\", but use the synchronous event for \"UnregisterText\". also, since async queue raise event on UI thread but synchronous event happen on the thread it is called, we have a chance where the event raised concurrently.\r\n\r\nwe don't know what is the right fix for it yet. but opening the issue to make sure we figure out what to do after preview."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8900249728","Type":"PullRequestEvent","CreatedAt":"2019-01-16T21:35:24","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6836","RelatedDescription":"Opened pull request \"Enable detection of HW intrinsics\" (#6836) at dotnet/corert","RelatedBody":"I took the liberty of marking the types containing the hardware intrinsics as `[Intrinsic]` to avoid doing a name check on everything in the system module. It feels like we should take advantage of this attribute in CoreCLR too.\r\n\r\nThis doesn't actually enable the support because RyuJIT unconditionally disables HW intrinsics for prejit (both CoreRT and CPAOT are considered prejit). We might want to do something about this on the RyuJIT side to address that (for CPAOT, to be able to pregenerate best code possible ahead of time, assuming a fixed ISA; and for CoreRT without JIT, where the concerns about AVX-SSE penalty don't apply). See conversation in dotnet/coreclr#21603"},{"Id":"8899497597","Type":"IssuesEvent","CreatedAt":"2019-01-16T19:25:18","Actor":"sebastianulm","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6835","RelatedDescription":"Opened issue \"Undocumented dependency in libObjWriter.so when building\" (#6835) at dotnet/corert","RelatedBody":"Hello, \r\n\r\nI know this https://github.com/dotnet/corert/issues/5224 is closed, but google still send me there and this bug seems to not provide a solution (anymore). If the object writer library is present in the file system, but still fails to load (and wrongly claims the file does not exist) you need to check for missing shared library dependencies. \r\n\r\nYou do that using ldd which should give you something like this: \r\n> ldd /home/<username>/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27316-02/tools/libobjwriter.so\r\n\tlinux-vdso.so.1 (0x00007ffe62929000)\r\n\tlibrt.so.1 => /usr/lib/librt.so.1 (0x00007f3736b81000)\r\n\tlibdl.so.2 => /usr/lib/libdl.so.2 (0x00007f3736b7c000)\r\n\tlibtinfo.so.5 => not found\r\n\tlibpthread.so.0 => /usr/lib/libpthread.so.0 (0x00007f3736b5b000)\r\n\tlibz.so.1 => /usr/lib/libz.so.1 (0x00007f3736944000)\r\n\tlibm.so.6 => /usr/lib/libm.so.6 (0x00007f37367bf000)\r\n\tlibstdc++.so.6 => /usr/lib/libstdc++.so.6 (0x00007f373662e000)\r\n\tlibgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x00007f3736614000)\r\n\tlibc.so.6 => /usr/lib/libc.so.6 (0x00007f3736450000)\r\n\t/usr/lib64/ld-linux-x86-64.so.2 (0x00007f3737d95000)\r\nThe \"=> not found\" indicates i'm missing a dependency. In this case its libtinfo, which many distributions include in ncurses. The so.5 indicates, that it is part of ncurses 5, which many distros have dropped for ncurses6. \r\nIn this respective case, op should have installed ncurses5-compat-libs-6, which contains the missing library.\r\nAs far as I understand, building objectWriter is not actually something done by the build process, but I have not checked. Maybe checking for depencies in buildscripts/ or in the cmake lists is a good idea?\r\n\r\nAt any rate, https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md should be updated to include ncurses5 as a dependency, as well as a little bit of help dealing with undocumented dependencies. \r\nDo you guys take pull requests for Documentation updates? "},{"Id":"8899283817","Type":"PullRequestEvent","CreatedAt":"2019-01-16T18:48:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6758","RelatedDescription":"Merged pull request \"[ILVerify]Include metadata token for type verifier\" (#6758) at dotnet/corert","RelatedBody":"contributes to https://github.com/dotnet/corert/issues/6694\r\nwithout `-t`\r\n```\r\nError: Class implements interface but not method, Class: '[InterfaceImplementation]MissingMethod_InvalidType_InterfaceMethodNotImplemented' Interface: '[InterfaceDefinition]Interface' Method: [InterfaceDefinition]Interface.M1().\r\n```\r\nwith `-t`\r\n```\r\nError: Class implements interface but not method, Class: '[InterfaceImplementation]MissingMethod_InvalidType_InterfaceMethodNotImplemented(0x33554436)' Interface: '[InterfaceDefinition]Interface(0x150994948)' Method: '[InterfaceDefinition]Interface.M1()(0x100663297)'.\r\n```\r\n\r\n/cc @jkotas "},{"Id":"8899201118","Type":"PullRequestEvent","CreatedAt":"2019-01-16T18:33:53","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6834","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6834) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8899157331","Type":"PullRequestEvent","CreatedAt":"2019-01-16T18:26:16","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6832","RelatedDescription":"Merged pull request \"Move AsyncMethodBuilder to shared.\" (#6832) at dotnet/corert","RelatedBody":"Related to https://github.com/dotnet/coreclr/issues/21932.\r\n\r\nUses AsyncMethodBuilder from CoreCLR, <strike>currently missing PROJECTN support</strike>."},{"Id":"8898926434","Type":"PullRequestEvent","CreatedAt":"2019-01-16T17:46:19","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6833","RelatedDescription":"Merged pull request \"Compute layout for vector intrinsic types\" (#6833) at dotnet/corert","RelatedBody":"Vector64/128/256 have special alignment requirements."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8901629965","Type":"IssuesEvent","CreatedAt":"2019-01-17T03:22:56","Actor":"timmydo","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2837","RelatedDescription":"Opened issue \"Self-contained linux app missing libhostfxr.so\" (#2837) at dotnet/sdk","RelatedBody":"Using https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/dotnet-sdk-latest-linux-x64.tar.gz \r\n\r\nRUN dotnet restore --runtime linux-x64 --configfile /app/Nuget.Config\r\nRUN dotnet publish -c Release -f netcoreapp3.0 --self-contained --runtime linux-x64 --no-restore -o /out\r\n\r\ncsproj is roughly\r\n```\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp3.0</TargetFrameworks>\r\n    <OutputType>Exe</OutputType>\r\n    <RuntimeIdentifiers>win10-x64;linux-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n    <ItemGroup>\r\n      <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    </ItemGroup>\r\n```\r\n\r\n```\r\n# ./Watchdogs\r\nA fatal error occurred, the required library libhostfxr.so could not be found.\r\nIf this is a self-contained application, that library should exist in [/app/Watchdogs/].\r\nIf this is a framework-dependent application, install the runtime in the default location [/usr/share/dotnet] or use the DOTNET_ROOT environment variable to specify the runtime location.\r\n\r\n# ldd ./Watchdogs\r\n        linux-vdso.so.1 (0x00007fff783f2000)\r\n        libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007ff3e590a000)\r\n        libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007ff3e56ed000)\r\n        libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007ff3e536b000)\r\n        libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007ff3e5067000)\r\n        libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007ff3e4e50000)\r\n        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007ff3e4ab1000)\r\n        /lib64/ld-linux-x86-64.so.2 (0x00007ff3e5b0e000)\r\n```\r\n\r\nI think this is a recent development. The previous sdk nightly worked fine. There are no *.so files in the output directory\r\n"},{"Id":"8901457320","Type":"PullRequestEvent","CreatedAt":"2019-01-17T02:30:16","Actor":"dotnet-automerge-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2836","RelatedDescription":"Merged pull request \"Merge release/2.2.2xx to master\" (#2836) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8900938317","Type":"PullRequestEvent","CreatedAt":"2019-01-17T00:01:49","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2836","RelatedDescription":"Opened pull request \"Merge release/2.2.2xx to master\" (#2836) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8900938192","Type":"PullRequestEvent","CreatedAt":"2019-01-17T00:01:47","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2835","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#2835) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8900937998","Type":"PullRequestEvent","CreatedAt":"2019-01-17T00:01:45","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2834","RelatedDescription":"Opened pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#2834) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8900937683","Type":"PullRequestEvent","CreatedAt":"2019-01-17T00:01:40","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2833","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.1.6xx\" (#2833) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-01-15T05:16:12","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update links","State":"open","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Open PR \"Update links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"open","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Open issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"400108257","IsPullRequest":true,"CreatedAt":"2019-01-17T04:43:31","Actor":"filipnavara","Number":"22030","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"open","Body":"#22013 + build fixes","Url":"https://github.com/dotnet/coreclr/pull/22030","RelatedDescription":"Open PR \"Mirror changes from dotnet/corert\" (#22030)"},{"Id":"400097021","IsPullRequest":false,"CreatedAt":"2019-01-17T04:03:18","Actor":"benaadams","Number":"22029","RawContent":null,"Title":"Intrinsics can overwrite register use","State":"closed","Body":"```csharp\r\nprivate unsafe static bool Sse2equenceEqual(ref byte first, ref byte second, IntPtr n)\r\n{\r\n    bool result = false;\r\n    IntPtr i = (IntPtr)0; // Use IntPtr for arithmetic to avoid unnecessary 64->32->64 truncations\r\n\r\n    n -= Vector128<byte>.Count;\r\n    while ((byte*)n > (byte*)i)\r\n    {\r\n        if (0xFFFF != Sse2.MoveMask(\r\n                Sse2.CompareEqual(\r\n                    Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref first, i)),\r\n                    Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref second, i))))\r\n            )\r\n        {\r\n            goto NotEqual;\r\n        }\r\n\r\n        i += Vector128<byte>.Count;\r\n    }\r\n\r\n    if (0xFFFF != Sse2.MoveMask(\r\n        Sse2.CompareEqual(\r\n            Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref first, n)),\r\n            Unsafe.ReadUnaligned<Vector128<byte>>(ref Unsafe.AddByteOffset(ref second, n))))\r\n    )\r\n    {\r\n        goto NotEqual;\r\n    }\r\n\r\n    result = true;\r\nNotEqual:\r\n    return result;\r\n}\r\n```\r\nGenerates\r\n```asm\r\n\r\nG_M57206_IG01:\r\n       C5F877               vzeroupper \r\n       6690                 nop      \r\n\r\nG_M57206_IG02:\r\n       33C0                 xor      eax, eax                   ; result set to zero\r\n       4533C9               xor      r9, r9\r\n       4983C0F0             add      r8, -16\r\n       EB23                 jmp      SHORT G_M57206_IG04\r\n\r\nG_M57206_IG03:\r\n       C4A179100409         vmovupd  xmm0, xmmword ptr [rcx+r9]\r\n       C4A179100C0A         vmovupd  xmm1, xmmword ptr [rdx+r9]\r\n       C5F974C1             vpcmpeqb xmm0, xmm0, xmm1\r\n       C579D7D0             vpmovmskb r10d, xmm0\r\n       4181FAFFFF0000       cmp      r10d, 0xFFFF\r\n       752E                 jne      SHORT G_M57206_IG05\r\n       4983C110             add      r9, 16\r\n\r\nG_M57206_IG04:\r\n       4D3BC1               cmp      r8, r9\r\n       77DA                 ja       SHORT G_M57206_IG03\r\n       C4A179100401         vmovupd  xmm0, xmmword ptr [rcx+r8]\r\n       C4A179100C02         vmovupd  xmm1, xmmword ptr [rdx+r8]\r\n       C5F974C1             vpcmpeqb xmm0, xmm0, xmm1\r\n       C5F9D7D0             vpmovmskb edx, xmm0                  ; result overwritten\r\n       81FAFFFF0000         cmp      edx, 0xFFFF\r\n       7507                 jne      SHORT G_M57206_IG05\r\n       B801000000           mov      eax, 1                      ; result set to true\r\n\r\nG_M57206_IG05:\r\n       C3                   ret      \r\n\r\n; Total bytes of code 88, prolog size 5 for method SpanHelpers:Sse2equenceEqual(byref,byref,long):bool\r\n```\r\n\r\nThis returns the incorrect result due to `vpmovmskb edx, xmm0` which overwrites the `edx` register in use by `bool result = false`\r\n\r\n/cc @CarolEidt @fiigii @tannergooding","Url":"https://github.com/dotnet/coreclr/issues/22029","RelatedDescription":"Closed issue \"Intrinsics can overwrite register use\" (#22029)"},{"Id":"400082649","IsPullRequest":false,"CreatedAt":"2019-01-17T02:22:10","Actor":"swaroop-sridhar","Number":"22028","RawContent":null,"Title":"NativeLibrary API: Provide facility to pass flags on Non-Windows","State":"open","Body":"Currrently NativeLibrary.Load APIs and callbacks provide a way to handle DllImportSearchPath, which largely only has meaning on Windows. We don't have a way to specify flags to `dlopen()`.\r\n\r\nThere are a few places in CoreFX that use specific flags with `dlopen()`.\r\nhttps://github.com/dotnet/corefx/search?l=csharp&q=dlopen \r\nCurrently the only way to do this is to call `dlopen` directly.\r\n\r\nIn the long term, investigate whether to have a cross-platform enumeration of flags (across dlopen flags and DllImportSearchPath) and use them in NativeLibrary API.","Url":"https://github.com/dotnet/coreclr/issues/22028","RelatedDescription":"Open issue \"NativeLibrary API: Provide facility to pass flags on Non-Windows\" (#22028)"},{"Id":"400078486","IsPullRequest":false,"CreatedAt":"2019-01-17T02:01:23","Actor":"sandreenko","Number":"22027","RawContent":null,"Title":"[x64][r2r] superpmicollect started to fail after #21965","State":"open","Body":"It fails with\r\n```\r\n ERROR: Input redirection is not supported, exiting the process immediately.\r\nA subdirectory or file D:\\\\j\\\\workspace\\\\x64_checked_w---d4257bd6\\\\bin\\\\tests\\\\Windows_NT.x64.Checked\\\\JIT\\\\superpmi\\\\superpmicollect\\\\\\\\lock already exists.\r\n```\r\n\r\n[ci example](https://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/x64_checked_windows_nt_r2r/3112/testReport/junit/JIT_superpmi/_superpmicollect_superpmicollect_/_superpmicollect_superpmicollect_cmd/)\r\n\r\n\r\nPTAL @echesakovMSFT","Url":"https://github.com/dotnet/coreclr/issues/22027","RelatedDescription":"Open issue \"[x64][r2r] superpmicollect started to fail after #21965\" (#22027)"},{"Id":"400077690","IsPullRequest":false,"CreatedAt":"2019-01-17T01:57:44","Actor":"sandreenko","Number":"22026","RawContent":null,"Title":"[x64[r2r] ObjectStackAllocationTests is broken after #21950","State":"open","Body":"The output shows:\r\n\r\n`FAILURE (AllocateSimpleClassAndCheckTypeNoHelper): unexpected allocation of 24 bytes`\r\n\r\nStarted to fail afer  #21950.\r\n\r\n[CI example:](https://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/x64_checked_windows_nt_r2r/3100/testReport/junit/JIT_opt/_ObjectStackAllocation_ObjectStackAllocationTests_ObjectStackAllocationTests_/_ObjectStackAllocation_ObjectStackAllocationTests_ObjectStackAllocationTests_cmd/).\r\n\r\nPTAL @erozenfeld , cc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/issues/22026","RelatedDescription":"Open issue \"[x64[r2r] ObjectStackAllocationTests is broken after #21950\" (#22026)"},{"Id":"400072413","IsPullRequest":true,"CreatedAt":"2019-01-17T01:31:08","Actor":"BruceForstall","Number":"22025","RawContent":null,"Title":"WIP Force using new frames with GS/localloc changes","State":"open","Body":"Only change from https://github.com/dotnet/coreclr/pull/22023 is forcing using new frame types.\r\n","Url":"https://github.com/dotnet/coreclr/pull/22025","RelatedDescription":"Open PR \"WIP Force using new frames with GS/localloc changes\" (#22025)"},{"Id":"400072273","IsPullRequest":false,"CreatedAt":"2019-01-17T01:30:24","Actor":"VincentBu","Number":"22024","RawContent":null,"Title":"[arm] Test failed: System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(noProviderName: False)","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_corefx_baseline_tst/50/\r\n\r\n**Failed  test:**\r\nSystem.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(noProviderName: False)\r\n\r\n**Log:**\r\n```\r\nSystem.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(noProviderName: False) [FAIL]\r\n      System.NullReferenceException : Object reference not set to an instance of an object.\r\n      Stack Trace:\r\n        D:\\j\\workspace\\arm_cross_che---99792267\\_\\fx\\src\\System.Diagnostics.EventLog\\tests\\System\\Diagnostics\\Reader\\ProviderMetadataTests.cs(26,0): at System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(Boolean noProviderName)\r\n  Finished:    System.Diagnostics.EventLog.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.EventLog.Tests  Total: 142, Errors: 0, Failed: 1, Skipped: 1, Time: 70.836s\r\n----- end  6:56:08.37 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22024","RelatedDescription":"Open issue \"[arm] Test failed: System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(noProviderName: False)\" (#22024)"},{"Id":"400071088","IsPullRequest":true,"CreatedAt":"2019-01-17T01:24:41","Actor":"BruceForstall","Number":"22023","RawContent":null,"Title":"WIP Fix ARM64 GS with localloc","State":"open","Body":"Currently, all frame types place saved FP/LR at low addresses on the\r\nframe, below the GS cookie. If a function has localloc, the dynamically\r\nallocate and unsafe buffer will be lower than the saved FP/LR and\r\nnot the GS cookie won't properly protect the saved FP/LR.\r\n\r\nThis change introduces new frame types, used only for functions needing\r\na GS cookie and using localloc, saving FP/LR along with the rest of\r\nthe callee-saved registers at the top (highest addresses) of the frame,\r\nabove the GS cookie.","Url":"https://github.com/dotnet/coreclr/pull/22023","RelatedDescription":"Open PR \"WIP Fix ARM64 GS with localloc\" (#22023)"},{"Id":"400040132","IsPullRequest":true,"CreatedAt":"2019-01-16T23:14:24","Actor":"fiigii","Number":"22022","RawContent":null,"Title":"Re-enable Avx.PermuteVar tests","State":"open","Body":"Close https://github.com/dotnet/coreclr/issues/19624\r\n\r\n@CarolEidt @tannergooding ","Url":"https://github.com/dotnet/coreclr/pull/22022","RelatedDescription":"Open PR \"Re-enable Avx.PermuteVar tests\" (#22022)"},{"Id":"400034684","IsPullRequest":false,"CreatedAt":"2019-01-16T22:55:38","Actor":"AlekseyTs","Number":"22021","RawContent":null,"Title":"A System.TypeLoadException is thrown when Default Interface Implementation is used across assembly boundary","State":"open","Body":"Compile the following code into a DLL\r\n```\r\npublic interface I2\r\n{\r\n    void M1(); \r\n}\r\n\r\npublic interface I4\r\n{\r\n    void M1(); \r\n}\r\n\r\npublic interface I1 : I2, I4\r\n{\r\n    void I2.M1() \r\n    {\r\n        System.Console.WriteLine(\"I2.M1\");\r\n    }\r\n    void I4.M1() \r\n    {\r\n        System.Console.WriteLine(\"I4.M1\");\r\n    }\r\n}\r\n```\r\n\r\nIL will look like this:\r\n```\r\n// Metadata version: v4.0.30319\r\n.assembly extern System.Runtime\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:2:1:0\r\n}\r\n.assembly extern System.Console\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:1:1:0\r\n}\r\n.assembly debug2\r\n{\r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) \r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx\r\n                                                                                                                   63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.\r\n\r\n  // --- The following custom attribute is added automatically, do not uncomment -------\r\n  //  .custom instance void [System.Runtime]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [System.Runtime]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 07 01 00 00 00 00 ) \r\n\r\n  .hash algorithm 0x00008004\r\n  .ver 0:0:0:0\r\n}\r\n.module debug2.dll\r\n// MVID: {8067C6E0-F71C-4D16-A482-7E13F54D04B8}\r\n.imagebase 0x10000000\r\n.file alignment 0x00000200\r\n.stackreserve 0x00100000\r\n.subsystem 0x0003       // WINDOWS_CUI\r\n.corflags 0x00000001    //  ILONLY\r\n// Image base: 0x024A0000\r\n\r\n\r\n// =============== CLASS MEMBERS DECLARATION ===================\r\n\r\n.class interface public abstract auto ansi I2\r\n{\r\n  .method public hidebysig newslot abstract virtual \r\n          instance void  M1() cil managed\r\n  {\r\n  } // end of method I2::M1\r\n\r\n} // end of class I2\r\n\r\n.class interface public abstract auto ansi I4\r\n{\r\n  .method public hidebysig newslot abstract virtual \r\n          instance void  M1() cil managed\r\n  {\r\n  } // end of method I4::M1\r\n\r\n} // end of class I4\r\n\r\n.class interface public abstract auto ansi I1\r\n       implements I2,\r\n                  I4\r\n{\r\n  .method private hidebysig virtual final \r\n          instance void  I2.M1() cil managed\r\n  {\r\n    .override I2::M1\r\n    // Code size       13 (0xd)\r\n    .maxstack  8\r\n    IL_0000:  nop\r\n    IL_0001:  ldstr      \"I2.M1\"\r\n    IL_0006:  call       void [System.Console]System.Console::WriteLine(string)\r\n    IL_000b:  nop\r\n    IL_000c:  ret\r\n  } // end of method I1::I2.M1\r\n\r\n  .method private hidebysig virtual final \r\n          instance void  I4.M1() cil managed\r\n  {\r\n    .override I4::M1\r\n    // Code size       13 (0xd)\r\n    .maxstack  8\r\n    IL_0000:  nop\r\n    IL_0001:  ldstr      \"I4.M1\"\r\n    IL_0006:  call       void [System.Console]System.Console::WriteLine(string)\r\n    IL_000b:  nop\r\n    IL_000c:  ret\r\n  } // end of method I1::I4.M1\r\n\r\n} // end of class I1\r\n```\r\n\r\nCompile the following code into an EXE, referencing the library\r\n```\r\nclass Test1 : I1\r\n{\r\n    static void Main()\r\n    {\r\n        I2 i2 = new Test1();\r\n        i2.M1();\r\n        I4 i4 = new Test1();\r\n        i4.M1();\r\n    }\r\n}\r\n```\r\n\r\nIL will look like this:\r\n```\r\n// Metadata version: v4.0.30319\r\n.assembly extern System.Runtime\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:2:1:0\r\n}\r\n.assembly extern debug2\r\n{\r\n  .ver 0:0:0:0\r\n}\r\n.assembly debug1\r\n{\r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) \r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx\r\n                                                                                                                   63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.\r\n\r\n  // --- The following custom attribute is added automatically, do not uncomment -------\r\n  //  .custom instance void [System.Runtime]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [System.Runtime]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 07 01 00 00 00 00 ) \r\n\r\n  .hash algorithm 0x00008004\r\n  .ver 0:0:0:0\r\n}\r\n.module debug1.exe\r\n// MVID: {497E800B-E256-43A5-9939-9CEC824B8913}\r\n.imagebase 0x00400000\r\n.file alignment 0x00000200\r\n.stackreserve 0x00100000\r\n.subsystem 0x0003       // WINDOWS_CUI\r\n.corflags 0x00000001    //  ILONLY\r\n// Image base: 0x01410000\r\n\r\n\r\n// =============== CLASS MEMBERS DECLARATION ===================\r\n\r\n.class private auto ansi beforefieldinit Test1\r\n       extends [System.Runtime]System.Object\r\n       implements [debug2]I1,\r\n                  [debug2]I2,\r\n                  [debug2]I4\r\n{\r\n  .method private hidebysig static void  Main() cil managed\r\n  {\r\n    .entrypoint\r\n    // Code size       28 (0x1c)\r\n    .maxstack  1\r\n    .locals init (class [debug2]I2 V_0,\r\n             class [debug2]I4 V_1)\r\n    IL_0000:  nop\r\n    IL_0001:  newobj     instance void Test1::.ctor()\r\n    IL_0006:  stloc.0\r\n    IL_0007:  ldloc.0\r\n    IL_0008:  callvirt   instance void [debug2]I2::M1()\r\n    IL_000d:  nop\r\n    IL_000e:  newobj     instance void Test1::.ctor()\r\n    IL_0013:  stloc.1\r\n    IL_0014:  ldloc.1\r\n    IL_0015:  callvirt   instance void [debug2]I4::M1()\r\n    IL_001a:  nop\r\n    IL_001b:  ret\r\n  } // end of method Test1::Main\r\n\r\n  .method public hidebysig specialname rtspecialname \r\n          instance void  .ctor() cil managed\r\n  {\r\n    // Code size       8 (0x8)\r\n    .maxstack  8\r\n    IL_0000:  ldarg.0\r\n    IL_0001:  call       instance void [System.Runtime]System.Object::.ctor()\r\n    IL_0006:  nop\r\n    IL_0007:  ret\r\n  } // end of method Test1::.ctor\r\n\r\n} // end of class Test1\r\n```\r\n\r\nRun the executable.\r\n\r\nObserved:\r\n```\r\nUnhandled Exception: System.TypeLoadException: Could not load type 'Test1' from assembly 'debug1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n```\r\n\r\nExpected the same output as when all types are compiled into the same executable:\r\n```\r\nI2.M1\r\nI4.M1\r\n``` \r\n\r\nHere is the IL when all types are in the same assembly:\r\n```\r\n// Metadata version: v4.0.30319\r\n.assembly extern System.Runtime\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:2:1:0\r\n}\r\n.assembly extern System.Console\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:1:1:0\r\n}\r\n.assembly debug1\r\n{\r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) \r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx\r\n                                                                                                                   63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.\r\n\r\n  // --- The following custom attribute is added automatically, do not uncomment -------\r\n  //  .custom instance void [System.Runtime]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [System.Runtime]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 07 01 00 00 00 00 ) \r\n\r\n  .hash algorithm 0x00008004\r\n  .ver 0:0:0:0\r\n}\r\n.module debug1.exe\r\n// MVID: {389ABFA0-32AF-425E-9FF4-1C7F3319830D}\r\n.imagebase 0x00400000\r\n.file alignment 0x00000200\r\n.stackreserve 0x00100000\r\n.subsystem 0x0003       // WINDOWS_CUI\r\n.corflags 0x00000001    //  ILONLY\r\n// Image base: 0x01380000\r\n\r\n\r\n// =============== CLASS MEMBERS DECLARATION ===================\r\n\r\n.class private auto ansi beforefieldinit Test1\r\n       extends [System.Runtime]System.Object\r\n       implements I1,\r\n                  I2,\r\n                  I4\r\n{\r\n  .method private hidebysig static void  Main() cil managed\r\n  {\r\n    .entrypoint\r\n    // Code size       28 (0x1c)\r\n    .maxstack  1\r\n    .locals init (class I2 V_0,\r\n             class I4 V_1)\r\n    IL_0000:  nop\r\n    IL_0001:  newobj     instance void Test1::.ctor()\r\n    IL_0006:  stloc.0\r\n    IL_0007:  ldloc.0\r\n    IL_0008:  callvirt   instance void I2::M1()\r\n    IL_000d:  nop\r\n    IL_000e:  newobj     instance void Test1::.ctor()\r\n    IL_0013:  stloc.1\r\n    IL_0014:  ldloc.1\r\n    IL_0015:  callvirt   instance void I4::M1()\r\n    IL_001a:  nop\r\n    IL_001b:  ret\r\n  } // end of method Test1::Main\r\n\r\n  .method public hidebysig specialname rtspecialname \r\n          instance void  .ctor() cil managed\r\n  {\r\n    // Code size       8 (0x8)\r\n    .maxstack  8\r\n    IL_0000:  ldarg.0\r\n    IL_0001:  call       instance void [System.Runtime]System.Object::.ctor()\r\n    IL_0006:  nop\r\n    IL_0007:  ret\r\n  } // end of method Test1::.ctor\r\n\r\n} // end of class Test1\r\n\r\n.class interface public abstract auto ansi I2\r\n{\r\n  .method public hidebysig newslot abstract virtual \r\n          instance void  M1() cil managed\r\n  {\r\n  } // end of method I2::M1\r\n\r\n} // end of class I2\r\n\r\n.class interface public abstract auto ansi I4\r\n{\r\n  .method public hidebysig newslot abstract virtual \r\n          instance void  M1() cil managed\r\n  {\r\n  } // end of method I4::M1\r\n\r\n} // end of class I4\r\n\r\n.class interface public abstract auto ansi I1\r\n       implements I2,\r\n                  I4\r\n{\r\n  .method private hidebysig virtual final \r\n          instance void  I2.M1() cil managed\r\n  {\r\n    .override I2::M1\r\n    // Code size       13 (0xd)\r\n    .maxstack  8\r\n    IL_0000:  nop\r\n    IL_0001:  ldstr      \"I2.M1\"\r\n    IL_0006:  call       void [System.Console]System.Console::WriteLine(string)\r\n    IL_000b:  nop\r\n    IL_000c:  ret\r\n  } // end of method I1::I2.M1\r\n\r\n  .method private hidebysig virtual final \r\n          instance void  I4.M1() cil managed\r\n  {\r\n    .override I4::M1\r\n    // Code size       13 (0xd)\r\n    .maxstack  8\r\n    IL_0000:  nop\r\n    IL_0001:  ldstr      \"I4.M1\"\r\n    IL_0006:  call       void [System.Console]System.Console::WriteLine(string)\r\n    IL_000b:  nop\r\n    IL_000c:  ret\r\n  } // end of method I1::I4.M1\r\n\r\n} // end of class I1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22021","RelatedDescription":"Open issue \"A System.TypeLoadException is thrown when Default Interface Implementation is used across assembly boundary\" (#22021)"},{"Id":"399613461","IsPullRequest":false,"CreatedAt":"2019-01-16T21:56:18","Actor":"VincentBu","Number":"22000","RawContent":null,"Title":"[arm64] Test failed: JIT_HardwareIntrinsics._X86_Sse2_LoadAlignedVector128_r_LoadAlignedVector128_r_._X86_Sse2_LoadAlignedVector128_r_LoadAlignedVector128_r_sh","State":"closed","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_r2r_jitstress1_tst/21/\r\n\r\n**Failed  tests:**\r\nJIT_HardwareIntrinsics._X86_Sse2_LoadAlignedVector128_r_LoadAlignedVector128_r_._X86_Sse2_LoadAlignedVector128_r_LoadAlignedVector128_r_sh\r\nGC_Scenarios._GCSimulator_GCSimulator_83_GCSimulator_83_._GCSimulator_GCSimulator_83_GCSimulator_83_sh\r\n\r\n**Log:**\r\n```\r\nJIT_HardwareIntrinsics._X86_Sse2_LoadAlignedVector128_r_LoadAlignedVector128_r_._X86_Sse2_LoadAlignedVector128_r_LoadAlignedVector128_r_sh [FAIL]\r\n        /n/nReturn code:      137/nRaw output file:      /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstress1_tst/bin/tests/Linux.arm64.Checked/JIT/HardwareIntrinsics/Reports/JIT.HardwareIntrinsics/X86/Sse2/LoadAlignedVector128_r/LoadAlignedVector128_r.output.txt/nRaw output:/nTest Harness Exitcode is : 137\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22000","RelatedDescription":"Closed issue \"[arm64] Test failed: JIT_HardwareIntrinsics._X86_Sse2_LoadAlignedVector128_r_LoadAlignedVector128_r_._X86_Sse2_LoadAlignedVector128_r_LoadAlignedVector128_r_sh\" (#22000)"},{"Id":"399616607","IsPullRequest":false,"CreatedAt":"2019-01-16T21:56:08","Actor":"VincentBu","Number":"22001","RawContent":null,"Title":"[arm64] Test failed: JIT_Regression._JitBlue_DevDiv_495792_DevDiv_495792_DevDiv_495792_._JitBlue_DevDiv_495792_DevDiv_495792_DevDiv_495792_sh","State":"closed","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/17/\r\n\r\n**Failed tests:**\r\nJIT_Regression._JitBlue_DevDiv_495792_DevDiv_495792_DevDiv_495792_._JitBlue_DevDiv_495792_DevDiv_495792_DevDiv_495792_sh\r\n\r\n**Log:**\r\n```\r\n/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/JIT/Regression/Reports/JIT.Regression/JitBlue/DevDiv_495792/DevDiv_495792/DevDiv_495792.output.txt/nRaw output:/nTest Harness Exitcode is : 137\r\n        /nTo run the test:/n> set CORE_ROOT=/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/n> /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/JIT/Regression/JitBlue/DevDiv_495792/DevDiv_495792/DevDiv_495792.sh/n\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04/bin/tests/Linux.arm64.Checked/TestWrappers/JIT.Regression/JIT.Regression.XUnitWrapper.cs(71229,0): at JIT_Regression._JitBlue_DevDiv_495792_DevDiv_495792_DevDiv_495792_._JitBlue_DevDiv_495792_DevDiv_495792_DevDiv_495792_sh()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22001","RelatedDescription":"Closed issue \"[arm64] Test failed: JIT_Regression._JitBlue_DevDiv_495792_DevDiv_495792_DevDiv_495792_._JitBlue_DevDiv_495792_DevDiv_495792_DevDiv_495792_sh\" (#22001)"},{"Id":"399993406","IsPullRequest":false,"CreatedAt":"2019-01-16T20:56:32","Actor":"echesakovMSFT","Number":"22020","RawContent":null,"Title":"readytorun\\r2rdump\\R2RDumpTest is not designed for running outside of coreclr in-place-build","State":"open","Body":"This test fails in Azure DevOps since it relies on tests-source folder as well as Product folder to be available during the test running time. For example, \r\n\r\nhttps://github.com/dotnet/coreclr/blob/6ecca8de2d3761d490181942826de000f0eadcc7/tests/src/readytorun/r2rdump/R2RDumpTest.csproj#L13\r\n\r\nhttps://github.com/dotnet/coreclr/blob/6ecca8de2d3761d490181942826de000f0eadcc7/tests/src/readytorun/r2rdump/R2RDumpTest.csproj#L18\r\n\r\nAn example of such failure\r\n\r\n**R2RDumpTest.output.txt**\r\n```\r\nBEGIN EXECUTION\r\nMicrosoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nNative image HelloWorld.ni.dll generated successfully.\r\nMicrosoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nNative image GcInfoTransitions.ni.dll generated successfully.\r\nMicrosoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nNative image GenericFunctions.ni.dll generated successfully.\r\nMicrosoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nNative image MultipleRuntimeFunctions.ni.dll generated successfully.\r\n \"D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\corerun.exe\" R2RDumpTest.exe ..\\..\\..\\..\\..\\..\\tests\\src\\readytorun\\r2rdump\\files\\Windows_NT.x64.Checked\\ \r\nStarting the test\r\nExpected: 100\r\nActual: -532462766\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\n```\r\n\r\n\r\n**R2RDumpTest.error.txt**\r\n```\r\nThe system cannot find the path specified.\r\nThe system cannot find the path specified.\r\nThe system cannot find the path specified.\r\nThe system cannot find the path specified.\r\n\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not find file 'D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\readytorun.r2rdump\\R2RDumpTest\\HelloWorld-test.xml'.\r\n   at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)\r\n   at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at System.Xml.XmlDownloadManager.GetStream(Uri uri, ICredentials credentials, IWebProxy proxy, RequestCachePolicy cachePolicy) in F:\\vsagent\\4\\s\\src\\System.Private.Xml\\src\\System\\Xml\\XmlDownloadManager.cs:line 27\r\n   at System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) in F:\\vsagent\\4\\s\\src\\System.Private.Xml\\src\\System\\Xml\\XmlUrlResolver.cs:line 66\r\n   at System.Xml.XmlTextReaderImpl.OpenUrl() in F:\\vsagent\\4\\s\\src\\System.Private.Xml\\src\\System\\Xml\\Core\\XmlTextReaderImpl.cs:line 3087\r\n   at System.Xml.XmlTextReaderImpl.Read() in F:\\vsagent\\4\\s\\src\\System.Private.Xml\\src\\System\\Xml\\Core\\XmlTextReaderImpl.cs:line 1206\r\n   at System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace) in F:\\vsagent\\4\\s\\src\\System.Private.Xml\\src\\System\\Xml\\Dom\\XmlLoader.cs:line 50\r\n   at System.Xml.XmlDocument.Load(XmlReader reader) in F:\\vsagent\\4\\s\\src\\System.Private.Xml\\src\\System\\Xml\\Dom\\XmlDocument.cs:line 1336\r\n   at System.Xml.XmlDocument.Load(String filename) in F:\\vsagent\\4\\s\\src\\System.Private.Xml\\src\\System\\Xml\\Dom\\XmlDocument.cs:line 1288\r\n   at R2RDumpTest.TestHelpers.RunTest(String expectedXmlPath, String name)\r\n   at R2RDumpTest.BasicTests.Main(String[] args)\r\n```\r\n\r\nThis issue blocks transitioning of CI to AzDO, so I am going to disable the test on all platforms.\r\n\r\n@RussKeldorph @sergiy-k\r\n","Url":"https://github.com/dotnet/coreclr/issues/22020","RelatedDescription":"Open issue \"readytorun\\r2rdump\\R2RDumpTest is not designed for running outside of coreclr in-place-build\" (#22020)"},{"Id":"399990413","IsPullRequest":true,"CreatedAt":"2019-01-16T20:48:21","Actor":"benaadams","Number":"22019","RawContent":null,"Title":"Use SequenceEqual with Intrinsics to use both Vector sizes at once","State":"open","Body":"The .NET Vector type is always the largest supported size; so if Avx2 is enabled byte sequences have to be 32 or larger to benefit from vectorization.\r\n\r\nUsing the Intrinsics we can enable it using Sse2 for sizes 16 or larger and then switch to Avx2 for 32 or larger on Avx2 machines.\r\n\r\nAlso some tweaks for codegen compactness\r\n\r\nThe intrinsic variant is slightly better than the output the Jit generates as it drops a `vmovaps` instruction\r\n```diff\r\nG_M17140_IG11:\r\n        C4A179100409         vmovupd  xmm0, xmmword ptr [rcx+r9]\r\n        C4A179100C0A         vmovupd  xmm1, xmmword ptr [rdx+r9]\r\n-       C5FC28D0             vmovaps  ymm2, ymm0\r\n-       C5ED76D1             vpcmpeqd ymm2, ymm1\r\n+       C5F974C1             vpcmpeqb xmm0, xmm0, xmm1\r\n-       C5FDD7C2             vpmovmskb eax, ymm2\r\n+       C579D7D0             vpmovmskb r10d, xmm0\r\n-       83F8FF               cmp      eax, -1\r\n+       4183FAFF             cmp      r10d, -1\r\n-       0F858E000000         jne      G_M17103_IG14\r\n+       752B                 jne      SHORT G_M17140_IG14\r\n```\r\n\r\n/cc @CarolEidt @fiigii @tannergooding","Url":"https://github.com/dotnet/coreclr/pull/22019","RelatedDescription":"Open PR \"Use SequenceEqual with Intrinsics to use both Vector sizes at once\" (#22019)"},{"Id":"399806290","IsPullRequest":true,"CreatedAt":"2019-01-16T20:47:40","Actor":"dotnet-maestro[bot]","Number":"22007","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.Helix.Sdk - 2.0.0-beta.19065.6\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22007","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#22007)"},{"Id":"399976493","IsPullRequest":true,"CreatedAt":"2019-01-16T20:29:26","Actor":"wtgodbe","Number":"22017","RawContent":null,"Title":"Mark Packages as stable for 1.1.11","State":"closed","Body":"CC @safern ","Url":"https://github.com/dotnet/coreclr/pull/22017","RelatedDescription":"Closed or merged PR \"Mark Packages as stable for 1.1.11\" (#22017)"},{"Id":"399976560","IsPullRequest":true,"CreatedAt":"2019-01-16T20:29:13","Actor":"wtgodbe","Number":"22018","RawContent":null,"Title":"Mark Packages as stable for 1.0.16","State":"closed","Body":"CC @safern ","Url":"https://github.com/dotnet/coreclr/pull/22018","RelatedDescription":"Closed or merged PR \"Mark Packages as stable for 1.0.16\" (#22018)"},{"Id":"399969706","IsPullRequest":false,"CreatedAt":"2019-01-16T19:52:27","Actor":"jkoritzinsky","Number":"22016","RawContent":null,"Title":"Structures with fixed buffers sometimes misclassified in SystemV eightbyte classification","State":"open","Body":"The struct below is misclassified by the SystemV classifier:\r\n\r\n```csharp\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic unsafe struct FixedBufferClassificationTest\r\n{\r\n    public fixed int arr[3];\r\n    public float f;\r\n}\r\n```\r\n\r\nThe two eightbytes should both be classified as `INTEGER` eightbytes; however, the runtime sees the type above as equivalent to the following:\r\n\r\n```csharp\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic unsafe struct FixedBufferClassificationTest\r\n{\r\n    [StructLayout(LayoutKind.Sequential, Size=12)]\r\n    private struct FixedBufferType\r\n    {\r\n         private int i;\r\n    }\r\n    [FixedBufferAttribute(typeof(int),3)]\r\n    public FixedBufferType arr;\r\n    public float f;\r\n}\r\n```\r\n\r\nSince the classifier has no special knowledge of the concept of fixed buffers, the classifier marks the first four bytes as `INTEGER`, the next 8 as `NO_CLASS`, and the final four as `SSE`. This results in the second eightbyte being classified as `SSE` instead of `INTEGER`.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22016","RelatedDescription":"Open issue \"Structures with fixed buffers sometimes misclassified in SystemV eightbyte classification\" (#22016)"},{"Id":"399950077","IsPullRequest":false,"CreatedAt":"2019-01-16T18:59:15","Actor":"echesakovMSFT","Number":"22015","RawContent":null,"Title":"[Linux/arm] JIT.Methodical/doublearray/dblarray3_cs_do Failure","State":"open","Body":"The issue reproduces in AzDO on a Helix machine, but not locally. Also, doesn't happen in Jenkins CI (which I believe uses the same Helix queue).\r\n\r\n```\r\n+ export CORE_ROOT=/ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Payload\r\n+ export __TestEnv=/ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Work/82284500-eaa8-4cdb-ba40-a5a0f06a2939/Unzip/SetStressModes_normal.sh\r\n+ cat /ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Work/82284500-eaa8-4cdb-ba40-a5a0f06a2939/Unzip/SetStressModes_normal.sh\r\n#!/usr/bin/env bash\r\n+ /ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Payload/corerun /ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Payload/xunit.console.dll JIT.Methodical.XUnitWrapper.dll -parallel collections -nocolor -noshadow -xml testResults.xml -notrait category=outerloop -notrait category=failing\r\nxUnit.net Console Runner v2.4.1 (32-bit .NET Core 4.6.27316.0)\r\n  Discovering: JIT.Methodical.XUnitWrapper\r\n  Discovered:  JIT.Methodical.XUnitWrapper\r\n  Starting:    JIT.Methodical.XUnitWrapper\r\n    JIT_Methodical._doublearray_dblarray3_cs_do_dblarray3_cs_do_._doublearray_dblarray3_cs_do_dblarray3_cs_do_sh [FAIL]\r\n      /n/nReturn code:      1/nRaw output file:      /ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Work/82284500-eaa8-4cdb-ba40-a5a0f06a2939/Exec/Reports/JIT.Methodical/doublearray/dblarray3_cs_do/dblarray3_cs_do.output.txt/nRaw output:/nBEGIN EXECUTION\r\n      /ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Payload/corerun dblarray3_cs_do.exe\r\n      \r\n      Generation 1\r\n      Exception of type 'System.Exception' was thrown.\r\n         at DblArray3.f2a() in /__w/1/s/tests/src/JIT/Methodical/doublearray/dblarray3.cs:line 83\r\n         at DblArray3.Main() in /__w/1/s/tests/src/JIT/Methodical/doublearray/dblarray3.cs:line 143\r\n      FAILED\r\n      Expected: 100\r\n      Actual: 255\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n      /nTo run the test:/n> set CORE_ROOT=/ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Payload/n> /ssd/dotnetbuild/work/c54b1614-4a1c-4967-8a35-df73f23af1e0/Work/82284500-eaa8-4cdb-ba40-a5a0f06a2939/Exec/doublearray/dblarray3_cs_do/dblarray3_cs_do.sh/n\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /__w/1/s/bin/tests/Linux.arm.Checked/TestWrappers/JIT.Methodical/JIT.Methodical.XUnitWrapper.cs(12009,0): at JIT_Methodical._doublearray_dblarray3_cs_do_dblarray3_cs_do_._doublearray_dblarray3_cs_do_dblarray3_cs_do_sh()\r\n  Finished:    JIT.Methodical.XUnitWrapper\r\n=== TEST EXECUTION SUMMARY ===\r\n   JIT.Methodical.XUnitWrapper  Total: 749, Errors: 0, Failed: 1, Skipped: 0, Time: 209.057s\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22015","RelatedDescription":"Open issue \"[Linux/arm] JIT.Methodical/doublearray/dblarray3_cs_do Failure\" (#22015)"},{"Id":"399940716","IsPullRequest":true,"CreatedAt":"2019-01-16T18:33:31","Actor":"Dotnet-GitSync-Bot","Number":"22013","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"open","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/coreclr/pull/22013","RelatedDescription":"Open PR \"Mirror changes from dotnet/corert\" (#22013)"},{"Id":"399839690","IsPullRequest":true,"CreatedAt":"2019-01-16T18:31:57","Actor":"benaadams","Number":"22008","RawContent":null,"Title":"Reduce steps for string.Contains(string value)","State":"closed","Body":"Validate `value` is not null and go straight to `SpanHelpers.IndexOf` rather than\r\n\r\n```\r\n.Contains(string)\r\n-> .IndexOf(string, StringComparison)\r\n-> .IndexOf(string, int, int, StringComparison)\r\n\r\n`value` is not null (as earlier)\r\n\r\nValidate introduced values startIndex (`0`), count (`s.Length`) against `s.Length`\r\nCheck comparisonType == StringComparison.Ordinal\r\n\r\n`SpanHelpers.IndexOf`\r\n```\r\n\r\na nit \r\n\r\n/cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/22008","RelatedDescription":"Closed or merged PR \"Reduce steps for string.Contains(string value)\" (#22008)"},{"Id":"399930580","IsPullRequest":true,"CreatedAt":"2019-01-16T18:04:56","Actor":"stephentoub","Number":"22012","RawContent":null,"Title":"Remove ToString from RuntimeAssembly.GetManifestResourceStream","State":"open","Body":"A small allocation we can avoid with the span-based string.Concat.","Url":"https://github.com/dotnet/coreclr/pull/22012","RelatedDescription":"Open PR \"Remove ToString from RuntimeAssembly.GetManifestResourceStream\" (#22012)"},{"Id":"399930373","IsPullRequest":true,"CreatedAt":"2019-01-16T18:04:23","Actor":"stephentoub","Number":"22011","RawContent":null,"Title":"Avoid allocations in Utf8Formatter.TryFormat(float/double, ...)","State":"open","Body":"Currently every call to Utf8Formatter.TryFormat for a float or a double allocates two strings, one for the format string and one for the resulting number.   This avoids those in the common case where we can use float/double.TryFormat and format directly into a stack buffer.  (Also removes some unsafe code; unless someone knows otherwise, the performance of StandardFormat.ToString isn't currently worth the extra nanoseconds gained by using unsafe code.)\r\n\r\nFixes https://github.com/dotnet/corefx/issues/25077\r\ncc: @ahsonkhan, @bartonjs, @tannergooding ","Url":"https://github.com/dotnet/coreclr/pull/22011","RelatedDescription":"Open PR \"Avoid allocations in Utf8Formatter.TryFormat(float/double, ...)\" (#22011)"},{"Id":"399924182","IsPullRequest":false,"CreatedAt":"2019-01-16T17:47:37","Actor":"BruceForstall","Number":"22010","RawContent":null,"Title":"[Linux/arm64] exit code 137 test failures","State":"open","Body":"We see quite a few Linux/arm64 test jobs fail with exit code 137. I _think_ this corresponds to SIGKILL.\r\n\r\nWhat does it mean?\r\n\r\nWhat can be done about it?\r\n\r\nE.g.,\r\nhttps://github.com/dotnet/coreclr/issues/22001\r\nhttps://github.com/dotnet/coreclr/issues/22000\r\nhttps://github.com/dotnet/coreclr/issues/21801\r\nhttps://github.com/dotnet/coreclr/issues/21269\r\nhttps://github.com/dotnet/coreclr/issues/20992\r\nhttps://github.com/dotnet/coreclr/issues/20991\r\nhttps://github.com/dotnet/coreclr/issues/20990\r\nhttps://github.com/dotnet/coreclr/issues/20989\r\nhttps://github.com/dotnet/coreclr/issues/20539\r\nhttps://github.com/dotnet/coreclr/issues/20517\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22010","RelatedDescription":"Open issue \"[Linux/arm64] exit code 137 test failures\" (#22010)"},{"Id":"399909465","IsPullRequest":false,"CreatedAt":"2019-01-16T17:10:27","Actor":"echesakovMSFT","Number":"22009","RawContent":null,"Title":"Enable JIT\\superpmi\\superpmicollect on Linux/OSX","State":"open","Body":"And remove the corresponding line in https://github.com/dotnet/coreclr/blob/5ae949f8a4e7ddd4a3b7891f30a1d2911ca74873/tests/src/dirs.proj#L28","Url":"https://github.com/dotnet/coreclr/issues/22009","RelatedDescription":"Open issue \"Enable JIT\\superpmi\\superpmicollect on Linux/OSX\" (#22009)"},{"Id":"399679020","IsPullRequest":false,"CreatedAt":"2019-01-16T12:12:38","Actor":"v-haren","Number":"22005","RawContent":null,"Title":"java.nio.channels.ClosedChannelException","State":"closed","Body":"failed in job: https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/master/job/perf_Ubuntu16.04_x64/1110/\r\n\r\nfailed log:\r\n[./tests/scripts/run-xunit-perf.py]: taskset 0x00000002 nice --adjustment=-10 /home/administrator/jenkins/w/dotnet_coreclr/perf/master/perf_Ubuntu16.04_x64/bin/sandbox/corerun PerfHarness.dll /home/administrator/jenkins/w/dotnet_coreclr/perf/master/perf_Ubuntu16.04_x64/bin/sandbox/PacketTracer.exe --perf:outputdir /home/administrator/jenkins/w/dotnet_coreclr/perf/master/perf_Ubuntu16.04_x64/bin/sandbox_logs/Microbenchmarks/Off/PacketTracer --perf:runid Perf-Off --perf:collect stopwatchFATAL: command execution failed\r\njava.nio.channels.ClosedChannelException\r\n\tat org.jenkinsci.remoting.protocol.impl.ChannelApplicationLayer.onReadClosed(ChannelApplicationLayer.java:208)\r\n\tat org.jenkinsci.remoting.protocol.ApplicationLayer.onRecvClosed(ApplicationLayer.java:222)\r\n\tat org.jenkinsci.remoting.protocol.ProtocolStack$Ptr.onRecvClosed(ProtocolStack.java:832)\r\n\tat org.jenkinsci.remoting.protocol.FilterLayer.onRecvClosed(FilterLayer.java:287)\r\n\tat org.jenkinsci.remoting.protocol.impl.SSLEngineFilterLayer.onRecvClosed(SSLEngineFilterLayer.java:181)\r\n\tat org.jenkinsci.remoting.protocol.impl.SSLEngineFilterLayer.switchToNoSecure(SSLEngineFilterLayer.java:283)\r\n\tat org.jenkinsci.remoting.protocol.impl.SSLEngineFilterLayer.processWrite(SSLEngineFilterLayer.java:503)\r\n\tat org.jenkinsci.remoting.protocol.impl.SSLEngineFilterLayer.processQueuedWrites(SSLEngineFilterLayer.java:248)\r\n\tat org.jenkinsci.remoting.protocol.impl.SSLEngineFilterLayer.doSend(SSLEngineFilterLayer.java:200)\r\n\tat org.jenkinsci.remoting.protocol.impl.SSLEngineFilterLayer.doCloseSend(SSLEngineFilterLayer.java:213)\r\n\tat org.jenkinsci.remoting.protocol.ProtocolStack$Ptr.doCloseSend(ProtocolStack.java:800)\r\n\tat org.jenkinsci.remoting.protocol.ApplicationLayer.doCloseWrite(ApplicationLayer.java:173)\r\n\tat org.jenkinsci.remoting.protocol.impl.ChannelApplicationLayer$ByteBufferCommandTransport.closeWrite(ChannelApplicationLayer.java:311)\r\n\tat hudson.remoting.Channel.close(Channel.java:1405)\r\n\tat hudson.remoting.Channel.close(Channel.java:1358)\r\n\tat hudson.slaves.SlaveComputer.closeChannel(SlaveComputer.java:737)\r\n\tat hudson.slaves.SlaveComputer.access$800(SlaveComputer.java:96)\r\n\tat hudson.slaves.SlaveComputer$3.run(SlaveComputer.java:655)\r\n\tat jenkins.util.ContextResettingExecutorService$1.run(ContextResettingExecutorService.java:28)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused: java.io.IOException: Backing channel 'JNLP4-connect connection from 131.107.147.189/131.107.147.189:24549' is disconnected.\r\n\tat hudson.remoting.RemoteInvocationHandler.channelOrFail(RemoteInvocationHandler.java:212)\r\n\tat hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:281)\r\n\tat com.sun.proxy.$Proxy180.isAlive(Unknown Source)\r\n\tat hudson.Launcher$RemoteLauncher$ProcImpl.isAlive(Launcher.java:1138)\r\n\tat hudson.Launcher$RemoteLauncher$ProcImpl.join(Launcher.java:1130)\r\n\tat hudson.tasks.CommandInterpreter.join(CommandInterpreter.java:155)\r\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:109)\r\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:66)\r\n\tat hudson.tasks.BuildStepMonitor$1.perform(BuildStepMonitor.java:20)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:744)\r\n\tat hudson.model.Build$BuildExecution.build(Build.java:206)\r\n\tat hudson.model.Build$BuildExecution.doRun(Build.java:163)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:504)\r\n\tat hudson.model.Run.execute(Run.java:1724)\r\n\tat hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)\r\n\tat hudson.model.ResourceController.execute(ResourceController.java:97)\r\n\tat hudson.model.Executor.run(Executor.java:429)\r\nBuild step 'Execute shell' marked build as failure","Url":"https://github.com/dotnet/coreclr/issues/22005","RelatedDescription":"Closed issue \"java.nio.channels.ClosedChannelException\" (#22005)"},{"Id":"399741269","IsPullRequest":true,"CreatedAt":"2019-01-16T10:24:56","Actor":"filipnavara","Number":"22006","RawContent":null,"Title":"Split up ContractsBCL into separate classes.","State":"open","Body":"Contributes to #21932.","Url":"https://github.com/dotnet/coreclr/pull/22006","RelatedDescription":"Open PR \"Split up ContractsBCL into separate classes.\" (#22006)"},{"Id":"399669233","IsPullRequest":false,"CreatedAt":"2019-01-16T06:44:49","Actor":"AriNuer","Number":"22004","RawContent":null,"Title":"[arm64\\windows] Test \"JIT_jit64._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_cmd\" failed in arm64_cross_checked_windows_nt_jitstressregs1","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_jitstressregs1_tst/56/\r\n**Failed tests:**\r\nJIT_jit64._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_cmd\r\nJIT_jit64._hfa_main_testC_hfa_sd0C_r_hfa_sd0C_r_._hfa_main_testC_hfa_sd0C_r_hfa_sd0C_r_cmd\r\nJIT_jit64._hfa_main_testC_hfa_sf1C_r_hfa_sf1C_r_._hfa_main_testC_hfa_sf1C_r_hfa_sf1C_r_cmd\r\nJIT_jit64._hfa_main_testC_hfa_sd1C_r_hfa_sd1C_r_._hfa_main_testC_hfa_sd1C_r_hfa_sd1C_r_cmd\r\n**One of failed log:**\r\n```\r\nJIT_jit64._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_cmd [FAIL]\r\n        \r\n  \r\n  Return code:      1\r\n  Raw output file:      C:\\j\\workspace\\arm64_cross_c---7cf378a1\\bin\\tests\\Windows_NT.arm64.Checked\\Reports\\JIT.jit64\\hfa\\main\\testC\\hfa_sf0C_r\\hfa_sf0C_r.output.txt\r\n  Raw output:\r\n  BEGIN EXECUTION\r\n        \r\n        C:\\j\\workspace\\arm64_cross_c---7cf378a1\\bin\\tests\\Windows_NT.arm64.Checked\\JIT\\jit64\\hfa\\main\\testC\\hfa_sf0C_r>set COMPLUS_NOGUIONASSERT=1 \r\n        \r\n        C:\\j\\workspace\\arm64_cross_c---7cf378a1\\bin\\tests\\Windows_NT.arm64.Checked\\JIT\\jit64\\hfa\\main\\testC\\hfa_sf0C_r>set COMPLUS_CONTINUEONASSERT=0 \r\n        \r\n        C:\\j\\workspace\\arm64_cross_c---7cf378a1\\bin\\tests\\Windows_NT.arm64.Checked\\JIT\\jit64\\hfa\\main\\testC\\hfa_sf0C_r>set COMPLUS_TIEREDCOMPILATION=0 \r\n        \r\n        C:\\j\\workspace\\arm64_cross_c---7cf378a1\\bin\\tests\\Windows_NT.arm64.Checked\\JIT\\jit64\\hfa\\main\\testC\\hfa_sf0C_r>set COMPLUS_JITSTRESSREGS=1 \r\n         \"C:\\j\\workspace\\arm64_cross_c---7cf378a1\\bin\\tests\\Windows_NT.arm64.Checked\\Tests\\Core_Root\\corerun.exe\" hfa_sf0C_r.exe \r\n        [Average HFA 01]\tPASSED\r\n        [Average HFA 02]\tPASSED\r\n        [Average HFA 03]\tPASSED\r\n        [Average HFA 05]\tPASSED\r\n        [Average HFA 08]\tPASSED\r\n        [Average HFA 11]\tPASSED\r\n        [Average HFA 19]\tPASSED\r\n        [Average3 HFA 01]\tPASSED\r\n        [Average3 HFA 02]\tPASSED\r\n        [Average3 HFA 03]\tPASSED\r\n        [Average3 HFA 05]\tPASSED\r\n        [Average3 HFA 08]\tPASSED\r\n        [Average3 HFA 11]\tPASSED\r\n        [Average3 HFA 19]\tPASSED\r\n        [Average5 HFA 01]\tPASSED\r\n        [Average5 HFA 02]\tPASSED\r\n        [Average5 HFA 03]\tPASSED\r\n        [Average5 HFA 05]\tPASSED\r\n        [Average5 HFA 08]\tPASSED\r\n        [Average5 HFA 11]\tPASSED\r\n        [Average5 HFA 19]\tPASSED\r\n        [Average8 HFA 01]\tPASSED\r\n        [Average8 HFA 02]\tPASSED\r\n        [Average8 HFA 03]\tPASSED\r\n        [Average8 HFA 05]\tPASSED\r\n        [Average8 HFA 08]\tPASSED\r\n        [Average8 HFA 11]\tPASSED\r\n        [Average8 HFA 19]\tPASSED\r\n        [Average11 HFA 01]\tPASSED\r\n        [Average11 HFA 02]\tPASSED\r\n        [Average11 HFA 03]\tPASSED\r\n        [Average11 HFA 05]\tPASSED\r\n        [Average11 HFA 08]\tPASSED\r\n        [Average11 HFA 11]\tPASSED\r\n        [Average11 HFA 19]\tPASSED\r\n        [Average19 HFA 01]\tPASSED\r\n        [Average19 HFA 02]\tPASSED\r\n        [Average19 HFA 03]\tPASSED\r\n        [Average19 HFA 05]\tPASSED\r\n        [Average19 HFA 08]\tPASSED\r\n        [Average19 HFA 11]\tPASSED\r\n        [Average19 HFA 19]\tPASSED\r\n        Expected: 100\r\n        Actual: 1\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=C:\\j\\workspace\\arm64_cross_c---7cf378a1\\bin\\tests\\Windows_NT.arm64.Checked\\Tests\\Core_Root\r\n  > C:\\j\\workspace\\arm64_cross_c---7cf378a1\\bin\\tests\\Windows_NT.arm64.Checked\\JIT\\jit64\\hfa\\main\\testC\\hfa_sf0C_r\\hfa_sf0C_r.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\arm64_cross_c---0aaef436\\bin\\tests\\Windows_NT.arm64.Checked\\TestWrappers\\JIT.jit64\\JIT.jit64.XUnitWrapper.cs(11519,0): at JIT_jit64._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_cmd()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22004","RelatedDescription":"Open issue \"[arm64\\windows] Test \"JIT_jit64._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_._hfa_main_testC_hfa_sf0C_r_hfa_sf0C_r_cmd\" failed in arm64_cross_checked_windows_nt_jitstressregs1\" (#22004)"},{"Id":"399633593","IsPullRequest":true,"CreatedAt":"2019-01-16T03:35:06","Actor":"adityamandaleeka","Number":"22003","RawContent":null,"Title":"Write barrier optimizations for ARM64 Windows","State":"open","Body":"This change is a step towards unification of the ARM64 write barrier logic between Windows and Unix. It brings over some of the changes that were done for Unix in https://github.com/dotnet/coreclr/pull/12334 such as using a literal pool to hold heap location/geometry information used in the barriers.\r\n\r\nParts of the code have been tweaked in pursuit of performance gains.\r\n\r\n- The cmp+ccmp pair has been replaced with two discrete cmp/branches to detangle it and allow for a faster exit if the lower bound check fails.\r\n- The ephemeral bounds are now being loaded simultaneously with an ldp rather than separately prior to each compare.\r\n- The shift for indexing into the card table has been separated out into its own instruction.\r\n\r\nSampling a write barrier-heavy test after these changes shows a ~7-12% decrease in the time spent in the barrier relative to the current, post-optimization version that's in use on Unix today.\r\n\r\nOnce this is in, I plan to port the deltas over to Unix so that the barriers will be in sync. I left the CLR writewatch and manually managed card bundles stuff alone on Windows for now since it's not enabled yet, but I'll likely experiment with those in the near future and check in the remaining pieces after doing so.","Url":"https://github.com/dotnet/coreclr/pull/22003","RelatedDescription":"Open PR \"Write barrier optimizations for ARM64 Windows\" (#22003)"},{"Id":"399629628","IsPullRequest":true,"CreatedAt":"2019-01-16T03:14:32","Actor":"dotnet-maestro-bot","Number":"22002","RawContent":null,"Title":"Update CoreClr, CoreFx, PgoData to preview-27316-02, preview.19066.1, master-20190116.5, respectively (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/22002","RelatedDescription":"Open PR \"Update CoreClr, CoreFx, PgoData to preview-27316-02, preview.19066.1, master-20190116.5, respectively (master)\" (#22002)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"400052118","IsPullRequest":true,"CreatedAt":"2019-01-17T00:01:25","Actor":"dotnet-bot","Number":"10623","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10623","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10623)"},{"Id":"400052106","IsPullRequest":true,"CreatedAt":"2019-01-17T00:01:23","Actor":"dotnet-bot","Number":"10622","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10622","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#10622)"},{"Id":"400052098","IsPullRequest":true,"CreatedAt":"2019-01-17T00:01:20","Actor":"dotnet-bot","Number":"10621","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10621","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#10621)"},{"Id":"400040801","IsPullRequest":true,"CreatedAt":"2019-01-16T23:16:33","Actor":"sdmaclea","Number":"10620","RawContent":null,"Title":"Update FXVersion to use SemVer 2.0.0","State":"open","Body":"Update FXVersion to use SemVer 2.0.0\r\nExtend and fix tests\r\n\r\nFixes #10608","Url":"https://github.com/dotnet/cli/pull/10620","RelatedDescription":"Open PR \"Update FXVersion to use SemVer 2.0.0\" (#10620)"},{"Id":"400015893","IsPullRequest":true,"CreatedAt":"2019-01-16T22:23:32","Actor":"johnbeisner","Number":"10619","RawContent":null,"Title":"Update 'Architecture' help documentation.","State":"closed","Body":"Update 'Architecture' help documentation; other...\r\n","Url":"https://github.com/dotnet/cli/pull/10619","RelatedDescription":"Closed or merged PR \"Update 'Architecture' help documentation.\" (#10619)"},{"Id":"399589458","IsPullRequest":true,"CreatedAt":"2019-01-16T22:12:44","Actor":"dotnet-bot","Number":"10610","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10610","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#10610)"},{"Id":"399682384","IsPullRequest":false,"CreatedAt":"2019-01-16T20:39:56","Actor":"jmezach","Number":"10614","RawContent":null,"Title":"dotnet tool install should support --interactive","State":"closed","Body":"## Steps to reproduce\r\n- Create a new console project (dotnet new console)\r\n- Add <PackAsTool>true</PackAsTool> to csproj\r\n- Pack project and publish NuGet package to (for example) Azure Artifacts\r\n- Try to install the tool locally using dotnet tool install --add-source <feed-url> --interactive\r\n\r\n## Expected  behavior\r\nIf the feed hasn't been authenticated before, the install command should prompt for credentials in order to authenticate to the feed.\r\n\r\n## Actual behavior\r\nCommand errors out stating that the --interactive flag is not supported.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.102\r\n Commit:    96ff75a873\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.102/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  2.2.102 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10614","RelatedDescription":"Closed issue \"dotnet tool install should support --interactive\" (#10614)"},{"Id":"399769790","IsPullRequest":false,"CreatedAt":"2019-01-16T20:37:41","Actor":"snobu","Number":"10615","RawContent":null,"Title":"Add scaffolding for Vue.js SPA","State":"closed","Body":"Please consider adding [Vue.js ](https://vuejs.org/) SPA scaffolding. Vue is popular enough to deserve its own scaffolding entry in the dotnet CLI. Right now only React and Angular SPAs are being generated.\r\n\r\n```bash\r\n$ dotnet new | grep SPA\r\nASP.NET Core with Angular                      angular            [C#]          Web/MVC/SPA\r\nASP.NET Core with React.js                     react              [C#]          Web/MVC/SPA\r\nASP.NET Core with React.js and Redux           reactredux         [C#]          Web/MVC/SPA\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10615","RelatedDescription":"Closed issue \"Add scaffolding for Vue.js SPA\" (#10615)"},{"Id":"399657877","IsPullRequest":true,"CreatedAt":"2019-01-16T20:32:42","Actor":"livarcocc","Number":"10613","RawContent":null,"Title":"Updating SDK to 2.2.101-preview3-63716-01","State":"closed","Body":"This SDK contains a matching version of NuGet.\r\n","Url":"https://github.com/dotnet/cli/pull/10613","RelatedDescription":"Closed or merged PR \"Updating SDK to 2.2.101-preview3-63716-01\" (#10613)"},{"Id":"399921942","IsPullRequest":true,"CreatedAt":"2019-01-16T17:41:44","Actor":"nugetlurker","Number":"10618","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5781 into cli","State":"open","Body":"Insert NuGet Build 5.0.0-preview3.5781 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/10618","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview3.5781 into cli\" (#10618)"},{"Id":"399921920","IsPullRequest":true,"CreatedAt":"2019-01-16T17:41:40","Actor":"nugetlurker","Number":"10617","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5781 into cli","State":"open","Body":"Insert NuGet Build 5.0.0-preview3.5781 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/10617","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview3.5781 into cli\" (#10617)"},{"Id":"399799799","IsPullRequest":true,"CreatedAt":"2019-01-16T13:30:08","Actor":"dotnet-maestro[bot]","Number":"10616","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19065.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10616","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10616)"},{"Id":"399620127","IsPullRequest":true,"CreatedAt":"2019-01-16T03:33:15","Actor":"livarcocc","Number":"10612","RawContent":null,"Title":"Updating SDK to 2.1.501-preview-63715-01","State":"closed","Body":"This SDK contains a matching NuGet.\r\n\r\n@mmitche \r\n","Url":"https://github.com/dotnet/cli/pull/10612","RelatedDescription":"Closed or merged PR \"Updating SDK to 2.1.501-preview-63715-01\" (#10612)"},{"Id":"399589467","IsPullRequest":true,"CreatedAt":"2019-01-16T00:01:33","Actor":"dotnet-bot","Number":"10611","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10611","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10611)"},{"Id":"399271010","IsPullRequest":false,"CreatedAt":"2019-01-15T21:40:15","Actor":"taori","Number":"10606","RawContent":null,"Title":"How do you invoke dotnet cli functions from a process within a unit test?","State":"closed","Body":"If i write a unit test with this content:\r\n\r\n      using (var process = Process.Start($\"dotnet --info\"))\r\n      {\r\n           process.WaitForExit();\r\n           process.ExitCode.ShouldBe(0, process.StandardError.ReadToEnd);\r\n      }\r\n\r\nit will throw a file not found exception - how can start my process, so it works as if i invoke dotnet x from command line?","Url":"https://github.com/dotnet/cli/issues/10606","RelatedDescription":"Closed issue \"How do you invoke dotnet cli functions from a process within a unit test?\" (#10606)"},{"Id":"398507521","IsPullRequest":true,"CreatedAt":"2019-01-15T19:40:36","Actor":"dotnet-maestro[bot]","Number":"10601","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19061.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19061.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19061.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19061.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19064.4\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10601","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10601)"},{"Id":"399149876","IsPullRequest":true,"CreatedAt":"2019-01-15T19:09:07","Actor":"jainaashish","Number":"10604","RawContent":null,"Title":"Insert NuGet Build 4.9.3-rtm.5777 into cli release/2.2.1xx","State":"closed","Body":"@livarcocc ","Url":"https://github.com/dotnet/cli/pull/10604","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 4.9.3-rtm.5777 into cli release/2.2.1xx\" (#10604)"},{"Id":"399443499","IsPullRequest":false,"CreatedAt":"2019-01-15T18:58:28","Actor":"damageboy","Number":"10609","RawContent":null,"Title":"error NETSDK1053: Pack as tool does not support self contained seems restrictive with no purpose","State":"closed","Body":"## Steps to reproduce\r\npublish a tool marked as `<PackAsTool>true</PackAsTool>` as a self-contained application (`dotnet publish -c release -f netcoreapp2.1 -r ubuntu.14.04-x64`)\r\n\r\n## Expected  behavior\r\npublish should succeed, just like it did in 2.1\r\n\r\n## Actual behavior\r\nFails with:\r\n```\r\n/usr/share/dotnet/sdk/2.2.101/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.PackTool.targets(71,5): error NETSDK1053: Pack as tool does not support self contained.\r\n```\r\n\r\nThis is a regression as far as I'm concerned, since previously there was nothing \"wrong\", neither in concept or in practice (in the netcoreapp2.1 SDK era) with publishing a self contained application which is ALSO packaged as a dotnet global tool.\r\n\r\nThis is currently forbidden as of the new .NET Core SDK, and its hard to figure out what the reasoning is.\r\n\r\nWhen the condition on `/usr/share/dotnet/sdk/2.2.101/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.PackTool.targets`/line 71 is commented out, the 2.1 behavior works as expected.\r\n\r\nI think it would make sense to relax this limitation, esp. since it's not so clear what purpose it serves...\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.101/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.502 [/usr/share/dotnet/sdk]\r\n  2.2.101 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/cli/issues/10609","RelatedDescription":"Closed issue \"error NETSDK1053: Pack as tool does not support self contained seems restrictive with no purpose\" (#10609)"},{"Id":"399005682","IsPullRequest":true,"CreatedAt":"2019-01-15T18:23:09","Actor":"nugetlurker","Number":"10603","RawContent":null,"Title":"Insert NuGet Build 4.9.3-rtm.5777 into cli","State":"closed","Body":"Insert NuGet Build 4.9.3-rtm.5777 into cli release/2.1.5xx branch","Url":"https://github.com/dotnet/cli/pull/10603","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 4.9.3-rtm.5777 into cli\" (#10603)"},{"Id":"399414132","IsPullRequest":false,"CreatedAt":"2019-01-15T16:03:24","Actor":"sdmaclea","Number":"10608","RawContent":null,"Title":"Support SemVer2.0.0 for SDK resolution","State":"open","Body":"Arcade has started the transition to using SemVer2.0.0 versions.\r\n\r\nCurrent SDK resolution does not yet support SemVer2.0.0\r\n\r\nhttps://github.com/dotnet/cli/blob/f38d1472d05573158f52ec30f5163fe0316ede7b/src/Microsoft.DotNet.MSBuildSdkResolver/FXVersion.cs#L6-L9\r\n\r\nSee also dotnet/core-setup#4952 & dotnet/core-setup#4953","Url":"https://github.com/dotnet/cli/issues/10608","RelatedDescription":"Open issue \"Support SemVer2.0.0 for SDK resolution\" (#10608)"},{"Id":"399328063","IsPullRequest":false,"CreatedAt":"2019-01-15T12:42:13","Actor":"jmezach","Number":"10607","RawContent":null,"Title":"dotnet build -r fails on macOS/Linux, succeeds on Windows with PackAsTool","State":"open","Body":"## Steps to reproduce\r\n- Create a new console project (dotnet new console)\r\n- Edit project file and add <PackAsTool>true</PackAsTool>\r\n- Build project on Windows with dotnet build -r win-x64 -c Release (this works)\r\n- Build project on macOS with dotnet build -r osx-x64 -c Release (fails)\r\n- Build project on Linux with dotnet build -r linux-x64 -c Release (fails)\r\n\r\n## Expected  behavior\r\nBuild either succeeds or fails on all platforms. Personally I would prefer it would work on all platforms, but I'm sure there is a rationale for the error I'm seeing on Linux and macOS.\r\n\r\n## Actual behavior\r\nBuild succeeds on Windows, but fails on the other platforms. Both fail with the following error:\r\n\r\nerror NETSDK1053: Pack as tool does not support self contained.\r\n\r\nBased on the dotnet --info output (shown below) I'm guessing this was changed between 2.1 and 2.2, so perhaps pinning the SDK version to 2.1 would solve the issue for now, but I'm not sure what the consequences would be.\r\n\r\n## Environment data\r\n`dotnet --info` output on Windows:\r\n```\r\n2019-01-15T12:38:17.9612162Z .NET Core SDK (reflecting any global.json):\r\n2019-01-15T12:38:17.9612391Z  Version:   2.1.402\r\n2019-01-15T12:38:17.9612467Z  Commit:    3599f217f4\r\n2019-01-15T12:38:17.9612527Z \r\n2019-01-15T12:38:17.9612592Z Runtime Environment:\r\n2019-01-15T12:38:17.9612693Z  OS Name:     Windows\r\n2019-01-15T12:38:17.9612779Z  OS Version:  10.0.14393\r\n2019-01-15T12:38:17.9612848Z  OS Platform: Windows\r\n2019-01-15T12:38:17.9874153Z  RID:         win10-x64\r\n2019-01-15T12:38:18.0200652Z  Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.402\\\r\n2019-01-15T12:38:18.1270442Z \r\n2019-01-15T12:38:18.1270604Z Host (useful for support):\r\n2019-01-15T12:38:18.1270673Z   Version: 2.1.4\r\n2019-01-15T12:38:18.1270754Z   Commit:  85255dde3e\r\n2019-01-15T12:38:18.1270796Z \r\n2019-01-15T12:38:18.1270871Z .NET Core SDKs installed:\r\n2019-01-15T12:38:18.1270957Z   1.0.1 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271026Z   1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271112Z   1.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271195Z   1.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271277Z   1.1.7 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271359Z   1.1.8 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271441Z   1.1.9 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271517Z   1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271601Z   2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271683Z   2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271751Z   2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271832Z   2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271914Z   2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1271996Z   2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272065Z   2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272148Z   2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272229Z   2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272297Z   2.1.105 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272379Z   2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272468Z   2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272537Z   2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272621Z   2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272895Z   2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1272968Z   2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1273051Z   2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1273135Z   2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1273203Z   2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n2019-01-15T12:38:18.1273259Z \r\n2019-01-15T12:38:18.1273319Z .NET Core runtimes installed:\r\n2019-01-15T12:38:18.1273416Z   Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n2019-01-15T12:38:18.1273525Z   Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n2019-01-15T12:38:18.1273632Z   Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n2019-01-15T12:38:18.1274495Z   Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n2019-01-15T12:38:18.1274605Z   Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n2019-01-15T12:38:18.1274719Z   Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n2019-01-15T12:38:18.1274809Z   Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n2019-01-15T12:38:18.1274916Z   Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n2019-01-15T12:38:18.1275021Z   Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n2019-01-15T12:38:18.1275127Z   Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n2019-01-15T12:38:18.1275215Z   Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1275745Z   Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1275902Z   Microsoft.NETCore.App 1.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1276025Z   Microsoft.NETCore.App 1.0.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1276173Z   Microsoft.NETCore.App 1.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1276311Z   Microsoft.NETCore.App 1.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1276452Z   Microsoft.NETCore.App 1.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1276575Z   Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1276714Z   Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1276852Z   Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1276973Z   Microsoft.NETCore.App 1.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1277120Z   Microsoft.NETCore.App 1.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1277264Z   Microsoft.NETCore.App 1.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1277401Z   Microsoft.NETCore.App 1.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1277522Z   Microsoft.NETCore.App 1.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1277658Z   Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1277793Z   Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1277914Z   Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1278051Z   Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1278195Z   Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1278331Z   Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1278558Z   Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1278698Z   Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1281471Z   Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1281598Z   Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1281690Z   Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n2019-01-15T12:38:18.1281796Z   Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\n`dotnet --info` output on macOS:\r\n```\r\n2019-01-15T12:40:10.7539990Z .NET Core SDK (reflecting any global.json):\r\n2019-01-15T12:40:10.7540260Z  Version:   2.2.101\r\n2019-01-15T12:40:10.7540430Z  Commit:    236713b0b7\r\n2019-01-15T12:40:10.7540500Z \r\n2019-01-15T12:40:10.7540650Z Runtime Environment:\r\n2019-01-15T12:40:10.7540750Z  OS Name:     Mac OS X\r\n2019-01-15T12:40:10.7540920Z  OS Version:  10.13\r\n2019-01-15T12:40:10.7541070Z  OS Platform: Darwin\r\n2019-01-15T12:40:10.8324280Z  RID:         osx.10.13-x64\r\n2019-01-15T12:40:10.8332280Z  Base Path:   /Users/vsts/.dotnet/sdk/2.2.101/\r\n2019-01-15T12:40:10.8403810Z \r\n2019-01-15T12:40:10.8404280Z Host (useful for support):\r\n2019-01-15T12:40:10.8404600Z   Version: 2.2.0\r\n2019-01-15T12:40:10.8404990Z   Commit:  1249f08fed\r\n2019-01-15T12:40:10.8405110Z \r\n2019-01-15T12:40:10.8405260Z .NET Core SDKs installed:\r\n2019-01-15T12:40:10.8405490Z   1.0.1 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8405760Z   1.0.4 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8405990Z   1.1.4 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8406190Z   1.1.5 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8406300Z   1.1.7 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8406500Z   1.1.8 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8406760Z   1.1.9 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8406870Z   1.1.10 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8407040Z   1.1.11 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8407220Z   2.0.0 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8407450Z   2.0.3 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8407550Z   2.1.2 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8407720Z   2.1.4 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8407900Z   2.1.100 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8408000Z   2.1.101 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8408180Z   2.1.102 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8408350Z   2.1.103 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8408500Z   2.1.104 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8408610Z   2.1.105 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8408780Z   2.1.200 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8408940Z   2.1.201 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8409060Z   2.1.202 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8409230Z   2.1.300 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8409380Z   2.1.301 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8409490Z   2.1.302 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8409650Z   2.1.400 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8409840Z   2.1.401 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8410000Z   2.1.402 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8410110Z   2.1.403 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8410330Z   2.1.500 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8410500Z   2.1.502 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8410610Z   2.2.100 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8410770Z   2.2.101 [/Users/vsts/.dotnet/sdk]\r\n2019-01-15T12:40:10.8410830Z \r\n2019-01-15T12:40:10.8410990Z .NET Core runtimes installed:\r\n2019-01-15T12:40:10.8411160Z   Microsoft.AspNetCore.All 2.1.0 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:10.8411580Z   Microsoft.AspNetCore.All 2.1.1 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:10.8411800Z   Microsoft.AspNetCore.All 2.1.2 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:10.8411990Z   Microsoft.AspNetCore.All 2.1.3 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:10.8412180Z   Microsoft.AspNetCore.All 2.1.4 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:10.8412320Z   Microsoft.AspNetCore.All 2.1.5 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:10.8412740Z   Microsoft.AspNetCore.All 2.1.6 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:10.8412940Z   Microsoft.AspNetCore.All 2.2.0 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:10.8413070Z   Microsoft.AspNetCore.App 2.1.0 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:10.8413320Z   Microsoft.AspNetCore.App 2.1.1 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:10.8413540Z   Microsoft.AspNetCore.App 2.1.2 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:10.8413720Z   Microsoft.AspNetCore.App 2.1.3 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:10.8413860Z   Microsoft.AspNetCore.App 2.1.4 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:10.8414050Z   Microsoft.AspNetCore.App 2.1.5 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:10.8414240Z   Microsoft.AspNetCore.App 2.1.6 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:10.8414390Z   Microsoft.AspNetCore.App 2.2.0 [/Users/vsts/.dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:10.8414590Z   Microsoft.NETCore.App 1.0.4 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8414780Z   Microsoft.NETCore.App 1.0.5 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8414970Z   Microsoft.NETCore.App 1.0.7 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8415110Z   Microsoft.NETCore.App 1.0.8 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8415300Z   Microsoft.NETCore.App 1.0.9 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8415490Z   Microsoft.NETCore.App 1.0.10 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8415620Z   Microsoft.NETCore.App 1.0.11 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8415820Z   Microsoft.NETCore.App 1.0.12 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8416020Z   Microsoft.NETCore.App 1.0.13 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8416210Z   Microsoft.NETCore.App 1.1.1 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8416340Z   Microsoft.NETCore.App 1.1.2 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8416530Z   Microsoft.NETCore.App 1.1.4 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8416710Z   Microsoft.NETCore.App 1.1.5 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8416850Z   Microsoft.NETCore.App 1.1.6 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8417050Z   Microsoft.NETCore.App 1.1.7 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8417250Z   Microsoft.NETCore.App 1.1.8 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8417430Z   Microsoft.NETCore.App 1.1.9 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8417570Z   Microsoft.NETCore.App 1.1.10 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8417760Z   Microsoft.NETCore.App 2.0.0 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8417950Z   Microsoft.NETCore.App 2.0.3 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8418080Z   Microsoft.NETCore.App 2.0.5 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8418270Z   Microsoft.NETCore.App 2.0.6 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8418680Z   Microsoft.NETCore.App 2.0.7 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8418870Z   Microsoft.NETCore.App 2.0.9 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8419000Z   Microsoft.NETCore.App 2.1.0 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8419200Z   Microsoft.NETCore.App 2.1.1 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8419380Z   Microsoft.NETCore.App 2.1.2 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8419690Z   Microsoft.NETCore.App 2.1.3 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8419900Z   Microsoft.NETCore.App 2.1.4 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8420100Z   Microsoft.NETCore.App 2.1.5 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8420280Z   Microsoft.NETCore.App 2.1.6 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8420420Z   Microsoft.NETCore.App 2.2.0 [/Users/vsts/.dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:10.8420560Z \r\n2019-01-15T12:40:10.8420660Z To install additional .NET Core runtimes or SDKs:\r\n2019-01-15T12:40:10.8421440Z   https://aka.ms/dotnet-download\r\n```\r\n\r\n`dotnet --info` output on Linux:\r\n```\r\n2019-01-15T12:40:55.2700588Z .NET Core SDK (reflecting any global.json):\r\n2019-01-15T12:40:55.2701382Z  Version:   2.2.101\r\n2019-01-15T12:40:55.2701784Z  Commit:    236713b0b7\r\n2019-01-15T12:40:55.2702057Z \r\n2019-01-15T12:40:55.2707358Z Runtime Environment:\r\n2019-01-15T12:40:55.2707926Z  OS Name:     ubuntu\r\n2019-01-15T12:40:55.2708066Z  OS Version:  16.04\r\n2019-01-15T12:40:55.2708187Z  OS Platform: Linux\r\n2019-01-15T12:40:55.7105409Z  RID:         ubuntu.16.04-x64\r\n2019-01-15T12:40:55.7402847Z  Base Path:   /usr/share/dotnet/sdk/2.2.101/\r\n2019-01-15T12:40:55.7446193Z \r\n2019-01-15T12:40:55.7446569Z Host (useful for support):\r\n2019-01-15T12:40:55.7446749Z   Version: 2.2.0\r\n2019-01-15T12:40:55.7446945Z   Commit:  1249f08fed\r\n2019-01-15T12:40:55.7447106Z \r\n2019-01-15T12:40:55.7447260Z .NET Core SDKs installed:\r\n2019-01-15T12:40:55.7447454Z   1.0.4 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7447643Z   1.1.4 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7447796Z   1.1.5 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7448168Z   1.1.7 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7448401Z   1.1.8 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7448602Z   1.1.9 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7448750Z   1.1.10 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7448938Z   1.1.11 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7449308Z   2.0.0 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7449497Z   2.0.3 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7450250Z   2.1.2 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7450551Z   2.1.4 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7450783Z   2.1.100 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7450976Z   2.1.101 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7451212Z   2.1.102 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7451443Z   2.1.103 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7451671Z   2.1.104 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7451860Z   2.1.105 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7452089Z   2.1.200 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7452496Z   2.1.201 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7452790Z   2.1.202 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7452983Z   2.1.300 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7453229Z   2.1.301 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7453620Z   2.1.302 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7453772Z   2.1.400 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7454132Z   2.1.401 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7454475Z   2.1.402 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7454646Z   2.1.403 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7454785Z   2.1.500 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7455142Z   2.1.502 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7455329Z   2.2.100 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7455513Z   2.2.101 [/usr/share/dotnet/sdk]\r\n2019-01-15T12:40:55.7455631Z \r\n2019-01-15T12:40:55.7455814Z .NET Core runtimes installed:\r\n2019-01-15T12:40:55.7455979Z   Microsoft.AspNetCore.All 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:55.7456198Z   Microsoft.AspNetCore.All 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:55.7456633Z   Microsoft.AspNetCore.All 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:55.7457018Z   Microsoft.AspNetCore.All 2.1.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:55.7457200Z   Microsoft.AspNetCore.All 2.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:55.7457417Z   Microsoft.AspNetCore.All 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:55.7457635Z   Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:55.7457843Z   Microsoft.AspNetCore.All 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2019-01-15T12:40:55.7458225Z   Microsoft.AspNetCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:55.7458395Z   Microsoft.AspNetCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:55.7458606Z   Microsoft.AspNetCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:55.7458823Z   Microsoft.AspNetCore.App 2.1.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:55.7459037Z   Microsoft.AspNetCore.App 2.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:55.7459390Z   Microsoft.AspNetCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:55.7459781Z   Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:55.7460470Z   Microsoft.AspNetCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2019-01-15T12:40:55.7460784Z   Microsoft.NETCore.App 1.0.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7461020Z   Microsoft.NETCore.App 1.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7461283Z   Microsoft.NETCore.App 1.0.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7461545Z   Microsoft.NETCore.App 1.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7461813Z   Microsoft.NETCore.App 1.0.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7462041Z   Microsoft.NETCore.App 1.0.11 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7462306Z   Microsoft.NETCore.App 1.0.12 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7462923Z   Microsoft.NETCore.App 1.0.13 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7463359Z   Microsoft.NETCore.App 1.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7463608Z   Microsoft.NETCore.App 1.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7464033Z   Microsoft.NETCore.App 1.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7464251Z   Microsoft.NETCore.App 1.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7464639Z   Microsoft.NETCore.App 1.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7464860Z   Microsoft.NETCore.App 1.1.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7465076Z   Microsoft.NETCore.App 1.1.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7465300Z   Microsoft.NETCore.App 1.1.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7465676Z   Microsoft.NETCore.App 2.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7465892Z   Microsoft.NETCore.App 2.0.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7466069Z   Microsoft.NETCore.App 2.0.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7466372Z   Microsoft.NETCore.App 2.0.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7466606Z   Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7466827Z   Microsoft.NETCore.App 2.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7467003Z   Microsoft.NETCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7467392Z   Microsoft.NETCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7468048Z   Microsoft.NETCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7468259Z   Microsoft.NETCore.App 2.1.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7468428Z   Microsoft.NETCore.App 2.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7468788Z   Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7468987Z   Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7469363Z   Microsoft.NETCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2019-01-15T12:40:55.7469491Z \r\n2019-01-15T12:40:55.7470849Z To install additional .NET Core runtimes or SDKs:\r\n2019-01-15T12:40:55.7471611Z   https://aka.ms/dotnet-download\r\n```\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10607","RelatedDescription":"Open issue \"dotnet build -r fails on macOS/Linux, succeeds on Windows with PackAsTool\" (#10607)"},{"Id":"399240667","IsPullRequest":true,"CreatedAt":"2019-01-15T08:45:03","Actor":"v-zbsail","Number":"10605","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli master | 20190115","State":"open","Body":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/10605","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/cli master | 20190115\" (#10605)"},{"Id":"398500899","IsPullRequest":true,"CreatedAt":"2019-01-15T06:31:13","Actor":"wli3","Number":"10600","RawContent":null,"Title":"Add specific guide for no manifest","State":"closed","Body":"fix https://github.com/dotnet/cli/issues/10499\r\n\r\nActual message:\r\n```\r\nCannot find any manifests file. Searched:\r\n/.config/dotnet-tools.json\r\n/dotnet-tools.json\r\nNo tools were restored.\r\n\r\nCannot find any manifests file. Searched:\r\n/.config/dotnet-tools.json\r\n/dotnet-tools.json\r\nIf you want to install a global tool, add '-g'. If you want to add to a tool manifest, you must first create it with 'dotnet new tool-manifest'.\r\n```","Url":"https://github.com/dotnet/cli/pull/10600","RelatedDescription":"Closed or merged PR \"Add specific guide for no manifest\" (#10600)"},{"Id":"398955111","IsPullRequest":false,"CreatedAt":"2019-01-14T15:59:56","Actor":"tylerphelan","Number":"10602","RawContent":null,"Title":"Dotnet publish with -r ubuntu-x64 and --self-contained=false fails to find framework","State":"open","Body":"## Steps to reproduce\r\n```\r\n$ docker run -it ubuntu:18.04 bash\r\n$ apt-get update\r\n$ apt-get install liblttng-ust0 libcurl3 libssl1.0.0 libkrb5-3 zlib1g libicu60 -y\r\n$ dotnet --version\r\n> 2.2.101\r\n$ dotnet --list-runtimes\r\n> Microsoft.AspNetCore.All 2.2.1 [/tmp/dotnet/shared/Microsoft.AspNetCore.All]\r\n> Microsoft.AspNetCore.App 2.2.1 [/tmp/dotnet/shared/Microsoft.AspNetCore.App]\r\n> Microsoft.NETCore.App 2.2.1 [/tmp/dotnet/shared/Microsoft.NETCore.App]\r\n$ dotnet new webapi\r\n$ dotnet publish -r ubuntu-x64 --self-contained=false\r\n$ cd bin/Debug/netcoreapp2.2/ubuntu-x64/publish/\r\n$ ./project --server.urls http://0.0.0.0:8080\r\n> The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      /tmp/project/bin/Debug/netcoreapp2.2/ubuntu-x64/publish/\r\n  - Installing .NET Core prerequisites might help resolve this problem:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n```\r\n\r\n## Expected  behavior\r\n\r\nWe are not sure if this is a valid workflow but we expected `Microsoft.AspNetCore.App` to be found.\r\n\r\n## Actual behavior\r\n\r\nThe error seen above with missing framework.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    29ae5ac2c2\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  14.04\r\n OS Platform: Linux\r\n RID:         ubuntu.14.04-x64\r\n Base Path:   /tmp/dotnet/sdk/2.2.101/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.2.101 [/tmp/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.1 [/tmp/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.1 [/tmp/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/tmp/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\nThis is using an SDK built from source against ubuntu 18.04 and everything else seems to be working: https://github.com/dotnet/cli/blob/master/Documentation/project-docs/developer-guide.md#buildingrunning\r\n\r\nI don't see why the framework wouldn't be found. Should this workflow with `dotnet publish -r ubuntu-x64 --self-contained=false` be valid? I've found some other issues where the `-r` flag and `--self-contained=false` are used together. What should we expect to happen in this case? Is the app packaged with the specific runtime but not entirely self-contained?\r\n\r\nThanks for the help!","Url":"https://github.com/dotnet/cli/issues/10602","RelatedDescription":"Open issue \"Dotnet publish with -r ubuntu-x64 and --self-contained=false fails to find framework\" (#10602)"},{"Id":"398444559","IsPullRequest":true,"CreatedAt":"2019-01-11T20:42:01","Actor":"aawadall","Number":"10599","RawContent":null,"Title":"Added triage helpers badge","State":"open","Body":"skip ci please\r\n\r\nAdded triage helpers badge to README.md file \r\n","Url":"https://github.com/dotnet/cli/pull/10599","RelatedDescription":"Open PR \"Added triage helpers badge\" (#10599)"},{"Id":"398253778","IsPullRequest":true,"CreatedAt":"2019-01-11T17:44:58","Actor":"halex2005","Number":"10594","RawContent":null,"Title":"update NUnit3.DotNetNew.Template dependency version to 1.6.1","State":"closed","Body":"Update dotnet-new-nunit dependency version to latest 1.6.1 (requested in https://github.com/nunit/dotnet-new-nunit/issues/21).\r\n\r\nIs `master` branch right place for .NET Core 3.0 development?\r\n\r\nI didn't found `BundledTemplates.props` and `DependencyVersions.props` files in `master` branch. Where are them now?","Url":"https://github.com/dotnet/cli/pull/10594","RelatedDescription":"Closed or merged PR \"update NUnit3.DotNetNew.Template dependency version to 1.6.1\" (#10594)"},{"Id":"398278075","IsPullRequest":false,"CreatedAt":"2019-01-11T17:43:09","Actor":"skovsende","Number":"10595","RawContent":null,"Title":"ained runtime","State":"closed","Body":"## Steps to reproduce\r\n\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10595","RelatedDescription":"Closed issue \"ained runtime\" (#10595)"},{"Id":"398280664","IsPullRequest":true,"CreatedAt":"2019-01-11T17:37:48","Actor":"dotnet-maestro[bot]","Number":"10596","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19060.8\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10596","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10596)"},{"Id":"398314692","IsPullRequest":false,"CreatedAt":"2019-01-11T14:37:26","Actor":"eiriktsarpalis","Number":"10598","RawContent":null,"Title":"dotnet sln builds using incorrect project configuration for transitive dependencies","State":"open","Body":"## Steps to reproduce\r\n\r\n```\r\nmkdir repro &&\r\ncd repro &&\r\ndotnet new classlib -o projA &&\r\ndotnet new classlib -o projB &&\r\ndotnet add projB reference projA &&\r\ndotnet new sln &&\r\ndotnet sln repro.sln add projB &&\r\ndotnet build repro.sln -c Release\r\n```\r\n## Expected  behavior\r\n\r\nShould build `projA` and `projB` using `Release` configuration.\r\n\r\n## Actual behavior\r\n\r\n`projA` is built using `Debug` and `projB` is built using `Release`.\r\n```\r\n$ dotnet build repro.sln -c Release\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projB\\projB.csproj...\r\n  Restore completed in 52.68 ms for C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projA\\projA.csproj.\r\n  Restore completed in 210.78 ms for C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projB\\projB.csproj.\r\n  projA -> C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projA\\bin\\Debug\\netstandard2.0\\projA.dll\r\n  projB -> C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projB\\bin\\Release\\netstandard2.0\\projB.dll\r\n```\r\nThe fact that this behaviour is incorrect is corroborated by the fact that project-driven builds do not exhibit this behaviour:\r\n```\r\n$ dotnet build projB/ -c Release\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 54.32 ms for C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projB\\projB.csproj.\r\n  Restore completed in 54.32 ms for C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projA\\projA.csproj.\r\n  projA -> C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projA\\bin\\Release\\netstandard2.0\\projA.dll\r\n  projB -> C:\\Users\\eirik.tsarpalis\\devel\\private\\repro\\repro\\projB\\bin\\Release\\netstandard2.0\\projB.dll\r\n```\r\n\r\n## Environment data\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10598","RelatedDescription":"Open issue \"dotnet sln builds using incorrect project configuration for transitive dependencies\" (#10598)"},{"Id":"398280790","IsPullRequest":true,"CreatedAt":"2019-01-11T13:04:54","Actor":"dotnet-maestro[bot]","Number":"10597","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19060.2\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19061.4\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19062.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19062.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19062.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19065.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10597","RelatedDescription":"Open PR \"Update dependencies from dotnet/sdk\" (#10597)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"396610837","IsPullRequest":true,"CreatedAt":"2019-01-16T21:17:03","Actor":"wtgodbe","Number":"1047","RawContent":null,"Title":"Bump AssemblyVersion for nestandard.dll to 2.1.0.0","State":"closed","Body":"Fixes https://github.com/dotnet/standard/issues/929\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1047","RelatedDescription":"Closed or merged PR \"Bump AssemblyVersion for nestandard.dll to 2.1.0.0\" (#1047)"},{"Id":"399549465","IsPullRequest":false,"CreatedAt":"2019-01-15T21:45:54","Actor":"kaby76","Number":"1053","RawContent":null,"Title":"Qs on NET Standard, Formal Specifications, Type Equivalence, etc.","State":"open","Body":"I've started porting (rewriting) the Net Core framework to the GPU. Part of this very large task is to go through the framework and verify that it indeed satisfies the Net Standard specification because I really don't trust anything/anyone. So, I have several questions regarding Net Standard.\r\n\r\n1) According to Microsoft documentation (https://docs.microsoft.com/en-us/dotnet/standard/net-standard), “[t]he .NET Standard is a formal specification of .NET APIs that are intended to be available on all .NET implementations. The motivation behind the .NET Standard is establishing greater uniformity in the .NET ecosystem. ECMA 335 continues to establish uniformity for .NET implementation behavior, but there's no similar spec for the .NET Base Class Libraries (BCL) for .NET library implementations.”\r\n\r\nQ: Exactly where is the “formal specification” of the API? Is it the MD file for a particular version (e.g., https://raw.githubusercontent.com/dotnet/standard/master/docs/versions/netstandard2.0_ref.md)? Is it the collection of C# files with stub implementations (e.g., the files in https://github.com/dotnet/standard/tree/master/src/netstandard/ref)? Or, is it something else?\r\n\r\n2) Assuming that the C# files in https://github.com/dotnet/standard/tree/master/src/netstandard/ref is the formal definition. I wrote a CSPROJ to build an assembly for the current state of the decls. Then, I wrote a program to go through a framework, following reference assemblies to implementation assemblies, and output a sorted list of all types, all methods, all attributes, for public decls. I compared the reference and implementation assemblies for Net Core with the Standard set forth in the C# code. And yes, there are some non-trivial differences, mostly because the standard is evolving.\r\n\r\nThe following are general questions of type equivalence.\r\n\r\nQ: If there's an attribute (\"[...]\") on a type is in Standard, but missing on the type in Core, does Core still satisfy the Standard?\r\n\r\nQ: If a method and/or type exists in Core, but not in Standard, does the implementation still satisfy the Standard? In other words, can an implementation provide \"extra\" and still satisfy Standard?\r\n\r\nThe full list of the type dump for Standard and Core assemblies is here (https://1drv.ms/f/s!Atb3HX_AxX9ZgaxT-m221N6ut285Vw).\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1053","RelatedDescription":"Open issue \"Qs on NET Standard, Formal Specifications, Type Equivalence, etc.\" (#1053)"},{"Id":"393267915","IsPullRequest":true,"CreatedAt":"2019-01-14T18:45:00","Actor":"ViktorHofer","Number":"1040","RawContent":null,"Title":"Remove the manual config system","State":"closed","Body":"Fixes https://github.com/dotnet/standard/issues/1032","Url":"https://github.com/dotnet/standard/pull/1040","RelatedDescription":"Closed or merged PR \"Remove the manual config system\" (#1040)"},{"Id":"392986163","IsPullRequest":false,"CreatedAt":"2019-01-14T18:45:00","Actor":"ViktorHofer","Number":"1032","RawContent":null,"Title":"Remove slim configuration system and stop overloading Configuration","State":"closed","Body":"We should stop overloading the `Configuration` property in favor of the right msbuild properties and remove the `ConfigurationGroup` property to enable native VS support and remove a lot of obsolete stuff.\r\n\r\n```\r\n  <PropertyGroup Condition=\"'$(Configuration)'==''\">\r\n    <ConfigurationGroup Condition=\"'$(ConfigurationGroup)'==''\">Debug</ConfigurationGroup>\r\n    <Configuration>$(ConfigurationGroup)</Configuration>\r\n    <Configuration Condition=\"'$(TargetGroup)'!=''\">$(TargetGroup)_$(Configuration)</Configuration>\r\n    <Configuration Condition=\"'$(OSGroup)'!='' and '$(OSGroup)'!='AnyOS'\">$(OSGroup)_$(Configuration)</Configuration>\r\n  </PropertyGroup>\r\n```\r\n\r\ncc @ericstj @wtgodbe ","Url":"https://github.com/dotnet/standard/issues/1032","RelatedDescription":"Closed issue \"Remove slim configuration system and stop overloading Configuration\" (#1032)"},{"Id":"398564136","IsPullRequest":false,"CreatedAt":"2019-01-12T15:37:14","Actor":"netspiri","Number":"1052","RawContent":null,"Title":"Incorrect dll being copied","State":"open","Body":"I have\r\n\r\n- ProjectA targeting .Net Standard 2.0 making use of nuget library where the dlls for the different frameworks are named differently\r\n- ProjectB targeting .Net Standard 2.0 references ProjectA\r\n- ProjectC targeting .Net Framework 4.7.2 references ProjectB\r\n- ProjectD targeting .Net Framework 4.7.2 and is a Console app referencing ProjectC\r\n\r\nIf I run ProjectD I get the infamous \"Could not load file or assembly\" for Aspose.Email.Core.dll.\r\n\r\nI played around <RestoreProjectStyle>PackageReference</RestoreProjectStyle> in ProjectC and ProjectD but this results in .net framework dll (i.e Aspose.Email.dll) being copied over from the nuget package and not the .net standard dll (Aspose.Email.Core.dll).  I did not play with binding redirects because I do not think this is related.\r\n\r\nI've migrated manually ProjectC and ProjectD to the new csproj style but this had no effect.\r\n\r\nI do not want to end up with ProjectD referencing the required dlls directly because there must \"the proper way of doing it\".\r\n\r\nI have therefore uploaded a clean barebones project to https://bitbucket.org/netspiri/projectreferencestest.git , so as to see how the experts would do it, in the hope that this might help others. \r\n\r\nI've attached also the output of msbuild ProjectD.csproj /t:rebuild /bl\r\n\r\nIt would be nice if the experts would guide trough thier troubleshooting process.\r\n\r\n[log.txt](https://github.com/dotnet/standard/files/2752202/log.txt)\r\n[msbuild.zip](https://github.com/dotnet/standard/files/2752203/msbuild.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1052","RelatedDescription":"Open issue \"Incorrect dll being copied\" (#1052)"},{"Id":"396798571","IsPullRequest":false,"CreatedAt":"2019-01-11T01:19:54","Actor":"duncand","Number":"1050","RawContent":null,"Title":"Proposal to rename Standard 2.1 to 2.2, make 2.1 a Framework compatible subset","State":"closed","Body":"I'm looking to provide input on .NET Standard and this appears to be the best place.\r\n\r\nSee https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/ for reference.\r\n\r\nI propose that what is currently planned for .NET Standard 2.1 be pushed back to .NET Standard 2.2, and that .NET Standard 2.1 instead just have the subset of those changes that are implementable on .NET Framework.\r\n\r\nWhile going forward, .NET Standard after 2.0 is mainly adding new features that are not practical to implement in .NET Framework, some of the proposals for 2.1 contained bringing out some things that already existed but missed the 2.0 window.\r\n\r\nIf we do what I propose, then we have a last chance to increase the API surface that can run everywhere, before it is permanently shut out due to releasing a .NET Standard version that Framework can't run, given that each increasing Standard version is a superset of what came before.","Url":"https://github.com/dotnet/standard/issues/1050","RelatedDescription":"Closed issue \"Proposal to rename Standard 2.1 to 2.2, make 2.1 a Framework compatible subset\" (#1050)"},{"Id":"391463924","IsPullRequest":false,"CreatedAt":"2019-01-11T00:24:30","Actor":"dmitriyse","Number":"1024","RawContent":null,"Title":"[Proposal] .Net Standard 3.0.0 with breaking changes, semantic versioning and migration toolset","State":"closed","Body":"Please open new .NetStandard branch with deep refresh of .Net API surface.\r\nCurrently .NetStandard 2.0 and it's successor .NetStandard 2.1 contains everything that were added in .net since version 1.0. Some API is already outdated and another will become outdated soon.\r\n\r\n.Net Standard 2.1 have some positive movements. It's drops some components to out of standard into additional components.\r\n\r\nBut it's not enough. It's time to stay in .Net Standard only good and modern parts.\r\nFor example:\r\n```CSharp\r\npublic class List<T>\r\n{\r\n     // ...\r\n     void CopyTo(T[] array);\r\n     // ...\r\n}\r\n```\r\ncan be replaced with:\r\n\r\n```CSharp\r\npublic class List<T>\r\n{\r\n     // ...\r\n     void CopyTo(Span<T> output);\r\n     // ...\r\n}\r\n```\r\nAssemblies targeting .NetStandard 2.0, .NetStandard 2.1 and proposed .NetStandard 3.0.0 should be capable to work side-by-side inside the same AppDomain.\r\n\r\nTODO: Add diagram.\r\n","Url":"https://github.com/dotnet/standard/issues/1024","RelatedDescription":"Closed issue \"[Proposal] .Net Standard 3.0.0 with breaking changes, semantic versioning and migration toolset\" (#1024)"},{"Id":"394796330","IsPullRequest":false,"CreatedAt":"2019-01-11T00:23:25","Actor":"MV10","Number":"1041","RawContent":null,"Title":"System.MathF missing in .NET Standard 2.1 README","State":"closed","Body":"Minor, but `System.MathF` is missing from the [README](https://github.com/dotnet/standard/blob/master/docs/planning/netstandard-2.1/README.md). I figured it would be in the Miscellaneous list at a minimum. (As I understand it, this is still on schedule for .NET Standard 2.1 per  https://github.com/dotnet/corefx/issues/15830, correct?)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1041","RelatedDescription":"Closed issue \"System.MathF missing in .NET Standard 2.1 README\" (#1041)"},{"Id":"396675175","IsPullRequest":false,"CreatedAt":"2019-01-11T00:22:05","Actor":"Entomy","Number":"1049","RawContent":null,"Title":"String Enhancements","State":"closed","Body":"In .NET Core >=2.1 there exists a `.Join()` method that takes strings and chars, and a `.Split()` method that takes strings and chars. However in .NET Standard, `.Join()` only accepts strings, and `.Split()` only accepts chars. This is an odd seeming, and inconvenient, limitation. Can this be added to a future version?","Url":"https://github.com/dotnet/standard/issues/1049","RelatedDescription":"Closed issue \"String Enhancements\" (#1049)"},{"Id":"397146216","IsPullRequest":false,"CreatedAt":"2019-01-08T23:57:44","Actor":"dsplaisted","Number":"1051","RawContent":null,"Title":"Create targeting pack for .NET Standard","State":"open","Body":"For .NET Core 3.0, we expect to separate targeting packs, which contain the assets needed at build time when targeting .NET Core 3.0 (for example, reference assemblies and intellisense documentation) from \"runtime packs\", which will include the platform-specific runtime components for .NET Core 3.  See dotnet/cli#10006, and [dotnet/designs#50](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e)\r\n\r\nWe will have targeting pack for each shared framework (.NET Core, ASP.NET Core, and WindowsDesktop), as well as for .NET Standard.  This issue tracks the work required a .NET Standard targeting pack.  Ideally, we should create targeting packs for both .NET Standard 2.1 and 2.0.\r\n\r\nThe work required includes:\r\n\r\n- A new NuGet package including the targeting pack assets.  This should include the reference assemblies, intellisense documentation, and platform manifest file.  The current straw man proposal for the package ID is `Microsoft.NETCore.App.Ref`\r\n- Installers for each supported installer format (msi, deb, pkg, and rpm), which lay out the targeting pack files under `<DOTNET_ROOT>/packs/<PackageId>/version`.  These installers will be bundled or depended on by the corresponding .NET Core SDK installers.\r\n\r\nSome of the details (such as package layout, names, etc) are still [under design](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e) and may change slightly.","Url":"https://github.com/dotnet/standard/issues/1051","RelatedDescription":"Open issue \"Create targeting pack for .NET Standard\" (#1051)"},{"Id":"396646204","IsPullRequest":true,"CreatedAt":"2019-01-07T22:02:02","Actor":"wtgodbe","Number":"1048","RawContent":null,"Title":" Move source items into src folder","State":"closed","Body":"With this, we group all source items into an `src` folder to match the convention of other repos. I've done a diff of the `artifacts` dir before & after this change to confirm that everything still looks like the same. @ViktorHofer @danmosemsft @terrajobst PTAL\r\n\r\nFixes https://github.com/dotnet/standard/issues/1037","Url":"https://github.com/dotnet/standard/pull/1048","RelatedDescription":"Closed or merged PR \" Move source items into src folder\" (#1048)"},{"Id":"393015237","IsPullRequest":false,"CreatedAt":"2019-01-07T22:02:02","Actor":"ViktorHofer","Number":"1037","RawContent":null,"Title":"Group source items in a src folder","State":"closed","Body":"We should move\r\n- netstandard\r\n- platforms\r\n- apicompat\r\n- dir.traversal.targets\r\n- package.builds\r\n- src.builds\r\n\r\ninto a `src` folder to align with other dotnet repos.\r\n\r\ncc @wtgodbe @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/issues/1037","RelatedDescription":"Closed issue \"Group source items in a src folder\" (#1037)"},{"Id":"396598897","IsPullRequest":true,"CreatedAt":"2019-01-07T18:47:02","Actor":"wtgodbe","Number":"1046","RawContent":null,"Title":"Update APICompat baseline","State":"closed","Body":"I see these updates to the APICompat baselines after building from clean - I've confirmed that they weren't present before https://github.com/dotnet/standard/commit/dbb3e847a6dd09a8c9ec0206463ed1b848a5c90b. I figured I'd open a PR to use first as an easy way to view the diff & discuss, then to take into master if we decide it's the right thing. @ViktorHofer did you notice these locally when fixing up APICompat/GenAPI?","Url":"https://github.com/dotnet/standard/pull/1046","RelatedDescription":"Closed or merged PR \"Update APICompat baseline\" (#1046)"},{"Id":"396591596","IsPullRequest":false,"CreatedAt":"2019-01-07T18:06:51","Actor":"wtgodbe","Number":"1045","RawContent":null,"Title":"Convert seed.sh/.cmd files to proj files & update GenAPI invocations","State":"open","Body":"We should convert files like https://github.com/dotnet/standard/blob/8ca3d4c0c9599186d50196781484312176a9b2ad/platforms/xamarin.android/seed.sh to `.proj` files that can be built on-demand (either by direct invocation of `dotnet msbuild`, or a wrapper .ps1/.sh script that builds the project). This way we'll have access to the up-to-date version of `GenAPI`. We should also update the invocation of GenAPI to match the new standard introduced by https://github.com/dotnet/arcade/pull/1676\r\n\r\nCC @ViktorHofer ","Url":"https://github.com/dotnet/standard/issues/1045","RelatedDescription":"Open issue \"Convert seed.sh/.cmd files to proj files & update GenAPI invocations\" (#1045)"},{"Id":"396287501","IsPullRequest":false,"CreatedAt":"2019-01-06T19:38:08","Actor":"gpcaretti","Number":"1044","RawContent":null,"Title":"FAQ: how to understand a package is compatible with NETStandard","State":"open","Body":"I am developing a library bases on .NETstandard 2.0.\r\n\r\nMy question is: if in my library I need to refer a class defined outside the .NETstandard library (e.g. the `System.ComponentModel.DataAnnotations.DataTypeAttribute` class), how do I understand if I do not break the multiplatfom compatibility of my library by referring the external library `System.ComponentModel.DataAnnotations`?","Url":"https://github.com/dotnet/standard/issues/1044","RelatedDescription":"Open issue \"FAQ: how to understand a package is compatible with NETStandard\" (#1044)"},{"Id":"396025237","IsPullRequest":true,"CreatedAt":"2019-01-04T19:25:54","Actor":"ViktorHofer","Number":"1043","RawContent":null,"Title":"Fix GenAPI invocation with new args","State":"closed","Body":"Also need to use DARC to get a GenApi fix in.","Url":"https://github.com/dotnet/standard/pull/1043","RelatedDescription":"Closed or merged PR \"Fix GenAPI invocation with new args\" (#1043)"},{"Id":"395644781","IsPullRequest":true,"CreatedAt":"2019-01-04T16:29:48","Actor":"ViktorHofer","Number":"1042","RawContent":null,"Title":"Respect ApiCompat cmd changes","State":"closed","Body":"Depends on https://github.com/dotnet/arcade/pull/1676","Url":"https://github.com/dotnet/standard/pull/1042","RelatedDescription":"Closed or merged PR \"Respect ApiCompat cmd changes\" (#1042)"},{"Id":"393264404","IsPullRequest":true,"CreatedAt":"2018-12-26T21:14:18","Actor":"terrajobst","Number":"1039","RawContent":null,"Title":"Fix representation of enum values","State":"closed","Body":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n***This doesn't change any API surface but makes diffs more human readable.***","Url":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Closed or merged PR \"Fix representation of enum values\" (#1039)"},{"Id":"393009607","IsPullRequest":false,"CreatedAt":"2018-12-21T01:08:29","Actor":"ViktorHofer","Number":"1036","RawContent":null,"Title":"Disable Jenkins","State":"closed","Body":"We need to disable Jenkins so I doesn't get queued in a PR anymore and if not already done point mc.dot.net to the new Azure DevOps run. I also noticed that the last official build happened 12/3, maybe the cron job is not configured right?","Url":"https://github.com/dotnet/standard/issues/1036","RelatedDescription":"Closed issue \"Disable Jenkins\" (#1036)"},{"Id":"393171059","IsPullRequest":true,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1038","RawContent":null,"Title":"Add APICompat run for NetStandard2.0","State":"closed","Body":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029","Url":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Closed or merged PR \"Add APICompat run for NetStandard2.0\" (#1038)"},{"Id":"392786865","IsPullRequest":false,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1029","RawContent":null,"Title":"Add ApiCompat run for netstandard2.0","State":"closed","Body":"We should add an APICompat run that checks against 2.0, similar the ones we already have for 1.0-1.6: https://github.com/dotnet/standard/blob/master/apicompat/baselines/ApiCompatBaseline.netstandard1.6.txt","Url":"https://github.com/dotnet/standard/issues/1029","RelatedDescription":"Closed issue \"Add ApiCompat run for netstandard2.0\" (#1029)"},{"Id":"393005614","IsPullRequest":true,"CreatedAt":"2018-12-20T18:07:43","Actor":"ViktorHofer","Number":"1035","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\nFailing CI jobs are leftovers: https://github.com/dotnet/standard/issues/1036\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1035","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1035)"},{"Id":"393001679","IsPullRequest":true,"CreatedAt":"2018-12-20T11:31:22","Actor":"ViktorHofer","Number":"1034","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1034","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1034)"},{"Id":"392982975","IsPullRequest":false,"CreatedAt":"2018-12-20T10:31:53","Actor":"ViktorHofer","Number":"1031","RawContent":null,"Title":"Remove depproj approach and enable project restore","State":"open","Body":"As discussed in another PR I think it makes sense to remove the depproj approach here in the standard repo and follow the usual way of referencing packages directly in the respective project, in this case netstandard.csproj. Also the netstandard.builds file which restores for different frameworks can be incorporated in the csproj by adding a `TargetFrameworks` property and right PackageReference conditions. \r\n\r\ncc @wtgodbe @ericstj ","Url":"https://github.com/dotnet/standard/issues/1031","RelatedDescription":"Open issue \"Remove depproj approach and enable project restore\" (#1031)"},{"Id":"392822069","IsPullRequest":true,"CreatedAt":"2018-12-20T10:07:40","Actor":"wtgodbe","Number":"1030","RawContent":null,"Title":"Delete CI & redundant publish file","State":"closed","Body":"This deletes the old `netci.groovy` file, since we're using Azure DevOps for CI now. It also deletes `publish.msbuild`, which isn't used anywhere.\r\n\r\n@ViktorHofer PTAL","Url":"https://github.com/dotnet/standard/pull/1030","RelatedDescription":"Closed or merged PR \"Delete CI & redundant publish file\" (#1030)"},{"Id":"391885087","IsPullRequest":true,"CreatedAt":"2018-12-19T23:33:25","Actor":"wtgodbe","Number":"1027","RawContent":null,"Title":"Build Standard entirely against Arcade, without Buildtools","State":"closed","Body":"This cuts out buildtools entirely from the Standard repo, so that we fully rely on the Arcade SDK to build against instead. It replaces the functionality for code analyzers, `ValidateApiCompatForSrc`, and the build tasks.\r\n\r\n@ericstj @safern @danmosemsft @ViktorHofer @chcosta PTAL\r\n\r\nCC @karelz ","Url":"https://github.com/dotnet/standard/pull/1027","RelatedDescription":"Closed or merged PR \"Build Standard entirely against Arcade, without Buildtools\" (#1027)"},{"Id":"392146465","IsPullRequest":true,"CreatedAt":"2018-12-18T13:01:40","Actor":"dotnet-maestro[bot]","Number":"1028","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18617.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18617.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18618.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18618.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1028","RelatedDescription":"Open PR \"Update dependency files\" (#1028)"},{"Id":"391702003","IsPullRequest":true,"CreatedAt":"2018-12-17T15:07:31","Actor":"dotnet-maestro[bot]","Number":"1026","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18616.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18616.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1026","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1026)"},{"Id":"391465145","IsPullRequest":true,"CreatedAt":"2018-12-16T19:53:13","Actor":"dotnet-maestro[bot]","Number":"1025","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18615.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18615.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1025","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1025)"},{"Id":"391376312","IsPullRequest":true,"CreatedAt":"2018-12-15T13:41:30","Actor":"dotnet-maestro[bot]","Number":"1023","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18614.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18614.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1023","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1023)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"399940775","IsPullRequest":true,"CreatedAt":"2019-01-17T02:39:40","Actor":"Dotnet-GitSync-Bot","Number":"34627","RawContent":null,"Title":"Mirror changes from dotnet/corert,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @benaadams","Url":"https://github.com/dotnet/corefx/pull/34627","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,coreclr\" (#34627)"},{"Id":"400083692","IsPullRequest":false,"CreatedAt":"2019-01-17T02:27:19","Actor":"swaroop-sridhar","Number":"34633","RawContent":null,"Title":"Use NativeLibrary APIs where possible","State":"open","Body":"Use `System.Runtime.Interop.NativeLibray`  APIs instead of directly using native calls when possible in CoreFX libraries.\r\n\r\nThere are some calls to `dlopen` in CoreFX libraries, especially in System.Drawing, where it would be good to use the `NativeLibrary` API. However, these calls may run into the [limitation](https://github.com/dotnet/coreclr/issues/22028) that there is no way to pass additional flags to `dlopen` via the `NativeLibrary.Load`. ","Url":"https://github.com/dotnet/corefx/issues/34633","RelatedDescription":"Open issue \"Use NativeLibrary APIs where possible\" (#34633)"},{"Id":"400072563","IsPullRequest":false,"CreatedAt":"2019-01-17T01:31:48","Actor":"ahsonkhan","Number":"34632","RawContent":null,"Title":"Semantics of writing null strings using the Utf8JsonWriter (for properties and values)","State":"open","Body":"Currently, for consistency with the span overload, the Utf8JsonWriter treats a null string parameter equivalent to an empty span and writes an empty string.\r\n\r\nThis applies to both property names and values.\r\n\r\n**So, for example, here is what we have today:**\r\n```C#\r\nstring propertyName = null;\r\nstring value = null;\r\n\r\njsonUtf8.WriteStartObject();\r\njsonUtf8.WriteString(propertyName, value); // equivalent to writing propertyName.AsSpan(), value.AsSpan()\r\njsonUtf8.WriteStartArray(propertyName); // equivalent to writing propertyName.AsSpan()\r\njsonUtf8.WriteStringValue(value); // equivalent to writing value.AsSpan()\r\njsonUtf8.WriteEndArray();\r\njsonUtf8.WriteEndObject();\r\njsonUtf8.Flush();\r\n\r\n// output = {\"\":\"\",\"\":[\"\"]}\r\n// output from Json.NET = {\"\":null,\"\":[null]}\r\n```\r\n\r\n1) Should we instead change the semantics of **writing string values** and write the `null` characters instead (to match Json.NET)?\r\n2) Should we throw an exception if the **property name** being passed in is a null string or continue to write an empty property name (to match Json.NET)?\r\n\r\nUnlike strings, there is no difference between a \"null\" span and an empty span.\r\n\r\n**Note:** Json.NET treats \"null\" property name strings as empty strings, but \"null\" values as the `null` literal.\r\n\r\ncc @JamesNK, @bartonjs, @jkotas, @GrabYourPitchforks, @steveharter   ","Url":"https://github.com/dotnet/corefx/issues/34632","RelatedDescription":"Open issue \"Semantics of writing null strings using the Utf8JsonWriter (for properties and values)\" (#34632)"},{"Id":"399565015","IsPullRequest":false,"CreatedAt":"2019-01-16T23:33:21","Actor":"kevinlo","Number":"34608","RawContent":null,"Title":"Different behavior of X509Certificate2 target net461 and netcoreapp2.1","State":"closed","Body":"I ask the question at [AspNetCore ](https://github.com/aspnet/AspNetCore/issues/6690)and I am asked to submit issue here.\r\n\r\nI have a console app like this\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            string certificateFileName = args[0];\r\n            string password = args[1];\r\n            var cert = new X509Certificate2(certificateFileName, password, X509KeyStorageFlags.DefaultKeySet);\r\n\r\n            string uniqueKeyContainerName = \"\";\r\n            var privateKey = cert.PrivateKey as RSACryptoServiceProvider;\r\n            if (privateKey != null)\r\n            {\r\n                uniqueKeyContainerName = privateKey.CspKeyContainerInfo.UniqueKeyContainerName;\r\n                Console.WriteLine($@\"Created C:\\ProgramData\\Microsoft\\Crypto\\RSA\\MachineKeys\\{uniqueKeyContainerName}\");\r\n            }\r\n\r\n            cert.Reset();\r\n        }\r\n```\r\n\r\nWhen the app is target net461, the MachineKey file is clean up even without calling cert.Reset. However, when target netcoreapp2.1, the file is not deleted unless it calls the Reset.\r\n\r\nWhy is the behavior different?\r\n\r\nMoreover, When target to net461, the PrivateKey is RSACryptoServiceProvider and it can use the following codes to get the MachineKey file name.\r\n\r\n```\r\nvar privateKey = cert.PrivateKey as RSACryptoServiceProvider;\r\nstring uniqueKeyContainerName = privateKey.CspKeyContainerInfo.UniqueKeyContainerName;\r\n\r\n```\r\nWhen target netcoreapp2.1, the cert.PrivateKey is RSACng. I can't find a way to get that containerName from RSACng. Can anyone tell me how the file name can be found from RSACng?\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34608","RelatedDescription":"Closed issue \"Different behavior of X509Certificate2 target net461 and netcoreapp2.1\" (#34608)"},{"Id":"400005349","IsPullRequest":false,"CreatedAt":"2019-01-16T21:27:05","Actor":"Maoni0","Number":"34631","RawContent":null,"Title":"Making the info GC.GetMemoryInfo provides public","State":"open","Body":"Expose the GC.GetMemoryInfo API publicly so things like asp.net core can use it to determine whether they should trim their caches and etc. Right now since it’s internal it’s only used by BCL. [#25617](https://github.com/dotnet/corefx/issues/25617) can be satisfied by this.\r\n\r\nCurrently this is the internal API's signature:\r\n\r\n```csharp\r\n[MethodImplAttribute(MethodImplOptions.InternalCall)]\r\ninternal static extern void GetMemoryInfo(out uint highMemLoadThreshold,\r\n                                            out ulong totalPhysicalMem,\r\n                                            out uint lastRecordedMemLoad,\r\n                                            // The next two are size_t\r\n                                            out UIntPtr lastRecordedHeapSize,\r\n                                            out UIntPtr lastRecordedFragmentation);\r\n```\r\nDoes this signature need to change for a public API?\r\n","Url":"https://github.com/dotnet/corefx/issues/34631","RelatedDescription":"Open issue \"Making the info GC.GetMemoryInfo provides public\" (#34631)"},{"Id":"399561123","IsPullRequest":true,"CreatedAt":"2019-01-16T21:21:43","Actor":"wfurt","Number":"34607","RawContent":null,"Title":"make build on ARM easier","State":"closed","Body":"This change default ArchGroup to build host CPU Architecture like we default TargetOs to OS. \r\nWith this, one does not need to use special parameters over and over again when rebuild one assembly or running unit tests. (on arm host directly) \r\nThis should have no impact on official builds.\r\n\r\nThis change also disables SourceLink on ARM CPU family. \r\n ","Url":"https://github.com/dotnet/corefx/pull/34607","RelatedDescription":"Closed or merged PR \"make build on ARM easier\" (#34607)"},{"Id":"400002487","IsPullRequest":true,"CreatedAt":"2019-01-16T21:19:41","Actor":"geoffkizer","Number":"34630","RawContent":null,"Title":"HTTP2: Modify HTTP2 tests to run against platform handlers as well","State":"open","Body":"Currently, HTTP2 specific tests are only running against SocketsHttpHandler. Modify them to also run against platform handlers, and modify tests as appropriate to deal with differences in behavior.\r\n\r\nI haven't tested this with CurlHandler yet; I'll look at the results of the CI pass and see what needs to be modified.\r\n\r\n@dotnet/ncl ","Url":"https://github.com/dotnet/corefx/pull/34630","RelatedDescription":"Open PR \"HTTP2: Modify HTTP2 tests to run against platform handlers as well\" (#34630)"},{"Id":"399998234","IsPullRequest":true,"CreatedAt":"2019-01-16T21:09:56","Actor":"rmkerr","Number":"34629","RawContent":null,"Title":"[WIP] Improve handling of frames received on closed stream","State":"open","Body":"This PR adds basic support for GoAway frames in HTTP/2, and modifies our error handling in order to send them when we receive a frame on a completed stream.\r\n\r\nThis change isn't ready to merge yet, as it is at least nominally in violation of the spec. See the discussion on #34461 for more details.\r\n\r\nWe should also decide whether or not GoAway frames are useful enough (as a tool for debugging) that they are worth including. If not we can remove `SendGoAwayAsync` and leave the rest of the code as-is.","Url":"https://github.com/dotnet/corefx/pull/34629","RelatedDescription":"Open PR \"[WIP] Improve handling of frames received on closed stream\" (#34629)"},{"Id":"399585889","IsPullRequest":true,"CreatedAt":"2019-01-16T19:59:48","Actor":"layomia","Number":"34610","RawContent":null,"Title":"Add roundtrip tests for EncoderNLS and DecoderNLS","State":"closed","Body":"This increases code coverage for System.Text.Encoding.Codepages from\r\n68.9% to 74.5%. (See #933)","Url":"https://github.com/dotnet/corefx/pull/34610","RelatedDescription":"Closed or merged PR \"Add roundtrip tests for EncoderNLS and DecoderNLS\" (#34610)"},{"Id":"399959671","IsPullRequest":false,"CreatedAt":"2019-01-16T18:45:08","Actor":"sergey-brutsky","Number":"34628","RawContent":null,"Title":"Regression: 2.1+ doesn't respect SocketOptionName.ReuseAddress on Linux box","State":"open","Body":"Here is a snippet of code\r\n```csharp\r\nusing System;\r\nusing System.Net;\r\nusing System.Net.Sockets;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    internal class Program\r\n    {\r\n        private static void Main(string[] args)\r\n        {\r\n            var socket = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);\r\n            socket.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);            \r\n            socket.SetSocketOption(SocketOptionLevel.IP, SocketOptionName.AddMembership, new MulticastOption(IPAddress.Parse(\"224.0.0.50\")));\r\n            socket.Bind(new IPEndPoint(IPAddress.Any, 9898));\r\n\r\n            Console.WriteLine(\"Bind socket sucessfully\");\r\n            Console.Read();\r\n            socket.Close();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIf we run 2 instances of this program on linux box \r\n```bash\r\nLinux testhost 4.9.0-8-amd64 #1 SMP Debian 4.9.110-3+deb9u6 (2018-10-08) x86_64 GNU/Linux\r\n```\r\n\r\nWe will see that it produces the issue\r\n```\r\ndotnet ConsoleApp1.dll \r\n\r\nUnhandled Exception: System.Net.Sockets.SocketException: Address already in use\r\n   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n   at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\temp\\ConsoleApp1\\Program.cs:line 14\r\nAborted\r\n```\r\nBut if we run it against dotnet 2.0 everything works fine.\r\nIf we run this code against dotnet 2.1 or 2.2 on windows box everything also works fine.\r\n\r\nSo I suspect that something is broken in dotnet 2.1 & 2.2 runtime in the architecture x86_64\r\n \r\nHere is dotnet version installed on the target linux box\r\n```\r\n dotnet --info\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/corefx/issues/34628","RelatedDescription":"Open issue \"Regression: 2.1+ doesn't respect SocketOptionName.ReuseAddress on Linux box\" (#34628)"},{"Id":"399867975","IsPullRequest":false,"CreatedAt":"2019-01-16T18:23:20","Actor":"NSentinel","Number":"34623","RawContent":null,"Title":"BindIPEndPointDelegate does not work properly [.NET Core 2.2]","State":"closed","Body":"Setting `BindIPEndPointDelegate` in the `ServicePoint` for `HttpWebRequest` does not do anything, the real binding of the IP address (delegate call) does not occur.\r\n\r\nA quick search through the repository showed that there is no real binding to local IP in the source code.\r\n\r\nIs this functionality is not yet ready to use in the .NET Core? \r\n\r\nIt works as expected in regular .NET","Url":"https://github.com/dotnet/corefx/issues/34623","RelatedDescription":"Closed issue \"BindIPEndPointDelegate does not work properly [.NET Core 2.2]\" (#34623)"},{"Id":"399928926","IsPullRequest":true,"CreatedAt":"2019-01-16T18:00:23","Actor":"calumgrant","Number":"34626","RawContent":null,"Title":"Add volatile keyword to fields used in double-checked locks","State":"open","Body":"Across various projects, double-checked locks are implemented without the underlying field being `volatile`. This is correct for the Intel architecture but could fail on other architectures.\r\n\r\nMost of these race conditions seem to be benign, but is it still correct to use the `volatile` keyword.\r\n\r\n## How were these found\r\nWe used lgtm.com to automatically analyse this project. Alerts can be found [here](https://lgtm.com/projects/g/dotnet/corefx/alerts/?mode=tree&ruleFocus=1506088456975).\r\n\r\nDisclaimer: I work for lgtm.com (semmle.com).","Url":"https://github.com/dotnet/corefx/pull/34626","RelatedDescription":"Open PR \"Add volatile keyword to fields used in double-checked locks\" (#34626)"},{"Id":"399629374","IsPullRequest":true,"CreatedAt":"2019-01-16T17:24:48","Actor":"dotnet-maestro-bot","Number":"34614","RawContent":null,"Title":"Update CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview.19066.1, beta-27316-00, beta-27316-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/34614","RelatedDescription":"Closed or merged PR \"Update CoreFx, ProjectNTfs, ProjectNTfsTestILC to preview.19066.1, beta-27316-00, beta-27316-00, respectively (master)\" (#34614)"},{"Id":"399908302","IsPullRequest":false,"CreatedAt":"2019-01-16T17:07:45","Actor":"virzak","Number":"34625","RawContent":null,"Title":"Universal Windows Platform update","State":"open","Body":"Apologies if this is an inappropriate place to ask, but in May 2018 it was [announced](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/) that UWP is moving to .net core 3. The preview doesn't contain a uwp template and the uwp branch in this project doesn't contain recent commits. What's the plan for UWP?","Url":"https://github.com/dotnet/corefx/issues/34625","RelatedDescription":"Open issue \"Universal Windows Platform update\" (#34625)"},{"Id":"399877647","IsPullRequest":true,"CreatedAt":"2019-01-16T16:01:09","Actor":"dotnet-maestro[bot]","Number":"34624","RawContent":null,"Title":"Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview-27316-2\r\n- Microsoft.NETCore.DotNetHost - 3.0.0-preview-27316-2\r\n- Microsoft.NETCore.DotNetHostPolicy - 3.0.0-preview-27316-2\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview-27316-3\r\n- Microsoft.NETCore.DotNetHost - 3.0.0-preview-27316-3\r\n- Microsoft.NETCore.DotNetHostPolicy - 3.0.0-preview-27316-3\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview-27316-4\r\n- Microsoft.NETCore.DotNetHost - 3.0.0-preview-27316-4\r\n- Microsoft.NETCore.DotNetHostPolicy - 3.0.0-preview-27316-4\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/34624","RelatedDescription":"Open PR \"Update dependencies from dotnet/core-setup\" (#34624)"},{"Id":"399802276","IsPullRequest":true,"CreatedAt":"2019-01-16T15:43:35","Actor":"dotnet-maestro[bot]","Number":"34622","RawContent":null,"Title":"Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/coreclr\r\n\r\n- Microsoft.NET.Sdk.IL - 3.0.0-preview-27315-74\r\n- Microsoft.NETCore.ILAsm - 3.0.0-preview-27315-74\r\n- Microsoft.NETCore.Runtime.CoreCLR - 3.0.0-preview-27315-74\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/34622","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/coreclr\" (#34622)"},{"Id":"399799326","IsPullRequest":true,"CreatedAt":"2019-01-16T14:39:20","Actor":"dotnet-maestro[bot]","Number":"34621","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.Build.Tasks.Configuration - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.19065.6\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.CoreFxTesting - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.19065.6\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.Helix.Sdk - 2.0.0-beta.19065.6\r\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.19065.6\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/34621","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#34621)"},{"Id":"399778182","IsPullRequest":false,"CreatedAt":"2019-01-16T12:04:15","Actor":"meehanman","Number":"34620","RawContent":null,"Title":"Continuous Hang on XmlSerializer","State":"open","Body":"When running the following code. The Class `CommunicationRecordList` causes the XmlSerializer to freeze on this point indefinatly. \r\n\r\n    XmlSerializer x = new XmlSerializer(typeof(CommunicationRecordList));\r\n\r\n    public class CommunicationRecordList : List<CommunicationRecord>\r\n    {\r\n    }\r\n\r\n    public class CommunicationRecord\r\n    {\r\n        public string RecordNumber;\r\n        public Plan Plan;\r\n    }\r\n    public class Plan : List<Plan>\r\n    {\r\n        public string PlanName\r\n    }","Url":"https://github.com/dotnet/corefx/issues/34620","RelatedDescription":"Open issue \"Continuous Hang on XmlSerializer\" (#34620)"},{"Id":"399742189","IsPullRequest":false,"CreatedAt":"2019-01-16T10:27:08","Actor":"smourier","Number":"34619","RawContent":null,"Title":"Add an atomic ToArray + Clear to ConcurrentDictionary","State":"open","Body":"Hi,\r\n\r\n`ConcurrentDictionary<K,V>` is a wonderful class. But I really miss like an overload to `ToArray` for example something like this\r\n\r\n    public KeyValuePair<TKey, TValue>[] ToArray(bool clear);\r\n\r\nOne common use case is for example when calling a `Dispose` method for an object that contains a dictionary of disposable objects:\r\n\r\n    private ConcurentDictionary<k,v> _dic;\r\n\r\n    public void Dispose()\r\n    {\r\n        var objs = _dic.ToArray();\r\n        // race condition can happen here\r\n        _dic.Clear();\r\n        foreach (var obj in objs)\r\n        {\r\n            obj.Dispose();\r\n        }\r\n    }\r\n\r\nIn this case, I'd like to be able to combine ToArray and Clear in one atomic call. Of course, I can implement that today with locks, etc. but beyond the usefulness of it, I'm sure it would be more efficient if implemented in the dictionary.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34619","RelatedDescription":"Open issue \"Add an atomic ToArray + Clear to ConcurrentDictionary\" (#34619)"},{"Id":"399707682","IsPullRequest":false,"CreatedAt":"2019-01-16T08:59:03","Actor":"eatage","Number":"34618","RawContent":null,"Title":"Socket remote transfer file problem under CentOS #34618","State":"open","Body":"**测试环境：**\r\n操作系统：CentOS 7 x64\r\n.NET Core版本：2.2.1\r\n**问题描述**\r\n在特定文件条件下触发，当FileStream.Read读到一定长度的内容时，Socket.Send发送成功，\r\n但是在远程端收到的内容为空，导致传送中端，最终引发SocketException Socket超时。\r\n且都是读到同样的长度发生错误，表现为传送进度到此位置时发生Socket超时错误。\r\n如果该文件触发了这个错误，则将该文件拷到其他同环境的服务器也一定触发该错误。\r\n发送至远程客户端，同同步方法或异步方法都触发这个Bug。\r\n可用此项目进行测试：[FtpServer](https://github.com/ZhaobangChina/FtpServer)\r\n可向我索取触发Bug的文件：[346414491@qq.com](mailto:346414491@qq.com)","Url":"https://github.com/dotnet/corefx/issues/34618","RelatedDescription":"Open issue \"Socket remote transfer file problem under CentOS #34618\" (#34618)"},{"Id":"399701257","IsPullRequest":true,"CreatedAt":"2019-01-16T08:40:46","Actor":"filipnavara","Number":"34617","RawContent":null,"Title":"Add tests for ResourceManager on custom Assembly type.","State":"open","Body":"Unit tests for https://github.com/dotnet/coreclr/pull/21979. /cc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/34617","RelatedDescription":"Open PR \"Add tests for ResourceManager on custom Assembly type.\" (#34617)"},{"Id":"399693032","IsPullRequest":false,"CreatedAt":"2019-01-16T08:15:51","Actor":"dotnet-mc-bot","Number":"34616","RawContent":null,"Title":"Test failure: System.Text.Json.Tests.Utf8JsonWriterTests/WriteLargeKeyOrValue(formatted: False, skipValidation: False)","State":"open","Body":"Opened on behalf of @AriNuer\n\nThe test `System.Text.Json.Tests.Utf8JsonWriterTests/WriteLargeKeyOrValue(formatted: False, skipValidation: False)` has failed.\n\nFailure Message:\n```\nSystem.InvalidOperationException : Cannot write the start of an object or array without a property name. Current token type is 'StartObject'.\n```\n\nStack Trace:\n```\n   at System.Text.Json.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource, Int32 currentDepth, Byte token, JsonTokenType tokenType) in /__w/1/s/src/System.Text.Json/src/System/Text/Json/ThrowHelper.cs:line 305\n   at System.Text.Json.Utf8JsonWriter.ValidateStart() in /__w/1/s/src/System.Text.Json/src/System/Text/Json/Writer/Utf8JsonWriter.cs:line 272\n   at System.Text.Json.Utf8JsonWriter.WriteStartSlow(Byte token) in /__w/1/s/src/System.Text.Json/src/System/Text/Json/Writer/Utf8JsonWriter.cs:line 255\n   at System.Text.Json.Utf8JsonWriter.WriteStart(Byte token) in /__w/1/s/src/System.Text.Json/src/System/Text/Json/Writer/Utf8JsonWriter.cs:line 198\n   at System.Text.Json.Utf8JsonWriter.WriteStartArray() in /__w/1/s/src/System.Text.Json/src/System/Text/Json/Writer/Utf8JsonWriter.cs:line 179\n   at System.Text.Json.Tests.Utf8JsonWriterTests.WriteLargeKeyOrValue(Boolean formatted, Boolean skipValidation) in /__w/1/s/src/System.Text.Json/tests/Utf8JsonWriterTests.cs:line 2933\n```\n\nBuild : 3.0 - 20190115.3 (Core Tests)\nFailing configurations:\n- Fedora.28.Amd64-x64\n  - Release\n- OSX.1014.Amd64-x64\n  - Release\n- Fedora.27.Amd64-x64\n  - Release\n- OSX.1013.Amd64-x64\n  - Release\n- SLES.15.Amd64-x64\n  - Release\n- OSX.1012.Amd64-x64\n  - Release\n- SLES.12.Amd64-x64\n  - Release\n- OpenSuse.42.Amd64-x64\n  - Release\n- Ubuntu.1810.Amd64-x64\n  - Release\n- Ubuntu.1804.Amd64-x64\n  - Release\n- Ubuntu.1604.Amd64-x64\n  - Release\n- Debian.9.Amd64-x64\n  - Release\n- Debian.8.Amd64-x64\n  - Release\n- Alpine.38.Amd64-x64\n  - Release\n- RedHat.7.Amd64-x64\n  - Release\n- RedHat.6.Amd64-x64\n  - Release\n- Alpine.36.Amd64-x64\n  - Release\n- Centos.7.Amd64-x64\n  - Release\n\nDetails:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190115.3/workItem/System.Text.Json.Tests/analysis/xunit/System.Text.Json.Tests.Utf8JsonWriterTests~2FWriteLargeKeyOrValue(formatted:%20False,%20skipValidation:%20False)","Url":"https://github.com/dotnet/corefx/issues/34616","RelatedDescription":"Open issue \"Test failure: System.Text.Json.Tests.Utf8JsonWriterTests/WriteLargeKeyOrValue(formatted: False, skipValidation: False)\" (#34616)"},{"Id":"399684378","IsPullRequest":false,"CreatedAt":"2019-01-16T07:44:40","Actor":"MkazemAkhgary","Number":"34615","RawContent":null,"Title":"Weakreference for many small objects","State":"open","Body":"**What I need:**\r\n\r\nThere is no way to have something like `WeakReference<List<T>>` where the list itself has strong reference but all of its content have weak references. \r\n\r\nThis would be useful for having many small objects with weak references.  `List<WeakReference<T>>` provides little to no benefit and may even have bad outcomes since objects are too small and weak reference may take same or more space than the target itself.\r\n\r\nIn short, I want a list with strong reference on it self but weak reference for its contents.\r\n\r\n---\r\n\r\n**What I'm trying to do in case you are wondering:**\r\n\r\nI want to implement flyweight pattern for many small immutable objects.\r\n\r\nfor interning objects, an object it is retrieved or added to the dictionary (using `ConcurrentDictionary.GetOrAdd`). but the problem is that these objects never get cleared.\r\n\r\nI wish i could have a collection like `WeakReference<ConcurrentDictionary<K, V>>` where the dictionary itself has strong reference but its content (keys/values) have weak references so that entries get cleared by GC when there is no strong reference to those interned objects.\r\n\r\n---\r\n\r\nIf there was a way to tell GC to not count references as strong references in a particular array, problems would be solved. for example it could be denoted by an attribute. \r\n\r\n```c#\r\nclass MyClass\r\n{\r\n    [WeakReferenceContent]\r\n    object[] pool; // pool has strong reference, but referenced items inside it are treated as weak reference.\r\n}\r\n```\r\n\r\nOr better handled by special type.","Url":"https://github.com/dotnet/corefx/issues/34615","RelatedDescription":"Open issue \"Weakreference for many small objects\" (#34615)"},{"Id":"399617505","IsPullRequest":false,"CreatedAt":"2019-01-16T02:14:30","Actor":"ahsonkhan","Number":"34613","RawContent":null,"Title":"Build failing on VS 2019 with build-native.cmd returning 1","State":"open","Body":"**Note:** The build succeeds as expected on VS 2017\r\n\r\nSteps to reproduce:\r\n1) Clone corefx master (`git clean -fdx`)\r\n2) Run build.cmd at root\r\n\r\nTested on:\r\n- The system is: Windows - 10.0.17763 - AMD64\r\n- Microsoft Visual Studio Enterprise 2019 Int Preview - Version 16.0.0 Preview 2.0 [28504.118.d16.0stg]\r\n- cmake exists version 3.11.3 **Edit:** updated to latest, 3.13.3, but still see the same issue.\r\n\r\n```text\r\n...\r\nCommencing build of native components\r\n\r\n  -- The C compiler identification is unknown\r\n  -- The CXX compiler identification is unknown\r\n  CMake Error at CMakeLists.txt:21 (project):\r\n    No CMAKE_C_COMPILER could be found.\r\n\r\n\r\n\r\n  CMake Error at CMakeLists.txt:21 (project):\r\n    No CMAKE_CXX_COMPILER could be found.\r\n\r\n\r\n\r\n  -- Configuring incomplete, errors occurred!\r\n  See also \"E:/GitHub/Fork/corefx/artifacts/obj/native/netcoreapp-Windows_NT-Debug-x64/CMakeFiles/CMakeOutput.log\".\r\n  See also \"E:/GitHub/Fork/corefx/artifacts/obj/native/netcoreapp-Windows_NT-Debug-x64/CMakeFiles/CMakeError.log\".\r\n  Failed to generate native component build project!\r\nE:\\GitHub\\Fork\\corefx\\src\\Native\\build-native.proj(48,5): error MSB3073: The command \"\"E:\\GitHub\\Fork\\corefx\\src\\Native\\build-native.cmd\" x64 Debug Windows_NT outconfig netcoreapp-Windows_NT-Debug-x64\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nE:\\GitHub\\Fork\\corefx\\src\\Native\\build-native.proj(48,5): error MSB3073: The command \"\"E:\\GitHub\\Fork\\corefx\\src\\Native\\build-native.cmd\" x64 Debug Windows_NT outconfig netcoreapp-Windows_NT-Debug-x64\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:27.60\r\nBuild failed.\r\n```\r\n\r\nFrom CMakeError.log:\r\n```text\r\nCompiling the C compiler identification source file \"CMakeCCompilerId.c\" failed.\r\nCompiler:  \r\nBuild flags: \r\nId flags:  \r\n\r\nThe output was:\r\n1\r\n```\r\n\r\nFYI, `build.cmd -framework netfx` builds successfully (not sure if relevant).\r\n\r\nRelated recent PRs and issues:\r\n- https://github.com/dotnet/corefx/pull/34412\r\n- https://github.com/dotnet/corefx/pull/34381\r\n\r\ncc @safern, @ViktorHofer ","Url":"https://github.com/dotnet/corefx/issues/34613","RelatedDescription":"Open issue \"Build failing on VS 2019 with build-native.cmd returning 1\" (#34613)"},{"Id":"399617191","IsPullRequest":true,"CreatedAt":"2019-01-16T02:14:30","Actor":"Dotnet-GitSync-Bot","Number":"34612","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/34612","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#34612)"},{"Id":"399612139","IsPullRequest":true,"CreatedAt":"2019-01-16T01:46:59","Actor":"ahsonkhan","Number":"34611","RawContent":null,"Title":"Update S.T.Json sources with ifdefs so that a netstandard compatible source package can be produced","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/34577\r\n\r\n~**Only the source changes need to be reviewed.** Other changes will be reverted (which include changes to .csproj, .props, and tests).~\r\n\r\ncc @joperezr, @bartonjs, @jkotas, @stephentoub, @steveharter  ","Url":"https://github.com/dotnet/corefx/pull/34611","RelatedDescription":"Open PR \"Update S.T.Json sources with ifdefs so that a netstandard compatible source package can be produced\" (#34611)"},{"Id":"399583692","IsPullRequest":true,"CreatedAt":"2019-01-16T01:30:23","Actor":"Dotnet-GitSync-Bot","Number":"34609","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/34609","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#34609)"},{"Id":"399524269","IsPullRequest":false,"CreatedAt":"2019-01-15T20:35:30","Actor":"mariuszkochanowski","Number":"34606","RawContent":null,"Title":"Optimize BitArray","State":"open","Body":"BitArray class needs optimization. The following implementation is 5 times faster than the implementation of netcore 2.2:\r\n\r\n> BitArray took 5958 ms\r\nCustomBitArray took 1243 ms\r\n\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections;\r\nusing System.Diagnostics;\r\nusing System.Runtime.CompilerServices;\r\n\r\nnamespace ConsoleAppBenchmarks\r\n{\r\n    public class CustomBitArray\r\n    {\r\n        public int Length { get; }\r\n\r\n        public bool this[int index]\r\n        {\r\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n            get\r\n            {\r\n                if(index >= Length) throw new ArgumentOutOfRangeException(nameof(index));\r\n\r\n                int idx = index >> BitsPerItemLog2;\r\n\r\n                return (_array[idx] & (1 << (index - (idx << BitsPerItemLog2)))) != 0;\r\n            }\r\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n            set\r\n            {\r\n                if (index >= Length) throw new ArgumentOutOfRangeException(nameof(index));\r\n                int idx = index >> BitsPerItemLog2;\r\n\r\n                if (value)\r\n                {\r\n                    _array[idx] |= (1 << (index - (idx << BitsPerItemLog2)));\r\n                }\r\n                else\r\n                {\r\n                    _array[idx] &= (~(1 << (index - (idx << BitsPerItemLog2))));\r\n                }\r\n            }\r\n        }\r\n   \r\n\r\n        public CustomBitArray(int length)\r\n        {\r\n            Length = length;\r\n            _array = new int[(length >> BitsPerItemLog2) + 1];\r\n        }\r\n\r\n        private const int BitsPerItemLog2 = 5;\r\n\r\n        private readonly int[] _array;\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            const int iterations = 1000;\r\n            const int length = 64 * 10000;\r\n\r\n            Console.WriteLine(\"BitArray took {0} ms\", TestBitArray(iterations, length));\r\n            Console.WriteLine(\"CustomBitArray took {0} ms\", TestCustomBitArray(iterations, length));\r\n            Console.Read();\r\n        }\r\n\r\n        static long  TestBitArray(int iterations, int length)\r\n        {\r\n            var bitArray = new BitArray(length);\r\n           Stopwatch sw = new Stopwatch();\r\n           sw.Start();\r\n\r\n           for (int j = 0; j < iterations; j++)\r\n           {\r\n               for (int i = 0; i < length;)\r\n               {\r\n                   bitArray[i] = true;\r\n                   if (bitArray[i])\r\n                   {\r\n                       i++;\r\n                   }\r\n               }\r\n            }\r\n           sw.Stop();\r\n\r\n           return sw.ElapsedMilliseconds;\r\n        }\r\n\r\n        static long TestCustomBitArray(int iterations, int length)\r\n        {\r\n            var bitArray = new CustomBitArray(length);\r\n\r\n            Stopwatch sw = new Stopwatch();\r\n            sw.Start();\r\n\r\n            for (int j = 0; j < iterations; j++)\r\n            {\r\n                for (int i = 0; i < length;)\r\n                {\r\n                    bitArray[i] = true;\r\n                    if (bitArray[i])\r\n                    {\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n            sw.Stop();\r\n\r\n            return sw.ElapsedMilliseconds;\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/34606","RelatedDescription":"Open issue \"Optimize BitArray\" (#34606)"},{"Id":"399485431","IsPullRequest":false,"CreatedAt":"2019-01-15T18:52:14","Actor":"ParadoxGBB","Number":"34605","RawContent":null,"Title":"RegularExpressions Groups are assigned even when conditionally not supposed to, unlike PowerShell","State":"open","Body":"This is inconsistent with the PowerShell -match syntax, which is the most confusing part to me because my understanding is that both PowerShell and .NET regular expression are handled by the same library / .NET code. So there shouldn't be a difference in behavior.\r\n\r\nMy specific application / script needs to use the RegEx.Matches() call for reasons I won't go into here.\r\n\r\nEssentially, for a pattern like the example below, there are conditional named groups to capture. If none of those conditions match, no group \"title\" should be even assigned.\r\n\r\n<meta itemprop=\"name\" content=\"((?:The Late Show[^\"]+)|(?:Season[^\"]+)|(?<title>[^\"]+))\"/?>\r\n\r\nSample code (.NET):\r\n\r\n```c#\r\n            string input = \"<meta itemprop=\\\"name\\\" content=\\\"Season 4\\\"/>\";\r\n            string pattern = \"<meta itemprop=\\\"name\\\" content=\\\"((?:The Late Show[^\\\"]+)|(?:Season[^\\\"]+)|(?<title>[^\\\"]+))\\\"/?>\";\r\n            MatchCollection matches = Regex.Matches(input, pattern);\r\n```\r\n\r\nSample code (PowerShell):\r\n\r\nFor this case, the input text doesn't match any of the preceding conditions, therefore the \"title\" group is assigned the string between the quotes. This is expected.\r\n\r\n```\r\nPS C:\\Users\\paradox> [RegEx]::Matches('<meta itemprop=\"name\" content=\"12/20/18 (John C. Reilly, Senator Jeff Flake)\"/>', '<meta itemprop=\"name\" content=\"((?:The Late Show[^\"]+)|(?:Season[^\"]+)|(?<title>[^\"]+))\"/?>')\r\n\r\n\r\nGroups   : {0, 1, title}\r\nSuccess  : True\r\nName     : 0\r\nCaptures : {0}\r\nIndex    : 0\r\nLength   : 79\r\nValue    : <meta itemprop=\"name\" content=\"12/20/18 (John C. Reilly, Senator Jeff Flake)\"/>\r\n```\r\n\r\nFor this case, because the inut string matches the second condition, the expectation is that the \"title\" group is not matched (or even assigned). However, \"title\" is assigned as group with an empty string. This seems like a bug to me.\r\n\r\n```\r\nPS C:\\Users\\paradox> [RegEx]::Matches('<meta itemprop=\"name\" content=\"Season 4\"/>', '<meta itemprop=\"name\" content=\"((?:The Late Show[^\"]+)|(?:Season[^\"]+)|(?<title>[^\"]+))\"/?>')\r\n\r\n\r\nGroups   : {0, 1, **title**}\r\nSuccess  : True\r\nName     : 0\r\nCaptures : {0}\r\nIndex    : 0\r\nLength   : 42\r\nValue    : <meta itemprop=\"name\" content=\"Season 4\"/>\r\n```\r\n\r\nFor completeness, note below the discrepancy with PowerShell's -match syntax (and how it works in a more expected fashion). Here's the positive case that is supposed to capture the \"title\" group:\r\n\r\n```\r\nPS C:\\Users\\paradox> '<meta itemprop=\"name\" content=\"12/20/18 (John C. Reilly, Senator Jeff Flake)\"/>' -match '<meta itemprop=\"name\" content=\"((?:The Late Show[^\"]+)|(?:Season[^\"]+)|(?<title>[^\"]+))\"/?>'\r\nTrue\r\nPS C:\\Users\\paradox> $matches\r\n\r\nName                           Value\r\n----                           -----\r\ntitle                          12/20/18 (John C. Reilly, Senator Jeff Flake)\r\n1                              12/20/18 (John C. Reilly, Senator Jeff Flake)\r\n0                              <meta itemprop=\"name\" content=\"12/20/18 (John C. Reilly, Senator Jeff Flake)\"/>\r\n```\r\n\r\nAnd in this case it matches the second condition. In this case, there is no named capture for \"title\" (as expected):\r\n\r\n```\r\nPS C:\\Users\\paradox> '<meta itemprop=\"name\" content=\"Season 4\"/>' -match '<meta itemprop=\"name\" content=\"((?:The Late Show[^\"]+)|(?:Season[^\"]+)|(?<title>[^\"]+))\"/?>'\r\nTrue\r\nPS C:\\Users\\paradox> $matches\r\n\r\nName                           Value\r\n----                           -----\r\n1                              Season 4\r\n0                              <meta itemprop=\"name\" content=\"Season 4\"/>\r\n```\r\n\r\nOS / .NET Versioning (all patches are up to date):\r\n\r\n(note that this also reproduces for a configuration on the fast ring)\r\n\r\n```\r\nPS C:\\Users\\paradox> $psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17763.134\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17763.134\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```","Url":"https://github.com/dotnet/corefx/issues/34605","RelatedDescription":"Open issue \"RegularExpressions Groups are assigned even when conditionally not supposed to, unlike PowerShell\" (#34605)"},{"Id":"399461123","IsPullRequest":true,"CreatedAt":"2019-01-15T17:48:01","Actor":"WinCPP","Number":"34604","RawContent":null,"Title":"Implement Get APIs using TryGet counterparts","State":"open","Body":"Fixes Corefx #33320.\r\n\r\nImplemented new APIs with test cases.","Url":"https://github.com/dotnet/corefx/pull/34604","RelatedDescription":"Open PR \"Implement Get APIs using TryGet counterparts\" (#34604)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"400107273","IsPullRequest":false,"CreatedAt":"2019-01-17T04:37:48","Actor":"jcouv","Number":"32553","RawContent":null,"Title":"Handle tuple conversion on tuple with suppression","State":"open","Body":"In order to segment my current work on suppressions, I'm going to split the tuple scenarios off.\r\n\r\n```C#\r\n        [Fact, WorkItem(31370, \"https://github.com/dotnet/roslyn/issues/31370\")]\r\n        public void SuppressNullableWarning_Deconstruction()\r\n        {\r\n            var source =\r\n@\"class C\r\n{\r\n    void M(C<string?> c)\r\n    {\r\n        (string d1, (C<string> d2, string d3)) = (null, (c, null));\r\n        (string e1, (C<string> e2, string e3)) = (null, (c, null))!;\r\n        (string f1, (C<string> f2, string f3)) = (null, (c, null)!);\r\n    }\r\n}\";\r\n            var comp = CreateCompilation(source, options: WithNonNullTypesTrue());\r\n            comp.VerifyDiagnostics(\r\n                );\r\n            // TODO2 verify diagnostics, fix crash\r\n            CompileAndVerify(comp);\r\n            // TODO2: verify semantic model\r\n        }\r\n\r\n        [Fact, WorkItem(31370, \"https://github.com/dotnet/roslyn/issues/31370\")]\r\n        public void SuppressNullableWarning_Tuple()\r\n        {\r\n            // TODO2 crash\r\n            var source =\r\n@\"class C<T>\r\n{\r\n    static void M(C<string?> x)\r\n    {\r\n        (string, C<string>) tuple = (null, x);\r\n        _ = tuple;\r\n        (string, C<string>) tuple2 = (null, x)!;\r\n        _ = tuple2;\r\n        (string, C<string>) tuple3 = (null!, x!);\r\n        _ = tuple3;\r\n    }\r\n}\";\r\n            var comp = CreateCompilation(source, options: WithNonNullTypesTrue());\r\n            comp.VerifyDiagnostics(\r\n                // (5,37): warning CS8619: Nullability of reference types in value of type '(string?, C<string?> x)' doesn't match target type '(string, C<string>)'.\r\n                //         (string, C<string>) tuple = (null, x);\r\n                Diagnostic(ErrorCode.WRN_NullabilityMismatchInAssignment, \"(null, x)\").WithArguments(\"(string?, C<string?> x)\", \"(string, C<string>)\").WithLocation(5, 37)\r\n                );\r\n            CompileAndVerify(comp);\r\n        }\r\n\r\n        [Fact, WorkItem(31370, \"https://github.com/dotnet/roslyn/issues/31370\")]\r\n        public void SuppressNullableWarning_TupleEquality()\r\n        {\r\n            // TODO2 unexpected diagnostic\r\n            var source =\r\n@\"class C<T>\r\n{\r\n    static void M((string, C<string>) tuple, C<string?> x)\r\n    {\r\n        _ = tuple == (null, x);\r\n        _ = tuple == (null, x)!;\r\n        _ = (1, tuple) == (1, (null, x)!);\r\n    }\r\n}\";\r\n            var comp = CreateCompilation(source, options: WithNonNullTypesTrue());\r\n            comp.VerifyDiagnostics(\r\n                // (6,13): error CS0019: Operator '==' cannot be applied to operands of type '(string, C<string>)' and '(<null>, C<string?>)'\r\n                //         _ = tuple == (null, x)!;\r\n                Diagnostic(ErrorCode.ERR_BadBinaryOps, \"tuple == (null, x)!\").WithArguments(\"==\", \"(string, C<string>)\", \"(<null>, C<string?>)\").WithLocation(6, 13)\r\n                );\r\n            CompileAndVerify(comp);\r\n            // TODO2: verify semantic model\r\n        }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/32553","RelatedDescription":"Open issue \"Handle tuple conversion on tuple with suppression\" (#32553)"},{"Id":"400051832","IsPullRequest":true,"CreatedAt":"2019-01-17T03:00:08","Actor":"dotnet-bot","Number":"32542","RawContent":null,"Title":"Merge dev16.0-preview2-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-preview2-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32542","RelatedDescription":"Closed or merged PR \"Merge dev16.0-preview2-vs-deps to master-vs-deps\" (#32542)"},{"Id":"400088993","IsPullRequest":true,"CreatedAt":"2019-01-17T02:54:34","Actor":"heejaechang","Number":"32552","RawContent":null,"Title":"workaround for concurrent event causing VS to crash","State":"open","Body":"basically, if RegisteryText happens and then UnregisterText happens in perfect timing, RegisterText got slightly delayed since it is async event, and UnregisterText happens at the same time since it is a synchronous event, and they happens in 2 different threads, boom, we get NRE.\r\n\r\nthis is a workaround for preview 2.\r\n\r\nworkaround - https://devdiv.visualstudio.com/DevDiv/_workitems/edit/744145","Url":"https://github.com/dotnet/roslyn/pull/32552","RelatedDescription":"Open PR \"workaround for concurrent event causing VS to crash\" (#32552)"},{"Id":"400085159","IsPullRequest":false,"CreatedAt":"2019-01-17T02:34:19","Actor":"heejaechang","Number":"32551","RawContent":null,"Title":"make sure workspace related events are serialized","State":"open","Body":"currently, we have async event queue per workspace for workspace events. and we have WorkspaceRegistration.WorkspaceChanged event.\r\n\r\nour workspace events within the same workspace, we make sure all events are serialized. we guarantee the ordering of all events as they happens.\r\n\r\nit gets interesting when a file is opened in the editor, we have this dance where the file is first added to misc workspace and then moved to another workspace such as VSWorkspace. same goes for when the file is closed.\r\n\r\nit is interesting since a file is now interacting with 2 workspaces. currently, we don't have a way to preserve ordering of events between 2 different workspaces. when a file is moved between 2 workspaces, one might see the file added to 1 workspace before it is removed from the other workspace even though the actual event happened in reverse order since events are happening in 2 different async queues.\r\n\r\nfurthermore, WorkspaceRegistration.WorkspaceChanged events use the async queue of a workspace to raise \"RegisterText\", but use the synchronous event for \"UnregisterText\". also, since async queue raise event on UI thread but synchronous event happen on the thread it is called, we have a chance where the event raised concurrently.\r\n\r\nwe don't know what is the right fix for it yet. but opening the issue to make sure we figure out what to do after preview.","Url":"https://github.com/dotnet/roslyn/issues/32551","RelatedDescription":"Open issue \"make sure workspace related events are serialized\" (#32551)"},{"Id":"400051924","IsPullRequest":true,"CreatedAt":"2019-01-17T02:00:06","Actor":"dotnet-bot","Number":"32545","RawContent":null,"Title":"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32545","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#32545)"},{"Id":"400075792","IsPullRequest":true,"CreatedAt":"2019-01-17T01:48:18","Actor":"heejaechang","Number":"32550","RawContent":null,"Title":"add more telemetry to track feature performances","State":"open","Body":"adding performance tracking telemetry on \"go to implementation\" and \"solution explorer/progression\"\r\n","Url":"https://github.com/dotnet/roslyn/pull/32550","RelatedDescription":"Open PR \"add more telemetry to track feature performances\" (#32550)"},{"Id":"400073618","IsPullRequest":true,"CreatedAt":"2019-01-17T01:37:05","Actor":"chborl","Number":"32549","RawContent":null,"Title":"Improve naming style diagnostics when identifier begins with common prefixes","State":"open","Body":"Fixes #18409","Url":"https://github.com/dotnet/roslyn/pull/32549","RelatedDescription":"Open PR \"Improve naming style diagnostics when identifier begins with common prefixes\" (#32549)"},{"Id":"400051849","IsPullRequest":true,"CreatedAt":"2019-01-17T01:30:07","Actor":"dotnet-bot","Number":"32543","RawContent":null,"Title":"Merge master-vs-deps to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push merges/master-vs-deps-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32543","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to dev16.1-preview1-vs-deps\" (#32543)"},{"Id":"400068066","IsPullRequest":true,"CreatedAt":"2019-01-17T01:09:59","Actor":"tmat","Number":"32548","RawContent":null,"Title":"Allow skipping tests and opt data in official builds","State":"open","Body":"Infrastructure only change.\r\n\r\nWhen queuing an official build it is now possible to set the following variables in the UI:\r\n- `SkipTests` to `true` to skip running tests,\r\n- `SkipApplyOptimizationData` to `true` to skip merging optimization data into binaries.\r\n   The build still triggers training release pipeline and thus produces new set of optimization data.\r\n   This is useful when the currently available data are bad and cause the build to fail.\r\n- `SignType` to `test` \r\n   Test sign artifacts instead of the default real signing.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/32548","RelatedDescription":"Open PR \"Allow skipping tests and opt data in official builds\" (#32548)"},{"Id":"400051903","IsPullRequest":true,"CreatedAt":"2019-01-17T01:00:12","Actor":"dotnet-bot","Number":"32544","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32544","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#32544)"},{"Id":"400051944","IsPullRequest":true,"CreatedAt":"2019-01-17T01:00:07","Actor":"dotnet-bot","Number":"32546","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32546","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#32546)"},{"Id":"400057190","IsPullRequest":false,"CreatedAt":"2019-01-17T00:22:21","Actor":"jnm2","Number":"32547","RawContent":null,"Title":"Intellisense cannot be shown when the caret is between two dots","State":"open","Body":"In VS 2019 Preview 1.1 (and I think 1), when you backspace and retype a dot but there's another dot ahead of the caret, VS doesn't show intellisense anymore. Alt+Right also stops working while the caret is between the two dots.\r\n\r\nSometimes I see a very brief flash of a tiny light-colored square over the editor when intellisense fails to show, like a window opening and closing immediately.\r\n\r\nVS2019:\r\n![vs2019](https://user-images.githubusercontent.com/8040367/51287093-e6064b00-19c3-11e9-9817-48f0fd520e1e.gif)\r\n\r\n\r\nVS2017:\r\n![vs2017](https://user-images.githubusercontent.com/8040367/51286808-907d6e80-19c2-11e9-9d6c-2c1db8f6f621.gif)\r\n\r\nI'm typing nonsense for demo purposes in the file I had open, but the same thing happens everywhere.\r\n\r\nI've tripped over it several times a day every day I've been using the preview. I assume ranges had something to do with this, and I tried to reconcile myself to it for the past month on that basis, but I just can't deal with it. I hope this change wasn't intentional. This is a common thing for me to do when refactoring, fixing changed names after things move, etc.\r\n","Url":"https://github.com/dotnet/roslyn/issues/32547","RelatedDescription":"Open issue \"Intellisense cannot be shown when the caret is between two dots\" (#32547)"},{"Id":"400051803","IsPullRequest":true,"CreatedAt":"2019-01-17T00:00:16","Actor":"dotnet-bot","Number":"32541","RawContent":null,"Title":"Merge master to dev16.1-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into dev16.1-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-dev16.1-preview1\ngit reset --hard upstream/dev16.1-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-dev16.1-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32541","RelatedDescription":"Open PR \"Merge master to dev16.1-preview1\" (#32541)"},{"Id":"400038112","IsPullRequest":false,"CreatedAt":"2019-01-16T23:07:22","Actor":"AlekseyTs","Number":"32540","RawContent":null,"Title":"A number of test scenarios utilizing Default Interface Implementations across assembly boundaries are broken due to a bug in CoreCLR ","State":"open","Body":"Here is a link to the CoreCLR issue https://github.com/dotnet/coreclr/issues/22021.\r\n\r\nAffected tests:\r\n```\r\nMicrosoft.CodeAnalysis.CSharp.UnitTests.Symbols.DefaultInterfaceImplementationTests.EventImplementationInDerived_01\r\nMicrosoft.CodeAnalysis.CSharp.UnitTests.Symbols.DefaultInterfaceImplementationTests.EventImplementationInDerived_11\r\nMicrosoft.CodeAnalysis.CSharp.UnitTests.Symbols.DefaultInterfaceImplementationTests.IndexerImplementationInDerived_01\r\nMicrosoft.CodeAnalysis.CSharp.UnitTests.Symbols.DefaultInterfaceImplementationTests.IndexerImplementationInDerived_11\r\nMicrosoft.CodeAnalysis.CSharp.UnitTests.Symbols.DefaultInterfaceImplementationTests.MethodImplementationInDerived_01\r\nMicrosoft.CodeAnalysis.CSharp.UnitTests.Symbols.DefaultInterfaceImplementationTests.MethodImplementationInDerived_11\r\nMicrosoft.CodeAnalysis.CSharp.UnitTests.Symbols.DefaultInterfaceImplementationTests.PropertyImplementationInDerived_01\r\nMicrosoft.CodeAnalysis.CSharp.UnitTests.Symbols.DefaultInterfaceImplementationTests.PropertyImplementationInDerived_11\r\n```\r\n\r\nThe relevant portions of the unit-tests are temporarily disabled and should be re-enabled once the underlying issue is fixed in CoreCLR.\r\n","Url":"https://github.com/dotnet/roslyn/issues/32540","RelatedDescription":"Open issue \"A number of test scenarios utilizing Default Interface Implementations across assembly boundaries are broken due to a bug in CoreCLR \" (#32540)"},{"Id":"400024922","IsPullRequest":false,"CreatedAt":"2019-01-16T22:23:15","Actor":"cston","Number":"32539","RawContent":null,"Title":"Nullability constraint warnings are not reported for method signatures","State":"open","Body":"No warnings reported for `C<object?>` in method signatures:\r\n```C#\r\nclass C<T> where T : class\r\n{\r\n}\r\n\r\nclass Program\r\n{\r\n    static C<object?> F1() => throw null;\r\n\r\n    static void F2(C<object?> c) { }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/32539","RelatedDescription":"Open issue \"Nullability constraint warnings are not reported for method signatures\" (#32539)"},{"Id":"399923853","IsPullRequest":true,"CreatedAt":"2019-01-16T22:00:07","Actor":"dotnet-bot","Number":"32525","RawContent":null,"Title":"Merge master-vs-deps to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push merges/master-vs-deps-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32525","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to dev16.1-preview1-vs-deps\" (#32525)"},{"Id":"400016469","IsPullRequest":false,"CreatedAt":"2019-01-16T21:58:04","Actor":"Neme12","Number":"32538","RawContent":null,"Title":"Add support for splitting & merging \"consecutive\" conditional expressions","State":"open","Body":"Followup to #30640\r\n\r\nPlease allow me to invoke the refactoing on code like this\r\n```c#\r\n        return\r\n            a || b ? \"foo\" :\r\n            c ? \"bar\" :\r\n            \"foobar\";\r\n```\r\nto convert to\r\n```c#\r\n        return\r\n            a ? \"foo\" :\r\n            b ? \"foo\" :\r\n            c ? \"bar\" :\r\n            \"foobar\";\r\n```\r\nand vice versa.\r\n\r\nThis might seem like it would make the refactorings unnecessarily more complicated but I suspect that won't be the case thanks to the way the actual if-statement manipulation is abstracted into `IIfLikeStatementGenerator`. I expect this to be fairly easy or at worst take about as much work as #32535 and possibly only require changes in `IIfLikeStatementGenerator` itself.\r\n\r\ncc @jasonmalinowski ","Url":"https://github.com/dotnet/roslyn/issues/32538","RelatedDescription":"Open issue \"Add support for splitting & merging \"consecutive\" conditional expressions\" (#32538)"},{"Id":"400016380","IsPullRequest":false,"CreatedAt":"2019-01-16T21:57:50","Actor":"nnpcYvIVl","Number":"32537","RawContent":null,"Title":"IntroduceVariableCodeRefactoringProvider ArgumentOutOfRangeException","State":"open","Body":"Type a space after the plus symbol then double click the mouse to cause ```IntroduceVariableCodeRefactoringProvider ArgumentOutOfRangeException : 'end' must not be less than 'start'.```\r\n\r\n```csharp\r\nnamespace IntroduceVariableCodeRefactoringProvider_ArgumentOutOfRangeException\r\n{\r\n    public class Class\r\n    {\r\n        public string Test => \"123\" +\r\n    }\r\n}\r\n```\r\n\r\nI'm using Visual Studio 15.9.5.","Url":"https://github.com/dotnet/roslyn/issues/32537","RelatedDescription":"Open issue \"IntroduceVariableCodeRefactoringProvider ArgumentOutOfRangeException\" (#32537)"},{"Id":"400015857","IsPullRequest":true,"CreatedAt":"2019-01-16T21:56:17","Actor":"RikkiGibson","Number":"32536","RawContent":null,"Title":"Fix crash with unmanaged constraint and recursive type argument","State":"open","Body":"Fixes #31439\r\n\r\nThis turns out to not be valid code right now, but it's easy to get mixed up about that when we're far along the way toward making it valid in 8.0.","Url":"https://github.com/dotnet/roslyn/pull/32536","RelatedDescription":"Open PR \"Fix crash with unmanaged constraint and recursive type argument\" (#32536)"},{"Id":"400013804","IsPullRequest":false,"CreatedAt":"2019-01-16T21:50:33","Actor":"Neme12","Number":"32535","RawContent":null,"Title":"Add support for splitting/merging VB single-line if statements","State":"open","Body":"Followup to #30640 \r\n\r\nSome notes:\r\n> > Keep in mind that `If a Then If b Then Console.WriteLine(a AndAlso b) Else Console.WriteLine() Else Console.WriteLine()` is (unfortunately) a valid statement in VB. \r\n>\r\n> I know. I just spent another hour trying to handle single-line ifs but gave up after realizing that they have the same dangling else problem as C# does, but there's no way to resolve it like in C#.\r\n>\r\n> > I'm not sure we want to bring all the functionality to VB single line ifs,\r\n> \r\n> I agree. I think the best behavior when encountering a single-line if would be to just convert it to multi-line. I don't think splitting single-line ifs into nested single-line ifs or into single-line else ifs is a good idea.\r\n\r\ncc @jasonmalinowski ","Url":"https://github.com/dotnet/roslyn/issues/32535","RelatedDescription":"Open issue \"Add support for splitting/merging VB single-line if statements\" (#32535)"},{"Id":"399993121","IsPullRequest":false,"CreatedAt":"2019-01-16T20:55:44","Actor":"vsfeedback","Number":"32534","RawContent":null,"Title":"Cant see definitions","State":"open","Body":"I get the error cannot navigate to the symbol under the caret.\r\n\r\n```csharp\r\npublic class T\r\n{\r\n  new // <-- caret is on the 'new' keyword\r\n  void Method() { }\r\n}\r\n```\r\n\r\n1. Place the caret on the `new` keyword\r\n2. Press <kbd>F12</kbd>\r\n\r\nThe following message is shown in a pop-up dialog:\r\n\r\n> Cannot navigate to the symbol under the caret.\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/346960/cant-see-definitions.html\r\nVSTS ticketId: 694698_\r\n_These are the original issue comments:_\r\n(no comments)\r\n_These are the original issue solutions:_\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/32534","RelatedDescription":"Open issue \"Cant see definitions\" (#32534)"},{"Id":"399989205","IsPullRequest":false,"CreatedAt":"2019-01-16T20:45:46","Actor":"JoeRobich","Number":"32533","RawContent":null,"Title":"GenerateMethodUsingTypeConstraint_2BaseTypeConstraints_Interfaces Test Failure","State":"open","Body":"Saw this in #32525 - [Test Logs](https://dev.azure.com/dnceng/public/_build/results?buildId=74067&view=ms.vss-test-web.test-result-details) Windows Desktop Debug Test64 Attempt 1\r\n\r\n```\r\nError message\r\nSystem.AggregateException : One or more errors occurred.\\r\\n---- System.InvalidOperationException : WaitAndGetResult cannot be called from a thread pool thread.\r\nStack trace\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait()\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Diagnostics.AbstractCrossLanguageUserDiagnosticTest.VB$StateMachine_10_GetDiagnosticAndFixesAsync.MoveNext() in /_/src/EditorFeatures/Test2/Diagnostics/AbstractCrossLanguageUserDiagnosticTest.vb:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Diagnostics.AbstractCrossLanguageUserDiagnosticTest.VB$StateMachine_8_GetDiagnosticAndFixAsync.MoveNext() in /_/src/EditorFeatures/Test2/Diagnostics/AbstractCrossLanguageUserDiagnosticTest.vb:line 108\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Diagnostics.AbstractCrossLanguageUserDiagnosticTest.VB$StateMachine_6_TestAsync.MoveNext() in /_/src/EditorFeatures/Test2/Diagnostics/AbstractCrossLanguageUserDiagnosticTest.vb:line 55\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.Diagnostics.GenerateMethod.GenerateMethodCrossLanguageTests.VB$StateMachine_16_GenerateMethodUsingTypeConstraint_2BaseTypeConstraints_Interfaces.MoveNext() in /_/src/EditorFeatures/Test2/Diagnostics/GenerateFromUsage/GenerateMethodCrossLanguageTests.vb:line 659\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n----- Inner Stack Trace -----\r\n   at Roslyn.Utilities.TaskExtensions.WaitAndGetResult[T](Task`1 task, CancellationToken cancellationToken) in /_/src/Workspaces/Core/Portable/Utilities/TaskExtensions.cs:line 74\r\n   at Microsoft.CodeAnalysis.Shared.Extensions.ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.<>c__DisplayClass10_0.<VisitTypeParameter>b__1(ITypeSymbol ct) in /_/src/Workspaces/Core/Portable/Shared/Extensions/ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs:line 102\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.CodeAnalysis.Shared.Extensions.ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.VisitTypeParameter(ITypeParameterSymbol symbol) in /_/src/Workspaces/Core/Portable/Shared/Extensions/ITypeSymbolExtensions.ReplaceTypeParameterBasedOnTypeConstraintVisitor.cs:line 99\r\n```","Url":"https://github.com/dotnet/roslyn/issues/32533","RelatedDescription":"Open issue \"GenerateMethodUsingTypeConstraint_2BaseTypeConstraints_Interfaces Test Failure\" (#32533)"},{"Id":"399982251","IsPullRequest":false,"CreatedAt":"2019-01-16T20:26:47","Actor":"jhinder","Number":"32532","RawContent":null,"Title":"VB and C# ignore Conditional attribute on property setters","State":"open","Body":"**Version Used**: VS 16.0 Preview 1.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a VB project (I named it \"Basic\") and copy the first bit of code into a source file.\r\n2. Create a C# project (I named it \"Sharp\") that references the VB project and copy the second bit of code into a source file.\r\n3. Build the solution.\r\n4. Open the DLLs with ILDASM and look at `Sharp.C.M` and `Basic.C.M` respectively.\r\n\r\n```vbnet\r\nPublic Class C\r\n\r\n    Public WriteOnly Property P As Integer\r\n        <Conditional(\"DO_NOT_DEFINE_THIS\")>\r\n        Set(value As Integer)\r\n        End Set\r\n    End Property\r\n\r\n    <Conditional(\"DO_NOT_DEFINE_THIS\")>\r\n    Public Sub ConditionalM()\r\n    End Sub\r\n\r\n    Public Sub M()\r\n        Dim c As New C\r\n        c.P = 32\r\n        c.ConditionalM()\r\n    End Sub\r\n\r\nEnd Class\r\n```\r\n\r\n```csharp\r\nnamespace Sharp\r\n{\r\n    public class C\r\n    {\r\n        public void M()\r\n        {\r\n            var c = new Basic.C();\r\n            c.P = 32;\r\n            c.ConditionalM();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe call to the `set_P` is omitted (similar to the `ConditionalM` call), because the setter method is marked with a Conditional attribute whose condition is not met.\r\n\r\n```\r\nIL_0000:  nop\r\nIL_0001:  newobj     instance void [Basic]Basic.C::.ctor()\r\nIL_0006:  stloc.0\r\nIL_0007:  ret\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\nThe call to `set_P` is emitted into IL, but not that to `ConditionalM`, despite both of them having the same `Conditional` attribute.\r\n\r\n```\r\nIL_0000:  nop\r\nIL_0001:  newobj     instance void [Basic]Basic.C::.ctor()\r\nIL_0006:  stloc.0\r\nIL_0007:  ldloc.0\r\nIL_0008:  ldc.i4.s   32\r\nIL_000a:  callvirt   instance void [Basic]Basic.C::set_P(int32)\r\nIL_000f:  nop\r\nIL_0010:  ret\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/32532","RelatedDescription":"Open issue \"VB and C# ignore Conditional attribute on property setters\" (#32532)"},{"Id":"399969568","IsPullRequest":false,"CreatedAt":"2019-01-16T19:52:05","Actor":"cston","Number":"32531","RawContent":null,"Title":"Track nullability within `Nullable<T>.Value`","State":"open","Body":"```C#\r\nstruct S<T>\r\n{\r\n    internal T F;\r\n}\r\n\r\nclass Program\r\n{\r\n    static void F()\r\n    {\r\n        S<object>? x = new S<object>();\r\n        x.Value.F.ToString(); // maybe null\r\n\r\n        S<object?>? y = new S<object?>() { F = 1 };\r\n        y.Value.F.ToString(); // ok\r\n    }\r\n}\r\n```\r\n\r\nExpected: Warning that `x.Value.F` may be null; no warning for `y.Value.F`.\r\n\r\nActual: No warning for `x.Value.F`; warning for `y.Value.F`.","Url":"https://github.com/dotnet/roslyn/issues/32531","RelatedDescription":"Open issue \"Track nullability within `Nullable<T>.Value`\" (#32531)"},{"Id":"399955489","IsPullRequest":true,"CreatedAt":"2019-01-16T19:14:18","Actor":"jasonmalinowski","Number":"32530","RawContent":null,"Title":"Remove workaround for Navigate To running on old versions of Visual Studio","State":"open","Body":"Our minimum required version is 15.9, so this workaround isn't necessary anymore.","Url":"https://github.com/dotnet/roslyn/pull/32530","RelatedDescription":"Open PR \"Remove workaround for Navigate To running on old versions of Visual Studio\" (#32530)"},{"Id":"399951409","IsPullRequest":false,"CreatedAt":"2019-01-16T19:03:01","Actor":"JoeRobich","Number":"32529","RawContent":null,"Title":"UnsafeTests.FixedBufferUsageDifferentAssemblies Test Failure","State":"open","Body":"Saw this in #32517 - [Test Logs](https://dev.azure.com/dnceng/public/_build/results?buildId=74099&view=ms.vss-test-web.test-result-details) Attempt 1\r\n\r\n```\r\nError message\r\nRoslyn.Test.Utilities.ExecutionException : \\r\\nExecution failed for assembly ''.\\r\\nExpected: TrueFalse\\r\\nActual: TrueTrue\\r\\n\r\n\r\nStack trace\r\n   at Roslyn.Test.Utilities.Desktop.DesktopRuntimeEnvironment.Execute(String moduleName, String[] args, String expectedOutput) in /_/src/Test/Utilities/Portable/Platform/Desktop/DesktopRuntimeEnvironment.cs:line 245\r\n   at Microsoft.CodeAnalysis.Test.Utilities.CompilationVerifier.Emit(String expectedOutput, Nullable`1 expectedReturnCode, String[] args, IEnumerable`1 manifestResources, EmitOptions emitOptions, Verification peVerify, SignatureDescription[] expectedSignatures) in /_/src/Test/Utilities/Portable/CompilationVerifier.cs:line 169\r\n   at Microsoft.CodeAnalysis.Test.Utilities.CommonTestBase.Emit(Compilation compilation, IEnumerable`1 dependencies, IEnumerable`1 manifestResources, SignatureDescription[] expectedSignatures, String expectedOutput, Nullable`1 expectedReturnCode, String[] args, Action`1 assemblyValidator, Action`1 symbolValidator, EmitOptions emitOptions, Verification verify) in /_/src/Test/Utilities/Portable/CommonTestBase.cs:line 154\r\n   at Microsoft.CodeAnalysis.Test.Utilities.CommonTestBase.CompileAndVerifyCommon(Compilation compilation, IEnumerable`1 manifestResources, IEnumerable`1 dependencies, Action`1 sourceSymbolValidator, Action`1 assemblyValidator, Action`1 symbolValidator, SignatureDescription[] expectedSignatures, String expectedOutput, Nullable`1 expectedReturnCode, String[] args, EmitOptions emitOptions, Verification verify) in /_/src/Test/Utilities/Portable/CommonTestBase.cs:line 68\r\n   at Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CompileAndVerify(Compilation compilation, IEnumerable`1 manifestResources, IEnumerable`1 dependencies, Action`1 sourceSymbolValidator, Action`1 validator, Action`1 symbolValidator, SignatureDescription[] expectedSignatures, String expectedOutput, Nullable`1 expectedReturnCode, String[] args, EmitOptions emitOptions, Verification verify) in /_/src/Compilers/Test/Utilities/CSharp/CSharpTestBase.cs:line 679\r\n   at Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CompileAndVerify(CSharpTestSource source, IEnumerable`1 references, IEnumerable`1 manifestResources, IEnumerable`1 dependencies, Action`1 sourceSymbolValidator, Action`1 assemblyValidator, Action`1 symbolValidator, SignatureDescription[] expectedSignatures, String expectedOutput, Nullable`1 expectedReturnCode, String[] args, CSharpCompilationOptions options, CSharpParseOptions parseOptions, EmitOptions emitOptions, TargetFramework targetFramework, Verification verify) in /_/src/Compilers/Test/Utilities/CSharp/CSharpTestBase.cs:line 638\r\n   at Microsoft.CodeAnalysis.CSharp.UnitTests.UnsafeTests.FixedBufferUsageDifferentAssemblies() in /_/src/Compilers/CSharp/Test/Semantic/Semantics/UnsafeTests.cs:line 8615\r\n```","Url":"https://github.com/dotnet/roslyn/issues/32529","RelatedDescription":"Open issue \"UnsafeTests.FixedBufferUsageDifferentAssemblies Test Failure\" (#32529)"},{"Id":"399923960","IsPullRequest":true,"CreatedAt":"2019-01-16T19:00:05","Actor":"dotnet-bot","Number":"32527","RawContent":null,"Title":"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32527","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#32527)"},{"Id":"399923916","IsPullRequest":true,"CreatedAt":"2019-01-16T18:49:03","Actor":"dotnet-bot","Number":"32526","RawContent":null,"Title":"Merge dev16.0-preview2 to dev16.0-preview2-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-preview2 into dev16.0-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview2-to-dev16.0-preview2-vs-deps\ngit reset --hard upstream/dev16.0-preview2-vs-deps\ngit merge upstream/dev16.0-preview2\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0-preview2-to-dev16.0-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32526","RelatedDescription":"Closed or merged PR \"Merge dev16.0-preview2 to dev16.0-preview2-vs-deps\" (#32526)"},{"Id":"399923996","IsPullRequest":true,"CreatedAt":"2019-01-16T18:48:57","Actor":"dotnet-bot","Number":"32528","RawContent":null,"Title":"Merge dev16.0-preview2 to features/enhanced-using","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-preview2 into features/enhanced-using.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview2-to-features/enhanced-using\ngit reset --hard upstream/features/enhanced-using\ngit merge upstream/dev16.0-preview2\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0-preview2-to-features/enhanced-using --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/32528","RelatedDescription":"Closed or merged PR \"Merge dev16.0-preview2 to features/enhanced-using\" (#32528)"},{"Id":"400107550","IsPullRequest":false,"CreatedAt":"2019-01-09T23:28:03","Actor":"dnegstad","Number":"32554","RawContent":null,"Title":"IntelliSense errors for dependency references in newly created Service Fabric project","State":"open","Body":"Regression in 16.0.\r\n\r\n1. Launch the new project dialog\r\n2. Create a Service Fabric Application project\r\n3. Select the .NET Core Actor Service template from the New Service Fabric Service dialog\r\n4. Wait for the solution to load and dependencies to restore\r\n5. Check the Error List window and ensure the filter is set to show IntelliSense errors\r\n\r\nExpected:\r\nNo IntelliSense errors should be reported (dependencies are restored and all references are resolvable).\r\n\r\nActual:\r\nAll references to dependencies (NuGet, SDK, or Project references) in the primary service project (Actor1 by default) are flagged as IntelliSense errors.\r\n\r\nThe errors are only reported for the newly created project and don't reappear after closing and re-opening the solution or unloading and reloading the specific project the errors are associated with. A full build succeeds without any errors or warnings, but doesn't clear the IntelliSense errors.","Url":"https://github.com/dotnet/roslyn/issues/32554","RelatedDescription":"Open issue \"IntelliSense errors for dependency references in newly created Service Fabric project\" (#32554)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"400008346","IsPullRequest":true,"CreatedAt":"2019-01-16T21:35:23","Actor":"MichalStrehovsky","Number":"6836","RawContent":null,"Title":"Enable detection of HW intrinsics","State":"open","Body":"I took the liberty of marking the types containing the hardware intrinsics as `[Intrinsic]` to avoid doing a name check on everything in the system module. It feels like we should take advantage of this attribute in CoreCLR too.\r\n\r\nThis doesn't actually enable the support because RyuJIT unconditionally disables HW intrinsics for prejit (both CoreRT and CPAOT are considered prejit). We might want to do something about this on the RyuJIT side to address that (for CPAOT, to be able to pregenerate best code possible ahead of time, assuming a fixed ISA; and for CoreRT without JIT, where the concerns about AVX-SSE penalty don't apply). See conversation in dotnet/coreclr#21603","Url":"https://github.com/dotnet/corert/pull/6836","RelatedDescription":"Open PR \"Enable detection of HW intrinsics\" (#6836)"},{"Id":"399959609","IsPullRequest":false,"CreatedAt":"2019-01-16T19:25:18","Actor":"sebastianulm","Number":"6835","RawContent":null,"Title":"Undocumented dependency in libObjWriter.so when building","State":"open","Body":"Hello, \r\n\r\nI know this https://github.com/dotnet/corert/issues/5224 is closed, but google still send me there and this bug seems to not provide a solution (anymore). If the object writer library is present in the file system, but still fails to load (and wrongly claims the file does not exist) you need to check for missing shared library dependencies. \r\n\r\nYou do that using ldd which should give you something like this: \r\n\r\n```\r\n> ldd /home/<username>/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27316-02/tools/libobjwriter.so\r\n\tlinux-vdso.so.1 (0x00007ffe62929000)\r\n\tlibrt.so.1 => /usr/lib/librt.so.1 (0x00007f3736b81000)\r\n\tlibdl.so.2 => /usr/lib/libdl.so.2 (0x00007f3736b7c000)\r\n\tlibtinfo.so.5 => not found\r\n\tlibpthread.so.0 => /usr/lib/libpthread.so.0 (0x00007f3736b5b000)\r\n\tlibz.so.1 => /usr/lib/libz.so.1 (0x00007f3736944000)\r\n\tlibm.so.6 => /usr/lib/libm.so.6 (0x00007f37367bf000)\r\n\tlibstdc++.so.6 => /usr/lib/libstdc++.so.6 (0x00007f373662e000)\r\n\tlibgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x00007f3736614000)\r\n\tlibc.so.6 => /usr/lib/libc.so.6 (0x00007f3736450000)\r\n\t/usr/lib64/ld-linux-x86-64.so.2 (0x00007f3737d95000)\r\n```\r\n\r\nThe \"=> not found\" indicates i'm missing a dependency. In this case its libtinfo, which many distributions include in ncurses. The so.5 indicates, that it is part of ncurses 5, which many distros have dropped for ncurses6. \r\nIn this respective case, op should have installed ncurses5-compat-libs-6, which contains the missing library.\r\nAs far as I understand, building objectWriter is not actually something done by the build process, but I have not checked. Maybe checking for depencies in buildscripts/ or in the cmake lists is a good idea?\r\n\r\nAt any rate, https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md should be updated to include ncurses5 as a dependency, as well as a little bit of help dealing with undocumented dependencies. \r\nDo you guys take pull requests for Documentation updates? ","Url":"https://github.com/dotnet/corert/issues/6835","RelatedDescription":"Open issue \"Undocumented dependency in libObjWriter.so when building\" (#6835)"},{"Id":"399940831","IsPullRequest":true,"CreatedAt":"2019-01-16T18:33:52","Actor":"Dotnet-GitSync-Bot","Number":"6834","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/6834","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#6834)"},{"Id":"399812150","IsPullRequest":true,"CreatedAt":"2019-01-16T18:26:15","Actor":"filipnavara","Number":"6832","RawContent":null,"Title":"Move AsyncMethodBuilder to shared.","State":"closed","Body":"Related to https://github.com/dotnet/coreclr/issues/21932.\r\n\r\nUses AsyncMethodBuilder from CoreCLR, <strike>currently missing PROJECTN support</strike>.","Url":"https://github.com/dotnet/corert/pull/6832","RelatedDescription":"Closed or merged PR \"Move AsyncMethodBuilder to shared.\" (#6832)"},{"Id":"399877309","IsPullRequest":true,"CreatedAt":"2019-01-16T17:46:19","Actor":"MichalStrehovsky","Number":"6833","RawContent":null,"Title":"Compute layout for vector intrinsic types","State":"closed","Body":"Vector64/128/256 have special alignment requirements.","Url":"https://github.com/dotnet/corert/pull/6833","RelatedDescription":"Closed or merged PR \"Compute layout for vector intrinsic types\" (#6833)"},{"Id":"399787488","IsPullRequest":false,"CreatedAt":"2019-01-16T12:30:16","Actor":"kvochko","Number":"6831","RawContent":null,"Title":"[ARM/Linux] Filter funclet support","State":"open","Body":"I'm having an issue with wrong value for a frame pointer in filter funclets. The frame pointer is set in the funclet prolog:\r\n```asm\r\n   0x0031b662 <+586>:   stmdb   sp!, {r4, r5, r6, r10, r11, lr}\r\n   0x0031b666 <+590>:   sub     sp, #16\r\n   0x0031b668 <+592>:   ldr.w   r1, [r1, #-28]\r\n   0x0031b66c <+596>:   str     r1, [sp, #12]\r\n   0x0031b66e <+598>:   sub.w   r11, r1, #8\r\n``` \r\nI'm guessing that the last three instructions in this code come from here:\r\nhttps://github.com/dotnet/coreclr/blob/6515cf8e1a3027cd81c6eb2a9307ca7259b46730/src/jit/codegencommon.cpp#L8938-L8949 , but I've also read that PSP is not used in CoreRT. What would be the right fix here? Should this code not be generated at all, or should `RhpCallFilterFunclet` stub account for this?\r\nCC @jkotas @iarischenko @alpencolt ","Url":"https://github.com/dotnet/corert/issues/6831","RelatedDescription":"Open issue \"[ARM/Linux] Filter funclet support\" (#6831)"},{"Id":"399617221","IsPullRequest":true,"CreatedAt":"2019-01-16T08:16:29","Actor":"Dotnet-GitSync-Bot","Number":"6830","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6830","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6830)"},{"Id":"399566711","IsPullRequest":true,"CreatedAt":"2019-01-15T23:32:59","Actor":"marek-safar","Number":"6829","RawContent":null,"Title":"Move more COM exceptions to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6829","RelatedDescription":"Closed or merged PR \"Move more COM exceptions to shared partition\" (#6829)"},{"Id":"399354000","IsPullRequest":true,"CreatedAt":"2019-01-15T19:32:42","Actor":"trylek","Number":"6828","RawContent":null,"Title":"Enable support for lazy static constructors","State":"closed","Body":"To emit code compatible with Crossgen in CPAOT, we need JIT to be\r\nable to emit calls to lazy static constructors. Apart from enabling\r\nsupport for lazy cctors as such, the change also adds the new\r\nrequired helper and fixes CorInfoImpl.ReadyToRun where the helper\r\nwas previously incorrectly encoded - it didn't matter as it was\r\nnever called before I enabled the lazy cctor support.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. With a combination of this and the GC ref map change, I have\r\nreceived the first 100% passing local run of CoreCLR Top200 tests.","Url":"https://github.com/dotnet/corert/pull/6828","RelatedDescription":"Closed or merged PR \"Enable support for lazy static constructors\" (#6828)"},{"Id":"399316445","IsPullRequest":true,"CreatedAt":"2019-01-15T16:36:16","Actor":"kvochko","Number":"6826","RawContent":null,"Title":"Fix invalid cast exception","State":"closed","Body":"This patch fixes https://github.com/dotnet/corert/issues/6825\r\nCC @MichalStrehovsky @iarischenko @alpencolt ","Url":"https://github.com/dotnet/corert/pull/6826","RelatedDescription":"Closed or merged PR \"Fix invalid cast exception\" (#6826)"},{"Id":"399287193","IsPullRequest":false,"CreatedAt":"2019-01-15T16:36:16","Actor":"kvochko","Number":"6825","RawContent":null,"Title":"InvalidCastException with a delegate","State":"closed","Body":"I'm hitting an exception trying to compile the following code:\r\n```c#\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace DelegateTest\r\n{\r\n    [UnmanagedFunctionPointer(CallingConvention.StdCall)]\r\n    public delegate void TestDelegate<T, U>(T arg1, U arg2);\r\n    public class TestClass {\r\n        public class Args\r\n        {\r\n        }\r\n\r\n        private TestDelegate<object, Args> _handler;\r\n\r\n        public event TestDelegate<object, Args> TestEvent\r\n        {\r\n            add\r\n            {\r\n                // Restricted to only one listener\r\n                if (_handler == null)\r\n                {\r\n                    _handler += value;\r\n                }\r\n            }\r\n\r\n            remove\r\n            {\r\n                _handler -= value;\r\n            }\r\n        }\r\n\r\n        private void InvokeHandler()\r\n        {\r\n            Args o = new Args();\r\n\r\n            if (_handler != null)\r\n            {\r\n                //here we send all data to user event handlers\r\n                _handler(this, o);\r\n            }\r\n        }\r\n\r\n        private static void DelegateMethod(object source, Args e)\r\n        {\r\n            Console.WriteLine(\"OK\");\r\n        }\r\n\r\n        public static void Main(string[] args) {\r\n            TestClass testInstance = new TestClass();\r\n            testInstance.TestEvent += DelegateMethod;\r\n            testInstance.InvokeHandler();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe exception looks as follows:\r\n```\r\nCompiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.ReverseDelegateStub__TestDelegate`2(object,Args)\r\n\r\nUnhandled Exception: System.InvalidCastException: Unable to cast object of type 'Internal.TypeSystem.InstantiatedType' to type 'Internal.TypeSystem.Ecma.EcmaType'.\r\n   at Internal.IL.Stubs.PInvokeILEmitter..ctor(MethodDesc targetMethod, PInvokeILEmitterConfiguration pinvokeILEmitterConfiguration, InteropStateManager interopStateManager)\r\n   at Internal.IL.Stubs.PInvokeILEmitter.EmitIL(MethodDesc method, PInvokeILEmitterConfiguration pinvokeILEmitterConfiguration, InteropStateManager interopStateManager)\r\n   at Internal.IL.Stubs.DelegateMarshallingMethodThunk.EmitIL()\r\n   at Internal.IL.CoreRTILProvider.GetMethodIL(MethodDesc method)\r\n   at ILCompiler.Compilation.CombinedILProvider.GetMethodIL(MethodDesc method)\r\n   at ILCompiler.Compilation.ILCache.CreateValueFromKey(MethodDesc key)\r\n   at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n   at Internal.TypeSystem.LockFreeReaderHashtable`2.GetOrCreateValue(TKey key)\r\n   at ILCompiler.Compilation.GetMethodIL(MethodDesc method)\r\n   at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo)\r\n   at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n   at Internal.JitInterface.CorInfoImpl.CompileMethod(IMethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n   at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n   at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeDependencies(List`1 deferredStaticDependencies)\r\n   at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n   at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n   at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n   at ILCompiler.Program.Run(String[] args)\r\n   at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nAm I doing something wrong?\r\nCC @iarischenko @alpencolt ","Url":"https://github.com/dotnet/corert/issues/6825","RelatedDescription":"Closed issue \"InvalidCastException with a delegate\" (#6825)"},{"Id":"399349094","IsPullRequest":false,"CreatedAt":"2019-01-15T13:39:41","Actor":"tritao","Number":"6827","RawContent":null,"Title":"LLVM dependency missing symbols on Linux","State":"open","Body":"```\r\njoao@joao-HP:~/dev/dotnet/corert/bin/Linux.x64.Debug/tools$ dotnet ilc.dll --out app hello/bin/Debug/netcoreapp2.2/hello.dll --reference ../sdk/System.Private.CoreLib.dll --reference ../framework/System.Runtime.dll --verbose --wasm\r\n\r\nUnhandled Exception: System.EntryPointNotFoundException: Unable to find an entry point named 'LLVMModuleCreateWithName' in shared library 'libLLVM'.\r\n   at LLVMSharp.LLVM.ModuleCreateWithName(String ModuleID)\r\n```\r\n\r\nCoreRT is using `libllvm` version 6.0.0:\r\n\r\n`6.0.0-beta1/runtimes/linux-x64/native/libLLVM.so`:\r\n```\r\njoao@joao-HP:~/dev/dotnet/corert/packages/libllvm$ llvm-nm-6.0 6.0.0-beta1/runtimes/linux-x64/native/libLLVM.so | grep LLVMModuleCreateWithName\r\njoao@joao-HP:~/dev/dotnet/corert/packages/libllvm$ \r\n```\r\n\r\nThe previous package provides the APIs as expected:\r\n\r\n`5.0.1/runtimes/linux-x64/native/libLLVM.so`:\r\n```\r\njoao@joao-HP:~/dev/dotnet/corert/packages/libllvm$ llvm-nm-6.0 5.0.1/runtimes/linux-x64/native/libLLVM.so | grep LLVMModuleCreateWithName\r\n0000000000838d20 T LLVMModuleCreateWithName\r\n0000000000838db0 T LLVMModuleCreateWithNameInContext\r\n```\r\n\r\nI am surprised this has not been caught by the CI bots. Is WebAssembly not currently tested as part of CI?\r\n\r\nReported upstream: https://github.com/Microsoft/LLVMSharp/issues/88","Url":"https://github.com/dotnet/corert/issues/6827","RelatedDescription":"Open issue \"LLVM dependency missing symbols on Linux\" (#6827)"},{"Id":"399228390","IsPullRequest":false,"CreatedAt":"2019-01-15T08:04:51","Actor":"z1c0","Number":"6824","RawContent":null,"Title":"[ILVerify] BadImageFormatGeneric when verifying a .netmodule","State":"open","Body":"Calling `ILVerify.exe` for a *.netmodule* results in a `BadImageFormatGeneric` error.\r\ne.g. \r\n\r\n`ILVerify.exe \"C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.EnterpriseServices.Wrapper.dll\" -r \"C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\mscorlib.dll\"`\r\n\r\nresults in:\r\n\r\n`Error: [TEMPORARY EXCEPTION MESSAGE] BadImageFormatGeneric:`","Url":"https://github.com/dotnet/corert/issues/6824","RelatedDescription":"Open issue \"[ILVerify] BadImageFormatGeneric when verifying a .netmodule\" (#6824)"},{"Id":"398680628","IsPullRequest":false,"CreatedAt":"2019-01-15T07:58:41","Actor":"TFTomSun","Number":"6821","RawContent":null,"Title":"Exception when rd.xml is specified","State":"closed","Body":"i tried to add reflection information as described here: \r\nhttps://github.com/dotnet/corert/blob/master/samples/WebApi/README.md#using-reflection\r\n\r\nhowever when I run the build again, I get the following exception:\r\n\r\n> \r\n> EXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) \r\n> EXEC : error : Sequence contains no elements [D:\\Git\\Tooling\\src\\Core\\<app>\\<app>.csproj]\r\n>   System.InvalidOperationException: Sequence contains no elements\r\n>      at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)\r\n>      at ILCompiler.RdXmlRootProvider.AddCompilationRoots(IRootingServiceProvider rootProvider)\r\n>      at ILCompiler.Compilation..ctor(DependencyAnalyzerBase`1 dependencyGraph, NodeFactory nodeFactory, IEnumerable`1 compilationRoots, ILProvider ilProvider, DebugInformationProvider debugInformationProvider, DevirtualizationManager devirtualizationManager, Logger logger)\r\n>      at ILCompiler.ILScannerBuilder.ToILScanner()\r\n>      at ILCompiler.Program.Run(String[] args)\r\n>      at ILCompiler.Program.Main(String[] args)","Url":"https://github.com/dotnet/corert/issues/6821","RelatedDescription":"Closed issue \"Exception when rd.xml is specified\" (#6821)"},{"Id":"399141572","IsPullRequest":true,"CreatedAt":"2019-01-15T02:38:00","Actor":"Dotnet-GitSync-Bot","Number":"6823","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/6823","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6823)"},{"Id":"399123697","IsPullRequest":true,"CreatedAt":"2019-01-15T00:50:07","Actor":"kouvel","Number":"6822","RawContent":null,"Title":"Fix a thread pool deadlock issue","State":"closed","Body":"Fixes https://github.com/dotnet/corert/issues/6780:\r\n- `ShouldStopProcessingWorkNow` was checking the count of existing threads and decrementing the count of processing threads. Due to differences from CoreCLR, the condition needs to be different. The effect was that when hill climbing decides to crease the thread count goal, `ShouldStop...` stops all threads that were processing work if there are enough existing threads, and even though there are several thread requests, the now-all-waiting threads are not released to process more work, leading to deadlock. The condition in `ShouldAdjustMaxWorkersActive` was also incorrect, fixed both.\r\n- Fixed a few other small things that I saw\r\n\r\nPerf results for this test case:\r\n\r\n```c#\r\n        int iterationCount = 20_000_000;\r\n        var done = new ManualResetEvent(false);\r\n\r\n        WaitCallback wc = null;\r\n        wc = delegate\r\n        {\r\n            if (Interlocked.Decrement(ref iterationCount) == 0)\r\n            {\r\n                done.Set();\r\n            }\r\n            else\r\n            {\r\n                ThreadPool.QueueUserWorkItem(wc);\r\n            }\r\n        };\r\n\r\n        var sw = Stopwatch.StartNew();\r\n        for (int i = 0, n = Environment.ProcessorCount; i < n; ++i)\r\n        {\r\n            ThreadPool.QueueUserWorkItem(wc);\r\n        }\r\n        done.WaitOne();\r\n        sw.Stop();\r\n        Console.WriteLine($\"{sw.Elapsed.TotalMilliseconds,10:0.00}\");\r\n```\r\n\r\nAs written:\r\n\r\n```\r\nwindows coreclr: 2213\r\n  linux coreclr: 2160\r\n windows corert: 2049\r\n   linux corert: 3302\r\n```\r\n\r\nAfter adding some delay to the thread (calculate Fib(15) recursively), with 2 M work items instead of 20 M:\r\n\r\n```\r\nwindows coreclr: 1840\r\n  linux coreclr: 2409\r\n windows corert: 1528\r\n   linux corert: 1977\r\n```\r\n\r\nI don't fully understand yet why the CoreRT implementation on Linux is relatively slower when there is no delay, needs further investigation. The same implementation on Windows is not hitting the issue, and there appears to be something to do with scheduling and threads falling into a certain pattern.","Url":"https://github.com/dotnet/corert/pull/6822","RelatedDescription":"Closed or merged PR \"Fix a thread pool deadlock issue\" (#6822)"},{"Id":"398282501","IsPullRequest":true,"CreatedAt":"2019-01-13T22:34:59","Actor":"trylek","Number":"6809","RawContent":null,"Title":"Remove the context cookie from method context","State":"closed","Body":"Based on Michal's feedback I have removed the cookie from\r\nMethodContext as unreliable for method context comparisons. Thanks\r\nto this change I could carry out several additional simplifications\r\n- I have changed MethodContext to be a struct and I simplified\r\nits manipulation in the CPAOT code.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6809","RelatedDescription":"Closed or merged PR \"Remove the context cookie from method context\" (#6809)"},{"Id":"398647777","IsPullRequest":true,"CreatedAt":"2019-01-13T11:24:57","Actor":"MichalStrehovsky","Number":"6820","RawContent":null,"Title":"Change reflection defaults","State":"open","Body":"The biggest issue people have been hitting when trying out CoreRT on existing projects is reflection. This is due to .NET's heritage of being a dynamic runtime where generating new code at runtime is how you do things.\r\n\r\nThis pull request does two things: adds a document describing the challenges of reflection in an AOT compiled runtime, and **establishes new compilation defaults that improve the reflection experience** (new defaults are documented in the doc that is part of the pull request).\r\n\r\nThe improvement in reflection experience is not free. We are trading size and compilation speed for compatibility. E.g. the size of the ASP.NET WebApi sample we have in our repo goes from 24 MB to 30 MB. The size of the MonoGame sample goes from 6 MB to 9 MB. While the size increase is pretty significant (30-50%), the resulting size of the deployment is still very competitive with the size of a CoreCLR self contained app, or Mono's mkbundle (both of which set a pretty low bar).\r\n\r\nPeople who would like deployment sizes that are more competitive with Go and Rust can **opt into** the optimizations that used to be the default before this pull request (described in the doc and linked from a message the build emits). We are going to add more of these optimizations in the future.\r\n\r\nTo see the effect, I've updated the RD.XML files we have in the samples directory. I expect we'll be able to further minimize the amount of RD.XML needed once I bring back 3ec32cc13497f9d720349032a61da355af1ace3f (that improves reflection experience with generics).","Url":"https://github.com/dotnet/corert/pull/6820","RelatedDescription":"Open PR \"Change reflection defaults\" (#6820)"},{"Id":"398606761","IsPullRequest":false,"CreatedAt":"2019-01-13T00:41:44","Actor":"TFTomSun","Number":"6819","RawContent":null,"Title":"How to compile into one single executable?","State":"open","Body":"The CoreRT is advertised as a possibility to compile any application into one single native executable. I have an application with some project and nuget dependencies. Is it already possible to create a single exe out of it? If so, how? Is there a special build flag, that i need to pass?\r\n\r\nThanks in advance","Url":"https://github.com/dotnet/corert/issues/6819","RelatedDescription":"Open issue \"How to compile into one single executable?\" (#6819)"},{"Id":"398580192","IsPullRequest":true,"CreatedAt":"2019-01-12T21:25:01","Actor":"MichalStrehovsky","Number":"6818","RawContent":null,"Title":"Remove unused parameter to ReadyToRunHelperNode constructor","State":"closed","Body":"Became unnecessary after #6688. Should have done it then...\r\n\r\nAlso delete references to it from places that don't actually use it.","Url":"https://github.com/dotnet/corert/pull/6818","RelatedDescription":"Closed or merged PR \"Remove unused parameter to ReadyToRunHelperNode constructor\" (#6818)"},{"Id":"398577907","IsPullRequest":true,"CreatedAt":"2019-01-12T19:00:05","Actor":"MichalStrehovsky","Number":"6817","RawContent":null,"Title":"Don't fail compilation if a native file was an input","State":"closed","Body":"Sometimes we see garbage passed as input to ILC. This is normally ignored, but `--rootallapplicationassemblies` looks at all inputs.","Url":"https://github.com/dotnet/corert/pull/6817","RelatedDescription":"Closed or merged PR \"Don't fail compilation if a native file was an input\" (#6817)"},{"Id":"398577496","IsPullRequest":true,"CreatedAt":"2019-01-12T18:59:52","Actor":"MichalStrehovsky","Number":"6816","RawContent":null,"Title":"Fix IL scanning of unboxing thunks on byref-like generic types","State":"closed","Body":"Fixes a compilation failure when compiling ASP.NET with `<RootAllApplicationAssemblies>true</RootAllApplicationAssemblies>`.\r\n\r\nThe fix is to mirror the dependency that the normal `MethodCodeNode` has for special unboxing thunks.","Url":"https://github.com/dotnet/corert/pull/6816","RelatedDescription":"Closed or merged PR \"Fix IL scanning of unboxing thunks on byref-like generic types\" (#6816)"},{"Id":"398577412","IsPullRequest":true,"CreatedAt":"2019-01-12T18:05:59","Actor":"MichalStrehovsky","Number":"6815","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6815","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6815)"},{"Id":"398504431","IsPullRequest":true,"CreatedAt":"2019-01-12T04:13:28","Actor":"Dotnet-GitSync-Bot","Number":"6813","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @fiigii","Url":"https://github.com/dotnet/corert/pull/6813","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6813)"},{"Id":"398507519","IsPullRequest":true,"CreatedAt":"2019-01-12T03:43:19","Actor":"cshung","Number":"6814","RawContent":null,"Title":"Make sure we emit a BOM when generating cpp","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6814","RelatedDescription":"Closed or merged PR \"Make sure we emit a BOM when generating cpp\" (#6814)"},{"Id":"398463575","IsPullRequest":true,"CreatedAt":"2019-01-11T22:20:33","Actor":"MichalStrehovsky","Number":"6812","RawContent":null,"Title":"Update CppCodegen status","State":"closed","Body":"@dotnet-bot skip ci please","Url":"https://github.com/dotnet/corert/pull/6812","RelatedDescription":"Closed or merged PR \"Update CppCodegen status\" (#6812)"},{"Id":"398434073","IsPullRequest":true,"CreatedAt":"2019-01-11T20:49:23","Actor":"Dotnet-GitSync-Bot","Number":"6811","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6811","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6811)"},{"Id":"398306144","IsPullRequest":true,"CreatedAt":"2019-01-11T15:13:11","Actor":"kbaladurin","Number":"6810","RawContent":null,"Title":"[CppCodeGen] Fix importing ldftn","State":"closed","Body":"In the case of ldvirtftn we should pop object off the stack. This patch fixes `InvalidProgramException` during compilation:\r\n```\r\nCommon Language Runtime detected an invalid program. ([S.P.CoreLib]System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1<bool,System.__Canon>.get_MoveNextAction())\r\n```","Url":"https://github.com/dotnet/corert/pull/6810","RelatedDescription":"Closed or merged PR \"[CppCodeGen] Fix importing ldftn\" (#6810)"},{"Id":"398176634","IsPullRequest":true,"CreatedAt":"2019-01-11T09:09:14","Actor":"Dotnet-GitSync-Bot","Number":"6808","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6808","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6808)"},{"Id":"398139925","IsPullRequest":true,"CreatedAt":"2019-01-11T08:00:18","Actor":"jkotas","Number":"6807","RawContent":null,"Title":"Avoid infinite recursion with current CultureInfo initialization","State":"closed","Body":"Fixes #6804","Url":"https://github.com/dotnet/corert/pull/6807","RelatedDescription":"Closed or merged PR \"Avoid infinite recursion with current CultureInfo initialization\" (#6807)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"400094397","IsPullRequest":false,"CreatedAt":"2019-01-17T03:22:56","Actor":"timmydo","Number":"2837","RawContent":null,"Title":"Self-contained linux app missing libhostfxr.so","State":"open","Body":"Using https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/dotnet-sdk-latest-linux-x64.tar.gz \r\n\r\nRUN dotnet restore --runtime linux-x64 --configfile /app/Nuget.Config\r\nRUN dotnet publish -c Release -f netcoreapp3.0 --self-contained --runtime linux-x64 --no-restore -o /out\r\n\r\ncsproj is roughly\r\n```\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp3.0</TargetFrameworks>\r\n    <OutputType>Exe</OutputType>\r\n    <RuntimeIdentifiers>win10-x64;linux-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n    <ItemGroup>\r\n      <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    </ItemGroup>\r\n```\r\n\r\n```\r\n# ./Watchdogs\r\nA fatal error occurred, the required library libhostfxr.so could not be found.\r\nIf this is a self-contained application, that library should exist in [/app/Watchdogs/].\r\nIf this is a framework-dependent application, install the runtime in the default location [/usr/share/dotnet] or use the DOTNET_ROOT environment variable to specify the runtime location.\r\n\r\n# ldd ./Watchdogs\r\n        linux-vdso.so.1 (0x00007fff783f2000)\r\n        libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007ff3e590a000)\r\n        libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007ff3e56ed000)\r\n        libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007ff3e536b000)\r\n        libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007ff3e5067000)\r\n        libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007ff3e4e50000)\r\n        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007ff3e4ab1000)\r\n        /lib64/ld-linux-x86-64.so.2 (0x00007ff3e5b0e000)\r\n```\r\n\r\nI think this is a recent development. The previous sdk nightly worked fine. There are no *.so files in the output directory\r\n","Url":"https://github.com/dotnet/sdk/issues/2837","RelatedDescription":"Open issue \"Self-contained linux app missing libhostfxr.so\" (#2837)"},{"Id":"400052237","IsPullRequest":true,"CreatedAt":"2019-01-17T02:30:15","Actor":"dotnet-bot","Number":"2836","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2836","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2836)"},{"Id":"400052227","IsPullRequest":true,"CreatedAt":"2019-01-17T00:01:47","Actor":"dotnet-bot","Number":"2835","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2835","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#2835)"},{"Id":"400052208","IsPullRequest":true,"CreatedAt":"2019-01-17T00:01:45","Actor":"dotnet-bot","Number":"2834","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2834","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2834)"},{"Id":"400052180","IsPullRequest":true,"CreatedAt":"2019-01-17T00:01:40","Actor":"dotnet-bot","Number":"2833","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2833","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#2833)"},{"Id":"399589549","IsPullRequest":true,"CreatedAt":"2019-01-16T22:12:01","Actor":"dotnet-bot","Number":"2827","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2827","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2827)"},{"Id":"399648847","IsPullRequest":true,"CreatedAt":"2019-01-16T22:11:34","Actor":"dotnet-bot","Number":"2829","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2829","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2829)"},{"Id":"399568012","IsPullRequest":true,"CreatedAt":"2019-01-16T20:06:48","Actor":"nguerrera","Number":"2825","RawContent":null,"Title":"Use invariant form of ToUpper/ToLower","State":"closed","Body":"Fixing a little annoyance spotted while reading code nearby. Some uses of ToUpper/ToLower were depending on current culture.","Url":"https://github.com/dotnet/sdk/pull/2825","RelatedDescription":"Closed or merged PR \"Use invariant form of ToUpper/ToLower\" (#2825)"},{"Id":"399799438","IsPullRequest":true,"CreatedAt":"2019-01-16T18:28:31","Actor":"dotnet-maestro[bot]","Number":"2830","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19065.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19065.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2830","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2830)"},{"Id":"399921941","IsPullRequest":true,"CreatedAt":"2019-01-16T17:41:44","Actor":"nugetlurker","Number":"2832","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5781 into sdk","State":"open","Body":"Insert NuGet Build 5.0.0-preview3.5781 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/2832","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview3.5781 into sdk\" (#2832)"},{"Id":"399921922","IsPullRequest":true,"CreatedAt":"2019-01-16T17:41:40","Actor":"nugetlurker","Number":"2831","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5781 into sdk","State":"open","Body":"Insert NuGet Build 5.0.0-preview3.5781 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/2831","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview3.5781 into sdk\" (#2831)"},{"Id":"399149064","IsPullRequest":true,"CreatedAt":"2019-01-16T02:19:36","Actor":"jainaashish","Number":"2821","RawContent":null,"Title":"Insert NuGet Build 4.9.3-rtm.5777 into sdk 2.2.1xx","State":"closed","Body":"@livarcocc ","Url":"https://github.com/dotnet/sdk/pull/2821","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 4.9.3-rtm.5777 into sdk 2.2.1xx\" (#2821)"},{"Id":"399599549","IsPullRequest":false,"CreatedAt":"2019-01-16T00:46:49","Actor":"nguerrera","Number":"2828","RawContent":null,"Title":"Improve testing of PreserveCompilationContext with approximation of what Razor does for runtime compilation","State":"open","Body":"Follow-up to offline conversation around https://github.com/dotnet/cli/issues/10502#issuecomment-453690369\r\n\r\nHistorically, we have broken this scenario too frequently. \r\n\r\nWe have identified two things:\r\n\r\n1. Code flow delays have been too long and we end up only trying end-to-end scenarios too close to release dates. \r\n\r\n2. It would be nice to have a unit test in dotnet/sdk that can catch as many related issues as possible immediately.\r\n\r\nAs of today, we finally have all involved repos inserting up to core-sdk automatically, so (1) will hopefully get better soon. 🙏 \r\n\r\nThis issue tracks (2). The idea we sketched out was to have a test that builds and runs a console app, which:\r\n\r\n1. Has a P2P reference\r\n2. References shared framework(s)\r\n3. Has a snippet of code that substantially replicates how razor enumerates compilation references at runtime\r\n4. Also enumerates runtime assemblies from deps file along the same lines\r\n\r\nLet me know if I missed something here, and please help to define the snippets of code for (3) and (4)\r\n\r\n@rynowak @pranavkm @mkArtakMSFT\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2828","RelatedDescription":"Open issue \"Improve testing of PreserveCompilationContext with approximation of what Razor does for runtime compilation\" (#2828)"},{"Id":"399240875","IsPullRequest":true,"CreatedAt":"2019-01-16T00:26:49","Actor":"dsplaisted","Number":"2822","RawContent":null,"Title":"Resolve runtime pack assets","State":"closed","Body":"Fixes https://github.com/dotnet/cli/issues/10096","Url":"https://github.com/dotnet/sdk/pull/2822","RelatedDescription":"Closed or merged PR \"Resolve runtime pack assets\" (#2822)"},{"Id":"399003063","IsPullRequest":true,"CreatedAt":"2019-01-15T23:25:03","Actor":"nugetlurker","Number":"2820","RawContent":null,"Title":"Insert NuGet Build 4.9.3-rtm.5777 into sdk","State":"closed","Body":"Insert NuGet Build 4.9.3-rtm.5777 into sdk release/2.1.5xx branch","Url":"https://github.com/dotnet/sdk/pull/2820","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 4.9.3-rtm.5777 into sdk\" (#2820)"},{"Id":"399572528","IsPullRequest":true,"CreatedAt":"2019-01-15T22:55:53","Actor":"wli3","Number":"2826","RawContent":null,"Title":"Do no run GenerateShimsAssets when PackAsToolShimRuntimeIdentifiers is not set","State":"open","Body":"fix https://github.com/dotnet/sdk/pull/2413\r\n\r\nI think the Windows no fail is due to 2.1.402 does not have the change https://github.com/dotnet/sdk/pull/2413 . It failed on my 3.0-preview\r\n\r\nThe root cause of https://github.com/dotnet/cli/issues/10607 is: Shim generation is moved to build step, so no new exe is created during publish step. However, generate shim require non self contain since there is no existing logic to create a shim on top of an existing exe. The good thing is most of the build project do not need shim generation. So only fail when it is set.\r\n\r\nThis is a \"good enough solution\". Since it will still fail to build when _PackAsToolShimRuntimeIdentifiers_ set. But, in the end, it is _build_ depends on _GenerateShimsAssets_. Removing it and put it back to _publish_ will make signing much harder.","Url":"https://github.com/dotnet/sdk/pull/2826","RelatedDescription":"Open PR \"Do no run GenerateShimsAssets when PackAsToolShimRuntimeIdentifiers is not set\" (#2826)"},{"Id":"399498327","IsPullRequest":true,"CreatedAt":"2019-01-15T21:24:41","Actor":"nguerrera","Number":"2824","RawContent":null,"Title":"Sort xlf files","State":"closed","Body":"Our xlf files were created before xliff-tasks was changed to preserve sort order by inserting before first key that would sort after it.\r\n\r\nThis sorts all of the xlf and the tooling should then keep it correctly sorted. It should help to prevent merge conflicts in more cases moving forward. The sorting was done with `dotnet build /t:SortXlf` from https://github.com/dotnet/xliff-tasks/pull/50\r\n\r\nRecently, a change reordered strings.tr.xlf substantially, and I do not know how that happened. If you see a change where data is being moved or inserted out of order, please tag me to investigate the root cause.\r\n\r\nFYI, @tmeschter \r\n","Url":"https://github.com/dotnet/sdk/pull/2824","RelatedDescription":"Closed or merged PR \"Sort xlf files\" (#2824)"},{"Id":"399335825","IsPullRequest":true,"CreatedAt":"2019-01-15T19:16:40","Actor":"dotnet-maestro[bot]","Number":"2823","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19064.4\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19064.4\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2823","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2823)"},{"Id":"398943648","IsPullRequest":true,"CreatedAt":"2019-01-15T19:03:56","Actor":"v-zbsail","Number":"2819","RawContent":null,"Title":"LOC CHECKIN | dotnet/sdk master | 20190114","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2819","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/sdk master | 20190114\" (#2819)"},{"Id":"398836170","IsPullRequest":false,"CreatedAt":"2019-01-14T10:54:16","Actor":"theimowski","Number":"2818","RawContent":null,"Title":"ApplicationIcon property doesn't work for F# projects when targeting Full .NET","State":"open","Body":"This works correctly for C# and VB.NET projects:\r\n\r\n1. `dotnet new console -lang C#` / `dotnet new console -lang VB`\r\n2. place any icon file (icon.ico) in the root directory\r\n3. in project file, change `TargetFramework` to `net45` and add `<ApplicationIcon>icon.ico</ApplicationIcon>`\r\n4. `dotnet build`\r\n\r\nThe *.exe in `bin/Debug/net45` has a proper icon set.\r\nIf however you repeat the same steps above, but for F# (`dotnet new console -lang F#`) the icon is not set.\r\n\r\n---\r\n\r\n```\r\n> dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.503\r\n Commit:    4c506e0f35\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.503\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.7\r\n  Commit:  cca5d72d48\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/sdk/issues/2818","RelatedDescription":"Open issue \"ApplicationIcon property doesn't work for F# projects when targeting Full .NET\" (#2818)"},{"Id":"398624608","IsPullRequest":false,"CreatedAt":"2019-01-13T06:36:42","Actor":"himalpatel81","Number":"2817","RawContent":null,"Title":"Error with dotnet publish ","State":"open","Body":"I'm trying to publish an ASP.NET Core .NET Framework project using CLI and it fails with the error message \"error CS0246: The type or namespace name 'Leadtools' could not be found (are you missing a using directive or an assembly reference?) [WebApplication1.csproj] \" \r\n\r\nLeadTools is .net Framework nuget. I read few articles saying that dotnet cli doesnt support it. I also tried to use msbuild but getting the same error. \r\n\r\nHere is the command that i use\r\n\r\nCLI:\r\n`dotnet publish /nologo /p:PublishProfile=Release  /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /maxcpucount:1 /p:platform=\"Any CPU\" /p:configuration=\"Release\" /p:DesktopBuildPackageLocation=\"output.zip\"`\r\n\r\nMSBuild:\r\n\r\n`msbuild \"WebApplication1.csproj\" publish /nologo /p:PublishProfile=Release  /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /maxcpucount:1 /p:platform=\"Any CPU\" /p:configuration=\"Release\" /p:DesktopBuildPackageLocation=\"output.zip\"\r\n`\r\nand Here is the repro project\r\n[Repro](https://github.com/himalpatel81/DotNETCLIIssue)\r\n","Url":"https://github.com/dotnet/sdk/issues/2817","RelatedDescription":"Open issue \"Error with dotnet publish \" (#2817)"},{"Id":"398509159","IsPullRequest":true,"CreatedAt":"2019-01-12T20:41:56","Actor":"peterhuene","Number":"2816","RawContent":null,"Title":"Limit default apphost feature to netcoreapp3.0 targeted apps.","State":"closed","Body":"This commit limits the default apphost feature to applications that target\r\n`netcoreapp3.0` or later.\r\n\r\nThis prevents altering the expected outputs of previous projects after an\r\nupgrade to a 3.0 SDK.\r\n\r\nMore importantly, this allows for the removal of the hack that was put in place\r\nto force a restore of the SDK RID to obtain the apphost; the apphost is now\r\nresolved through framework references.\r\n\r\nFixes dotnet/cli#10566.","Url":"https://github.com/dotnet/sdk/pull/2816","RelatedDescription":"Closed or merged PR \"Limit default apphost feature to netcoreapp3.0 targeted apps.\" (#2816)"},{"Id":"398507434","IsPullRequest":true,"CreatedAt":"2019-01-12T07:55:30","Actor":"dotnet-maestro[bot]","Number":"2815","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19061.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19061.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2815","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2815)"},{"Id":"398507229","IsPullRequest":true,"CreatedAt":"2019-01-12T01:32:18","Actor":"jkoritzinsky","Number":"2814","RawContent":null,"Title":"Add SDK support for upcoming .NET Core 3.0 Managed COM Server support","State":"open","Body":"Add an MSBuild property and tasks/targets to enable creating a COM Server running on .NET Core.\r\n\r\nIf the user sets the `UseComHost` property and has an rid targeting Windows, the build will generate a `.clsidmap` file, make a copy of `comhost.dll`, embed the CLSIDmap if possible, and copy a renamed comhost.dll (along with the CLSIDmap if it wasn't embedded) to the output directory.\r\n\r\nRight now since `comhost.dll` isn't in the AppHost package (it's still in PR review). I've disabled those tests for CI. To test them manually, add a dll in the `.nuget` folder in the apphost package next to `apphost.exe` and re-enable them.\r\n\r\nAlso, includes a property for internal use (i.e. those of us on the interop team) to explicitly not embed the CLSIDmap.\r\n\r\ncc: @AaronRobinsonMSFT","Url":"https://github.com/dotnet/sdk/pull/2814","RelatedDescription":"Open PR \"Add SDK support for upcoming .NET Core 3.0 Managed COM Server support\" (#2814)"},{"Id":"397961784","IsPullRequest":false,"CreatedAt":"2019-01-11T23:07:56","Actor":"greyb","Number":"2809","RawContent":null,"Title":"Add ReferencePath to Microsoft.NET.Sdk.props AssemblySearchPaths","State":"closed","Body":"AssemblySearchPaths has no ReferencePath, why?","Url":"https://github.com/dotnet/sdk/issues/2809","RelatedDescription":"Closed issue \"Add ReferencePath to Microsoft.NET.Sdk.props AssemblySearchPaths\" (#2809)"},{"Id":"398016176","IsPullRequest":true,"CreatedAt":"2019-01-11T21:00:15","Actor":"dotnet-bot","Number":"2810","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2810","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2810)"},{"Id":"398251998","IsPullRequest":false,"CreatedAt":"2019-01-11T18:01:11","Actor":"am11","Number":"2811","RawContent":null,"Title":"Support for .NET Framework TFM tools","State":"closed","Body":"`dotnet pack /p:PackAsTool=true` and `dotnet-tool` provide a nice mechanism to create and deliver utility tools in a uniform manner. Unfortunately, it only supports .NET Core (PackTool targets has [explicit check](https://github.com/dotnet/sdk/blob/f0a1246be1ebe11a88097ac3dd5736f0ad15b855/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.PackTool.targets#L75-L76)).\r\n\r\nFor utilities written with .NET Framework TFMs, we are left with quite inconvenient option: manually collect all dependencies of console app's closure and deliver as a zip file (would be nice to know if there is an easy workaround available meanwhile, by NuGet or MSBuild?)\r\n\r\nIf it is feasible, please consider enabling .NET Framework support in PackTool targets.\r\n\r\nSteps to repro:\r\n\r\n```pwsh\r\n#!/usr/bin/env pwsh\r\n\r\npushd /temp\r\ndotnet new console -n mydntool\r\npushd mydntool\r\n# replace TFM to net471 (system has C:\\Program Files\\git\\usr\\bin\\ in PATH containing sed etc.)\r\nsed -i '/<\\/TargetFramework\\>/c\\    <TargetFramework\\>net471\\<\\/TargetFramework\\>' mydntool.csproj\r\ndotnet pack /p:PackAsTool=true\r\ndotnet tool install mydntool --add-source bin/Debug --tool-path mydir\r\n```\r\n\r\nExpected:\r\n\r\n> You can invoke the tool using the following command: mydntool\r\nTool 'mydntool' (version '1.0.0') was successfully installed.\r\n\r\nActual:\r\n\r\n> C:\\Program Files\\dotnet\\sdk\\2.1.403\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.PackTool.targets(32,5): error NETSDK1054: only supports .NET Core. [C:\\temp\\mydntool\\mydntool.csproj]\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2811","RelatedDescription":"Closed issue \"Support for .NET Framework TFM tools\" (#2811)"},{"Id":"398280330","IsPullRequest":true,"CreatedAt":"2019-01-11T17:52:24","Actor":"dotnet-maestro[bot]","Number":"2812","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19060.8\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19060.8\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2812","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2812)"},{"Id":"398310177","IsPullRequest":false,"CreatedAt":"2019-01-11T14:25:46","Actor":"rla4","Number":"2813","RawContent":null,"Title":"dotnet build fails when OutputPath starts with the source path","State":"open","Body":"When building an SDK project, the source files are not being collected correctly, causing a \"CS5001: Program does not contain a static 'Main' method suitable for an entry point\" error. If I change the `OutputPath` to anything other than a substring of the source path, all source files are picked up just fine and build succeeds. Issue only happens after the 2nd build (presumably because the output folder is not empty).\r\n\r\nStill repro'ed on latest stable 2.2, but could *not* repro on `3.0.100-preview-009812`, so possibly an issue that only affects < 3.0.\r\n\r\nRepro steps:\r\n\r\n```\r\nmkdir C:\\Temp2 && cd C:\\Temp2\r\n@echo {\"sdk\":{\"version\":\"2.2.100\"}}> global.json\r\nmkdir TestFullPath && cd TestFullPath && dotnet new console && cd ..\r\ndotnet build C:\\Temp2\\TestFullPath\\TestFullPath.csproj -o C:\\Temp2\\Test\r\ndotnet build C:\\Temp2\\TestFullPath\\TestFullPath.csproj -o C:\\Temp2\\Test\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nC:\\Temp2\r\nλ cd ..\r\n\r\nC:\\\r\nλ rm -rf C:\\Temp2\r\n\r\nC:\\\r\nλ mkdir C:\\Temp2 && cd C:\\Temp2\r\n\r\nC:\\Temp2\r\nλ @echo {\"sdk\":{\"version\":\"2.2.100\"}}> global.json\r\n\r\nC:\\Temp2\r\nλ mkdir TestFullPath && cd TestFullPath && dotnet new console && cd ..\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on C:\\Temp2\\TestFullPath\\TestFullPath.csproj...\r\n  Restoring packages for C:\\Temp2\\TestFullPath\\TestFullPath.csproj...\r\n  Generating MSBuild file C:\\Temp2\\TestFullPath\\obj\\TestFullPath.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Temp2\\TestFullPath\\obj\\TestFullPath.csproj.nuget.g.targets.\r\n  Restore completed in 193.24 ms for C:\\Temp2\\TestFullPath\\TestFullPath.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nC:\\Temp2\r\nλ dotnet build C:\\Temp2\\TestFullPath\\TestFullPath.csproj -o C:\\Temp2\\Test\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 35.26 ms for C:\\Temp2\\TestFullPath\\TestFullPath.csproj.\r\n  TestFullPath -> C:\\Temp2\\Test\\TestFullPath.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.06\r\n\r\nC:\\Temp2\r\nλ dotnet build C:\\Temp2\\TestFullPath\\TestFullPath.csproj -o C:\\Temp2\\Test\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 37.45 ms for C:\\Temp2\\TestFullPath\\TestFullPath.csproj.\r\nCSC : error CS5001: Program does not contain a static 'Main' method suitable for an entry point [C:\\Temp2\\TestFullPath\\TestFullPath.csproj]\r\n\r\nBuild FAILED.\r\n\r\nCSC : error CS5001: Program does not contain a static 'Main' method suitable for an entry point [C:\\Temp2\\TestFullPath\\TestFullPath.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.94\r\n```","Url":"https://github.com/dotnet/sdk/issues/2813","RelatedDescription":"Open issue \"dotnet build fails when OutputPath starts with the source path\" (#2813)"},{"Id":"397949083","IsPullRequest":false,"CreatedAt":"2019-01-10T18:02:39","Actor":"jeffhube","Number":"2808","RawContent":null,"Title":"Intermittent build failures with no error messages","State":"open","Body":"I'm encountering intermittent build failures when using `dotnet run` where there is no output describing what failed. The failure can occur immediately after a previous `dotnet run` succeeded for the same project, with no changes made to the project files.\r\n\r\nAny suggestions on how I can troubleshoot this?\r\n\r\n```\r\n$ dotnet run --project foo -- fooargs\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.102\r\n Commit:    96ff75a873\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.102/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n  2.2.102 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n**Additional background**\r\n\r\nI have a Jenkins job that clones a git repository containing a .NET Core project and executes a script that calls `dotnet run` 5 times for that project with different arguments\r\n\r\n```\r\ndotnet run --project foo -- fooargs1\r\ndotnet run --project foo -- fooargs2\r\ndotnet run --project foo -- fooargs3\r\ndotnet run --project foo -- fooargs4\r\ndotnet run --project foo -- fooargs5\r\n```\r\n\r\nWhen I ran this job ~60 times, it failed 3 times with the error mentioned above. None of those failures were on the first invocation of `dotnet run`..","Url":"https://github.com/dotnet/sdk/issues/2808","RelatedDescription":"Open issue \"Intermittent build failures with no error messages\" (#2808)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1085408808988524544","CreatedAt":"2019-01-16T05:30:00+00:00","UserScreenname":"dotnet","Text":".NET Framework January 2019 Preview of Quality Rollup https://t.co/PHzmBv3Qwl","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":8,"RawContent":null},{"Id":"1084860808331448320","CreatedAt":"2019-01-14T17:12:27+00:00","UserScreenname":"dotnet","Text":"Join @csharpfritz and @julielerman this week to learn more about serverless technologies and CosmosDb.  It's a LIVE… https://t.co/9RjeePNX7g","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":14,"RawContent":null},{"Id":"1084759529806487552","CreatedAt":"2019-01-14T10:30:00+00:00","UserScreenname":"dotnet","Text":"Learn how we're improving .NET IO performance with https://t.co/EpnUCQtOJb.Pipelines in this episode of On .NET… https://t.co/zPf1AjkGi3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":179,"FavoriteCount":64,"RawContent":null},{"Id":"1083419958153887750","CreatedAt":"2019-01-10T17:47:01+00:00","UserScreenname":"dotnet","Text":"Starting the .NET Open Source Revolution https://t.co/7Y7FfWTaY4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":143,"FavoriteCount":58,"RawContent":null},{"Id":"1082818321353912320","CreatedAt":"2019-01-09T01:56:20+00:00","UserScreenname":"dotnet","Text":"Oopsie. Looks like @WhildyBeast executed\n\n$ dotnet clean https://t.co/gCte14spFY","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":29,"FavoriteCount":5,"RawContent":null},{"Id":"1082768839874535424","CreatedAt":"2019-01-08T22:39:42+00:00","UserScreenname":"dotnet","Text":"We just blogged about the .NET Framework January 2019 Security and Quality Rollup. https://t.co/XW8wiS0AIV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":17,"RawContent":null},{"Id":"1082649436851982337","CreatedAt":"2019-01-08T14:45:15+00:00","UserScreenname":"dotnet","Text":"In 15 minutes, join our @csharpfritz as he explores the @elgatogaming StreamDeck's new SDK and how to interact with… https://t.co/H2oVdzFOgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":41,"FavoriteCount":9,"RawContent":null},{"Id":"1081303837263069184","CreatedAt":"2019-01-04T21:38:19+00:00","UserScreenname":"dotnet","Text":"“Code is, in our not-so-humble opinion, the most inexhaustible source of magic.” https://t.co/HtYQeRiB8t","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":141,"FavoriteCount":31,"RawContent":null},{"Id":"1081214419672096768","CreatedAt":"2019-01-04T15:43:00+00:00","UserScreenname":"dotnet","Text":"In this On .NET episode we learn about XAML Islands and how to integrate UI components from the Universal Windows P… https://t.co/JMXJ3aoBsM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":18,"RawContent":null}]}},"RunOn":"2019-01-17T05:30:49.4564411Z","RunDurationInMilliseconds":22974}