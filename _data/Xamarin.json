{"Data":{"Blog":{"FeedItems":[{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null},{"Title":"Xamarin.Forms and Zeplin: Speed Up Your Design to Development Process","PublishedOn":"2018-10-23T18:53:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Arnstein Johansen, a Norwegian software engineer interested in mobile and web development. He works for Itema AS, a consultant agency in Trondheim, Norway and a...","Href":"https://blog.xamarin.com/xamarin-forms-and-zeplin-speed-up-your-design-to-development-process/","RawContent":null},{"Title":"Xamarin.Forms 3.3.0: Little Things, Huge Difference","PublishedOn":"2018-10-18T19:06:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin.Forms team has been working closely with our open-source community to help fill in the “little things”. Things you’ve told us are important to building your mobile apps and being supremely...","Href":"https://blog.xamarin.com/xamarin-forms-3-3-0-little-things-huge-difference/","RawContent":null},{"Title":"Complex Animations in Xamarin.Forms using Finite State Machine","PublishedOn":"2018-10-16T17:32:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff, a Principal Engineer at Binwell. Microsoft MVP and Xamarin Certified experienced mobile cross-platform and native developer. Also, a previously...","Href":"https://blog.xamarin.com/complex-animations-xamarin-forms-using-finite-state-machine/","RawContent":null},{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8657892670","Type":"PullRequestEvent","CreatedAt":"2018-11-27T22:43:46","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2464","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] remove the need for d8.jar\" (#2464) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2461\r\n\r\nXamarin.Android has been building and shipping both `d8.jar` and\r\n`r8.jar`. These are quite large (~23MB!), due to a large amount of\r\nJava code.\r\n\r\nLooking at the *only* difference of the two jar files:\r\n\r\n    diff -rup d8/META-INF/MANIFEST.MF r8/META-INF/MANIFEST.MF\r\n    --- d8/META-INF/MANIFEST.MF\t2018-11-21 14:36:48.000000000 -0500\r\n    +++ r8/META-INF/MANIFEST.MF\t2018-11-21 14:36:44.000000000 -0500\r\n    @@ -1,3 +1,3 @@\r\n    Manifest-Version: 1.0\r\n    -Main-Class: com.android.tools.r8.D8\r\n    +Main-Class: com.android.tools.r8.SwissArmyKnife\r\n\r\nWe can just use the single `r8.jar` and invoke a different\r\n`Main-Class`. This will save us ~20MB of install size.\r\n\r\n## Changes\r\n\r\n* `r8.targets` no longer builds `d8.jar`.\r\n* Removed the `$(AndroidD8JarPath)` MSBuild property.\r\n* The `<D8/>` and `<R8/>` MSBuild tasks use `java -classpath r8.jar\r\n  com.android.tools.r8.D8` or `com.android.tools.r8.SwissArmyKnife`\r\n  respectively.\r\n\r\n## Downstream in monodroid\r\n\r\nI will need to remove `d8.jar` from the pkg installer."},{"Id":"8657332599","Type":"PullRequestEvent","CreatedAt":"2018-11-27T21:00:49","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2462","RelatedDescription":"Merged pull request \"[download-bundle] updated URLs, take 2!\" (#2462) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android\r\nContext: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-debug\r\nContext: https://github.com/xamarin/xamarin-android/pull/2457\r\n\r\ndd498d2 was an attempt to fix our Jenkins configuration + bundle\r\ndownloads. However, when I tested the latest bundle I found a new\r\nproblem...\r\n\r\nThe current URLs are of the form:\r\n\r\n    Debug:   https://xamjenkinsartifact.azureedge.net/mono-jenkins/xamarin-android-debug/xamarin-android/bin/Debug/...-Debug-...zip\r\n    Release: https://xamjenkinsartifact.azureedge.net/mono-jenkins/xamarin-android/bin/Release/...-Release-...zip\r\n\r\nThe `xamarin-android-debug` job is using `${JOB_NAME}` as the \"virtual\r\ndirectory\" to upload to. The `xamarin-android` Release job is not...\r\n`xamarin-android` is automatically being appended due to the directory\r\nstructure of the Jenkins workspace.\r\n\r\nSo to fix this, and keep the jobs uploading to different paths:\r\n\r\n1. I set the \"virtual directory\" to `${JOB_NAME}` on the Release job.\r\n2. I fixed up the URLs again in `download-bundle.targets`, so they now\r\n   append `xamarin-android` appropriately.\r\n\r\nI think this is the best option, since it probably isn't safe for both\r\njobs to upload to the same \"virtual directory\"."},{"Id":"8657289870","Type":"PullRequestEvent","CreatedAt":"2018-11-27T20:53:18","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2463","RelatedDescription":"Merged pull request \"[build] pin NuGet.exe to a specific version\" (#2463) at xamarin/xamarin-android","RelatedBody":"Context: https://www.nuget.org/downloads\r\nContext: http://build.devdiv.io/2236305\r\n\r\nCurrently we download NuGet.exe from:\r\n\r\n    https://dist.nuget.org/win-x86-commandline/latest/nuget.exe\r\n\r\nHowever, it seems that the NuGet 4.8.1 release breaks our build on\r\nWindows...\r\n\r\n    src\\monodroid\\monodroid.targets(3,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\external\\Java.Interop\\bin\\BuildDebug\\JdkInfo.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [E:\\A\\_work\\14\\s\\src\\monodroid\\monodroid.csproj]\r\n    src\\Xamarin.Android.NUnitLite\\Xamarin.Android.NUnitLite.csproj(349,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    src\\System.EnterpriseServices\\System.EnterpriseServices.csproj(46,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    src\\Mono.Posix\\Mono.Posix.csproj(236,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    src\\Mono.Data.Sqlite\\Mono.Data.Sqlite.csproj(180,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    src\\OpenTK-1.0\\OpenTK.csproj(597,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    build-tools\\scripts\\PrepareWindows.targets(19,5): Error MSB3073: The command \".nuget\\NuGet.exe restore Xamarin.Android.sln\" exited with code -1.\r\n\r\nIt seems if you do:\r\n\r\n    nuget.exe restore Xamarin.Android.sln\r\n\r\nIf NuGet encounters an MSBuild targets file it cannot import, it now\r\nerrors out on the new version???\r\n\r\nPreviously this was working somehow, but for now I think it would be\r\nsimpler (and more reliable) to pin our download of NuGet.exe to a\r\nspecific version.\r\n\r\nI will need to create a simple repro and submit an issue for NuGet."},{"Id":"8656436165","Type":"PullRequestEvent","CreatedAt":"2018-11-27T18:27:01","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2463","RelatedDescription":"Opened pull request \"[build] pin NuGet.exe to a specific version\" (#2463) at xamarin/xamarin-android","RelatedBody":"Context: https://www.nuget.org/downloads\r\nContext: http://build.devdiv.io/2236305\r\n\r\nCurrently we download NuGet.exe from:\r\n\r\n    https://dist.nuget.org/win-x86-commandline/latest/nuget.exe\r\n\r\nHowever, it seems that the NuGet 4.8.1 release breaks our build on\r\nWindows...\r\n\r\n    src\\monodroid\\monodroid.targets(3,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\external\\Java.Interop\\bin\\BuildDebug\\JdkInfo.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [E:\\A\\_work\\14\\s\\src\\monodroid\\monodroid.csproj]\r\n    src\\Xamarin.Android.NUnitLite\\Xamarin.Android.NUnitLite.csproj(349,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    src\\System.EnterpriseServices\\System.EnterpriseServices.csproj(46,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    src\\Mono.Posix\\Mono.Posix.csproj(236,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    src\\Mono.Data.Sqlite\\Mono.Data.Sqlite.csproj(180,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    src\\OpenTK-1.0\\OpenTK.csproj(597,3): Error MSB4019: The imported project \"E:\\A\\_work\\14\\s\\bin\\Debug\\lib\\xbuild\\Xamarin\\Android\\Xamarin.Android.CSharp.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    build-tools\\scripts\\PrepareWindows.targets(19,5): Error MSB3073: The command \".nuget\\NuGet.exe restore Xamarin.Android.sln\" exited with code -1.\r\n\r\nIt seems if you do:\r\n\r\n    nuget.exe restore Xamarin.Android.sln\r\n\r\nIf NuGet encounters an MSBuild targets file it cannot import, it now\r\nerrors out on the new version???\r\n\r\nPreviously this was working somehow, but for now I think it would be\r\nsimpler (and more reliable) to pin our download of NuGet.exe to a\r\nspecific version.\r\n\r\nI will need to create a simple repro and submit an issue for NuGet."},{"Id":"8656030250","Type":"PullRequestEvent","CreatedAt":"2018-11-27T17:19:41","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2462","RelatedDescription":"Opened pull request \"[download-bundle] updated URLs, take 2!\" (#2462) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android\r\nContext: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-debug\r\nContext: https://github.com/xamarin/xamarin-android/pull/2457\r\n\r\ndd498d2 was an attempt to fix our Jenkins configuration + bundle\r\ndownloads. However, when I tested the latest bundle I found a new\r\nproblem...\r\n\r\nThe current URLs are of the form:\r\n\r\n    Debug:   https://xamjenkinsartifact.azureedge.net/mono-jenkins/xamarin-android-debug/xamarin-android/bin/Debug/...-Debug-...zip\r\n    Release: https://xamjenkinsartifact.azureedge.net/mono-jenkins/xamarin-android/bin/Release/...-Release-...zip\r\n\r\nThe `xamarin-android-debug` job is using `${JOB_NAME}` as the \"virtual\r\ndirectory\" to upload to. The `xamarin-android` Release job is not...\r\n`xamarin-android` is automatically being appended due to the directory\r\nstructure of the Jenkins workspace.\r\n\r\nSo to fix this, and keep the jobs uploading to different paths:\r\n\r\n1. I set the \"virtual directory\" to `${JOB_NAME}` on the Release job.\r\n2. I fixed up the URLs again in `download-bundle.targets`, so they now\r\n   append `xamarin-android` appropriately.\r\n\r\nI think this is the best option, since it probably isn't safe for both\r\njobs to upload to the same \"virtual directory\"."},{"Id":"8655900716","Type":"IssuesEvent","CreatedAt":"2018-11-27T17:00:00","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2461","RelatedDescription":"Opened issue \"Artifact size has increased substantially between d16-0-p1 and d16-0-p2\" (#2461) at xamarin/xamarin-android","RelatedBody":"The .vsix installers and other build artifacts have increased in size dramatically between d16-0-p1 and d16-0-p2."},{"Id":"8655861118","Type":"IssuesEvent","CreatedAt":"2018-11-27T16:54:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2391","RelatedDescription":"Closed issue \"Deployment for debugging on emulators with android 4 fails because of wrong pm option\" (#2391) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new android application project\r\n2. Set target SDK version to 28  \r\n3. Set Minimum SDK version to 15\r\n4. Create and start an emulator with android 4.0 or 4.1 (API 15 or 16)\r\n5. Build and try to start the application in the Debug mode\r\n\r\n### Expected Behavior\r\nApplication get installed and start running\r\n\r\n### Actual Behavior\r\nAn error dialog appears telling there was deployment errors. content of the output window is in the logfile.\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Community 2017 Preview\r\nVersion 15.9.0 Preview 4.0\r\nVisualStudio.15.Preview/15.9.0-pre.4.0+28219.56\r\nMicrosoft .NET Framework\r\nVersion 4.7.02053\r\n\r\nInstalled Version: Community\r\n\r\nC# Tools   2.10.0-beta2-63410-10+45b371170fd8f9f3e9c14ea2a71d17db9469f8b7\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.10.0-beta2-63410-10+45b371170fd8f9f3e9c14ea2a71d17db9469f8b7\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 5e9c7caea813f8aa3277e8cc843f784488a7da6f.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.60 (d15-9@cd24721c9)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.21 (3b929fe22)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.124 (a4f6b98)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.0.37 (HEAD/3e731613f)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.9 (6284095)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tADB0000:  Deployment failed\r\nMono.AndroidTools.InstallFailedException: Unexpected install output: Error: Unknown option: -d\r\nusage: pm list packages [-f] [-d] [-e] [-s] [-e] [-u] [FILTER]\r\n       pm list permission-groups\r\n       pm list permissions [-g] [-f] [-d] [-u] [GROUP]\r\n       pm list instrumentation [-f] [TARGET-PACKAGE]\r\n       pm list features\r\n       pm list libraries\r\n       pm path PACKAGE\r\n       pm install [-l] [-r] [-t] [-i INSTALLER_PACKAGE_NAME] [-s] [-f] PATH\r\n       pm uninstall [-k] PACKAGE\r\n       pm clear PACKAGE\r\n       pm enable PACKAGE_OR_COMPONENT\r\n       pm disable PACKAGE_OR_COMPONENT\r\n       pm disable-user PACKAGE_OR_COMPONENT\r\n       pm set-install-location [0/auto] [1/internal] [2/external]\r\n       pm get-install-location\r\n       pm createUser USER_NAME\r\n       pm removeUser USER_ID\r\n\r\npm list packages: prints all packages, optionally only\r\n  those whose package name contains the text in FILTER.  Options:\r\n    -f: see their associated file.\r\n    -d: filter to only show disbled packages.\r\n    -e: filter to only show enabled packages.\r\n    -s: filter to only show system packages.\r\n    -3: filter to only show third party packages.\r\n    -u: also include uninstalled packages.\r\n\r\npm list permission-groups: prints all known permission groups.\r\n\r\npm list permissions: prints all known permissions, optionally only\r\n  those in GROUP.  Options:\r\n    -g: organize by group.\r\n    -f: print all information.\r\n    -s: short summary.\r\n    -d: only list dangerous permissions.\r\n    -u: list only the permissions users will see.\r\n\r\npm list instrumentation: use to list all test packages; optionally\r\n  supply <TARGET-PACKAGE> to list the test packages for a particular\r\n  application.  Options:\r\n    -f: list the .apk file for the test package.\r\n\r\npm list features: prints all features of the system.\r\n\r\npm path: print the path to the .apk of the given PACKAGE.\r\n\r\npm install: installs a package to the system.  Options:\r\n    -l: install the package with FORWARD_LOCK.\r\n    -r: reinstall an exisiting app, keeping its data.\r\n    -t: allow test .apks to be installed.\r\n    -i: specify the installer package name.\r\n    -s: install package on sdcard.\r\n    -f: install package on internal flash.\r\n\r\npm uninstall: removes a package from the system. Options:\r\n    -k: keep the data and cache directories around after package removal.\r\n\r\npm clear: deletes all data associated with a package.\r\n\r\npm enable, disable, disable-user: these commands change the enabled state\r\n  of a given package or component (written as \"package/class\").\r\n\r\npm get-install-location: returns the current install location.\r\n    0 [auto]: Let system decide the best location\r\n    1 [internal]: Install on internal device storage\r\n    2 [external]: Install on external media\r\n\r\npm set-install-location: changes the default install location.\r\n  NOTE: this is only intended for debugging; using this can cause\r\n  applications to break and other undersireable behavior.\r\n    0 [auto]: Let system decide the best location\r\n    1 [internal]: Install on internal device storage\r\n    2 [external]: Install on external media\r\n\r\n   at Mono.AndroidTools.Internal.AdbOutputParsing.CheckInstallSuccess(String output, String packageName) in E:\\A\\_work\\21\\s\\External\\androidtools\\Mono.AndroidTools\\Internal\\AdbOutputParsing.cs:line 345\r\n   at Mono.AndroidTools.AndroidDevice.<>c__DisplayClass95_0.<InstallPackage>b__0(Task`1 t) in E:\\A\\_work\\21\\s\\External\\androidtools\\Mono.AndroidTools\\AndroidDevice.cs:line 753\r\n   at System.Threading.Tasks.ContinuationTaskFromResultTask`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\t\t \t0\t\r\n```\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8655149051","Type":"IssuesEvent","CreatedAt":"2018-11-27T15:20:38","Actor":"generik0","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2460","RelatedDescription":"Opened issue \"xamarin  symbols do not work unless source is in same location as original  build source path\" (#2460) at xamarin/xamarin-android","RelatedBody":"Hi\r\n\r\nWhen I create our own nuget packages I have GeneratePackageOnBuild and include symbols (portable) and include source for the .net stanadr projects creating the nugets.\r\n\r\nThe symbols and debugging works with \"normal\" .net apps., however, they are not debuggable in Xamavin project. With that said the symbols will work if I replicate the build path (on the service running the agent pool and MSBuild) to be on the same location on my local machine and add the source.\r\n\r\nIt does not matter what I enter in  VS2017 15.9.2 Options->Debugger->Symbols\r\nThe absolute path from where the package was built, is required locally and the source code should be in this location locally also.\r\n\r\n\r\nAgain. we need to have the source code in the same location/path as it is on the build server. (this is difficult as each build has its own id) and it will work.\r\nIt does not matter if i index and do a seperate pack on the build server. Or whatever i do. \r\n\r\nIt just appears that the paths must be equal.\r\n\r\nAny ideas?\r\n\r\n\r\n\r\n"},{"Id":"8654285258","Type":"IssuesEvent","CreatedAt":"2018-11-27T13:17:38","Actor":"Krumelur","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2459","RelatedDescription":"Opened issue \"AndroidClientHandler does not observe cancellation token correctly in GetAsync()\" (#2459) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create an Android app\r\n2. Switch HttpClient to use AndroidClientHandler\r\n3. Use HttpClient' GetAsync(url, token) against any existing URL\r\n4. Switch emulator to simulate extremely slow network condition\r\n5. Cancel the token\r\n\r\n### Expected Behavior\r\nGetAsync() is passing the token to the underlying the message handler (in this case AndroiClientHandler) that should be observing it. Cancellation is expected to exit the GetAsync() method.\r\n\r\n### Actual Behavior\r\nCancellation won't happen until the request has (successfully) completed.\r\nUsing the manage message handler instead will cancel and bail out of GetAsync().\r\n\r\n### Version Information\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.6.11 (build 9)\r\nInstallation UUID: 8efdc097-fe14-485e-94e6-e5faa2cdbd23\r\nRuntime:\r\n\tMono 5.16.0.220 (2018-06/bb3ae37d71a) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000220\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.3\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.3\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/rene/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 26.0.0\r\n\r\nJava SDK: /usr\r\nUnable to find a $JAVA_HOME at \"/usr\", continuing with system-provided Java...\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Enterprise)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.10 (Visual Studio Enterprise)\r\nHash: f2a05edd\r\nBranch: d15-9\r\nBuild date: 2018-10-31 18:55:57-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706110009\r\nGit revision: d7cd66f5e3acd3d46ba0b94a0c935378f828bde0\r\nBuild date: 2018-10-31 17:17:12+00\r\nBuild branch: release-7.6\r\nXamarin extensions: bc9b985bfcb480b04a208a6d4045adc443a07857\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Wed Oct 10 23:06:14 PDT 2018\r\n    root:xnu-4570.71.13~1/RELEASE_X86_64 x86_64"},{"Id":"8654254588","Type":"PullRequestEvent","CreatedAt":"2018-11-27T13:12:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2457","RelatedDescription":"Merged pull request \"[download-bundle] updated URL for Debug bundle\" (#2457) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-debug/\r\n\r\nTo speed up build times, Xamarin.Android now builds Debug and Release\r\nbuilds on different jobs on Jenkins.\r\n\r\nThe issue with this is that the Azure upload url will be of the form:\r\n\r\n    https://xamjenkinsartifact.azureedge.net/mono-jenkins/${JOB_NAME}/bin/\r\n\r\nSo we need to check for `Debug` `$(Configuration)` and use\r\n`xamarin-android-debug` in that case."},{"Id":"8652877806","Type":"IssuesEvent","CreatedAt":"2018-11-27T09:23:12","Actor":"antonlobanov","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2458","RelatedDescription":"Opened issue \"Pointer to generic unmanaged Type\" (#2458) at xamarin/xamarin-android","RelatedBody":"run and use constructor of this class\r\n\r\npublic unsafe class UnsafeArray<T> where T : unmanaged\r\n    {\r\n        private readonly T* _pointer;\r\n\r\n        public UnsafeArray(T* pointer)\r\n        {\r\n            _pointer = pointer;\r\n        }\r\n    }\r\n\r\n### Expected Behavior\r\n\r\nnormal work\r\n\r\n### Actual Behavior\r\n\r\n( 2035): * Assertion at /Users/builder/jenkins/workspace/xamarin-android-d15-9/xamarin-android/external/mono/mono/mini/method-to-ir.c:7455, condition `!sig->has_type_parameters' not met\r\n( 2035): Fatal signal 6 (SIGABRT), code -6 in tid 2078 (GLThread 11077)\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2017  (2)\r\nVersion 15.9.2\r\nVisualStudio.15.Release/15.9.2+28307.108\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA395\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.11009.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.2.3   Build 182.0.20180912.70621\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.72 (d15-9@7b34d2bf1)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.11 (fb8990483)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.127 (e975299)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.0.38 (HEAD/61d16aa23)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.10 (f2a05ed)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8658620544","Type":"IssuesEvent","CreatedAt":"2018-11-28T01:52:52","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4543","RelatedDescription":"Closed issue \"[Feedback] Xamarin Forms cusuming a wcf service(IIS)\" (#4543) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>It runs correct with a webapplication calling the service.\n\nHow does this work in a xamarin forms applcation\n(shared project)?\nI use VS2017.\n\nPlease give me a simple example how to do this.\n\nReggie.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/340417/xamarin-forms-cusuming-a-wcf-serviceiis.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/688303\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[736042](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/736042)"},{"Id":"8658606595","Type":"IssuesEvent","CreatedAt":"2018-11-28T01:48:45","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4530","RelatedDescription":"Closed issue \"Request to make some controls.\" (#4530) at xamarin/Xamarin.Forms","RelatedBody":"Request to handle for nullable value and current date selection value in datepicker.\r\n\r\nRequest to make material design type radio buttons (group as well ) and checkbox controls(group as well)\r\n\r\nMake new datetimepicker controls.\r\n\r\nWhy such great library has not these controls?"},{"Id":"8658555583","Type":"IssuesEvent","CreatedAt":"2018-11-28T01:34:01","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4245","RelatedDescription":"Closed issue \"Xamarin Forms app crashes on iOS trying to create an Array\" (#4245) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI created an app for UWP, Android and iOS. Tested on all environments.\r\nOn iOS it runs fine on a simulator or a physical device (iPad) in most modes.\r\nIt crashes on the iPad only when not in Debug and when linker options are set the Framework SDK.\r\nWhen using \"Don't Link\" it works.\r\n\r\nThe exception shows\r\n\r\nAfter a machine restart. Re-built with \"Link Framework SDK\" and it created a smaller ipa which crashes with \"System.MissingMethodException - Default constructor not found for type System.Array\"\r\n\r\nI was able to find the statement where the error occurred and it was happening when the code was creating an instance of a ContentView.\r\nDigging further, the ContentView has declared the following array in XAML\r\n```\r\n<x:Array Type=\"{x:Type x:Double}\" x:Key=\"ImageOpacity\">\r\n     <x:Double>1.0</x:Double>\r\n     <x:Double>0.4</x:Double>\r\n </x:Array>\r\n```\r\nI removed that item and replaced it by creating a simple class\r\n `public class ListOfDoubles : List<double>     { } `\r\nThen my xaml changed to \r\n\r\n```\r\n<customTypes:ListOfDoubles x:Key=\"ImageOpacity\">\r\n           <x:Double>1.0</x:Double>\r\n           <x:Double>0.4</x:Double>\r\n</customTypes:ListOfDoubles>\r\n```\r\nI re-ran the program and it does not crash.\r\nSeems like a bug.\r\nThe same code works on UWP and Android.\r\nIt also works on iOS in Debug mode, or when using the \"Don't Link\" option.\r\nIf anyone can point me as to where to report this bug I would appreciate it.\r\n\r\n### Steps to Reproduce\r\n\r\nI have tried to create a simple app that does nothing but create an Array within an XAML resource, but could not get it to crash as it consistently does in my app ?\r\nI assume that unless other's report a similar problem, this will need to be closed.\r\nI will keep trying to reproduce the exact issue.\r\n\r\nOn my app it is consistent, If I include the <Array> resource, it will crash on the iPad. \r\nIf I remove it and replace it with a List, then it will work.\r\nThe error \"Default constructor not found for type System.Array\" seems suspect.\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\nXamarin 3.3.0912540\r\n\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  The version of the iOS SDK you are compiling against, e.g. 12\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nSince I cannot provide a reproducible example, I am uploading the Exception log showing the error.\r\n[log.2018-10-28T10-49-06.txt](https://github.com/xamarin/Xamarin.Forms/files/2522952/log.2018-10-28T10-49-06.txt)\r\n"},{"Id":"8658553423","Type":"IssuesEvent","CreatedAt":"2018-11-28T01:33:25","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4249","RelatedDescription":"Closed issue \"[Android] Padding on button on android don't work if less than 20\" (#4249) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nIf we set a padding less than 20, the requested padding is ignored.\r\n\r\n### Steps to Reproduce\r\n1. Set a button \r\n2. Set a padding < 20\r\n\r\n### Expected Behavior\r\nThe button have the requested padding\r\n\r\n### Actual Behavior\r\nWe have a button with a default padding\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0.871581\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: Android 8.1 \r\n- Android Support Library Version:  27.0.2.1\r\n\r\n### More information\r\n\r\nIf we set a padding of 5(Left, Top, Right, Bottom) and an HeightRequest of 25 and a MinimumWidthRequest of 0, we will have a button with no padding on Top and Button. And with a default padding (>5) on Left and Right\r\n\r\nFor our project, we already haved our own ButtonExtended with a CustomPadding propertie, for what i've seen on your ButtonRenderer, we have mostly the same implementation, the only difference is that we set 4 more native element on the Android.Widget.Button : SetMinWidth, SetMinHeight, SetMinimumWidth, SetMinimumHeight.\r\n\r\nAnd if we use our implementation with only setting the 4 native element and your implementation (Padding) it's works with a padding < 20.\r\n\r\nSo it's maybe only you don't set this properties."},{"Id":"8658551601","Type":"IssuesEvent","CreatedAt":"2018-11-28T01:32:53","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4224","RelatedDescription":"Closed issue \"Native.Forms compile failed with XamlCompile(Compile)\" (#4224) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nUsing Xamarin.Forms 3.2 as Native.Forms. Adding shared controls and including them in xaml page. When activating XamlCompile to Compile project stops to build with error: Failed locate Assembly.\r\nControls and Pages located in same assembly.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin.Traditional projects\r\n2. Install Xamarin.Forms and initialize them.\r\n3. In Shared Project create custom control (xaml or code)\r\n4. Create ContentPage XAML\r\n5. include Custom control on page\r\n6. Build project\r\n\r\n### Expected Behavior\r\nProject build successfully \r\n\r\n### Actual Behavior\r\nCompilation fails\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.2.0.839982\r\n- Last known good version:\r\n- IDE:\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.6.9 (build 22)\r\nInstallation UUID: 4e89b8ad-09ba-4bcc-b4bc-805728aee413\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Professional)\r\nAndroid SDK: /Users/roman.rudyak/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Professional)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.15 (Visual Studio Professional)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706090022\r\nGit revision: 0a0ba3c4593e9adb1c6ff6324e641036146af376\r\nBuild date: 2018-10-05 16:38:51+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f7856b13f2c03a58e08381d3a5970bba18f5c7d7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nFileNesting 0.1.1\r\nMSBuild Editor 2.0.4\r\nNuGet Package Management Extensions 0.13\r\n\r\n"},{"Id":"8658546735","Type":"IssuesEvent","CreatedAt":"2018-11-28T01:31:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4192","RelatedDescription":"Closed issue \"[iOS] UIKitThreadAccessException on startup (LuanchScreen to start page) in ChildViewControllerForStatusBarStyle\" (#4192) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nHi!\r\n\r\nAfter updating the app to Xamarin.Forms 3.1 we have encountered a lot of UIKitThreadAccessException from ChildViewControllerForStatusBarStyle() in Xamarin.Forms.Platform.iOS.PlatformRenderer on app startup. It only occurs on iOS versions 11.2.1 and 11.3.1, but seems to happen on almost all runs on those platforms. We had not changed to our implemetation on either LaunchScreen or StatusBar, but have tried to remove all references to StatusBar on our side and also removed/hidden it from the LaunchScreen, with no effect. Our code does not do anything with statusbar on iOS anymore, but it stil occurs with the same count as before. We have also updated Xamarin.Forms to 3.2.\r\n\r\nWe have tried running the app on a iOS 11.3.1 device on the test cloud in AppCenter, but it did not crash there, but on all our \"real\" devices with this iOS version it fails\r\n\r\nStacktrace:\r\n```\r\nXamarin Exception Stack:\r\nUIKit.UIKitThreadAccessException: UIKit Consistency error: you are calling a UIKit method that can only be invoked from the UI thread.\r\n  at UIKit.UIApplication.EnsureUIThread () <0x101836d14 + 0x0005c> in <21fe6a98c3bb40bc8d5e3106c10f0190#0183796bf06bc53a741c27a913496a28>:0\r\n  at UIKit.UIViewController.get_ChildViewControllers () <0x10184c730 + 0x00013> in <21fe6a98c3bb40bc8d5e3106c10f0190#0183796bf06bc53a741c27a913496a28>:0\r\n  at Xamarin.Forms.Platform.iOS.PlatformRenderer.ChildViewControllerForStatusBarStyle () <0x101a170d4 + 0x00013> in <02d849b2e21741169c7b5bbc798a23d0#0183796bf06bc53a741c27a913496a28>:0\r\n\r\nThread 6 Crashed:\r\n0   libsystem_kernel.dylib               0x0000000182bcd2ec __pthread_kill + 8\r\n1   libsystem_c.dylib                    0x0000000182b3bd0c abort + 136\r\n2   AvinorUnfold.iOS                     0x00000001026d0efc xamarin_unhandled_exception_handler (runtime.m:1139)\r\n3   AvinorUnfold.iOS                     0x00000001025a3e30 mono_invoke_unhandled_exception_hook (exception.c:1213)\r\n4   AvinorUnfold.iOS                     0x0000000102558318 mono_handle_exception_internal (mini-exceptions.c:2335)\r\n5   AvinorUnfold.iOS                     0x0000000102557018 mono_handle_exception (mini-exceptions.c:2626)\r\n6   AvinorUnfold.iOS                     0x000000010254dc60 mono_arm_throw_exception (exceptions-arm64.c:410)\r\n7   AvinorUnfold.iOS                     0x0000000100d9b108 throw_exception + 164\r\n8   AvinorUnfold.iOS                     0x0000000101836d74 Xamarin_iOS_UIKit_UIApplication_EnsureUIThread (UIApplication.cs:88)\r\n9   AvinorUnfold.iOS                     0x000000010184c744 Xamarin_iOS_UIKit_UIViewController_get_ChildViewControllers (UIViewController.g.cs:1655)\r\n10  AvinorUnfold.iOS                     0x0000000101a170e8 Xamarin_Forms_Platform_iOS_Xamarin_Forms_Platform_iOS_PlatformRenderer_ChildViewControllerForStatusBarStyle + 16\r\n11  AvinorUnfold.iOS                     0x0000000100d77ce8 wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 244\r\n12  AvinorUnfold.iOS                     0x00000001025697a4 mono_jit_runtime_invoke (mini-runtime.c:3050)\r\n13  AvinorUnfold.iOS                     0x00000001025ed828 mono_runtime_invoke_checked (object.c:2942)\r\n14  AvinorUnfold.iOS                     0x00000001025f1140 mono_runtime_invoke (object.c:2996)\r\n15  AvinorUnfold.iOS                     0x0000000100c720b0 native_to_managed_trampoline_15(objc_object*, objc_selector*, _MonoMethod**, unsigned int) (registrar.m:586)\r\n16  AvinorUnfold.iOS                     0x0000000100c8aee8 -[Xamarin_Forms_Platform_iOS_PlatformRenderer childViewControllerForStatusBarStyle] (registrar.m:12381)\r\n17  UIKit                                0x000000018cdfe370 -[UIViewController _effectiveStatusBarStyleViewController] + 104\r\n18  UIKit                                0x000000018cdfb44c +[UIViewController _currentStatusBarStyleViewController] + 84\r\n19  UIKit                                0x000000018cd13bb0 -[UIApplication _updateCurrentStatusBarViewControllerAppearance] + 172\r\n20  UIKit                                0x000000018cd4ca38 -[UIViewController setNeedsStatusBarAppearanceUpdate] + 104\r\n21  UIKit                                0x000000018cf048e0 -[UIViewController _setPresentedStatusBarViewController:] + 88\r\n22  UIKit                                0x000000018cf4f18c -[UIViewController _presentViewController:modalSourceViewController:presentationController:animationController:interactionController:completion:] + 1676\r\n23  UIKit                                0x00000001a31186e0 0x1a30b4000 + 411360\r\n24  UIKit                                0x000000018cf4b948 -[UIViewController _presentViewController:withAnimationController:completion:] + 4320\r\n25  UIKit                                0x000000018d1c43d4 __63-[UIViewController _presentViewController:animated:completion:]_block_invoke + 100\r\n26  UIKit                                0x000000018cf0244c -[UIViewController _performCoordinatedPresentOrDismiss:animated:] + 508\r\n27  UIKit                                0x000000018cf4a824 -[UIViewController _presentViewController:animated:completion:] + 176\r\n28  UIKit                                0x000000018cf4a6bc -[UIViewController presentViewController:animated:completion:] + 156\r\n29  UIKit                                0x00000001a3117ccc 0x1a30b4000 + 408780\r\n30  ac1728c20cfee4a8f82210bb54a2f469.dylib.arch_arm640x000000012d51eae4 0x12d518000 + 27364\r\n31  libdispatch.dylib                    0x0000000182a38b24 _dispatch_call_block_and_release + 20\r\n32  libdispatch.dylib                    0x0000000182a38ae4 _dispatch_client_callout + 12\r\n33  libdispatch.dylib                    0x0000000182a3fc08 _dispatch_queue_override_invoke$VARIANT$mp + 712\r\n34  libdispatch.dylib                    0x0000000182a45d30 _dispatch_root_queue_drain + 584\r\n35  libdispatch.dylib                    0x0000000182a45a80 _dispatch_worker_thread3 + 116\r\n36  libsystem_pthread.dylib              0x0000000182d6bfac _pthread_wqthread + 1172\r\n37  libsystem_pthread.dylib              0x0000000182d6bb08 start_wqthread + 0\r\n```\r\n\r\n### Expected Behavior\r\nApp starts up as normal with no issues\r\n\r\n### Actual Behavior\r\nCrashes with UIKitThreadAccessException due to changes not done in our code on StatusBar\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.1 & 3.2\r\n- Last known good version: Xamarin.Forms 2.5\r\n- IDE: All stable and beta versions of Visual Studio for Mac since August 2018\r\n- Platform Target Frameworks: \r\n  - iOS:  11.3.1 & 11.2.1"},{"Id":"8658492851","Type":"IssuesEvent","CreatedAt":"2018-11-28T01:15:53","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4548","RelatedDescription":"Closed issue \"[Feedback] Stuck on build when making changes to XAML - XF\" (#4548) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>Make changes to XAML files and do not save the file\n\nhit build or debug \n\nVS will get stuck on building forever.\n\n\nIt can however be avoided if using Save option after making changes to XAML files prior to build.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/379728/stuck-on-build-when-making-changes-to-xaml-xf.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/727265\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[736033](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/736033)"},{"Id":"8658255772","Type":"IssuesEvent","CreatedAt":"2018-11-28T00:09:40","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4556","RelatedDescription":"Opened issue \"Android page with only a label says double tap to activate after just tapping the page\" (#4556) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nA page with no interactive elements indicates \"Double tap to activate\" \r\n\r\n### Steps to Reproduce\r\n\r\n1.  navigate to Issue 3622  in the gallery\r\n2.  click a row to open details\r\n3. after it's done reading it says \"Double tap to activate\". Double tap what?\r\n\r\n\r\nOr create a basic page with\r\n```C#\r\nNavigationPage page = new NavigationPage(new ContentPage()\r\n\t\t\t{\r\n\t\t\t\tContent = new StackLayout()\r\n\t\t\t\t{\r\n\t\t\t\t\tChildren =\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnew Label(){ Text = \"Some Text\"}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n```\r\n\r\nAnd then once it loads click the page and it'll say \"Double tap to activate\"\r\nBut there's nothing there to activate\r\n\r\n### Expected Behavior\r\nthe page shouldn't say \"double tap to activate\" if there aren't any interactive elements\r\n\r\n### Actual Behavior\r\nThe page says \"double tap to activate\"\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n- Android Support Library Version: 27\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8657499399","Type":"PullRequestEvent","CreatedAt":"2018-11-27T21:30:33","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5184","RelatedDescription":"Merged pull request \"[runtime] Disable debugging by default for watchOS apps on device.\" (#5184) at xamarin/xamarin-macios","RelatedBody":"The previous default (Wifi) would never work; only Http mode works on watchOS\ndevices. This means that unless debugging was explicitly disabled (for\ninstance when running without debugging from the IDE), we'd try to connect in\nWiFi mode (and gracefully fail, but showing error messages that are\nunnecessary and potentally scary/confusing)."},{"Id":"8657472525","Type":"PullRequestEvent","CreatedAt":"2018-11-27T21:25:50","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5189","RelatedDescription":"Merged pull request \"Bump mono to head of 2018-06\" (#5189) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@7aadce3fad0 [mini] use AOT trampolines in interp mixed mode (#11767) (#11784)\n* mono/mono@4bc42a87678 [interp] Don't throw exception on -1 division (#11777)\n* mono/mono@b63e5378e38 [2018-06][ios] fix path for llvm invocation (#11737)\n* mono/mono@bb3ae37d71a [interp] attempt to intrinsify again after a method is resolved regarding generics (#11715)\n* mono/mono@78eb5303e85 [2018-06] [aot] image is usable without debug flag when interpreter is used (#11711)\n* mono/mono@54cc205dd93 [2018-06] [crash] Remove duplicated il_offset (#11703)\n* mono/mono@279ac406e74 [2018-06] [runtime] Fix the size calculation in mono_debug_add_method (). (#11686)\n* mono/mono@1ac52d18274 [2018-06] [llvm] bump for armhf callingconv fix (#11610)\n* mono/mono@eee1d634e8b [ios] remove DISABLE_POLICY_EVIDENCE (#11580)\n\nDiff:\nhttps://github.com/mono/mono/compare/4d7b7ab37517a13eee8b966cec9c4308ad772c0a...7aadce3fad0dd1d501e166e2dead67401d6e881b\n\n* Revert \"Mono 5.16.0.87+ breaks us, so make sure we don't use it for now. (#5088)\" (#5175)\n\n    This reverts commit 1ca7da537da1e81d56bcdeb215c63e16d2a08bdc.\n    This is fixed so the restriction is not needed anymore."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":100,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":14,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":112,"FavoriteCount":57,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":18,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":27,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":36,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":31,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":46,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2018-11-28T05:31:32.7468503Z","RunDurationInMilliseconds":4061}