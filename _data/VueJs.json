{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7218678977","Type":"IssuesEvent","CreatedAt":"2018-02-08T18:45:45","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2053","RelatedDescription":"Closed issue \"Add a warning/error if the component for the route is not found/not set\" (#2053) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nI'm writing a Vue.js app using vue-router. I mistyped the 'component' field for route, like that:\r\n\r\n```\r\nconst router = new VueRouter({\r\n    mode: 'history',\r\n    routes: [\r\n        // some other routes\r\n        { path: '/dashboard', compoment: DashboardComponent },\r\n        // more components\r\n    ]\r\n});\r\n```\r\n\r\nThe result is nothing is rendered on this route. And I've spent 2 hours debugging it because there's no error/warning if the component field is not set.\r\nMy suggestion is to throw an error (or at least put a warning to `console.log()` ), that way it'd be more clear that the user didn't provide a component for render and that's why nothing is rendered.\r\n\r\n### What does the proposed API look like?\r\n\r\nNo API changes, just add the error/warning if the component is not set.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7218661721","Type":"IssuesEvent","CreatedAt":"2018-02-08T18:42:17","Actor":"serge1peshcoff","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2053","RelatedDescription":"Opened issue \"Add a warning/error if the component for the route is not found/not set\" (#2053) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nI'm writing a Vue.js app using vue-router. I mistyped the 'component' field for route, like that:\r\n\r\n```\r\nconst router = new VueRouter({\r\n    mode: 'history',\r\n    routes: [\r\n        // some other routes\r\n        { path: '/dashboard', compoment: DashboardComponent },\r\n        // more components\r\n    ]\r\n});\r\n```\r\n\r\nThe result is nothing is rendered on this route. And I've spent 2 hours debugging it because there's no error/warning if the component field is not set.\r\nMy suggestion is to throw an error (or at least put a warning to `console.log()` ), that way it'd be more clear that the user didn't provide a component for render and that's why nothing is rendered.\r\n\r\n### What does the proposed API look like?\r\n\r\nNo API changes, just add the error/warning if the component is not set.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7217785467","Type":"IssuesEvent","CreatedAt":"2018-02-08T16:01:52","Actor":"Nirazul","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2023","RelatedDescription":"Closed issue \"IE11 adds undefined to url when defining a scrollBehaviour\" (#2023) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nPlease read below, I wasn't able to reproduce the error in a minimum fiddle.\r\n[https://codepen.io/Nirazul/pen/dJxvZB?editors=1010](https://codepen.io/Nirazul/pen/dJxvZB?editors=1010)\r\n\r\n### Steps to reproduce\r\nEven after debugging a few hours, I wasn't able to manage a reproduction and I'm unsure what that means. However I've probably found the issue and enough hints to why it's occuring.\r\n\r\nThe problem is that IE11 is adding a `/undefined` to the url, when I'm initializing the router with a `scrollBevariour` method. The reason is the following line of code, which was implemented to fix #1585: \r\n\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js#L11\r\n\r\nThere are similar issues in other projects, that have been closed:\r\nhttps://github.com/ampproject/amphtml/issues/743\r\n\r\nI haven't found an easy way to fix this except commenting out the line. So the easiest fix would be to test for IE and not execute the line at all.\r\n\r\n### What is expected?\r\nIE should not add `/undefined` to the route when providing a scrollBehaviour function.\r\n\r\n### What is actually happening?\r\nIE (under some arcane circumstances) adds `/undefined` to the URL, when vue-router's `setupScroll` is executed.\r\n\r\n---\r\nAs I said, I wasn't able to reproduce it in a reduced Fiddle. When stepping through the code, I could identify the line that was causing it. I'm not sure however, if some kind of listener may be the cause.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7216937231","Type":"IssuesEvent","CreatedAt":"2018-02-08T13:35:37","Actor":"ardoramor","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2052","RelatedDescription":"Opened issue \"Add support for custom history implementations\" (#2052) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nThis feature would address many requests seen in relation to having greater control over applications history, stack management, initial route, and a few others.\r\n\r\nThere are several supported history modes. My proposal is to allow `mode` option accept an instance of a class that implements History API.\r\n\r\nInstantiation would look like:\r\n\r\n```javascript\r\nimport { AbstractHistory } from 'vue-router'\r\n\r\nclass CustomHistory extends AbstractHistory {\r\n   ...\r\n}\r\n\r\nconst customHistory = new CustomHistory()\r\n\r\nconst router = new VueRouter({\r\n  mode: customHistory,\r\n  routes: [...]\r\n})\r\n```\r\n\r\nThis would give great flexibility to developers and would allow further integrations of cool features such as keeping reactive history with `vuex`.\r\n\r\n### What does the proposed API look like?\r\n`mode` option would accept `String` or an instance of `AbstractHistory`. Internally, if an instance is detected, the history manipulation would happen through it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7215491732","Type":"PullRequestEvent","CreatedAt":"2018-02-08T08:23:51","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/pull/1152","RelatedDescription":"Closed pull request \"Update state.md\" (#1152) at vuejs/vuex","RelatedBody":""}],"ResultType":"GitHubEvent"}},"RunOn":"2018-02-09T05:30:33.6495501Z","RunDurationInMilliseconds":2230}