{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and .NET Community Developer Events in July","PublishedOn":"2019-07-01T19:49:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Jumpstart your next mobile development project by networking with your local community and getting the latest updates about Xamarin and .NET related technologies. Discover upcoming developer events...","Href":"https://devblogs.microsoft.com/xamarin/july-xamarin-net-developer-events/","RawContent":null},{"Title":"Styling for Multiple Device Resolutions","PublishedOn":"2019-06-28T18:26:56+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Guest Post: Charlin Agramonte is a Microsoft MVP and co-founder of CrossGeeks. She writes Xamarin articles in her blog http://xamgirl.com/. Find her on twitter as @Chard003.\nA few months ago we...","Href":"https://devblogs.microsoft.com/xamarin/styling-for-multiple-device-resolutions/","RawContent":null},{"Title":"Migrating MacOS Apps to 64-bit Before the Apple Transition","PublishedOn":"2019-06-26T19:27:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has been moving towards 64-bit only applications on macOS for a number of releases. Last June, Apple started requiring Apps on the macOS App Store to be 64-bit only and macOS 10.13.4 and above...","Href":"https://devblogs.microsoft.com/xamarin/apple-transition-migrate-macos-apps-to-64-bit/","RawContent":null},{"Title":"Faster Xamarin.Android Builds & Smaller Dex Files","PublishedOn":"2019-06-24T18:02:55+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"One of our current focus areas in Xamarin.Android is build performance. The &#8220;inner dev loop&#8221; directly impacts developer productivity&#8211;the time it takes to make a small code change and...","Href":"https://devblogs.microsoft.com/xamarin/dex-counting-xamarin-android-improved/","RawContent":null},{"Title":"Get Started with Free Xamarin Training on Microsoft Learn","PublishedOn":"2019-06-21T19:10:22+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Learn how to build cross-platform mobile applications on Android and iOS with the new Xamarin.Forms content on Microsoft Learn. The new and completely free platform where you can earn points and...","Href":"https://devblogs.microsoft.com/xamarin/microsoft-learn-free-xamarin-training/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio for Mac","PublishedOn":"2019-06-19T18:21:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Visual Studio 2019 for Mac version 8.2 is officially available as a preview. Now featuring significant improvements to the XAML editing experience for Xamarin developers. The Xamarin.Forms XAML...","Href":"https://devblogs.microsoft.com/xamarin/xaml-intellisense-vs4m-xamarin-forms/","RawContent":null},{"Title":"Automatic Android SDK Management","PublishedOn":"2019-06-17T20:24:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"As a mobile developer building apps for Android, there are many tools used under the hood to build, deploy, and debug your Android applications. We know this can be an intimidating process. So to...","Href":"https://devblogs.microsoft.com/xamarin/automatic-android-sdk-management/","RawContent":null},{"Title":"Xamarin Podcast: Xamarin.Forms 4 And So Much More!","PublishedOn":"2019-06-14T16:08:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Keeping up with the latest in .NET, C#, Xamarin, and Azure is easier than ever. Co-hosts Matt Soucoup and James Montemagno cover a range of topics relevant to Xamarin developers from designing mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-xamarin-forms-4/","RawContent":null},{"Title":"Grial UI Kit: Building Beautiful Xamarin.Forms Apps, Faster","PublishedOn":"2019-06-12T17:07:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Leonardo Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UI Kit and Gorilla Player. UXDivers specializes in designing and coding...","Href":"https://devblogs.microsoft.com/xamarin/grial-ui-kit-xamarin-forms/","RawContent":null},{"Title":"Join the Microsoft Team at Xamarin Developer Summit","PublishedOn":"2019-06-10T16:54:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"On July 11-12th, the community-run Xamarin Developer Summit is set to launch in Houston, Texas. The two-day conference is packed full of amazing Xamarin content, covering a wide range of mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-developer-summit/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9928934487","Type":"PullRequestEvent","CreatedAt":"2019-07-01T20:56:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3296","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] remove Distinct() from <ResolveLibraryProjectImports/>\" (#3296) at xamarin/xamarin-android","RelatedBody":"The `<ResolveLibraryProjectImports/>` task has some logic that needs\r\nto look at the item metadata of each `@(Reference)`:\r\n\r\n* `%(AndroidSkipResourceExtraction)` to skip unzipping anything\r\n* `%(AndroidSkipResourceProcessing)` to skip `<ConvertResourcesCases/>`\r\n\r\nTo make matters weird, we had some LINQ:\r\n\r\n    foreach (var assemblyPath in Assemblies\r\n            .Select (a => a.ItemSpec)\r\n            .Distinct ()) {\r\n\r\nAnd we would basically lose the metadata information...\r\n\r\nTo handle this problem, we had two `HashSet`'s we used to lookup the\r\nvalues:\r\n\r\n    assembliesToSkipCaseFixup = new HashSet<string> (StringComparer.OrdinalIgnoreCase);\r\n    assembliestoSkipExtraction = new HashSet<string> (StringComparer.OrdinalIgnoreCase);\r\n    bool metaDataValue;\r\n    foreach (var asm in Assemblies) {\r\n        if (bool.TryParse (asm.GetMetadata (AndroidSkipResourceProcessing), out metaDataValue) && metaDataValue)\r\n            assembliesToSkipCaseFixup.Add (asm.ItemSpec);\r\n        if (bool.TryParse (asm.GetMetadata (GetAdditionalResourcesFromAssemblies.AndroidSkipResourceExtraction), out metaDataValue) && metaDataValue)\r\n            assembliestoSkipExtraction.Add (asm.ItemSpec);\r\n    }\r\n\r\nI added a test to see what happens when we use multiple `@(Reference)`\r\nsuch as:\r\n\r\n* `<PackageReference/>`\r\n* `packages.config` and a regular `<Reference/>`\r\n* `<Reference/>` with a full path\r\n\r\nIt turns out there are MSBuild targets that disambiguate duplicate\r\nassembly references:\r\n\r\nhttps://github.com/NuGet/NuGet.BuildTasks/blob/640c8e13a9b7ab6e86264a296638fbf3cc016ad1/src/Microsoft.NuGet.Build.Tasks/Microsoft.NuGet.targets#L186-L207\r\n\r\nThe `ResolveNuGetPackageAssets` does a `Remove` against duplicate\r\n`@(Reference)`, even if there are no NuGet packages present in the\r\nproject.\r\n\r\nIt seems safe for us to just drop the `Distinct()` and the\r\n`HashSet`'s. The code is a bit simpler after doing this.\r\n\r\nI'm also seeing a small ~25ms performance improvement with this change."},{"Id":"9928779840","Type":"IssuesEvent","CreatedAt":"2019-07-01T20:30:27","Actor":"gkarabin","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3313","RelatedDescription":"Opened issue \"Missing AudioRouting base class for AudioRecord, etc, preventing solution to problem\" (#3313) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nIn API level 24, Android changed the base class of the java [AudioRecord](https://developer.android.com/reference/android/media/AudioRecord) class to extend [AudioRouting](https://developer.android.com/reference/android/media/AudioRouting).  This is backwards compatible on the Java side, but not for the C# binding.\r\n\r\nI noticed that [someone made notes on the problem](https://github.com/xamarin/xamarin-android/commit/576fb9814662f796cb5b0d466a7629b68c908fa9#diff-14048fd4cb6595cd0ad8cf1b41175ef5) in the Xamarin.Android repo.\r\n\r\nAs a result, if you look at the docs for Xamarin.Android's [AudioRouting](https://docs.microsoft.com/en-us/dotnet/api/android.media.audiorecord?view=xamarin-android-sdk-9) it does not implement the new interface from AudioRouting. A developer cannot access the new SDK level 24 methods:\r\n- [addOnRoutingChangedListener](https://developer.android.com/reference/android/media/AudioRouting.html#addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener,%2520android.os.Handler))\r\n- [removeOnRoutingChangedListener ](https://developer.android.com/reference/android/media/AudioRouting.html#removeOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener))\r\n\r\nI'm trying to resolve a customer issue, and want to provide them a solution based on non-obsolete APIs, on the belief/hope that more Android audio routing bugs are likely to be fixed on newer SDK levels.\r\n\r\n### Expected Behavior\r\n\r\nI can access the new SDK 24 AudioRouting APIS.\r\n\r\n### Actual Behavior\r\n\r\nI can't access the new SDK 24 AudioRouting APIS.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nVisual Studio Enterprise 2019 for Mac\r\nVersion 8.1.3 (build 19)\r\nInstallation UUID: 77317fbd-d6e3-451c-b93f-33774ca9e0cf\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.25 (d16-0 / 50f75273)\r\n\r\n\tPackage version: 518010028\r\n\r\nMono Framework MDK\r\nRuntime:\r\n\tMono 5.18.1.28 (2018-08/223ea7ef92e) (64-bit)\r\n\tPackage version: 518010028\r\n\r\nNuGet\r\nVersion: 5.0.2.5988\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.4\r\n\t2.1.9\r\nSDK: /usr/local/share/dotnet/sdk/2.2.203/Sdks\r\nSDK Versions:\r\n\t2.2.203\r\n\t2.1.505\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/Current/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.10\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nUpdater\r\nVersion: 11\r\n\r\nApple Developer Tools\r\nXcode 10.2.1 (14490.122)\r\nBuild 10E1001\r\n\r\nXamarin.Mac\r\nVersion: 5.10.0.157 (Visual Studio Enterprise)\r\nHash: 6bd94753\r\nBranch: d16-1\r\nBuild date: 2019-06-12 17:28:48-0400\r\n\r\nXamarin.iOS\r\nVersion: 12.10.0.157 (Visual Studio Enterprise)\r\nHash: 6bd94753\r\nBranch: d16-1\r\nBuild date: 2019-06-12 17:28:47-0400\r\n\r\nXamarin Designer\r\nVersion: 16.1.0.467\r\nHash: f1657e133\r\nBranch: remotes/origin/d16-1-new-document-model\r\nBuild date: 2019-06-18 21:57:42 UTC\r\n\r\nXamarin.Android\r\nVersion: 9.3.0.23 (Visual Studio Enterprise)\r\nCommit: HEAD/d0b48056f\r\nAndroid SDK: /Users/georgekarabin/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08@3a07bd426d3\r\nJava.Interop: xamarin/java.interop/d16-1@5ddc3e3\r\nLibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-1@acabd26\r\n\r\nMicrosoft Mobile OpenJDK\r\nJava SDK: /Users/georgekarabin/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nAndroid Device Manager\r\nVersion: 1.2.0.44\r\nHash: aac645b\r\nBranch: remotes/origin/d16-1\r\nBuild date: 2019-05-29 19:55:24 UTC\r\n\r\nXamarin Inspector\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 801030019\r\nGit revision: 2d04b0145da8aa946d2cc9898fe2a59484e4f3f4\r\nBuild date: 2019-06-26 15:34:25+00\r\nBuild branch: release-8.1\r\nXamarin extensions: de240bddd6d1f96bfb1e7d11ce7ac5398956fe1d\r\n\r\nOperating System\r\nMac OS X 10.14.5\r\nDarwin 18.6.0 Darwin Kernel Version 18.6.0\r\n    Thu Apr 25 23:16:27 PDT 2019\r\n    root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed extensions\r\nNuGet Package Explorer 0.3.2\r\nNuGet Package Management Extensions 0.19\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\nThis problem is not device-specific.  I can give you a device log, but the problem appears before you compile code...\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9927248925","Type":"PullRequestEvent","CreatedAt":"2019-07-01T16:13:56","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3312","RelatedDescription":"Opened pull request \"[xaprepare] Don't throw when console cursor coords are incorrect\" (#3312) at xamarin/xamarin-android","RelatedBody":"Console will throw an exception when the cursor coordinates are out of range,\r\nbut we don't want to check whether left/top are less than the buffer\r\nwidth/height, respectively, because that might throw as well, so we just catch\r\nthe possible exception.\r\n\r\nOn Unix it may happen when the windows were just being re-created (e.g. when\r\nswitching between monitors) and there's no reason to stop the app because of\r\nthis so just log the exception and move on."},{"Id":"9920953301","Type":"IssuesEvent","CreatedAt":"2019-06-30T14:10:19","Actor":"cra0zy","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3311","RelatedDescription":"Opened issue \"DllImport code does not work when compile from Linux\" (#3311) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add the code bellow anywhere\r\n2. Call it\r\n\r\n```\r\n[DllImport(\"dl\")]\r\npublic static extern IntPtr dlopen(string path, int flags);\r\n```\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nNo crashing.\r\n\r\n### Actual Behavior\r\n\r\nDllNotFoundException gets called.\r\n\r\n### Version Information\r\n\r\nLast stable Linux build.\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\nFull logcat: https://gist.github.com/cra0zy/8af965b4f44ec0b954b30f382ca0fdb8\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9930384360","Type":"PullRequestEvent","CreatedAt":"2019-07-02T03:13:05","Actor":"alanag13","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6741","RelatedDescription":"Opened pull request \"[iOS] Fix for CollectionView leaving behind old items\" (#6741) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nFixes an issue where old collection view items stayed rendered across subsequent views of a page, causing a floating/piling effect of those items. This is done by explicitly clearing the data source and refreshing the `UICollectionView` before disposing it.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5831 \r\n- fixes #6507\r\n\r\n### Platforms Affected ### \r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\nUsers should no longer experience visual artifacting of prior CollectionView items floating above their exsting ones.\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\nWill add, see my comment\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\nWill add, see my comment\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"9930344252","Type":"IssuesEvent","CreatedAt":"2019-07-02T03:01:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6349","RelatedDescription":"Closed issue \"Xamarin forms (3.3.0.912540) on Android - Custom PickerRenderer Control.Click stops working on first user's click\" (#6349) at xamarin/Xamarin.Forms","RelatedBody":"On Android - Custom PickerRenderer Control.Click stops working on first user's click.<br><br>After updating nuget packages from Xamarin forms 3.2 to 3.3.0.912540.<br><br>The Xamarin Forms Picker dialog for Android has been changed by updated nugets (the UI design is kind of looking more the same how it looks on iOS). So there has been changes to Picker.<br><br>We are using a Custom PickerRenderer<br>-to add a custom dropdown icon and some styling and this works and looks same as before.<br>-to use our own picker modal we have added our Control.Click += Control_Click; event listener which previously opened our custom dialog.<br><br>Now what happens is that: <br>The first time user taps/clicks on the CustomPicker Xamarin opens the OTB Android Picker dialog (and not our custom like it did before nuget updates). And If the user selects/closes the OTB dialog and taps/clicks the CustomPicker second time; now our Control_Click event is fired and our custom picker dialog is shown.<br>Also the OTB picker dialog that opens up.. does not open smoothly; the screen flickers while the otb dialog is first rendered on top of the screen and resized/moved to the center of the screen.<br><br>So to recap what happens with our custompicker:<br>-First picker tap does not open our custom picker dialog, but the OTB dialog opens up and screen flickers while it opens.<br>-Second picker tap does open our custom dialog and all looks ok.<br><br>What we expect should happen:<br>Like it worked before. Our custompicker is tapped and only our custom dialog opens.<br><br><br>We can reproduce this issue with all our Android real test devices and emulators (API 16 - 27). And all our developers and testers.<br><br>Provided code here to better understand what is going on. the custom renderer is quite simple.<br><br>in PCL project our custompicker:<br>..public class CustomPicker : Picker<br>    {<br>        public static readonly BindableProperty ImageProperty =<br>            BindableProperty.Create(nameof(Image), typeof(string), typeof(CustomPicker), string.Empty);<br><br>        public CustomPicker()<br>        {<br>            <br>        }<br><br>        public string Image<br>        {<br>            get { return (string)GetValue(ImageProperty); }<br>            set { SetValue(ImageProperty, value); }<br>        }<br>    }<br>..<br><br>in our ..Android project the customrenderer:<br><br>using MyApp.CustomUIControls;<br>using MyApp.Android.Dependency;<br>using Xamarin.Forms;<br>using Xamarin.Forms.Platform.Android;<br>using Android.Content;<br>using Android.Graphics;<br>using Android.Graphics.Drawables;<br>using Android.Views;<br>using System;<br>using Android.Widget;<br>using Android.App;<br>using Android.Text;<br>using System.Reflection;<br><br>[assembly: ExportRenderer(typeof(CustomPicker), typeof(CustomPickerRenderer))]<br><br>namespace MyApp.Android.Dependency<br>{<br>    public class CustomPickerRenderer : PickerRenderer<br>    {<br>        CustomPicker element;<br>        private AlertDialog _dialog;<br><br>        public CustomPickerRenderer(Context context) : base(context)<br>        {<br><br>        }<br><br>        protected override void OnElementChanged(ElementChangedEventArgs&lt;Picker&gt; e)<br>        {<br>            object aa = e.NewElement.Behaviors;<br>            base.OnElementChanged(e);            <br><br>            element = (CustomPicker)Element;<br><br>            if (Control == null || Element == null || string.IsNullOrEmpty(element.Image)) return;<br>            <br>            Control.Background = AddPickerStyles(element.Image);<br>            Control.TextSize = 14f;<br>            Control.SetTextColor(global::Android.Graphics.Color.Rgb(0, 0, 0));<br>            Control.SetHintTextColor(global::Android.Graphics.Color.Rgb(199, 199, 204));<br>            Control.InputType = InputTypes.TextFlagNoSuggestions; // Disable spell checking. <br>            //Override OTB selection dialog..  <br>            Control.Click += Control_Click;<br>        }<br><br>        public LayerDrawable AddPickerStyles(string imagePath)<br>        {<br>            //custom picker background styling, shadow/borders/icon..<br>        }<br><br>        private BitmapDrawable GetDrawable(string imagePath)<br>        {<br>            //custom dropdown icon code..<br>        }<br>        protected override void Dispose(bool disposing)<br>        {<br>            Control.Click -= Control_Click;<br>            base.Dispose(disposing);<br>        }<br><br>        private void Control_Click(object sender, EventArgs e)<br>        {<br>            //custom dialog code..<br><br>\t    //This does not fire on first user's tap/click anymore!!<br>        }<br>    }<br>}<br><br><br><br>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/371834/xamarin-forms-330912540-on-android-custom-pickerre.html\nVSTS ticketId: 721012_\n_These are the original issue comments:_\n\nSamantha Houts [MSFT] on 11/2/2018, 01:59 PM (208 days ago): <p>We appreciate you taking the time to report this problem. We are currently prioritizing problems that are impacting a broad set of our customers, so we may not be able to investigate this one immediately. We know this problem is important to you, so we will continue to monitor it.</p>\n\nPeter Kofod on 12/16/2018, 10:50 PM (163 days ago): <p>After updating from version 3.2 to the latest version 3.4 of xamarin forms we experience the same problem</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"9930343672","Type":"IssuesEvent","CreatedAt":"2019-07-02T03:01:24","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6348","RelatedDescription":"Closed issue \"Xamarin MasterDetailPage tap to dismiss does not work on tablets\" (#6348) at xamarin/Xamarin.Forms","RelatedBody":"Using Xamarin.Forms 3.1.0.583944, I create a MasterDetailPage using the PopOver behavior. The page works as expected on Android and iOS phones. However, on Android tablets I am unable to tap off of the page to dismiss the menu - I have to slide the page away using the gesture.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/363514/xamarin-masterdetailpage-tap-to-dismiss-does-not-w.html\nVSTS ticketId: 712470_\n_These are the original issue comments:_\n\nSamantha Houts [MSFT] on 11/2/2018, 02:00 PM (208 days ago): <p>We appreciate you taking the time to report this problem. We are currently prioritizing problems that are impacting a broad set of our customers, so we may not be able to investigate this one immediately. We know this problem is important to you, so we will continue to monitor it.</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"9930342689","Type":"IssuesEvent","CreatedAt":"2019-07-02T03:01:10","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6337","RelatedDescription":"Closed issue \"Русский шрифт-Russian font\" (#6337) at xamarin/Xamarin.Forms","RelatedBody":"<p>При использовании русского текста на кнопках (xamarin) при сборке проекта появляется ошибка **Error parsing XML: not well-formatted (invalid token)**</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/567764/русскии-шрифт.html\nVSTS ticketId: 892537_\n_These are the original issue comments:_\n\nWendy Wang [MSFT] on 5/14/2019, 07:19 PM (13 days ago): <p>Translated from Bing:</p><p>When using Russian text on buttons (xamarin), error parsing XML: Not well-formatted (invalid token) appears when you build the project</p><p><strong></strong><u></u><sub></sub><sup></sup></p>\n\nVisual Studio Feedback System on 5/14/2019, 11:54 PM (13 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 5/20/2019, 11:19 AM (8 days ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\nJosé Gallardo Salazar [MSFT] on 5/28/2019, 06:02 AM (6 hours ago): <p>Hi Petr,</p><p>We have directed your feedback to the Xamarin.Forms engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p><p>Thank you</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"9930341813","Type":"IssuesEvent","CreatedAt":"2019-07-02T03:00:58","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6322","RelatedDescription":"Closed issue \"[Bug] Picker default color not work\" (#6322) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nPicker.TitleColor = Color.Default();\r\nOR\r\nPicker.TitleColor =  (Color)Picker.TitleColorProperty.DefaultValue\r\n\r\nNot return the default color for the Picker object\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms pre-10\r\n"},{"Id":"9930341244","Type":"IssuesEvent","CreatedAt":"2019-07-02T03:00:47","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6321","RelatedDescription":"Closed issue \"[Bug] Rotated Xamarin.Forms.ScrollView \" (#6321) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen 180 degree rotation is added to scrollview. It fails to scroll properly if it contains several media files (pictures, gifs, etc.)\r\n\r\n\r\n### Basic Information\r\n- Version with issue: 4.0.0.425677\r\n- Platform: Android 9.0 \r\n\r\n\r\n"},{"Id":"9930340255","Type":"IssuesEvent","CreatedAt":"2019-07-02T03:00:32","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6319","RelatedDescription":"Closed issue \"Button click event always fire even when a button is hidden below an entry\" (#6319) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add a grid, add a button (fill the whole background with the button), add on top an editor center the editor so the button is behind it.\r\n2. add click event to the button\r\n3. Run the the xamarin forms app target Android 9.0\r\n4.Click the editor textfield --->click event button fires?, why?\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  Xamarin forms 4.0.0.425677\r\n- Last known good version: 3.6.0.344457\r\n- IDE: VS2019\r\n\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9930337470","Type":"IssuesEvent","CreatedAt":"2019-07-02T02:59:48","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6226","RelatedDescription":"Closed issue \"Flow Direction Doesn't Change When Used With Password Entries\" (#6226) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSetting flow direction to RightToLeft on Entry controls doesn't seem to change the direction \r\n### Steps to Reproduce\r\n\r\n1. Add an Entry to Xaml page\r\n2. Set IsPassword property to true\r\n3. Set FlowDirection Property to RightToLeft\r\n\r\n### Expected Behavior\r\nThe place holder of the Entry to start from right to left\r\n### Actual Behavior\r\nThe place holder of the Entry is starting from the left to right \r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.344457\r\n- IDE: Visual Studio 2019 16.0.4 Enterprise Edition\r\n- Platform Target Frameworks: \r\n- Android: 8.1\r\n\r\n\r\n\r\n"},{"Id":"9930327717","Type":"PullRequestEvent","CreatedAt":"2019-07-02T02:57:04","Actor":"alanag13","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6740","RelatedDescription":"Opened pull request \"[Android] Fix KeyNotFoundException during Shell Navigation\" (#6740) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nIf you have a tabbed page where one of the tabs has pages pushed to it due to `GoToAsync`, the leaving the tabbed page via the flyout and then returning to that tab will cause a crash. This change resolves the crash and instead allows you to return to that tab in the state that is expected.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #6738 \r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\nWill add, see my comment\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"9930232888","Type":"IssuesEvent","CreatedAt":"2019-07-02T02:30:42","Actor":"ianvink","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6739","RelatedDescription":"Opened issue \"Shell app on iOS 9 - [UITabBar unselectedItemTintColor]: unrecognized selector sent to instance\" (#6739) at xamarin/Xamarin.Forms","RelatedBody":"When I create a hello-world with-tabs Shell app, then run on a iOS 9.3 device, it crashes with:\r\n\r\n[UITabBar unselectedItemTintColor]: unrecognized selector sent to instance\r\n Xamarin.iOS: Received unhandled ObjectiveC exception: NSInvalidArgumentException -[UITabBar unselectedItemTintColor]: unrecognized selector sent to instance 0x18082710\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Hello World with Tabs\r\n2. Run on iOS 9.3 device\r\n\r\n### Expected Behavior\r\nShell should check to ensure iOS can respond to that selector like this in old-fashioned Obj-C:\r\n\r\nif ([[UITabBar appearance] respondsToSelector:@selector(setUnselectedItemTintColor:)]) {\r\n     [[UITabBar appearance] setUnselectedItemTintColor:[UIColor blackColor]];\r\n }\r\n\r\n\r\n### Actual Behavior\r\nCrashes\r\n### Basic Information\r\n\r\n  \r\n![Screen Shot 2019-07-01 at 7 29 58 PM](https://user-images.githubusercontent.com/112916/60478204-a4e2ba00-9c36-11e9-832c-ed0dca4eb05b.png)\r\n"},{"Id":"9930171875","Type":"IssuesEvent","CreatedAt":"2019-07-02T02:13:22","Actor":"alanag13","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6738","RelatedDescription":"Opened issue \"[Bug, Shell, Android] Flyout Navigation fails when coupled with tabs that have a stack\" (#6738) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen navigating the correct path in an app that has both Tabbed pages that have a page stack (i.e. have used `GoToAsync`) and a flyout, an Android shell can crash.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open and launch the attached reproduction project\r\n2. Tab the list item to trigger a `GoToAsnyc` on the `Browse` tab.\r\n3. Go to the `About` tab so that you can use the Flyout.\r\n4. Open the Flyout and choose `OtherPage`.\r\n5. Work your way backwords, i.e. go back to the main page via the flyout, then tap the \"Browse\" tab.\r\n\r\n### Expected Behavior\r\nWe should end up back on the browse tab in the same position we left off, viewing the details of the item we clicked.\r\n\r\n### Actual Behavior\r\n```\r\nSystem.Collection.Generic.KeyNotFoundException\r\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) [0x0001e] in <3a61d48d66dd458fa0b64990b6c8f8cc>:0 \r\n  at Xamarin.Forms.Platform.Android.ShellItemRendererBase.HandleFragmentUpdate (Xamarin.Forms.ShellNavigationSource navSource, Xamarin.Forms.ShellSection shellSection, Xamarin.Forms.Page page, System.Boolean animated) [0x00185] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellItemRendererBase.cs:178 \r\n  at Xamarin.Forms.Platform.Android.ShellItemRendererBase.OnShellSectionChanged () [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellItemRendererBase.cs:265 \r\n  at Xamarin.Forms.Platform.Android.ShellItemRenderer.OnShellSectionChanged () [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellItemRenderer.cs:200 \r\n  at Xamarin.Forms.Platform.Android.ShellItemRendererBase.set_ShellSection (Xamarin.Forms.ShellSection value) [0x00029] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellItemRendererBase.cs:56 \r\n  at Xamarin.Forms.Platform.Android.ShellItemRendererBase.OnShellItemPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x00017] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellItemRendererBase.cs:281 \r\n  at (wrapper delegate-invoke) <Module>.invoke_void_object_PropertyChangedEventArgs(object,System.ComponentModel.PropertyChangedEventArgs)\r\n  at Xamarin.Forms.BindableObject.OnPropertyChanged (System.String propertyName) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:211 \r\n  at Xamarin.Forms.Element.OnPropertyChanged (System.String propertyName) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Element.cs:353 \r\n  at Xamarin.Forms.BaseShellItem.OnPropertyChanged (System.String propertyName) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Shell\\BaseShellItem.cs:139 \r\n  at Xamarin.Forms.BindableObject.SetValueActual (Xamarin.Forms.BindableProperty property, Xamarin.Forms.BindableObject+BindablePropertyContext context, System.Object value, System.Boolean currentlyApplying, Xamarin.Forms.Internals.SetValueFlags attributes, System.Boolean silent) [0x00114] in D:\\a\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:443 \r\n  at Xamarin.Forms.BindableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes, Xamarin.Forms.BindableObject+SetValuePrivateFlags privateAttributes) [0x00173] in D:\\a\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:379 \r\n  at Xamarin.Forms.BindableObject.SetValueCore (Xamarin.Forms.BindableProperty property, System.Object value, Xamarin.Forms.Internals.SetValueFlags attributes) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Core\\BindableObject.cs:325 \r\n  at Xamarin.Forms.Element.SetValueFromRenderer (Xamarin.Forms.BindableProperty property, System.Object value) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Element.cs:250 \r\n  at Xamarin.Forms.ShellItem.Xamarin.Forms.IShellItemController.ProposeSection (Xamarin.Forms.ShellSection shellSection, System.Boolean setValue) [0x00032] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Shell\\ShellItem.cs:75 \r\n  at Xamarin.Forms.Platform.Android.ShellItemRenderer.ChangeSection (Xamarin.Forms.ShellSection shellSection) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellItemRenderer.cs:109 \r\n  at Xamarin.Forms.Platform.Android.ShellItemRenderer.OnItemSelected (Android.Views.IMenuItem item) [0x0005c] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellItemRenderer.cs:244 \r\n  at Xamarin.Forms.Platform.Android.ShellItemRenderer.Android.Support.Design.Widget.BottomNavigationView.IOnNavigationItemSelectedListener.OnNavigationItemSelected (Android.Views.IMenuItem item) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellItemRenderer.cs:29 \r\n  at Android.Support.Design.Widget.BottomNavigationView+IOnNavigationItemSelectedListenerInvoker.n_OnNavigationItemSelected_Landroid_view_MenuItem_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_item) [0x0000f] in <b2fc8b4d821e403089b09dd7e80edb90>:0 \r\n  at (wrapper dynamic-method) Android.Runtime.DynamicMethodNameCounter.47(intptr,intptr,intptr)\r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.1\r\n- Last known good version:\r\n- IDE: VS 2019\r\n- Platform Target Frameworks: \r\n  - Android: 9.0\r\n- Android Support Library Version: 28\r\n\r\n### Reproduction Link\r\n[AndroidNavCrash.zip](https://github.com/xamarin/Xamarin.Forms/files/3347988/AndroidNavCrash.zip)\r\n"},{"Id":"9929901229","Type":"IssuesEvent","CreatedAt":"2019-07-02T00:51:51","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6737","RelatedDescription":"Opened issue \"[iOS] Consider using IndexPath.Item instead of IndexPath.Row in CollectionView implementation\" (#6737) at xamarin/Xamarin.Forms","RelatedBody":"I've seen various places where accessing CollectionView items are done via the `Row` property, but the correct property to check is `Item`. For more information, see https://stackoverflow.com/questions/14765730/nsindexpath-item-vs-nsindexpath-row."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9929677427","Type":"PullRequestEvent","CreatedAt":"2019-07-01T23:42:50","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6440","RelatedDescription":"Merged pull request \"[Speech] Add Xcode 11 Beta 1 & Beta 2 bindings\" (#6440) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9929357470","Type":"PullRequestEvent","CreatedAt":"2019-07-01T22:19:02","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6472","RelatedDescription":"Opened pull request \"[CloudKit] Update CloudKit for Xcode 11 beta 2.\" (#6472) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9929126622","Type":"IssuesEvent","CreatedAt":"2019-07-01T21:31:19","Actor":"stefandevo","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6471","RelatedDescription":"Opened issue \"[XCode 11] Rebuilding existing Xamarin.iOS with Xcode 11 Beta 2 fails with various MTOUCH native linking errors\" (#6471) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nInstalled XCode 11 Beta 2 on Mac Mojave 10.14.5 (18F132), Preview of VSforMac, building a non modified app is building with XCode 10.\r\n\r\n### Expected Behavior\r\n\r\nThe application is building without errors.\r\n\r\n### Actual Behavior\r\n\r\nThe application build provides following errors\r\n\r\n```\r\nMTOUCH : warning MT5215: References to 'System' might require additional -framework=XXX or -lXXX instructions to the native linker\r\nMTOUCH : warning MT5215: References to 'System' might require additional -framework=XXX or -lXXX instructions to the native linker\r\nMTOUCH : warning MT5215: References to 'System.Net.Security' might require additional -framework=XXX or -lXXX instructions to the native linker\r\nMTOUCH : warning MT5215: References to 'kernel32' might require additional -framework=XXX or -lXXX instructions to the native linker\r\nMTOUCH : warning MT5215: References to 'kernel32' might require additional -framework=XXX or -lXXX instructions to the native linker\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation)\r\nerror MT5209 : Native linking error : framework not found WatchKit\r\nMTOUCH : error MT5201: Native linking failed. Please review the build log and the user flags provided to gcc: -Xlinker -sectcreate -Xlinker __TEXT -Xlinker __entitlements -Xlinker /MyAppPath/obj/iPhoneSimulator/Debug/device-builds/iphone11.8-13.0/Entitlements.xcent\r\nMTOUCH : error MT5202: Native linking failed. Please review the build log.\r\n    73 Warning(s)\r\n    4 Error(s)\r\n```\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2019 for Mac (Preview) ===\r\n\r\nVersion 8.2 Preview (8.2 build 874)\r\nInstallation UUID: dec165e8-57fe-48f8-9c2e-66efab8f08b9\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.14.0.83 (d16-2 / f08d4e3e)\r\n\r\n\tPackage version: 600000296\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 6.0.0.296 (2019-02/1e9f3bfbc5a) (64-bit)\r\n\tPackage version: 600000296\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.1.0.6013\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.2\r\n\t2.2.1\r\n\t2.2.0\r\n\t2.1.4\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.1.0\r\n\t2.1.0-rc1\r\n\t2.1.0-preview2-26406-04\r\n\t2.0.7\r\n\t2.0.6\r\n\t2.0.5\r\n\t2.0.4\r\n\t2.0.3\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.2.104/Sdks\r\nSDK Versions:\r\n\t2.2.104\r\n\t2.2.102\r\n\t2.1.402\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.300\r\n\t2.1.200\r\n\t2.1.105\r\n\t2.1.101\r\n\t2.1.4\r\n\t2.1.3\r\n\t2.0.3\r\n\t2.0.0\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/6.0.0/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.10\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 11.0 (14855.21)\r\nBuild 11M337n\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.99.0.159 (Visual Studio Enterprise)\r\nHash: 903c3eec\r\nBranch: xcode11\r\nBuild date: 2019-06-27 10:01:06-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.4.0.34 (Visual Studio Enterprise)\r\nCommit: xamarin-android/d16-2/7cce305\r\nAndroid SDK: /Users/stefan/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.3\r\nSDK Build Tools Version: 28.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2019-02@c6edaa62f94\r\nJava.Interop: xamarin/java.interop/d16-2@b2b2610\r\nLibZipSharp: grendello/LibZipSharp/d16-2@caa0c74\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/master@4f717b6\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/stefan/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.58\r\nHash: d03e3ea\r\nBranch: remotes/origin/d16-2\r\nBuild date: 2019-06-19 16:30:22 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.14.0.91 (Visual Studio Enterprise)\r\nHash: 2f1cc7bb\r\nBranch: d16-2\r\nBuild date: 2019-06-07 02:49:22-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.2.0.325\r\nHash: f10cfbf83\r\nBranch: remotes/origin/d16-2\r\nBuild date: 2019-06-19 19:00:46 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 802000874\r\nGit revision: e57770efe0d2b92ade1e1b75e52731614e5f9487\r\nBuild date: 2019-06-25 19:43:32+00\r\nBuild branch: release-8.2-preview2\r\nXamarin extensions: a74fb3eb8717fbcb82500b3a107694ad5185aa48\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.5\r\nDarwin 18.6.0 Darwin Kernel Version 18.6.0\r\n    Thu Apr 25 23:16:27 PDT 2019\r\n    root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n\r\n\r\n```\r\n\r\n\r\n"},{"Id":"9929000981","Type":"PullRequestEvent","CreatedAt":"2019-07-01T21:08:51","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6463","RelatedDescription":"Merged pull request \"[xammac-test/MapKit/PinAnnotationView] Changed assertion of PinTintColor property to work on other language than English\" (#6463) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/6462"},{"Id":"9929000955","Type":"IssuesEvent","CreatedAt":"2019-07-01T21:08:51","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6462","RelatedDescription":"Closed issue \"[xammac tests / Mac / Debug] test failing because machine language is in French\" (#6462) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n0. Have a machine with French language.\r\n1. Clone the master branch \r\n2. Go to the tests folder and ```make runner```\r\n3. In the webpage run xammac tests / Mac / Debug\r\n\r\n![image](https://user-images.githubusercontent.com/41507018/60388096-08d97700-9aad-11e9-8f78-552ee231c90a.png)\r\n\r\n\r\n### Expected Behavior\r\n\r\nTest success\r\n\r\n### Actual Behavior\r\n\r\nError about French typo\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.1 (build 2742)\r\nInstallation UUID: 70ecfafe-7e98-4de3-8a4c-ea6c63ef12e9\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.25 (d16-0 / 50f75273)\r\n\r\n\tPackage version: 600000286\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 6.0.0.286 (2019-02/c22486e39d1) (64-bit)\r\n\tPackage version: 600000286\r\n\r\n=== NuGet ===\r\n\r\nVersion : 5.0.2.5988\r\n\r\n=== .NET Core ===\r\n\r\nRuntime : /usr/local/share/dotnet/dotnet\r\nVersion du runtime : 2.1.11\r\nSDK : /usr/local/share/dotnet/sdk/2.1.700/Sdks\r\nVersion du SDK : 2.1.700\r\nSDK MSBuild : /Library/Frameworks/Mono.framework/Versions/6.0.0/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion : 1.6.10\r\nEmplacement : /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion : 11\r\n\r\n=== Xamarin.Android ===\r\n\r\nNon installé\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: Introuvable\r\n\r\nCode EPL d'Android Designer disponible ici :\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.44\r\nHash: aac645b\r\nBranch: remotes/origin/d16-1\r\nBuild date: 2019-06-23 00:33:17 UTC\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2.1 (14490.122)\r\nBuild 10E1001\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.15.0.241 (Visual Studio Community)\r\nHash: 4b635480\r\nBranch: fixIssue6232\r\nBuild date: 2019-06-28 18:18:49+0200\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.15.0.241 (Visual Studio Community)\r\nHash: 4b635480\r\nBranch: fixIssue6232\r\nBuild date: 2019-06-28 18:18:49+0200\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.1.0.464\r\nHash: 66bb7b43f\r\nBranch: remotes/origin/d16-1-new-document-model\r\nBuild date: 2019-06-23 00:32:49 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 801002742\r\nGit revision: ed27233de1b33083ea2234bc66a3b7824b99bbc7\r\nBuild date: 2019-06-12 10:18:51+00\r\nBuild branch: release-8.1\r\nXamarin extensions: 98dc4d7de2257c9b7342dee023910e16d02f8e65\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.5\r\nDarwin 18.6.0 Darwin Kernel Version 18.6.0\r\n    Thu Apr 25 23:16:27 PDT 2019\r\n    root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nhttps://gist.github.com/joconte/bfaea36a9182eed2d819c104716aafbe\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\nJust the actual tests project of the branch ```master```\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1145802126989385729","CreatedAt":"2019-07-01T21:11:29+00:00","UserScreenname":"xamarinhq","Text":"Jumpstart your next mobile development project by networking with your local community and getting the latest updat… https://t.co/5KymaYV4pf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":28,"FavoriteCount":7,"RawContent":null},{"Id":"1145780868323168256","CreatedAt":"2019-07-01T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/ghYOrkuhhd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1144685402965643277","CreatedAt":"2019-06-28T19:14:01+00:00","UserScreenname":"xamarinhq","Text":"We realized that making UI *look* good is not enough; it has to be truly adaptive. See how to handle this by using… https://t.co/CtEZskZmJ9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":109,"FavoriteCount":37,"RawContent":null},{"Id":"1144326789239644160","CreatedAt":"2019-06-27T19:29:01+00:00","UserScreenname":"xamarinhq","Text":"This week’s Xamarin Essential API, we look at the Email API; enabling you to open a pre-populated e-mail (with atta… https://t.co/oaob7atjW7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":31,"FavoriteCount":14,"RawContent":null},{"Id":"1144002014592061441","CreatedAt":"2019-06-26T21:58:29+00:00","UserScreenname":"xamarinhq","Text":"Reminder: Though new Xamarin .Mac applications target 64-bit by default, existing Xamarin .Mac applications that ta… https://t.co/3k5pQmlyq9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":28,"FavoriteCount":13,"RawContent":null},{"Id":"1143968928076640257","CreatedAt":"2019-06-26T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/YssrTsTPHN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":13,"RawContent":null},{"Id":"1143283413757190148","CreatedAt":"2019-06-24T22:23:01+00:00","UserScreenname":"xamarinhq","Text":"We've reevaluated our Xamarin .Android codebase and made changes that sped up builds and made smaller Dex Files. Se… https://t.co/H3JE59pryL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":68,"RawContent":null},{"Id":"1143177825882726403","CreatedAt":"2019-06-24T15:23:27+00:00","UserScreenname":"xamarinhq","Text":"Get better at building cross-platform mobile apps with the new Xamarin.Forms. Microsoft Learn is all new and a comp… https://t.co/Kb8hT5LkIZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":85,"FavoriteCount":41,"RawContent":null},{"Id":"1142066359947407362","CreatedAt":"2019-06-21T13:46:53+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/zcg70tbgE9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"1141695710716469249","CreatedAt":"2019-06-20T13:14:03+00:00","UserScreenname":"xamarinhq","Text":"Thanks to your feedback, #VS4Mac 8.2 has some really great improvements to the XAML editing experience; including i… https://t.co/vv0DVw9957","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":9,"RawContent":null},{"Id":"1141064668477345794","CreatedAt":"2019-06-18T19:26:31+00:00","UserScreenname":"xamarinhq","Text":"On this episode of the #XamarinShow, @JamesMontemagno and #MSMVP @DanJSiegel show us a super-cool feature of Prism… https://t.co/GLEhnDlQjp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":16,"RawContent":null},{"Id":"1140735760875872256","CreatedAt":"2019-06-17T21:39:33+00:00","UserScreenname":"xamarinhq","Text":"We want to make sure you’re using the latest tooling. The new and improved Automatic Android SDK Management tool is… https://t.co/H0CSaxzj9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":29,"RawContent":null},{"Id":"1140660631273652224","CreatedAt":"2019-06-17T16:41:01+00:00","UserScreenname":"xamarinhq","Text":"On the latest Xamarin.Essential API of the week show, we take a look at the File System Helpers API which contains… https://t.co/GOGKCwXu6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":34,"FavoriteCount":12,"RawContent":null},{"Id":"1139589442732285953","CreatedAt":"2019-06-14T17:44:30+00:00","UserScreenname":"xamarinhq","Text":"Keeping up w/the latest in #dotNET, C#, &amp; #Xamarin is easier than ever. \nThis week’s #XamarinPodcast includes:\n- hi… https://t.co/FDDO27QHDh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1138875870553300995","CreatedAt":"2019-06-12T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"We make it simple for .NET developers to build beautiful cross-platform apps, fast.\nTake a look at how Grial UI Kit… https://t.co/vceU8u475R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":108,"FavoriteCount":48,"RawContent":null},{"Id":"1138511096380309504","CreatedAt":"2019-06-11T18:19:32+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @chewamanda, App Center Program Manager, shows us the latest features in App Center… https://t.co/VHxAknaumJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":17,"RawContent":null},{"Id":"1138151096067792898","CreatedAt":"2019-06-10T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"Join us at Xamarin Developer Summit - July 11-12. With 35+ sessions, there is something for everyone:\n- Mobile DevO… https://t.co/Ez5mDpM1Az","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":84,"FavoriteCount":35,"RawContent":null},{"Id":"1137049335273840640","CreatedAt":"2019-06-07T17:31:01+00:00","UserScreenname":"xamarinhq","Text":"Our cross-platform API library enables any mobile app that uses the Maps API to launch a map w/ a specific location… https://t.co/BWS4qeqtyU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":34,"RawContent":null},{"Id":"1136679096954449921","CreatedAt":"2019-06-06T16:59:49+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2019-07-02T05:30:59.2767895Z","RunDurationInMilliseconds":3157}