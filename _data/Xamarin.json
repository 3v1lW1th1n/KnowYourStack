{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin API Docs: Open Sourced and Available Now","PublishedOn":"2019-05-09T19:41:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of all Xamarin API Documentation as Open Source! API documentation drives the IntelliSense experience while being one of the best ways to help developers...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/","RawContent":null},{"Title":"The Next Evolution of Xamarin Training: Microsoft Learn","PublishedOn":"2019-05-06T08:01:53+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce two new learning paths on Building Xamarin Apps in Microsoft Learn: A free and interactive learning portal.\nXamarin University Joins MS Learn\nThe Xamarin University...","Href":"https://devblogs.microsoft.com/xamarin/next-evolution-xamarin-training-microsoft-learn/","RawContent":null},{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9611971117","Type":"IssuesEvent","CreatedAt":"2019-05-13T07:45:07","Actor":"michalsznajder","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3091","RelatedDescription":"Opened issue \"Shared runtime redeployed on overy run\" (#3091) at xamarin/xamarin-android","RelatedBody":"When I run my application in Debug shared runtime is constantly deployed to my target device. Application is actually Xamarin.Forms but I think it does not matter here.\r\n\r\nI did run msbuild in verbose mode and below is interesting part. It look like build process is not able to veryfiy that shared runtime is installed and redeploys shared runtime every time.\r\n\r\n\r\nI use Huavei P20 Pro with Oreo on board. Other software versions below.\r\n\r\n```\r\n[BEGIN] Detecting installed packages\r\n[MESSAGE] Detecting installed packages...\r\n  Detecting installed packages... (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 am broadcast -a \"mono.android.intent.action.PACKAGE_VERSIONS\" -e \"packages\" \"Mono.Android.DebugRuntime,Mono.Android.Platform.ApiLevel_27,com.myapp.app\" -n \"Mono.Android.DebugRuntime/com.xamarin.mono.android.PackageVersions\" (TaskId:597)\r\n  \r\n  TASK: Broadcast \r\n  am broadcast -a \"mono.android.intent.action.PACKAGE_VERSIONS\" -e \"packages\" \"Mono.Android.DebugRuntime,Mono.Android.Platform.ApiLevel_27,com.myapp.app\" -n \"Mono.Android.DebugRuntime/com.xamarin.mono.android.PackageVersions\" \r\n  \r\n  completed?:Broadcasting: Intent { act=mono.android.intent.action.PACKAGE_VERSIONS flg=0x400000 cmp=Mono.Android... (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 cat /data/system/packages.xml (TaskId:597)\r\n  TASK: GetPackages cat /data/system/packages.xml completed?:cat: /data/system/packages.xml: Permission denied\r\n   (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 cat /dbdata/system/packages.xml (TaskId:597)\r\n  TASK: GetPackages cat /dbdata/system/packages.xml completed?:cat: /dbdata/system/packages.xml: No such file or directory\r\n   (TaskId:597)\r\n[BEGIN] Removing old runtime\r\n[MESSAGE] Removing old runtime: Mono.Android.DebugRuntime...\r\n  Removing old runtime: Mono.Android.DebugRuntime... (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 pm uninstall \"Mono.Android.DebugRuntime\" (TaskId:597)\r\n  DEBUG RunShellCommand LCL0218730001137 pm uninstall \"Mono.Android.DebugRuntime\" (TaskId:597)\r\n  TASK: UninstallPackage pm uninstall \"Mono.Android.DebugRuntime\" completed?:Failure [DELETE_FAILED_INTERNAL_ERROR]\r\n   (TaskId:597)\r\n[END] \r\n[BEGIN] Installing shared runtime\r\n[MESSAGE] Target device is arm64-v8a.\r\n  Target device is arm64-v8a. (TaskId:597)\r\n[MESSAGE] Installing the Mono shared runtime (debug - 1549073043)...\r\n  Installing the Mono shared runtime (debug - 1549073043)... (TaskId:597)\r\n  TASK: UninstallPackage pm uninstall \"Mono.Android.DebugRuntime\" completed?:Success\r\n   (TaskId:597)\r\n[PROGRESS] 10\r\n  10% ... 3456kb of 34475kb copied (TaskId:597)```\r\n\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.9.11\r\nVisualStudio.15.Release/15.9.11+28307.586\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nXamarin   4.12.3.83 (d15-9@23fa80172)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.4.0.64 (9c8d8e0)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```"},{"Id":"9605563312","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:14:09","Actor":"davidbuckleyni","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3090","RelatedDescription":"Opened issue \"HTTPCLient Panifully slow on local host and via ip address\" (#3090) at xamarin/xamarin-android","RelatedBody":"When I run http client in a standard console app or through the browser to my api i get very fast results however in the http client consumed in xmairan forms its very very slow\r\n\r\nI am using the HttpClient but my results are taking up to 6-8 seconds coming back from the same machine on the same subnet and ip range of 192.168. When I call the api directly from the ip address the results are more or less instant so why is it so slow with httpclient on the same computer.\r\n\r\nI have seen other so's that suggest set to use proxy as false is the best way to go.\r\n\r\nI have also tested this on a stock phone and it takes around 8 seconds for the login to be successful on the phone. When i browse to the api the results as returned in second?.\r\n```\r\n\r\nprivate HttpClient _client;\r\npublic async Task<String> Getusers()\r\n{\r\n        var content = \"\";\r\n        HttpClientHandler hch = new HttpClientHandler();\r\n        hch.Proxy = null;\r\n        hch.UseProxy = false;\r\n        _client = new HttpClient(hch);\r\n        var uri = new Uri(Constants.ApiEndPoint + \"/Users\"); // Your url is here\r\n\r\n        try\r\n        {\r\n            var response = await _client.GetAsync(uri);\r\n            if (response.IsSuccessStatusCode)\r\n            {\r\n                content = await response.Content.ReadAsStringAsync();\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            throw ex;\r\n        }\r\n\r\n        return content;\r\n}\r\n```\r\n\r\n\r\n```\r\nprivate async void BtnLogin_Clicked(object sender, EventArgs e)\r\n{\r\n    string content = await Getusers(); //Sends a GET request to the specified Uri and returns the response body as a string in an asynchronous operation\r\n    List<Users> _users = JsonConvert.DeserializeObject<List<Users>>(content); //Deserializes or converts JSON String into a collection of Post\r\n    var userName = txtUserName.Text;\r\n    var password = txtPassword.Text;\r\n    var isValidUser = _users.Where(w => w.UserName == userName && w.password == password).FirstOrDefault();\r\n    var driverId = _users.Where(w => w.UserName == userName && w.password == password).FirstOrDefault().ID;         \r\n\r\n\r\n    if (isValidUser != null)\r\n    {\r\n\r\n            Application.Current.Properties[\"driverId\"] = driverId;\r\n            Application.Current.MainPage = new MainPage();\r\n    }\r\n    else\r\n    {\r\n            lblError.Text = \"Error your credentials are invalid, please try again\";\r\n    }         \r\n\r\n  }\r\n```"},{"Id":"9605532069","Type":"IssuesEvent","CreatedAt":"2019-05-11T00:56:17","Actor":"sanchobear","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3089","RelatedDescription":"Opened issue \"SmtpClient.Send System.Net.Mail.SmtpException: Message could not be sent\" (#3089) at xamarin/xamarin-android","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSending email from Android Emulator using SmtpClient fails with System.Net.Mail.SmtpException Connection refused.\r\nUsing identical code in ConsoleApp succeeds.\r\n\r\n### Steps to Reproduce\r\n\r\n1. VS2019(16.0.3)\r\n2. Xamarin.Forms(3.6.0.344457)\r\n3. Android Emulator Android_Accelerated_x86_Oreo API 27\r\n4. Replace gmail account data and password with valid data\r\n```\r\nvar mail = new MailMessage\r\n{\r\n\tFrom = new MailAddress(\"account@googlemail.com\", \"developer\"),\r\n\tSubject = \"Test smtp\",\r\n\tBody = $\"<p>Smpt test message</p><br>\",\r\n\tIsBodyHtml = true\r\n};\r\nmail.To.Add(\"user@othermail.com\");\r\nvar smtpClient = new SmtpClient\r\n{\r\n\tPort = 587,\r\n\tHost = \"smtp.gmail.com\",\r\n\tEnableSsl = true,\r\n\tUseDefaultCredentials = false,\r\n\tCredentials = new System.Net.NetworkCredential(\"account@googlemail.com\", \"***password***\")\r\n};\r\nsmtpClient.Send(mail);\r\n```\r\n### Expected Behavior\r\nEmail received\r\n### Actual Behavior\r\nSystem.Net.Mail.SmtpException Connection refused at smtpClient.Send\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: VS2019(16.0.3)\r\n- Platform Target Frameworks: \r\n  - Android: Oreo 8.1 API 27  \r\n- Android Support Library Version: \r\n- Nuget Packages:\r\n  - Xamarin.Essentials1.1.0\r\n  - Xamarin.Forms 3.6.0.344457\r\n- Affected Devices:\r\n  - Android Emulator Android_Accelerated_x86_Oreo API 27\r\n\r\n### Reproduction Link\r\n[SmtpTest.zip](https://github.com/xamarin/Xamarin.Forms/files/3162818/SmtpTest.zip)\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9615250957","Type":"IssuesEvent","CreatedAt":"2019-05-13T15:20:45","Actor":"Moltroon","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6188","RelatedDescription":"Opened issue \"[Bug] Tab Shell Call view before VM\" (#6188) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen changing the tab, if we change more than 1 tab and we come back, the view is called and the controller is not recovered. I feel that there is a strange behavior with the passage of several tabs. Maybe you have a way to preload them all to avoid this behavior?\r\n\r\n### Video\r\n\r\nSorry for the sound\r\n[2019-05-13-16-46-13 by Game Genie.zip](https://github.com/xamarin/Xamarin.Forms/files/3173583/2019-05-13-16-46-13.by.Game.Genie.zip)\r\n\r\n### Reproduce\r\n\r\n1. Change the content of the Entry\r\n2. Go to Fake1 page and return to the MainPage\r\n3. Size of the entry have no changes\r\n4. Go to Fake 2 and come back to the main page\r\n5. Entry size have change\r\nNormal?\r\n[ShellFormsTabBug.zip](https://github.com/xamarin/Xamarin.Forms/files/3173595/ShellFormsTabBug.zip)\r\n\r\nThanks"},{"Id":"9614618233","Type":"IssuesEvent","CreatedAt":"2019-05-13T14:06:36","Actor":"fabcall","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6187","RelatedDescription":"Opened issue \"Visual Material Entry underline color should reference PlaceholderColor\" (#6187) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen using Visual Material Entry component, the underline color will \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Entry\r\n2. Set Visual=\"Material\"\r\n3. Set PlaceholderColor to any color\r\n4. Start app\r\n\r\n### Expected Behavior\r\nFollowing the Material Design guidelines, the underline's color should be the updated accordingly with the PlaceholderColor ([source](https://material.io/design/components/text-fields.html)).\r\n\r\n### Actual Behavior\r\nCurrently, the underline's color is being set accordingly with the value provided for TextColor.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.344457"},{"Id":"9614113541","Type":"IssuesEvent","CreatedAt":"2019-05-13T13:04:39","Actor":"ArunSivaR","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6186","RelatedDescription":"Opened issue \"The EventToCommand behavior doesn't fire the button click event in list view\" (#6186) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe EventToCommand behavior doesn't trigger the button clicked event, in list view. In the attached sample we have a list view and added a grid as a DataTemplate for list view and i have added a button inside the grid and triggered the clicked event by using the EventToCommand behavior but the event doesn't fired.\r\n\r\n### Steps to Reproduce\r\n1.  Run the attached sample [EventToCommandSample](https://drive.google.com/file/d/1RxKip_l4sStCdADrSqI8bA-4us58P1Af/view?usp=sharing)\r\n2. Insert a break point on the ButtonClickedEvent method of MainPageViewModelClass\r\n3. Now tap the button on list view the method doesn't called\r\n\r\n### Expected Behavior\r\nThe button clicked event shout fired when we tap on the button.\r\n\r\n### Actual Behavior\r\nThe event doesn't fired as expected.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.x\r\n- Last known good version: \r\n- IDE: VS2015\r\n- Platform Target Frameworks: \r\n  - Android: 8.1\r\n- Android Support Library Version:25.4.0.2\r\n- Nuget Packages: Xamarin.Forms, Prism\r\n- Affected Devices: Redmi Note 5\r\n\r\n### Reproduction Link\r\n\r\nSample link attached \r\n"},{"Id":"9613645130","Type":"IssuesEvent","CreatedAt":"2019-05-13T11:55:47","Actor":"HobDev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6185","RelatedDescription":"Opened issue \"[Enhancement] Add StepValue to Slider\" (#6185) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nIn certain scenarios the slider value is required in  steps. So StepValue can cover this. \r\n\r\n## API Changes\r\nAdd new Property : StepValue\r\n\r\n## Intended Use Case\r\nIn one of my projects the slider Value needs to be increased by 50 with every drag step. Lots of time a whole number is required in value. \r\n"},{"Id":"9611992632","Type":"IssuesEvent","CreatedAt":"2019-05-13T07:48:36","Actor":"Dresel","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6184","RelatedDescription":"Opened issue \"[Bug] Invalid TabBar.Items access in iOS ShellItemRenderer\" (#6184) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\niOS ShellItemRenderer accesses [TabBar.Items](https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.iOS/Renderers/ShellItemRenderer.cs#L259) to enable / disable items. If there are more shell sections than maxTabs, it could lead to an index out of range exception because they are aggregated in a single \"show more\" item.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create shell project\r\n2. Create additional shell sections\r\n3. Set shell section to IsEnabled false to trigger array access\r\n4. Start app\r\n\r\n```xml\r\n<!-- Your Pages -->\r\n<ShellItem>\r\n    <ShellSection Title=\"Browse\" Icon=\"tab_feed.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate local:ItemsPage}\" />\r\n    </ShellSection>\r\n    <ShellSection Title=\"About\" Icon=\"tab_about.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate local:AboutPage}\" />\r\n    </ShellSection>\r\n    <ShellSection Title=\"Browse\" Icon=\"tab_feed.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate local:ItemsPage}\" />\r\n    </ShellSection>\r\n    <ShellSection Title=\"About\" Icon=\"tab_about.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate local:AboutPage}\" />\r\n    </ShellSection>\r\n    <ShellSection Title=\"Browse\" Icon=\"tab_feed.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate local:ItemsPage}\" />\r\n    </ShellSection>\r\n    <ShellSection Title=\"About\" Icon=\"tab_about.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate local:AboutPage}\" />\r\n    </ShellSection>\r\n    <ShellSection Title=\"Browse\" Icon=\"tab_feed.png\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate local:ItemsPage}\" />\r\n    </ShellSection>\r\n    <ShellSection Title=\"About\" Icon=\"tab_about.png\" IsEnabled=\"False\">\r\n        <ShellContent ContentTemplate=\"{DataTemplate local:AboutPage}\" />\r\n    </ShellSection>\r\n</ShellItem>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nNo exception. You might also have to fiddle with the `UIMoreNavigationController` to disable particular items there.\r\n\r\n### Actual Behavior\r\n\r\nException."},{"Id":"9611948356","Type":"PullRequestEvent","CreatedAt":"2019-05-13T07:41:28","Actor":"rookiejava","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6183","RelatedDescription":"Opened pull request \"[Tizen] Support to TabbedPage.BarTextColor, SelctedTabColor, UnselecedTabColor\" (#6183) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThis PR is a tizen implementation of #4899. With this PR, the following properties on `TabbedPage` are newly supported.\r\n- TabbedPage.BarTextColor\r\n- TabbedPage.SelectedTabColor\r\n- TabbedPage.UnselectedTabColor\r\n\r\n### Issues Resolved ### \r\n- fixes #3478\r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\nThe user is now able to specify a separate color for a selected and unselected tab.\r\n\r\n### Before/After Screenshots ### \r\n<img src=\"https://user-images.githubusercontent.com/1029134/57603875-c829ab00-759d-11e9-897c-3df87a816810.gif\" width=400/>\r\n\r\n### Testing Procedure ###\r\nNavigate to `RootPages Gallery` -> `Tab->Content`.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9618840000","Type":"IssuesEvent","CreatedAt":"2019-05-14T02:17:40","Actor":"Therzok","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6046","RelatedDescription":"Opened issue \"[RFC] Possibly port IsDirectBinding optimization to Mac\" (#6046) at xamarin/xamarin-macios","RelatedBody":"Currently, there is no safe way to directly remove IsDirectBinding for Mac, unless the Dynamic registrar is completely removed and/or assembly.\r\n\r\nI was wondering whether we could alleviate the costs here by creating 2 different `SelectorInvoker` classes, let's call them `DirectInvoker` and `SubclassInvoker`.\r\n\r\nThey would be a really thin layer over the Messaging calls, where DirectInvoker would call `msgSend`, SubclassInvoker would call `msgSendSuper`, both classes being sealed to avoid virtual calls at JIT time, all the methods being marked as aggressive inlining. Static readonly instances could be defined which are then used by NSObject.\r\n\r\nAs an example, [SetValueKeyForPath](https://github.com/xamarin/xamarin-macios/blob/81d6225eb7a377fa49dd98aa324f03e749a161dd/src/Foundation/NSObject2.cs#L704-L721) esentially becomes this; \r\n```\r\nclass NSObject\r\n{\r\n    SelectorInvoker invoker; // set it in InitializeObject\r\n\r\n    public void SetValueForKeyPath (IntPtr handle, NSString keyPath)\r\n    {\r\n        if (keyPath == null)\r\n            throw new ArgumentNullException (\"keyPath\");\r\n\r\n        invoker.void_objc_msgSend_IntPtr_IntPtr (this.Handle, selSetValue_ForKeyPath_Handle, handle, keyPath.Handle);\r\n    }    \r\n}\r\n```\r\n\r\nAt object construction time, we would take a 8byte memory hit for each NSObject at the price of removing branch prediction on every call. In an ideal world, direct calls would be generated by Mono, so we would have the performance improvement of what ILLinker would do at the price of slightly increased object size.\r\n\r\nGiven desktop does not have the same limitations memory wise as iOS, it seems like a decent enough trade-off to me. Maybe an experiment could be done in this sense?"},{"Id":"9616363228","Type":"IssuesEvent","CreatedAt":"2019-05-13T17:58:26","Actor":"Therzok","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6045","RelatedDescription":"Opened issue \"NSString.Empty does not point to the same value as the native version\" (#6045) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n```\r\n\t\tstatic bool CheckStrings()\r\n\t\t{\r\n\t\t\tvar empty = NSString.Empty;\r\n\t\t\tIntPtr handle = IntPtr_objc_msgSend(Class.GetHandle(typeof(NSString)), Selector.GetHandle(\"string\"));\r\n\t\t\tvar empty2 = ObjCRuntime.Runtime.GetNSObject<NSString>(handle);\r\n\r\n\t\t\treturn empty.Handle == empty2.Handle;\r\n\t\t}\r\n```.\r\n\r\n### Expected Behavior\r\nCheckStrings returns true.\r\n\r\n### Actual Behavior\r\nNSString.Empty is a new instance that marshals string.Empty, instead of using the native objc version.\r\n\r\n### Environment\r\nXamarin.Mac 5.6.0.25 (d16-0 / 50f75273)\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9616265939","Type":"IssuesEvent","CreatedAt":"2019-05-13T17:43:23","Actor":"Therzok","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6044","RelatedDescription":"Opened issue \"NSSegmentedCell.SetTooltip missing NullAllowed\" (#6044) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\nNSSegmentedCell cell;\r\n...\r\ncell.SetTooltip(\"tooltip\", 0);\r\n```\r\n\r\n### Expected Behavior\r\nSets the tooltip for the first item. null is allowed for a tooltip value:\r\nhttps://developer.apple.com/documentation/appkit/nssegmentedcell/1500186-settooltip\r\n\r\n### Actual Behavior\r\nArgumentNullException.\r\n\r\n### Environment\r\nXamarin.Mac 5.6.0.25 (d16-0 / 50f75273)"},{"Id":"9606405169","Type":"PullRequestEvent","CreatedAt":"2019-05-11T10:03:39","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5938","RelatedDescription":"Merged pull request \" [XHarness] Fix some issues in the BCL test generator.\" (#5938) at xamarin/xamarin-macios","RelatedBody":"Re-did the PR since we merged with master and we had issues with the diff."},{"Id":"9605605418","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:38:58","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6043","RelatedDescription":"Closed issue \"I'm having an timeout issue, specifically a WebException.\" (#6043) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nSo the issue is I'm running into a WebException (specifically a timeout).\r\n\r\nI have been able to narrow it down to the HTTP Client implementation settings in iOS.\r\n\r\n- When it is set to **Managed** I don't get the error\r\n\r\n- When I set it to **NSUrlSession (iOS 7+)** a timeout exception is being generated after a request has been running longer than 1 minute. \r\n\r\nWe also tested our json request, using Insomnia, and it took about 5 mins as well, but no exception is generated.\r\n\r\nI do not have access to the middle tier, just the server logs that get updated.\r\n\r\nI know about the HttpClient.Timeout property which we have set for large amount of time, are there any other configuration variables for setting the timeout when needing TLS 1.2?\r\n\r\nWhat am I missing?\r\n\r\nMac OS \r\n- XCode 8.3.3\r\n\r\nVisual Studio 2015 for Windows \r\n- Xamarin 4.6.3.4  \r\n- Xamarin.IOS 10.12.3.3\r\n\r\n:: Extra Info That May Be Helpful ::\r\nIt looks as though **NSUrlSession (iOS 7+)** setting forces the native HTTP Client to be used (which has a hard-coded timeout of 60 seconds)\r\n\r\n"},{"Id":"9605563713","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:14:23","Actor":"mhughey-vent","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6043","RelatedDescription":"Opened issue \"I'm having an timeout issue, specifically a WebException.\" (#6043) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nSo the issue is I'm running into a WebException (specifically a timeout).\r\n\r\nI have been able to narrow it down to the HTTP Client implementation settings in iOS.\r\n\r\n- When it is set to **Managed** I don't get the error\r\n\r\n- When I set it to **NSUrlSession (iOS 7+)** a timeout exception is being generated after a request has been running longer than 1 minute. \r\n\r\nWe also tested our json request, using Insomnia, and it took about 5 mins as well, but no exception is generated.\r\n\r\nI do not have access to the middle tier, just the server logs that get updated.\r\n\r\nI know about the HttpClient.Timeout property which we have set for large amount of time, are there any other configuration variables for setting the timeout when needing TLS 1.2?\r\n\r\nWhat am I missing?\r\n\r\nMac OS \r\n- XCode 8.3.3\r\n\r\nVisual Studio 2015 for Windows \r\n- Xamarin 4.6.3.4  \r\n- Xamarin.IOS 10.12.3.3\r\n\r\n:: Extra Info That May Be Helpful ::\r\nIt looks as though **NSUrlSession (iOS 7+)** setting forces the native HTTP Client to be used (which has a hard-coded timeout of 60 seconds)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1126613804438233088","CreatedAt":"2019-05-09T22:23:57+00:00","UserScreenname":"xamarinhq","Text":"Xamarin API Docs have gone open-sourced...\nWhat's that mean for you? \nCheck it out: https://t.co/EWHFrQF7a1\n#xamarin https://t.co/o6HskCU7oN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":76,"FavoriteCount":41,"RawContent":null},{"Id":"1125851046939697152","CreatedAt":"2019-05-07T19:53:01+00:00","UserScreenname":"xamarinhq","Text":"The @XamarinU team has joined the #MicrosoftLearn family! Find Xamarin content in Microsoft Learn today at… https://t.co/gWKXwsPUuk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":132,"FavoriteCount":62,"RawContent":null},{"Id":"1125402214661382146","CreatedAt":"2019-05-06T14:09:31+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin Team at Microsoft Build 2019.\nWe have a packed schedule for Xamarin developers.\nCheck out the sche… https://t.co/fFz1nlYVTp","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":65,"FavoriteCount":27,"RawContent":null},{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":7,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":11,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":72,"RawContent":null}]}},"RunOn":"2019-05-14T05:30:54.3731405Z","RunDurationInMilliseconds":2240}