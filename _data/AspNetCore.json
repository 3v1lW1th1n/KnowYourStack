{"Data":{"Blog":{"FeedItems":[{"Title":"Sharing Configuration in ASP.NET Core SPA Scenarios","PublishedOn":"2017-10-27T15:17:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Mike Rousos ASP.NET Core 2.0 recently released and, with it, came some new templates, including new project templates for single-page applications (SPA) served from an ASP.NET Core backend. These templates make it easy to setup a web application with a rich JavaScript frontend and powerful ASP.NET Core backend. Even... <a aria-label=\"read more about Sharing Configuration in ASP.NET Core SPA Scenarios\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/27/sharing-configuration-in-asp-net-core-spa-scenarios/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/27/sharing-configuration-in-asp-net-core-spa-scenarios/","RawContent":null},{"Title":"User accounts made easy with Azure","PublishedOn":"2017-10-17T21:01:45+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"One of the most common requirements for web applications is for users create accounts for the purpose of access control and personalization. While ASP.NET templates have always made it easy to create an application that uses a database you control to register and track user accounts, that introduces other complications over the long term. As... <a aria-label=\"read more about User accounts made easy with Azure\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/","RawContent":null},{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains a number of changes (including API changes) and improvements. Notable Changes The JSON hub protocol now uses camel casing... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core Alpha 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T01:56:39+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T23:00:07+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6776453110","Type":"IssuesEvent","CreatedAt":"2017-10-27T17:55:07","Actor":"sunn789","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2260","RelatedDescription":"Opened issue \"many confuse about asp.net core 2 \" (#2260) at aspnet/Home","RelatedBody":"first of all I install vs 15.4 ent and i have the same problem in 15.3 and work with MVC core 2 for create my web projects.\r\nif i create relation in Class as a code first for create database and make relations in controller it's not good \r\n`   ViewData[\"CustomerTypeId\"] = new SelectList(_customerTypeRepository.GetAll(), \"Id\", \"Id\");\r\n            ViewData[\"CityId\"] = new SelectList(_cityRepository.GetAll(), \"Id\", \"Id);`\r\nin MVC 5 it was \r\n\r\n`   ViewData[\"CustomerTypeId\"] = new SelectList(_customerTypeRepository.GetAll(), \"Id\", \"Name\");\r\n            ViewData[\"CityId\"] = new SelectList(_cityRepository.GetAll(), \"Id\", \"Name\");`\r\n\r\nand the same in Index view on scaffold \r\n`  <th>\r\n            @Html.DisplayNameFor(model => model.City)\r\n        </th>\r\n        <th>\r\n            @Html.DisplayNameFor(model => model.CustomerType)\r\n        </th>` \r\nin MVC 5 it was \r\n`  <th>\r\n            @Html.DisplayNameFor(model => model.City.Name)\r\n        </th>\r\n        <th>\r\n            @Html.DisplayNameFor(model => model.CustomerType.Name)\r\n        </th>`\r\n\r\nalso in EF if I add migration adn update-database with any relation and FK it's work nice and if i add new relation in my code first class and want update-database got arroe that : I have problem in parent_table and child-table_id problem if i remove database and remove migration and add init migration and update_database it work nice .\r\nthanks  \r\n"},{"Id":"6776111853","Type":"IssuesEvent","CreatedAt":"2017-10-27T16:33:34","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2259","RelatedDescription":"Opened issue \"ASP.NET MVC fails with 400 when Chinese characters are in cookies\" (#2259) at aspnet/Home","RelatedBody":"@netnr opened this here: https://github.com/dotnet/core/issues/1049\r\n\r\n# Issue Title\r\n`asp.net core 2.0 mvc` \r\nDevelopment project, cookies has Chinese, access site return error code: 400\r\n\r\n# General\r\n\r\n![1.png](https://i.loli.net/2017/10/27/59f27ec08b50f.png)\r\n![2.png](https://i.loli.net/2017/10/27/59f27ec093424.png)\r\n![3.png](https://ooo.0o0.ooo/2017/10/27/59f27ec097fc0.png)"},{"Id":"6772853013","Type":"IssuesEvent","CreatedAt":"2017-10-27T01:40:06","Actor":"mwonger","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2258","RelatedDescription":"Opened issue \"Unhandled Exception: System.AggregateException: One or more errors occurred. (Webpack dev middleware failed because of an error while loading 'aspnet-webpack'. Error was: Error: Cannot find module 'aspnet-webpack'\" (#2258) at aspnet/Home","RelatedBody":"Using the ASP.NET Core Web Application  (ASP.NET Core 2.0) React.js and Redux project template as a baseline\r\ndotnet build -c Debug -o ./app\r\ndotnet publish -c Debug -o ./app\r\n\r\ncd app\r\nset ASPNETCORE_ENVIRONMENT=Development\r\ndotnet WebApplication1.dll\r\n\r\nResults in the error\r\nerror while loading 'aspnet-webpack'. Error was: Error: Cannot find module 'aspnet-webpack'\r\n\r\nTried working around the issue via npm update (npm-shrinkwrap.json present in my directory)\r\nThe node_modules folder is created on the publish of the webapplication.csproj\r\nWe also got the error \r\nwebpack.config.vendor.js not found.  \r\n\r\nWe thought all this stuff would be packaged up via the msbuild lines in the csproj file targets \r\n<Target Name=\"PublishRunWebpack\" AfterTargets=\"ComputeFilesToPublish\"> and\r\n<Target Name=\"DebugRunWebpack\" BeforeTargets=\"Build\" Condition=\" '$(Configuration)' == 'Debug' And !Exists('wwwroot\\dist') \">\r\n\r\nthat run npm install node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js etc.\r\n\r\nbut it looks like webpack wants to rebuild on the published bits in the app directory when we actually try to start the site up.\r\ndotnet publish looks like it copies the resulting bits from wwwroot\\dist\\**; ClientApp\\dist\\**\"  Are there other files that need to be copied?\r\n\r\nThe only workarounds we have found:\r\n1) instead of doing a build/publish above we do a dotnet run in the project directory (so instead of copying the published bits to a server, we copy the project directory structure including the csproj file)\r\nThis effectively starts the web server up on our deployed server using the development hosting environment\r\nUsing launch settings from C:\\app\\WebApplication1\\webapplication1\\Properties\\launchSettings.json...\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using 'C:\\Users\\ContainerAdministrator\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[58]\r\n      Creating key {9ae79442-a514-42c2-92da-6d5dcb48efb0} with creation date 2017-10-27 01:04:45Z, activation date 2017-10-27 01:04:45Z, and expiration date 2018-01-25 01:04:45Z.\r\ninfo: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository[39]\r\n      Writing data to file 'C:\\Users\\ContainerAdministrator\\AppData\\Local\\ASP.NET\\DataProtection-Keys\\key-9ae79442-a514-42c2-92da-6d5dcb48efb0.xml'.\r\n**Hosting environment: Development**\r\nContent root path: C:\\app\\WebApplication1\\webapplication1\r\n\r\n2) don't use ASPNETCORE_ENVIRONMENT=Development on the server we are deploying to.\r\n\r\nis there a way to use the published folder with ASPNETCORE_ENVIRONMENT=Development?"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6779073792","Type":"IssuesEvent","CreatedAt":"2017-10-28T18:29:22","Actor":"BenHayat","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1063","RelatedDescription":"Opened issue \"Question for the team on SignalR Core\" (#1063) at aspnet/SignalR","RelatedBody":"Hi;\r\n\r\nIf I develop a mobile app using JS, jQuery and PhoneGap, which uses WebKit browser engine for Android and WebView browser engine for iOS, does SignalR Core support these Web engines as part of \"Browser Support\"? Another words, can I build PhoneGap Mobile client app using SignalR Core client?\r\n\r\nThanks!"},{"Id":"6777779771","Type":"IssuesEvent","CreatedAt":"2017-10-28T00:59:06","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1062","RelatedDescription":"Closed issue \"AspNetCore SignalR\" (#1062) at aspnet/SignalR","RelatedBody":"How can I use GlobalHost in SignalR AspNetCore, I need to call a Hub method from the server. Like I receive a message then send back a waiting message. Then process the requested message and after the process is complete I send back another message of completed to the client."},{"Id":"6776972548","Type":"IssuesEvent","CreatedAt":"2017-10-27T20:03:12","Actor":"bleekbless","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1062","RelatedDescription":"Opened issue \"AspNetCore SignalR\" (#1062) at aspnet/SignalR","RelatedBody":"How can I use GlobalHost in SignalR AspNetCore, I need to call a Hub method from the server. Like I receive a message then send back a waiting message. Then process the requested message and after the process is complete I send back another message of completed to the client."},{"Id":"6776531100","Type":"IssuesEvent","CreatedAt":"2017-10-27T18:13:50","Actor":"MattHartz","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1061","RelatedDescription":"Closed issue \"Production Ready Roadmap\" (#1061) at aspnet/SignalR","RelatedBody":"Hi everyone,\r\n\r\nSmall question for the SignalR team.  Is there a roadmap posted anywhere for the features coming in future releases along with a best case scenario of when SignalR core may be production ready?\r\n\r\nThanks!"},{"Id":"6776425338","Type":"IssuesEvent","CreatedAt":"2017-10-27T17:48:44","Actor":"MattHartz","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1061","RelatedDescription":"Opened issue \"Production Ready Roadmap\" (#1061) at aspnet/SignalR","RelatedBody":"Hi everyone,\r\n\r\nSmall question for the SignalR team.  Is there a roadmap posted anywhere for the features coming in future releases along with a best case scenario of when SignalR core may be production ready?\r\n\r\nThanks!"},{"Id":"6775993831","Type":"IssuesEvent","CreatedAt":"2017-10-27T16:06:38","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1060","RelatedDescription":"Opened issue \"Consume newer CoreFX/CoreFXLab packages\" (#1060) at aspnet/SignalR","RelatedBody":"It's been a while since we took some of the dependencies.\r\n\r\n@ahsonkhan is working on getting a new signed build of the packages that we use. "},{"Id":"6771840883","Type":"IssuesEvent","CreatedAt":"2017-10-26T20:25:12","Actor":"AustinFelipe","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1059","RelatedDescription":"Opened issue \"Options not being sent to HttpClient\" (#1059) at aspnet/SignalR","RelatedBody":"Hey guys, looking at the code I found this method not sending ```this.options``` as a second parameter, which prevents to send some useful information at the http header, am I wrong?\r\n\r\n\r\nhttps://github.com/aspnet/SignalR/blob/eec6b4f2f598a72eeed7de9f309d2a241a81fe2e/client-ts/Microsoft.AspNetCore.SignalR.Client.TS/HttpConnection.ts#L62\r\n\r\nIt should be something like \r\n``` javascript\r\nlet negotiatePayload = yield this.httpClient.options(this.url, this.options);\r\n```\r\n\r\nOr getting just the header section\r\n``` javascript\r\nlet negotiatePayload = yield this.httpClient.options(this.url, this.options.header);\r\n```\r\n\r\nDoes it make any sense?"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6781671231","Type":"IssuesEvent","CreatedAt":"2017-10-30T02:43:47","Actor":"kshyju","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7003","RelatedDescription":"Opened issue \"Action method returns empty response after setting TempData\" (#7003) at aspnet/Mvc","RelatedBody":"When i set  an object of my custom class to TempData and try to do a Redirect, I get a 500 error. As per 2.0, CookieTempData provider is default. So i do not have any explicit mapping for` ITempDataProvider` to `CookieTempDataProvider`\r\n\r\nThe code i am trying\r\n\r\n        [HttpPost]\r\n        public IActionResult Index(IndexViewModel model)\r\n        {\r\n            model.Code = \"This was set in HttpPost at\" + DateTime.Now;\r\n            TempData[\"MyModel\"] = model;          \r\n            return RedirectToAction(\"About\",\"Home\");\r\n        }\r\n\r\n        public IActionResult About()\r\n        {\r\n            var m = TempData[\"MyModel\"] as IndexViewModel;\r\n            ViewBag.Message = m?.Code ?? \" There was nothing in TempData.\";\r\n            return View();\r\n        }\r\nThis never hits About action method. I inspected the network calls and the browser never gets a 302 response when i submit the form to the HttpPost Index action.\r\n\r\nChrome dev tools shows `Status Code:500 Internal Server Error` in General header section\r\n\r\nResponse headers are\r\n```\r\n\r\nHTTP/1.1 500 Internal Server Error\r\nServer: Kestrel\r\nX-SourceFiles: =?UTF-8?B?QzpcdGVtcFxUZW1wRGF0YVxUZW1wRGF0YVxUZW1wRGF0YQ==?=\r\nX-Powered-By: ASP.NET\r\nDate: Mon, 30 Oct 2017 02:29:19 GMT\r\nContent-Length: 0\r\n```\r\nI have the exception page enabled in Startup, but still not seeing any errors\r\n\r\n\r\nThis is the error message i get in chrome\r\n\r\nThis page isn’t working\r\n\r\nlocalhost is currently unable to handle this request.\r\nHTTP ERROR 500\r\n\r\n--"},{"Id":"6778827033","Type":"IssuesEvent","CreatedAt":"2017-10-28T15:43:26","Actor":"smartprogrammer93","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7002","RelatedDescription":"Opened issue \"Localization doesn't work unless you add a package that isnt from microsoft\" (#7002) at aspnet/Mvc","RelatedBody":"Hello,\r\n\r\nI had a similar issue to this person as the link below,\r\n\r\nhttps://stackoverflow.com/questions/39132868/localization-in-asp-net-core-mvc-not-working-unable-to-locate-resource-file\r\n\r\nand the solution proposed on that page worked.\r\n\r\nI was wondering why is this not documented. And why its required to install a package isnt even from microsoft.\r\n\r\nRegards"},{"Id":"6778198775","Type":"IssuesEvent","CreatedAt":"2017-10-28T07:19:45","Actor":"Varorbc","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6979","RelatedDescription":"Closed issue \"Simplified Chinese characters are garbled\" (#6979) at aspnet/Mvc","RelatedBody":"# Env:\r\n\r\nvs2017 15.4.1\r\n\r\n.net core 2.0.2\r\n\r\n# Test One\r\n\r\n        Console.WriteLine(\"中文\");\r\n\r\n![image](https://user-images.githubusercontent.com/5714438/31859365-7a8f2eee-b73d-11e7-8edf-3a854d4e4334.png)\r\n\r\nresult is success\r\n\r\n# Test Two\r\n\r\n        public IActionResult Index()\r\n        {\r\n            return Ok(\"中文\");\r\n        }\r\n\r\n![image](https://user-images.githubusercontent.com/5714438/31859390-2aebc48c-b73e-11e7-859f-b28afdbd4b4c.png)\r\n\r\nresult is success too\r\n\r\n#Test Three\r\n\r\n            app.Run(async context =>\r\n            {\r\n                await context.Response.WriteAsync(\"中文\");\r\n            });\r\n\r\n![image](https://user-images.githubusercontent.com/5714438/31859456-ee2a7e52-b73e-11e7-91a8-c9cb8c2b9af8.png)\r\n\r\nresult is failure\r\n\r\n#Test Four\r\n\r\n            app.Run(async (context) =>\r\n            {\r\n                Encoding.RegisterProvider(CodePagesEncodingProvider.Instance);\r\n                await context.Response.WriteAsync(\"中文\");\r\n            });\r\n\r\n![image](https://user-images.githubusercontent.com/5714438/31859597-abecd970-b740-11e7-9586-0f135ebb63bb.png)\r\n\r\nresult is failure too\r\n"},{"Id":"6776739970","Type":"PullRequestEvent","CreatedAt":"2017-10-27T19:04:14","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6999","RelatedDescription":"Merged pull request \"Make controllers with ApiControllerAttribute visible in ApiExplorer\" (#6999) at aspnet/Mvc","RelatedBody":""},{"Id":"6775941071","Type":"IssuesEvent","CreatedAt":"2017-10-27T15:55:36","Actor":"wind-rider","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7001","RelatedDescription":"Opened issue \"Publishing Asp.net Core 2.0 / net461 / x86 using visual studio GUI does not work\" (#7001) at aspnet/Mvc","RelatedBody":"I'm trying to publish an asp.net core 2.0 project targeting the full .Net Framework to a folder using the gui in Visual Studio 15.5.0 preview 2.\r\n\r\nThe error I'm getting is:\r\n\r\n```\r\nProject is targeting runtime 'win7-x86' but did not resolve any runtime-specific packages for the 'Microsoft.NETCore.App' package.  This runtime may not be supported by .NET Core.\r\nC:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.0.0\\build\\netcoreapp2.0\\Microsoft.NETCore.App.targets\t19\t\r\n```\r\n\r\nHowever, when I run it locally in IIS Express, it builds fine."},{"Id":"6774197926","Type":"IssuesEvent","CreatedAt":"2017-10-27T09:28:16","Actor":"Rexota","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7000","RelatedDescription":"Opened issue \"Test framework that works well with DI?\" (#7000) at aspnet/Mvc","RelatedBody":"I've a few services and want to test them with dependency injection:\r\n\r\n``` cs\r\nservices.AddScoped<IAccountService, AccountService>();\r\nservices.AddScoped<IMarketService, MarketService>();\r\nservices.AddScoped<IOrderService, OrderService>();\r\nservices.AddScoped<IAnnouncementService, AnnouncementService>();\r\nservices.AddScoped<IPageService, PageService>();\r\nservices.AddScoped<ITicketService, TicketService>();\r\nservices.AddTransient<IEmailSender, EmailSender>();\r\n```\r\n\r\nI know xunit doesn't support DI. Any suggestion? I'm having hard time to find tutorials etc."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6779775284","Type":"IssuesEvent","CreatedAt":"2017-10-29T04:42:14","Actor":"mkArtak","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1444","RelatedDescription":"Closed issue \"Email confirmation token becomes invalid after redeployment\" (#1444) at aspnet/Identity","RelatedBody":"Hi.\r\n\r\nI have an asp.net core 2 web application which is hosted in Azure AppService.\r\nWhen a new user signs up the application sends an email confirmation request to the user (as an email), with a link in it for the user to click.\r\nThe link uses a token generated using the following method:\r\n`UserManager<TUser>.GenerateEmailConfirmationTokenAsync(TUser user)`\r\n\r\nWhen user clicks the link, the AccountController handles that request and tries to find the user given the email address and the token:\r\n`IdentityResult result = await this.userManager.ConfirmEmailAsync(user, code);`\r\n\r\nHowever, if after generating the code a new deployment had happened, the ConfirmEmailAsync method would not be able to find the user with that code, so the confirmation request results in an error.\r\n\r\n\r\nHere is the list of relevant packages my project references:\r\n```\r\n<PackageReference Include=\"AWSSDK.SimpleNotificationService\" Version=\"3.3.0.21\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.Facebook\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.Google\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.MicrosoftAccount\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.Twitter\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.0.0\" />\r\n```\r\n"},{"Id":"6779351712","Type":"IssuesEvent","CreatedAt":"2017-10-28T21:48:10","Actor":"Conner05","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1489","RelatedDescription":"Opened issue \"JWT in Request Header is not the same in receiving .Net Core API\" (#1489) at aspnet/Identity","RelatedBody":"When I make a request to my .Net Core 2 API from my Angular app the JWT is not the same as the one sent in the request header.\r\n\r\n**Startup.cs**\r\n\r\n    \r\n\tpublic class Startup\r\n\t{\r\n\t\tpublic Startup(IHostingEnvironment env)\r\n\t\t{\r\n\t\t\tvar builder = new ConfigurationBuilder()\r\n\t\t\t\t.SetBasePath(env.ContentRootPath)\r\n\t\t\t\t.AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true)\r\n\t\t\t\t.AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true)\r\n\t\t\t\t.AddEnvironmentVariables();\r\n\t\t\t_config = builder.Build();\r\n\t\t}\r\n\r\n\t\tIConfigurationRoot _config;\r\n\r\n\t\t// This method gets called by the runtime. Use this method to add services to the container.\r\n\t\tpublic void ConfigureServices(IServiceCollection services)\r\n\t\t{\r\n\t\t\tservices.AddSingleton(_config);\r\n\t\t\tservices.AddDbContext<ApplicationDbContext>(ServiceLifetime.Transient);\r\n\r\n\t\t\tservices.AddTransient<IEmailSender, AuthMessageSender>();\r\n\t\t\tservices.AddTransient<ISmsSender, AuthMessageSender>();\r\n\r\n\t\t\tservices.AddSingleton<IUserTwoFactorTokenProvider<ApplicationUser>, DataProtectorTokenProvider<ApplicationUser>>();\r\n\r\n\t\t\t// Add application services.\r\n\r\n\t\t\t// Add application repositories.\r\n\r\n\t\t\t// Add options.\r\n\t\t\tservices.AddOptions();\r\n\t\t\tservices.Configure<StorageAccountOptions>(_config.GetSection(\"StorageAccount\"));\r\n\r\n\t\t\t// Add other.\r\n\t\t\tservices.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();\r\n\t\t\tservices.AddTransient<ApiExceptionFilter>();\r\n\r\n\t\t\t// this makes \"this.User\" reflect the properties of the jwt sent in the request\r\n\t\t\tservices.AddTransient<ClaimsPrincipal>(s => s.GetService<IHttpContextAccessor>().HttpContext.User);\r\n\t\t\t\r\n\t\t\tservices.AddIdentity<ApplicationUser, IdentityRole>(options =>\r\n\t\t\t{\r\n\t\t\t\t// set password complexity requirements\r\n\t\t\t\toptions.Password.RequireDigit = true;\r\n\t\t\t\toptions.Password.RequireLowercase = true;\r\n\t\t\t\toptions.Password.RequireUppercase = false;\r\n\t\t\t\toptions.Password.RequireNonAlphanumeric = false;\r\n\t\t\t\toptions.Password.RequiredLength = 6;\r\n\r\n\t\t\t\toptions.Tokens.ProviderMap.Add(\"Default\",\r\n\t\t\t\tnew TokenProviderDescriptor(typeof(IUserTwoFactorTokenProvider<ApplicationUser>)));\r\n\t\t\t}).AddEntityFrameworkStores<ApplicationDbContext>();\r\n\r\n\t\t\tservices.AddAuthentication(options =>\r\n\t\t\t{\r\n\t\t\t\toptions.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n\t\t\t\toptions.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n\t\t\t}).AddJwtBearer(config =>\r\n\t\t\t\t{\r\n\t\t\t\t\tconfig.RequireHttpsMetadata = false;\r\n\t\t\t\t\tconfig.SaveToken = true;\r\n\t\t\t\t\tconfig.TokenValidationParameters = new TokenValidationParameters()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tValidIssuer = _config[\"Tokens:Issuer\"],\r\n\t\t\t\t\t\tValidAudience = _config[\"Tokens:Audience\"],\r\n\t\t\t\t\t\tValidateIssuerSigningKey = true,\r\n\t\t\t\t\t\tIssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_config[\"Tokens:Key\"])),\r\n\t\t\t\t\t\tValidateLifetime = true\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\tservices.AddAuthorization(config =>\r\n\t\t\t{\r\n\t\t\t\tconfig.AddPolicy(\"Subscribers\", p => p.RequireClaim(\"Subscriber\", \"True\"));\r\n\t\t\t\tconfig.AddPolicy(\"Artists\", p => p.RequireClaim(\"Artist\", \"True\"));\r\n\t\t\t\tconfig.AddPolicy(\"Admins\", p => p.RequireClaim(\"Admin\", \"True\"));\r\n\t\t\t});\r\n\r\n\t\t\tservices.Configure<DataProtectionTokenProviderOptions>(o =>\r\n\t\t\t{\r\n\t\t\t\to.Name = \"Default\";\r\n\t\t\t\to.TokenLifespan = TimeSpan.FromHours(1);\r\n\t\t\t});\r\n\t\t\tservices.Configure<AuthMessageSenderOptions>(_config);\r\n\r\n\t\t\t// Add framework services.\r\n\t\t\tservices.AddMvc(opt =>\r\n\t\t\t{\r\n\t\t\t\t//opt.Filters.Add(new RequireHttpsAttribute());\r\n\t\t\t}\r\n\t\t\t).AddJsonOptions(opt =>\r\n\t\t\t{\r\n\t\t\t\topt.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n\t\tpublic void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n\t\t{\r\n\t\t\tloggerFactory.AddConsole(_config.GetSection(\"Logging\"));\r\n\t\t\tloggerFactory.AddDebug();\r\n\r\n\t\t\tapp.Use(async (context, next) =>\r\n\t\t\t{\r\n\t\t\t\t// just to check the context.User.Claims on request\r\n\t\t\t\tvar temp = context;\r\n\t\t\t\tawait next();\r\n\t\t\t});\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\tapp.UseMvc();\r\n\t\t}\r\n\t}\r\n\r\nThis is where the token gets issued (on app login)\r\n\r\n**AuthController.cs**\r\n\r\n    private async Task<IList<Claim>> CreateUserClaims(ApplicationUser user)\r\n\t\t{\r\n\t\t\tvar userClaims = await _userManager.GetClaimsAsync(user);\r\n\t\t\tvar newClaims = new[]\r\n\t\t\t{\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.Sub, user.UserName),\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.NameId, user.Id)\r\n\t\t\t}.Union(userClaims).ToList();\r\n\t\t\treturn newClaims;\r\n\t\t}\r\n\t\tprivate Object CreateToken(IList<Claim> claims)\r\n\t\t{\r\n\t\t\tvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_config[\"Tokens:Key\"]));\r\n\t\t\tvar creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\r\n\t\t\tvar token = new JwtSecurityToken(\r\n\t\t\t\tissuer: _config[\"Tokens:Issuer\"],\r\n\t\t\t\taudience: _config[\"Tokens:Audience\"],\r\n\t\t\t\tclaims: claims,\r\n\t\t\t\texpires: DateTime.UtcNow.AddDays(29),\r\n\t\t\t\tsigningCredentials: creds\r\n\t\t\t);\r\n\t\t\treturn new\r\n\t\t\t{\r\n\t\t\t\ttoken = new JwtSecurityTokenHandler().WriteToken(token),\r\n\t\t\t\texpiration = token.ValidTo\r\n\t\t\t};\r\n\t\t}\r\n\t\tprivate async Task<Object> CreateToken(ApplicationUser user)\r\n\t\t{\r\n\t\t\tvar claims = await CreateUserClaims(user);\r\n\t\t\tvar token = CreateToken(claims);\r\n\t\t\treturn token;\r\n\t\t}\r\n    [HttpPost(\"token\")]\r\n\t\t[AllowAnonymous]\r\n\t\tpublic async Task<IActionResult> CreateToken([FromBody] CredentialModel model)\r\n\t\t{\r\n\t\t\tvar user = await _userManager.FindByNameAsync(model.UserName);\r\n\t\t\tif (user != null)\r\n\t\t\t{\r\n\t\t\t\tif (_hasher.VerifyHashedPassword(user, user.PasswordHash, model.Password)\r\n\t\t\t\t\t== PasswordVerificationResult.Success)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar token = await CreateToken(user);\r\n\t\t\t\t\treturn Ok(token);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new ApiException(\"Bad email or password.\");\r\n\t\t}\r\n\r\nI have confirmed through the Chrome debugger Network tab that the JWT in my request is the JWT I want the API to get. \r\n\r\n**Because of that I will leave the Angular request code out of this post.**\r\n\r\nHere is a Controller that returns items by UserId\r\n\r\n    [HttpGet]\r\n\t\tpublic async Task<IActionResult> Get()\r\n\t\t{\r\n\t\t\tvar artists = await _manageArtistService.GetAllByUser(this.User);\r\n\t\t\tif (artists == null) return NotFound($\"Artists could not be found\");\r\n\t\t\treturn Ok(artists);\r\n\t\t}\r\n\r\nHere is the service the controller calls\r\n\r\n    public async Task<IEnumerable<ManageArtistView>> GetAllByUser(ClaimsPrincipal user)\r\n\t\t{\r\n\t\t\t// gets all artists of a given user, sorted by artist\r\n\t\t\tvar userId = _userService.GetUserId(user);\r\n\t\t\tvar artists = await _manageArtistRepository.GetAllByUser(userId);\r\n\t\t\treturn artists;\r\n\t\t}\r\n\r\nIn the `UserService.cs` I have attempted a few different means of accessing the current user. I check the `this.User` that was passed from the Controller. \r\n\r\nI also check the current context in `_context` - a Singleton you can see in the `Startup.cs`.\r\n\r\nThere is also the `_caller` which is from this line in `Startup.cs`\r\n\r\n    services.AddTransient<ClaimsPrincipal>(s => s.GetService<IHttpContextAccessor>().HttpContext.User);\r\n\r\nWhen I inspect any of those variables, the `Claims` object **does not** contain the same claims as the JWT that was sent during the request. \r\n\r\n**I have verified the claims do not match by checking the claims at [jwt.io][1].**\r\n\r\nTo be specific, I'll give a scenario:\r\n\r\nI sign into my app with email `user@example.com`. That email is then set as a claim (Sub) as `user.UserName` inside the `CreateUserClaims()` function in the `AuthController.cs`:\r\n\r\n    var newClaims = new[]\r\n\t\t\t{\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.Sub, user.UserName),\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.NameId, user.Id)\r\n\t\t\t}.Union(userClaims).ToList();\r\n\r\nThen some other properties are set and eventually the token is returned to the client. The client stores it in `localStorage`.\r\n\r\nThe client then makes a request, including the JWT in the header and adds it to the request options like this (Angular service):\r\n\r\n    private headers = new Headers(\r\n\t\t{\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'Bearer ' + this.authService.token\r\n\t\t});\r\n\tprivate options = new RequestOptions({ headers: this.headers });\r\n\r\nI check the Header in the Network tab and it contains the JWT - I check it on [jwt.io][1] and it looks good - has the proper email and other claims.\r\n\r\nNow I can logout of the app, sign in as a different user, get a new JWT, and make the request to that **same controller** shown above and the JWT will have the previous email, not the new one that I just signed in as. \r\n\r\nAnd I did go through the same checks, checking the JWT in the Header on the Network tab to ensure the claims contain the new email as the `sub` as well as the other claims. \r\n\r\nSo that means I was issued the proper JWT on the new sign in, but somehow the API is still looking at the old JWT.\r\n\r\nHow crazy is that?\r\n\r\nSomething else I have noticed is that even on that first login (pretend I just started the API with `dotnet run` and then I make my first request to the same controller shown above it will be missing the `nameid` claim. I can go check the JWT that was sent in the Header request and it **does have the `nameid` claim.** So, again, **the api will issue the proper JWT but when I send it back over HTTP in a request the API does not have the same JWT that I sent in the request.**\r\n\r\n**ONE MORE THING**\r\nI log the JWT in the console for simplicity. I went back and found the first one I started using today, at 9am. Its `jti` is the same as the one that is currently in the .net core API. It's now 4:45pm. I have 9 different JTWs in my console between those two times (9am and 4:45pm), all issued from the API. But the API seems to have kept the first one it created this morning - even after I have stopped and started the project numerous times.\r\n\r\n\r\nPlease help me understand what I am doing wrong. I must not be fully understanding how JWTs are handled.\r\n\r\n\r\n  [1]: http://jwt.io"},{"Id":"6776180290","Type":"IssuesEvent","CreatedAt":"2017-10-27T16:49:49","Actor":"gustyn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1488","RelatedDescription":"Opened issue \"Authentication Cookie not deleted when using HttpContext.SignOutAsync();\" (#1488) at aspnet/Identity","RelatedBody":"Whenever I call the said function, the cookies are never deleted.  I have to delete the cookies manually by calling the following:\r\n\r\n`await HttpContext.SignOutAsync();\r\nHttpContext.Response.Cookies.Delete(IdentityServerConstants.DefaultCookieAuthenticationScheme);\r\nHttpContext.Response.Cookies.Delete(IdentityServerConstants.DefaultCheckSessionCookieName);\r\nHttpContext.Response.Cookies.Delete(IdentityServerConstants.ExternalCookieAuthenticationScheme);\r\n`\r\nFrom everything I have read and based on the name, I should not have to do this.  Am I missing something?\r\n"},{"Id":"6774780348","Type":"IssuesEvent","CreatedAt":"2017-10-27T11:50:52","Actor":"derth","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1487","RelatedDescription":"Opened issue \"Changing required password length\" (#1487) at aspnet/Identity","RelatedBody":"\r\nI’m using the following code:\r\n\r\n`\r\nservices.AddIdentity<ApplicationUser, IdentityRole>(options =>\r\n{\r\n\t// Password settings\r\n\toptions.Password.RequiredLength = 8;\r\n\toptions.Password.RequireNonAlphanumeric = false;\r\n\toptions.Password.RequireUppercase = false;\r\n})\r\n.AddEntityFrameworkStores<ApplicationDbContext>()\r\n.AddDefaultTokenProviders();\r\n`\r\n\r\nWhen i go to register, and click a single letter for password, the validation scripts still warn me about the default required length, which is 6 characters, instead of the new one i set (8 characters).\r\nIf i submit the form, i get the correct warning from the server, for the 8 characters.\r\n"},{"Id":"6774340338","Type":"PullRequestEvent","CreatedAt":"2017-10-27T09:59:05","Actor":"maqduni","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1486","RelatedDescription":"Opened pull request \"Add alternative RavenDB provider by maqduni.\" (#1486) at aspnet/Identity","RelatedBody":"There already is a RavenDB Provider listed in the repository description, I'd like to list my package https://github.com/maqduni/AspNetCore.Identity.RavenDb there as well, it's also the most downloaded and complete RavenDB provider.\r\n\r\nRelated issue https://github.com/aspnet/Identity/issues/1467"},{"Id":"6772220065","Type":"PullRequestEvent","CreatedAt":"2017-10-26T21:52:17","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1484","RelatedDescription":"Merged pull request \"Alternative fix to GenerateChangePhoneNumber\" (#1484) at aspnet/Identity","RelatedBody":"For: https://github.com/aspnet/Identity/issues/1483"},{"Id":"6772217827","Type":"IssuesEvent","CreatedAt":"2017-10-26T21:51:45","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1483","RelatedDescription":"Closed issue \"Revert the fix introduced in https://github.com/aspnet/Identity/issues/1395\" (#1483) at aspnet/Identity","RelatedBody":"When @HaoK fixed https://github.com/aspnet/Identity/issues/1388, he decided to update the `GenerateChangePhoneNumberTokenAsync()`/`ValidateChangePhoneNumberTokenAsync()` methods to directly use the internal Rfc6238AuthenticationService class instead of using the provider configured in the options.\r\n\r\nUnfortunately this fix is bad and will break apps using a custom token provider (e.g not based on TOTP) for the \"change phone number tokens\".\r\n\r\nConsider reverting this change and fixing the bug at the root by changing this line to point to the phone provider (by default): https://github.com/aspnet/Identity/blob/f147951d92ff5b4413d7ffdd55dcc91dfcfdfdca/src/Microsoft.Extensions.Identity.Core/TokenOptions.cs#L63-L69\r\n\r\n"},{"Id":"6772187830","Type":"PullRequestEvent","CreatedAt":"2017-10-26T21:44:03","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1485","RelatedDescription":"Merged pull request \"Update fix to ChangePhoneNumber\" (#1485) at aspnet/Identity","RelatedBody":"- Added Quirk mode to control default provider\r\n- Fixed new regression\r\n- New tests (can use custom provider, quirk mode defaults)\r\n\r\nFixes: https://github.com/aspnet/Identity/issues/1483\r\n\r\n@ajcvickers @blowdart @Eilon "},{"Id":"6771827534","Type":"PullRequestEvent","CreatedAt":"2017-10-26T20:22:13","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1485","RelatedDescription":"Opened pull request \"Update fix to ChangePhoneNumber\" (#1485) at aspnet/Identity","RelatedBody":"- Added Quirk mode to control default provider\r\n- Fixed new regression\r\n- New tests (can use custom provider, quirk mode defaults)\r\n\r\nFixes: https://github.com/aspnet/Identity/issues/1483\r\n\r\n@ajcvickers @blowdart @Eilon "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6778213102","Type":"IssuesEvent","CreatedAt":"2017-10-28T07:32:53","Actor":"shravan2x","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2141","RelatedDescription":"Opened issue \"High memory usage on Ubuntu 16\" (#2141) at aspnet/KestrelHttpServer","RelatedBody":"_This is a cross post from https://github.com/aspnet/Home/issues/2052 since I did not receive a response there. I don't believe this is an MVC issue since it also occurs with static files. If this is not a Kestrel issue, feel free to close._\r\n\r\nI run a number of ASP .NET Core 1.1 servers on Ubuntu. This is the `htop` view of one of the processes:\r\n\r\n![image](https://user-images.githubusercontent.com/4096676/27004803-bad831ac-4dd5-11e7-8bc0-e54871eaf91f.png)\r\n\r\nThe process appears to be using 20G of VIRT. I understand that this is not actually allocated memory, but is the highest among all processes running on the entire system. This is view of a number of apps:\r\n\r\n![image](https://user-images.githubusercontent.com/4096676/27004820-0b96467e-4dd6-11e7-9d36-8e9d37e5f317.png)\r\n\r\nEvery one of the `20.xG` VIRTs is an ASP.NET Core app (and every other app in the 1000M range is `mono`). The actual ASP.NET server itself runs on Kestrel, is very simple and serves only static pages via MVC.\r\n\r\n1. Is there a reason for such a high `VIRT`?\r\n2. Why does an app that only serves static pages have 47M of _private_ memory? (I'm aware some other language like PHP or even plain HTML might be better suited for my use, but I use ASP since it is more customizable and fun to work with)\r\n\r\nPlease note that since this scenario lies on a production server, the version is 1.1. I apologize if it has already been resolved in another issue.\r\n\r\n**UPDATE**: This issue still persists on .NET Core 2.0 and ASP.NET Core 2.0."},{"Id":"6776764799","Type":"PullRequestEvent","CreatedAt":"2017-10-27T19:10:35","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2140","RelatedDescription":"Opened pull request \"Log exception after critical accept loop error\" (#2140) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6776580350","Type":"IssuesEvent","CreatedAt":"2017-10-27T18:25:46","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2139","RelatedDescription":"Opened issue \"Add KestrelServerOptions.ListenLocalhost\" (#2139) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6775216395","Type":"IssuesEvent","CreatedAt":"2017-10-27T13:33:18","Actor":"bradmarder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2138","RelatedDescription":"Opened issue \"Connection processing ending abnormally - Cursor is out of bounds\" (#2138) at aspnet/KestrelHttpServer","RelatedBody":"Using microsoft azure and Kestrel 2.1.0-preview1-27377\r\n\r\n```\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Connection processing ended abnormally.\r\nSystem.InvalidOperationException: Cursor is out of bounds\r\n   at System.IO.Pipelines.ReadCursor.ThrowOutOfBoundsException()\r\n   at System.IO.Pipelines.ReadableBuffer.Slice(ReadCursor start, ReadCursor end)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.ParseRequest(ReadableBuffer buffer, ReadCursor& consumed, ReadCursor& examined)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.<ParseRequestAsync>d__37.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__186.MoveNext()\r\ninfo: Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets[14]\r\n      Connection id \"0HL8SQGDSL981\" communication error.\r\nMicrosoft.AspNetCore.Protocols.ConnectionAbortedException: The connection was aborted\r\n```\r\n\r\nI've also been getting other \"random\" errors I can't make sense of.\r\n\r\n```\r\nnfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 POST http://127.0.0.1:6480/iisintegration  0\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 0.0661ms 202 \r\ninfo: Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets[14]\r\n      Connection id \"0HL8SJKHG7VHR\" communication error.\r\nMicrosoft.AspNetCore.Protocols.ConnectionAbortedException: The connection was aborted\r\nApplication is shutting down..\r\n```\r\n\r\n\r\nAnd this one about malformed headers... even though subsequent requests with the exact same headers work fine.\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.Server.Kestrel[17]\r\n      Connection id \"0HL8SJKHG7VE7\" bad request data: \"Malformed request: invalid headers.\"\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Malformed request: invalid headers.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1Connection.<ParseRequestAsync>d__37.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__186.MoveNext()\r\ninfo: Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets[14]\r\n      Connection id \"0HL8SJKHG7VE7\" communication error.\r\nMicrosoft.AspNetCore.Protocols.ConnectionAbortedException: The connection was aborted\r\n```"},{"Id":"6772708941","Type":"PullRequestEvent","CreatedAt":"2017-10-27T00:39:00","Actor":"natemcmaster","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2137","RelatedDescription":"Opened pull request \"Pin tool and package versions to make builds more repeatable\" (#2137) at aspnet/KestrelHttpServer","RelatedBody":"Part of https://github.com/aspnet/Universe/issues/575\r\n\r\nThis removes floating versions of dependencies. This includes the korebuild version and versions used by PackageReference's."},{"Id":"6771365224","Type":"PullRequestEvent","CreatedAt":"2017-10-26T18:40:53","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2136","RelatedDescription":"Merged pull request \"Pass setsockopt fd as int\" (#2136) at aspnet/KestrelHttpServer","RelatedBody":"Even on 64-bit, Unix file descriptors are 32-bit.\r\n\r\nCC @halter73 "},{"Id":"6768010132","Type":"PullRequestEvent","CreatedAt":"2017-10-26T07:07:21","Actor":"tmds","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2136","RelatedDescription":"Opened pull request \"Pass setsockopt fd as int\" (#2136) at aspnet/KestrelHttpServer","RelatedBody":"Even on 64-bit, Unix file descriptors are 32-bit.\r\n\r\nCC @halter73 "},{"Id":"6767639181","Type":"IssuesEvent","CreatedAt":"2017-10-26T04:50:16","Actor":"Daniel15","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2135","RelatedDescription":"Opened issue \"Error -14 EFAULT bad address in system call argument on Mono\" (#2135) at aspnet/KestrelHttpServer","RelatedBody":"I'm getting this after upgrading from ASP.NET Core 1.1 to 2.0:\r\n```\r\n      Connection id \"0HL8S5IDV5MOM\" request processing ended abnormally.\r\nSystem.IO.IOException: Error -14 EFAULT bad address in system call argument ---> Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -14 EFAULT bad address in system call argument\r\n   --- End of inner exception stack trace ---\r\n  at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed () [0x00000] in <338ee5ae130b4bb3a607872b31fe7657>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult (Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadResult& result) [0x00000] in <338ee5ae130b4bb3a607872b31fe7657>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult () [0x0002d] in <338ee5ae130b4bb3a607872b31fe7657>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult () [0x00000] in <338ee5ae130b4bb3a607872b31fe7657>:0\r\n  at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1+<ProcessRequestsAsync>d__2[TContext].MoveNext () [0x000df] in <c812b1c9c263455bb08762a12648ddc5>:0\r\n```\r\n\r\nI know that Mono isn't officially supported, but it was working fine with ASP.NET Core 1.1 😢 \r\n\r\nASP.NET Core 2.0 (latest versions of all packages)\r\nMono 5.4.0.201\r\nDebian 9 (testing)"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6777772589","Type":"PullRequestEvent","CreatedAt":"2017-10-28T00:54:10","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1746","RelatedDescription":"Opened pull request \"Skip building the VSIX if the Microsoft.VisualStudio.Component.VSSDK workload is not available\" (#1746) at aspnet/Razor","RelatedBody":"Uses the new \"toolsets\" section of korebuild.json to find a version of MSBuild in Visual Studio that has the required VSIX SDK.\r\n\r\nBehavior: this currently warns if a version of VS with this workload could not be found and skips building the VSIX. This could be made a fatal error. \r\n\r\ncc @jkotalik - you'll need something similar for ANCM."},{"Id":"6776314073","Type":"PullRequestEvent","CreatedAt":"2017-10-27T17:21:43","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1745","RelatedDescription":"Opened pull request \"Pin tool and package versions to make builds more repeatable\" (#1745) at aspnet/Razor","RelatedBody":"Part of https://github.com/aspnet/Universe/issues/575\r\n\r\nThis removes floating versions of dependencies. This includes the korebuild version and versions used by PackageReference's.\r\n\r\nDue to Razor's unique requirement for multiple versions of Roslyn packages, I've prefixed any of the 'dev' versions with VSIX_. These versions are also set here so our external dependency analysis doesn't fail in Universe. https://github.com/aspnet/Universe/blob/dev/build/dependencies.props#L50-L97\r\n\r\nOne more change: I moved a couple properties for the VS for Mac addin up to the version.props file. As much as possible, we're trying to make version.props the only file you need to manipulate to change the versions of build artifacts."},{"Id":"6771905023","Type":"IssuesEvent","CreatedAt":"2017-10-26T20:39:13","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1744","RelatedDescription":"Opened issue \"Add Tag Helper Project System\" (#1744) at aspnet/Razor","RelatedBody":"This item tracks us taking control of the Tag Helper discovery end-to-end in tooling"},{"Id":"6771886167","Type":"IssuesEvent","CreatedAt":"2017-10-26T20:34:59","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1708","RelatedDescription":"Closed issue \"can razor pages update part of the webpage\" (#1708) at aspnet/Razor","RelatedBody":"sorry, haven't been coding in asp.net for a long time. Recently started a new project and I'm now considering using asp.net core 2.0 with razor pages, which sames good for fast developing. But I'm confused about how could I make a complex web page to be only partial update, like using ajax. means I may only want to post a part of the web page bank to server, and make some update only in the part of the web page instead of refreshing the whole page. I wander if there is already a way to do this using razor pages in asp.net core 2.0."},{"Id":"6765799137","Type":"IssuesEvent","CreatedAt":"2017-10-25T19:09:59","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1743","RelatedDescription":"Opened issue \"Auto-completing a Razor directive with space results in two spaces being added.\" (#1743) at aspnet/Razor","RelatedBody":""},{"Id":"6765305921","Type":"PullRequestEvent","CreatedAt":"2017-10-25T17:28:02","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1736","RelatedDescription":"Merged pull request \"React to API feedback on VisualStudioRazorParser.\" (#1736) at aspnet/Razor","RelatedBody":"- Changed `ReparseAsync` to be `QueueReparse`. It's now async void to not give the misconception that it blocks until a reparse has been completed.\r\n- Removed `IContextChangedListener`. People can get the same effect of the interface by retrieving the document tracker interface via the `RazorEditorFactoryService` and then when its context changes getting the parser.\r\n- Exposed `TryGetParser` to aid in replacing `IContextChangedListener`.\r\n- Updated tests to not rely on `IContextChangedListener`."},{"Id":"6765142953","Type":"IssuesEvent","CreatedAt":"2017-10-25T16:53:31","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1733","RelatedDescription":"Closed issue \"Protect against NREs in DirectiveCompletionProvider\" (#1733) at aspnet/Razor","RelatedBody":"Today we attempt to locate the owner of a change and if its `null` we NRE. That NRE crashes VS.\r\n\r\nShould fix this for the 15.5 release and then port back to latest."},{"Id":"6765099115","Type":"PullRequestEvent","CreatedAt":"2017-10-25T16:44:35","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1734","RelatedDescription":"Merged pull request \"Make AtDirectiveCompletionPoint resilient to null owners.\" (#1734) at aspnet/Razor","RelatedBody":"- Added a test to verify the new owner == null case.\r\n\r\n#1733"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"},{"Id":"6760767057","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:11","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/490","RelatedDescription":"Closed issue \"Show external providers on the Register page\" (#490) at aspnet/Templates","RelatedBody":"The individual auth template has a login page and a register page. Login shows a password login and external providers. Register only shows a password login. Register should also show external providers, as this is where new users will go to sign-up.\n"},{"Id":"6760766431","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:02","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/492","RelatedDescription":"Closed issue \"Add tests to project templates\" (#492) at aspnet/Templates","RelatedBody":"Hi,\n\nTesting is unfortunately a part of most of our jobs. I don't know if it is already planned/done but in visual studio when I create a new ASP.NET MVC 6 (or is it Core 1 ? Not sure) there are no tests. This is particularly annoying for the template including user accounts. I spent a few hours writing tests for the included templates.\n\nI was wondering whether other people would be interested ?\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6762343502","Type":"IssuesEvent","CreatedAt":"2017-10-25T07:30:40","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Opened issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6780432155","Type":"IssuesEvent","CreatedAt":"2017-10-29T14:10:51","Actor":"smitpatel","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Closed issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi @javiercn, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6779929600","Type":"IssuesEvent","CreatedAt":"2017-10-29T07:24:18","Actor":"searus","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6777426880","Type":"IssuesEvent","CreatedAt":"2017-10-27T22:12:32","Actor":"javiercn","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/275","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications\" (#275) at aspnet/Announcements","RelatedBody":"# Improved end to end testing support for MVC applications\r\n\r\nIn this release we have created a new package Microsoft.AspNetCore.Mvc.Testing to help streamline\r\nend to end testing of MVC applications using TestServer.\r\n\r\nThis package takes care of some of the typical pitfalls users run into when trying to test MVC applications\r\nusing TestServer.\r\n* It copies the .deps file from your project into the test assembly bin folder.\r\n* It sets the content root the application's project root so that static files and views can be found.\r\n* It provides a class `WebApplicationTestFixture<TStartup>` that streamlines the bootstrapping of your app on\r\nTestServer.\r\n\r\n## Sample end to end in memory test using xUnit\r\n\r\n```csharp\r\nusing Xunit;\r\n\r\nnamespace MyApplication.FunctionalTests\r\n{\r\n    public class MyApplicationFunctionalTests : IClassFixture<WebApplicationTestFixture<Startup>>\r\n    {\r\n        public TempDataInSessionTest(WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n\r\n        public HttpClient Client { get; }\r\n\r\n        [Fact]\r\n        public async Task GetHomePage()\r\n        {\r\n            // Arrange & Act\r\n            var response = await Client.GetAsync(\"/\");\r\n\r\n            // Assert\r\n            Assert.Equal(HttpStatusCodes.OK, response.StatusCode);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Important notes\r\n\r\n### Shadow copying needs to be disabled\r\nFor end to end in-memory tests to work properly, shadow copying needs to be disabled on your test framework of choice, as it causes the tests to execute in a different folder than the output folder.\r\nFor instructions on how to do this on xUnit see https://xunit.github.io/docs/configuring-with-json.html.\r\n\r\n### Your app needs to have a CreateWebHostBuilderMethod on the Program class\r\nBy convention our ```WebApplicationTestFixture<TStartup>``` tries to find a method with the signature ```public static IWebHostBuilder CreateWebHostBuilder(string [] args)``` on the entry point class of the assembly where Startup is located. (Typically your Program class) If you don't have this method ```WebApplicationTestFixture<TStartup>``` won't be able to initialize your app in the same way it is done on a normal run. You can configure the WebHostBuilder yourself by overriding CreateWebHostBuilder on ```WebApplicationTestFixture<TStartup>```.\r\n\r\n### The test infrastructure needs to know the content root of the application under test\r\nTo set the content root for your app, ```WebApplicationTestFixture<TStartup>``` first locate your solution file ```(.sln)``` and then make a guess about where project might be. The Content Root of the application is defined by convention as ```<<SolutionFolder>>/<<ProjectAssemblyName>>```. For example, based on the folder structure defined below, the content root of the application is defined as ```c:\\work\\MyApp```. This is important because if not set correctly to the root folder of your application under test all views and static files will not be found.\r\n\r\n```\r\nc:/work/\r\n    MyApp.sln\r\n    MyApp/MyApp.csproj\r\n    MyApp.FunctionalTests/MyApp.FunctionalTests.csproj\r\n```\r\n\r\nThe process for determining the folder to use as the content root when running the tests is the following:\r\n* ```WebApplicationTestFixture<TStartup>``` starts on the bin folder of the test project, in the example above ```c:/work/MyApp.FunctionalTests/MyApp.FunctionalTests/bin/<<Configuration>>/<<Framework>>```\r\n* It navigates to the parent folder until it finds a ```.sln``` file.\r\n* It appends ```<<AssemblyName>>``` to the folder in which it found the ```.sln``` file and set that as the content root.\r\n\r\nIf you happen to be using a different convention for the layout of your projects, you can inherit from WebApplicationTestFixture and pass in the relative path from your solution to the application under test when calling the constructor. For example ```\"/src/MyApp\"```\r\n\r\n```csharp\r\npublic class MyAppTestFixture<TStartup> : WebApplicationTestFixture<TStartup> where TStartup : class\r\n{\r\n    public MyAppTestFixture(string solutionRelativePath)\r\n        : base(\"/src/MyApp\") { }\r\n}\r\n```"},{"Id":"6754805124","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:16:00","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/274","RelatedDescription":"Opened issue \"ASP.NET/EF Core 2.0.3 patch pre-release test feed\" (#274) at aspnet/Announcements","RelatedBody":"Hi, we now have a public test feed that you can use to try out the ASP.NET/EF Core 2.0.3 patch!\r\n\r\nYou can test this pre-release patch by adding the following feed to your app's or machine's NuGet.config file:\r\n* `https://dotnet.myget.org/F/aspnet-2-0-2-october2017-patch-public/api/v3/index.json`\r\n   * ![image](https://user-images.githubusercontent.com/202643/31913542-4757d2a0-b7fc-11e7-9bf7-7157bd18a6ca.png)\r\n   * (please ignore the *name* of the feed; it is incorrect 😦)\r\n\r\n## Update your project\r\n1. Open an existing .NET Core 2.0 project's CSPROJ file\r\n2. Update the version of the `Microsoft.AspNetCore.All` package from `2.0.0` to `2.0.3-*`\r\n3. Update the version of all the other `<PackageReference>` items from `2.0.0` to `2.0.1-*` (*Note: This is a different version than the `.All` package!*)\r\n4. Add the following element to the `<PropertyGroup>` at the top of the CSPROJ file:\r\n   * `<NoWarn>$(NOWARN);NU1605</NoWarn>`\r\n5. From a command line window (terminal), run `dotnet restore` to restore the pre-release patch packages into the project (or restore packages from your IDE, such as Visual Studio 2017)\r\n6. You should now be able to run your project with the pre-release patch packages\r\n\r\n## Additional resources\r\n* More info on updating NuGet packages is available here:\r\n   * https://docs.microsoft.com/en-us/nuget/consume-packages/reinstalling-and-updating-packages\r\n* The full list of fixes and changes made in this patch are available using this query:\r\n   * https://github.com/search?utf8=%E2%9C%93&q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.0.3&type=Issues\r\n* You can browse the list of updated packages on this gallery page:\r\n   * https://dotnet.myget.org/gallery/aspnet-2-0-2-october2017-patch-public\r\n\r\n## Feedback\r\nWe are looking for feedback on this patch. We'd like to know if you have any issues with this patch by updating your apps and libraries to the latest packages and seeing if it fixes the issues you've had, or if it introduces any new issues. If you have any issues or questions, please reply on the [discussion thread](XYZ) to let us know as soon as possible.\r\n\r\n## What's next\r\nWe will post an update when the patch is publicly available on [NuGet.org](https://nuget.org).\r\n\r\nThanks,\r\nEilon"},{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":58,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2017-10-30T05:30:08.6862792Z","RunDurationInMilliseconds":7311}