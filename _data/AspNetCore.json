{"Data":{"Blog":{"FeedItems":[{"Title":"Troubleshooting ASP.NET Core Performance Problems","PublishedOn":"2018-05-23T14:26:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos I recently had an opportunity to help a developer with an ASP.NET Core app that was functionally correct but slow when under a heavy user load. We found a few...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/23/asp-net-core-performance-improvements/","RawContent":null},{"Title":"Announcing ASP.NET Providers Connected Service Visual Studio Extension","PublishedOn":"2018-05-22T17:43:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Provider pattern was introduced in ASP.NET 2.0 and it gives the developers the flexibility of where to store the state of ASP.NET features (e.g. Session State, Membership, Output Cache etc.). In...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/22/announcing-asp-net-providers-connected-service-visual-studio-extension/","RawContent":null},{"Title":"A Penny Saved is a Ton of Serverless Compute Earned","PublishedOn":"2018-05-21T20:08:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Scott Guthrie recently shared one of my favorite anecdotes on his Azure Red Shirt Tour. A Microsoft customer regularly invokes 1 billion (yes, that’s with a “B”) Azure Functions per day. The customer...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/21/a-penny-saved-is-a-ton-of-serverless-compute-earned/","RawContent":null},{"Title":"Exploring Azure App Service – Web Apps and SQL Azure","PublishedOn":"2018-05-18T19:40:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is a good chance that your web app uses a database. In my previous post introducing Azure App Service, I showed some of the benefits of hosting apps in Azure App Service, and how easy it is to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/18/exploring-azure-app-service-web-apps-and-sql-azure/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7746773663","Type":"IssuesEvent","CreatedAt":"2018-05-29T23:16:10","Actor":"ObsidianMinor","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3173","RelatedDescription":"Opened issue \"Generic pipeline\" (#3173) at aspnet/Home","RelatedBody":"## Generic pipeline\r\n\r\nWe've decoupled the HTTP pipeline from the host with the generic host, but now we could consider decoupling the \"HTTP\" from the pipeline itself.\r\n\r\n### Introducing Microsoft.Extensions.ApplicationPipeline\r\n\r\nThe generic pipeline would allow consumers to easily create pipelines with custom contexts for non-HTTP workloads. For example, clients and non-HTTP servers such as TCP servers with custom message systems or language servers reading and writing to standard IO.\r\n\r\n#### ICommandSource\r\n\r\n```cs\r\npublic interface ICommandSource\r\n{\r\n    IFeatureCollection Features { get; }\r\n\r\n    Task StartAsync<TContext>(IApplication<TContext> application, CancellationToken cancellationToken);\r\n\r\n    Task StopAsync(CancellationToken cancellationToken);\r\n}\r\n```\r\n\r\nThe source of all data, and the first main component that libraries and applications implement to use the pipeline. Performs the same function as the `IServer` interface in ASP.NET Core. Represents a generic source of \"commands\", or data that needs to be processed by the application. It's started by running StartAsync with the specified `IApplication` and stopped with StopAsync. It also contains a feature collection for the pipeline builder, however since `IFeatureCollection` is attached to Microsoft.AspNetCore.Http.Features it might makes sense to move it to another extension lib such as Microsoft.Extensions.Primitives.\r\n\r\n#### IApplication\r\n\r\n```cs\r\npublic interface IApplication<TContext>\r\n{\r\n    TContext CreateContext(IFeatureCollection features);\r\n\r\n    void DisposeContext(TContext context, Exception exception);\r\n\r\n    Task ProcessAsync(TContext context);\r\n}\r\n```\r\n\r\nCreates contexts for processing data through a feature collection and processes it, after which the context is disposed. The second main component that libraries and applications implement to use the pipeline. Performs the same function as the `IHttpApplication<TContext>` interface in ASP.NET Core.\r\n\r\n#### IApplicationBuilder\r\n\r\n```cs\r\npublic delegate Task ApplicationDelegate<TContext>(TContext context);\r\n\r\npublic interface IApplicationBuilder<TContext>\r\n{\r\n    IServiceProvider ApplicationServices { get; set; }\r\n\r\n    IDictionary<string, object> Properties { get; }\r\n\r\n    IFeatureCollection SourceFeatures { get; } // features of the command source\r\n\r\n    ApplicationDelegate<TContext> Build();\r\n\r\n    IApplicationBuilder<TContext> New();\r\n\r\n    IApplicationBuilder<TContext> Use(Func<ApplicationDelegate<TContext>, ApplicationDelegate<TContext>> middleware);\r\n}\r\n```\r\n\r\n`IApplicationBuilder` is the `IApplicationBuilder` from ASP.NET Core, but generic as to allow custom contexts. To extend it, extension methods should use the proper context being used such as `HttpContext`.\r\n\r\nFor example, UseExceptionHandler would be modified to look like:\r\n\r\n```cs\r\npublic static IApplicationBuilder<HttpContext> UseExceptionHandler(this IApplicationBuilder<HttpContext> app);\r\n```\r\n\r\n#### Open questions\r\n\r\n * The naming of `IApplicationBuilder` is a bit confusing. It's kept as `IApplicationBuilder` in this proposal because that's the original name of the feature before, however with the `IApplication` interface being introduced as a replacement for `IHttpApplication`, it might be a bit confusing since `IApplicationBuilder` doesn't build an `IApplication`. Should it be renamed to something else like `IApplicationPipelineBuilder`?\r\n * Could we provide classes that run our command source and application pipeline for the consumer or must we leave it up to the consumer to implement every time?"},{"Id":"7746478507","Type":"IssuesEvent","CreatedAt":"2018-05-29T21:52:34","Actor":"ryanbrandenburg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2643","RelatedDescription":"Closed issue \"ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer fails for dynamic assemblies\" (#2643) at aspnet/Home","RelatedBody":"_From @pranavkm on Monday, March 20, 2017 9:54:22 AM_\r\n\r\nMoved from https://github.com/aspnet/Mvc/issues/5994\r\n\r\n\r\nWhen use `<div asp-validation-summary=\"All\"></div>` and no validation error exists it throws exception below.\r\n\r\nWhen I use `<div asp-validation-summary=\"ModelOnly\"></div> `or some validation errors occurs it works, but I in this case I do not see all errors in summary. \r\n\r\n```\r\nSystem.NotSupportedException: The invoked member is not supported in a dynamic assembly.\r\n   at System.Reflection.Emit.InternalAssemblyBuilder.GetManifestResourceNames()\r\n   at System.Resources.ManifestBasedResourceGroveler.HasNeutralResources(CultureInfo culture, String defaultResName)\r\n   at System.Resources.ResourceManager.CommonAssemblyInit()\r\n   at System.Resources.ResourceManager..ctor(String baseName, Assembly assembly)\r\n   at Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer(Assembly assembly, String baseName)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.DataAnnotationsMetadataProvider.CreateDisplayMetadata(DisplayMetadataProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.DefaultCompositeMetadataDetailsProvider.CreateDisplayMetadata(DisplayMetadataProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.get_DisplayMetadata()\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.get_Order()\r\n   at System.Linq.EnumerableSorter`2.ComputeKeys(TElement[] elements, Int32 count)\r\n   at System.Linq.EnumerableSorter`1.Sort(TElement[] elements, Int32 count)\r\n   at System.Linq.OrderedEnumerable`1.<GetEnumerator>d__1.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.get_Properties()\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidationHelpers.Visit(ModelStateDictionary dictionary, ModelStateEntry modelStateEntry, ModelMetadata metadata, List`1 orderedModelStateEntries)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidationHelpers.GetModelStateList(ViewDataDictionary viewData, Boolean excludePropertyErrors)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateValidationSummary(ViewContext viewContext, Boolean excludePropertyErrors, String message, String headerTag, Object htmlAttributes)\r\n   at Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.Process(TagHelperContext context, TagHelperOutput output)\r\n   at Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(TagHelperContext context, TagHelperOutput output)\r\n   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner.<RunAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at AspNetCore._Views_SAPBetriebsmittelanforderung_Edit_cshtml.<ExecuteAsync>d__48.MoveNext() in /Views/SAPBetriebsmittelanforderung/Edit.cshtml:line 24\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.<RenderPageAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.<RenderAsync>d__13.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.<ExecuteAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.<ExecuteResultAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeResultAsync>d__30.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextResultFilterAsync>d__28.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Web.BrowserLink.Runtime.BrowserLinkMiddleware.<ExecuteWithFilter>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n```\r\n\r\n_Copied from original issue: aspnet/Localization#345_"},{"Id":"7746065545","Type":"IssuesEvent","CreatedAt":"2018-05-29T20:25:50","Actor":"scottsauber","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3172","RelatedDescription":"Opened issue \"Using Microsoft.Extensions.DependencyInjection with ASP.NET 4.x Scoped Services Are Singletons\" (#3172) at aspnet/Home","RelatedBody":"Using the code found on this blog post: http://scottdorman.github.io/2016/03/17/integrating-asp.net-core-dependency-injection-in-mvc-4/ results in Scoped Services that are really Singletons, because CreateScope() is never called.\r\n\r\nAre there any examples of using Microsoft.Extensions.DependencyInjection (M.E.DI) with ASP.NET 4?\r\n\r\nThe reason why I want to use M.E.DI instead of SimpleInjector, Autofac, Ninject, etc.  is because we have a customer-facing app that is built on ASP.NET Core and uses Identity.  Then we have an existing \"back-office\" app that already does a bunch of stuff, one of them being manage users for the customer-facing app.\r\n\r\nWe wanted to use M.E.DI so we can share the configuration of things like `UserManager` between the two applications easily.  Also handwiring up all the dependencies that ASP.NET Core Identity has is non-trivial, and want to get the free updates in case new services are required in future updates that `services.AddIdentity` takes care of.\r\n\r\nThanks!"},{"Id":"7744192098","Type":"IssuesEvent","CreatedAt":"2018-05-29T14:47:38","Actor":"JulijaRamoskiene","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3171","RelatedDescription":"Opened issue \"Add a possibility to terminate request when CORS headers are invalid\" (#3171) at aspnet/Home","RelatedBody":"Update CORS middleware to support configuration to terminate request when CORS are not allowed for given request, e.g. Origin is not allowed. \r\nIt could look something like this:\r\napp.UseCors(builder => builder\r\n                .WithOrigin(\"http://some.allowed.origin\")\r\n                .AllowAnyHeader()\r\n                .AllowAnyOrigin()\r\n              **.TerminateIfNotAllowed ()**);\r\n\r\nCurrently, request will be passed to next middleware even if origin is not allowed. "},{"Id":"7742534362","Type":"IssuesEvent","CreatedAt":"2018-05-29T09:48:38","Actor":"InnovistaLucia","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3170","RelatedDescription":"Opened issue \"Websocket through proxy not working (2.1.0 rc 1 and .NET Core 2.1)\" (#3170) at aspnet/Home","RelatedBody":"We are using self-hosted services with recent .NET Core 2.1 RC and the corresponding aspnetcore components. These microservices should run on several internal ports and the only public access should be via a proxy software (former node.js now .NET Core 2.1 also). We try to use the Microsoft.AspNetCore.Proxy Component [https://github.com/aspnet/Proxy](url) V 0.2.\r\nThe proxy should also forward websocket requests but the websocket connection Handshake fails when using the proxy.\r\n\r\n`public async Task InitWSAsync(HttpContext context, WebSocket pSocket)\r\n{\r\n                var buffer = new byte[1024 * 8];\r\n                WebSocketReceiveResult result = await pSocket.ReceiveAsync(new ArraySegment<byte>(buffer), CancellationToken.None);\r\n                string lMsgString = System.Text.Encoding.UTF8.GetString(buffer, 0, result.Count);...`\r\n\r\nThe code stops on the ReceiveAsync line and does not continue properly. Firefox shows a handshake failed after a timeout.\r\nWhen accessing the microservice directly the runtime continues and receives a message String correctly.\r\n\r\nI've attached a Test-Project with a simple Proxy App and a Service App where you can find the whole configuration of the webhost, kestrel etc..\r\nTo test the faulty Proxy access run both projects and open \"http://localhost:8080/websocket.html\" in the browser. To test the successfull direct Service access run the Service App only and open \"http://localhost:1800/websocket2.html\".\r\n[NETCoreProxyTest.zip](https://github.com/aspnet/Home/files/2047624/NETCoreProxyTest.zip)\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7747466827","Type":"PullRequestEvent","CreatedAt":"2018-05-30T03:29:48","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2397","RelatedDescription":"Merged pull request \"Remove scanning connections log messages\" (#2397) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2155"},{"Id":"7747466819","Type":"IssuesEvent","CreatedAt":"2018-05-30T03:29:47","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2155","RelatedDescription":"Closed issue \"Remove log for scanning connections\" (#2155) at aspnet/SignalR","RelatedBody":"The scanning connections log is just spam and should be removed..."},{"Id":"7746407161","Type":"IssuesEvent","CreatedAt":"2018-05-29T21:36:05","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2403","RelatedDescription":"Opened issue \"Automatically publish test applications on each commit\" (#2403) at aspnet/SignalR","RelatedBody":"We have the scripts, but now we want to deploy the test applications to Azure on each commit."},{"Id":"7746405187","Type":"IssuesEvent","CreatedAt":"2018-05-29T21:35:38","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2303","RelatedDescription":"Closed issue \"Add scripts to automatically deploy test applications\" (#2303) at aspnet/SignalR","RelatedBody":"We should automatically deploy test applications on each commit. We can do this as part of our main build, or in a separate build triggered on each commit. This will help with things like testing Xamarin and multiple browsers."},{"Id":"7745948487","Type":"IssuesEvent","CreatedAt":"2018-05-29T20:01:56","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2288","RelatedDescription":"Closed issue \"Move C++ library source out of aspnet/SignalR\" (#2288) at aspnet/SignalR","RelatedBody":"Is there a way to link to all the source code from libraries that the C++ client uses?\r\n\r\n![image](https://user-images.githubusercontent.com/303201/40144498-fd0366b6-59b2-11e8-8a95-b778c2920eee.png)\r\n"},{"Id":"7745893875","Type":"IssuesEvent","CreatedAt":"2018-05-29T19:50:49","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2348","RelatedDescription":"Closed issue \"Add sampling latency to benchmark runs\" (#2348) at aspnet/SignalR","RelatedBody":"And enable it by default.\r\n\r\nBasically every 1000 requests store the latency measure so we have a rough idea of the latency percentiles for all runs."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7747619170","Type":"PullRequestEvent","CreatedAt":"2018-05-30T04:31:20","Actor":"ardalis","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7838","RelatedDescription":"Opened pull request \"Avoid null Server property\" (#7838) at aspnet/Mvc","RelatedBody":"Avoid having to call CreateClient to get a Server. It’s confusing and not intuitive. If something has to be called in order for Server to be initialized, throw when this isn’t done as expected by the factory."},{"Id":"7747127312","Type":"IssuesEvent","CreatedAt":"2018-05-30T01:25:05","Actor":"ardalis","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7837","RelatedDescription":"Opened issue \"How to Seed WebHost Data When Using WebApplicationFactory<Startup> ?\" (#7837) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug? Lack of docs if it's already available.\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\nI can seed data using WebHostBuilder using code like this:\r\nhttps://github.com/dotnet-architecture/eShopOnWeb/blob/netcore2.1/src/Web/Program.cs#L16-L39\r\n\r\nI'd like to be able to seed data before my functional tests. I'm using the new `WebApplicationFactory<T>` but am not seeing a simple way to hook into this.\r\n\r\n#### Description of the problem:\r\n\r\nI can configure the `WebHostBuilder` using code like this:\r\n\r\n```\r\n    public class CatalogControllerIndex : IClassFixture<WebApplicationFactory<Startup>>\r\n    {\r\n        public CatalogControllerIndex(WebApplicationFactory<Startup> fixture)\r\n        {\r\n            var factory = fixture.Factories.FirstOrDefault() ?? fixture.WithWebHostBuilder(ConfigureWebHostBuilder);\r\n            Client = factory.CreateClient();\r\n        }\r\n\r\n        private static void ConfigureWebHostBuilder(IWebHostBuilder builder) =>\r\n            builder.UseEnvironment(\"Testing\");\r\n\r\n        public HttpClient Client { get; }\r\n...\r\n```\r\n\r\nHowever, I don't see how I can get to an actual instance of the built host, so that I can get to its dbContext, so that I can use it to add test data. Should I just try and do it using something like `builder.Configure()` ?\r\n\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n2.1\r\n\r\n"},{"Id":"7746594573","Type":"IssuesEvent","CreatedAt":"2018-05-29T22:22:02","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7793","RelatedDescription":"Closed issue \"Port https://github.com/aspnet/Mvc/issues/7782 to 2.1.1\" (#7793) at aspnet/Mvc","RelatedBody":"https://github.com/aspnet/Mvc/issues/7782 was approved for the first 2.1 patch release. This item tracks porting the change"},{"Id":"7746405593","Type":"PullRequestEvent","CreatedAt":"2018-05-29T21:35:44","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7834","RelatedDescription":"Merged pull request \"Fix ActionMethodExecutor incorrectly setting DeclaredType on ObjectRe…\" (#7834) at aspnet/Mvc","RelatedBody":"…sult\r\n\r\nFixes #7782"},{"Id":"7745848316","Type":"IssuesEvent","CreatedAt":"2018-05-29T19:41:26","Actor":"rjamesnw","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7836","RelatedDescription":"Opened issue \"ViewResultExecutor changed behavior\" (#7836) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nNot sure.\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\nCreate a new type derived from `ViewResultExecutor`.  i.e.:\r\n```\r\npublic class TestViewResultExecutor : ViewResultExecutor\r\n{\r\n    public override async Task ExecuteAsync(} \r\n    {  // <-- put breakpoint here\r\n            var viewPage = (view as RazorView)?.RazorPage as IViewPageRenderEvents;\r\n\r\n            viewPage?.OnBeforeRenderView(renderContext); // EVENT ON CUSTOM VIEW\r\n\r\n            try\r\n            {\r\n                await base.ExecuteAsync(actionContext, view, viewResult);\r\n            }\r\n            catch (Exception ex) when (actionContext.HttpContext.Response.Body.CanWrite)\r\n            {\r\n                var result = viewPage?.OnRenderException(renderContext, ex); // EVENT ON CUSTOM VIEW\r\n                if (result == null) throw ex;\r\n                result.WriteTo(actionContext.HttpContext.Response.Body);\r\n            }\r\n\r\n            if (renderContext?.HasFilter == true)\r\n                renderContext.ApplyOutputFilter(); // (CUSTOM POST FILTERIG)\r\n\r\n            viewPage?.OnAfterRenderView(renderContext); // EVENT ON CUSTOM VIEW\r\n    }\r\n}\r\n```\r\n\r\n#### Description of the problem:\r\nI have similar code to the above that is now broken.  It used to be that the breakpoint was hit for EVERY view (INCLUDING `_layout.cshtml).  This is no longer the case.  I don't see any notes that this behaviour was a breaking change.  I use this to detected nested page renders, which allows be to build a stack (since you guys didn't bother to port over the `System.Web.WebPages.TemplateStack` idea).  If this is not a bug then please suggest another way to detect nested pages.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: 2.0.4\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n"},{"Id":"7745754604","Type":"IssuesEvent","CreatedAt":"2018-05-29T19:22:25","Actor":"Rudithus","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7829","RelatedDescription":"Closed issue \"Custom RouteConstraints are not resolved through IoC\" (#7829) at aspnet/Mvc","RelatedBody":"Given a custom RouteConstraint with dependencies, such as\r\n\r\n      \r\n\r\n        private readonly IPermanantCache<City> _cityCache;\r\n        public CityRouteConstraint(IRepository<City, int> cityCache) : IRouteConstraint\r\n        {\r\n            _cityCache= cityCache;\r\n        }\r\n\r\n        public bool Match(HttpContext httpContext,\r\n            IRouter route,\r\n            string routeKey,\r\n            RouteValueDictionary values,\r\n            RouteDirection routeDirection)\r\n        {\r\n          //check if the city is really a city using _cityCache\r\n            return false;\r\n        }`\r\n\r\nI would expect after registering this route constraint like below\r\n\r\n`            services.Configure<RouteOptions>(\r\n                options =>\r\n                {\r\n                    options.ConstraintMap\r\n                        .Add(\"city\", typeof(CityRouteConstraint));\r\n                });`\r\nthat the route constraint would be newed up using the services registered to IServiceCollection. However I'm getting a \"No parameterless constructor found\" error.\r\n\r\nIs there something I'm missing here? Is there something planned for route constraints in the future releases? Or do I need to manually new up the Route Constraint while registering it?\r\n\r\nThanks."},{"Id":"7745698674","Type":"PullRequestEvent","CreatedAt":"2018-05-29T19:11:01","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7835","RelatedDescription":"Merged pull request \"Unskip skipped tests\" (#7835) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7746244821","Type":"IssuesEvent","CreatedAt":"2018-05-29T21:00:48","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1779","RelatedDescription":"Closed issue \"SignInManager: XML Doc wrong description of parameter\" (#1779) at aspnet/Identity","RelatedBody":"Just stumbled across this\r\n\r\n    /// <param name=\"logger\">The logger used to log messages, warnings and errors.</param>\r\n    /// <param name=\"schemes\">The logger used to log messages, warnings and errors.</param>\r\nin\r\nhttps://github.com/aspnet/Identity/blob/15a82284ce52dc8932c49f3246763f3ea05a3568/src/Microsoft.AspNetCore.Identity/SignInManager.cs#L33\r\n\r\nThe description for schemes is wrong."},{"Id":"7746209731","Type":"PullRequestEvent","CreatedAt":"2018-05-29T20:53:59","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1801","RelatedDescription":"Merged pull request \"Add additional test assertions\" (#1801) at aspnet/Identity","RelatedBody":""},{"Id":"7746029525","Type":"IssuesEvent","CreatedAt":"2018-05-29T20:18:22","Actor":"krijnm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1806","RelatedDescription":"Opened issue \"FindByIdAsync vs FindByNameAsync\" (#1806) at aspnet/Identity","RelatedBody":"I have noticed a difference in implementation between FindByIdAsync and FindByNameAsync.\r\n\r\nFindByIdAsync executes UsersSet.FindAsync(new object[] { id },.. which will attach and track the user, if found. FindByNameAsync uses the DbSet IQueryable method Users.FirstOrDefaultAsync(u => u.NormalizedUserName == normalizedUserName, .. which does not track the user.\r\n\r\nThe flow UserManager => FindById + Update could  result in a crash -cannot be tracked because another instance with the same key value for {'ApplicationUserId'} is already being tracked ...\r\n\r\nThis is because the UserManager.UpdateAsync executes Context.Attach(user) without testing if the user is already present in the local storage: this.UsersSet.Local.Contains(user)"},{"Id":"7736171459","Type":"PullRequestEvent","CreatedAt":"2018-05-27T23:26:20","Actor":"hikalkan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1805","RelatedDescription":"Opened pull request \"Allow to access internal methods of SignInManager from a derived class\" (#1805) at aspnet/Identity","RelatedBody":"For a multi-tenant application, I need to override these methods."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7747002274","Type":"PullRequestEvent","CreatedAt":"2018-05-30T00:36:37","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2623","RelatedDescription":"Opened pull request \"Provide clearer exception message for breaking change\" (#2623) at aspnet/KestrelHttpServer","RelatedBody":"- In 2.1, the default transport (Sockets) can no longer bind to certain\r\n  endpoint types (Unix domain sockets and open socket handles).\r\n- The new message recommends manually selecting the libuv transport\r\n  to work around this issue."},{"Id":"7746951285","Type":"IssuesEvent","CreatedAt":"2018-05-30T00:16:44","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2054","RelatedDescription":"Closed issue \"Add IConnectionLifetimeFeature to Microsoft.AspNetCore.Connections.Abstractions\" (#2054) at aspnet/KestrelHttpServer","RelatedBody":"```C#\r\npublic interface IConnectionLifetimeFeature\r\n{\r\n    CancellationToken ConnectionClosed { get; }\r\n    void Abort();\r\n}\r\n```\r\n\r\nThese should also be exposed on `ConnectionContext`\r\n\r\nRelated to: #1980 "},{"Id":"7746947650","Type":"IssuesEvent","CreatedAt":"2018-05-30T00:15:19","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2605","RelatedDescription":"Closed issue \"SSL error after long time running\" (#2605) at aspnet/KestrelHttpServer","RelatedBody":"I'm currently using Let's Encrypt as SSL provider on my AWS EC2 server. I found that after a few hours or days, the server starts to throwing the following exception.\r\n\r\n    fail: Microsoft.AspNetCore.Server.Kestrel[0]\r\n          Uncaught exception from the OnConnectionAsync method of an IConnectionAdapter.\r\n    System.Security.Authentication.AuthenticationException: Authentication failed, see inner exception. ---> Interop+OpenSsl+SslException: SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL. ---> Interop+Crypto+OpenSslCryptographicException: error:140760FC:SSL routines:SSL23_GET_CLIENT_HELLO:unknown protocol\r\n       --- End of inner exception stack trace ---\r\n       at Interop.OpenSsl.DoSslHandshake(SafeSslHandle context, Byte[] recvBuf, Int32 recvOffset, Int32 recvCount, Byte[]& sendBuf, Int32& sendCount)\r\n       at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions)\r\n       --- End of inner exception stack trace ---\r\n       at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n       at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n       at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n       at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n       at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n       at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Net.Security.SslState.ThrowIfExceptional()\r\n       at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n       at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n       at System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)\r\n       at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__51_1(IAsyncResult iar)\r\n       at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter.InnerOnConnectionAsync(ConnectionAdapterContext context)\r\n       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection.ApplyConnectionAdaptersAsync()\r\n\r\nHow do I deal with this situation?\r\n\r\nEnvironment: microsoft/dotnet:2.1.0-rc1-aspnetcore-runtime-stretch-slim (docker)"},{"Id":"7746940520","Type":"PullRequestEvent","CreatedAt":"2018-05-30T00:12:37","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2622","RelatedDescription":"Opened pull request \"Add Memory<byte> overloads to HttpUpgradeStream\" (#2622) at aspnet/KestrelHttpServer","RelatedBody":"#2620"},{"Id":"7746807476","Type":"PullRequestEvent","CreatedAt":"2018-05-29T23:27:17","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2614","RelatedDescription":"Merged pull request \"[2.1.1] Lower severity of AuthenticationException logs from SslStream handshake\" (#2614) at aspnet/KestrelHttpServer","RelatedBody":"#2605 \r\n\r\n@bartonjs @stephentoub "},{"Id":"7746747947","Type":"PullRequestEvent","CreatedAt":"2018-05-29T23:07:42","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2618","RelatedDescription":"Merged pull request \"[2.1.1] Use correct TaskCompletionSource ctor\" (#2618) at aspnet/KestrelHttpServer","RelatedBody":"These are test only changes. It's the combination of the following PRs backported for release/2.1:\r\n\r\n- https://github.com/aspnet/KestrelHttpServer/pull/2531\r\n- https://github.com/aspnet/KestrelHttpServer/pull/2567\r\n- Parts of https://github.com/aspnet/KestrelHttpServer/pull/2526\r\n- Parts of https://github.com/aspnet/KestrelHttpServer/pull/2547"},{"Id":"7746582225","Type":"IssuesEvent","CreatedAt":"2018-05-29T22:18:47","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2615","RelatedDescription":"Closed issue \"Connection id \"0HLE3SSIK0ULN\", Request id \"0HLE3SSIK0ULN:00000004\": An unhandled exception was thrown by the application. Error -4077 ECONNRESET connection reset by peer\" (#2615) at aspnet/KestrelHttpServer","RelatedBody":"Hi, we are hosting an asp.net core application using an Azure app service. From time to time we're getting the following exception:\r\n\r\n\r\n`CategoryName: Microsoft.AspNetCore.Server.Kestrel`\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed (Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult (Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult (Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody+<ReadAsync>d__22.MoveNext (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream+<ReadAsyncInternal>d__21.MoveNext (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.WebUtilities.BufferedReadStream+<EnsureBufferedAsync>d__37.MoveNext (Microsoft.AspNetCore.WebUtilities, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.WebUtilities.MultipartReaderStream+<ReadAsync>d__36.MoveNext (Microsoft.AspNetCore.WebUtilities, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.WebUtilities.FileBufferingReadStream+<ReadAsync>d__35.MoveNext (Microsoft.AspNetCore.WebUtilities, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions+<DrainAsync>d__3.MoveNext (Microsoft.AspNetCore.WebUtilities, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature+<InnerReadFormAsync>d__18.MoveNext (Microsoft.AspNetCore.Http, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProviderFactory+<AddValueProviderAsync>d__1.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider+<CreateAsync>d__3.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider+<CreateAsync>d__2.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider+<>c__DisplayClass0_0+<<CreateBinderDelegate>g__Bind|0>d.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeInnerFilterAsync>d__14.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext (Microsoft.AspNetCore.Mvc.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext (Microsoft.AspNetCore.Routing, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware+<Invoke>d__7.MoveNext (Microsoft.AspNetCore.Cors, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at SaasKit.Multitenancy.Internal.TenantResolutionMiddleware`1+<Invoke>d__3.MoveNext (SaasKit.Multitenancy, Version=1.1.4.0, Culture=neutral, PublicKeyToken=null)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware+<Invoke>d__11.MoveNext (Microsoft.AspNetCore.Server.IISIntegration, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware+<Invoke>d__3.MoveNext (Microsoft.AspNetCore.Hosting, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1+<ProcessRequestsAsync>d__2.MoveNext (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\nInner exception Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException handled at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed:\r\n```\r\n\r\nIs this a known issue and how do we solve it?\r\n\r\nRegards,\r\nRobin"},{"Id":"7746552618","Type":"IssuesEvent","CreatedAt":"2018-05-29T22:11:09","Actor":"shirhatti","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2583","RelatedDescription":"Closed issue \"Not responding - UvException: Error -107 ENOTCONN socket is not connected\" (#2583) at aspnet/KestrelHttpServer","RelatedBody":"Hi, Kestrel http server behind of nginx (centOS), sometimes randomly hanging not responding.\r\n\r\nThis time a got this error message ;\r\n\r\n```\r\nfail: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv[0]\r\nMay 17 05:36:39 myserver[11532]: Listener.OnConnection\r\nMay 17 05:36:39 myserver[11532]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -107 ENOTCONN socket is not connected\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.tcp_getpeername(UvTcpHandle handle, SockAddr& addr, Int32& namelen)\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.GetPeerIPEndPoint()\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvConnection..ctor(ListenerContext context, UvStreamHandle socket)\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.DispatchConnection(UvStreamHandle socket)\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.OnConnection(UvStreamHandle listenSocket, Int32 status)\r\nMay 17 05:36:39 myserver[11532]: fail: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv[0]\r\nMay 17 05:36:39 myserver[11532]: Listener.OnConnection\r\nMay 17 05:36:39 myserver[11532]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -107 ENOTCONN socket is not connected\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.tcp_getpeername(UvTcpHandle handle, SockAddr& addr, Int32& namelen)\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.GetPeerIPEndPoint()\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvConnection..ctor(ListenerContext context, UvStreamHandle socket)\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.DispatchConnection(UvStreamHandle socket)\r\nMay 17 05:36:39 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.OnConnection(UvStreamHandle listenSocket, Int32 status)\r\nMay 17 05:36:46 myserver[11532]: info: Microsoft.AspNetCore.Server.Kestrel[17]\r\n```\r\n```\r\nMay 17 05:36:46 myserver[11532]: Connection id \"0HLDRI6731JP6\" bad request data: \"Invalid request line: '\\x0D\\x0A'\"\r\nMay 17 05:36:46 myserver[11532]: Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Invalid request line: '\\x0D\\x0A'\r\nMay 17 05:36:46 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.RejectRequestLine(Byte* requestLine, Int32 length)\r\nMay 17 05:36:46 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethod(Byte* data, Int32 length, Int32& methodLength)\r\nMay 17 05:36:46 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, Byte* data, Int32 length)\r\nMay 17 05:36:46 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine(TRequestHandler handler, ReadableBuffer buffer, ReadCursor& consumed, ReadCursor& examined)\r\nMay 17 05:36:46 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.TakeStartLine(ReadableBuffer buffer, ReadCursor& consumed, ReadCursor& examined)\r\nMay 17 05:36:46 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.ParseRequest(ReadableBuffer buffer, ReadCursor& consumed, ReadCursor& examined)\r\nMay 17 05:36:46 myserver[11532]: at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()\r\nMay 17 05:36:46 myserver[11532]: info: Microsoft.AspNetCore.Server.Kestrel[17]\r\n```"},{"Id":"7746539506","Type":"IssuesEvent","CreatedAt":"2018-05-29T22:07:42","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2571","RelatedDescription":"Closed issue \"Support unix socket endpoint in ASPNETCORE_URLS\" (#2571) at aspnet/KestrelHttpServer","RelatedBody":"As far as I can see, the ASPNETCORE_URLS environment variable only supports `http`-type endpoints.\r\n\r\nOur developers are using Windows for local dev/debug, but we deploy to Linux. We'd like to be able to specify dynamically wether to use a http endpoint, a unix socket, or both. It looks like there's a bunch of code (wiring up `ListenUnixSocket`) that needs to be done in order for getting Kestrel to listen on Unix sockets.\r\nThe problem with this is that with the current option we have to do a bunch of if/then statement in order to dynamically build the correct listeners - IMHO it should simply be an environment variable or a list of appsettings.json settings. The \"magical\" `ASPNETCORE_URLS` should allow a semi-coloned list of listen endpoints and handle both http-type and socket-type endpoints."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7747127234","Type":"PullRequestEvent","CreatedAt":"2018-05-30T01:25:03","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2377","RelatedDescription":"Opened pull request \"Add Razor document tracking to FallbackRazorProjectHost.\" (#2377) at aspnet/Razor","RelatedBody":"- VisualStudio defaults to adding a `<none>` link item when right click -> add existing item for Razor files; therefore, this also includes the knowledge of the \"None\" item group when finding Razor files.\r\n- Added unit and functional tests to verify the new `FallbackRazorProjectHost` behavior.\r\n- Added new schema items to represent the `Content` and `None` item type information (pulled from the project system repo).\r\n\r\n#2373"},{"Id":"7746592585","Type":"IssuesEvent","CreatedAt":"2018-05-29T22:21:32","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2369","RelatedDescription":"Closed issue \"Port https://github.com/aspnet/Razor/issues/2363 to 2.1.1\" (#2369) at aspnet/Razor","RelatedBody":"Issue: https://github.com/aspnet/Razor/issues/2363\r\n\r\nPR: https://github.com/aspnet/Razor/pull/2368"},{"Id":"7746575189","Type":"PullRequestEvent","CreatedAt":"2018-05-29T22:17:03","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2375","RelatedDescription":"Merged pull request \"Allow publish to work when BuildProjectReferences=false\" (#2375) at aspnet/Razor","RelatedBody":"Fixes #2363"},{"Id":"7746036869","Type":"PullRequestEvent","CreatedAt":"2018-05-29T20:19:56","Actor":"AmadeusW","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2376","RelatedDescription":"Opened pull request \"Updates the Editor Nuget packages\" (#2376) at aspnet/Razor","RelatedBody":""},{"Id":"7745945399","Type":"PullRequestEvent","CreatedAt":"2018-05-29T20:01:17","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2375","RelatedDescription":"Opened pull request \"Allow publish to work when BuildProjectReferences=false\" (#2375) at aspnet/Razor","RelatedBody":"Fixes #2363"},{"Id":"7745837697","Type":"IssuesEvent","CreatedAt":"2018-05-29T19:39:15","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2374","RelatedDescription":"Opened issue \"Implement DocumentSnapshot tracking in VS 4 Mac\" (#2374) at aspnet/Razor","RelatedBody":"When we eventually move all of our internal parsing infrastructure to use DocumentSnapshots we'll need to  have the correct information flowing through the VS4Mac side of the world."},{"Id":"7745830248","Type":"IssuesEvent","CreatedAt":"2018-05-29T19:37:45","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2373","RelatedDescription":"Opened issue \"Track DocumentState information for fallback projects.\" (#2373) at aspnet/Razor","RelatedBody":"Today our default project host consumes Razor SDK information (only present in 2.1) to identify Razor files and their if they've been added or remove to the world. This way our project system can track document information despite being >= 2.1"},{"Id":"7732534184","Type":"PullRequestEvent","CreatedAt":"2018-05-25T23:30:11","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2372","RelatedDescription":"Opened pull request \"Override MicrosoftNETCoreApp22PackageVersion\" (#2372) at aspnet/Razor","RelatedBody":"In Universe, when the versions of MicrosoftNETCoreApp22PackageVersion are different between Universe and Razor, the samples get passed the Razor one, which is wrong. Here I'm attempting to prevent that from happening.\r\n\r\n@NTaylorMullen is my understanding of this correct?"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7707144427","Type":"IssuesEvent","CreatedAt":"2018-05-21T21:26:33","Actor":"Fosol","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/146","RelatedDescription":"Closed issue \"How to nest files in a DNX project?\" (#146) at aspnet/Tooling","RelatedBody":"My search for answers has led me here.\n\nBy default a DNX project nest files like config.json -> config.debug.json\n\nI want to be able to nest files like config.json -> config.development.debug.json\n\nHow do I do this? I can no longer edit my project file to do this because someone has decided to extract all that functionality and hide it away in some black box. \n\nFeel free to point me to the right place to ask this question.\n\nThanks,\n Jeremy\n"},{"Id":"7687608828","Type":"IssuesEvent","CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n"},{"Id":"7686968343","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:31:07","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Opened issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40153549-85278454-59b4-11e8-9b07-621a5de873f8.png)\r\n"},{"Id":"7686951810","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":483,"FavoriteCount":273,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null}]}},"RunOn":"2018-05-30T05:30:12.9959136Z","RunDurationInMilliseconds":8007}