{"Data":{"Sdk":{"Events":[{"Id":"7533506389","Type":"PullRequestEvent","CreatedAt":"2018-04-16T02:53:20","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/486","RelatedDescription":"Merged pull request \"Merge master into office2016\" (#486) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7533438605","Type":"PullRequestEvent","CreatedAt":"2018-04-16T02:26:04","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/486","RelatedDescription":"Opened pull request \"Merge master into office2016\" (#486) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7532978416","Type":"PullRequestEvent","CreatedAt":"2018-04-15T22:19:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/483","RelatedDescription":"Merged pull request \"Add names to DataMembers to simplify restriction serialization\" (#483) at OfficeDev/Open-XML-SDK","RelatedBody":"This reduces each of the restrictions files size by around 70% by\r\nsetting names for the fields of only a few characters."},{"Id":"7530684914","Type":"IssuesEvent","CreatedAt":"2018-04-14T19:24:49","Actor":"ThomasBarnekow","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/485","RelatedDescription":"Opened issue \"OpenXmlSimpleType children do not implement equality\" (#485) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nClasses like `StringValue` and `HexBinaryValue` do not implement equality and you must use their `Value` properties to compare them. This is not handy and lead to unexpected results.\r\n\r\n**Information**\r\n\r\n- .NET Target: Any\r\n- DocumentFormat.OpenXml Version: 2.8.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing DocumentFormat.OpenXml;\r\nusing Xunit;\r\n\r\nnamespace DocumantFormat.OpenXml.Tests\r\n{\r\n    public class OpenXmlSimpleValueTests\r\n    {\r\n        private const string HexBinary = \"12345678\";\r\n        private const string Value = \"Hello World\";\r\n\r\n        [Fact]\r\n        public void HexBinaryValue_ValuesAreEqual_HexBinaryValuesAreNotEqual()\r\n        {\r\n            var hexBinaryValue1 = new HexBinaryValue(HexBinary);\r\n            var hexBinaryValue2 = new HexBinaryValue(HexBinary);\r\n\r\n            Assert.Equal(hexBinaryValue1.Value, hexBinaryValue2.Value);\r\n\r\n            // Those two HexBinaryValue instances should be deemed equal.\r\n            Assert.NotEqual(hexBinaryValue1, hexBinaryValue2);\r\n        }\r\n\r\n        [Fact]\r\n        public void HexBinaryValue_ValueIsContainedInList_ListDoesNotContainHexBinaryValue()\r\n        {\r\n            var hexBinaryValues = new List<HexBinaryValue>\r\n            {\r\n                new HexBinaryValue(HexBinary),\r\n                new HexBinaryValue(\"ABCDEF00\")\r\n            };\r\n\r\n            var hexBinaryValue = new HexBinaryValue(HexBinary);\r\n\r\n            Assert.Contains(hexBinaryValue.Value, hexBinaryValues.Select(hbv => hbv.Value));\r\n\r\n            // The HexBinaryValue should be deemed contained in the list.\r\n            // The fact that this wasn't the case was a gotcha.\r\n            Assert.DoesNotContain(hexBinaryValue, hexBinaryValues);\r\n        }\r\n\r\n        [Fact]\r\n        public void StringValue_ValuesAreEqual_StringValuesAreNotEqual()\r\n        {\r\n            var stringValue1 = new StringValue(Value);\r\n            var stringValue2 = new StringValue(Value);\r\n\r\n            Assert.Equal(stringValue1.Value, stringValue2.Value);\r\n\r\n            // The two StringValue instances should be deemed equal.\r\n            Assert.NotEqual(stringValue1, stringValue2);\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nTwo distinct instances of `HexBinaryValue` or `StringValue`, for example, will not be deemed equal even if their values are equal.\r\n\r\n**Expected**\r\n\r\nGiven two distinct instances of `HexBinaryValue`, when the `Value` properties of those instances are equal, then those `HexBinaryValue` instances should be deemed equal as well.\r\n\r\nThe same should apply to other child classes of `OpenXmlSimpleType` such as `StringValue`."},{"Id":"7530271856","Type":"IssuesEvent","CreatedAt":"2018-04-14T15:09:11","Actor":"ThomasBarnekow","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/484","RelatedDescription":"Opened issue \"No support for commentsIds part in master or Office2016 branches\" (#484) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThere is currently no support for the `commentsIds.xml` part and related `w16cid:commentsIds` and `w16cid:commentId` elements.\r\n\r\n**Information**\r\n\r\nStatus as of April 14, 2018:\r\n\r\n- master at abbca550c814ead5935862786727ad8ae1328cd1\r\n- feature/office2016 at bf8833877c17b95d6d31f1746b2b0b3de76f0cae\r\n\r\n**Repro**\r\n\r\nOffice 2016 creates a `commentsIds.xml` part next to the `comments.xml` and `commentsExtended.xml` parts. Simplified example (with unnecessary namespace declarations removed):\r\n\r\n```xml\r\n<w16cid:commentsIds xmlns:w16cid=\"http://schemas.microsoft.com/office/word/2016/wordml/cid\">\r\n  <w16cid:commentId w16cid:paraId=\"6C038D6C\" w16cid:durableId=\"1E791E73\"/>\r\n  <w16cid:commentId w16cid:paraId=\"2E0CD699\" w16cid:durableId=\"1E7B8259\"/>\r\n  <w16cid:commentId w16cid:paraId=\"5CE268F4\" w16cid:durableId=\"1E7B8840\"/>\r\n</w16cid:commentsIds>\r\n``` \r\n\r\n**Observed**\r\n\r\nThere is currently no (direct) way of creating the above part with the Open XML SDK.\r\n\r\n**Expected**\r\n\r\nAs part of its Office 2016 support, the Open XML SDK provides a way to create that part and also offers strongly typed classes for the `w16cid:commentsIds` and `w16cid:commentId` elements."},{"Id":"7530228001","Type":"PullRequestEvent","CreatedAt":"2018-04-14T14:42:39","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/483","RelatedDescription":"Opened pull request \"Add names to datamembers to simplify restriction serialization\" (#483) at OfficeDev/Open-XML-SDK","RelatedBody":"This reduces each of the restrictions files size by around 70% by\r\nsetting names for the fields of only a few characters."},{"Id":"7530209593","Type":"PullRequestEvent","CreatedAt":"2018-04-14T14:31:20","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/482","RelatedDescription":"Merged pull request \"Use marshalling to load constraint data\" (#482) at OfficeDev/Open-XML-SDK","RelatedBody":"Instead of reading byte by byte, we can just load the entire structure\r\nat a single time since all the objects are structs and have simple data\r\ntypes. This provides a good performance help and allows for easier\r\nupdates to the data structures without needing to manually rework the\r\nserialization and deserialization methods"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7542035264","Type":"PullRequestEvent","CreatedAt":"2018-04-17T11:45:51","Actor":"kimsey0","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/190","RelatedDescription":"Closed pull request \"Keep WebExtensions parts\" (#190) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"A simple solution to #189 which keeps the WebExtensions parts of the first document that has any.\r\n\r\nIt could be extended to merge the WebExtensions parts of all documents. Doing so would require copying over all the WebExtension parts and merging the content of the Taskpanes part, adjusting the reference IDs."},{"Id":"7542033771","Type":"IssuesEvent","CreatedAt":"2018-04-17T11:45:32","Actor":"kimsey0","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/189","RelatedDescription":"Closed issue \"WebExtensions parts are not copied over by DocumentBuilder\" (#189) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"From Office 2013, documents can contain WebExtensions parts (also known as [Office Web Extensibility Extensions](https://msdn.microsoft.com/en-us/library/hh695336.aspx)) which can link to Office Add-ins and specify taskpanes that are to be opened.\r\n\r\nThese WebExtensions parts are currently ignored by DocumentBuilder, but could be copied over instead."},{"Id":"7539880080","Type":"IssuesEvent","CreatedAt":"2018-04-17T03:04:58","Actor":"haijiandong","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/220","RelatedDescription":"Opened issue \"How from. XLSX converted into HTML?\" (#220) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hello, I encountered this problem, after searching the community and documentation still did not answer, so excuse me, if you can help me answer it?\r\nthank you very much!"},{"Id":"7523781661","Type":"PullRequestEvent","CreatedAt":"2018-04-13T03:07:27","Actor":"ocdi","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/219","RelatedDescription":"Opened pull request \"Add additional styling controls\" (#219) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I had a need to control cell colouring, rotation for manually crafting some Excel files. I've been using this code in production since at least 2017, just thought I would share my commits if anyone else would like to use them."},{"Id":"7497493664","Type":"PullRequestEvent","CreatedAt":"2018-04-08T20:15:11","Actor":"TiagoBonin","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/218","RelatedDescription":"Opened pull request \"Allow HtmlToWmlConverterCore to recognize the \"text-align\" css property\" (#218) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I working on a project where I have to convert an html file into a word document and insert it into a bigger word document.\r\n\r\nDuring the process I noticed that the code was not recognizing when the css property \"text-align\" was set, and because o that the text was never changing it's align.\r\n\r\nMy change consist in fixing it so the code will be able to recognize the \"text-align\" attribute.\r\n\r\nWhat I basicaly did is:\r\nCapturing every css atribute that is set in the HTML, and adding to the standard library of css properties with a foreach loop.\r\n\r\nI'm creating this pull request to try to improve the code, if I did it wrong please let me know\r\nThere are some auto corrections made by the visual studio, don't mind it."}],"ResultType":"GitHubEvent"}},"RunOn":"2018-04-19T05:30:31.5067858Z","RunDurationInMilliseconds":1733}