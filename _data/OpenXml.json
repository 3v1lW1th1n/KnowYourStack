{"Data":{"Sdk":{"Events":[{"Id":"7448275593","Type":"IssuesEvent","CreatedAt":"2018-03-28T14:51:07","Actor":"daniel-white","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/458","RelatedDescription":"Opened issue \"DocumentFormat.OpenXml.Office2013.WebExtension has typo in `Frozen` property\" (#458) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\n`DocumentFormat.OpenXml.Office2013.WebExtension` has a property named `Fronzen` which maps to `frozen` in the schema.\r\n\r\n**Information**\r\n\r\n- .NET Target: Any\r\n- DocumentFormat.OpenXml Version: 2.8.1\r\n\r\n\r\n**Observed**\r\n\r\n`DocumentFormat.OpenXml.Office2013.WebExtension` has a property named `Fronzen` which maps to `frozen` in the schema.\r\n\r\n\r\n**Expected**\r\n\r\nI would expect a `Frozen` property, and perhaps the `Fronzen` one deprecated."},{"Id":"7430305614","Type":"IssuesEvent","CreatedAt":"2018-03-24T23:49:01","Actor":"michael-hawker","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/457","RelatedDescription":"Opened issue \"Sample Repository Link Missing?\" (#457) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThe Description link in the main repo links to this [Documentation](https://msdn.microsoft.com/en-us/library/office/bb448854.aspx); however its `Samples on GitHub` just dumps you to the `OfficeDev` organization and not an actual samples on how to use the Open XML SDK...\r\n\r\nCan a proper link be provided to the repo containing samples?  Especially UWP ones.\r\n\r\nThanks\r\n"},{"Id":"7428331118","Type":"PullRequestEvent","CreatedAt":"2018-03-24T00:28:11","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/455","RelatedDescription":"Merged pull request \"Merge from master\" (#455) at OfficeDev/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7460221411","Type":"IssuesEvent","CreatedAt":"2018-03-30T18:41:29","Actor":"MatthewMcD","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/143","RelatedDescription":"Closed issue \"Unable to run any PowerShell Cmdlets\" (#143) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I am really struggling here.\r\nI cloned both Open-XML-SDK and Open-XML-PowerTools.\r\nI compiled the Open-XML-SDK\r\nI tried \r\n`Import-Module .\\Open-XML-PowerTools.psm1` and I get:\r\n> Add-Type : Cannot bind parameter 'Path' to the target. Exception setting \"Path\": \"Cannot find path 'C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-Sdk\\DocumentFormat.OpenXml\\bin\\debug\\System.IO.Packaging.dll' because it does not exist.\"\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\AddTypes.ps1:69 char:16. -Type -Path \"$PSScriptRoot\\..\\Open-Xml-Sdk\\DocumentFormat.OpenXml\\bin ...\r\n> CategoryInfo          : WriteError: (:) [Add-Type], ParameterBindingException\r\n> FullyQualifiedErrorId : ParameterBindingFailed,Microsoft.PowerShell.Commands.AddTypeCommand\r\n> \r\n> Add-Type : (0) : Metadata file 'C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\..\\Open-Xml-Sdk\\DocumentFormat.OpenXml\\bin\\debug\\System.IO.Packaging.dll' could not be found\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\AddTypes.ps1:70 char:1\r\n> Add-Type -ReferencedAssemblies $assemblies -Path $sources -OutputAsse ...\r\n>  CategoryInfo          : InvalidData: (Microsoft.Power...peCompilerError:AddTypeCompilerError) [Add-Type], Exception FullyQualifiedErrorId : SOURCE_CODE_ERROR,Microsoft.PowerShell.Commands.AddTypeCommand\r\n> Add-Type : Cannot add type. Compilation errors occurred.\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\AddTypes.ps1:70 char:1\r\n> Add-Type -ReferencedAssemblies $assemblies -Path $sources -OutputAsse ...\r\n>  CategoryInfo          : InvalidData: (:) [Add-Type], InvalidOperationException\r\n> FullyQualifiedErrorId : COMPILER_ERRORS,Microsoft.PowerShell.Commands.AddTypeCommand\r\n\r\nI fixed the paths by adding \"\\net46\\ to the debug dll locations in AddTypes.ps1 Now the Import-Module works without error. When I try any cmdlet like the example:\r\n`New-Docx Out-2.docx -Comment`\r\nI get:\r\n\r\n> New-Object : Cannot find type [System.Collections.Generic.List[OpenXmlPowerTools.Source]]: verify that the assembly containing this type is loaded.\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:303 char:16   $srcList = New-Object 'System.Collections.Generic.List[OpenXmlPowerT ...\r\n> CategoryInfo          : InvalidType: (:) [New-Object], PSArgumentException\r\n> FullyQualifiedErrorId : TypeNotFound,Microsoft.PowerShell.Commands.NewObjectCommand\r\n> \r\n> New-Object : Cannot find type [OpenXmlPowerTools.WmlDocument]: verify that the assembly containing this type is loaded. At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:404 char:13\r\n> $wml = (New-Object OpenXmlPowerTools.WmlDocument(\"DummyName.docx\" ...\r\n> CategoryInfo          : InvalidType: (:) [New-Object], PSArgumentException\r\n> FullyQualifiedErrorId : TypeNotFound,Microsoft.PowerShell.Commands.NewObjectCommand\r\n> \r\n> New-Object : Cannot find type [OpenXmlPowerTools.Source]: verify that the assembly containing this type is loaded. At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:411 char:17\r\n> $src = (New-Object OpenXmlPowerTools.Source($wml))\r\n> CategoryInfo          : InvalidType: (:) [New-Object], PSArgumentException\r\n> FullyQualifiedErrorId : TypeNotFound,Microsoft.PowerShell.Commands.NewObjectCommand\r\n> \r\n> You cannot call a method on a null-valued expression.\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:413 char:5\r\n> $srcList.Add($src)\r\n> \r\n> CategoryInfo          : InvalidOperation: (:) [], RuntimeException\r\n> FullyQualifiedErrorId : InvokeMethodOnNull\r\n> \r\n> Unable to find type [OpenXmlPowerTools.DocumentBuilder]. At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:351 char:26\r\n> $mergedWmlDocument = [OpenXmlPowerTools.DocumentBuilder]::BuildDo ...\r\n> CategoryInfo          : InvalidOperation: (OpenXmlPowerTools.DocumentBuilder:TypeName) [], RuntimeException FullyQualifiedErrorId : TypeNotFound\r\n> \r\n> You cannot call a method on a null-valued expression.\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:385 char:13\r\n> $mergedWmlDocument.SaveAs($outputFi.FullName)\r\n> CategoryInfo          : InvalidOperation: (:) [], RuntimeException\r\n> FullyQualifiedErrorId : InvokeMethodOnNull\r\n> \r\n\r\nDoes the PowerShell work for anyone? I just want to use the project. I have spent several hours on and off trying to get this to work. Any help will be greatly appreciated.\r\n\r\nEven better...can I get an \"Install-Module\" option so I don't have to build it all myself?"},{"Id":"7366833000","Type":"IssuesEvent","CreatedAt":"2018-03-12T16:34:29","Actor":"arthurvb","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/216","RelatedDescription":"Opened issue \"Add support for exporting images in .net core\" (#216) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Dear Reader,\r\n\r\nCurrently I cannot export images in .net core since ImageInfo has a bitmap property, where I get the following error:\r\n\r\nError\tCS7069\tReference to type 'Bitmap' claims it is defined in 'System.Drawing', but it could not be found\tDefaultProcessorImplementation\t\r\n\r\nwhen I want to use 'imageInfo.Bitmap.Save(ms, imageFormat);' in the ImageHandler. I did try to add the 'System.Drawing.Common' package from nuget, but that did not resolve the error.\r\n\r\nThank you in advance for your help and for making this package available,\r\n\r\nArthur"},{"Id":"7333791977","Type":"IssuesEvent","CreatedAt":"2018-03-05T20:33:47","Actor":"XzaR90","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/215","RelatedDescription":"Opened issue \"Copy custom xml and SharePoint metadata on merging document\" (#215) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\n**Description**\r\nCopy custom XML and SharePoint metadata on merging document does not work using DocumentBuilder?\r\n\r\n\r\n**Information**\r\n\r\n- .NET Target: NET Framework 4.5.2\r\n- DocumentFormat.OpenXml Version: OpenXMLSDK-MOT 2.6.0.0\r\n\r\n**Expected**\r\n\r\nWhen I comment out if (itemList.Contains(propertyPartDoc.Root.Attribute(DS.itemID).Value)) I get the expected result.\r\n\r\n```csharp\r\n        private static void CopyCustomXml(WordprocessingDocument sourceDocument, WordprocessingDocument newDocument,\r\n            IEnumerable<XElement> newContent)\r\n        {\r\n            List<string> itemList = new List<string>();\r\n            foreach (string itemId in newContent\r\n                .Descendants(W.dataBinding)\r\n                .Select(e => (string)e.Attribute(W.storeItemID)))\r\n                if (!itemList.Contains(itemId))\r\n                    itemList.Add(itemId);\r\n\r\n            foreach (CustomXmlPart customXmlPart in sourceDocument.MainDocumentPart.CustomXmlParts)\r\n            {\r\n                OpenXmlPart propertyPart = customXmlPart\r\n                    .Parts\r\n                    .Select(p => p.OpenXmlPart)\r\n                    .Where(p => p.ContentType == \"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\")\r\n                    .FirstOrDefault();\r\n\r\n                if (propertyPart != null)\r\n                {\r\n                    XDocument propertyPartDoc = propertyPart.GetXDocument();\r\n                    //if (itemList.Contains(propertyPartDoc.Root.Attribute(DS.itemID).Value))\r\n                    //{\r\n                        CustomXmlPart newPart = newDocument.MainDocumentPart.AddCustomXmlPart(customXmlPart.ContentType);\r\n                        newPart.GetXDocument().Add(customXmlPart.GetXDocument().Root);\r\n                        foreach (OpenXmlPart propPart in customXmlPart.Parts.Select(p => p.OpenXmlPart))\r\n                        {\r\n                            CustomXmlPropertiesPart newPropPart = newPart.AddNewPart<CustomXmlPropertiesPart>();\r\n                            newPropPart.GetXDocument().Add(propPart.GetXDocument().Root);\r\n                        }\r\n                    //}\r\n                }\r\n            }\r\n        }\r\n``` "},{"Id":"7332381011","Type":"IssuesEvent","CreatedAt":"2018-03-05T16:10:43","Actor":"pedro-w","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/214","RelatedDescription":"Opened issue \"Regression in OpenXmlRegex.Replace \" (#214) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I've got a program using OpenXmlRegex.Replace to replace text 'templates' in a Word document with new values. I am getting problems with version 4.5.3.2 which weren't in 4.5.3.1. It looks like, once the document exceeds a certain size, it starts to replace characters off by one position. I've done some work to get the smallest example I can.\r\n```` C#\r\nusing System.IO;\r\nusing System.Text.RegularExpressions;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing OpenXmlPowerTools;\r\n\r\nnamespace ConsoleApp3\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var src = Path.GetFullPath(\"..\\\\..\\\\me.docx\");\r\n            var dest = Path.GetFullPath(\"..\\\\you.docx\");\r\n            File.Copy(src, dest, true);\r\n            var doc = WordprocessingDocument.Open(dest, true);\r\n            foreach (var part in doc.ContentParts())\r\n            {\r\n                var xdoc = part.GetXDocument();\r\n                var content = xdoc.Descendants(W.p);\r\n                OpenXmlRegex.Replace(content, rex, \"\", null);\r\n                part.PutXDocument();\r\n            }\r\n            doc.Save();\r\n        }\r\n        static readonly Regex rex = new Regex(\"rd\");\r\n    }\r\n}\r\n\r\n````\r\nThis program is supposed to replace all instances of 'rd' in file 'me.docx' with nothing and write the result into 'you.docx'\r\n\r\nMy input file looks like\r\n````\r\nword 1 word 2 word 3 word 4 word 5 word 6 word 7 word 8 word 9 word 10 word 11 word 12 \r\nword 13 word 14 word 15 word 16 word 17 word 18 word 19 word 20 word 21 word 22 \r\nword 23 word 24 \r\n````\r\n... down to ...\r\n````\r\nword 5991 word 5992 word 5993 word 5994 word 5995 word 5996 word 5997 word 5998 \r\nword 5999 word 6000 \r\n````\r\nAnd the output file starts off OK\r\n````\r\nwo 1 wo 2 wo 3 wo 4 wo 5 wo 6 wo 7 wo 8 wo 9 wo 10 wo 11 wo 12 wo 13 wo 14 wo 15 wo 16 wo \r\n```` \r\nbut later becomes\r\n````\r\n481 wo 482 wo 483 wo 484 wo 485 wo 486 wo 487 wo 488 wo 489 wo 490 wo 491 wd 492 wd 493 \r\nwd 494 wd 495 wd 496 wd 497 wd 498 wd 499 wd 500 wd 501 wd 502 wd 503 wd 504 wd 505 wd \r\n````\r\nand stays like that to the end.\r\nI've tried different combinations of text, regex and replacement but there is no obvious way to calculate when it will go wrong.\r\n\r\nHowever if I downgrade my NuGet packages to 4.5.3.1 it works OK. It seems to be independent of the version of `DocumentFormat.OpenXml` used, I can upgrade that to 2.8.1 (from 2.7.1/2.7.2) with no effect.\r\n\r\nI am happy to do some more investigation but I found it difficult to work out which revision in git corresponds to which version in NuGet as there are no git tags.\r\n\r\nI am using Visual Studio 2017, .NET 4.6.2"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-04-03T05:30:28.102838Z","RunDurationInMilliseconds":1610}