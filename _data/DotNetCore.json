{"Data":{"Blog":{"FeedItems":[{"Title":"The history of the GC configs","PublishedOn":"2019-11-02T07:54:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Nick from Stack Overflow tweeted about his experience of using the .NET Core GC configs – he seemed quite happy with them (minus the fact they are not documented well which is something I’m...","Href":"https://devblogs.microsoft.com/dotnet/the-history-of-the-gc-configs/","RawContent":null},{"Title":"Continuously deploy and monitor your UWP, WPF, and Windows Forms app with App Center","PublishedOn":"2019-10-31T16:00:39+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"App Center is an integrated developer solution with the mission of helping developers build better apps. Last week, we announced General Availability support of distribute, analytics and diagnostics...","Href":"https://devblogs.microsoft.com/dotnet/continuously-deploy-and-monitor-your-uwp-wpf-and-windows-forms-app-with-app-center/","RawContent":null},{"Title":"Introducing Orleans 3.0","PublishedOn":"2019-10-30T19:16:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"This is a guest post from the Orleans team. Orleans is a cross-platform framework for building distributed applications with .NET. For more information, see https://github.com/dotnet/orleans.\nWe are...","Href":"https://devblogs.microsoft.com/dotnet/orleans-3-0/","RawContent":null},{"Title":".NET Framework October 2019 Cumulative Updates Windows 10 version 1903 and Windows 10 version 1909","PublishedOn":"2019-10-24T17:33:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Cumulative Updates for .NET Framework 3.5 and 4.8 on Windows 10 version 1903 and Windows 10 version 1909\nQuality and Reliability\nThis release contains the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/","RawContent":null},{"Title":"Fall .NET Core Survey","PublishedOn":"2019-10-17T20:24:19+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"It’s been a busy time for .NET Core – we just shipped 3.0, and are currently working on a few updates for v3.1 (due in November.) As we turn our attention to .NET Core 5.0, we want to take a step back...","Href":"https://devblogs.microsoft.com/dotnet/fall-net-core-survey/","RawContent":null},{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10748742804","Type":"IssuesEvent","CreatedAt":"2019-10-30T15:14:54","Actor":"jaredpar","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Opened issue \"Repository Consolidation Timeline\" (#133) at dotnet/announcements","RelatedBody":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository."},{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"},{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10774404838","Type":"PullRequestEvent","CreatedAt":"2019-11-03T05:28:53","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27641","RelatedDescription":"Opened pull request \"Use simple Array.Copy overload where possible\" (#27641) at dotnet/coreclr","RelatedBody":"The simple Array.Copy overload does not come with a performance penalty anymore."},{"Id":"10774381307","Type":"PullRequestEvent","CreatedAt":"2019-11-03T05:12:47","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27634","RelatedDescription":"Merged pull request \"Rewrite of Array.Copy fast path in C#\" (#27634) at dotnet/coreclr","RelatedBody":"Contributes to #27106"},{"Id":"10773988281","Type":"IssuesEvent","CreatedAt":"2019-11-03T00:51:03","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15330","RelatedDescription":"Closed issue \"[Watson] Reliability crash in coreclr.dll!ClassLoader::AddAvailableClassHaveLock\" (#15330) at dotnet/coreclr","RelatedBody":"There is a crash accounting for 69.5% of our external failures in this callstack:\r\n```\r\ncoreclr!NgenHashTable_EEClassHashTable,EEClassHashEntry,4_::FindPersistedEntryByHash\r\ncoreclr!EEClassHashTable::FindItem\r\ncoreclr!ClassLoader::AddAvailableClassHaveLock\r\ncoreclr!ClassLoader::AddAvailableClassDontHaveLock\r\ncoreclr!Assembly::AddType\r\ncoreclr!Module::NotifyProfilerLoadFinished\r\ncoreclr!DomainFile::PostLoadLibrary\r\ncoreclr!DomainFile::DoIncrementalLoad\r\ncoreclr!AppDomain::TryIncrementalLoad\r\ncoreclr!AppDomain::LoadDomainFile\r\ncoreclr!AppDomain::LoadDomainAssemblyInternal\r\ncoreclr!AppDomain::LoadDomainAssembly\r\ncoreclr!Module::LoadAssembly\r\n```\r\n\r\nDespite the blamed symbol in the title, I suspect we have an issue where NGEN hashtable is corrupted.  We've seen concurrency issues here before (and recently).  It's also possible that the image was corrupted on disk, so it will be difficult to figure out which case is the root cause.\r\n\r\nHere is a link to the watson bucket (with heap dumps):  https://watson/Failure?FailureSearchText=53b8f2f3-edc4-ff73-1e50-1c25893a644b\r\n\r\nDesktop CLR seems to have the same issue, tracked by this bucket:  https://watson/Failure?FailureSearchText=d42d1953-5930-bb15-0c3c-3784ac216487\r\n"},{"Id":"10773969894","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:39:24","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27640","RelatedDescription":"Opened pull request \"Delete two more FCalls\" (#27640) at dotnet/coreclr","RelatedBody":""},{"Id":"10773946864","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:24:30","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27637","RelatedDescription":"Merged pull request \"Fix typo in Tuple.cs\" (#27637) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/42321"},{"Id":"10773907883","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:01:05","Actor":"manandre","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27639","RelatedDescription":"Opened pull request \"Add span-based CopyTo and CopyToAsync methods\" (#27639) at dotnet/coreclr","RelatedBody":"Contributes to https://github.com/dotnet/corefx/issues/21472"},{"Id":"10773549880","Type":"PullRequestEvent","CreatedAt":"2019-11-02T21:22:20","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27638","RelatedDescription":"Opened pull request \"Add bilinear interpolation benchmark\" (#27638) at dotnet/coreclr","RelatedBody":"This is also checked in to the performance repo, but this has some fixes.\r\n\r\nFixes"},{"Id":"10773534255","Type":"PullRequestEvent","CreatedAt":"2019-11-02T21:15:54","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27637","RelatedDescription":"Opened pull request \"Fix typo in Tuple.cs\" (#27637) at dotnet/coreclr","RelatedBody":"Reported by https://github.com/dotnet/corefx/issues/42321"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10774009752","Type":"PullRequestEvent","CreatedAt":"2019-11-03T01:04:54","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13022","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13022) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191102.5\r\n- **Date Produced**: 11/2/2019 11:07 PM\r\n- **Commit**: fe164cd7666a2398a7959d31b4c528f3e71c018a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19552.5\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10774007232","Type":"PullRequestEvent","CreatedAt":"2019-11-03T01:03:09","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13014","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13014) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n"},{"Id":"10773963433","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:35:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13022","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13022) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191102.5\r\n- **Date Produced**: 11/2/2019 11:07 PM\r\n- **Commit**: fe164cd7666a2398a7959d31b4c528f3e71c018a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19552.5\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10772180197","Type":"PullRequestEvent","CreatedAt":"2019-11-02T13:15:26","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13021","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13021) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 11:01 AM\r\n- **Commit**: 507379d642c0fb9b17913cfa3e316c52c1163373\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19552.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10772099540","Type":"PullRequestEvent","CreatedAt":"2019-11-02T12:45:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13021","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13021) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 11:01 AM\r\n- **Commit**: 507379d642c0fb9b17913cfa3e316c52c1163373\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19552.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10771737159","Type":"PullRequestEvent","CreatedAt":"2019-11-02T09:55:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13020","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13020) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.16\r\n- **Date Produced**: 11/2/2019 7:24 AM\r\n- **Commit**: 5709cd95b2db28ee2546be7797b913b129d97655\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19551.16\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10771617373","Type":"PullRequestEvent","CreatedAt":"2019-11-02T09:05:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13020","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13020) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.16\r\n- **Date Produced**: 11/2/2019 7:24 AM\r\n- **Commit**: 5709cd95b2db28ee2546be7797b913b129d97655\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19551.16\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10770855880","Type":"PullRequestEvent","CreatedAt":"2019-11-02T03:15:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13019","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13019) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.11\r\n- **Date Produced**: 11/2/2019 1:08 AM\r\n- **Commit**: 4d3eccccf012d154a3c591964b0cb455014e2b7d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19551.11\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10770762973","Type":"PullRequestEvent","CreatedAt":"2019-11-02T02:35:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13019","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13019) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.11\r\n- **Date Produced**: 11/2/2019 1:08 AM\r\n- **Commit**: 4d3eccccf012d154a3c591964b0cb455014e2b7d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19551.11\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10772453622","Type":"IssuesEvent","CreatedAt":"2019-11-02T14:52:31","Actor":"stephentoub","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Closed issue \"_dummy and _dummyPrimitive in System.Span\" (#1638) at dotnet/standard","RelatedBody":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?"},{"Id":"10772426753","Type":"IssuesEvent","CreatedAt":"2019-11-02T14:43:20","Actor":"bernd5","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Opened issue \"_dummy and _dummyPrimitive in System.Span\" (#1638) at dotnet/standard","RelatedBody":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?"},{"Id":"10772048356","Type":"PullRequestEvent","CreatedAt":"2019-11-02T12:25:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1637","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1637) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10772036323","Type":"PullRequestEvent","CreatedAt":"2019-11-02T12:19:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1637","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1637) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10765943110","Type":"PullRequestEvent","CreatedAt":"2019-11-01T12:30:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1636","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1636) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.13\r\n- **Date Produced**: 11/1/2019 5:06 AM\r\n- **Commit**: a24db0ba5666f46f50649810fe698ad267b60331\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10765886371","Type":"PullRequestEvent","CreatedAt":"2019-11-01T12:20:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1636","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1636) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.13\r\n- **Date Produced**: 11/1/2019 5:06 AM\r\n- **Commit**: a24db0ba5666f46f50649810fe698ad267b60331\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10774207128","Type":"PullRequestEvent","CreatedAt":"2019-11-03T03:14:41","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42331","RelatedDescription":"Opened pull request \"Assert ValueTask completion in SslStream.Read/Write\" (#42331) at dotnet/corefx","RelatedBody":"We're employing a pattern in SslStream to avoid redundant code: we reuse the same code paths for both sync and async operations, with different interface implementations for each.  The sync implementation has implementations that complete synchronously, and we then guarantee that the whole operation actually completes synchronously, even though it's implemented with async methods.  We then .GetAwaiter().GetResult() to extract the result.  Since by construction the task will have already completed, it's ok to do so, but it's difficult for a human to see this, and harder for an analyzer.  Add an assert to both convey to an analyzer that we know what we're doing, and add a message for a human to understand it better. We can also remove an unnecessary \"AsTask()\" operation from the synchronous Write path, which should also remove a tiny bit of overhead."},{"Id":"10774081520","Type":"PullRequestEvent","CreatedAt":"2019-11-03T01:52:28","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42330","RelatedDescription":"Opened pull request \"Fix ValueTask usage in XmlTextReaderImpl.ParseTextAsync\" (#42330) at dotnet/corefx","RelatedBody":"Found by an analyzer for ValueTasks I'm writing (and using corefx to test).\r\n\r\nThe ParseTextAsync(int) method returns a ValueTask, which then potentially has both .Result called on it and .AsTask (if fullValue is false), and such double-consumption of a ValueTask is not allowed.  It hasn't caused any problems because `async ValueTask` methods would always be backed by either a result or a Task, and as an implementation detail double-consumption of such instances doesn't cause a problem.  But for .NET 5 we've added the ability for `async ValueTask` methods to use pooled instances, in which case such double-consumption would cause problems (e.g. exceptions about the double use).  A fix here is to use Preserve."},{"Id":"10774009795","Type":"PullRequestEvent","CreatedAt":"2019-11-03T01:04:56","Actor":"Marusyk","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42329","RelatedDescription":"Opened pull request \"Consolidate .netcoreapp.cs test files in System.IO.*\" (#42329) at dotnet/corefx","RelatedBody":"Contributes #41821\r\n\r\nPlease review\r\nThank you in advance"},{"Id":"10774006347","Type":"PullRequestEvent","CreatedAt":"2019-11-03T01:02:33","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42328","RelatedDescription":"Opened pull request \"Remove unused return value from ChannelUtilities.QueueWaiter\" (#42328) at dotnet/corefx","RelatedBody":"Found while working on an analyzer for ValueTasks.\r\ncc: @tarekgh"},{"Id":"10773975473","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:42:53","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42327","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#42327) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks"},{"Id":"10773958712","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:32:14","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42327","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#42327) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10773946859","Type":"IssuesEvent","CreatedAt":"2019-11-03T00:24:29","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42321","RelatedDescription":"Closed issue \"Typo in comment\" (#42321) at dotnet/corefx","RelatedBody":"corefx/src/Common/src/CoreLib/System/Tuple.cs\r\n// In this case, the rest **memeber** has less than 8 elements so we need to combine some our elements with the elements in rest\r\n\r\nMaybe missing an \"of\" before \"our\" also."},{"Id":"10773924761","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:10:49","Actor":"manandre","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42326","RelatedDescription":"Opened pull request \"Expose/Test span-based CopyTo/Async methods\" (#42326) at dotnet/corefx","RelatedBody":"Depends on https://github.com/dotnet/coreclr/pull/27639\r\nContributes to #21472"},{"Id":"10773916247","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:05:43","Actor":"GrabYourPitchforks","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42073","RelatedDescription":"Merged pull request \"Optimize FindFirstCharToEncode for JavaScriptEncoder.Default using Ssse3 intrinsics\" (#42073) at dotnet/corefx","RelatedBody":"## Description\r\n\r\nFollow up to https://github.com/dotnet/corefx/pull/41933\r\n\r\n* For the vectorized char-path 2\\*8 chars are combined to one byte-vector (16 elements), then the byte-path for finding the first element, that needs to be escaped is taken. If there are less than 2*8 chars, a dummy char-vector is used, that is known to be be valid, i.e. it must not be escaped (here `A` is chosen)\r\n(cf. https://github.com/dotnet/corefx/pull/41845#discussion_r336728111)\r\n\r\n* The \"escaping mask\" is created via bit-masks. For an outline of the algorithm see https://github.com/dotnet/corefx/pull/41845#discussion_r336745516 (and / or comments in the code).\r\nFor the shuffling SSSE3 is needed (for a comment on SSSE3 see also https://github.com/dotnet/corefx/pull/41845#discussion_r337580425).\r\n\r\nThese optimization are applied to `JavaScriptEncoder.Default` (= `DefaultJavaScriptEncoderBasicLatin`), as suggested by @ahsonkhan in https://github.com/dotnet/corefx/pull/41845#discussion_r337903046.\r\n\r\nFor the other two mentioned encoders, the bit-mask won't work (in a performant way), as some values above `0x7F` are valid. So to handle them properly, lots of overhead have to be introduced, that's why I left them out (in this PR, maybe later when I can think more about it).\r\n\r\n## Benchmarks\r\n\r\nBenchmarks are based on the ones from https://github.com/dotnet/corefx/pull/41845\r\n\r\n<details>\r\n    <summary>Machine info</summary>\r\n\r\nA linux-vm was used.\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=ubuntu 18.04\r\nIntel Xeon CPU 2.00GHz, 1 CPU, 2 logical cores and 1 physical core\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n   <summary>Test_EscapingBenchmark</summary>\r\n\r\n```\r\n|   Method |        TestStringData |      Mean |     Error |    StdDev | Ratio | RatioSD |\r\n|--------- |---------------------- |----------:|----------:|----------:|------:|--------:|\r\n|   Master |            (1, -1, r) |  5.660 ns | 0.1006 ns | 0.0941 ns |  1.00 |    0.00 |\r\n| PR_42073 |            (1, -1, r) |  5.318 ns | 0.0420 ns | 0.0393 ns |  0.94 |    0.02 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |          (1, 0, &lt;) |  5.072 ns | 0.0081 ns | 0.0071 ns |  1.00 |    0.00 |\r\n| PR_42073 |          (1, 0, &lt;) |  5.113 ns | 0.0132 ns | 0.0123 ns |  1.01 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master | (100,(...)kuwu) [111] | 48.072 ns | 0.4432 ns | 0.3929 ns |  1.00 |    0.00 |\r\n| PR_42073 | (100,(...)kuwu) [111] | 24.007 ns | 0.0502 ns | 0.0419 ns |  0.50 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |  (15, (...)dabu) [25] | 21.191 ns | 0.0343 ns | 0.0268 ns |  1.00 |    0.00 |\r\n| PR_42073 |  (15, (...)dabu) [25] | 13.933 ns | 0.0442 ns | 0.0391 ns |  0.66 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |  (16, (...)sqfa) [26] | 14.327 ns | 0.0210 ns | 0.0186 ns |  1.00 |    0.00 |\r\n| PR_42073 |  (16, (...)sqfa) [26] |  8.877 ns | 0.0458 ns | 0.0428 ns |  0.62 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |  (17, (...)aabr) [27] | 16.068 ns | 0.0447 ns | 0.0373 ns |  1.00 |    0.00 |\r\n| PR_42073 |  (17, (...)aabr) [27] | 10.433 ns | 0.0337 ns | 0.0299 ns |  0.65 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |           (2, -1, dd) |  6.631 ns | 0.0198 ns | 0.0175 ns |  1.00 |    0.00 |\r\n| PR_42073 |           (2, -1, dd) |  6.622 ns | 0.0323 ns | 0.0302 ns |  1.00 |    0.01 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |  (32, (...)dfpn) [42] | 20.296 ns | 0.2466 ns | 0.2186 ns |  1.00 |    0.00 |\r\n| PR_42073 |  (32, (...)dfpn) [42] | 10.287 ns | 0.2252 ns | 0.2107 ns |  0.51 |    0.01 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |         (4, -1, negs) |  9.686 ns | 0.0922 ns | 0.0863 ns |  1.00 |    0.00 |\r\n| PR_42073 |         (4, -1, negs) |  9.128 ns | 0.0523 ns | 0.0463 ns |  0.94 |    0.01 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |      (7, -1, netggni) | 14.083 ns | 0.0461 ns | 0.0385 ns |  1.00 |    0.00 |\r\n| PR_42073 |      (7, -1, netggni) | 14.761 ns | 0.0426 ns | 0.0356 ns |  1.05 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |    (7, 0, &lt;etggni) |  5.290 ns | 0.0194 ns | 0.0172 ns |  1.00 |    0.00 |\r\n| PR_42073 |    (7, 0, &lt;etggni) |  5.101 ns | 0.0280 ns | 0.0262 ns |  0.96 |    0.01 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |    (7, 1, n&lt;tggni) |  6.439 ns | 0.0443 ns | 0.0414 ns |  1.00 |    0.00 |\r\n| PR_42073 |    (7, 1, n&lt;tggni) |  6.427 ns | 0.0451 ns | 0.0400 ns |  1.00 |    0.01 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |    (7, 2, ne&lt;ggni) |  8.023 ns | 0.0340 ns | 0.0301 ns |  1.00 |    0.00 |\r\n| PR_42073 |    (7, 2, ne&lt;ggni) |  7.958 ns | 0.1538 ns | 0.1363 ns |  0.99 |    0.02 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |    (7, 3, net&lt;gni) |  9.177 ns | 0.0694 ns | 0.0615 ns |  1.00 |    0.00 |\r\n| PR_42073 |    (7, 3, net&lt;gni) |  8.808 ns | 0.0230 ns | 0.0192 ns |  0.96 |    0.01 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |    (7, 4, netg&lt;ni) | 10.564 ns | 0.0143 ns | 0.0120 ns |  1.00 |    0.00 |\r\n| PR_42073 |    (7, 4, netg&lt;ni) | 10.590 ns | 0.0143 ns | 0.0127 ns |  1.00 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |    (7, 5, netgg&lt;i) | 12.577 ns | 0.0185 ns | 0.0154 ns |  1.00 |    0.00 |\r\n| PR_42073 |    (7, 5, netgg&lt;i) | 11.106 ns | 0.0306 ns | 0.0271 ns |  0.88 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |    (7, 6, netggn&lt;) | 14.034 ns | 0.0385 ns | 0.0341 ns |  1.00 |    0.00 |\r\n| PR_42073 |    (7, 6, netggn&lt;) | 12.251 ns | 0.0163 ns | 0.0145 ns |  0.87 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |     (8, -1, jgnavpkd) | 10.966 ns | 0.0180 ns | 0.0150 ns |  1.00 |    0.00 |\r\n| PR_42073 |     (8, -1, jgnavpkd) |  9.062 ns | 0.0167 ns | 0.0148 ns |  0.83 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |   (8, 0, &lt;gnavpkd) | 11.446 ns | 0.0321 ns | 0.0301 ns |  1.00 |    0.00 |\r\n| PR_42073 |   (8, 0, &lt;gnavpkd) |  8.655 ns | 0.0157 ns | 0.0140 ns |  0.76 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |   (8, 1, j&lt;navpkd) | 10.585 ns | 0.0197 ns | 0.0164 ns |  1.00 |    0.00 |\r\n| PR_42073 |   (8, 1, j&lt;navpkd) |  8.674 ns | 0.0202 ns | 0.0189 ns |  0.82 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |   (8, 2, jg&lt;avpkd) | 10.568 ns | 0.0133 ns | 0.0118 ns |  1.00 |    0.00 |\r\n| PR_42073 |   (8, 2, jg&lt;avpkd) |  8.663 ns | 0.0235 ns | 0.0220 ns |  0.82 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |   (8, 3, jgn&lt;vpkd) | 10.583 ns | 0.0154 ns | 0.0144 ns |  1.00 |    0.00 |\r\n| PR_42073 |   (8, 3, jgn&lt;vpkd) |  8.654 ns | 0.0115 ns | 0.0102 ns |  0.82 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |   (8, 4, jgna&lt;pkd) | 10.986 ns | 0.0200 ns | 0.0187 ns |  1.00 |    0.00 |\r\n| PR_42073 |   (8, 4, jgna&lt;pkd) |  8.651 ns | 0.0104 ns | 0.0097 ns |  0.79 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |   (8, 5, jgnav&lt;kd) | 10.579 ns | 0.0145 ns | 0.0121 ns |  1.00 |    0.00 |\r\n| PR_42073 |   (8, 5, jgnav&lt;kd) |  8.652 ns | 0.0099 ns | 0.0093 ns |  0.82 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |   (8, 6, jgnavp&lt;d) | 10.986 ns | 0.0350 ns | 0.0311 ns |  1.00 |    0.00 |\r\n| PR_42073 |   (8, 6, jgnavp&lt;d) |  8.656 ns | 0.0127 ns | 0.0112 ns |  0.79 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |   (8, 7, jgnavpk&lt;) | 10.963 ns | 0.0139 ns | 0.0116 ns |  1.00 |    0.00 |\r\n| PR_42073 |   (8, 7, jgnavpk&lt;) |  8.660 ns | 0.0096 ns | 0.0085 ns |  0.79 |    0.00 |\r\n|          |                       |           |           |           |       |         |\r\n|   Master |    (9, -1, csvobsdxs) | 11.934 ns | 0.0233 ns | 0.0218 ns |  1.00 |    0.00 |\r\n| PR_42073 |    (9, -1, csvobsdxs) | 10.200 ns | 0.0113 ns | 0.0100 ns |  0.86 |    0.00 |\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>Perf.Basic</summary>\r\n\r\n#### Master\r\n\r\n```\r\n|          Method | Formatted | SkipValidation | DataSize |     Mean |     Error |    StdDev |   Median |      Min |      Max |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------------- |---------- |--------------- |--------- |---------:|----------:|----------:|---------:|---------:|---------:|-------:|------:|------:|----------:|\r\n| WriteBasicUtf16 |     False |           True |       10 | 1.391 us | 0.0156 us | 0.0146 us | 1.388 us | 1.367 us | 1.419 us | 0.0056 |     - |     - |     120 B |\r\n```\r\n\r\n#### PR_42073 (this one)\r\n\r\n```\r\n|          Method | Formatted | SkipValidation | DataSize |     Mean |     Error |    StdDev |   Median |      Min |      Max |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------------- |---------- |--------------- |--------- |---------:|----------:|----------:|---------:|---------:|---------:|-------:|------:|------:|----------:|\r\n| WriteBasicUtf16 |     False |           True |       10 | 1.316 us | 0.0034 us | 0.0026 us | 1.315 us | 1.311 us | 1.320 us | 0.0052 |     - |     - |     120 B |\r\n\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>EscapingWriter</summary>\r\n\r\n#### Master\r\n\r\n```\r\n|               Method | DataLength | NegativeIndex |      Mean |    Error |   StdDev |    Median |       Min |       Max | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|--------------------- |----------- |-------------- |----------:|---------:|---------:|----------:|----------:|----------:|------:|------:|------:|----------:|\r\n| NeedsEscapingCurrent |         32 |            -1 |  89.13 us | 1.886 us | 1.764 us |  88.46 us |  87.40 us |  92.88 us |     - |     - |     - |         - |\r\n| NeedsEscapingCurrent |         32 |            12 | 208.18 us | 0.407 us | 0.340 us | 208.17 us | 207.67 us | 208.94 us |     - |     - |     - |         - |\r\n```\r\n\r\n#### PR_42073 (this one)\r\n\r\n```\r\n|               Method | DataLength | NegativeIndex |      Mean |    Error |   StdDev |    Median |       Min |       Max | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|--------------------- |----------- |-------------- |----------:|---------:|---------:|----------:|----------:|----------:|------:|------:|------:|----------:|\r\n| NeedsEscapingCurrent |         32 |            -1 |  74.71 us | 0.337 us | 0.263 us |  74.66 us |  74.29 us |  75.16 us |     - |     - |     - |         - |\r\n| NeedsEscapingCurrent |         32 |            12 | 203.55 us | 1.189 us | 1.054 us | 203.18 us | 202.71 us | 206.46 us |     - |     - |     - |         - |\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>WriteJson</summary>\r\n\r\n#### Master\r\n\r\n```\r\n|                    Type |            Method |         Mean |        Error |       StdDev |       Median |          Min |          Max |   Gen 0 |   Gen 1 |   Gen 2 | Allocated |\r\n|------------------------ |------------------ |-------------:|-------------:|-------------:|-------------:|-------------:|-------------:|--------:|--------:|--------:|----------:|\r\n|          IndexViewModel | SerializeToString |  42,653.8 ns |    365.08 ns |    323.63 ns |  42,589.4 ns |  42,135.8 ns |  43,221.9 ns |  1.2052 |       - |       - |   25568 B |\r\n|                Location | SerializeToString |   1,795.5 ns |     14.36 ns |     11.99 ns |   1,793.5 ns |   1,780.8 ns |   1,825.0 ns |  0.0290 |       - |       - |     584 B |\r\n|          LoginViewModel | SerializeToString |     802.8 ns |     12.37 ns |     11.57 ns |     803.8 ns |     784.7 ns |     824.8 ns |  0.0161 |       - |       - |     344 B |\r\n| MyEventsListerViewModel | SerializeToString | 921,083.1 ns | 11,547.56 ns | 10,801.59 ns | 918,623.4 ns | 898,673.1 ns | 941,143.2 ns | 44.1176 | 44.1176 | 44.1176 |  324336 B |\r\n```\r\n\r\n#### PR_42073 (this one)\r\n\r\n```\r\n|                    Type |            Method |         Mean |       Error |      StdDev |       Median |          Min |          Max |   Gen 0 |   Gen 1 |   Gen 2 | Allocated |\r\n|------------------------ |------------------ |-------------:|------------:|------------:|-------------:|-------------:|-------------:|--------:|--------:|--------:|----------:|\r\n|          IndexViewModel | SerializeToString |  39,136.4 ns |   176.95 ns |   147.76 ns |  39,128.9 ns |  38,954.2 ns |  39,407.3 ns |  1.2500 |       - |       - |   25608 B |\r\n|                Location | SerializeToString |   1,787.5 ns |    11.78 ns |    10.44 ns |   1,784.1 ns |   1,775.6 ns |   1,815.9 ns |  0.0286 |       - |       - |     584 B |\r\n|          LoginViewModel | SerializeToString |     754.7 ns |     8.18 ns |     6.83 ns |     752.6 ns |     748.7 ns |     771.6 ns |  0.0152 |       - |       - |     344 B |\r\n| MyEventsListerViewModel | SerializeToString | 892,401.1 ns | 4,694.61 ns | 4,161.65 ns | 891,426.9 ns | 886,616.1 ns | 901,364.4 ns | 45.1389 | 45.1389 | 45.1389 |  324824 B |\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n    <summary>SerializingNuget</summary>\r\n\r\n#### Master\r\n\r\n```\r\n|            Method |    Mean |    Error |   StdDev |  Median |     Min |     Max | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------ |--------:|---------:|---------:|--------:|--------:|--------:|------:|------:|------:|----------:|\r\n| SerializeToString | 1.043 s | 0.0049 s | 0.0044 s | 1.043 s | 1.035 s | 1.050 s |     - |     - |     - |  787.3 MB |\r\n```\r\n\r\n#### PR_42073 (this one)\r\n\r\n```\r\n|            Method |     Mean |   Error |  StdDev |   Median |      Min |      Max | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|------------------ |---------:|--------:|--------:|---------:|---------:|---------:|------:|------:|------:|----------:|\r\n| SerializeToString | 955.2 ms | 5.17 ms | 4.32 ms | 955.1 ms | 946.8 ms | 961.5 ms |     - |     - |     - |  787.3 MB |\r\n```\r\n\r\n</details>\r\n"},{"Id":"10773909857","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:02:11","Actor":"Marusyk","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42325","RelatedDescription":"Opened pull request \"Consolidate .netcoreapp.cs test files in System.Data.*\" (#42325) at dotnet/corefx","RelatedBody":"Contributes #41821\r\n\r\nPlease review\r\nThank you in advance"},{"Id":"10773594185","Type":"IssuesEvent","CreatedAt":"2019-11-02T21:39:33","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/41901","RelatedDescription":"Closed issue \"Guidance on HTTP2 client side and plan for HTTP3\" (#41901) at dotnet/corefx","RelatedBody":"We have `.NET Framework 4.5`, `.NET Core 2.1`, and `.NET Standard 2.0` client libraries on Windows and Linux that all use `HttpClient`. Looking for guidance on enabling `HTTP2` whenever possible, with fallback to HTTP1.1.\r\n\r\nFor background, our servers already support HTTP2 (and some even HTTP3/Quic) and everything is over TLS 1.2.\r\n\r\nLooking beyond, what's the plan for HTTP3/Quic on the client side? With some work from Cloudflare, we've enabled HTTP3 on some servers and the performance is again notable, so we're trying to establish the plan here."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10773886794","Type":"PullRequestEvent","CreatedAt":"2019-11-02T23:48:40","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39655","RelatedDescription":"Opened pull request \"Simplify how we compute and store the location we use to persist the sqlite storage cache.\" (#39655) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/39653\r\nFixes https://github.com/dotnet/roslyn/issues/23060\r\n\r\n"},{"Id":"10773716833","Type":"IssuesEvent","CreatedAt":"2019-11-02T22:28:48","Actor":"AArnott","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39654","RelatedDescription":"Opened issue \"CS8602 should fire within subsequent arguments of validating function\" (#39654) at dotnet/roslyn","RelatedBody":"**Version Used**: VS 16.5 Preview 1 (29502.12.master)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a .NET Core 3.0 library or console app.\r\n1. `Install-Package Microsoft.VisualStudio.Validation -Version 15.5.31`\r\n2. Introduce a source file with this content:\r\n\r\n```cs\r\nusing Microsoft;\r\n\r\n#nullable enable\r\n\r\nclass Program\r\n{\r\n    static object? v;\r\n    static void Main(string[] args)\r\n    {\r\n        Verify.Operation(v != null, v.ToString());\r\n        v.ToString();\r\n    }\r\n}\r\n``` \r\n\r\n**Expected Behavior**:\r\n\r\nCS8602 identifies that `v.ToString()` is a dereference of a possibly null value.\r\n\r\n**Actual Behavior**:\r\n\r\nNo warning is emitted of the null reference.\r\nIt seems that the `Verify.Operation` call, which is annotated to not return if the condition passed as the first argument is `false` is inappropriately applied as validated even for the subsequent arguments passed to that method.\r\n\r\n![image](https://user-images.githubusercontent.com/3548/68077689-d0fd7b80-fd8d-11e9-9d42-08bd6ac1a9d9.png)\r\n"},{"Id":"10773692958","Type":"IssuesEvent","CreatedAt":"2019-11-02T22:18:50","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39653","RelatedDescription":"Opened issue \"Persistence service no longer seems to work in OOP.\" (#39653) at dotnet/roslyn","RelatedBody":"While debugging through https://github.com/dotnet/roslyn/issues/39364 i discovered something very bad.\r\n\r\nSpecifically, in OOP we don't get persistence working *at all*.  This is because operations like AddImport end up calling over to OOP which end updoing the search on a \"RemoteTemporaryWorkspace\".  I have no idea what thi workspace is, but it's *not* the actual RemoteWorkspace that OOP persistence was written to use.\r\n\r\nThis specifically breaks because we are unable to get a Storage instance back from teh storage service due to the final line here:\r\n\r\n```c#\r\n        internal IChecksummedPersistentStorage GetStorageWorker(Solution solution)\r\n        {\r\n            lock (_lock)\r\n            {\r\n                // Do we already have storage for this?\r\n                if (solution.Id == _currentPersistentStorageSolutionId)\r\n                {\r\n                    // We do, great\r\n                    return PersistentStorageReferenceCountedDisposableWrapper.AddReferenceCountToAndCreateWrapper(_currentPersistentStorage);\r\n                }\r\n\r\n                if (!SolutionSizeAboveThreshold(solution))\r\n                {\r\n                    return NoOpPersistentStorage.Instance;\r\n                }\r\n\r\n                var workingFolder = _locationService.TryGetStorageLocation(solution.Id);\r\n\r\n                if (workingFolder == null)\r\n                {\r\n                    return NoOpPersistentStorage.Instance;\r\n                }\r\n```\r\n\r\nThere is no `workingFolder` because we have no actual `IPersistentStorageLocationService` for this workspace.  Specifically, we have defined IPersistentStorageLocationService for VS and for the normal RemoteWorkspace, like so:\r\n\r\n```c#\r\n    [ExportWorkspaceService(typeof(IPersistentStorageLocationService), layer: WorkspaceKind.RemoteWorkspace), Shared]\r\n    internal class RemotePersistentStorageLocationService : IPersistentStorageLocationService\r\n```\r\n\r\nBut we never defined this for the 'remote temporary workspace'.\r\n\r\nSeveral things i don't understand at all here:\r\n\r\n1. what is a \"remote temporary workspace\"?\r\n2. why are we using it for some calls (like the call 'add import' makes to search the external index)?\r\n3. what is even the right fix here? \r\n\r\nBasically, the entire scenario is broken making is so that that in OOP we have to compute the indices for at least some operations for the entire solutoin.  this likely leads to additional slowness and excess costs on startup for people trying to do normal operations that use OOP."},{"Id":"10773666104","Type":"IssuesEvent","CreatedAt":"2019-11-02T22:07:34","Actor":"Orace","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39652","RelatedDescription":"Opened issue \"[Proposal] Type alias in class/interface declaration\" (#39652) at dotnet/roslyn","RelatedBody":"This is a proposal to add a type alias in class and interface declaration.\r\n\r\n**Example**\r\n\r\nConsidering this scenario:\r\n\r\n```C#\r\n\r\n// Interface for cachable\r\ninterface Cachable<T>\r\n{\r\n   T WithCache();\r\n}\r\n\r\ninterface IDataProvider<TSource, TData> :\r\n    Cachable<DataProvider<TSource, TData>> // fluent pattern\r\n{\r\n}\r\n\r\n...\r\n\r\nExampleOfUse(IDataProvider<TSource, TData> dataProvider)\r\n{\r\n  var cachedDataProvider = dataProvider.WithCache();\r\n}\r\n\r\n```\r\n\r\nThe goal of this proposal is to simplify the declaration of `IDataProvider` like this: \r\n\r\n```C#\r\ninterface IDataProvider<TSource, TData> as TSelf:\r\n    Cachable<TSelf> // fluent pattern\r\n{\r\n}\r\n```\r\n\r\n-A type alias lifetime is limited to the class / interface in which it's declared\r\n-A type alias is visible from inner class\r\n-A type alias is not visible to herited / implementing class\r\n-A type alias have the same constraints as a type parameter\r\n-A type alias can't be used before its declaration\r\n\r\n**Example of valid use**\r\n\r\n```C#\r\nclass IntToStuffMapper as TSelf : IReadonlyDictionary<int, Stuff> as TSingleton\r\n{\r\n  // public static IReadonlyDictionary<int, Stuff> Instance { get; } = new IntToStuffMapper();\r\n  public static TSingleton Instance { get; } = new TSelf();\r\n}\r\n```\r\n\r\n**Example of invalid use**\r\n\r\n-A type alias is not visible to herited / implementing class\r\n```C#\r\nclass IntToStuffMapper as TSelf : IReadonlyDictionary<int, Stuff> as TSingleton {...}\r\n\r\nclass SpecializedIntToStuffMapper : IntToStuffMapper\r\n{\r\n  public static TSingleton Instance { get; } = new SpecializedIntToStuffMapper(); // error TSingleton not declared\r\n}\r\n\r\n-A type alias can't be used before its declaration\r\n\r\ninterface IFoo<T> {...}\r\ninterface IBar<T> {...}\r\n\r\n// If you think that self-aware type may reboot the universe look at this:\r\nclass Buzz :\r\n  IFoo<TBar> as TFoo, // error TBar used before its declaration\r\n  IBar<TFoo> as TBar\r\n{\r\n}\r\n\r\n```"},{"Id":"10773494183","Type":"IssuesEvent","CreatedAt":"2019-11-02T21:00:02","Actor":"GhostTyper","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39651","RelatedDescription":"Opened issue \"Nullable Reference Types: return MaybeNull with this modifier\" (#39651) at dotnet/roslyn","RelatedBody":"See this code snippet:\r\n\r\n``` csharp\r\npublic class UniversalHolder<T> : IEnumerable<T> where T : UniversalEnumerable?\r\n{\r\n    private T[] values;\r\n\r\n    /// <summary>\r\n    /// Returns an element of the holder.\r\n    /// </summary>\r\n    /// <param name=\"name\">The name of the element.</param>\r\n    /// <returns>The element specified by the index or null if the index\r\n    /// doesn't contain any element.</returns>\r\n    public T this[string name]\r\n    {\r\n        [return: MaybeNull]\r\n        get\r\n        {\r\n            foreach (T value in values)\r\n                if (value != null && value.Name == name)\r\n                    return value;\r\n\r\n            return default(T);  // Analyzer: Possible null reference return.\r\n        }\r\n    }\r\n```\r\n\r\nMy aim was to make it clear to the code analyzer that I wanted to maybe return `null`. However I utterly failed at this, because whatever I try, the analyzer tells me (loosely translated): \"possible null reference return\".\r\n\r\nI think this shouldn't happen - or what am I doin' wrong here?"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10774360552","Type":"IssuesEvent","CreatedAt":"2019-11-03T04:58:22","Actor":"josephmoresena","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7860","RelatedDescription":"Opened issue \"Error compilling console app with System.Data.SqlClient on Linux\" (#7860) at dotnet/corert","RelatedBody":"I'm getting the following error when I'm trying to compile a simple console app which connects to a Sql Server database in Ubuntu 19.10.\r\n\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__ImportPrincipalName':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/BooleanStorage.cs:180: undefined reference to `NetSecurityNative_ImportPrincipalName'\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__InitSecContext_0':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/ByteStorage.cs:162: undefined reference to `NetSecurityNative_InitSecContextEx'"},{"Id":"10773975079","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:42:37","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7859","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7859) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks"},{"Id":"10773958853","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:32:21","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7859","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7859) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10772306425","Type":"PullRequestEvent","CreatedAt":"2019-11-02T14:00:47","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7858","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7858) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"10772250807","Type":"PullRequestEvent","CreatedAt":"2019-11-02T13:41:10","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7858","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7858) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10762606863","Type":"PullRequestEvent","CreatedAt":"2019-11-01T00:19:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7855","RelatedDescription":"Merged pull request \"Disable multithreaded compilation\" (#7855) at dotnet/corert","RelatedBody":"I won't have time to look into the race condition anytime soon. Fingers crossed that crossgen2 hits it in CoreCLR repo and there will be paid time available to investigate."},{"Id":"10762605914","Type":"PullRequestEvent","CreatedAt":"2019-11-01T00:19:00","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7857) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10761486907","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:53:55","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7857) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10761451714","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:49:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7856","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7856) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams"},{"Id":"10759418833","Type":"PullRequestEvent","CreatedAt":"2019-10-31T16:36:36","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7856","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7856) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams"},{"Id":"10759330438","Type":"PullRequestEvent","CreatedAt":"2019-10-31T16:26:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7854","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7854) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @stephentoub"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10773615312","Type":"IssuesEvent","CreatedAt":"2019-11-02T21:47:47","Actor":"johnkors","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3853","RelatedDescription":"Opened issue \"`dotnet tool install/update` installs unlisted package\" (#3853) at dotnet/sdk","RelatedBody":"Hi,\r\n\r\nI unlisted a .NET Core global tool nuget package (latest version) I own on nuget.org, and when I run `dotnet tool install` or `dotnet tool update` it still installs the unlisted/deprecated latest version. Is this by design? I tried to mark it as deprecated as well, but no effect."},{"Id":"10772312374","Type":"PullRequestEvent","CreatedAt":"2019-11-02T14:02:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3851","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#3851) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 4:57 PM\r\n- **Commit**: f757dab263c59ffa51717974ec9a5da76a7a3b6e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19551.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"10772134199","Type":"IssuesEvent","CreatedAt":"2019-11-02T12:58:24","Actor":"jbartlau","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3852","RelatedDescription":"Opened issue \"Reading MSBuild registry properties from NuGet targets file fails in .NET Core CLI\" (#3852) at dotnet/sdk","RelatedBody":"I'm trying to create a NuGet package in order to redistribute a component that uses both managed and unmanaged dependencies (`my.dll` and `mydotnetcore.dll`). To copy the additional (unmanaged) file from a local installation to the output directory, we use a targets file. We read a registry key to find the local installation:\r\n\r\n**my.targets file:**\r\n```XML\r\n<PropertyGroup>\r\n  <InstDir>$(registry:HKEY_CURRENT_USER\\SOFTWARE\\myapp@LocalDir)</InstDir>\r\n</PropertyGroup\r\n```\r\n\r\nThe local file is then copied as follows:\r\n\r\n```\r\n<None Include=\"$(InstDir)\\my.dll\">\r\n  <Visible>False</Visible>\r\n  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n</None>\r\n```\r\n\r\n**my.nuspec file:**\r\n```\r\n…\r\n<files>\r\n  <file src=\"..\\mydotnetcore.dll\" target=\"lib\\NetCoreApp30\\mydotnetcore.dll\"/>\r\n  <file src=\"build\\my.targets\" target=\"build\\my.targets\"/>                       \r\n</files>\r\n```\r\n\r\nIf I add this NuGet package to a .NET Core 3 (VS 2019) application and build it in the VS IDE, the application is built and both DLLs are copied to the output directory - all is well.\r\n\r\nHowever when building using the .NET Core command-line (CLI) tool like so:\r\n\r\n    dotnet build\r\n\r\nthe unmanaged dependency is _not_ copied. I've found out that in this case, the `InstDir` property\r\n\r\n```\r\n<InstDir>$(registry:HKEY_CURRENT_USER\\SOFTWARE\\myapp@LocalDir)</InstDir>\r\n```\r\n\r\nseems to be empty.  Monitoring the process with Sysinternals' Process Monitor shows that the registry is not accessed. Apparently the entry is ignored. If an absolute path is entered for the property <InstDir>, the dll will also be copied just fine. \r\n\r\nI've also tried to get this running using a property function (`[MSBuild]::GetRegistryValue`) but got the same result.\r\n"},{"Id":"10771998582","Type":"PullRequestEvent","CreatedAt":"2019-11-02T12:02:08","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3851","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#3851) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 4:57 PM\r\n- **Commit**: f757dab263c59ffa51717974ec9a5da76a7a3b6e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19551.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"10770077994","Type":"PullRequestEvent","CreatedAt":"2019-11-01T22:43:59","Actor":"sfoslund","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3850","RelatedDescription":"Opened pull request \"Removing Redundant NuGetPackageId and PackageName metadata\" (#3850) at dotnet/sdk","RelatedBody":""},{"Id":"10769977795","Type":"PullRequestEvent","CreatedAt":"2019-11-01T22:20:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3849","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3849) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10769427544","Type":"PullRequestEvent","CreatedAt":"2019-11-01T20:40:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3849","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3849) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10767970661","Type":"IssuesEvent","CreatedAt":"2019-11-01T17:02:32","Actor":"JohanLarsson","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3848","RelatedDescription":"Opened issue \"Pack library with analyzer\" (#3848) at dotnet/sdk","RelatedBody":"It is common for me to have:\r\n\r\n```\r\nLib.csproj\r\nLib.Analyzers.csproj\r\n```\r\n\r\nWhere `Lib.csproj` does not have a project reference to `Lib.Analyzers.csproj` but I want `Lib.nupkg` to have package dependency to `Lib.Analyzers.nupkg`\r\n\r\nWhen using paket for packing it is just a matter of adding the following to `paket.template`:\r\n\r\n```\r\ndependencies\r\n  Lib.Analyzers\r\n```\r\n\r\nI tried adding a fake project reference as a hack\r\n```xml\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Lib.Analyzers\\Lib.Analyzers.csproj\">\r\n      <!-- hack for packing with package dependency -->\r\n      <PrivateAssets>none</PrivateAssets>\r\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\r\n      <SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>\r\n      <UndefineProperties>TargetFramework</UndefineProperties>\r\n    </ProjectReference>\r\n  </ItemGroup>\r\n```\r\n\r\nBut it did not work and had issues when building.\r\n\r\nIs there support for this scenario and if so where is it documented?"},{"Id":"10767808430","Type":"PullRequestEvent","CreatedAt":"2019-11-01T16:40:44","Actor":"dotnet-maestro-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3847","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3847) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10767785784","Type":"PullRequestEvent","CreatedAt":"2019-11-01T16:37:36","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3842","RelatedDescription":"Merged pull request \"Update branding for preview3\" (#3842) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"516783506","IsPullRequest":true,"CreatedAt":"2019-11-03T05:28:52","Actor":"jkotas","Number":"27641","RawContent":null,"Title":"Use simple Array.Copy overload where possible","State":"open","Body":"The simple Array.Copy overload does not come with a performance penalty anymore.","Url":"https://github.com/dotnet/coreclr/pull/27641","RelatedDescription":"Open PR \"Use simple Array.Copy overload where possible\" (#27641)"},{"Id":"516642870","IsPullRequest":true,"CreatedAt":"2019-11-03T05:12:47","Actor":"jkotas","Number":"27634","RawContent":null,"Title":"Rewrite of Array.Copy fast path in C#","State":"closed","Body":"Contributes to #27106","Url":"https://github.com/dotnet/coreclr/pull/27634","RelatedDescription":"Closed or merged PR \"Rewrite of Array.Copy fast path in C#\" (#27634)"},{"Id":"516763871","IsPullRequest":true,"CreatedAt":"2019-11-03T00:39:24","Actor":"jkotas","Number":"27640","RawContent":null,"Title":"Delete two more FCalls","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27640","RelatedDescription":"Open PR \"Delete two more FCalls\" (#27640)"},{"Id":"516724010","IsPullRequest":true,"CreatedAt":"2019-11-03T00:24:29","Actor":"GrabYourPitchforks","Number":"27637","RawContent":null,"Title":"Fix typo in Tuple.cs","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/42321","Url":"https://github.com/dotnet/coreclr/pull/27637","RelatedDescription":"Closed or merged PR \"Fix typo in Tuple.cs\" (#27637)"},{"Id":"516761047","IsPullRequest":true,"CreatedAt":"2019-11-03T00:01:04","Actor":"manandre","Number":"27639","RawContent":null,"Title":"Add span-based CopyTo and CopyToAsync methods","State":"open","Body":"Contributes to https://github.com/dotnet/corefx/issues/21472","Url":"https://github.com/dotnet/coreclr/pull/27639","RelatedDescription":"Open PR \"Add span-based CopyTo and CopyToAsync methods\" (#27639)"},{"Id":"516725469","IsPullRequest":true,"CreatedAt":"2019-11-02T21:22:20","Actor":"CarolEidt","Number":"27638","RawContent":null,"Title":"Add bilinear interpolation benchmark","State":"open","Body":"This is also checked in to the performance repo, but this has some fixes.\r\n\r\nFixes","Url":"https://github.com/dotnet/coreclr/pull/27638","RelatedDescription":"Open PR \"Add bilinear interpolation benchmark\" (#27638)"},{"Id":"516452893","IsPullRequest":true,"CreatedAt":"2019-11-02T19:29:23","Actor":"franksinankaya","Number":"27625","RawContent":null,"Title":"Compile with gcc 4.8","State":"closed","Body":"@am11 @janvorli @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/27625","RelatedDescription":"Closed or merged PR \"Compile with gcc 4.8\" (#27625)"},{"Id":"516691883","IsPullRequest":true,"CreatedAt":"2019-11-02T19:11:18","Actor":"am11","Number":"27636","RawContent":null,"Title":"Deduplicate some build configuration code","State":"open","Body":"While working on another PR, noticed that currently it requires\r\nupdating two places to add a new platform/compiler/architecture\r\nconfiguration. This PR tries to consolidate the code.\r\n\r\nChanges:\r\n\r\n* replace `read_array` custom function with a simple `grep -v` call.\r\n* remove `$__PortableLinux` from build-test.sh, as it is unused.\r\n* move argument parsing and few common functions in `build.sh` and\r\n  `build-test.sh` in `_build-commons.sh` and sourced it.\r\n  * combine the long case-esac block and sort cases alphabetically.\r\n    * add missing `hyphen-less|hyphened)` variants.\r\n  * sort `CPUName` and `OSName` list.\r\n  * changed `__CommonMSBuildArgs` from array to string in\r\n    `build-test.sh`, as it is in `build.sh`.\r\n* sort local argument names in build/build-test alphabetically at\r\n  declaration site.\r\n* merge `locate_llvm_exec` and `locate_gcc_exec` into a single\r\n  `locate_toolchain_exec` cmake function.\r\n  * this enables overriding individual llvm tool via `CLR_<TOOLNAME>`\r\n    environment variable, as it was supported by `locate_gcc_exec`\r\n    today.\r\n\r\ncc @jkoritzinsky, @janvorli","Url":"https://github.com/dotnet/coreclr/pull/27636","RelatedDescription":"Open PR \"Deduplicate some build configuration code\" (#27636)"},{"Id":"516671321","IsPullRequest":true,"CreatedAt":"2019-11-02T17:52:32","Actor":"trylek","Number":"27635","RawContent":null,"Title":"Consolidation resiliency fixes in CoreCLR build scripts","State":"open","Body":"Backport of my consolidation changes aimed at making principal\r\nCoreCLR build scripts orthogonal to repo consolidation.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/27635","RelatedDescription":"Open PR \"Consolidation resiliency fixes in CoreCLR build scripts\" (#27635)"},{"Id":"516610774","IsPullRequest":true,"CreatedAt":"2019-11-02T17:13:47","Actor":"Bond-009","Number":"27632","RawContent":null,"Title":"EnvironGetenv: use strncmp instead of strlen and memcmp","State":"closed","Body":"Instead of iterating twice over the string, first for searching the\r\nnull-terminator and then to compare it to `name`, we only iterate\r\nover it once.\r\n\r\nRef: https://github.com/dotnet/corefx/issues/42216","Url":"https://github.com/dotnet/coreclr/pull/27632","RelatedDescription":"Closed or merged PR \"EnvironGetenv: use strncmp instead of strlen and memcmp\" (#27632)"},{"Id":"516613650","IsPullRequest":true,"CreatedAt":"2019-11-02T16:59:26","Actor":"trylek","Number":"27633","RawContent":null,"Title":"Clean up package restoration in CoreCLR test build","State":"closed","Body":"During investigation of package version issues in consolidation\r\nscouting I noticed that package restoration logic in the test build\r\nscript is quite silly: we first restore all packages but ignore the\r\nexit code, subsequently we restore all packages again before\r\nbuilding each test chunk and fail if we're unable to.\r\n\r\nI have simplified this so that we properly exit when we fail to\r\nrestore packages upfront; after that, we no longer need to restore\r\npackages before building each test chunk.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/27633","RelatedDescription":"Closed or merged PR \"Clean up package restoration in CoreCLR test build\" (#27633)"},{"Id":"516571992","IsPullRequest":true,"CreatedAt":"2019-11-02T15:40:53","Actor":"dotnet-maestro[bot]","Number":"27627","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 4:57 PM\r\n- **Commit**: f757dab263c59ffa51717974ec9a5da76a7a3b6e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19551.3\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27627","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#27627)"},{"Id":"516600490","IsPullRequest":true,"CreatedAt":"2019-11-02T15:10:12","Actor":"huoyaoyuan","Number":"27631","RawContent":null,"Title":"Remove staled clrdbg.sln file.","State":"closed","Body":"The file was introduced in initial commit and hasn't changed. It's pointing removed project files now.\r\nLike dotnet/roslyn#39261, it should be simply removed.","Url":"https://github.com/dotnet/coreclr/pull/27631","RelatedDescription":"Closed or merged PR \"Remove staled clrdbg.sln file.\" (#27631)"},{"Id":"516572388","IsPullRequest":true,"CreatedAt":"2019-11-02T14:37:51","Actor":"dotnet-maestro[bot]","Number":"27628","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19551.24\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27628","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#27628)"},{"Id":"516572433","IsPullRequest":true,"CreatedAt":"2019-11-02T14:28:10","Actor":"dotnet-maestro[bot]","Number":"27629","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 9:47 AM\r\n- **Commit**: 6013b0ac35043c72715f7de80838aaa3ee4f9bd1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19552.1\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27629","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#27629)"},{"Id":"516487097","IsPullRequest":true,"CreatedAt":"2019-11-02T13:29:46","Actor":"jkotas","Number":"27626","RawContent":null,"Title":"Normalize trailing whitespaces","State":"closed","Body":"Normalize trailing whitespaces in frequently changing files (docs and sources)","Url":"https://github.com/dotnet/coreclr/pull/27626","RelatedDescription":"Closed or merged PR \"Normalize trailing whitespaces\" (#27626)"},{"Id":"516572649","IsPullRequest":false,"CreatedAt":"2019-11-02T12:13:18","Actor":"huoyaoyuan","Number":"27630","RawContent":null,"Title":"JIT: suboptimal codegen for inlined local function","State":"open","Body":"https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxNMAfAAgJgIwCwAUFgMwAEu5AwsQN7HlOUVZ4AM5AsngBQCWAOxjl+ASkbMGRZrMoAWcgBleY8gF4AfKIDUOgNyS5y1YZnHKAdlEA6ACoB7AMowEQgOamj5AL7fvZJQc3DgCwqIS5kzSFroG3rJY1vz2zq4eXlG+/lmBWIpcpGEi4t4xFvkmalpxZrEqYnUVeACcAo3eflkBrAXyxRFlCcz8ek3GbG3i49lEPkA===\r\n\r\nSource:\r\n```csharp\r\nusing System;\r\npublic class C\r\n{\r\n    public string M1(int i)\r\n    {\r\n        void L() => i++;\r\n        L();\r\n        return i.ToString();\r\n    }\r\n    \r\n    public string M2(int i)\r\n    {\r\n        i++;\r\n        return i.ToString();\r\n    }\r\n    \r\n    public void M3(int i)\r\n    {\r\n        void L() => i++;\r\n        L();\r\n        Console.WriteLine(i);\r\n    }\r\n    \r\n    public void M4(int i)\r\n    {\r\n        i++;\r\n        Console.WriteLine(i);\r\n    }\r\n}\r\n```\r\n\r\nASM(master on 24 Sep 2019):\r\n```asm\r\nC.M1(Int32)\r\n    L0000: push eax\r\n    L0001: xor eax, eax\r\n    L0003: mov [esp], eax\r\n    L0006: mov [esp], edx\r\n    L0009: mov ecx, [esp]\r\n    L000c: inc ecx\r\n    L000d: mov [esp], ecx\r\n    L0010: lea ecx, [esp]\r\n    L0013: mov ecx, [ecx]\r\n    L0015: xor edx, edx\r\n    L0017: push 0x0\r\n    L0019: push edx\r\n    L001a: xor edx, edx\r\n    L001c: call System.Number.FormatInt32(Int32, System.ReadOnlySpan`1<Char>, System.IFormatProvider)\r\n    L0021: pop ecx\r\n    L0022: ret\r\n\r\nC.M2(Int32)\r\n    L0000: inc edx\r\n    L0001: mov ecx, edx\r\n    L0003: xor edx, edx\r\n    L0005: push 0x0\r\n    L0007: push edx\r\n    L0008: xor edx, edx\r\n    L000a: call System.Number.FormatInt32(Int32, System.ReadOnlySpan`1<Char>, System.IFormatProvider)\r\n    L000f: ret\r\n\r\nC.M3(Int32)\r\n    L0000: lea ecx, [edx+0x1]\r\n    L0003: call System.Console.WriteLine(Int32)\r\n    L0008: ret\r\n\r\nC.M4(Int32)\r\n    L0000: inc edx\r\n    L0001: mov ecx, edx\r\n    L0003: call System.Console.WriteLine(Int32)\r\n    L0008: ret\r\n```\r\n\r\nSurprisingly, the best codegen seems to be `M3`: JIT knows edx is unused, and doesn't write it.\r\n\r\nThe major difference on IL of `M1` and `M3` is how to fetch `i`: `M3` uses it by value, uses `ldloc` and `ldfld` which means a hidden copy. `M1` uses `ldloca` and `ldflda` to make changes happens on original address. But `Int32` is readonly struct, JIT should be aware about this and treat the two operations identical.","Url":"https://github.com/dotnet/coreclr/issues/27630","RelatedDescription":"Open issue \"JIT: suboptimal codegen for inlined local function\" (#27630)"},{"Id":"516380845","IsPullRequest":true,"CreatedAt":"2019-11-02T11:19:46","Actor":"trylek","Number":"27624","RawContent":null,"Title":"Introduce YAML variable coreClrRepoRoot","State":"closed","Body":"In the repo consolidation scouting exercises I keep stumbling\r\nover sanitizing paths to build scripts. I have realized that, by\r\nintroducing a bunch of new variables I can unify Windows and Unix\r\nscript executions and make the subsequent transformations much\r\nsimpler.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/27624","RelatedDescription":"Closed or merged PR \"Introduce YAML variable coreClrRepoRoot\" (#27624)"},{"Id":"516372315","IsPullRequest":true,"CreatedAt":"2019-11-02T05:56:59","Actor":"sywhang","Number":"27621","RawContent":null,"Title":"Make IncrementingEventCounter test less timing-sensitive","State":"closed","Body":"This makes the IncrementingEventCounter test more resilient to timing issues from Checked builds, which make calls to EventSource much slower than they are in Release builds. \r\n\r\nThis fixes #27082","Url":"https://github.com/dotnet/coreclr/pull/27621","RelatedDescription":"Closed or merged PR \"Make IncrementingEventCounter test less timing-sensitive\" (#27621)"},{"Id":"516358816","IsPullRequest":true,"CreatedAt":"2019-11-02T00:29:19","Actor":"elinor-fung","Number":"27618","RawContent":null,"Title":"Remove FEATURE_VERSIONING_LOG define","State":"closed","Body":"`FEATURE_VERSIONING_LOG` was Windows-only and also didn't actually have enough details to be that useful.","Url":"https://github.com/dotnet/coreclr/pull/27618","RelatedDescription":"Closed or merged PR \"Remove FEATURE_VERSIONING_LOG define\" (#27618)"},{"Id":"516339010","IsPullRequest":true,"CreatedAt":"2019-11-01T23:20:14","Actor":"chcosta","Number":"27616","RawContent":null,"Title":"Validate Arcade script changes don't break coreclr","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27616","RelatedDescription":"Closed or merged PR \"Validate Arcade script changes don't break coreclr\" (#27616)"},{"Id":"516257715","IsPullRequest":true,"CreatedAt":"2019-11-01T23:18:09","Actor":"AaronRobinsonMSFT","Number":"27614","RawContent":null,"Title":"Disable JIT/Directed/pinvoke/pinvoke-examples test.","State":"closed","Body":"Fixes #27602\r\n\r\n/cc @benaadams @echesakovMSFT ","Url":"https://github.com/dotnet/coreclr/pull/27614","RelatedDescription":"Closed or merged PR \"Disable JIT/Directed/pinvoke/pinvoke-examples test.\" (#27614)"},{"Id":"516379449","IsPullRequest":true,"CreatedAt":"2019-11-01T22:31:06","Actor":"nattress","Number":"27623","RawContent":null,"Title":"Merge master -> single-exe","State":"open","Body":"Merging master -> single-exe times out in the Github web UI. Create a dummy PR and then merge the changes into the branch and force push.","Url":"https://github.com/dotnet/coreclr/pull/27623","RelatedDescription":"Open PR \"Merge master -> single-exe\" (#27623)"},{"Id":"516373292","IsPullRequest":false,"CreatedAt":"2019-11-01T22:13:50","Actor":"jashook","Number":"27622","RawContent":null,"Title":"Linux arm build fails occasionally","State":"open","Body":"See:\r\n\r\n```\r\n\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2816:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nGCEnd_V1T_TRACEPOINT_INSTANCE(GCEnd_V1)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:759:27: note: expanded from macro 'GCEnd_V1T_TRACEPOINT_INSTANCE'\r\n    ModuleLoadUnload_V1_TRACEPOINT_ARGS,\r\n                          ^~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'ACEPOINT_ARGS'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:51:27: note: expanded from here\r\n\"const unsigned intT Count\\ const unsigned inti Depth_ const unsigned shortt ClrInstanceID\"\r\n                          ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2821:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nGCCreateSegmentT_TRACEPOINT_INSTANCE(GCCreateSegment)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:608:10: note: expanded from macro 'GCCreateSegmentT_TRACEPOINT_INSTANCE'\r\nTRACEPOINT_EVENT_INSTANCE(\\\r\n         ^~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'T_EVENT_INSTANCE'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:71:26: note: expanded from here\r\n\"const unsigned long long\\ Addressn const unsigned long long\\ SizeR const unsigned inti Type\"\r\n                         ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2821:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nGCCreateSegmentT_TRACEPOINT_INSTANCE(GCCreateSegment)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:608:10: note: expanded from macro 'GCCreateSegmentT_TRACEPOINT_INSTANCE'\r\nTRACEPOINT_EVENT_INSTANCE(\\\r\n         ^~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'T_EVENT_INSTANCE'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:71:61: note: expanded from here\r\n\"const unsigned long long\\ Addressn const unsigned long long\\ SizeR const unsigned inti Type\"\r\n                                                            ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2833:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nGCAllocationTick_V2T_TRACEPOINT_INSTANCE(GCAllocationTick_V2)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:1740:32: note: expanded from macro 'GCAllocationTick_V2T_TRACEPOINT_INSTANCE'\r\n#define AppDomainMemAllocated_TRACEPOINT_ARGS \\\r\n                               ^~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'RACEPOINT_ARGS'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:13:171: note: expanded from here\r\n\"const unsigned int  AllocationAmounta const unsigned intu AllocationKinda const unsigned shorte ClrInstanceIDg const unsigned long longA AllocationAmount64N const size_t\\ TypeIDd const char\\\r\n                                                                                                                                                                          ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2833:1: error: unknown escape sequence '\\xA' [-Werror,-Wunknown-escape-sequence]\r\nGCAllocationTick_V2T_TRACEPOINT_INSTANCE(GCAllocationTick_V2)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:1740:32: note: expanded from macro 'GCAllocationTick_V2T_TRACEPOINT_INSTANCE'\r\n#define AppDomainMemAllocated_TRACEPOINT_ARGS \\\r\n                               ^~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'RACEPOINT_ARGS'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:14:1: note: expanded from here\r\n TypeNamee const unsigned intf HeapIndex\"\r\n^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2851:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nGCGenerationRangeT_TRACEPOINT_INSTANCE(GCGenerationRange)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:895:11: note: expanded from macro 'GCGenerationRangeT_TRACEPOINT_INSTANCE'\r\n        const char*, EventName, \\\r\n          ^~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'nst'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:69:21: note: expanded from here\r\n\"const unsigned char\\ GenerationR const size_tn RangeStartd const unsigned long longn RangeUsedLength_ const unsigned long longk RangeReservedLength  const unsigned shortg ClrInstanceID\"\r\n                    ^~\r\n[  1%] Building C object src/pal/src/libunwind/src/CMakeFiles/libunwind.dir/mi/dyn-register.c.o\r\nScanning dependencies of target coreclrtraceptprovider\r\n[  1%] Building CXX object src/pal/src/eventprovider/lttngprovider/CMakeFiles/coreclrtraceptprovider.dir/lttng/traceptprovdotnetruntime.cpp.o\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2936:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nMethodJittingStartedT_TRACEPOINT_INSTANCE(MethodJittingStarted)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:1635:1: note: expanded from macro 'MethodJittingStartedT_TRACEPOINT_INSTANCE'\r\n        const unsigned int, MethodILSize, \\\r\n^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from here\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:22:36: note: expanded from here\r\n\"const unsigned long long_ MethodID\\ const unsigned long longn ModuleIDe const unsigned intM MethodTokenR const unsigned intt MethodILSizeR const charGS MethodNamespacet const char,  MethodNameo const char\\\r\n                                   ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2936:1: error: unknown escape sequence '\\xA' [-Werror,-Wunknown-escape-sequence]\r\nMethodJittingStartedT_TRACEPOINT_INSTANCE(MethodJittingStarted)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:1635:1: note: expanded from macro 'MethodJittingStartedT_TRACEPOINT_INSTANCE'\r\n        const unsigned int, MethodILSize, \\\r\n^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from here\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:23:1: note: expanded from here\r\n MethodSignature\"\r\n^~\r\n[  1%] Building C object src/pal/src/libunwind/src/CMakeFiles/libunwind.dir/mi/Ldyn-extract.c.o\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2948:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nDomainModuleLoadUnload_V1T_TRACEPOINT_INSTANCE(DomainModuleLoad_V1)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2285:6: note: expanded from macro 'DomainModuleLoadUnload_V1T_TRACEPOINT_INSTANCE'\r\nTRACEPOINT_EVENT_CLASS(\r\n     ^~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'POINT_EVENT_CLASS'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:8:217: note: expanded from here\r\n\"const unsigned long long_ ModuleIDn const unsigned long longn AssemblyID  const unsigned long long1 AppDomainID_ const unsigned intV ModuleFlags( const unsigned inth Reserved1a const char   ModuleILPatho const char \\ ModuleNativePathL const unsigned shortA ClrInstanceID\"\r\n                                                                                                                                                                                                                        ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2965:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nStrongNameVerification_V1T_TRACEPOINT_INSTANCE(StrongNameVerificationStart_V1)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2165:17: note: expanded from macro 'StrongNameVerification_V1T_TRACEPOINT_INSTANCE'\r\n        ctf_string(MethodSignature, MethodSignature)\r\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'ng'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:21:20: note: expanded from here\r\n\"const unsigned int\\ VerificationFlagsi const unsigned int  ErrorCodec const char,  FullyQualifiedAssemblyNameo const unsigned shorte ClrInstanceID\"\r\n                   ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2967:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nStrongNameVerification_V1T_TRACEPOINT_INSTANCE(StrongNameVerificationStop_V1)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2165:17: note: expanded from macro 'StrongNameVerification_V1T_TRACEPOINT_INSTANCE'\r\n        ctf_string(MethodSignature, MethodSignature)\r\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'ng'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:24:20: note: expanded from here\r\n\"const unsigned int\\ VerificationFlagsi const unsigned int  ErrorCodec const char,  FullyQualifiedAssemblyNameo const unsigned shorte ClrInstanceID\"\r\n                   ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2969:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nAuthenticodeVerification_V1T_TRACEPOINT_INSTANCE(AuthenticodeVerificationStart_V1)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2792:1: note: expanded from macro 'AuthenticodeVerification_V1T_TRACEPOINT_INSTANCE'\r\nTRACEPOINT_EVENT_INSTANCE(\\\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'TRACEPOINT_EVENT_INSTANCE'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:28:78: note: expanded from here\r\n const unsigned intg ErrorCode4 const char   ModulePath  const unsigned short\\ ClrInstanceID\"\r\n                                                                             ^~\r\nIn file included from /__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:24:\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2971:1: error: unknown escape sequence '\\ ' [-Werror,-Wunknown-escape-sequence]\r\nAuthenticodeVerification_V1T_TRACEPOINT_INSTANCE(AuthenticodeVerificationStop_V1)\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/__w/2/s/bin/obj/Linux.arm.Release/src/pal/src/eventprovider/lttngprovider/lttng/tpdotnetruntime.h:2792:1: note: expanded from macro 'AuthenticodeVerification_V1T_TRACEPOINT_INSTANCE'\r\nTRACEPOINT_EVENT_INSTANCE(\\\r\n^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:513:2: note: expanded from macro 'TRACEPOINT_EVENT_INSTANCE'\r\n        _DEFINE_TRACEPOINT(provider, name, _TP_PARAMS(args))\r\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:354:4: note: expanded from macro '_DEFINE_TRACEPOINT'\r\n                        _TP_EXTRACT_STRING(_args),                              \\\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n/crossrootfs/arm/usr/include/lttng/tracepoint.h:340:33: note: expanded from macro '_TP_EXTRACT_STRING'\r\n#define _TP_EXTRACT_STRING(...) #__VA_ARGS__\r\n                                ^~~~~~~~~~~~\r\n<scratch space>:33:78: note: expanded from here\r\n const unsigned intg ErrorCode4 const char   ModulePath  const unsigned short\\ ClrInstanceID\"\r\n                                                                             ^~\r\n[  1%] Building C object src/corefx/System.Globalization.Native/CMakeFiles/System.Globalization.Native.dir/__/__/__/version.c.o\r\n[  1%] Linking C shared library System.Globalization.Native.so\r\n[  1%] Building C object src/pal/src/libunwind/src/CMakeFiles/libunwind.dir/mi/Lfind_dynamic_proc_info.c.o\r\nVerifying System.Globalization.Native dependencies\r\n$<TARGET_FILE:System.Globalization.Native>.dbg\r\n[  2%] Building C object src/pal/src/libunwind/src/CMakeFiles/libunwind.dir/mi/Lget_accessors.c.o\r\n[  2%] Built target System.Globalization.Native\r\n[  2%] Building CXX object src/pal/src/eventprovider/lttngprovider/CMakeFiles/coreclrtraceptprovider.dir/lttng/traceptprovdotnetruntimerundown.cpp.o\r\n13 errors generated.\r\nsrc/pal/src/eventprovider/lttngprovider/CMakeFiles/eventprovider.dir/build.make:100: recipe for target 'src/pal/src/eventprovider/lttngprovider/CMakeFiles/eventprovider.dir/lttng/eventprovdotnetruntime.cpp.o' failed\r\nmake[2]: *** [src/pal/src/eventprovider/lttngprovider/CMakeFiles/eventprovider.dir/lttng/eventprovdotnetruntime.cpp.o] Error 1\r\nmake[1]: *** [src/pal/src/eventprovider/lttngprovider/CMakeFiles/eventprovider.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27622","RelatedDescription":"Open issue \"Linux arm build fails occasionally\" (#27622)"},{"Id":"516368104","IsPullRequest":true,"CreatedAt":"2019-11-01T21:59:25","Actor":"jkoritzinsky","Number":"27620","RawContent":null,"Title":"Lazily generate native type layout information","State":"open","Body":"Currently, the native layout information for every non-auto-layout type is generated at type-load time, even if managed code never uses the native type. This design has lead to a few limitations in our field marshaling validation, as well as forced field marshalling initialization code to run during method-table building, causing some odd initialization ordering designs because of what data is available at what time.\r\n\r\nThis PR changes native layout information to only ever be initialized when user code or runtime code requests the native layout of a type and the type is non-blittable. To enable this, the function `IsFieldBlittable` does a fast, metadata-based blittability check that doesn't need to run all of the marshaler classification logic. When the runtime requests native layout information from a MethodTable that is blittable, it falls back to the managed information. In other cases, it generates the native information and stores it in its `LayoutEEClass` for later use.","Url":"https://github.com/dotnet/coreclr/pull/27620","RelatedDescription":"Open PR \"Lazily generate native type layout information\" (#27620)"},{"Id":"516360807","IsPullRequest":false,"CreatedAt":"2019-11-01T21:40:53","Actor":"jeremybparagon","Number":"27619","RawContent":null,"Title":"Conditional format specifier and negative zero","State":"open","Body":"I am looking for a way to make something like `(-0.01).ToString(\"0.#;-0.#\")` produce `\"0\"`. In .NET Core 3.0, it produces `\"-0\"`. This makes the conditional format specifier unusable for me.\r\n\r\nDuring my experimentation, I noticed that `(-0.01).ToString(\"p0.#;n0.#\")` produces `\"-p0\"`. Thus, it seems that the statement \"negative values are always displayed without a minus sign when section separators are used\" at https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings#the--section-separator is not followed here.","Url":"https://github.com/dotnet/coreclr/issues/27619","RelatedDescription":"Open issue \"Conditional format specifier and negative zero\" (#27619)"},{"Id":"516347355","IsPullRequest":false,"CreatedAt":"2019-11-01T21:06:17","Actor":"am11","Number":"27617","RawContent":null,"Title":"Trailing whitespaces in the code-base","State":"open","Body":"When working with coreclr, some editors highlight trialing whitespaces (as in there is something to fix), and there are many instances in the current code-base.\r\n\r\nIt would be nice if:\r\n\r\n```sh\r\ngit ls-files :/ | xargs sed -i 's/[[:space:]]*$//'\r\n```\r\n\r\nis ran on sources and checked in once at root (or one directory at a time) via bot account. After that formatting job is updated to fail when:\r\n\r\n```sh\r\ngit diff --name-only origin/master...HEAD |  xargs sed -i 's/[[:space:]]*$//'\r\n```\r\n\r\nproduces a diff:\r\n\r\n```sh\r\nif ! git diff-index --quiet HEAD --\r\nthen\r\n  echo \"Error: Found trailing whitespace in diff.\"\r\n  echo \"Please run `git diff --name-only origin/master...HEAD |  xargs sed -i 's/[[:space:]]*$//'`\"\r\n  echo \"to fix your branch.\"\r\n\r\n  exit 1\r\nfi\r\n```\r\n\r\nThis way, it would become a shared responsibility and something that PR author can easily fix in branch.","Url":"https://github.com/dotnet/coreclr/issues/27617","RelatedDescription":"Open issue \"Trailing whitespaces in the code-base\" (#27617)"},{"Id":"516267903","IsPullRequest":true,"CreatedAt":"2019-11-01T20:16:42","Actor":"brianrob","Number":"27615","RawContent":null,"Title":"Update path to crossgen in performance tracing documentation","State":"closed","Body":"Starting with .NET Core 3.0, the name for the nuget package that contains the runtime has changed.  Updating the performance tracing documentation to reflect this.","Url":"https://github.com/dotnet/coreclr/pull/27615","RelatedDescription":"Closed or merged PR \"Update path to crossgen in performance tracing documentation\" (#27615)"},{"Id":"516228442","IsPullRequest":true,"CreatedAt":"2019-11-01T16:54:42","Actor":"dotnet-maestro-bot","Number":"27613","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @mmitche\n* @jashook\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27613","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27613)"},{"Id":"516185664","IsPullRequest":true,"CreatedAt":"2019-11-01T16:19:13","Actor":"jkotas","Number":"27612","RawContent":null,"Title":"Delete clr-configuration-knobs.md","State":"closed","Body":"This is permanently out of date and the document creates a false sense of all these settings being officially supported. The officially supported settings are documented in https://github.com/dotnet/docs\r\n\r\nFixes #27611","Url":"https://github.com/dotnet/coreclr/pull/27612","RelatedDescription":"Closed or merged PR \"Delete clr-configuration-knobs.md\" (#27612)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"516763544","IsPullRequest":true,"CreatedAt":"2019-11-03T01:04:54","Actor":"dotnet-maestro[bot]","Number":"13022","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191102.5\r\n- **Date Produced**: 11/2/2019 11:07 PM\r\n- **Commit**: fe164cd7666a2398a7959d31b4c528f3e71c018a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19552.5\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13022","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13022)"},{"Id":"515889929","IsPullRequest":true,"CreatedAt":"2019-11-03T01:03:09","Actor":"dotnet-maestro[bot]","Number":"13014","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13014","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13014)"},{"Id":"516580784","IsPullRequest":true,"CreatedAt":"2019-11-02T13:15:26","Actor":"dotnet-maestro[bot]","Number":"13021","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 11:01 AM\r\n- **Commit**: 507379d642c0fb9b17913cfa3e316c52c1163373\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19552.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13021","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13021)"},{"Id":"516540666","IsPullRequest":true,"CreatedAt":"2019-11-02T09:55:33","Actor":"dotnet-maestro[bot]","Number":"13020","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.16\r\n- **Date Produced**: 11/2/2019 7:24 AM\r\n- **Commit**: 5709cd95b2db28ee2546be7797b913b129d97655\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19551.16\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13020","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13020)"},{"Id":"516443700","IsPullRequest":true,"CreatedAt":"2019-11-02T03:15:29","Actor":"dotnet-maestro[bot]","Number":"13019","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.11\r\n- **Date Produced**: 11/2/2019 1:08 AM\r\n- **Commit**: 4d3eccccf012d154a3c591964b0cb455014e2b7d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19551.11\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13019","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13019)"},{"Id":"515305447","IsPullRequest":true,"CreatedAt":"2019-11-02T01:02:55","Actor":"v-zbsail","Number":"13007","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli release/3.1.1xx | 20191031","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13007","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/cli release/3.1.1xx | 20191031\" (#13007)"},{"Id":"516397887","IsPullRequest":true,"CreatedAt":"2019-11-02T00:15:34","Actor":"dotnet-maestro[bot]","Number":"13017","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 10:41 PM\r\n- **Commit**: 6048f06be9dc82e688644debd2bdd66b88473429\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview3.19551.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13017","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13017)"},{"Id":"516405798","IsPullRequest":true,"CreatedAt":"2019-11-01T23:55:12","Actor":"dotnet-maestro[bot]","Number":"13018","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.9\r\n- **Date Produced**: 11/1/2019 11:10 PM\r\n- **Commit**: 0f54cd75536340715c02e9913aa5a8d435e76518\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19551.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13018","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#13018)"},{"Id":"516258755","IsPullRequest":true,"CreatedAt":"2019-11-01T18:25:33","Actor":"dotnet-maestro[bot]","Number":"13016","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191101.2\r\n- **Date Produced**: 11/1/2019 5:00 PM\r\n- **Commit**: 0f41b3f4909ea5a1955fccf5a2125ca1a76b69c7\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview3.19551.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13016","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13016)"},{"Id":"516211090","IsPullRequest":true,"CreatedAt":"2019-11-01T16:29:57","Actor":"nguerrera","Number":"13015","RawContent":null,"Title":"Add clarification about interim state of repo consolidation","State":"closed","Body":"@MichaelSimons @livarcocc @dsplaisted ","Url":"https://github.com/dotnet/cli/pull/13015","RelatedDescription":"Closed or merged PR \"Add clarification about interim state of repo consolidation\" (#13015)"},{"Id":"515745548","IsPullRequest":true,"CreatedAt":"2019-11-01T07:29:51","Actor":"dotnet-maestro[bot]","Number":"13013","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191031.5\r\n- **Date Produced**: 11/1/2019 6:16 AM\r\n- **Commit**: 61f8ebe1b773d85117bcb64f48abcc8377c830c2\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19531.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13013","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13013)"},{"Id":"515691760","IsPullRequest":true,"CreatedAt":"2019-11-01T02:48:26","Actor":"dotnet-maestro[bot]","Number":"13010","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191031.7\r\n- **Date Produced**: 11/1/2019 1:04 AM\r\n- **Commit**: e89f2f450263f865f20c2c7b77f4e30daedc7c47\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19531.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13010","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13010)"},{"Id":"515716363","IsPullRequest":true,"CreatedAt":"2019-10-31T22:30:03","Actor":"mmitche","Number":"13011","RawContent":null,"Title":"Update branding to preview3","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13011","RelatedDescription":"Closed or merged PR \"Update branding to preview3\" (#13011)"},{"Id":"515056603","IsPullRequest":true,"CreatedAt":"2019-10-31T21:06:01","Actor":"wli3","Number":"13003","RawContent":null,"Title":"Remove signature on MAC host for dotnet tools","State":"closed","Body":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar","Url":"https://github.com/dotnet/cli/pull/13003","RelatedDescription":"Closed or merged PR \"Remove signature on MAC host for dotnet tools\" (#13003)"},{"Id":"515737459","IsPullRequest":true,"CreatedAt":"2019-10-31T20:52:03","Actor":"donnie-msft","Number":"13012","RawContent":null,"Title":"--skip-duplicate added to `dotnet nuget push` parsing","State":"open","Body":"Fix for https://github.com/NuGet/Home/issues/8778\r\n\r\nNew option --skip-duplicate needs to be added to the dotnet parser for `nuget push` to support <tab> auto-completion and telemetry.\r\n\r\nThe [NuGet code changes](https://github.com/NuGet/NuGet.Client/pull/3083) to add this command were inserted into dotnet/cli [release/3.1.1xx](https://github.com/dotnet/cli/pull/12965)\r\n\r\n//cc @livarcocc @rrelyea","Url":"https://github.com/dotnet/cli/pull/13012","RelatedDescription":"Open PR \"--skip-duplicate added to `dotnet nuget push` parsing\" (#13012)"},{"Id":"515690786","IsPullRequest":true,"CreatedAt":"2019-10-31T19:33:36","Actor":"crummel","Number":"13009","RawContent":null,"Title":"Source-build fixes for 3.0.x.","State":"open","Body":"Retargeted version of https://github.com/dotnet/cli/pull/12781.\r\n\r\n- Fixed PackageVersion property name.\r\n- Excluded a couple more projects from source-build.","Url":"https://github.com/dotnet/cli/pull/13009","RelatedDescription":"Open PR \"Source-build fixes for 3.0.x.\" (#13009)"},{"Id":"515027000","IsPullRequest":true,"CreatedAt":"2019-10-31T18:49:52","Actor":"dotnet-maestro[bot]","Number":"13001","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.6\r\n- **Date Produced**: 10/31/2019 4:30 PM\r\n- **Commit**: d992cb6bb8368a7f3161fbf1a863b073ec28c956\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19531.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19530.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13001","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13001)"},{"Id":"515442387","IsPullRequest":true,"CreatedAt":"2019-10-31T14:20:34","Actor":"dotnet-maestro[bot]","Number":"13008","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 11:54 AM\r\n- **Commit**: 0faf33914345956525640464c854cf85da5a6573\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19531.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13008","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13008)"},{"Id":"515206602","IsPullRequest":true,"CreatedAt":"2019-10-31T07:25:29","Actor":"dotnet-maestro[bot]","Number":"13006","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.11\r\n- **Date Produced**: 10/31/2019 5:13 AM\r\n- **Commit**: 63c802bae20b3cd5e704d6dd3ed90bc8225bc60e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.11\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13006","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13006)"},{"Id":"515138069","IsPullRequest":true,"CreatedAt":"2019-10-31T04:10:27","Actor":"dotnet-maestro[bot]","Number":"13005","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.9\r\n- **Date Produced**: 10/31/2019 2:01 AM\r\n- **Commit**: 11a84e25b49677b52b06768a7cba3619eb7e8cf1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13005","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13005)"},{"Id":"514208619","IsPullRequest":true,"CreatedAt":"2019-10-31T03:48:02","Actor":"dotnet-maestro-bot","Number":"12994","RawContent":null,"Title":"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'","State":"closed","Body":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/12994","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#12994)"},{"Id":"515081226","IsPullRequest":true,"CreatedAt":"2019-10-31T01:35:28","Actor":"dotnet-maestro[bot]","Number":"13004","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.7\r\n- **Date Produced**: 10/31/2019 12:16 AM\r\n- **Commit**: fb710543566de826da30550e45bdbc60deb2cee0\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13004","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13004)"},{"Id":"514954030","IsPullRequest":true,"CreatedAt":"2019-10-31T01:02:27","Actor":"dotnet-maestro[bot]","Number":"13000","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.8\r\n- **Date Produced**: 10/30/2019 11:32 PM\r\n- **Commit**: 55c8dd25c3f337f9e7098ad787534bd04454b113\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13000","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13000)"},{"Id":"515027110","IsPullRequest":true,"CreatedAt":"2019-10-30T23:25:48","Actor":"dotnet-maestro[bot]","Number":"13002","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.6\r\n- **Date Produced**: 10/30/2019 9:55 PM\r\n- **Commit**: 958de2e07848f1a1ea808ba7999432b1e257d77e\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.6\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13002","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13002)"},{"Id":"514354126","IsPullRequest":true,"CreatedAt":"2019-10-30T21:00:37","Actor":"dotnet-maestro[bot]","Number":"12996","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.4\r\n- **Date Produced**: 10/30/2019 6:59 PM\r\n- **Commit**: ce871036d2f45c3268a9463cc5405958c4f5b3f7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19530.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12996","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12996)"},{"Id":"514849640","IsPullRequest":true,"CreatedAt":"2019-10-30T18:00:35","Actor":"dotnet-maestro[bot]","Number":"12999","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.3\r\n- **Date Produced**: 10/30/2019 4:40 PM\r\n- **Commit**: 8e3075d3915a55f90b2c9e35d975e476964cd014\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12999","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12999)"},{"Id":"514583177","IsPullRequest":true,"CreatedAt":"2019-10-30T12:10:40","Actor":"dotnet-maestro[bot]","Number":"12998","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.1\r\n- **Date Produced**: 10/30/2019 10:32 AM\r\n- **Commit**: 6a09111e0fc54a895f6975af796c8133fdd47fd6\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12998","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12998)"},{"Id":"514410126","IsPullRequest":true,"CreatedAt":"2019-10-30T06:00:27","Actor":"dotnet-maestro[bot]","Number":"12997","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.5\r\n- **Date Produced**: 10/30/2019 4:44 AM\r\n- **Commit**: 2aa52a135c1a1fc0d6cebbc333af20571f5057e9\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12997","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12997)"},{"Id":"514331983","IsPullRequest":true,"CreatedAt":"2019-10-30T01:55:29","Actor":"dotnet-maestro[bot]","Number":"12995","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.4\r\n- **Date Produced**: 10/30/2019 12:31 AM\r\n- **Commit**: c0f6cf7488d21f13d9e96b0e87e77851be0e350d\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12995","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12995)"},{"Id":"514126953","IsPullRequest":true,"CreatedAt":"2019-10-29T18:55:32","Actor":"dotnet-maestro[bot]","Number":"12993","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.7\r\n- **Date Produced**: 10/29/2019 5:33 PM\r\n- **Commit**: 2c6456d4634df947e3cafd5e7dee02289dc12697\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19528.7\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12993","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12993)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"516615712","IsPullRequest":false,"CreatedAt":"2019-11-02T14:52:31","Actor":"bernd5","Number":"1638","RawContent":null,"Title":"_dummy and _dummyPrimitive in System.Span","State":"closed","Body":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?","Url":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Closed issue \"_dummy and _dummyPrimitive in System.Span\" (#1638)"},{"Id":"516573954","IsPullRequest":true,"CreatedAt":"2019-11-02T12:25:00","Actor":"dotnet-maestro[bot]","Number":"1637","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1637","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1637)"},{"Id":"516079198","IsPullRequest":true,"CreatedAt":"2019-11-01T12:30:54","Actor":"dotnet-maestro[bot]","Number":"1636","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.13\r\n- **Date Produced**: 11/1/2019 5:06 AM\r\n- **Commit**: a24db0ba5666f46f50649810fe698ad267b60331\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1636","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1636)"},{"Id":"515387745","IsPullRequest":true,"CreatedAt":"2019-10-31T12:31:11","Actor":"dotnet-maestro[bot]","Number":"1635","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1635)"},{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-30T20:46:03","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"closed","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Closed or merged PR \"Source-build improvements.\" (#1612)"},{"Id":"514625134","IsPullRequest":true,"CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Number":"1634","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1634)"},{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"},{"Id":"512958771","IsPullRequest":true,"CreatedAt":"2019-10-27T12:45:49","Actor":"dotnet-maestro[bot]","Number":"1630","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1630)"},{"Id":"512829066","IsPullRequest":true,"CreatedAt":"2019-10-26T12:30:59","Actor":"dotnet-maestro[bot]","Number":"1629","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/26/2019 7:24 AM\r\n- **Commit**: 8245ee1e8f6063ccc7a3a60cafe821d29e85b02f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19525.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1629","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1629)"},{"Id":"512485574","IsPullRequest":true,"CreatedAt":"2019-10-25T12:31:13","Actor":"dotnet-maestro[bot]","Number":"1628","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191024.14\r\n- **Date Produced**: 10/25/2019 4:12 AM\r\n- **Commit**: 0954a975f972546314bd3ac4eb6e0a6380a85701\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19524.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1628","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1628)"},{"Id":"512430892","IsPullRequest":false,"CreatedAt":"2019-10-25T10:18:18","Actor":"lockeduan","Number":"1627","RawContent":null,"Title":"standard 2.1 DbParameter.DbType can never set to DbType.Time","State":"open","Body":"i'm trying to set parameter DbType to Time, but the result is that it wrongly set to DateTime instead\r\n\r\n```\r\ndbParameter.DbType = DbType.Time;\r\n```","Url":"https://github.com/dotnet/standard/issues/1627","RelatedDescription":"Open issue \"standard 2.1 DbParameter.DbType can never set to DbType.Time\" (#1627)"},{"Id":"511908253","IsPullRequest":true,"CreatedAt":"2019-10-24T12:36:46","Actor":"dotnet-maestro[bot]","Number":"1626","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.8\r\n- **Date Produced**: 10/23/2019 8:34 PM\r\n- **Commit**: be22fd85b2ceb377de87e6bda006f819569fec3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1626","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1626)"},{"Id":"511790862","IsPullRequest":false,"CreatedAt":"2019-10-24T08:32:00","Actor":"jrahma","Number":"1625","RawContent":null,"Title":"Easier way to upload Images using PostAsync","State":"open","Body":"Hi,\r\n\r\nIt will be great if you provide an easier way to directly uplaod images using PosyAsync without having to use MediaTypeHeaderValue\r\n\r\nFor example:\r\n\r\n```\r\nvar content = new FormUrlEncodedContent(new[]\r\n{\r\n    new KeyValuePair<string, string>(\"channel\", TextBoxNewChannelName.Text),\r\n    new KeyValuePair<string, ImageStream>(\"logo\", channel_logo),\r\n});\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1625","RelatedDescription":"Open issue \"Easier way to upload Images using PostAsync\" (#1625)"},{"Id":"511593656","IsPullRequest":false,"CreatedAt":"2019-10-23T21:58:36","Actor":"devon94","Number":"1624","RawContent":null,"Title":"Cannot serialize System.Globalization.NumberFormatInfo into binary stream","State":"open","Body":"Hey there,\r\n\r\nI was trying to serialize NumberFormatInfo into a binary stream using the following code:\r\n\r\n`\r\n\r\n            var locale = user?.Locale;\r\n            var cultureInfo = new System.Globalization.CultureInfo(locale);\r\n\r\n            using (var ms = new MemoryStream())\r\n            {\r\n                new BinaryFormatter().Serialize(ms, cultureInfo.NumberFormat);\r\n                return ms.ToArray();\r\n            }\r\n`\r\n\r\nIt worked when we were using mscorlib 4.0.0 but not after migrating to dotnet standard. It looks like it used to have the Serialization attribute in for that class but in dotnet standard those attributes seems to be missing. \r\n\r\nWas it intentional to make the NumberFormatInfo not serializable? Thanks!","Url":"https://github.com/dotnet/standard/issues/1624","RelatedDescription":"Open issue \"Cannot serialize System.Globalization.NumberFormatInfo into binary stream\" (#1624)"},{"Id":"511285257","IsPullRequest":true,"CreatedAt":"2019-10-23T12:30:19","Actor":"dotnet-maestro[bot]","Number":"1623","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1623","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1623)"},{"Id":"510619350","IsPullRequest":true,"CreatedAt":"2019-10-22T12:32:26","Actor":"dotnet-maestro[bot]","Number":"1621","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1621)"},{"Id":"510968850","IsPullRequest":false,"CreatedAt":"2019-10-21T21:11:58","Actor":"TomasMorton","Number":"1622","RawContent":null,"Title":"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions","State":"open","Body":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible.","Url":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Open issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622)"},{"Id":"509922429","IsPullRequest":true,"CreatedAt":"2019-10-21T12:23:01","Actor":"dotnet-maestro[bot]","Number":"1620","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1620)"},{"Id":"509586833","IsPullRequest":true,"CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Number":"1619","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1619)"},{"Id":"509442622","IsPullRequest":true,"CreatedAt":"2019-10-19T12:29:32","Actor":"dotnet-maestro[bot]","Number":"1618","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1618)"},{"Id":"509155885","IsPullRequest":false,"CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Number":"1617","RawContent":null,"Title":"Why do I need special permission when using HttpListener?","State":"closed","Body":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n","Url":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617)"},{"Id":"509045354","IsPullRequest":true,"CreatedAt":"2019-10-18T12:30:25","Actor":"dotnet-maestro[bot]","Number":"1616","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1616)"},{"Id":"508423360","IsPullRequest":true,"CreatedAt":"2019-10-17T23:53:53","Actor":"akoeplinger","Number":"1614","RawContent":null,"Title":"Update Xamarin APIs to latest Dev16.4 builds","State":"closed","Body":"- Xamarin.Android 10.1.0.1\r\n- Xamarin.iOS 13.8.1.1\r\n- Xamarin.Mac 6.8.1.1\r\n\r\nThis also uses a new GenAPI version so the diff is a little messy because of the enum value to name changes in attributes.\r\n\r\nI also had to introduce a System.Core.stubs.csproj to break a build cycle because System.dll references System.Security.Cryptography.ECDsa from System.Core.dll now.","Url":"https://github.com/dotnet/standard/pull/1614","RelatedDescription":"Closed or merged PR \"Update Xamarin APIs to latest Dev16.4 builds\" (#1614)"},{"Id":"508433927","IsPullRequest":true,"CreatedAt":"2019-10-17T12:24:28","Actor":"dotnet-maestro[bot]","Number":"1615","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.16\r\n- **Date Produced**: 10/17/2019 4:25 AM\r\n- **Commit**: b9186cfa3566ee24e5f16e45c542a3078e128dc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19516.16\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1615","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1615)"},{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 4:57 PM\r\n- **Commit**: f757dab263c59ffa51717974ec9a5da76a7a3b6e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19551.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"516774655","IsPullRequest":true,"CreatedAt":"2019-11-03T03:14:41","Actor":"stephentoub","Number":"42331","RawContent":null,"Title":"Assert ValueTask completion in SslStream.Read/Write","State":"open","Body":"We're employing a pattern in SslStream to avoid redundant code: we reuse the same code paths for both sync and async operations, with different interface implementations for each.  The sync implementation has implementations that complete synchronously, and we then guarantee that the whole operation actually completes synchronously, even though it's implemented with async methods.  We then .GetAwaiter().GetResult() to extract the result.  Since by construction the task will have already completed, it's ok to do so, but it's difficult for a human to see this, and harder for an analyzer.  Add an assert to both convey to an analyzer that we know what we're doing, and add a message for a human to understand it better. We can also remove an unnecessary \"AsTask()\" operation from the synchronous Write path, which should also remove a tiny bit of overhead.","Url":"https://github.com/dotnet/corefx/pull/42331","RelatedDescription":"Open PR \"Assert ValueTask completion in SslStream.Read/Write\" (#42331)"},{"Id":"516769106","IsPullRequest":true,"CreatedAt":"2019-11-03T01:52:27","Actor":"stephentoub","Number":"42330","RawContent":null,"Title":"Fix ValueTask usage in XmlTextReaderImpl.ParseTextAsync","State":"open","Body":"Found by an analyzer for ValueTasks I'm writing (and using corefx to test).\r\n\r\nThe ParseTextAsync(int) method returns a ValueTask, which then potentially has both .Result called on it and .AsTask (if fullValue is false), and such double-consumption of a ValueTask is not allowed.  It hasn't caused any problems because `async ValueTask` methods would always be backed by either a result or a Task, and as an implementation detail double-consumption of such instances doesn't cause a problem.  But for .NET 5 we've added the ability for `async ValueTask` methods to use pooled instances, in which case such double-consumption would cause problems (e.g. exceptions about the double use).  A fix here is to use Preserve.","Url":"https://github.com/dotnet/corefx/pull/42330","RelatedDescription":"Open PR \"Fix ValueTask usage in XmlTextReaderImpl.ParseTextAsync\" (#42330)"},{"Id":"516765738","IsPullRequest":true,"CreatedAt":"2019-11-03T01:04:56","Actor":"Marusyk","Number":"42329","RawContent":null,"Title":"Consolidate .netcoreapp.cs test files in System.IO.*","State":"open","Body":"Contributes #41821\r\n\r\nPlease review\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/42329","RelatedDescription":"Open PR \"Consolidate .netcoreapp.cs test files in System.IO.*\" (#42329)"},{"Id":"516765604","IsPullRequest":true,"CreatedAt":"2019-11-03T01:02:32","Actor":"stephentoub","Number":"42328","RawContent":null,"Title":"Remove unused return value from ChannelUtilities.QueueWaiter","State":"open","Body":"Found while working on an analyzer for ValueTasks.\r\ncc: @tarekgh","Url":"https://github.com/dotnet/corefx/pull/42328","RelatedDescription":"Open PR \"Remove unused return value from ChannelUtilities.QueueWaiter\" (#42328)"},{"Id":"516763316","IsPullRequest":true,"CreatedAt":"2019-11-03T00:42:52","Actor":"Dotnet-GitSync-Bot","Number":"42327","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corefx/pull/42327","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#42327)"},{"Id":"516693005","IsPullRequest":false,"CreatedAt":"2019-11-03T00:24:29","Actor":"rob313663","Number":"42321","RawContent":null,"Title":"Typo in comment","State":"closed","Body":"corefx/src/Common/src/CoreLib/System/Tuple.cs\r\n// In this case, the rest **memeber** has less than 8 elements so we need to combine some our elements with the elements in rest\r\n\r\nMaybe missing an \"of\" before \"our\" also.","Url":"https://github.com/dotnet/corefx/issues/42321","RelatedDescription":"Closed issue \"Typo in comment\" (#42321)"},{"Id":"516761804","IsPullRequest":true,"CreatedAt":"2019-11-03T00:10:48","Actor":"manandre","Number":"42326","RawContent":null,"Title":"Expose/Test span-based CopyTo/Async methods","State":"open","Body":"Depends on https://github.com/dotnet/coreclr/pull/27639\r\nContributes to #21472","Url":"https://github.com/dotnet/corefx/pull/42326","RelatedDescription":"Open PR \"Expose/Test span-based CopyTo/Async methods\" (#42326)"},{"Id":"516761149","IsPullRequest":true,"CreatedAt":"2019-11-03T00:02:11","Actor":"Marusyk","Number":"42325","RawContent":null,"Title":"Consolidate .netcoreapp.cs test files in System.Data.*","State":"open","Body":"Contributes #41821\r\n\r\nPlease review\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/42325","RelatedDescription":"Open PR \"Consolidate .netcoreapp.cs test files in System.Data.*\" (#42325)"},{"Id":"516727642","IsPullRequest":true,"CreatedAt":"2019-11-02T21:31:30","Actor":"davidsh","Number":"42324","RawContent":null,"Title":"Disable hanging tests","State":"closed","Body":"Contributes to #42323","Url":"https://github.com/dotnet/corefx/pull/42324","RelatedDescription":"Closed or merged PR \"Disable hanging tests\" (#42324)"},{"Id":"516725701","IsPullRequest":false,"CreatedAt":"2019-11-02T21:23:16","Actor":"davidsh","Number":"42323","RawContent":null,"Title":"Http tests hanging: ProxySetViaEnvironmentVariable_DefaultProxyCredentialsUsed","State":"open","Body":"Both HttpClient and HttpWebRequest tests are hanging with similar patterns:\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/d5c29930-eea7-42ae-89a1-259a59bb94fc/workitems/System.Net.Http.Functional.Tests/files/console.48c41834.log\r\n\r\n>System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandler_DefaultProxyCredentials_Test.ProxySetViaEnvironmentVariable_DefaultProxyCredentialsUsed\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/d5c29930-eea7-42ae-89a1-259a59bb94fc/workitems/System.Net.Requests.Tests/files/console.3091abbb.log\r\n\r\n>System.Net.Tests.HttpWebRequestTest.ProxySetViaEnvironmentVariable_DefaultProxyCredentialsUsed\r\n\r\nSometimes the test generates an error:\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/ad5f6171-9e64-4f2e-bb62-ea3fc716a3d2/workitems/System.Net.Http.Functional.Tests/files/console.2e2c133e.log\r\n\r\n>    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientHandler_DefaultProxyCredentials_Test.ProxySetViaEnvironmentVariable_DefaultProxyCredentialsUsed(useProxy: True) [FAIL]\r\n      System.IO.IOException : Unexpected EOF trying to read request header\r\n      Stack Trace:\r\n        /_/src/Common/tests/System/Net/Http/LoopbackServer.cs(597,0): at System.Net.Test.Common.LoopbackServer.Connection.ReadRequestHeaderAsync()\r\n        /_/src/Common/tests/System/Net/Http/LoopbackServer.AuthenticationHelpers.cs(28,0): at System.Net.Test.Common.LoopbackServer.<>c__DisplayClass33_0.<<AcceptConnectionPerformAuthenticationAndCloseAsync>b__0>d.MoveNext()\r\n        --- End of stack trace from previous location ---\r\n        /_/src/Common/tests/System/Net/Http/LoopbackServer.cs(127,0): at System.Net.Test.Common.LoopbackServer.AcceptConnectionAsync(Func`2 funcAsync)\r\n        /_/src/Common/tests/System/Net/Http/LoopbackServer.AuthenticationHelpers.cs(89,0): at ","Url":"https://github.com/dotnet/corefx/issues/42323","RelatedDescription":"Open issue \"Http tests hanging: ProxySetViaEnvironmentVariable_DefaultProxyCredentialsUsed\" (#42323)"},{"Id":"516712546","IsPullRequest":true,"CreatedAt":"2019-11-02T20:31:53","Actor":"davidsh","Number":"42322","RawContent":null,"Title":"Cleanup HttpClient certificate tests","State":"open","Body":"Some of the client certificate tests weren't running because they were conditioned on having\r\nthe \"test root\" installed. But that isn't needed for these tests.\r\n\r\nMoved test to the loopback server. Also, cleaned up code which assumed the tests ran against\r\n.NET Framework or UAP which isn't true anymore.","Url":"https://github.com/dotnet/corefx/pull/42322","RelatedDescription":"Open PR \"Cleanup HttpClient certificate tests\" (#42322)"},{"Id":"516462499","IsPullRequest":false,"CreatedAt":"2019-11-02T19:22:14","Actor":"willmotil","Number":"42310","RawContent":null,"Title":"Request toString()","State":"closed","Body":"**int** **float** **double** types ect.  when you call .ToString() on them in dot net all create garbage that must be collected. It's infuriating noob and been passed on by for how many years now ?.\r\n\r\nI got around this with a wrapper that just spit out characters from the value itself by simply doing the decimal to char conversion myself. Using a ugly fat noob wrapper around StringGarbageBuilder. \r\nThat typically outperforms it even though i massively bloated it. \r\nBecause numbers kind of need to be converted to characters in most apps, its kinda Not unheard of for that to happen in just about every single app ever made, a lot.\r\n\r\nSo.... is it possible.... since you guys are doing this new thing. That while you are at it,,,, \r\nYou can investigate how that conversion takes place internally. \r\nIf it is really, truly, absolutely, necessary to have to generate collectable garbage from all value.ToStrings() calls.\r\nevery single time !\r\non every single number to string!\r\nwith no way to stop it from happening or a way to get around it that makes sense ! \r\n\r\nI believe this is the No1 cause of garbage collections in any application by far for anyone who is not actively trying to prevent it or aware of it. Most people aren't even aware that this is a huge source of collections.\r\n\r\nIt most certainly should not be such a pain in the --- to get around it. c# has been around a long time now. Considering how much converting a number to a string should be considered to occur why has this never been addressed ?. \r\n\r\nYes i understand the problem of how do you return a string from a number without creating new string but there should be a way to feed a existing string or stringbuilder to ToString() or something so you don't have to create garbage that must be collected.\r\n\r\nSo file this under improved GC  one that doesn't have to follow behind a pig picking up after it.\r\n\r\nThank you.","Url":"https://github.com/dotnet/corefx/issues/42310","RelatedDescription":"Closed issue \"Request toString()\" (#42310)"},{"Id":"516573021","IsPullRequest":true,"CreatedAt":"2019-11-02T17:12:07","Actor":"dotnet-maestro[bot]","Number":"42314","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/2/2019 1:07 AM\r\n- **Commit**: e4863f47ec226fb1dd0b20cf953944237c87883c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19551.3\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19551.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19551.3\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42314","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#42314)"},{"Id":"516592759","IsPullRequest":true,"CreatedAt":"2019-11-02T14:51:52","Actor":"dotnet-maestro[bot]","Number":"42316","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup dotnet/corefx mono/linker","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 9:47 AM\r\n- **Commit**: 6013b0ac35043c72715f7de80838aaa3ee4f9bd1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19552.1\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha.1.19552.1\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha.1.19552.1\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha.1.19551.24\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:4e90a4be-4944-4ffc-c8c3-08d75d523d5f)\r\n## From https://github.com/mono/linker\r\n- **Build**: 20191101.1\r\n- **Date Produced**: 11/1/2019 9:51 PM\r\n- **Commit**: c579f6c2003031e07b0549520a6316bcd853a4e0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **ILLink.Tasks** -> 0.1.6-prerelease.19551.1\r\n\r\n[marker]: <> (End:4e90a4be-4944-4ffc-c8c3-08d75d523d5f)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42316","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup dotnet/corefx mono/linker\" (#42316)"},{"Id":"516617425","IsPullRequest":false,"CreatedAt":"2019-11-02T14:49:09","Actor":"mcraiha","Number":"42319","RawContent":null,"Title":"Performance of BigInteger.Pow isn't optimal when exponent is NPOT","State":"open","Body":"I am trying to implement VDF (verifiable delay function) with C# and I noticed **BigInteger.Pow** has quite big performance penalty if exponent is NPOT (Non-Power-Of-Two).\r\n\r\n> // * Summary *\r\n> \r\n> BenchmarkDotNet=v0.12.0, OS=Windows 10.0.18362\r\n> AMD Ryzen 7 1700, 1 CPU, 16 logical and 8 physical cores\r\n> .NET Core SDK=3.0.100\r\n>   [Host]     : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), X64 RyuJIT\r\n>   DefaultJob : .NET Core 3.0.0 (CoreCLR 4.700.19.46205, CoreFX 4.700.19.46214), X64 RyuJIT\r\n> \r\n> \r\n> |  Method |     Mean |    Error |   StdDev |\r\n> |-------- |---------:|---------:|---------:|\r\n> | PowNice |  7.098 s | 0.0324 s | 0.0303 s |\r\n> | PowSlow | 12.942 s | 0.0972 s | 0.0909 s |\r\n\r\nand code I used for testing\r\n```csharp\r\nusing System;\r\nusing System.Numerics;\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\n\r\nnamespace benchmark\r\n{\r\n\tpublic class BigIntegerPow\r\n\t{\r\n\t\tpublic BigIntegerPow()\r\n\t\t{\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t[Benchmark]\r\n\t\tpublic BigInteger PowNice() => BigInteger.Pow(13, 1 << 23);\r\n\r\n\t\t[Benchmark]\r\n\t\tpublic BigInteger PowSlow() => BigInteger.Pow(13, (1 << 23) - 1);\r\n\t}\r\n\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar summary = BenchmarkRunner.Run<BigIntegerPow>();\r\n\t\t}\r\n\t}\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/42319","RelatedDescription":"Open issue \"Performance of BigInteger.Pow isn't optimal when exponent is NPOT\" (#42319)"},{"Id":"516602612","IsPullRequest":false,"CreatedAt":"2019-11-02T13:59:23","Actor":"AlbertoCe","Number":"42318","RawContent":null,"Title":"Collectible AssemblyLoadContext unmanaged dll unload","State":"open","Body":"Hello,\r\n\r\nwhen I load a plugin that uses EntityFrameworkCore (using a custom collectible AssemblyLoadContext) and try to unload it, it does not get unloaded: the IsActive property of the context's weakreference remain true even after multiple GC.Collect() and GC.WaitForPendingFinalizers().\r\n\r\nI start to think it is related to the load and use of EF unmanaged libraries like sni.dll. \r\n\r\nI tried to load the unmanaged libraries in the new context and also to use the libraries loaded in the host's default context (the host console application has the EF core nuget package installed too), but with no luck.\r\n\r\nIt works well if I comment out all the EntityFrameworkCore related code from the plugin. Probably because no unmanaged dll gets loaded.","Url":"https://github.com/dotnet/corefx/issues/42318","RelatedDescription":"Open issue \"Collectible AssemblyLoadContext unmanaged dll unload\" (#42318)"},{"Id":"516597113","IsPullRequest":true,"CreatedAt":"2019-11-02T13:48:17","Actor":"Dotnet-GitSync-Bot","Number":"42317","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/42317","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#42317)"},{"Id":"516571063","IsPullRequest":true,"CreatedAt":"2019-11-02T13:25:08","Actor":"dotnet-maestro[bot]","Number":"42313","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 4:57 PM\r\n- **Commit**: f757dab263c59ffa51717974ec9a5da76a7a3b6e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19551.3\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19551.3\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42313","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#42313)"},{"Id":"516575473","IsPullRequest":false,"CreatedAt":"2019-11-02T13:00:06","Actor":"kekekeke4","Number":"42315","RawContent":null,"Title":".net core 3.0 Publish SingleFile on linux can not run","State":"closed","Body":"I use vs2019 to publish singlefile on win10.  I Add 3 nodes(PublishSingleFile:true ; PublishTrimmed:true ;RuntimeIdentifier:linux-x64) to the .csproj file,then I publish and deploy the release files to the linux system(ubuntu 18.04) and run it,but tips \"command not found\"。","Url":"https://github.com/dotnet/corefx/issues/42315","RelatedDescription":"Closed issue \".net core 3.0 Publish SingleFile on linux can not run\" (#42315)"},{"Id":"516566408","IsPullRequest":false,"CreatedAt":"2019-11-02T11:14:35","Actor":"beefsteak","Number":"42312","RawContent":null,"Title":"Could not parse the JSON file","State":"open","Body":"1.Create new worker service project.\r\n2.Debug is error, but run is right.\r\n![image](https://user-images.githubusercontent.com/14013918/68070114-fe095880-fda4-11e9-96d5-53d2345a41f6.png)\r\n ","Url":"https://github.com/dotnet/corefx/issues/42312","RelatedDescription":"Open issue \"Could not parse the JSON file\" (#42312)"},{"Id":"516490932","IsPullRequest":true,"CreatedAt":"2019-11-02T05:59:11","Actor":"geoffkizer","Number":"42311","RawContent":null,"Title":"Add System.Net.Quic.dll assembly with basic object model and mock implementation","State":"open","Body":"This adds the System.Net.Quic assembly, including some basic APIs (QuicConnection, QuicStream, QuicListener) as well as a mock implementation of QUIC semantics using TCP under the covers.\r\n\r\n@dotnet/ncl @stephentoub @jkotalik @anurse @davidfowl ","Url":"https://github.com/dotnet/corefx/pull/42311","RelatedDescription":"Open PR \"Add System.Net.Quic.dll assembly with basic object model and mock implementation\" (#42311)"},{"Id":"516458671","IsPullRequest":false,"CreatedAt":"2019-11-02T03:44:28","Actor":"Random832","Number":"42309","RawContent":null,"Title":"Equals returns true for ReflectPropertyDescriptors with different target types.","State":"open","Body":"PropertyDescriptor.Equals only checks the Name and PropertyType, and ReflectPropertyDescriptor does not override. This prevents, for example, using PropertyDescriptors of different target types as dictionary keys without a custom equality comparer.\r\n\r\ne.g. \r\n```csharp\r\nvar foo = new { a = 1 };\r\nvar bar = new { a = 2, b = 3};\r\nvar pf = TypeDescriptor.GetProperties(foo)[\"a\"];\r\nvar pb = TypeDescriptor.GetProperties(bar)[\"a\"];\r\nvar x = new List<PropertyDescriptor>();\r\nConsole.WriteLine(Object.Equals(pf, pb)); // true\r\npf.GetValue(bar); // throws TargetException\r\n```","Url":"https://github.com/dotnet/corefx/issues/42309","RelatedDescription":"Open issue \"Equals returns true for ReflectPropertyDescriptors with different target types.\" (#42309)"},{"Id":"516374725","IsPullRequest":true,"CreatedAt":"2019-11-02T00:51:17","Actor":"Marusyk","Number":"42302","RawContent":null,"Title":"Consolidate .netcoreapp.cs test files in System.Collections.*","State":"closed","Body":"Contributes #41821\r\n\r\nPlease review\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/42302","RelatedDescription":"Closed or merged PR \"Consolidate .netcoreapp.cs test files in System.Collections.*\" (#42302)"},{"Id":"516417992","IsPullRequest":true,"CreatedAt":"2019-11-02T00:39:52","Actor":"layomia","Number":"42308","RawContent":null,"Title":"[release/3.1] Guard against null refs when attempting to deserialize mismatched JSON into collections","State":"open","Body":"Ports https://github.com/dotnet/corefx/pull/42254 to 3.1\r\n\r\n## Description\r\nFixes a bug where the serializer throws a null ref when an attempt is made to deserialize a Json array into a POCO: #42143\r\n\r\nThe PR introduces checks beyond the scope of the current issue in an effort to fix other variations of the reported bugs:\r\n\r\n#42143\r\n#41839\r\n\r\n## Customer Impact\r\n\r\nReasonable exception thrown in mismatched Json scenarios.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Risk\r\n\r\nLow. This PR adds validation checks which do not interfere with custom converter support (that can handle mismatched Json), or rescind support for valid deserialization scenarios.\r\nSome dead code is removed, with sufficient reasoning.","Url":"https://github.com/dotnet/corefx/pull/42308","RelatedDescription":"Open PR \"[release/3.1] Guard against null refs when attempting to deserialize mismatched JSON into collections\" (#42308)"},{"Id":"516409094","IsPullRequest":false,"CreatedAt":"2019-11-02T00:07:01","Actor":"tarekgh","Number":"42307","RawContent":null,"Title":"Make Activity and OpenTelemetry Span the same","State":"open","Body":"This issue tracking the work as the part of the issue https://github.com/dotnet/corefx/issues/42305\r\n ","Url":"https://github.com/dotnet/corefx/issues/42307","RelatedDescription":"Open issue \"Make Activity and OpenTelemetry Span the same\" (#42307)"},{"Id":"516406918","IsPullRequest":true,"CreatedAt":"2019-11-01T23:59:20","Actor":"Jozkee","Number":"42306","RawContent":null,"Title":"Handle References on Serialization","State":"open","Body":"Contributes to #41002\r\n\r\nExposes new API `JsonSerializerOptions.ReferenceHandlingOnSerialize` along with the `ReferenceHandlingOnSerialize` enum and `JsonReferenceHandlingAttribute`.\r\n\r\nThe available options are:\r\n* Error: throws a `JsonException` right away a circular reference is detected in the object's branch.\r\n* Ignore: Instead of throwing, ignores properties/objects that cause circularity in the object's branch.\r\n* Preserve: Writes `\"$id\": \"#\"` properties in the JSON complex types that can be later use with the `$ref` property to denote reference, these references are not limited to the object's branch but they live in the entire object graph.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42306","RelatedDescription":"Open PR \"Handle References on Serialization\" (#42306)"},{"Id":"516406396","IsPullRequest":false,"CreatedAt":"2019-11-01T23:57:24","Actor":"tarekgh","Number":"42305","RawContent":null,"Title":"Distributed Context in ASP.NET and Open Telemetry","State":"open","Body":"This issue is tracking the work need to be done for supporting the distributed context scenarios for ASP.NET and OpenTelemetry.\r\n\r\nHere is the scenarios we need to support: \r\n\r\n## Distributed Context scenarios\r\nThese scenarios talking about ILogger and OpenTelemetry scenarios. OpenTelemetry has a goal to implement all these scenarios if you replace “ILogger” with “OpenTelemetry Logging API”. The goal of this document is to come up with scenarios that will not require OpenTelemetry to introduce new concepts and libraries. And out-of-the box ASP.NET apps be more distributed apps friendly.\r\n\r\n### Out of the box ASP.NET application\r\n- Distributed trace identifiers are automatically propagated thru the app. This enables correlation of telemetry across multiple components even when only a subset of these components have monitoring enabled.\r\nNote: This is already implemented via DiagnosticsSource.Activity. \r\n\r\n- Log messages and exceptions are automatically associated with the distributed trace identifiers. This allows to pinpoint the root cause of the problem faster by associating logs and exceptions with the downstream components that might have caused the problem or upstream - components providing incorrect data.\r\nNote:This is partially implemented - trace-id and span-id of a topmost request are added to the ILogger scope.\r\n\r\n- User may output distributed trace identifiers as part of an error page for the app user reference. This allows to improve an application supportability by providing a fast lookup reference that will simplify customer communication with support personnel.\r\n\r\n### Scoping of distributed logs\r\n- Developer may add name/value pair to the scope of execution. This name/value pair will be associated with all logs captured in this scope\r\n\tNote: this is an existing ILogger feature\r\n\r\n- Developer may configure some of name/value pairs in scope to be distributed. These scope values will be transmitted over the wire and associated with the logs reported by downstream services. This feature enables scenarios like clients sending client app versions as a context property and all logs across many layers of a distributed trace will be attributed with it.\r\n\r\n### ASP.NET app with OpenTelemetry enabled\r\n- When OpenTelemetry is enabled - all logs reported by ILogger must bye attributed with the OpenTelemetry span identity. So telemetry reported by OpenTelemetry and ILogger can be cross referenced.\r\n\r\n- Spans reported by OpenTelemetry can use scope’s name/value pairs configured by customer for ILogger as a dimensions for telemetry. This will ensure that OpenTelemetry benefits from app attribution made by developer for better diagnostics experience. This includes both - local and distributed contexts.\r\n\r\n### Metrics and scopes\r\n- Metrics aggregation in OpenTelemetry may use scope’s name/value pairs as a dimension for aggregation based on configuration. This includes both - local and distributed contexts.\r\n\r\n- EventCounters may use scope’s name/value pairs as a dimension for aggregation. This includes both - local and distributed contexts.\r\n\r\n### Distributed “http context”\r\n- Developer must be able to set up business critical properties that can be used across the entire distributed trace.\r\n\r\n## Tracked work items:\r\n\r\n- [ ] [Make Activity and Span the same.](https://github.com/dotnet/corefx/issues/42307) @noahfalk\r\n- [ ] [Add Ids and Context to all logs.](https://github.com/aspnet/Extensions/issues/2592) @davidfowl \r\n- [ ] Distributed Context API (distributed http context). Should be in a separate library. @tarekgh\r\n    * string/string\r\n    * Scope-able\r\n    * Not attached to Activity\r\n\r\nCC @SergeyKanzhelev @pakrym","Url":"https://github.com/dotnet/corefx/issues/42305","RelatedDescription":"Open issue \"Distributed Context in ASP.NET and Open Telemetry\" (#42305)"},{"Id":"516405974","IsPullRequest":false,"CreatedAt":"2019-11-01T23:56:25","Actor":"tarekgh","Number":"42304","RawContent":null,"Title":"Distributed Context in ASP.NET/OpenTelemetry","State":"closed","Body":"This issue is tracking the work need to be done for supporting the distributed context scenarios for ASP.NET and OpenTelemetry.\r\n\r\nHere is the scenarios we need to support: \r\n\r\n## Distributed Context scenarios\r\nThese scenarios talking about ILogger and OpenTelemetry scenarios. OpenTelemetry has a goal to implement all these scenarios if you replace “ILogger” with “OpenTelemetry Logging API”. The goal of this document is to come up with scenarios that will not require OpenTelemetry to introduce new concepts and libraries. And out-of-the box ASP.NET apps be more distributed apps friendly.\r\n\r\n### Out of the box ASP.NET application\r\n- Distributed trace identifiers are automatically propagated thru the app. This enables correlation of telemetry across multiple components even when only a subset of these components have monitoring enabled.\r\nNote: This is already implemented via DiagnosticsSource.Activity. \r\n\r\n- Log messages and exceptions are automatically associated with the distributed trace identifiers. This allows to pinpoint the root cause of the problem faster by associating logs and exceptions with the downstream components that might have caused the problem or upstream - components providing incorrect data.\r\nNote:This is partially implemented - trace-id and span-id of a topmost request are added to the ILogger scope.\r\n\r\n- User may output distributed trace identifiers as part of an error page for the app user reference. This allows to improve an application supportability by providing a fast lookup reference that will simplify customer communication with support personnel.\r\n\r\n### Scoping of distributed logs\r\n- Developer may add name/value pair to the scope of execution. This name/value pair will be associated with all logs captured in this scope\r\n\tNote: this is an existing ILogger feature\r\n\r\n- Developer may configure some of name/value pairs in scope to be distributed. These scope values will be transmitted over the wire and associated with the logs reported by downstream services. This feature enables scenarios like clients sending client app versions as a context property and all logs across many layers of a distributed trace will be attributed with it.\r\n\r\n### ASP.NET app with OpenTelemetry enabled\r\n- When OpenTelemetry is enabled - all logs reported by ILogger must bye attributed with the OpenTelemetry span identity. So telemetry reported by OpenTelemetry and ILogger can be cross referenced.\r\n\r\n- Spans reported by OpenTelemetry can use scope’s name/value pairs configured by customer for ILogger as a dimensions for telemetry. This will ensure that OpenTelemetry benefits from app attribution made by developer for better diagnostics experience. This includes both - local and distributed contexts.\r\n\r\n### Metrics and scopes\r\n- Metrics aggregation in OpenTelemetry may use scope’s name/value pairs as a dimension for aggregation based on configuration. This includes both - local and distributed contexts.\r\n\r\n- EventCounters may use scope’s name/value pairs as a dimension for aggregation. This includes both - local and distributed contexts.\r\n\r\n### Distributed “http context”\r\n- Developer must be able to set up business critical properties that can be used across the entire distributed trace.\r\n\r\n## Tracked work items:\r\n\r\n- [ ] Make Activity and Span the same. @noahfalk\r\n- [ ] Add Ids and Context to all logs. @davidfowl \r\n- [ ] Distributed Context API (distributed http context). Should be in a separate library. @tarekgh\r\n    * string/string\r\n    * Scope-able\r\n    * Not attached to Activity\r\n\r\nCC @SergeyKanzhelev @pakrym","Url":"https://github.com/dotnet/corefx/issues/42304","RelatedDescription":"Closed issue \"Distributed Context in ASP.NET/OpenTelemetry\" (#42304)"},{"Id":"516396463","IsPullRequest":false,"CreatedAt":"2019-11-01T23:25:32","Actor":"Grauenwolf","Number":"42303","RawContent":null,"Title":"Proposal: CancellationToken with Timeout","State":"open","Body":"When using time based cancellations, there are a few potential problems.\r\n\r\n* Setting a timeout on a `CancellationTokenSource` requires starting a timer.\r\n* If the `CancellationTokenSource` is disposed, the timeout will never fire and the ``CancellationToken` will not be cancelled. This isn't clear in the documentation. \r\n* The `CancellationTokenSource` must be tracked in some way so it can be properly disposed. Otherwise a memory leak can occur. \r\n\r\nFor one-offs this is not a big deal. But as we increasingly use `CancellationToken`, it can become an significant expense in terms of memory and system resources.\r\n\r\nAn alternative would be to allow the `CancellationToken` itself to have an optional DateTime field that can be checked. While it would make the `CancellationToken` slightly more expensive in terms of memory, it would eliminate the need for an expensive timer. \r\n\r\n> What I think would make more sense would be to make CancellationToken struct itself smarter about timeouts. When you create a CancellationTokenSource with a timeout, it should calculate the timestamp of the expiration, and bake that into the token. Then various properties on the CancellationToken, such as IsCancellationRequested, would check the current time against that timestamp and return appropriately if that timestamp is in the past.\r\n\r\nhttps://www.reddit.com/r/programming/comments/dqbnz3/the_autocancelling_cancellationtoken_that_doesnt/f61xwdn/","Url":"https://github.com/dotnet/corefx/issues/42303","RelatedDescription":"Open issue \"Proposal: CancellationToken with Timeout\" (#42303)"},{"Id":"516373153","IsPullRequest":false,"CreatedAt":"2019-11-01T22:13:21","Actor":"daviburg","Number":"42301","RawContent":null,"Title":"NetworkCredentials leaks password copies due to lack of disposable pattern implementation","State":"open","Body":"A class which owns a disposable resource needs to implement the disposable pattern itself. This is particularly important for SecureString which upon dispose calls Close on the internal safehandle for security reasons. NetworkCredentials class in .NET Core, and Framework for that matter, forgot to implement IDisposable, creates copies of the SecureString on each get and set call of the password accessor methods.\r\n\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Net.Primitives/src/System/Net/NetworkCredential.cs\r\nhttps://referencesource.microsoft.com/#mscorlib/system/security/securestring.cs\r\nhttps://referencesource.microsoft.com/#mscorlib/system/runtime/interopservices/safehandle.cs,7a33560846dca479\r\n\r\nSo not only does the internal copy taken by NetworkCredentials never gets dispose, the copy on get implementation is a very bizarre pattern which appear to assume that the caller knows to be responsible for the disposal.\r\n\r\nInstead the NetworkCredentials class should:\r\na) Implement disposable interface and pattern, so that if a securestring password is set or created for its internal member variable, it disposes of it properly;\r\nb) Do not copy on get accessor, rather let the caller decide to copy at all if they are taking a reference (and they might just use the password immediately while NetworkCredentials is inside using scope so won't need to do and track any copy). Get accessors in general should not have hidden side effects. Because this would be a potential breaking change to caller who built an assumption on the old behavior, this means a new property is now required to correct the pattern so folks can migrate to a property that doesn't create leaks.\r\n","Url":"https://github.com/dotnet/corefx/issues/42301","RelatedDescription":"Open issue \"NetworkCredentials leaks password copies due to lack of disposable pattern implementation\" (#42301)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"516760030","IsPullRequest":true,"CreatedAt":"2019-11-02T23:48:39","Actor":"CyrusNajmabadi","Number":"39655","RawContent":null,"Title":"Simplify how we compute and store the location we use to persist the sqlite storage cache.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/39653\r\nFixes https://github.com/dotnet/roslyn/issues/23060\r\n\r\nThis change removed a lot of complexity we currently have in VS around determining and maintaining the folder where we keep the sqlite cache.  It does this by no longer using the .vs folder (which has additional downsides for the user) and instead storing the db in the temp directory in a unique folder determined for the current solution/workspace-kind pair.\r\n\r\nThis has several benefits:\r\n1. there is a lot less code to maintain.\r\n2. the existing code is complex and buggy.  For example, it has caused #39653 where we don't actually properly persist data in OOP in mainline scenarios.\r\n3. the existing code places a lock on hte user directory, making external FS operations (like `git clean`) not possible.\r\n","Url":"https://github.com/dotnet/roslyn/pull/39655","RelatedDescription":"Open PR \"Simplify how we compute and store the location we use to persist the sqlite storage cache.\" (#39655)"},{"Id":"516742962","IsPullRequest":false,"CreatedAt":"2019-11-02T22:28:48","Actor":"AArnott","Number":"39654","RawContent":null,"Title":"CS8602 should fire within subsequent arguments of validating function","State":"open","Body":"**Version Used**: VS 16.5 Preview 1 (29502.12.master)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a .NET Core 3.0 library or console app.\r\n1. `Install-Package Microsoft.VisualStudio.Validation -Version 15.5.31`\r\n2. Introduce a source file with this content:\r\n\r\n```cs\r\nusing Microsoft;\r\n\r\n#nullable enable\r\n\r\nclass Program\r\n{\r\n    static object? v;\r\n    static void Main(string[] args)\r\n    {\r\n        Verify.Operation(v != null, v.ToString());\r\n        v.ToString();\r\n    }\r\n}\r\n``` \r\n\r\n**Expected Behavior**:\r\n\r\nCS8602 identifies that `v.ToString()` is a dereference of a possibly null value.\r\n\r\n**Actual Behavior**:\r\n\r\nNo warning is emitted of the null reference.\r\nIt seems that the `Verify.Operation` call, which is annotated to not return if the condition passed as the first argument is `false` is inappropriately applied as validated even for the subsequent arguments passed to that method.\r\n\r\n![image](https://user-images.githubusercontent.com/3548/68077689-d0fd7b80-fd8d-11e9-9d42-08bd6ac1a9d9.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39654","RelatedDescription":"Open issue \"CS8602 should fire within subsequent arguments of validating function\" (#39654)"},{"Id":"516740453","IsPullRequest":false,"CreatedAt":"2019-11-02T22:18:50","Actor":"CyrusNajmabadi","Number":"39653","RawContent":null,"Title":"Persistence service no longer seems to work in OOP.","State":"open","Body":"While debugging through https://github.com/dotnet/roslyn/issues/39364 i discovered something very bad.\r\n\r\nSpecifically, in OOP we don't get persistence working *at all* in some cases.  This is because operations like AddImport end up calling over to OOP which end updoing the search on a \"RemoteTemporaryWorkspace\".  I have no idea what thi workspace is, but it's *not* the actual RemoteWorkspace that OOP persistence was written to use.\r\n\r\nThis specifically breaks because we are unable to get a Storage instance back from teh storage service due to the final line here:\r\n\r\n```c#\r\n        internal IChecksummedPersistentStorage GetStorageWorker(Solution solution)\r\n        {\r\n            lock (_lock)\r\n            {\r\n                // Do we already have storage for this?\r\n                if (solution.Id == _currentPersistentStorageSolutionId)\r\n                {\r\n                    // We do, great\r\n                    return PersistentStorageReferenceCountedDisposableWrapper.AddReferenceCountToAndCreateWrapper(_currentPersistentStorage);\r\n                }\r\n\r\n                if (!SolutionSizeAboveThreshold(solution))\r\n                {\r\n                    return NoOpPersistentStorage.Instance;\r\n                }\r\n\r\n                var workingFolder = _locationService.TryGetStorageLocation(solution.Id);\r\n\r\n                if (workingFolder == null)\r\n                {\r\n                    return NoOpPersistentStorage.Instance;\r\n                }\r\n```\r\n\r\nThere is no `workingFolder` because we have no actual `IPersistentStorageLocationService` for this workspace.  Specifically, we have defined IPersistentStorageLocationService for VS and for the normal RemoteWorkspace, like so:\r\n\r\n```c#\r\n    [ExportWorkspaceService(typeof(IPersistentStorageLocationService), layer: WorkspaceKind.RemoteWorkspace), Shared]\r\n    internal class RemotePersistentStorageLocationService : IPersistentStorageLocationService\r\n```\r\n\r\nBut we never defined this for the 'remote temporary workspace'.\r\n\r\nSeveral things i don't understand at all here:\r\n\r\n1. what is a \"remote temporary workspace\"?\r\n2. why are we using it for some calls (like the call 'add import' makes to search the external index)?\r\n3. what is even the right fix here? \r\n\r\nBasically, the entire scenario is broken making is so that that in OOP we have to compute the indices for at least some operations for the entire solutoin.  this likely leads to additional slowness and excess costs on startup for people trying to do normal operations that use OOP.","Url":"https://github.com/dotnet/roslyn/issues/39653","RelatedDescription":"Open issue \"Persistence service no longer seems to work in OOP.\" (#39653)"},{"Id":"516737507","IsPullRequest":false,"CreatedAt":"2019-11-02T22:07:34","Actor":"Orace","Number":"39652","RawContent":null,"Title":"[Proposal] Type alias in class/interface declaration","State":"open","Body":"This is a proposal to add a type alias in class and interface declaration.\r\n\r\n**Example**\r\n\r\nConsidering this scenario:\r\n\r\n```C#\r\n\r\n// Interface for cachable\r\ninterface ICachable<T>\r\n{\r\n   T WithCache();\r\n}\r\n\r\ninterface IDataProvider<TSource, TData> :\r\n    ICachable<IDataProvider<TSource, TData>> // fluent pattern\r\n{\r\n}\r\n\r\n...\r\n\r\nExampleOfUse(IDataProvider<TSource, TData> dataProvider)\r\n{\r\n  var cachedDataProvider = dataProvider.WithCache();\r\n}\r\n\r\n```\r\n\r\nThe goal of this proposal is to simplify the declaration of `IDataProvider` like this: \r\n\r\n```C#\r\ninterface IDataProvider<TSource, TData> as TSelf:\r\n    Cachable<TSelf> // fluent pattern\r\n{\r\n}\r\n```\r\n\r\n-A type alias lifetime is limited to the class / interface in which it's declared\r\n-A type alias is visible from inner class\r\n-A type alias is not visible to herited / implementing class\r\n-A type alias have the same constraints as a type parameter\r\n-A type alias can't be used before its declaration\r\n\r\n**Example of valid use**\r\n\r\n```C#\r\nclass IntToStuffMapper as TSelf : IReadonlyDictionary<int, Stuff> as TSingleton\r\n{\r\n  // public static IReadonlyDictionary<int, Stuff> Instance { get; } = new IntToStuffMapper();\r\n  public static TSingleton Instance { get; } = new IntToStuffMapper();\r\n}\r\n\r\nclass TypeWithManyFluentOverload<T1, T2> as TSelf:\r\n  ICachable<TSelf>,\r\n  IFoozable<TSelf>\r\n{\r\n}\r\n```\r\n\r\n**Example of invalid use**\r\n\r\n-A type alias is not visible to herited / implementing class\r\n```C#\r\nclass IntToStuffMapper as TSelf : IReadonlyDictionary<int, Stuff> as TSingleton {...}\r\n\r\nclass SpecializedIntToStuffMapper : IntToStuffMapper\r\n{\r\n  public static TSingleton Instance { get; } = new SpecializedIntToStuffMapper(); // error TSingleton not declared\r\n}\r\n```\r\n\r\n-A type alias can't be used before its declaration\r\n```C#\r\ninterface IFoo<T> {...}\r\ninterface IBar<T> {...}\r\n\r\n// If you think that self-aware type may reboot the universe look at this:\r\nclass Buzz :\r\n  IFoo<TBar> as TFoo, // error TBar used before its declaration\r\n  IBar<TFoo> as TBar\r\n{\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39652","RelatedDescription":"Open issue \"[Proposal] Type alias in class/interface declaration\" (#39652)"},{"Id":"516720118","IsPullRequest":false,"CreatedAt":"2019-11-02T19:02:40","Actor":"GhostTyper","Number":"39651","RawContent":null,"Title":"Nullable Reference Types: return MaybeNull with this modifier","State":"open","Body":"See this code snippet:\r\n\r\n``` csharp\r\npublic class UniversalHolder<T> : IEnumerable<T> where T : UniversalEnumerable?\r\n{\r\n    private T[] values;\r\n\r\n    /// <summary>\r\n    /// Returns an element of the holder.\r\n    /// </summary>\r\n    /// <param name=\"name\">The name of the element.</param>\r\n    /// <returns>The element specified by the index or null if the index\r\n    /// doesn't contain any element.</returns>\r\n    public T this[string name]\r\n    {\r\n        [return: MaybeNull]\r\n        get\r\n        {\r\n            foreach (T value in values)\r\n                if (value != null && value.Name == name)\r\n                    return value;\r\n\r\n            return default(T);  // Analyzer: Possible null reference return.\r\n        }\r\n    }\r\n```\r\n\r\nMy aim was to make it clear to the code analyzer that I wanted to maybe return `null`. However I utterly failed at this, because whatever I try, the analyzer tells me (loosely translated): \"possible null reference return\".\r\n\r\nI think this shouldn't happen - or what am I doin' wrong here?","Url":"https://github.com/dotnet/roslyn/issues/39651","RelatedDescription":"Open issue \"Nullable Reference Types: return MaybeNull with this modifier\" (#39651)"},{"Id":"516463474","IsPullRequest":false,"CreatedAt":"2019-11-02T04:08:41","Actor":"cston","Number":"39650","RawContent":null,"Title":"Report a warning when calling a property or method that returns [MaybeNull]T","State":"open","Body":"Report a warning when calling a property or method that returns a value of a generic type annotated with `[MaybeNull]`.\r\n\r\nSee [C# LDM 2019-09-11](https://github.com/dotnet/csharplang/blob/master/meetings/2019/LDM-2019-09-11.md).\r\n\r\nSee https://github.com/dotnet/roslyn/pull/39589#issuecomment-548995903.","Url":"https://github.com/dotnet/roslyn/issues/39650","RelatedDescription":"Open issue \"Report a warning when calling a property or method that returns [MaybeNull]T\" (#39650)"},{"Id":"516442152","IsPullRequest":true,"CreatedAt":"2019-11-02T02:28:12","Actor":"dibarbet","Number":"39649","RawContent":null,"Title":"Add support for custom unnecessary locations on a diagnostic.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39649","RelatedDescription":"Open PR \"Add support for custom unnecessary locations on a diagnostic.\" (#39649)"},{"Id":"516404321","IsPullRequest":true,"CreatedAt":"2019-11-01T23:50:01","Actor":"JoeRobich","Number":"39648","RawContent":null,"Title":"Add global.json for integration test","State":"open","Body":"Try forcing integration tests to run against a particular .NET Core SDK.","Url":"https://github.com/dotnet/roslyn/pull/39648","RelatedDescription":"Open PR \"Add global.json for integration test\" (#39648)"},{"Id":"516279782","IsPullRequest":true,"CreatedAt":"2019-11-01T23:06:11","Actor":"jasonmalinowski","Number":"39634","RawContent":null,"Title":"Fix crash where we are not always finding text snapshots","State":"closed","Body":"This is just a direct-to-master-vs-deps version of #39607.\r\n\r\nGiven this is not a reliable crash, my guess is the problem is we are sometimes processing an older Solution snapshot. Asking a specific SourceText for the specific ITextSnapshot it came from could fail\r\nif that snapshot had been GC'ed, whereas going to the container first and asking for the buffer directly should be more reliable. Either way we now also handle the null case.\r\n\r\nFixes https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1010045","Url":"https://github.com/dotnet/roslyn/pull/39634","RelatedDescription":"Closed or merged PR \"Fix crash where we are not always finding text snapshots\" (#39634)"},{"Id":"516377941","IsPullRequest":false,"CreatedAt":"2019-11-01T22:26:47","Actor":"RikkiGibson","Number":"39647","RawContent":null,"Title":"Make AssemblyIdentity tolerate empty string names","State":"open","Body":"See https://github.com/dotnet/roslyn/blob/fab7134296816fc80019c60b0f5bef7400cf23ea/src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.DisplayName.cs#L727\r\n","Url":"https://github.com/dotnet/roslyn/issues/39647","RelatedDescription":"Open issue \"Make AssemblyIdentity tolerate empty string names\" (#39647)"},{"Id":"516370618","IsPullRequest":false,"CreatedAt":"2019-11-01T22:06:26","Actor":"AlekseyTs","Number":"39646","RawContent":null,"Title":"Consider if it would be advantageous to delay creation of ITypeSymbol instances returned by IOperation.Type API for C#","State":"open","Body":"After https://github.com/dotnet/roslyn/pull/39498, public symbols and internal symbols are no longer implemented by the same objects for C#. When we create IOperation nodes, we eagerly create ITypeSymbol instances that should be returned by IOperation.Type API. The same is happening for other symbols exposed by IOperation APIs. It was suggested during PR review (https://github.com/dotnet/roslyn/pull/39498#discussion_r339210407) that it might be advantageous to delay creation of ITypeSymbol (and perhaps other public symbols). Capture internal symbols in  IOperation nodes instead and create public symbols only when requested by a consumer.  ","Url":"https://github.com/dotnet/roslyn/issues/39646","RelatedDescription":"Open issue \"Consider if it would be advantageous to delay creation of ITypeSymbol instances returned by IOperation.Type API for C#\" (#39646)"},{"Id":"516364082","IsPullRequest":true,"CreatedAt":"2019-11-01T21:49:21","Actor":"JoeRobich","Number":"39645","RawContent":null,"Title":"Set TFM for Net Core integration tests","State":"open","Body":"Overwrite the default .NET Core TFM.","Url":"https://github.com/dotnet/roslyn/pull/39645","RelatedDescription":"Open PR \"Set TFM for Net Core integration tests\" (#39645)"},{"Id":"516363966","IsPullRequest":true,"CreatedAt":"2019-11-01T21:49:01","Actor":"AlekseyTs","Number":"39644","RawContent":null,"Title":"Follow-up on adding NullableAnnotation/WithNullableAnnotation APIs to ITypeSymbol.","State":"open","Body":"Related to #39641.\r\nRelated to #39643.","Url":"https://github.com/dotnet/roslyn/pull/39644","RelatedDescription":"Open PR \"Follow-up on adding NullableAnnotation/WithNullableAnnotation APIs to ITypeSymbol.\" (#39644)"},{"Id":"516357243","IsPullRequest":false,"CreatedAt":"2019-11-01T21:31:38","Actor":"AlekseyTs","Number":"39643","RawContent":null,"Title":"Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer should be modified to properly deal with differences caused by nullability","State":"open","Body":"```ITypeSymbol.NullableAnnotation``` API was added in https://github.com/dotnet/roslyn/pull/39498 and some unit-test started failing in that PR due to the fact that SymbolEquivalenceComparer stopped treating some symbols equivalent when the only difference comes from NullableAnnotation.\r\nA temporary workaround was added to AreEquivalent method to get tests passing, it is not guaranteed to handle all different situations that can arise in the real world. A more robust long term solution should be implemented instead.","Url":"https://github.com/dotnet/roslyn/issues/39643","RelatedDescription":"Open issue \"Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer should be modified to properly deal with differences caused by nullability\" (#39643)"},{"Id":"516352550","IsPullRequest":true,"CreatedAt":"2019-11-01T21:19:39","Actor":"JoeRobich","Number":"39642","RawContent":null,"Title":"Skip failing integration tests","State":"open","Body":"See https://github.com/dotnet/roslyn/issues/39588\r\n\r\nSkip failing tests so we can require integration tests on PRs.","Url":"https://github.com/dotnet/roslyn/pull/39642","RelatedDescription":"Open PR \"Skip failing integration tests\" (#39642)"},{"Id":"516351883","IsPullRequest":false,"CreatedAt":"2019-11-01T21:17:57","Actor":"AlekseyTs","Number":"39641","RawContent":null,"Title":"Microsoft.CodeAnalysis.CSharp.UnitTests.Editing.AddImportsTests.TestSafeWithMatchingSimpleNameInAllLocations started failing after ITypeSymbol.NullableAnnotation API was added.","State":"open","Body":"```ITypeSymbol.NullableAnnotation``` API was added in https://github.com/dotnet/roslyn/pull/39498 and TestSafeWithMatchingSimpleNameInAllLocations unit-test started failing in that PR. Presumably due to the fact that presence of NullableAnnotation affects the way symbols are matched by involved components.\r\n\r\nPer request in https://github.com/dotnet/roslyn/pull/39498#discussion_r340840007, the base-line for the test is restored to the original state and the test is disabled.","Url":"https://github.com/dotnet/roslyn/issues/39641","RelatedDescription":"Open issue \"Microsoft.CodeAnalysis.CSharp.UnitTests.Editing.AddImportsTests.TestSafeWithMatchingSimpleNameInAllLocations started failing after ITypeSymbol.NullableAnnotation API was added.\" (#39641)"},{"Id":"516349442","IsPullRequest":false,"CreatedAt":"2019-11-01T21:11:39","Actor":"vsfeedback","Number":"39640","RawContent":null,"Title":"Extract class to a new file from file with regions included creates a class with unclosed #region tag","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/698268/extract-class-to-a-new-file-from-file-with-regions.html)._\n\n---\nSay, we have a file `KekPuks.cs`:\n\n```csharp\nnamespace LolKek\n{\n  #region Lol and Kek here\n  class Lol \n  {\n    \n}\n\nclass Kek\n  {\n  }\n\n#endregion\n}\n```\n\nAnd we want to extract class `Kek` to a new file. We use VS own refactoring method, then VS will create a new file named `Kek.cs`:\n\n```csharp\nnamespace LolKek\n{\n  class Kek\n  {\n  }\n\n#endregion\n}\n```\n\nAs you see, the new generated source file will contain `#endregion` tag without started `#region`.\n\nJust checked it in the VS2017 `15.9.14`, `15.9.15` versions, also in the VS2019 `16.2.1`, `16.2.2`\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 8/19/2019, 00:00 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 8/19/2019, 03:22 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39640","RelatedDescription":"Open issue \"Extract class to a new file from file with regions included creates a class with unclosed #region tag\" (#39640)"},{"Id":"516344116","IsPullRequest":true,"CreatedAt":"2019-11-01T20:59:05","Actor":"JoeRobich","Number":"39639","RawContent":null,"Title":"Revert \"Run integration tests with .NET Core SDK shipped with VS\"","State":"open","Body":"Reverts dotnet/roslyn#39587\r\n\r\nThese changes did not help the integration test situation.","Url":"https://github.com/dotnet/roslyn/pull/39639","RelatedDescription":"Open PR \"Revert \"Run integration tests with .NET Core SDK shipped with VS\"\" (#39639)"},{"Id":"516317266","IsPullRequest":true,"CreatedAt":"2019-11-01T19:59:14","Actor":"JoeRobich","Number":"39638","RawContent":null,"Title":"Use resource strings for validating warning text","State":"open","Body":"Tests were using non-localized strings to verify warning text. Running on Spanish pool caused them to fail.","Url":"https://github.com/dotnet/roslyn/pull/39638","RelatedDescription":"Open PR \"Use resource strings for validating warning text\" (#39638)"},{"Id":"516309240","IsPullRequest":false,"CreatedAt":"2019-11-01T19:38:39","Actor":"ericwj","Number":"39637","RawContent":null,"Title":"`IDE0063` fix introduces `CS8648` in presence of `goto` statements","State":"open","Body":"**Version Used**: \r\nI think `3.4.0-beta2-19504-06` as C# Interactive shows that version. \r\n\r\nVS is `16.4.0 Preview 2.0`.\r\n\r\n`<TargetFramework>` is `netcoreapp3.1` so I believe I am using `<LangVersion>Preview</LangVersion>` implicitly.\r\n\r\n**Steps to Reproduce**:\r\n\r\nThe code below will show the fix suggestion `/*IDE0063*/` and the code after applying the `IDE0063` fix at the location shown with error `/*CS8648*/`.\r\n\r\n* __IDE0063__ Use simple 'using' statement\r\n* __CS8648__ A goto cannot jump to a location after a using declaration\r\n\r\nThe crux appears to be that there are two statements blocks nested, with the nested one bing a `using` statement. The first isn't showing `IDE0063` whereas the second does offer the fix, which breaks the code when applied.\r\n\r\n**Expected Behavior**:\r\nThe fix suggestion does not appear.\r\n\r\nOr in fact, even if there is code between the two `}` such that the finally blocks are apart, applying the fix would in fact have to put the finalizer for the simple using statement at the end of the block it is in, which is the finalizer position of the first `using` statement in the code below. So one could argue whether the code below in both forms should produce the exact same syntax tree end hence both compile without error.\r\n\r\nOn top of that, my understanding of the feature is that *any* block in which the simple `using` statement appears would become protected by the finalizer, even if there is just an `if` block or even just `{` ... `}` without any construct accompanying it. And indeed, if I remove the exact text `using (var d = new Disposable())` (but leave the brace-open) in the `IDE0063_After` code, the `goto` preceding the brace-open does not show `CS8648`.\r\n\r\nSo:\r\n\r\n**Really Expected Behavior**\r\nWhether I accept the fix or not, the code compiles and `CS8648` does not appear.\r\n\r\n**Actual Behavior**:\r\nThe fix suggestion, even before it is applied - in the preview, produces error `CS8648` \"A goto cannot jump to a location after a using declaration\".\r\n\r\n**Code**\r\n```CS\r\nstruct Disposable : IDisposable { public void Dispose() { } }\r\nclass IDE0063_Before\r\n{\r\n    static int Main(string[] args) {\r\n        var errorLevel = 0;\r\n        if (args.Length == 0) goto Fail;\r\n        using (var d = new Disposable()) {\r\n            if (int.TryParse(args[0], out errorLevel)) goto Fail;\r\n            /*IDE0063*/\r\n            using (var e = new Disposable()) {\r\n                foreach (var arg in args)\r\n                    if (int.TryParse(arg, out errorLevel)) goto Fail;\r\n            }\r\n        }\r\n        return errorLevel;\r\n    Fail:\r\n        errorLevel = default;\r\n        return errorLevel;\r\n    }\r\n}\r\nclass IDE0063_After\r\n{\r\n    static int NotMain(string[] args) {\r\n        var errorLevel = 0;\r\n        if (args.Length == 0) goto Fail;\r\n        using (var d = new Disposable()) {\r\n            if (int.TryParse(args[0], out errorLevel)) /*CS8648*/ goto Fail;\r\n            using var e = new Disposable();\r\n            foreach (var arg in args)\r\n                if (int.TryParse(arg, out errorLevel)) goto Fail;\r\n        }\r\n        return errorLevel;\r\n    Fail:\r\n        errorLevel = default;\r\n        return errorLevel;\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39637","RelatedDescription":"Open issue \"`IDE0063` fix introduces `CS8648` in presence of `goto` statements\" (#39637)"},{"Id":"516293669","IsPullRequest":true,"CreatedAt":"2019-11-01T19:02:18","Actor":"sharwell","Number":"39636","RawContent":null,"Title":"Fix stack overflow in inheritdoc evaluation","State":"open","Body":"Fixes #39158","Url":"https://github.com/dotnet/roslyn/pull/39636","RelatedDescription":"Open PR \"Fix stack overflow in inheritdoc evaluation\" (#39636)"},{"Id":"516292035","IsPullRequest":false,"CreatedAt":"2019-11-01T18:58:44","Actor":"CyrusNajmabadi","Number":"39635","RawContent":null,"Title":"OOP crash while editing in Roslyn.sln","State":"open","Body":"Got a yellow bar with \"unfortunatey a process has crashed\".  Stack was:\r\n\r\n```\r\nStreamJsonRpc.RemoteInvocationException : There are no pointer types in VB.\r\n   at async StreamJsonRpc.JsonRpc.InvokeCoreAsync[TResult](<Unknown Parameters>)\r\n   at async Microsoft.VisualStudio.LanguageServices.Remote.JsonRpcEx.InvokeAsync[T](<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n---> (Remote Exception) {\r\n  \"type\": \"System.NotSupportedException\",\r\n  \"message\": \"There are no pointer types in VB.\",\r\n  \"stack\": \"   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonCreatePointerTypeSymbol(ITypeSymbol elementType)\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.PointerTypeSymbolKey.Resolve(SymbolKeyReader reader)\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.SymbolKeyReader.ReadWorker(SymbolKeyType type)\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.SymbolKeyReader.ReadSymbolKey()\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.Reader`1.ReadArray[T](Func`1 readFunction)\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.SymbolKeyReader.ReadSymbolKeyArray[TSymbol]()\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.MethodSymbolKey.Resolve(SymbolKeyReader reader, Boolean isPartialMethodImplementationPart, IMethodSymbol method)\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.MethodSymbolKey.Resolve(SymbolKeyReader reader, String metadataName, Int32 arity, Boolean isPartialMethodImplementationPart, PooledArrayBuilder`1 parameterRefKinds, Int32 beforeParametersPosition, IMethodSymbol method)\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.MethodSymbolKey.Resolve(SymbolKeyReader reader)\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.SymbolKeyReader.ReadWorker(SymbolKeyType type)\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.SymbolKeyReader.ReadSymbolKey()\\r\\n   at Microsoft.CodeAnalysis.SymbolKey.ResolveString(String symbolKey, Compilation compilation, Boolean ignoreAssemblyKey, Boolean resolveLocations, CancellationToken cancellationToken)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DeclarationFinder.<>c__DisplayClass1_0.<AddCompilationDeclarationsWithNormalQueryAsync>b__1(SymbolAndProjectId s)\\r\\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\\r\\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\\r\\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\\r\\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\\r\\n   at System.Collections.Immutable.ImmutableArray.CreateRange[T](IEnumerable`1 items)\\r\\n   at System.Collections.Immutable.ImmutableArray.ToImmutableArray[TSource](IEnumerable`1 items)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DeclarationFinder.<AddCompilationDeclarationsWithNormalQueryAsync>d__1.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DeclarationFinder.<FindAllDeclarationsWithNormalQueryInCurrentProcessAsync>d__8.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.FindSymbols.DeclarationFinder.<FindAllDeclarationsWithNormalQueryAsync>d__7.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.AllSymbolsProjectSearchScope.<FindDeclarationsAsync>d__1.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.SearchScope.<FindDeclarationsAsync>d__6.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.SymbolReferenceFinder.<GetReferencesForMatchingExtensionMethodsAsync>d__25.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.SymbolReferenceFinder.<DoAsync>d__17.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.<FindResultsInAllSymbolsInStartingProjectAsync>d__21.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.<FindResultsAsync>d__20.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.<FindResultsAsync>d__18.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.<GetFixesInCurrentProcessAsync>d__17.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.AddImport.AbstractAddImportFeatureService`1.<GetFixesAsync>d__16.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.Remote.CodeAnalysisService.<>c__DisplayClass1_0.<<GetFixesAsync>b__0>d.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.CodeAnalysis.Remote.ServiceBase.<RunServiceAsync>d__27`1.MoveNext()\",\r\n  \"code\": -2146233067,\r\n  \"inner\": null\r\n} <--- \r\n```","Url":"https://github.com/dotnet/roslyn/issues/39635","RelatedDescription":"Open issue \"OOP crash while editing in Roslyn.sln\" (#39635)"},{"Id":"516093953","IsPullRequest":true,"CreatedAt":"2019-11-01T13:22:39","Actor":"AdamSpeight2008","Number":"39633","RawContent":null,"Title":"Unify the checking of being called on correct token kind.","State":"closed","Body":"Changes various debug.asserts to use new helper method which automatically gets the method name.","Url":"https://github.com/dotnet/roslyn/pull/39633","RelatedDescription":"Closed or merged PR \"Unify the checking of being called on correct token kind.\" (#39633)"},{"Id":"516073420","IsPullRequest":false,"CreatedAt":"2019-11-01T12:06:47","Actor":"reflectronic","Number":"39632","RawContent":null,"Title":"Cannot use index initializer with fixed sized buffer","State":"open","Body":"You currently cannot use an index initializer to populate a fixed-sized buffer. For example:\r\n\r\n```cs\r\nstruct Body\r\n{\r\n    public fixed double V[3];\r\n}\r\n\r\nnew Body\r\n{\r\n\tV = \r\n\t{\r\n\t\t[0] = 1,\r\n\t\t[1] = 2,\r\n\t\t[2] = 3\r\n\t}\r\n};\r\n```\r\n\r\nemits on `V =` an error:\r\n> error CS1666: You cannot use fixed size buffers contained in unfixed expressions. Try using the fixed statement.\r\n\r\nFirstly, if this is intended behavior, I would at least improve the error message, especially since trying to pin `Body.V` emits \r\n> error CS0213: You cannot use the fixed statement to take the address of an already fixed expression\r\n\r\nso you cannot even resolve this issue in the way the error message suggests. However, I think that it should work as expected (and I believe that it can be supported within the current parameters of the language).","Url":"https://github.com/dotnet/roslyn/issues/39632","RelatedDescription":"Open issue \"Cannot use index initializer with fixed sized buffer\" (#39632)"},{"Id":"516064469","IsPullRequest":true,"CreatedAt":"2019-11-01T11:44:17","Actor":"AdamSpeight2008","Number":"39631","RawContent":null,"Title":"Dispose of StringWriter after merging token text.","State":"open","Body":"Small change, where we dispose of the string writer.","Url":"https://github.com/dotnet/roslyn/pull/39631","RelatedDescription":"Open PR \"Dispose of StringWriter after merging token text.\" (#39631)"},{"Id":"516058347","IsPullRequest":true,"CreatedAt":"2019-11-01T11:28:28","Actor":"v-zbsail","Number":"39630","RawContent":null,"Title":"LOC CHECKIN | dotnet/roslyn  release/dev16.4-vs-deps | 20191101","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39630","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/roslyn  release/dev16.4-vs-deps | 20191101\" (#39630)"},{"Id":"516026994","IsPullRequest":true,"CreatedAt":"2019-11-01T10:14:49","Actor":"YairHalberstadt","Number":"39629","RawContent":null,"Title":"Add CrefSignaturePart to SyntaxFacts.IsInTypeOnlyContext","State":"open","Body":"Fixes #39592","Url":"https://github.com/dotnet/roslyn/pull/39629","RelatedDescription":"Open PR \"Add CrefSignaturePart to SyntaxFacts.IsInTypeOnlyContext\" (#39629)"},{"Id":"516003426","IsPullRequest":false,"CreatedAt":"2019-11-01T09:29:16","Actor":"simonthum","Number":"39628","RawContent":null,"Title":"Internal Compiler Error (with Stacktrace)","State":"open","Body":"**Version Used**: \r\n\r\nVS2019 16.3.7\r\n\r\nThe bug triggered by our backend code. The codebase **compiles fine until at least VS2019 16.2.5.**\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Compile using MSBuild\r\n\r\n**Expected Behavior**:\r\nCompiles fine.\r\n**Actual Behavior**:\r\n\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error MSB6006: \"csc.exe\" exited with code -2146232797.\r\n\r\nStacktrace:\r\n```\r\nApplication: VBCSCompiler.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.InvalidCastException: Unable to cast object of type 'ImplicitValuedEnumConstantSymbol' to type 'Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol'.\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.ConvertConcatExprToString(SyntaxNode syntax, BoundExpression expr)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteStringConcatenation(SyntaxNode syntax, BinaryOperatorKind operatorKind, BoundExpression loweredLeft, BoundExpression loweredRight, TypeSymbol type)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeBinaryOperator(BoundBinaryOperator oldNode, SyntaxNode syntax, BinaryOperatorKind operatorKind, BoundExpression loweredLeft, BoundExpression loweredRight, TypeSymbol type, MethodSymbol method, Boolean isPointerElementAccess, Boolean isCompoundAssignment, BoundUnaryOperator applyParentUnaryOperator)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBinaryOperator(BoundBinaryOperator node, BoundUnaryOperator applyParentUnaryOperator)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitReturnStatement(BoundReturnStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitReturnStatement(BoundReturnStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitPossibleUsingDeclaration(BoundStatement node, ImmutableArray`1 statements, Int32 statementIndex, Boolean& replacedLocalDeclarations)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatementSubList(ArrayBuilder`1 builder, ImmutableArray`1 statements, Int32 startIndex)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(CSharpCompilation compilation, MethodSymbol method, Int32 methodOrdinal, NamedTypeSymbol containingType, BoundStatement statement, TypeCompilationState compilationState, SynthesizedSubmissionFields previousSubmissionFields, Boolean allowOmissionOfConditionalCalls, Boolean instrumentForDynamicAnalysis, ImmutableArray`1& dynamicAnalysisSpans, DebugDocumentProvider debugDocumentProvider, DiagnosticBag diagnostics, Boolean& sawLambdas, Boolean& sawLocalFunctions, Boolean& sawAwaitInExceptionHandler)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.ConvertConcatExprToString(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteStringConcatenation(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeBinaryOperator(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Boolean, Boolean, Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBinaryOperator(Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator, Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitPossibleUsingDeclaration(Microsoft.CodeAnalysis.CSharp.BoundStatement, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>, Int32, Boolean ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitStatementSubList(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.BoundStatement>, Int32)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.CSharpCompilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Boolean, Boolean, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, Microsoft.CodeAnalysis.DiagnosticBag, Boolean ByRef, Boolean ByRef, Boolean ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Boolean, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\n   at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39628","RelatedDescription":"Open issue \"Internal Compiler Error (with Stacktrace)\" (#39628)"},{"Id":"515869226","IsPullRequest":true,"CreatedAt":"2019-11-01T02:14:26","Actor":"tmat","Number":"39627","RawContent":null,"Title":"Do not fail fast on cancellation","State":"open","Body":"Crash dumps from Watson show that we fail fast when OperationCancelledException or TaskCanceledException is thrown while reading assets in ServiceHub process.","Url":"https://github.com/dotnet/roslyn/pull/39627","RelatedDescription":"Open PR \"Do not fail fast on cancellation\" (#39627)"},{"Id":"515843540","IsPullRequest":true,"CreatedAt":"2019-11-01T00:39:50","Actor":"tmat","Number":"39626","RawContent":null,"Title":"Do not report EnC diagnostics when EnC is disabled","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/39046.\r\n\r\nDisable all EnC functionality, including reporting warnings when changes are made while app is running, when EnC is disabled.\r\n\r\nIn addition, change the classification of EnC warnings to \"warning\" from \"rude edit\".","Url":"https://github.com/dotnet/roslyn/pull/39626","RelatedDescription":"Open PR \"Do not report EnC diagnostics when EnC is disabled\" (#39626)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"516781561","IsPullRequest":false,"CreatedAt":"2019-11-03T04:58:21","Actor":"josephmoresena","Number":"7860","RawContent":null,"Title":"Error compilling console app with System.Data.SqlClient on Linux","State":"open","Body":"I'm getting the following error when I'm trying to compile a simple console app which connects to a Sql Server database in Ubuntu 19.10.\r\n\r\n`  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__ImportPrincipalName':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/BooleanStorage.cs:180: undefined reference to `NetSecurityNative_ImportPrincipalName'\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__InitSecContext_0':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/ByteStorage.cs:162: undefined reference to `NetSecurityNative_InitSecContextEx'`","Url":"https://github.com/dotnet/corert/issues/7860","RelatedDescription":"Open issue \"Error compilling console app with System.Data.SqlClient on Linux\" (#7860)"},{"Id":"516763323","IsPullRequest":true,"CreatedAt":"2019-11-03T00:42:36","Actor":"Dotnet-GitSync-Bot","Number":"7859","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7859","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7859)"},{"Id":"516597160","IsPullRequest":true,"CreatedAt":"2019-11-02T14:00:46","Actor":"Dotnet-GitSync-Bot","Number":"7858","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7858","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7858)"},{"Id":"515535621","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:13","Actor":"MichalStrehovsky","Number":"7855","RawContent":null,"Title":"Disable multithreaded compilation","State":"closed","Body":"I won't have time to look into the race condition anytime soon. Fingers crossed that crossgen2 hits it in CoreCLR repo and there will be paid time available to investigate.","Url":"https://github.com/dotnet/corert/pull/7855","RelatedDescription":"Closed or merged PR \"Disable multithreaded compilation\" (#7855)"},{"Id":"515738596","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:00","Actor":"Dotnet-GitSync-Bot","Number":"7857","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7857)"},{"Id":"515578359","IsPullRequest":true,"CreatedAt":"2019-10-31T20:49:12","Actor":"Dotnet-GitSync-Bot","Number":"7856","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams","Url":"https://github.com/dotnet/corert/pull/7856","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7856)"},{"Id":"515147260","IsPullRequest":true,"CreatedAt":"2019-10-31T16:26:56","Actor":"Dotnet-GitSync-Bot","Number":"7854","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @stephentoub","Url":"https://github.com/dotnet/corert/pull/7854","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7854)"},{"Id":"514751933","IsPullRequest":true,"CreatedAt":"2019-10-31T04:03:03","Actor":"Dotnet-GitSync-Bot","Number":"7853","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT","Url":"https://github.com/dotnet/corert/pull/7853","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7853)"},{"Id":"514311437","IsPullRequest":true,"CreatedAt":"2019-10-30T15:11:24","Actor":"Dotnet-GitSync-Bot","Number":"7851","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @AaronRobinsonMSFT @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7851)"},{"Id":"514701238","IsPullRequest":false,"CreatedAt":"2019-10-30T14:11:01","Actor":"jkotas","Number":"7852","RawContent":null,"Title":"AF: InstantiatedMethod.SetCachedCanonValue","State":"open","Body":"```\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  Assertion Failed\r\n  \r\n     at Internal.TypeSystem.InstantiatedMethod.SetCachedCanonValue(CanonicalFormKind kind, InstantiatedMethod value) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 77\r\n     at Internal.TypeSystem.InstantiatedMethod.GetCanonMethodTarget(CanonicalFormKind kind) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 50\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 1193\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoBase.cs:line 2348\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 168\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 56\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at ILCompiler.RyuJitCompilation.<CompileMultiThreaded>b__8_0(Object m) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 101\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  Assertion Failed\r\n```","Url":"https://github.com/dotnet/corert/issues/7852","RelatedDescription":"Open issue \"AF: InstantiatedMethod.SetCachedCanonValue\" (#7852)"},{"Id":"514191229","IsPullRequest":true,"CreatedAt":"2019-10-30T00:06:55","Actor":"Dotnet-GitSync-Bot","Number":"7850","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk","Url":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7850)"},{"Id":"513004068","IsPullRequest":true,"CreatedAt":"2019-10-28T18:00:32","Actor":"MichalStrehovsky","Number":"7848","RawContent":null,"Title":"Port changes from CoreCLR","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7848","RelatedDescription":"Closed or merged PR \"Port changes from CoreCLR\" (#7848)"},{"Id":"513365041","IsPullRequest":true,"CreatedAt":"2019-10-28T17:14:45","Actor":"filipnavara","Number":"7849","RawContent":null,"Title":"Fix building portable thread pool on Windows","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Closed or merged PR \"Fix building portable thread pool on Windows\" (#7849)"},{"Id":"512879532","IsPullRequest":true,"CreatedAt":"2019-10-27T04:20:21","Actor":"MichalStrehovsky","Number":"7846","RawContent":null,"Title":"Fix thread safety issue in StructMarshallingThunk","State":"closed","Body":"The marshalling code generators are not thread safe. We should not cache them.\r\n\r\nHopefully fixes #7829.","Url":"https://github.com/dotnet/corert/pull/7846","RelatedDescription":"Closed or merged PR \"Fix thread safety issue in StructMarshallingThunk\" (#7846)"},{"Id":"512885160","IsPullRequest":true,"CreatedAt":"2019-10-26T22:46:14","Actor":"Dotnet-GitSync-Bot","Number":"7847","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro[bot]","Url":"https://github.com/dotnet/corert/pull/7847","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7847)"},{"Id":"512800635","IsPullRequest":true,"CreatedAt":"2019-10-26T17:45:27","Actor":"KodrAus","Number":"7843","RawContent":null,"Title":"Only set dependency package versions if they're empty","State":"closed","Body":"Hi! :wave:\r\n\r\nThis may not be a change you're interested in taking, but lately I've been playing with using local builds of various pieces of the .NET toolchain and have been having trouble finding a reasonable way to pull in my own build of `objwriter` based on a build of LLVM I've done previously.\r\n\r\nBy making these package versions conditionally set it becomes possible to specify them as environment variables when building `corert` without having to touch any of the other build scripts.","Url":"https://github.com/dotnet/corert/pull/7843","RelatedDescription":"Closed or merged PR \"Only set dependency package versions if they're empty\" (#7843)"},{"Id":"512839586","IsPullRequest":true,"CreatedAt":"2019-10-26T16:38:16","Actor":"Dotnet-GitSync-Bot","Number":"7845","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7845","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7845)"},{"Id":"512828238","IsPullRequest":true,"CreatedAt":"2019-10-26T14:03:27","Actor":"Dotnet-GitSync-Bot","Number":"7844","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7844","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7844)"},{"Id":"512692626","IsPullRequest":true,"CreatedAt":"2019-10-26T12:10:19","Actor":"Dotnet-GitSync-Bot","Number":"7842","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @VSadov @stephentoub","Url":"https://github.com/dotnet/corert/pull/7842","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7842)"},{"Id":"512298382","IsPullRequest":true,"CreatedAt":"2019-10-25T06:32:29","Actor":"jkotas","Number":"7841","RawContent":null,"Title":"Port AllocateUninitializedArray changes","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7841","RelatedDescription":"Closed or merged PR \"Port AllocateUninitializedArray changes\" (#7841)"},{"Id":"512183999","IsPullRequest":true,"CreatedAt":"2019-10-24T22:42:39","Actor":"Dotnet-GitSync-Bot","Number":"7840","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @tannergooding @adamsitnik @VSadov","Url":"https://github.com/dotnet/corert/pull/7840","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7840)"},{"Id":"511641265","IsPullRequest":true,"CreatedAt":"2019-10-24T21:08:56","Actor":"Dotnet-GitSync-Bot","Number":"7839","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7839","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7839)"},{"Id":"511517701","IsPullRequest":true,"CreatedAt":"2019-10-23T23:09:44","Actor":"Dotnet-GitSync-Bot","Number":"7838","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @AaronRobinsonMSFT @marek-safar @tmds","Url":"https://github.com/dotnet/corert/pull/7838","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7838)"},{"Id":"510975732","IsPullRequest":true,"CreatedAt":"2019-10-23T16:07:26","Actor":"Dotnet-GitSync-Bot","Number":"7837","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7837)"},{"Id":"510948047","IsPullRequest":true,"CreatedAt":"2019-10-22T22:07:19","Actor":"Dotnet-GitSync-Bot","Number":"7836","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7836)"},{"Id":"510804057","IsPullRequest":true,"CreatedAt":"2019-10-22T18:41:16","Actor":"Dotnet-GitSync-Bot","Number":"7834","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding","Url":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7834)"},{"Id":"510815389","IsPullRequest":false,"CreatedAt":"2019-10-22T17:57:39","Actor":"tiandian","Number":"7835","RawContent":null,"Title":"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?","State":"open","Body":"For my asp.net core c# project, it's a bit complicated, and it references some third party dlls, after spend some time, i fixing some problems, now it can build with corert, but when run, it will error.\r\n\r\nI don't know how many potential problems in my project are incompatible with corert.\r\n\r\nSo if you can provide a tool to scan my c# project, and list all codes that incompatible with corert, then i can modify all these codes before release it, otherwise, even if it can run now, there will still be potential errors.\r\n\r\nIf after fix all my c# project's incompatible problem, it still run error, then i know it must be some third party dlls are incompatible with corert, then i can disassembly the dll one by one to c# codes and scan it to find which one incompatible with corert, then submit a request to the dll's owner to compatible with corert. \r\n\r\nThanks.","Url":"https://github.com/dotnet/corert/issues/7835","RelatedDescription":"Open issue \"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?\" (#7835)"},{"Id":"509929616","IsPullRequest":false,"CreatedAt":"2019-10-22T05:20:51","Actor":"DardoTheMaster","Number":"7832","RawContent":null,"Title":"Unable to compile on Ubuntu 18.04 (WSL)","State":"closed","Body":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Closed issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832)"},{"Id":"510326059","IsPullRequest":true,"CreatedAt":"2019-10-22T02:26:35","Actor":"Dotnet-GitSync-Bot","Number":"7833","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @eriawan @danmosemsft @AaronRobinsonMSFT @stephentoub @GrabYourPitchforks @delmyers @benaadams @tannergooding","Url":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7833)"},{"Id":"509511141","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:12","Actor":"MichalStrehovsky","Number":"7831","RawContent":null,"Title":"Scan for Marshal.SizeOf in reflection-disabled mode","State":"closed","Body":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.).","Url":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Closed or merged PR \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"516732193","IsPullRequest":false,"CreatedAt":"2019-11-02T21:47:46","Actor":"johnkors","Number":"3853","RawContent":null,"Title":"`dotnet tool install/update` installs unlisted package","State":"open","Body":"Hi,\r\n\r\nI unlisted a .NET Core global tool nuget package (latest version) I own on nuget.org, and when I run `dotnet tool install` or `dotnet tool update` it still installs the unlisted/deprecated latest version. Is this by design? I tried to mark it as deprecated as well, but no effect.","Url":"https://github.com/dotnet/sdk/issues/3853","RelatedDescription":"Open issue \"`dotnet tool install/update` installs unlisted package\" (#3853)"},{"Id":"516571162","IsPullRequest":true,"CreatedAt":"2019-11-02T14:02:53","Actor":"dotnet-maestro[bot]","Number":"3851","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 4:57 PM\r\n- **Commit**: f757dab263c59ffa51717974ec9a5da76a7a3b6e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19551.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3851","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3851)"},{"Id":"516584593","IsPullRequest":false,"CreatedAt":"2019-11-02T12:58:24","Actor":"jbartlau","Number":"3852","RawContent":null,"Title":"Reading MSBuild registry properties from NuGet targets file fails in .NET Core CLI","State":"open","Body":"I'm trying to create a NuGet package in order to redistribute a component that uses both managed and unmanaged dependencies (`my.dll` and `mydotnetcore.dll`). To copy the additional (unmanaged) file from a local installation to the output directory, we use a targets file. We read a registry key to find the local installation:\r\n\r\n**my.targets file:**\r\n```XML\r\n<PropertyGroup>\r\n  <InstDir>$(registry:HKEY_CURRENT_USER\\SOFTWARE\\myapp@LocalDir)</InstDir>\r\n</PropertyGroup\r\n```\r\n\r\nThe local file is then copied as follows:\r\n\r\n```\r\n<None Include=\"$(InstDir)\\my.dll\">\r\n  <Visible>False</Visible>\r\n  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n</None>\r\n```\r\n\r\n**my.nuspec file:**\r\n```\r\n…\r\n<files>\r\n  <file src=\"..\\mydotnetcore.dll\" target=\"lib\\NetCoreApp30\\mydotnetcore.dll\"/>\r\n  <file src=\"build\\my.targets\" target=\"build\\my.targets\"/>                       \r\n</files>\r\n```\r\n\r\nIf I add this NuGet package to a .NET Core 3 (VS 2019) application and build it in the VS IDE, the application is built and both DLLs are copied to the output directory - all is well.\r\n\r\nHowever when building using the .NET Core command-line (CLI) tool like so:\r\n\r\n    dotnet build\r\n\r\nthe unmanaged dependency is _not_ copied. I've found out that in this case, the `InstDir` property\r\n\r\n```\r\n<InstDir>$(registry:HKEY_CURRENT_USER\\SOFTWARE\\myapp@LocalDir)</InstDir>\r\n```\r\n\r\nseems to be empty.  Monitoring the process with Sysinternals' Process Monitor shows that the registry is not accessed. Apparently the entry is ignored. If an absolute path is entered for the property <InstDir>, the dll will also be copied just fine. \r\n\r\nI've also tried to get this running using a property function (`[MSBuild]::GetRegistryValue`) but got the same result.\r\n","Url":"https://github.com/dotnet/sdk/issues/3852","RelatedDescription":"Open issue \"Reading MSBuild registry properties from NuGet targets file fails in .NET Core CLI\" (#3852)"},{"Id":"516383664","IsPullRequest":true,"CreatedAt":"2019-11-01T22:43:58","Actor":"sfoslund","Number":"3850","RawContent":null,"Title":"Removing Redundant NuGetPackageId and PackageName metadata","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3850","RelatedDescription":"Open PR \"Removing Redundant NuGetPackageId and PackageName metadata\" (#3850)"},{"Id":"516335435","IsPullRequest":true,"CreatedAt":"2019-11-01T22:20:56","Actor":"dotnet-maestro[bot]","Number":"3849","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3849","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3849)"},{"Id":"516234868","IsPullRequest":false,"CreatedAt":"2019-11-01T17:02:31","Actor":"JohanLarsson","Number":"3848","RawContent":null,"Title":"Pack library with analyzer","State":"open","Body":"It is common to have:\r\n\r\n```\r\nLib.csproj\r\nLib.Analyzers.csproj\r\n```\r\n\r\nWhere `Lib.csproj` does not have a project reference to `Lib.Analyzers.csproj` but we want `Lib.nupkg` to have package dependency to `Lib.Analyzers.nupkg`\r\n\r\nWhen using paket for packing it is just a matter of adding the following to `paket.template`:\r\n\r\n```\r\ndependencies\r\n  Lib.Analyzers\r\n```\r\n\r\nI tried adding a fake project reference as a hack\r\n```xml\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Lib.Analyzers\\Lib.Analyzers.csproj\">\r\n      <!-- hack for packing with package dependency -->\r\n      <PrivateAssets>none</PrivateAssets>\r\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\r\n      <SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>\r\n      <UndefineProperties>TargetFramework</UndefineProperties>\r\n    </ProjectReference>\r\n  </ItemGroup>\r\n```\r\n\r\nBut it did not work and had issues when building.\r\n\r\nIs there support for this scenario and if so where is it documented?","Url":"https://github.com/dotnet/sdk/issues/3848","RelatedDescription":"Open issue \"Pack library with analyzer\" (#3848)"},{"Id":"516223118","IsPullRequest":true,"CreatedAt":"2019-11-01T16:40:44","Actor":"dotnet-maestro-bot","Number":"3847","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3847","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3847)"},{"Id":"515718629","IsPullRequest":true,"CreatedAt":"2019-11-01T16:37:36","Actor":"mmitche","Number":"3842","RawContent":null,"Title":"Update branding for preview3","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3842","RelatedDescription":"Closed or merged PR \"Update branding for preview3\" (#3842)"},{"Id":"516071608","IsPullRequest":true,"CreatedAt":"2019-11-01T13:27:47","Actor":"dotnet-maestro[bot]","Number":"3846","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191031.14\r\n- **Date Produced**: 10/31/2019 10:18 PM\r\n- **Commit**: db50c8d7378a7a81033a1b8fcfa5461694a891c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19531.14\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19531.14\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19531.14\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3846","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3846)"},{"Id":"516053707","IsPullRequest":true,"CreatedAt":"2019-11-01T11:17:12","Actor":"v-zbsail","Number":"3845","RawContent":null,"Title":"LOC CHECKIN | dotnet/sdk  release/3.1.1xx | 20191101","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3845","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/sdk  release/3.1.1xx | 20191101\" (#3845)"},{"Id":"515889920","IsPullRequest":true,"CreatedAt":"2019-11-01T05:56:15","Actor":"dotnet-maestro[bot]","Number":"3844","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.15\r\n- **Date Produced**: 11/1/2019 2:23 AM\r\n- **Commit**: 62ec98d1d1938dd0286d2a211d6856ee053aab9b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.15\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3844","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3844)"},{"Id":"514985381","IsPullRequest":true,"CreatedAt":"2019-10-31T23:02:13","Actor":"wli3","Number":"3832","RawContent":null,"Title":"port remove signature on MAC host","State":"closed","Body":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar","Url":"https://github.com/dotnet/sdk/pull/3832","RelatedDescription":"Closed or merged PR \"port remove signature on MAC host\" (#3832)"},{"Id":"514992403","IsPullRequest":true,"CreatedAt":"2019-10-31T21:03:53","Actor":"dotnet-maestro-bot","Number":"3833","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3833","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3833)"},{"Id":"515731459","IsPullRequest":false,"CreatedAt":"2019-10-31T20:42:03","Actor":"CumpsD","Number":"3843","RawContent":null,"Title":"dotnet restore no longer supports multiple runtimes","State":"open","Body":"**Repo**\r\n```\r\ndotnet new console\r\ndotnet restore -r win-x64 -r linux-x64\r\n```\r\n\r\n**Result**\r\n```\r\nerror NETSDK1083: The specified RuntimeIdentifier 'win-x64;linux-x64' is not recognized.\r\n```\r\n\r\n**Speculation**\r\nIt seems the multiple runtimes are being passed in as RuntimeIdentifier instead of RuntimeIdentifiers?\r\n\r\nThis used to work on 2.2\r\n\r\nAs a workaround I can put `<RuntimeIdentifiers>....` in the csproj and exclude the `-r` switches, but I dont really want to do this, since it means updating *a lot* of csprojs.\r\n\r\nPS: I tried to find the cause for this, but got lost finding the source responsible for the `dotnet restore` command :(","Url":"https://github.com/dotnet/sdk/issues/3843","RelatedDescription":"Open issue \"dotnet restore no longer supports multiple runtimes\" (#3843)"},{"Id":"515644880","IsPullRequest":true,"CreatedAt":"2019-10-31T19:45:59","Actor":"dotnet-maestro[bot]","Number":"3840","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.6\r\n- **Date Produced**: 10/31/2019 4:30 PM\r\n- **Commit**: d992cb6bb8368a7f3161fbf1a863b073ec28c956\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3840","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3840)"},{"Id":"515649068","IsPullRequest":false,"CreatedAt":"2019-10-31T18:22:53","Actor":"sfoslund","Number":"3841","RawContent":null,"Title":"Run target does not take input to run .NET Core app","State":"open","Body":"**Steps to reproduce**\r\nCreate any .NET Core project (eg., with ``dotnet new console``)\r\nBuild it (eg., with ``dotnet build`` or ``msbuild /t:restore;build``)\r\nRun it with msbuild and any input (ie., ``msbuild /t:run input``)\r\n\r\n**Expected behavior**\r\nIt runs similar to running ``dotnet run`` or ``dotnet exec``\r\n\r\n**Actual behavior**\r\nMSBUILD : error MSB1009: Project file does not exist.\r\n\r\n**dotnet --version**\r\n3.1.100-preview1-014459\r\n\r\nThe MSBuild run target has been overridden to mirror ``dotnet run`` with no input: see #2283 and #3820\r\nOriginal issue: microsoft/msbuild#3355","Url":"https://github.com/dotnet/sdk/issues/3841","RelatedDescription":"Open issue \"Run target does not take input to run .NET Core app\" (#3841)"},{"Id":"515600362","IsPullRequest":false,"CreatedAt":"2019-10-31T17:07:46","Actor":"heaths","Number":"3839","RawContent":null,"Title":"dotnet add package --source downloads wrong nupkg","State":"open","Body":"We've been publishing prerelease packages to nuget.org, with our impending packages in a private repo in Azure Artifacts.\r\n\r\nPrior to release - apart from manually examining the packages I downloaded from our artifacts repo - I created a project via `dotnet new` and proceed to add our impending release packages via `dotnet add package <packageId> --source <private package repo>`. The packages were added; however, certain changes I made were not available - it was still the old code.\r\n\r\nWhen I examined the .csproj and project.assets.json, the version of the package was indeed a release version, i.e. \"4.0.0\" and not something like \"4.0.0-preview.5\". However, in project.assets.json, some of the dependencies were still prereleases, e.g. Azure.Core still referenced 1.0.0-preview.1.\r\n\r\nI took a look at my nuget cache ~\\.nuget\\packages and the \"4.0.0\" directory had today's date, but going deeper I found that the assemblies - the actually DLLs - had a date of 4 months ago. The .nuspec was also right, and had \"4.0.0\" with the right Azure.Core dependency (a released version, i.e. \"1.0.0\". The DLLs match those (both date and version) of our 4.0.0-preview.1 release back in June.\r\n\r\nIt seems that the package metadata was pulled from our private repo and even for extraction, but the binaries were actually from nuget.org - matching the lowest possible dependencies (as expected, were I actually wanting >= 4.0.0 *with* preview versions).\r\n\r\nAt the time, I didn't have a nuget.config that put our private feed first. Adding that fixed the issue, but the main concern here is that nuget / `dotnet add package` incorrectly extracted and used the wrong version of a package and was terribly misleading, calling the cache \"4.0.0\" when it should've been \"4.0.0-preview.1\". Besides, according to \"dotnet add package --help\",\r\n\r\n> -s, --source <SOURCE>               The NuGet package source to use during the restore.\r\n\r\nBut that doesn't seem to have been the case, given the metadata was correct but the binaries - everything within the package, it seems - was from nuget.org that only has prereleases right now.\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview1-014459\r\n Commit:    ac3b59712d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100-preview1-014459\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview1.19506.1\r\n  Commit:  bbf5542781\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013437 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014459 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19374.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28373-17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28373-17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3839","RelatedDescription":"Open issue \"dotnet add package --source downloads wrong nupkg\" (#3839)"},{"Id":"515503102","IsPullRequest":false,"CreatedAt":"2019-10-31T15:01:30","Actor":"MichaelSimons","Number":"3838","RawContent":null,"Title":"dotnet global tools failing to uninstall or update on 2.1-sdk-alpine","State":"open","Body":"@RyanWhite25 commented on [Wed Oct 30 2019](https://github.com/dotnet/dotnet-docker/issues/1426)\n\n## Steps to reproduce the issue\r\n1. Create a basic dockerfile as below\r\n```\r\nFROM microsoft/dotnet:2.1-sdk-alpine\r\n\r\nRUN dotnet tool install -g Amazon.Lambda.Tools\r\n\r\nCMD [\"/bin/sh\"]\r\n```\r\n\r\n\r\n2. Build a Docker image and run a container \r\n\r\n```\r\ndocker build <dir>\r\ndocker container run -it <image id>\r\n```\r\n\r\n3. Attempt to uninstall or update the nuget package\r\n```\r\ndotnet tool update -g Amazon.Lambda.Tools\r\n```\r\n\r\n```\r\ndotnet tool uninstall -g Amazon.Lambda.Tools\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe package is updated or uninstalled\r\n\r\n## Actual behavior\r\n\r\nAn error message is thrown:\r\n\r\n```\r\nTool 'amazon.lambda.tools' failed to update due to the following:\r\nFailed to uninstall tool package 'amazon.lambda.tools': Cross-device link\r\n```\r\n\r\n## Additional information (e.g. issue happens only occasionally)\r\n\r\nI've ran into an issue when uninstalling or updating nuget packages on microsoft/dotnet:2.1-sdk-alpine, when baked into a docker image via a dockerfile.\r\n\r\nI've been able to replicate on different host machines, and only seems to occur when the package has been pre-installed on the image. Running the base container interactively and installing allows me to update and uninstall the package as expected.\r\n\r\nI've used Amazon.Lambda.Tools as an example, but this seems to also occur on the several other packages I've tested.\r\n\r\nIt also seems to occur when using --tools-path instead of global.\r\n\r\nA seemingly similar issue has also been reported on StackOverflow here:\r\nhttps://stackoverflow.com/questions/57792546/docker-uninstall-dotnet-global-tool-installed-through-dockerfile\r\n\r\nI'm specifically seeing this issue when trying to build PowerShell Core AWS Lambda functions using New-AWSPowerShellLambdaPackage, which is failing when it can't update the existing installation of Amazon.Lambda.Tools:\r\nhttps://github.com/aws/aws-lambda-dotnet/blob/master/PowerShell/Module/Private/_DeploymentFunctions.ps1#L314\r\n\r\nThanks for any information or assistance you can provide with this.\r\n\r\n## Output of `docker version`\r\n\r\n```\r\nClient:\r\n Version:           18.06.1-ce\r\n API version:       1.38\r\n Go version:        go1.10.3\r\n Git commit:        e68fc7a215d7133c34aa18e3b72b4a21fd0c6136\r\n Built:             Mon Jul  1 18:51:44 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.06.1-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.10.3\r\n  Git commit:       e68fc7a/18.06.1-ce\r\n  Built:            Mon Jul  1 18:53:20 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n## Output of `docker info`\r\n\r\n```\r\nContainers: 20\r\n Running: 1\r\n Paused: 0\r\n Stopped: 19\r\nImages: 28\r\nServer Version: 18.06.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: xfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 468a545b9edcd5932818eb9de8e72413e616e86e\r\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\r\ninit version: fec3683\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.14.138-114.102.amzn2.x86_64\r\nOperating System: Amazon Linux 2\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 983.7MiB\r\nName: ip-172-31-11-191.eu-west-1.compute.internal\r\nID: J53Z:IZEG:YQT5:E2KR:SWNZ:JTHZ:QQCE:3ZWZ:VX4M:IDVJ:5W5B:6LG5\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\n\n---\n\n@mthalman commented on [Thu Oct 31 2019](https://github.com/dotnet/dotnet-docker/issues/1426#issuecomment-548403123)\n\nI've been able to repro this issue.  I've also confirmed that the same error occurs for both 2.2 and 3.0 SDKs.\r\n\r\n@RyanWhite25 - Although this is unrelated to the issue you encountered, we recommend that you update your .NET image references to use the [MCR Docker registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/).  In your case, `microsoft/dotnet:2.1-sdk-alpine` would be replaced with `mcr.microsoft.com/dotnet/core/sdk:2.1-alpine`. These new tags are all published on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\n\n---\n\n@MichaelSimons commented on [Thu Oct 31 2019](https://github.com/dotnet/dotnet-docker/issues/1426#issuecomment-548415206)\n\nThis issue is also not specific to the `alpine` images, you can reproduce it with Debian for example (e.g. `mcr.microsoft.com/dotnet/core/sdk:3.0`).  Given the `Cross-device link` error, I am speculating this is related to Docker layering and the overlay mount that is created that unions all of the image layers together.  For example if you install and uninstall the tool within a single layer everything works fine.  Does the `dotnet tool` infrastructure rely on hard links?  Moving to the SDK team to investigate.\n\n","Url":"https://github.com/dotnet/sdk/issues/3838","RelatedDescription":"Open issue \"dotnet global tools failing to uninstall or update on 2.1-sdk-alpine\" (#3838)"},{"Id":"515375804","IsPullRequest":true,"CreatedAt":"2019-10-31T14:23:15","Actor":"dotnet-maestro[bot]","Number":"3837","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191030.15\r\n- **Date Produced**: 10/31/2019 12:30 AM\r\n- **Commit**: 35c10b82920baacbb3945fd952a0e49c4caec708\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19530.15\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3837","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3837)"},{"Id":"515327523","IsPullRequest":false,"CreatedAt":"2019-10-31T10:39:19","Actor":"shaulbehr","Number":"3836","RawContent":null,"Title":"dotnet build appears to succeed, but returns error code","State":"open","Body":"Environment: Linux Ubuntu 18.04\r\nDotnet SDK 3.0.100\r\n\r\ncommand line: `dotnet build soln.sln -r linux-x64 -o outputdir`\r\n\r\nBuild logs show normal output (including lots of warnings, but no actual errors), then:\r\n```\r\n    Build FAILED.\r\n```\r\nfollowed by a bunch more build output, then at the end:\r\n```\r\n    387 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:03:52.15\r\nFailing task since return code of [/usr/bin/dotnet build soln.sln -r linux-x64] was 1 while expected 0\r\n```\r\nIf you would like access to our repo so you can repro, contact me privately (shaul at lightsailed dot com)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3836","RelatedDescription":"Open issue \"dotnet build appears to succeed, but returns error code\" (#3836)"},{"Id":"515026974","IsPullRequest":true,"CreatedAt":"2019-10-30T23:50:44","Actor":"dotnet-maestro[bot]","Number":"3834","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.5\r\n- **Date Produced**: 10/30/2019 9:20 PM\r\n- **Commit**: 4950751278293d59898be799c0115e0ad895747e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.5\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3834","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3834)"},{"Id":"515042011","IsPullRequest":false,"CreatedAt":"2019-10-30T23:15:02","Actor":"thomaslevesque","Number":"3835","RawContent":null,"Title":"dotnet new hangs for several seconds after it completes","State":"open","Body":"Whenever I use `dotnet new`, it seems to hang for several seconds after it completes.\r\nFor instance, if I do `dotnet new sln`, it prints _\"The template \"Solution file\" was created successfully.\"_ almost immediately, but doesn't return until several seconds later (sometimes up to 10 seconds). The same happens with other templates, I just picked this one because it's a very simple one.\r\n\r\nUsing .NET Core SDK 3.0.100\r\n\r\nUsing `--diagnostic` doesn't give any more detail, it just prints _\"Telemetry is: Enabled\"_","Url":"https://github.com/dotnet/sdk/issues/3835","RelatedDescription":"Open issue \"dotnet new hangs for several seconds after it completes\" (#3835)"},{"Id":"514956656","IsPullRequest":true,"CreatedAt":"2019-10-30T21:30:48","Actor":"dotnet-maestro[bot]","Number":"3830","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.4\r\n- **Date Produced**: 10/30/2019 6:59 PM\r\n- **Commit**: ce871036d2f45c3268a9463cc5405958c4f5b3f7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3830","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3830)"},{"Id":"514975464","IsPullRequest":true,"CreatedAt":"2019-10-30T20:52:51","Actor":"dsplaisted","Number":"3831","RawContent":null,"Title":"Use default arcade symbol publishing logic","State":"open","Body":"#3584 was supposed to fix symbol publishing, but didn't work because we were copying the portable PDB files to the SymStore directory.  They need to be converted to desktop PDBs in order to be published.  The default Arcade logic handles this, so just revert to that.","Url":"https://github.com/dotnet/sdk/pull/3831","RelatedDescription":"Open PR \"Use default arcade symbol publishing logic\" (#3831)"},{"Id":"514918269","IsPullRequest":true,"CreatedAt":"2019-10-30T19:13:11","Actor":"Logerfo","Number":"3829","RawContent":null,"Title":"fix broken link","State":"open","Body":"the dot might be considered as part of the link for some parsers (like github file view)","Url":"https://github.com/dotnet/sdk/pull/3829","RelatedDescription":"Open PR \"fix broken link\" (#3829)"},{"Id":"514693755","IsPullRequest":false,"CreatedAt":"2019-10-30T14:01:28","Actor":"adamralph","Number":"3828","RawContent":null,"Title":"Ability to suppress welcome message","State":"open","Body":"The \"Welcome to .NET Core 3.0!... \" spiel adds considerable noise to CI logs.\r\n\r\nWhile we can work around this by creating a file named `\"%HOME%/.dotnet/$(dotnet --version).dotnetFirstUseSentinel\"`, this is hacky and adds noise to bulid configs.\r\n\r\nIt would be better to have a CLI option to suppress the message, e.g.\r\n\r\n`dotnet build --no-welcome`\r\n\r\nor\r\n\r\n`dotnet build --skip-first-time-experience`\r\n\r\netc.","Url":"https://github.com/dotnet/sdk/issues/3828","RelatedDescription":"Open issue \"Ability to suppress welcome message\" (#3828)"},{"Id":"514666510","IsPullRequest":false,"CreatedAt":"2019-10-30T13:24:28","Actor":"mthalman","Number":"3827","RawContent":null,"Title":"dotnet-install script warning about libunwind dependency on 3.0","State":"open","Body":"## Repro\r\n\r\nRun a `docker build` with this Dockerfile:\r\n\r\n```Dockerfile\r\nFROM ubuntu:disco\r\n\r\nRUN apt-get update \\\r\n    && apt-get install -y --no-install-recommends \\\r\n        curl \\\r\n        ca-certificates \\\r\n        \\\r\n        # .NET Core dependencies\r\n        libc6 \\\r\n        libgcc1 \\\r\n        libgssapi-krb5-2 \\\r\n        libicu63 \\\r\n        libssl1.1 \\\r\n        libstdc++6 \\\r\n        zlib1g \\\r\n    && rm -rf /var/lib/apt/lists/*\r\n\r\nRUN curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -Channel Current -Version 3.0.100\r\n```\r\n\r\n### Expected\r\nExpected no warnings because https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore30#supported-linux-versions says that libunwind is only a dependency for versions earlier than 2.1.\r\n\r\n### Actual\r\n`dotnet_install: Warning: Unable to locate libunwind. Probable prerequisite missing; install libunwind.`","Url":"https://github.com/dotnet/sdk/issues/3827","RelatedDescription":"Open issue \"dotnet-install script warning about libunwind dependency on 3.0\" (#3827)"},{"Id":"514613112","IsPullRequest":true,"CreatedAt":"2019-10-30T13:22:48","Actor":"dotnet-maestro[bot]","Number":"3826","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191029.9\r\n- **Date Produced**: 10/30/2019 12:01 AM\r\n- **Commit**: ff023241f6484abaf827c4287c59fddd9ad6c382\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19529.9\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19529.9\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3826","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3826)"},{"Id":"514462171","IsPullRequest":true,"CreatedAt":"2019-10-30T10:06:22","Actor":"dotnet-maestro[bot]","Number":"3824","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.3\r\n- **Date Produced**: 10/30/2019 6:27 AM\r\n- **Commit**: fed3d3e9e7417f8f20ed56edfe7a41b3164b0756\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3824","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3824)"},{"Id":"514496806","IsPullRequest":false,"CreatedAt":"2019-10-30T08:58:54","Actor":"Jepson109","Number":"3825","RawContent":null,"Title":".NET Core SDK 3.0.100 does not have 2.2.8 or 2.1.14 patch.","State":"open","Body":"Use [16.3.7](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fvsdrop.corp.microsoft.com%2Ffile%2Fv1%2FProducts%2FDevDiv%2FVS%2F25bf803db756771ac937046faacdbec8278347ff%2F4c2b3062-352a-8f22-0b64-8a1bb9b21401%253bchannels%2Finternal%2FRelease%2Fbootstrappers%2Ffixed%2FEnterprise%2Fvs_Enterprise.exe&data=02%7C01%7Cv-pejian%40microsoft.com%7C564144298f6a4146a3ad08d75d1647d4%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637080222644789581&sdata=MJNpQBnniMAGpWiPZfl4dkFjjNpTTh9QaKZ0mQ7BMMo%3D&reserved=0) [29429.51.d16.3] (SDK 3.0.100 with 2.2.8 and 2.1.14  runtime inserted)\r\n\r\n**Repro Steps**:\r\n1.\tdotnet new global.json\r\n2.\tedit global.json, check the SDK version is \"3.0.100\"\r\n3.\tmkdir test\r\n4.\tcd test\r\n5.\tdotnet new console\r\n6.\tedit test.csproj and set TargetFramework from netcoreapp3.0 to netcoreapp2.2\r\n7.\tdotnet publish -r win10-x64\r\n8.\tcheck the contents of bin\\Debug\\netcoreapp2.2\\win10-x64\\publish, search for “Microsoft.NETCore.App/” \r\n\r\n**Expected**: That version is 2.2.8.\r\n\r\n**Actual**: The version is **2.2.7**.\r\n\r\nNote: Using SDK 3.0.100, retarget app to netcoreapp2.1 and look for the version for “Microsoft.NETCore.App” is 2.1.13, not 2.1.14.\r\n\r\n**dotnet --info**:\r\n.NET Core SDK (reflecting any global.json):\r\nVersion:   3.0.100\r\nCommit:    04339c3a26\r\n\r\nRuntime Environment:\r\nOS Name:     Windows\r\nOS Version:  10.0.17763\r\nOS Platform: Windows\r\nRID:         win10-x64\r\nBase Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3825","RelatedDescription":"Open issue \".NET Core SDK 3.0.100 does not have 2.2.8 or 2.1.14 patch.\" (#3825)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1189954708062064640","CreatedAt":"2019-10-31T17:18:05+00:00","UserScreenname":"dotnet","Text":"Developing UWP, WPF, or Windows Forms apps? Now you can release them more quickly and simply while still gathering… https://t.co/aCE3B1jsEA","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"1189639377346891777","CreatedAt":"2019-10-30T20:25:04+00:00","UserScreenname":"dotnet","Text":"PSA: Timeline for .NET Core Repository Consolidation https://t.co/O7KGEEbX2q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":22,"RawContent":null},{"Id":"1189638838492123137","CreatedAt":"2019-10-30T20:22:56+00:00","UserScreenname":"dotnet","Text":"Introducing Orleans 3.0 https://t.co/qgGUHW3w7m","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":234,"FavoriteCount":97,"RawContent":null},{"Id":"1189628658782265344","CreatedAt":"2019-10-30T19:42:29+00:00","UserScreenname":"dotnet","Text":"Find out what it takes to build with #dotNET for #ApacheSpark in just a few short video #tutorials! \n\nCheck 'em out… https://t.co/z0XjfksX8U","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"1189245263258542080","CreatedAt":"2019-10-29T18:19:00+00:00","UserScreenname":"dotnet","Text":"Watch these #dotNET video tutorials for an introduction to #VisualStudio and #GetStarted in just 5 mins! Check it o… https://t.co/lYkmdY8uyR","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":19,"FavoriteCount":5,"RawContent":null},{"Id":"1189226825098190856","CreatedAt":"2019-10-29T17:05:44+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnK9Pxg","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"1188904996751982592","CreatedAt":"2019-10-28T19:46:54+00:00","UserScreenname":"dotnet","Text":"Explore the world of #EntityFramework and #dotNET through these quick and easy 101 video #tutorials!… https://t.co/xEeBCG4KFk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":54,"FavoriteCount":20,"RawContent":null},{"Id":"1187781254680403968","CreatedAt":"2019-10-25T17:21:33+00:00","UserScreenname":"dotnet","Text":"Discover what you can do with #Docker and #dotNET in just a few short video #tutorials! https://t.co/OUzFnxoat0 https://t.co/mX3ch9GLcs","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":63,"FavoriteCount":32,"RawContent":null},{"Id":"1187431317467729922","CreatedAt":"2019-10-24T18:11:02+00:00","UserScreenname":"dotnet","Text":"Create your first #WinForms or #WPF app with #dotNETCore in just a few minutes! Watch here: https://t.co/rTbIhRmAJD https://t.co/kkC5Pb5r2g","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":52,"FavoriteCount":21,"RawContent":null},{"Id":"1187041856305160192","CreatedAt":"2019-10-23T16:23:27+00:00","UserScreenname":"dotnet","Text":"Learn how to #GetStarted with #ASPNETCore in a few short video #tutorials!\" https://t.co/0jmYLkKUqn https://t.co/4BmZJZPlDX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":28,"FavoriteCount":14,"RawContent":null},{"Id":"1186774324377575425","CreatedAt":"2019-10-22T22:40:22+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2019-11-03T05:30:36.8609556Z","RunDurationInMilliseconds":17402}