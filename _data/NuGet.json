{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11908532525","Type":"PullRequestEvent","CreatedAt":"2020-03-31T01:14:37","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7925","RelatedDescription":"Merged pull request \"Add link to search for pending validations\" (#7925) at NuGet/NuGetGallery","RelatedBody":"Today the on-call engineer has to connect to the database to find the pending validations. This adds a link to the admin panel to fetch the currently pending validations:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/77881538-0eb6e100-7214-11ea-8ecd-54188763e25c.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7926\r\n\r\nBuild: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3595685\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=628330"},{"Id":"11907140060","Type":"PullRequestEvent","CreatedAt":"2020-03-30T21:40:01","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7927","RelatedDescription":"Opened pull request \"[A11y]Accessibility fixes 1\" (#7927) at NuGet/NuGetGallery","RelatedBody":"Addresses the following issues:\r\n[A11y]'MIT' Link is not descriptive. #7882\r\n - Updated link description to read \"License {LicenseType}\" instead of \"{LicenseType}\"\r\n\r\n[A11y]\"Learn more\" link is not descriptive. #7879\r\n - Update link description to read \"Learn more about Organizations on NuGet.Org\" from \"Learn more\"\r\n\r\n[A11y]Focus is not visible on the expand/collapse button #7885\r\n - This was actually introduced by #7326 when trying to address #7305\r\n - Undo this change, reintroduces #7305 on click.\r\n\r\n[A11y]Narrator is reading improper role for Expand/Collapse button #7889\r\n - Gave element attribute role=\"button\"\r\n\r\n[A11y]Narrator does not announce the error message \"At least one scope must be selected\" after unchecking the 'Push' button. #7876\r\n - Added aria-live region and role=\"alert\"\r\n - Delayed update of text for readme alerts so element can become visible before being updated (updating invisible elements are not read out)."},{"Id":"11898111000","Type":"IssuesEvent","CreatedAt":"2020-03-30T06:24:18","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7926","RelatedDescription":"Opened issue \"Add link to search for pending validations\" (#7926) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nToday the on-call engineer has to connect to the database to find the pending validations.\r\n\r\n### Describe the solution you'd like\r\nThe \"Validation\" admin panel should have a link to fetch the currently pending validations.\r\n"},{"Id":"11898101439","Type":"PullRequestEvent","CreatedAt":"2020-03-30T06:22:52","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7925","RelatedDescription":"Opened pull request \"Add link to search for pending validations\" (#7925) at NuGet/NuGetGallery","RelatedBody":"Today the on-call engineer has to connect to the database to find the pending validations. This adds a link to the admin panel to fetch the currently pending validations:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/77881538-0eb6e100-7214-11ea-8ecd-54188763e25c.png)\r\n"},{"Id":"11897929696","Type":"IssuesEvent","CreatedAt":"2020-03-30T05:55:51","Actor":"shan03","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7924","RelatedDescription":"Opened issue \"ASP.net C# pg 11.6 and npgsql 4.0.10\" (#7924) at NuGet/NuGetGallery","RelatedBody":"ASP.net C#(.net 4.5) pg 11.6(AWS) and npgsql 4.0.10 is not working. when i try to connect my pg db through ado.net im getting {\"The operation has timed out.\"} this error suggest me ASAP."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11909224097","Type":"IssuesEvent","CreatedAt":"2020-03-31T03:17:23","Actor":"BSG-75","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9364","RelatedDescription":"Opened issue \"Nuget does not add files to SDK-style project\" (#9364) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: Visual Studio UI\r\n\r\nNuGet version: 5.4.0\r\n\r\ndotnet.exe --version: 3.1.101\r\n\r\nVS version: VS Community 2019 - 16.4.6\r\n\r\nOS version: Windows 10 1909 18363.720\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. This package: https://www.nuget.org/packages/WPFThemes.DarkBlend/1.0.8/\r\n(https://github.com/DanPristupov/WpfExpressionBlendTheme) should be supposed to add some files to my project, but I'm using the new SDK-style project file, and looks like it failed to add files\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...):  [log.txt](https://github.com/NuGet/Home/files/4406561/log.txt)\r\n\r\n"},{"Id":"11907641384","Type":"IssuesEvent","CreatedAt":"2020-03-30T22:46:47","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9363","RelatedDescription":"Closed issue \"online environment\" (#9363) at NuGet/Home","RelatedBody":""},{"Id":"11907640553","Type":"IssuesEvent","CreatedAt":"2020-03-30T22:46:39","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9363","RelatedDescription":"Opened issue \"online environment\" (#9363) at NuGet/Home","RelatedBody":""},{"Id":"11907596302","Type":"IssuesEvent","CreatedAt":"2020-03-30T22:40:14","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9362","RelatedDescription":"Opened issue \"Write to the Package Manager output in VS OE scenarios\" (#9362) at NuGet/Home","RelatedBody":"In on-build restore scenarios, NuGet usually writes to the build output window.\r\nIn Online Environments we can't do that yet, so as a workaround until we have the ability to do it, we will write to the same output window as auto-restore and explicit restore."},{"Id":"11906552588","Type":"IssuesEvent","CreatedAt":"2020-03-30T20:33:08","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/5881","RelatedDescription":"Closed issue \"Documentation recommendations for setting up sources (w/ or w/o auth) for projects that run on CI\" (#5881) at NuGet/Home","RelatedBody":"Private NuGet feed:\r\nDon’t you just put a nuget.config file in the project/solution? I see a bunch of questions on authenticating private nuget feeds. I’m assuming we could use buildargs to pass in. \r\nhttps://www.google.com/search?q=private+nuget+server+authentication&rlz=1C1CHZL_enUS744US744&oq=private+nuget+feed\r\nhttp://blog.fermium.io/nuget-server-with-basic-authentication/\r\nhttps://blog.myget.org/post/2012/12/12/nuget-package-restore-from-a-secured-feed.html\r\n\r\nWhere do developers learn how to customize a private nuget feed? Is there VS tooling? Or, just docs? \r\nI’m also trying to understand how this worked locally and failed in the build environment?\r\n\r\nStart of docs:\r\n\r\nThe recommendation is generally to put a nuget.config at the solution level (or higher up the drive).\r\nThere is no tooling to create that, just docs.\r\n\r\nAnd we probably should create something more streamlined in the docs to cover this…\r\n\r\nFrom https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior:\r\n\r\nProject-specific NuGet.Config files located in any folder from the solution folder up to the drive root. These allow control over settings as they apply to a project or a group of projects.\r\n\r\n\r\nMaking your NuGet.config look something like this is recommended (clear, then define your source) as a start.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <packageSources>\r\n       <clear /> <!-- ensure only the sources defined below are used -->\r\n    </packageSources>\r\n    <disabledPackageSources>\r\n       <clear />\r\n    </disabledPackageSources>\r\n</configuration>\r\n```\r\n\r\nThen configure all of your sources. If there is an authenticated source, set username and password.\r\n\r\nnuget sources add -name MySource -Source http://myNuGetSource -username Tom -password MyPassword -StorePasswordInClearText -configfile c:\\nugetExample\\nuget.config\r\n\r\n(cleartextpassword will work with dotnet.exe restore or nuget.exe restore.)\r\n\r\nNuGet.config will end up looking like:\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"MySource\" value=\"http://myNuGetSource\" />\r\n  </packageSources>\r\n  <disabledPackageSources>\r\n     <clear />\r\n  </disabledPackageSources>\r\n  <packageSourceCredentials>\r\n    <MySource>\r\n      <add key=\"Username\" value=\"Tom\" />\r\n      <add key=\"Password\" value=\"MyPassword\" />\r\n    </MySource>\r\n  </packageSourceCredentials>\r\n</configuration>\r\n\r\n\r\n\r\nThings to improve:\r\n1)\tBootstrapping a nuget.config\r\n2)\tClearText password only on dotnet core\r\n3)\tDocs for this general guidance\r\n\r\n"},{"Id":"11905766165","Type":"IssuesEvent","CreatedAt":"2020-03-30T19:09:19","Actor":"jmroyb","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9361","RelatedDescription":"Opened issue \"csproj: how to pack at build platform-specific native assemblies\" (#9361) at NuGet/Home","RelatedBody":"Microsoft Windows [Version 10.0.18363.720]\r\nVS 2019 16.5.1\r\n\r\nHi,\r\n\r\nI created a netstandard 2.0 project with this structure:\r\n\r\n![imatge](https://user-images.githubusercontent.com/4932314/77950155-66168900-72c8-11ea-897f-90cd304db980.png)\r\n\r\nWhen I consume it in an Console Core 3.1 x86 project, output bin has this structure:\r\n\r\n\\bin\\x86\\Debug\\netcoreapp3.1\\runtimes\\ plus all content of above solution blue square\r\n\r\nThe problem here is native x86 dlls are not found and an exception is raised in my code.\r\n\r\nif I create an x86 folder (in \\bin\\x86\\Debug\\netcoreapp3.1\\) and copy in this new x86 folder dlls contained in runtime/win-x86/native, code works fine.\r\n\r\nHow can I pack at build platform-specific native assemblies? or is the issue in the consumer?\r\n\r\nThanks"},{"Id":"11905426018","Type":"IssuesEvent","CreatedAt":"2020-03-30T18:32:47","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9346","RelatedDescription":"Closed issue \"Nuget 5.4.0 in ADO - PluginException: Problem starting the plugin /..\\CredentialProvider.Microsoft.exe'. Plugin 'CredentialProvider.Microsoft'  ... with exit code -1\" (#9346) at NuGet/Home","RelatedBody":"Nuget 5.4.0 downloaded into our ADO build\r\nWorked before? Yes with Nuget 4.7.0 \r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nWe are simply running our build which hasn't had many recent changes to the tasks itself.  We started getting some build breaks by a behind the scenes change which necessitated our moving to newer task versions for several of our nuget and build related tasks.  We initially had success but started hitting this particular error very soon afterwards and now we hit it in about 50% of our builds.  When it occurs trying again 2 to 3 times usually gets it to work again.  I initially thought that clearing out the list of authenticated nuget feeds was having an effect but I believe that was a false positive.  We host our own build VMs and it's hitting the same VM in these cases where simply retrying works.  I'll also point out that restarting the build VM only temporarily fixed this.   \r\n...\r\n\r\n## Verbose Logs\r\nDetected NuGet version 5.4.0.6315 / 5.4.0+d790b66be476cd901a56bd46ada037162097ee21.d790b66be476cd901a56bd46ada037162097ee21\r\nSYSTEMVSSCONNECTION exists true\r\nd76576b0-e896-43c7-9012-7185c7fb24a1 exists true\r\n5e02afaa-297f-4717-af44-0c64dd196d4e exists true\r\n926bf1c5-b53e-4291-99d3-1fbf84ca8c8b exists true\r\nE:\\a\\_w\\_tool\\NuGet\\5.4.0\\x64\\nuget.exe restore E:\\a\\_w\\3\\s\\Applications\\Applications.sln -PackagesDirectory E:\\a\\_w\\3\\s\\Packages -Verbosity Detailed -NonInteractive -ConfigFile E:\\a\\_w\\3\\s\\nuget.config\r\nNuGet Version: 5.4.0.6315\r\nMSBuild auto-detection: using msbuild version '16.5.0.12403' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nMSBuild P2P timeout [ms]: 120000\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\rhouser\\AppData\\Local\\Temp\\NuGetScratch\\ayfaynja.gyn.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\rhouser\\AppData\\Local\\Temp\\NuGetScratch\\qma4cg5c.cyw.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:RestoreTaskAssemblyFile=\"E:\\a\\_w\\_tool\\NuGet\\5.4.0\\x64\\nuget.exe\" /p:RestoreSolutionDirectory=\"E:\\a\\_w\\3\\s\\Applications\\\\\" /p:RestoreConfigFile=\"E:\\a\\_w\\3\\s\\nuget.config\" /p:RestorePackagesPath=\"E:\\a\\_w\\3\\s\\Packages\" /p:SolutionDir=\"E:\\a\\_w\\3\\s\\Applications\\\\\" /p:SolutionName=\"Applications\"\r\n\r\nAll packages listed in packages.config are already installed.\r\nRunning restore with 4 concurrent jobs.\r\n...\r\n\r\nRestoring packages for E:\\a\\_w\\3\\s\\Applications\\InputIntel\\CommandServiceManager\\CommandServiceManager.csproj...\r\nRestoring packages for .NETCoreApp,Version=v3.0...\r\nRestoring packages for .NETCoreApp,Version=v3.0...\r\nRestoring packages for .NETCoreApp,Version=v3.0...\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreCommand.<ExecuteAsync>d__32.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<ExecuteAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<ExecuteAndCommitAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<CompleteTaskAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at NuGet.Commands.RestoreRunner.<RunAsync>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<RunAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.Commands.RestoreRunner.<RunAsync>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__52.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args))\r\n##[error]Packages failed to restore\r\n\r\n### Sample Project\r\nI've not been able to distill this yet into a simple project\r\n\r\nAny ideas?  \r\n\r\n"},{"Id":"11905361183","Type":"IssuesEvent","CreatedAt":"2020-03-30T18:25:57","Actor":"mazlov1989","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9360","RelatedDescription":"Opened issue \"StockSharp 5.0.0 не доступен для скачивания через Nuget\" (#9360) at NuGet/Home","RelatedBody":""},{"Id":"11904925461","Type":"IssuesEvent","CreatedAt":"2020-03-30T17:40:31","Actor":"joelverhagen","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9359","RelatedDescription":"Opened issue \"Version range 1.2* normalized to the same thing as 1.* but they are different\" (#9359) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.Versioning\r\nNuGet version: 5.4.0\r\nWorked before? No, don't think so.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Plug `1.2*` into `VersionRange.Parse`\r\n1. Plug `1.*` into `VersionRange.Parse`\r\n1. Compare the behavior on a set of version ranges.\r\n1. Compare the normalized version range string.\r\n\r\nExample: [`1.2*`](https://nugettoolsdev.azurewebsites.net/5.4.0/find-best-version-match?versionRange=1.2*&versions=1.1%0D%0A1.2) vs. [`1.*`](https://nugettoolsdev.azurewebsites.net/5.4.0/find-best-version-match?versionRange=1.*&versions=1.1%0D%0A1.2). They behave differently but they both normalize to `[1.*, )`. The normalization of `1.2*` is wrong.\r\n"},{"Id":"11904912933","Type":"IssuesEvent","CreatedAt":"2020-03-30T17:39:12","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9285","RelatedDescription":"Closed issue \"XPlat Signing: Rebase onto dev again\" (#9285) at NuGet/Home","RelatedBody":"There were some fairly large changes in dev, including a major revert that definitely caused a lot of conflicts for us."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-03-31T05:30:42.9011248Z","RunDurationInMilliseconds":1727}