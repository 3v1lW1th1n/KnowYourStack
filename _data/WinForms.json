{"Data":{"GitHub":{"Issues":[{"Id":"474941611","IsPullRequest":true,"CreatedAt":"2019-07-31T05:20:28","Actor":"dreddy-work","Number":"1545","RawContent":null,"Title":"[WIP]Porting DataMemberFieldConverter into core","State":"open","Body":"Porting DataMemberFieldConverter to System.Windows.Forms.Design.dll and changing the references from System.Design to this assembly wherever required.\r\n\r\nFixes #1542 \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1545)","Url":"https://github.com/dotnet/winforms/pull/1545","RelatedDescription":"Open PR \"[WIP]Porting DataMemberFieldConverter into core\" (#1545)"},{"Id":"474905415","IsPullRequest":false,"CreatedAt":"2019-07-31T02:34:25","Actor":"KaneLeung","Number":"1544","RawContent":null,"Title":"WinForm RichTextBox SelectionChanged event fails when set SelectionFont","State":"open","Body":"* .NET Core Version:3.0.100-preview7-012821\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:WinForm RichTextBox SelectionChanged event fails when set SelectionFont\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n**Expected behavior:**\r\n\r\n**Minimal [repro:RichTextboxBugTest](https://github.com/KaneLeung/RichTextboxBugTest)\r\n","Url":"https://github.com/dotnet/winforms/issues/1544","RelatedDescription":"Open issue \"WinForm RichTextBox SelectionChanged event fails when set SelectionFont\" (#1544)"},{"Id":"474864739","IsPullRequest":true,"CreatedAt":"2019-07-30T23:21:59","Actor":"AdamYoblick","Number":"1543","RawContent":null,"Title":"add yaml stages to meet arcade servicing bar","State":"open","Body":"Add yaml stages as documented here: https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/YamlStagesPublishing.md\r\n\r\n## Customer Impact\r\n\r\n- None, only affects build scripts and AzDO organization\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None, product is not being changed\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1543)","Url":"https://github.com/dotnet/winforms/pull/1543","RelatedDescription":"Open PR \"add yaml stages to meet arcade servicing bar\" (#1543)"},{"Id":"474810968","IsPullRequest":false,"CreatedAt":"2019-07-30T20:42:32","Actor":"merriemcgaw","Number":"1542","RawContent":null,"Title":"WinForms Interop: XamlParseException on .NET Core","State":"open","Body":"@thomasclaudiushuber commented on [Wed Jul 24 2019](https://github.com/dotnet/wpf/issues/1366)\n\n* .NET Core Version: 3.0.100-preview8-013410\r\n* Windows version: 1903\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\nCreating a WinForms DataGridView in WPF XAML throws XamlParseException on .NET Core. This happens for the DataPropertyName property of the DataGridViewTextBoxColumn:\r\n\r\n```\r\n   <winForms:DataGridViewTextBoxColumn HeaderText=\"Firstname\"\r\n                                                        DataPropertyName=\"FirstName\"/>\r\n```\r\n \r\n **Actual behavior:** \r\n\r\nSystem.Windows.Markup.XamlParseException\r\n  HResult=0x80131501\r\n  Message=Invalid metadata for attribute 'System.ComponentModel.TypeConverterAttribute' on 'System.String DataPropertyName'. Expected '1' argument(s) of type 'System.Type'.\r\n  Source=PresentationFramework\r\n  StackTrace:\r\n   at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\r\n   at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\r\n   at System.Windows.Application.LoadComponent(Object component, Uri resourceLocator)\r\n   at WinFormsInWpf.MainWindow.InitializeComponent() in C:\\Users\\thoma\\source\\repos\\WinFormsInWpf.Framework\\WinFormsInWpf.Core\\MainWindow.xaml:line 1\r\n   at WinFormsInWpf.MainWindow..ctor() in C:\\Users\\thoma\\source\\repos\\WinFormsInWpf.Framework\\WinFormsInWpf.Core\\MainWindow.xaml.cs:line 9\r\n\r\nInner Exception 1:\r\nXamlSchemaException: Invalid metadata for attribute 'System.ComponentModel.TypeConverterAttribute' on 'System.String DataPropertyName'. Expected '1' argument(s) of type 'System.Type'.\r\n\r\n  **Expected behavior:**\r\n It should just work like in .NET Framework\r\n\r\n **Minimal repro:**\r\nI've created a minimal repro solution here that contains a working project that targets .NET Framework and a failing project that targets .NET Core: https://github.com/thomasclaudiushuber/WpfWinFormsXamlParseIssue\r\n\r\n \r\n\n\n---\n\n@rladuca commented on [Mon Jul 29 2019](https://github.com/dotnet/wpf/issues/1366#issuecomment-516208100)\n\nThis looks like possibly a WinForms bug.  From what I am seeing, we're choking on trying to use `DataMemberFieldConverter` which is marked on a [few WinForms types](https://github.com/dotnet/winforms/search?q=DataMemberFieldConverter&unscoped_q=DataMemberFieldConverter).\r\n\r\nThis used to live in System.Design.  When I look at System.Design in WindowsDesktop, I see it's a facade assembly now, but there is no type forward for `DataMemberFieldConverter`.  This causes a Type.GetType call to fail [here](https://github.com/dotnet/wpf/blob/2cbb1ad9759c32dc575c7537057a29ee7da2e1b2/src/Microsoft.DotNet.Wpf/src/System.Xaml/System/Xaml/Schema/XamlNamespace.cs#L188).\r\n\r\n@zsd4yr @merriemcgaw @Tanya-Solyanik @AdamYoblick Does this ring any bells or am I off base?\n\n---\n\n@merriemcgaw commented on [Mon Jul 29 2019](https://github.com/dotnet/wpf/issues/1366#issuecomment-516208378)\n\n@dreddy-work can you take a look? You did a lot of the System.Design stuff on our end. Seems possible to me.\n\n---\n\n@dreddy-work commented on [Mon Jul 29 2019](https://github.com/dotnet/wpf/issues/1366#issuecomment-516219875)\n\nDataMemberFieldConverter is not yet ported to core. I will make those changes and get the PR out.\n\n---\n\n@dreddy-work commented on [Tue Jul 30 2019](https://github.com/dotnet/wpf/issues/1366#issuecomment-516416035)\n\n@rladuca , DataMemberFieldConverter was internal class and we don't see typeforward even after we port it. How exactly this typeconverter is used in wpf? \n\n---\n\n@weltkante commented on [Tue Jul 30 2019](https://github.com/dotnet/wpf/issues/1366#issuecomment-516427394)\n\n@dreddy-work Converters don't need to be public in order to be referenced from attributes, in WinForms you are exporting TypeConverter attributes referencing System.Design by concatenating strings (see the [link](https://github.com/dotnet/winforms/search?q=DataMemberFieldConverter&unscoped_q=DataMemberFieldConverter) from @rladuca above).\r\n\r\nWPF finds the attribute and wants to resolve the string, but there is not type forwarding in place.\n\n---\n\n@dreddy-work commented on [Tue Jul 30 2019](https://github.com/dotnet/wpf/issues/1366#issuecomment-516429814)\n\nThanks. Will port this and make sure right assembly is referenced. @merriemcgaw  can you help move this issue to winforms repo?\n\n---\n\n@rladuca commented on [Tue Jul 30 2019](https://github.com/dotnet/wpf/issues/1366#issuecomment-516507724)\n\n@dreddy-work It's probably a good idea to sweep for any TypeConverters you are using, WPF will break on using any WinForm control where there is a similar state to this bug.\n\n","Url":"https://github.com/dotnet/winforms/issues/1542","RelatedDescription":"Open issue \"WinForms Interop: XamlParseException on .NET Core\" (#1542)"},{"Id":"474641345","IsPullRequest":true,"CreatedAt":"2019-07-30T19:25:10","Actor":"hughbe","Number":"1540","RawContent":null,"Title":"Disable WinFormsControlsClassicTests.csproj on non-windows platforms","State":"closed","Body":"I opted to do it this way because it is an old-style project that only supports .NET Framework. Therefore by overriding `Build` to be a nop on Unix we can avoid failures in the build\r\n\r\nOld error:\r\n\r\n> /Users/hugh/Documents/GitHub/winforms/.dotnet/sdk/3.0.100-preview6-012264/Microsoft.Common.CurrentVersion.targets(1175,5): error MSB3644: The reference assemblies for .NETFramework,Version=v4.7.2 were not found. To resolve this, install the Developer Pack (SDK/Targeting Pack) for this framework version or retarget your application. You can download .NET Framework Developer Packs at https://aka.ms/msbuild/developerpacks [/Users/hugh/Documents/GitHub/winforms/src/System.Windows.Forms/tests/IntegrationTests/WinFormsControlsClassicTests/WinFormsControlsClassicTests.csproj]\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1540)","Url":"https://github.com/dotnet/winforms/pull/1540","RelatedDescription":"Closed or merged PR \"Disable WinFormsControlsClassicTests.csproj on non-windows platforms\" (#1540)"},{"Id":"474671707","IsPullRequest":true,"CreatedAt":"2019-07-30T16:02:19","Actor":"hughbe","Number":"1541","RawContent":null,"Title":"Cleanup Control event and property naming","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1541)","Url":"https://github.com/dotnet/winforms/pull/1541","RelatedDescription":"Open PR \"Cleanup Control event and property naming\" (#1541)"},{"Id":"474607409","IsPullRequest":true,"CreatedAt":"2019-07-30T14:58:47","Actor":"hughbe","Number":"1539","RawContent":null,"Title":"Skip more flakey tests","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1539)","Url":"https://github.com/dotnet/winforms/pull/1539","RelatedDescription":"Closed or merged PR \"Skip more flakey tests\" (#1539)"},{"Id":"474282651","IsPullRequest":true,"CreatedAt":"2019-07-30T13:05:58","Actor":"hughbe","Number":"1533","RawContent":null,"Title":"Extract IHTML interfaces to Interop/Mshtml","State":"closed","Body":"NOTE\r\n\r\nBecause of the size of this PR, I haven't *actually* made any function changes (e.g. cleaning up interface definitions).\r\n\r\nThis can optionally be done in another commit to this PR or separately (which is probably better idea).\r\n\r\nThis PR consists of the following\r\n- Copy and pasting **without changes** each HTML interface\r\n- Replacing methodically any references to `UnsafeNativeMethods.IHTML*` or `UnsafeNativeMethods.DHTML*` with `ITHML` or `DHTML*` respectively (with using static)\r\n\r\nThe diff may be daunting, sorry\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1533)","Url":"https://github.com/dotnet/winforms/pull/1533","RelatedDescription":"Closed or merged PR \"Extract IHTML interfaces to Interop/Mshtml\" (#1533)"},{"Id":"474563745","IsPullRequest":true,"CreatedAt":"2019-07-30T12:45:27","Actor":"hughbe","Number":"1538","RawContent":null,"Title":"Fix APICompat in winforms","State":"open","Body":"The correct way to do this is the following (wiki should be updated):\r\n```cs\r\ndotnet build ./src/System.Drawing/src/System.Drawing.Facade.csproj /p:BaselineAllAPICompatError=true\r\n```\r\n\r\nFixes #1059\r\n\r\n/cc @ViktorHofer @ericstj \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1538)","Url":"https://github.com/dotnet/winforms/pull/1538","RelatedDescription":"Open PR \"Fix APICompat in winforms\" (#1538)"},{"Id":"474535710","IsPullRequest":true,"CreatedAt":"2019-07-30T12:41:29","Actor":"hughbe","Number":"1535","RawContent":null,"Title":"Enable WinformsControlsTest_TreeViewAndImageListTest","State":"closed","Body":"Fixes #540\r\n\r\nPasses on my machine\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1535)","Url":"https://github.com/dotnet/winforms/pull/1535","RelatedDescription":"Closed or merged PR \"Enable WinformsControlsTest_TreeViewAndImageListTest\" (#1535)"},{"Id":"474545612","IsPullRequest":true,"CreatedAt":"2019-07-30T12:21:04","Actor":"dotnet-maestro[bot]","Number":"1537","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190729.29\r\n- **Date Produced**: 7/29/2019 10:51 PM\r\n- **Commit**: 84d9a013b66c3e14a67ace0a99ae84e6eb8b6a7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19379.29\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19379.29\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1537)","Url":"https://github.com/dotnet/winforms/pull/1537","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1537)"},{"Id":"474539825","IsPullRequest":false,"CreatedAt":"2019-07-30T11:52:42","Actor":"hughbe","Number":"1536","RawContent":null,"Title":"Discussion: should we throw ANEs or do nothing in `UITypeEditor.PaintValue subclasses`","State":"open","Body":"E.g. in ColorEditor:\r\n\r\n```cs\r\n        /// <summary>\r\n        /// Paints a representative value of the given object to the provided canvas.\r\n        /// Painting should be done within the boundaries of the provided rectangle.\r\n        /// </summary>\r\n        public override void PaintValue(PaintValueEventArgs e)\r\n        {\r\n            if (e.Value is Color color)\r\n            {\r\n                SolidBrush b = new SolidBrush(color);\r\n                e.Graphics.FillRectangle(b, e.Bounds);\r\n                b.Dispose();\r\n            }\r\n        }\r\n```\r\n\r\nCurrently this is a NRE for `Paint(null)`. However, do we want to throw an ANE or `nop` if the  event args are null.\r\n\r\nLooking at the construction of this code, I'm inclined to be a `nop`, as we're checking explicitly whether the event args that were passed to us were invalid\r\n\r\nLet me know - I'd like to send in a PR\r\n\r\n# Current Cases\r\n- ColorEditor: throws NRE\r\n- FontNameEditor: throws NRE\r\n- ImageEditor: nop\r\n- ImageListEditor: throws NRE\r\n- UITypeEditor (and other subclasses that do nothing in `PaintValue`): nop","Url":"https://github.com/dotnet/winforms/issues/1536","RelatedDescription":"Open issue \"Discussion: should we throw ANEs or do nothing in `UITypeEditor.PaintValue subclasses`\" (#1536)"},{"Id":"474505579","IsPullRequest":false,"CreatedAt":"2019-07-30T10:32:14","Actor":"John-Qiao","Number":"1534","RawContent":null,"Title":"VB Winforms project Form event doesn’t generated correctly when add the Form event from form.vb code page","State":"open","Body":"* .NET Core Version: 3.0.100-preview8-013587 from Master branch\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nAll Form events have the same issue when add Form events by this way.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nA not defined type NullableAttribute added in Form1_Load event, it caused the project cannot be built successfully.  \r\n![Actual](https://user-images.githubusercontent.com/45864985/62122366-18402000-b2f8-11e9-89ea-f1b20100d67c.png)\r\n\r\n**Expected behavior:**\r\nThere Form1_Load event should be generated correctly.   \r\n![Expected](https://user-images.githubusercontent.com/45864985/62122380-1fffc480-b2f8-11e9-9e58-f7f7eaecabd2.png)\r\n\r\n**Minimal repro:**\r\n1.\tInstall the .NET Core 3.0 SDK from https://github.com/dotnet/core-sdk for Master branch.\r\n2.\tCreate a template of VB Winforms .NET Core app in VS.\r\n3.\tOpen From1.vb file, select the **(Form1 Events)** in the second comboBox of the top, and select the **Load** in the third comboBox.\r\n![Steps2](https://user-images.githubusercontent.com/45864985/62122327-0199c900-b2f8-11e9-9d5f-95f116b0ca83.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/1534","RelatedDescription":"Open issue \"VB Winforms project Form event doesn’t generated correctly when add the Form event from form.vb code page\" (#1534)"},{"Id":"474268955","IsPullRequest":false,"CreatedAt":"2019-07-29T21:38:33","Actor":"ChrisSires","Number":"1532","RawContent":null,"Title":"Color Contrast Analyzer fails for default highlighted text color","State":"open","Body":"See screenshot.  Note the example shows the Windows Run dialog failing this check as well as the default winforms TextBox control.  According to this tool being used to validate MAS standards, this is a violation of MAS 1.4.3, having to do with Contrast (Minimum).  \r\n\r\n![image](https://user-images.githubusercontent.com/37852980/62084437-2f0a4800-b20e-11e9-8013-b3c4530a34d6.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/1532","RelatedDescription":"Open issue \"Color Contrast Analyzer fails for default highlighted text color\" (#1532)"},{"Id":"474194782","IsPullRequest":true,"CreatedAt":"2019-07-29T18:33:24","Actor":"vatsan-madhavan","Number":"1531","RawContent":null,"Title":"Rebrand master to preview9","State":"closed","Body":"Rebrand master to `preview9 `as part of Preview8 completion\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1531)","Url":"https://github.com/dotnet/winforms/pull/1531","RelatedDescription":"Closed or merged PR \"Rebrand master to preview9\" (#1531)"},{"Id":"474113959","IsPullRequest":true,"CreatedAt":"2019-07-29T16:50:39","Actor":"dotnet-maestro[bot]","Number":"1529","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190729.05\r\n- **Date Produced**: 7/29/2019 3:24 PM\r\n- **Commit**: d15a0adeb874801e7bfaa4fbbb306a2efa268497\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28379-05\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1529)","Url":"https://github.com/dotnet/winforms/pull/1529","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1529)"},{"Id":"474142248","IsPullRequest":true,"CreatedAt":"2019-07-29T16:23:50","Actor":"hughbe","Number":"1530","RawContent":null,"Title":"Add Screen/SystemInformation tests ","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1530)","Url":"https://github.com/dotnet/winforms/pull/1530","RelatedDescription":"Open PR \"Add Screen/SystemInformation tests \" (#1530)"},{"Id":"474062781","IsPullRequest":true,"CreatedAt":"2019-07-29T14:16:19","Actor":"RussKie","Number":"1528","RawContent":null,"Title":"Skip unstable tests","State":"closed","Body":"\r\n\r\n## Proposed changes\r\n\r\n- Skip unstable tests\r\n\r\nCloses #1460\r\nRelates to #1151","Url":"https://github.com/dotnet/winforms/pull/1528","RelatedDescription":"Closed or merged PR \"Skip unstable tests\" (#1528)"},{"Id":"473793081","IsPullRequest":false,"CreatedAt":"2019-07-29T13:37:04","Actor":"cadesalaberry","Number":"1515","RawContent":null,"Title":"Cannot use System.Windows.Forms in preview7","State":"closed","Body":"# Cannot use `System.Windows.Forms` in `3.0-preview7`\r\n\r\nWhen upgrading from 3.0 preview6 to 3.0-preview7 I get stuck with:\r\n\r\n```\r\nError   CS0234  The type or namespace name 'Forms' does not exist in the namespace 'System.Windows' (are you missing an assembly reference?)\r\n```\r\n\r\n# General\r\n\r\nI realised that the error was coming from the version of dotnet Core after uninstalling ALL available SDKs but the `3.0-preview6` version. I then executed `dotnet --version` and realised it was still using `3.0-preview7` which made no sense.\r\n\r\nThis makes me think the uninstaller must also be broken.\r\n","Url":"https://github.com/dotnet/winforms/issues/1515","RelatedDescription":"Closed issue \"Cannot use System.Windows.Forms in preview7\" (#1515)"},{"Id":"474036155","IsPullRequest":true,"CreatedAt":"2019-07-29T12:56:18","Actor":"hughbe","Number":"1527","RawContent":null,"Title":"Add Cursor tests and fix some bugs","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1527)","Url":"https://github.com/dotnet/winforms/pull/1527","RelatedDescription":"Open PR \"Add Cursor tests and fix some bugs\" (#1527)"},{"Id":"474028568","IsPullRequest":true,"CreatedAt":"2019-07-29T12:55:21","Actor":"dotnet-maestro[bot]","Number":"1526","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190729.03\r\n- **Date Produced**: 7/29/2019 12:39 PM\r\n- **Commit**: 915722554dc08a7075f89eddb40691caca23b6be\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28379-03\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1526)","Url":"https://github.com/dotnet/winforms/pull/1526","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1526)"},{"Id":"474013716","IsPullRequest":true,"CreatedAt":"2019-07-29T12:16:02","Actor":"dotnet-maestro[bot]","Number":"1525","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190728.1\r\n- **Date Produced**: 7/28/2019 12:52 PM\r\n- **Commit**: a8e982d3bac01d8f4f91a4c57191147570079448\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19378.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19378.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19378.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19378.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1525)","Url":"https://github.com/dotnet/winforms/pull/1525","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1525)"},{"Id":"474000146","IsPullRequest":true,"CreatedAt":"2019-07-29T11:33:26","Actor":"M-Lipin","Number":"1524","RawContent":null,"Title":"The CellParsing event of the datagridview can't be invoked when changing the value of the cell firstly #1098","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1098 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Reworking `DataGridViewCell.InitializeEditingControl()` method to delay EditingControlAccessibleObject initialization until DataGridView EditingControl is initialized and its handle is created.\r\n- Delaying EditingControlAccessibleObject initialization is done by moving dgv.EditingControlAccessibleObject.get() call to dgv.EditingControl.HandleCreated event handler, so we have EditingControlAccessibleObject accessed only after the control's handle creation.\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![Bug_1098_Before](https://user-images.githubusercontent.com/23213980/62045062-13527200-b20d-11e9-9068-bb915d17ae0e.gif)\r\n\r\n* For the first time control's handle is created when accessing EditingControlAccessibleObject.\r\n\r\n### After\r\n\r\n![Bug_1098_After](https://user-images.githubusercontent.com/23213980/62045071-1c434380-b20d-11e9-87ec-682bb17dbb31.gif)\r\n\r\n* For the first time control's handle is created and the EditingControlAccessibleObject is accessed.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing, debugging, Narrator announcement - passed.\r\n- Need QA approval.\r\n- Need to test near cases and search for regressions.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview8-012929\r\n Commit:    795f8aeaa8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview8-012929\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-27907-09\r\n  Commit:  fc924dc319\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-012929 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19351.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-27907-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-27907-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1524)","Url":"https://github.com/dotnet/winforms/pull/1524","RelatedDescription":"Open PR \"The CellParsing event of the datagridview can't be invoked when changing the value of the cell firstly #1098\" (#1524)"},{"Id":"473994910","IsPullRequest":true,"CreatedAt":"2019-07-29T11:30:27","Actor":"dotnet-maestro[bot]","Number":"1523","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190729.02\r\n- **Date Produced**: 7/29/2019 11:19 AM\r\n- **Commit**: 3a87ac0079c714f13e35b319ad68cd15f66e0172\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28379-02\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview8.19378.8 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1523)","Url":"https://github.com/dotnet/winforms/pull/1523","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1523)"},{"Id":"473951257","IsPullRequest":true,"CreatedAt":"2019-07-29T09:54:14","Actor":"dotnet-maestro[bot]","Number":"1521","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190729.01\r\n- **Date Produced**: 7/29/2019 9:38 AM\r\n- **Commit**: 6a62209e78a23fe4e6af59b14f2f74edacb2be3f\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28379-01\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1521)","Url":"https://github.com/dotnet/winforms/pull/1521","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1521)"},{"Id":"473953327","IsPullRequest":false,"CreatedAt":"2019-07-29T09:43:28","Actor":"Olina-Zhang","Number":"1522","RawContent":null,"Title":"[HDPI] CheckListBox with multi-items is not scaled well","State":"open","Body":"* .NET Core Version: 3.0.100-preview8-013334\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Repro Steps:**\r\n1. Set Windows DPI as 100%, then create a Winforms .Net Core application\r\n2. Add CheckListBox control to form designer, and add 4 lines items to this control, ensure all items are shown without scrollbar and no extra empty line --- use .Net framework app designer code to workaround since .net core designer is not fully supported so far\r\n3. In program.cs file, add one code line to support HDPI: SystemAware mode:\r\n          Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n4. Build and run this application \r\n5. Set Windows DPI as 300%, and run this application again\r\n\r\n**Actual behavior:** \r\nOn 300%DPI, CheckListBox is not scaled well, there has one extra empty line shown. This issue also repro in 150%, 250%DPI.\r\n![image](https://user-images.githubusercontent.com/26474449/62038152-0fd9cf00-b1aa-11e9-80e9-3760170b84b6.png)\r\n\r\n**Expected behavior:**\r\nOn 300%DPI, it should have 4 lines items shown on form designer in runtime, as same as 100%DPI\r\nHere is the 100% screenshot\r\n![image](https://user-images.githubusercontent.com/26474449/62038091-f042a680-b1a9-11e9-80b8-f68b975e2ec1.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/1522","RelatedDescription":"Open issue \"[HDPI] CheckListBox with multi-items is not scaled well\" (#1522)"},{"Id":"473905147","IsPullRequest":false,"CreatedAt":"2019-07-29T07:56:37","Actor":"Marie-Shi","Number":"1520","RawContent":null,"Title":"WinForm RichTextBox LinkClicked event fails to fire when control loaded with RTF containing a friendly name hyperlink","State":"open","Body":"* .NET Core Version: .Net Core 3.0.100-preview8-013587 build from master branch\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**More info:**\r\nThere is a blocked GitHub issue [33714](https://github.com/dotnet/corefx/issues/33714) when use Test2.rtf\r\n[Test2_Doc.zip](https://github.com/dotnet/winforms/files/3440865/Test2_Doc.zip)(just add more words than Test.rtf ). Please see the following screenshot:\r\n![image](https://user-images.githubusercontent.com/45864017/62030629-143cd100-b218-11e9-8e83-3de1dda70a64.png)\r\n\r\n\r\n\r\n**Problem description:**\r\n\r\n1. Open attached app in VS and run it. \r\n[RichTextBoxCoreApp.zip](https://github.com/dotnet/winforms/files/3440825/RichTextBoxCoreApp.zip)\r\n\r\n2. Click the “Click here”, then observe the behavior of browser. \r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nThere  is no response after clicking the “Click here”.\r\n\r\n**Expected behavior:**\r\nIt opens the browser and navigates to the page of Google after clicking the “Click here”.","Url":"https://github.com/dotnet/winforms/issues/1520","RelatedDescription":"Open issue \"WinForm RichTextBox LinkClicked event fails to fire when control loaded with RTF containing a friendly name hyperlink\" (#1520)"},{"Id":"473852236","IsPullRequest":true,"CreatedAt":"2019-07-29T05:19:53","Actor":"dotnet-maestro[bot]","Number":"1519","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190728.16\r\n- **Date Produced**: 7/29/2019 5:09 AM\r\n- **Commit**: 44512181385551ade3b82730eb28dceb4bd57662\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28378-16\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1519)","Url":"https://github.com/dotnet/winforms/pull/1519","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1519)"},{"Id":"473830589","IsPullRequest":true,"CreatedAt":"2019-07-29T03:31:55","Actor":"dotnet-maestro[bot]","Number":"1518","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190728.13\r\n- **Date Produced**: 7/29/2019 3:20 AM\r\n- **Commit**: 1a158ddecbbe7a060e8674a931abee92e70fb036\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28378-13\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1518)","Url":"https://github.com/dotnet/winforms/pull/1518","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1518)"},{"Id":"473795386","IsPullRequest":true,"CreatedAt":"2019-07-28T23:10:19","Actor":"dotnet-maestro[bot]","Number":"1516","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190728.11\r\n- **Date Produced**: 7/28/2019 10:59 PM\r\n- **Commit**: b48c810028097d09c97ccb8553c2c13c84b66477\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28378-11\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1516)","Url":"https://github.com/dotnet/winforms/pull/1516","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1516)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-31T05:30:58.1864462Z","RunDurationInMilliseconds":737}