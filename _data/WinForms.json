{"Data":{"GitHub":{"Issues":[{"Id":"585528153","IsPullRequest":false,"CreatedAt":"2020-03-21T16:07:49","Actor":"AraHaan","Number":"3003","RawContent":null,"Title":"Form.ActiveForm does not return null when an owned model window should not be \"active\"","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 3.1\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nWhen a form is showed the ``ActiveForm`` property on a form returns the form (if main form returns that), or ``null`` when a window from another process is active. However when on a ``Model`` form with the main form as the owner, doing that results in the property always returning that ``Model`` form instead of ``null`` like I think it should. Not even the ``Deactivate`` nor the ``Activated`` events fire when this happens.\r\n\r\n\r\n**Expected behavior:**\r\nfor ``ActiveForm`` to return ``null`` when no forms (including model forms with the main form as owner) when a window from another application is active. Same for the Activated/Deactivate events should also fire as well when this happens or when reclicked on that should make it become Activated again.\r\n\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a new winforms project.\r\n2. Create a in the ``Form1`` code make the form create another form a button in it is clicked making that form the owner of another instance of itself.\r\n3. Do some painting work that uses the ``Paint`` event on the form code that changes colors when \r\n```cs\r\n// this.active is an added attempt to double check and make sure it is\r\n// active using the Activated/Deactivate events.\r\nif (Equals(ActiveForm, this) && this.active)\r\n{\r\n    // e.Graphics stuff.\r\n}\r\nelse\r\n{\r\n    // e.Graphics stuff.\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/3003","RelatedDescription":"Open issue \"Form.ActiveForm does not return null when an owned model window should not be \"active\"\" (#3003)"},{"Id":"585486108","IsPullRequest":true,"CreatedAt":"2020-03-21T12:17:44","Actor":"dotnet-maestro[bot]","Number":"3002","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3002)","Url":"https://github.com/dotnet/winforms/pull/3002","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3002)"},{"Id":"584194863","IsPullRequest":true,"CreatedAt":"2020-03-21T07:58:24","Actor":"RussKie","Number":"2988","RawContent":null,"Title":"WIP: Fail `RemoteExecutor` tests that fail","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2988)","Url":"https://github.com/dotnet/winforms/pull/2988","RelatedDescription":"Closed or merged PR \"WIP: Fail `RemoteExecutor` tests that fail\" (#2988)"},{"Id":"584336442","IsPullRequest":true,"CreatedAt":"2020-03-21T07:56:30","Actor":"hughbe","Number":"2991","RawContent":null,"Title":"Test fix for ListViewGroup footer","State":"closed","Body":"Fixes #2970\r\n\r\nUnconditionally set footer even if it is empty\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2991)","Url":"https://github.com/dotnet/winforms/pull/2991","RelatedDescription":"Closed or merged PR \"Test fix for ListViewGroup footer\" (#2991)"},{"Id":"583696713","IsPullRequest":false,"CreatedAt":"2020-03-21T07:50:16","Actor":"mvtec-bergdolll","Number":"2986","RawContent":null,"Title":"Breaking change in SuspendLayout + AutoScaleDimensions interplay vs .NET Framework","State":"closed","Body":"* .NET Core Version: \r\n.NET Core 3.1.102\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nPorting our .NET Frameworks based library to .NET Core, we noticed a breaking change resulting in incorrectly scaled components. Reducing it down to a POC, showed the root of the problem seems to be the interplay between `SuspendLayout` and `AutoScaleDimensions`. The relevant code looks like this:\r\n\r\n```c#\r\nprivate void InitializeComponent()\r\n{\r\n    System.Drawing.Size ExpectedSize = new System.Drawing.Size(538, 558);\r\n\r\n    this.SuspendLayout();\r\n    this.components = new System.ComponentModel.Container();\r\n    this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\r\n    this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\r\n    this.ClientSize = ExpectedSize;\r\n    this.Text = \"Form1\";\r\n    this.ResumeLayout(false);\r\n    this.PerformLayout();\r\n\r\n    System.Diagnostics.Debug.Assert(this.ClientSize == ExpectedSize);\r\n}\r\n```\r\n\r\nRunning the same code in .NET Frameworks 4.7.2 passes the assert, under .NET Core 3.1.102 the assert fails. This is a clear breaking change I couldn't find any documentation for. Is this intentional? Note, that taking out either `SuspendLayout` or `AutoScaleDimensions` makes the assert pass again.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nSame behavior as .NET Framework or documented breaking change with porting advice.\r\n\r\n**Minimal repro:**\r\n\r\nFind the full .NET Core POC source here: https://github.com/mvtec-bergdolll/dotnet-core-layout-bug-poc","Url":"https://github.com/dotnet/winforms/issues/2986","RelatedDescription":"Closed issue \"Breaking change in SuspendLayout + AutoScaleDimensions interplay vs .NET Framework\" (#2986)"},{"Id":"585449394","IsPullRequest":false,"CreatedAt":"2020-03-21T07:39:35","Actor":"RussKie","Number":"3001","RawContent":null,"Title":"Allow set font application-wide","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nThe default font has been updated in .NET Core 3.0 (#656) and [documented](https://docs.microsoft.com/en-us/dotnet/core/compatibility/fx-core#default-control-font-changed-to-segoe-ui-9-pt). However for some users there is still an element of surprise when they migrate their apps to .NET Core.\r\nWe've received several questions regarding different sizes of forms (e.g. https://github.com/dotnet/winforms/issues/1122, https://github.com/dotnet/winforms/issues/1827, etc.).\r\n\r\nWhilst the new default font is here to stay, some users may wish to retain the original font (e.g. due to a design of their app). However for an application with more than a handful of forms, setting the original font may be tedious and cumbersome exercise.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd the ability to set an application-wide font, similar to `SetHighDpiMode()` or `SetCompatibleTextRenderingDefault()` methods.\r\n\r\n* This method must be \"run only once\" kind, i.e. a user may not be allowed to invoke it once an app has started.\r\n* Any form that doesn't explicitly specify its own font, must inherit the application default font.\r\n\r\nThe signature:\r\n```cs\r\npublic class Application\r\n{\r\n\tvoid SetDefaultFont(Font font);\r\n}\r\n```\r\n\r\nThe callsite:\r\n```diff\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n\r\n+           Application.SetDefaultFont(new Font(new FontFamily(\"Microsoft Sans Serif\"), 8f));\r\n\r\n            Application.Run(new Form1());\r\n        }\r\n```\r\n\r\n**Will this feature affect UI controls?**\r\n\r\nNo\r\n","Url":"https://github.com/dotnet/winforms/issues/3001","RelatedDescription":"Open issue \"Allow set font application-wide\" (#3001)"},{"Id":"583165879","IsPullRequest":true,"CreatedAt":"2020-03-21T07:15:27","Actor":"hughbe","Number":"2983","RawContent":null,"Title":"Add DataGridViewTextBoxEditingControl tests and fix bugs","State":"closed","Body":"## Proposed Changes\r\n- Add DataGridViewTextBoxEditingControl tests and fix bugs\r\n\r\n### Bugs Fixes\r\n- Validate `dataGridViewCellStyle` in `ApplyCellStyleToEditingControl`: fixes NRE\r\n- Fix NRE in `NotifyDataGridViewOfValueChange` without `EditingControlDataGridView`\r\n- Fix NRE in `ApplyCellStyleToEditingControl` without `EditingControlDataGridView`\r\n- Don't force handle creation in `OnGotFocus` or `OnHandleCreated`\r\n- Fix NRE in `OnMouseWheel` without `EditingControlDataGridView`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2983)","Url":"https://github.com/dotnet/winforms/pull/2983","RelatedDescription":"Closed or merged PR \"Add DataGridViewTextBoxEditingControl tests and fix bugs\" (#2983)"},{"Id":"585024042","IsPullRequest":true,"CreatedAt":"2020-03-21T05:33:44","Actor":"dotnet-maestro[bot]","Number":"2996","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2996)","Url":"https://github.com/dotnet/winforms/pull/2996","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2996)"},{"Id":"585421772","IsPullRequest":false,"CreatedAt":"2020-03-21T03:39:44","Actor":"ygc369","Number":"3000","RawContent":null,"Title":"Proposal: add \"AutoSaveAndRepaint\" property to PictureBox control.","State":"open","Body":"PictureBox current behavior:\r\n    If you paint something on the picturebox, and minimize the application that uses the picturebox, and then restore the application, you will find that what you have painted disappears. \r\n\r\nThis is a common problem that many people meet. So I hope that PictureBox control can have an \"AutoSaveAndRepaint\" property, if it is set as true, anything painted on the picturebox would be saved automatically and would not disappear when the picturebox is refreshed or repainted.","Url":"https://github.com/dotnet/winforms/issues/3000","RelatedDescription":"Open issue \"Proposal: add \"AutoSaveAndRepaint\" property to PictureBox control.\" (#3000)"},{"Id":"585328190","IsPullRequest":true,"CreatedAt":"2020-03-20T21:08:26","Actor":"weltkante","Number":"2999","RawContent":null,"Title":"WIP: implement generic collections without signature changes","State":"open","Body":"Contributes to #2644\r\nAlternative implementation to PR #2749\r\n\r\nThis is a WIP PR for exploring the impact #2644 may have and whether its worth taking the breaking change. This PR attempts to make no breaking change except implementing additional interfaces.\r\n\r\nThis will allow LINQ support and other extension methods pick up the member type of the list, but the major downside of not allowing breaking changes is that plain `foreach` loops will not pick up nullability annotations because they need the return type of `GetEnumerator` adjusted, which is a breaking change (see PR #2749 for an implementation attempt)\r\n\r\nNotes:\r\n- As far as placement of new code goes I tried to orient myself on the corresponding `IList` methods (where available), this makes for weird placement since not all `IList<T>` methods are together, but considering I don't really want to reorder the existing methods (unless asked to) I figured it'd be the best solution to minimize diffs for now.\r\n- There are plenty of odd design decisions in the original collections subclassing hierarchy which makes updating them harder.\r\n- Existing `Remove` implementations don't tell the caller whether they removed something, but `IList<T>` requires this in its API. In some places where collections can be subclassed it is not easily possible to obtain this information, which leads to a bit weird looking implementation. Depending on how much you want to assume about subclass behavior these could be simplified.\r\n- There are bugs in some existing collection classes where they don't check in `Remove` implementations whether the item to be removed is actually part of the collection. They run logic which severs the item and partially disconnects it from its true owner, but without notifying that owner. I did not fix these bugs yet (some are marked with comments though), I'm going to create a separate issue for this problem (so it doesn't have to wait for this issue/PR, which probably will take a while to dicscuss and resolve all points).\r\n- xunit apparently doesn't support non-generic lists, so when you start implementing the generic list interface all kinds of collection-tests stop compiling because some analyzer wants you to use `Assert.Contains` or `Assert.DoesNotContain`. Minor inconvenience which is easily fixed.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2999)","Url":"https://github.com/dotnet/winforms/pull/2999","RelatedDescription":"Open PR \"WIP: implement generic collections without signature changes\" (#2999)"},{"Id":"585228622","IsPullRequest":false,"CreatedAt":"2020-03-20T17:42:05","Actor":"fahadabdulaziz","Number":"2998","RawContent":null,"Title":"Touch Support","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nLack of touch support.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd support for touch to System.Windows.Form.Control.\r\n\r\nAs I know there are three events could be used:\r\nDown\r\nUp\r\nMove\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Will this feature affect UI controls?**\r\nYes\r\n\r\n- Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\n                     **No**\r\n- What impact will it have on accessibility?\r\n                    **I don't know :-)**\r\n- Will this feature need to be localized or be localizable?\r\n                    **No**\r\n\r\nThanks\r\n","Url":"https://github.com/dotnet/winforms/issues/2998","RelatedDescription":"Open issue \"Touch Support\" (#2998)"},{"Id":"584795323","IsPullRequest":false,"CreatedAt":"2020-03-20T14:50:30","Actor":"HermanEldering","Number":"2993","RawContent":null,"Title":"Enable PickFolders in OpenFileDialog","State":"closed","Body":"Sometimes I need the user to select a folder. The OpenFileDialog can be used to select files but currently doesn't expose the functionality to select folders. Developers now need to include custom common dialog interop, for instance from the Windows API Code Pack which hasn't been maintained for many years or Okii Dialogs.\r\n\r\nThe solution I suggest is to add a property IsFolderPicker to set the FOS_PICKFOLDERS flag in the dialog options and changing the GetOptions() method to allow the flag. This seems to be a relatively minor change, especially if only Vista or later Windows version are supported.\r\n\r\nOne alternative to this change is to have each project duplicate the entire OpenFileDialog interop either within their source code or by referencing a nuget package, merely to toggle a single bit. A second alternative is [using reflection to toggle the bit in the private field](https://github.com/Willy-Kimura/BetterFolderBrowser). Yet another alternative is to use the FolderBrowserDialog class, but that option uses another UI.\r\n\r\nI is also possible to add a property to FolderBrowserDialog so that it will use the Vista OpenFileDialog folder picker, but that deviates more from the underlaying Windows API.\r\n\r\nThere seems to be an edge case where the Vista file dialog is not available (https://github.com/dotnet/winforms/issues/2506), that might need to be taken into account. It could perhaps fall back to FolderBrowserDialog in that case.","Url":"https://github.com/dotnet/winforms/issues/2993","RelatedDescription":"Closed issue \"Enable PickFolders in OpenFileDialog\" (#2993)"},{"Id":"585091742","IsPullRequest":false,"CreatedAt":"2020-03-20T14:04:52","Actor":"Nukepayload2","Number":"2997","RawContent":null,"Title":"BC30562: '“MsgBox” is ambiguous between declarations in Modules “Microsoft.VisualBasic.Interaction, Microsoft.VisualBasic._Interaction”","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-preview.1.20155.7\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nUnable to use `MsgBox`, `Shell` and `InputBox` without qualifying them with `Interaction.`\r\nBC30562: '“MsgBox” is ambiguous between declarations in Modules “Microsoft.VisualBasic.Interaction, Microsoft.VisualBasic._Interaction”\r\n\r\n**Expected behavior:**\r\n`MsgBox(\"\")` should not have BC30562 compilation error .\r\nMicrosoft.VisualBasic._Interaction should be `Friend` instead of `Public` .\r\n\r\n**Minimal repro:**\r\n```cmd\r\ndotnet new winforms -lang vb\r\n```\r\n\r\nEdit Form1.vb\r\n```vb\r\nPrivate Sub Form1_Load() Handles Me.Load\r\n    MsgBox(\"\")\r\nEnd Sub\r\n```","Url":"https://github.com/dotnet/winforms/issues/2997","RelatedDescription":"Open issue \"BC30562: '“MsgBox” is ambiguous between declarations in Modules “Microsoft.VisualBasic.Interaction, Microsoft.VisualBasic._Interaction”\" (#2997)"},{"Id":"584829012","IsPullRequest":true,"CreatedAt":"2020-03-20T05:32:10","Actor":"RussKie","Number":"2995","RawContent":null,"Title":"Fix flaky test","State":"closed","Body":"The test may intermittently fail in internal CI agents. Presumably due to either no IE installer or a different version of IE, that yeilds `DocumentType` as \"HTM File\" instead of \"HTML Document\".\r\n\r\nFixes: https://github.com/dotnet/winforms/pull/2962#discussion_r394735398\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Assert that `DocumentType` is set without asserting the string itself, as we don't control the content\r\n\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2995)","Url":"https://github.com/dotnet/winforms/pull/2995","RelatedDescription":"Closed or merged PR \"Fix flaky test\" (#2995)"},{"Id":"584825897","IsPullRequest":true,"CreatedAt":"2020-03-20T03:52:46","Actor":"RussKie","Number":"2994","RawContent":null,"Title":"Ship API that were release in Preview1","State":"open","Body":"Preview1: d542887a907b98757a359078c3b4c25bf01b6837\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2994)","Url":"https://github.com/dotnet/winforms/pull/2994","RelatedDescription":"Open PR \"Ship API that were release in Preview1\" (#2994)"},{"Id":"584335294","IsPullRequest":true,"CreatedAt":"2020-03-20T02:35:30","Actor":"hughbe","Number":"2990","RawContent":null,"Title":"Fix WebBrowser tests on internal CI","State":"closed","Body":"See https://github.com/dotnet/winforms/pull/2962#discussion_r394735398 - guessing this depends on the version of IE installed on the computer.\r\n\r\nDoesn't yet fix https://github.com/dotnet/winforms/pull/2962#discussion_r394748792 - waiting for comments /cc @russkie @weltkante \r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2990)","Url":"https://github.com/dotnet/winforms/pull/2990","RelatedDescription":"Closed or merged PR \"Fix WebBrowser tests on internal CI\" (#2990)"},{"Id":"584362891","IsPullRequest":true,"CreatedAt":"2020-03-20T00:41:47","Actor":"dotnet-maestro[bot]","Number":"2992","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2992)","Url":"https://github.com/dotnet/winforms/pull/2992","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2992)"},{"Id":"583382438","IsPullRequest":true,"CreatedAt":"2020-03-19T23:51:49","Actor":"RussKie","Number":"2984","RawContent":null,"Title":"Add missing template identity version information","State":"closed","Body":"Resolves #2981\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fix the packages identities and add framework choices.\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nGiven that the identity lacked the version, the new template package targeting netcoreapp3.1 would supersede and replace the ones targeting netcoreapp3.0.\r\n\r\nThis breaks developer's ability to create app targeting netcoreapp3.x from command line (via `dotnet new winforms`) and rom VS (because the VS Template Engine Host will only install the highest versioned package for any given identity).\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Low. The change is to “dotnet new” templates only. No changes to Windows Forms runtime.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2984)","Url":"https://github.com/dotnet/winforms/pull/2984","RelatedDescription":"Closed or merged PR \"Add missing template identity version information\" (#2984)"},{"Id":"582799319","IsPullRequest":false,"CreatedAt":"2020-03-19T23:51:18","Actor":"RussKie","Number":"2981","RawContent":null,"Title":"Microsoft.Common.WinForms does not support framework `netcoreapp3.0`","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.x / 5.0\r\n\r\n**Problem description:**\r\n\r\nAfter installing 5.0 with 3.0/3.1 already installed, the 3.0/3.1 templates are no longer available to Visual Studio because the Winforms template pack for 5.0 does not support 3.1 or 3.0 in the template.json for the carried templates.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nIt is possible to create Windows Forms apps targeting 3.x and 5.0, e.g.\r\n```powershell\r\ndotnet new winforms -f netcoreapp3.0\r\ndotnet new winforms -f netcoreapp3.1\r\ndotnet new winforms -f netcoreapp5.0\r\ndotnet new winformslib -f netcoreapp3.0\r\ndotnet new winformslib -f netcoreapp3.1\r\ndotnet new winformslib -f netcoreapp5.0\r\n```\r\n\r\n**Minimal repro:**\r\n\r\n```powershell\r\nPS> dotnet new winforms -f netcoreapp3.1\r\n\r\nCouldn't find an installed template that matches the input, searching online for one that does...\r\nUsage: new [options]\r\n\r\nWindows Forms (WinForms) Application (C#)\r\nAuthor: Microsoft\r\nDescription: A project for creating a .NET Core Windows Forms (WinForms) Application\r\nError: Invalid parameter(s):\r\n-f netcoreapp3.1\r\n    'netcoreapp3.1' is not a valid value for -f (Framework).\r\n\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/2981","RelatedDescription":"Closed issue \"Microsoft.Common.WinForms does not support framework `netcoreapp3.0`\" (#2981)"},{"Id":"584214652","IsPullRequest":false,"CreatedAt":"2020-03-19T23:42:49","Actor":"TempeBrennan","Number":"2989","RawContent":null,"Title":"RichTextBox paint result is not good","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n3.1.200\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nUse sendMessage API to get RichTextBox paint result and draw to a panel:\r\n\r\nhttps://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-sendmessage\r\n\r\n```\r\nUnsafeNativeMethods.SendMessage(new HandleRef(this.myRichTextBox1, this.myRichTextBox1.Handle), UnsafeNativeMethods.EM_FORMATRANGE, new IntPtr(1), ref fmt);\r\nUnsafeNativeMethods.SendMessage(new HandleRef(this.myRichTextBox1, this.myRichTextBox1.Handle), UnsafeNativeMethods.EM_FORMATRANGE, IntPtr.Zero, IntPtr.Zero);\r\n```\r\n\r\nset font, everything is ok :\r\n![image](https://user-images.githubusercontent.com/51563666/77041169-5b204680-69f4-11ea-953d-3a39cac99869.png)\r\n\r\nset selection font, paint result is not good:\r\n![image](https://user-images.githubusercontent.com/51563666/77041366-be11dd80-69f4-11ea-8f16-523cc92373dd.png)\r\n\r\npaint method code:\r\n```\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n            this.myRichTextBox1.SelectionStart = 0;\r\n            this.myRichTextBox1.SelectionLength = 5;\r\n            this.myRichTextBox1.SelectionFont = new Font(\"MS PGothic\", (float)11.25);\r\n        }\r\n\r\n        private void panel1_Paint(object sender, PaintEventArgs e)\r\n        {\r\n            var render = new MyRichTextBox();\r\n            render.Rtf = this.myRichTextBox1.Rtf;\r\n\r\n            using (Metafile buffer = new Metafile(render.Graphics.GetHdc(), new RectangleF(0f, 0f, (float)render.Bounds.Width, (float)render.Bounds.Height),\r\n                           MetafileFrameUnit.Pixel, EmfType.EmfPlusDual))\r\n            {\r\n                render.Graphics.ReleaseHdc();\r\n                using (Graphics bufferGraphics = Graphics.FromImage(buffer))\r\n                {\r\n                    var hdc = bufferGraphics.GetHdc();\r\n                    try\r\n                    {\r\n                        FORMATRANGE fmt = new FORMATRANGE();\r\n                        fmt.hdc = hdc;\r\n                        fmt.hdcTarget = hdc;\r\n                        fmt.rc = new RECT(0, 0, 1500, 1500);\r\n                        fmt.rcPage = new RECT(0, 0, 1500, 1500);\r\n                        fmt.chrg.cpMin = 0;\r\n                        fmt.chrg.cpMax = -1;\r\n                        UnsafeNativeMethods.SendMessage(new HandleRef(this.myRichTextBox1, this.myRichTextBox1.Handle), UnsafeNativeMethods.EM_FORMATRANGE, new IntPtr(1), ref fmt);\r\n                        UnsafeNativeMethods.SendMessage(new HandleRef(this.myRichTextBox1, this.myRichTextBox1.Handle), UnsafeNativeMethods.EM_FORMATRANGE, IntPtr.Zero, IntPtr.Zero);\r\n                    }\r\n                    finally\r\n                    {\r\n                        bufferGraphics.ReleaseHdc(hdc);\r\n                    }\r\n                }\r\n                e.Graphics.DrawImage(buffer, render.Bounds, 0f, 0f, (float)render.Bounds.Width, (float)render.Bounds.Height, GraphicsUnit.Pixel);\r\n            }\r\n        }\r\n```\r\n\r\nMore detail please reference TestRichTextBoxNETCoreWithAPI\r\n\r\nIf change to use DrawToBitmap method:\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.drawtobitmap?view=netframework-4.8\r\n\r\nselection font is ok:\r\n![image](https://user-images.githubusercontent.com/51563666/77041689-514b1300-69f5-11ea-8a85-24faf0e26e0b.png)\r\n\r\n\r\nfont is not good if set rich textbox transparent:\r\n![image](https://user-images.githubusercontent.com/51563666/77041509-ffa28880-69f4-11ea-9699-04f3f8ef7e56.png)\r\n\r\nTo solve this issue, we have to give up transparent back color, then issue is fixed:\r\n![image](https://user-images.githubusercontent.com/51563666/77041809-89525600-69f5-11ea-94b3-a9060b0e21bf.png)\r\n\r\n\r\npaint method code:\r\n\r\n```\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n            this.richTextBox1.Text = \"あいうえお\";\r\n            this.richTextBox1.SelectionStart = 0;\r\n            this.richTextBox1.SelectionLength = 5;\r\n            this.richTextBox1.SelectionFont = new Font(\"MS PGothic\", (float)11.25);\r\n\r\n            this.richTextBox2.Text = \"あいうえお\";\r\n            this.richTextBox2.SelectionStart = 0;\r\n            this.richTextBox2.SelectionLength = 5;\r\n            this.richTextBox2.SelectionFont = new Font(\"MS PGothic\", (float)11.25);\r\n        }\r\n\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            this.panel1.Invalidate();\r\n        }\r\n\r\n        private void panel1_Paint(object sender, PaintEventArgs e)\r\n        {\r\n            var img = new Bitmap(this.richTextBox1.Width, this.richTextBox1.Height);\r\n            this.richTextBox1.DrawToBitmap(img, new Rectangle(0, 0, this.richTextBox1.Width, this.richTextBox1.Height));\r\n            e.Graphics.DrawImage(img, 0, 0);\r\n        }\r\n\r\n        private void panel2_Paint(object sender, PaintEventArgs e)\r\n        {\r\n            var img = new Bitmap(this.richTextBox2.Width, this.richTextBox2.Height);\r\n            this.richTextBox2.DrawToBitmap(img, new Rectangle(0, 0, this.richTextBox2.Width, this.richTextBox2.Height));\r\n            e.Graphics.DrawImage(img, 0, 0);\r\n        }\r\n\r\n        private void button2_Click(object sender, EventArgs e)\r\n        {\r\n            this.panel2.Invalidate();\r\n        }\r\n```\r\n\r\n**Expected behavior:**\r\nChoose any API to get correct result to paint a rich textbox like real control.\r\nOr maybe this is limitation and is there any workaround to solve it? \r\nThanks a lot!\r\n\r\n**Minimal repro:**\r\n[TestRichTextBox.zip](https://github.com/dotnet/winforms/files/4353148/TestRichTextBox.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2989","RelatedDescription":"Closed issue \"RichTextBox paint result is not good\" (#2989)"},{"Id":"580281118","IsPullRequest":false,"CreatedAt":"2020-03-19T03:42:03","Actor":"AraHaan","Number":"2974","RawContent":null,"Title":"[Forms Designer] The designer loader has not been initialized yet. You may only call this method after initialization error when trying to open forms.","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.200-preview-015002\r\n Commit:    b3dae24c3b\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19577\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.200-preview-015002\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.2\r\n  Commit:  916b5cba26\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014459 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.200-preview-015002 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nNo\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nForms when double clicked in latest preview of VS2019 16.5 Preview 5 seems to have issues initializing the Windows Forms Designer for .NET Core 3.1 applications (or at least the forms my application has).\r\n\r\nWhat is displayed is an error dialog that says: ``The designer loader has not been initialized yet. You may only call this method after initialization.``\r\n\r\n**Expected behavior:**\r\nThe Forms to show.\r\n\r\n**Minimal repro:**\r\nHere is an example form (I call it a ThemedForm as I try to theme it to some colors):\r\n\r\n```cs\r\n// Copyright (c) 2014-2020, Els_kom org.\r\n// https://github.com/Elskom/\r\n// All rights reserved.\r\n// license: MIT, see LICENSE for more details.\r\n\r\nnamespace Els_kom.Controls\r\n{\r\n    using System;\r\n    using System.Drawing;\r\n    using System.Drawing.Drawing2D;\r\n    using System.Windows.Forms;\r\n\r\n    internal class ThemedForm : Form\r\n    {\r\n        protected override void OnPaint(PaintEventArgs e)\r\n        {\r\n            // var g = e.Graphics;\r\n            // var fillRect = new Rectangle(0, 0, this.ClientSize.Width, this.ClientSize.Height);\r\n            // if (fillRect.Width > 0 && fillRect.Height > 0)\r\n            // {\r\n            //     using (var brush = new LinearGradientBrush(fillRect, Color.FromArgb(80, 80, 80), Color.FromArgb(40, 40, 40), LinearGradientMode.Vertical))\r\n            //     {\r\n            //         g.FillRectangle(brush, fillRect);\r\n            //     }\r\n            // }\r\n            base.OnPaint(e);\r\n        }\r\n\r\n        protected override void OnLoad(EventArgs e)\r\n        {\r\n            if (!this.DesignMode)\r\n            {\r\n                ShareXResources.Theme = ShareXTheme.GetPresets()[0];\r\n                ShareXResources.ApplyTheme(this);\r\n            }\r\n\r\n            base.OnLoad(e);\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n```cs\r\n// Copyright (c) 2014-2020, Els_kom org.\r\n// https://github.com/Elskom/\r\n// All rights reserved.\r\n// license: MIT, see LICENSE for more details.\r\n\r\nnamespace Els_kom\r\n{\r\n    using System.Collections.Generic;\r\n    using System.Drawing;\r\n\r\n    public class ShareXTheme\r\n    {\r\n        public ShareXTheme()\r\n        {\r\n        }\r\n\r\n        public string Name { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color BackgroundColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color LightBackgroundColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color DarkBackgroundColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color TextColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color BorderColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color CheckerColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color CheckerColor2 { get; set; }\r\n\r\n        public int CheckerSize { get; set; } = 15;\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color LinkColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color MenuHighlightColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color MenuHighlightBorderColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color MenuBorderColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color MenuCheckBackgroundColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color SeparatorLightColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color SeparatorDarkColor { get; set; }\r\n\r\n        public static ShareXTheme GetDarkTheme()\r\n            => new ShareXTheme()\r\n            {\r\n                Name = \"Dark\",\r\n                BackgroundColor = Color.FromArgb(42, 47, 56),\r\n                LightBackgroundColor = Color.FromArgb(52, 57, 65),\r\n                DarkBackgroundColor = Color.FromArgb(28, 32, 38),\r\n                TextColor = Color.FromArgb(235, 235, 235),\r\n                BorderColor = Color.FromArgb(28, 32, 38),\r\n                CheckerColor = Color.FromArgb(60, 60, 60),\r\n                CheckerColor2 = Color.FromArgb(50, 50, 50),\r\n                CheckerSize = 15,\r\n                LinkColor = Color.FromArgb(166, 212, 255),\r\n                MenuHighlightColor = Color.FromArgb(30, 34, 40),\r\n                MenuHighlightBorderColor = Color.FromArgb(116, 129, 152),\r\n                MenuBorderColor = Color.FromArgb(22, 26, 31),\r\n                MenuCheckBackgroundColor = Color.FromArgb(56, 64, 75),\r\n                SeparatorLightColor = Color.FromArgb(56, 64, 75),\r\n                SeparatorDarkColor = Color.FromArgb(22, 26, 31),\r\n            };\r\n\r\n        public static ShareXTheme GetLightTheme()\r\n            => new ShareXTheme()\r\n            {\r\n                Name = \"Light\",\r\n                BackgroundColor = Color.FromArgb(242, 242, 242),\r\n                LightBackgroundColor = Color.FromArgb(247, 247, 247),\r\n                DarkBackgroundColor = Color.FromArgb(235, 235, 235),\r\n                TextColor = Color.FromArgb(69, 69, 69),\r\n                BorderColor = Color.FromArgb(201, 201, 201),\r\n                CheckerColor = Color.FromArgb(60, 60, 60),\r\n                CheckerColor2 = Color.FromArgb(50, 50, 50),\r\n                CheckerSize = 15,\r\n                LinkColor = Color.FromArgb(166, 212, 255),\r\n                MenuHighlightColor = Color.FromArgb(247, 247, 247),\r\n                MenuHighlightBorderColor = Color.FromArgb(96, 143, 226),\r\n                MenuBorderColor = Color.FromArgb(201, 201, 201),\r\n                MenuCheckBackgroundColor = Color.FromArgb(225, 233, 244),\r\n                SeparatorLightColor = Color.FromArgb(253, 253, 253),\r\n                SeparatorDarkColor = Color.FromArgb(189, 189, 189),\r\n            };\r\n\r\n        public static List<ShareXTheme> GetPresets()\r\n            => new List<ShareXTheme>() { GetDarkTheme(), GetLightTheme() };\r\n\r\n        public override string ToString()\r\n            => this.Name;\r\n    }\r\n}\r\n```\r\n\r\n```cs\r\n// Copyright (c) 2014-2020, Els_kom org.\r\n// https://github.com/Elskom/\r\n// All rights reserved.\r\n// license: MIT, see LICENSE for more details.\r\n\r\nnamespace Els_kom\r\n{\r\n    using System.Collections.Generic;\r\n    using System.Diagnostics.CodeAnalysis;\r\n    using System.Drawing;\r\n    using System.Windows.Forms;\r\n\r\n    public static class ShareXResources\r\n    {\r\n        public static Icon Icon => Icons.FormIcon;\r\n\r\n        public static ShareXTheme Theme { get; set; } = new ShareXTheme();\r\n\r\n        public static void ApplyTheme(Form form, bool setIcon = true)\r\n        {\r\n            if (setIcon)\r\n            {\r\n                form.Icon = Icon;\r\n            }\r\n\r\n            // if (ExperimentalDarkTheme)\r\n            // {\r\n            ApplyDarkThemeToControl(form);\r\n\r\n            if (form.IsHandleCreated)\r\n            {\r\n                NativeMethods.UseImmersiveDarkMode(form.Handle, true);\r\n            }\r\n            else\r\n            {\r\n                form.HandleCreated += (s, e) => NativeMethods.UseImmersiveDarkMode(form.Handle, true);\r\n            }\r\n\r\n            // }\r\n        }\r\n\r\n        private static void ApplyDarkThemeToControl(Control control)\r\n        {\r\n            // capture label in a separate switch. This is a bit hacky.\r\n            switch (control)\r\n            {\r\n                case Label lbl:\r\n                    lbl.BackColor = Color.Transparent;\r\n                    return;\r\n            }\r\n\r\n            switch (control)\r\n            {\r\n                case CheckBox cb when cb.Appearance == Appearance.Button:\r\n                    cb.FlatStyle = FlatStyle.Flat;\r\n                    cb.FlatAppearance.BorderColor = Theme.BorderColor;\r\n                    cb.ForeColor = Theme.TextColor;\r\n                    cb.BackColor = Theme.LightBackgroundColor;\r\n                    return;\r\n                case ComboBox cb:\r\n                    cb.FlatStyle = FlatStyle.Flat;\r\n                    cb.ForeColor = Theme.TextColor;\r\n                    cb.BackColor = Theme.LightBackgroundColor;\r\n                    return;\r\n                case ListBox lb:\r\n                    lb.ForeColor = Theme.TextColor;\r\n                    lb.BackColor = Theme.LightBackgroundColor;\r\n                    return;\r\n                case SplitContainer sc:\r\n                    sc.Panel1.BackColor = Theme.BackgroundColor;\r\n                    sc.Panel2.BackColor = Theme.BackgroundColor;\r\n                    break;\r\n                case PropertyGrid pg:\r\n                    pg.CategoryForeColor = Theme.TextColor;\r\n                    pg.CategorySplitterColor = Theme.BackgroundColor;\r\n                    pg.LineColor = Theme.BackgroundColor;\r\n                    pg.SelectedItemWithFocusForeColor = Theme.BackgroundColor;\r\n                    pg.SelectedItemWithFocusBackColor = Theme.TextColor;\r\n                    pg.ViewForeColor = Theme.TextColor;\r\n                    pg.ViewBackColor = Theme.LightBackgroundColor;\r\n                    pg.ViewBorderColor = Theme.BorderColor;\r\n                    pg.HelpForeColor = Theme.TextColor;\r\n                    pg.HelpBackColor = Theme.BackgroundColor;\r\n                    pg.HelpBorderColor = Theme.BorderColor;\r\n                    return;\r\n                case DataGridView dgv:\r\n                    dgv.BackgroundColor = Theme.LightBackgroundColor;\r\n                    dgv.GridColor = Theme.BorderColor;\r\n                    dgv.DefaultCellStyle.BackColor = Theme.LightBackgroundColor;\r\n                    dgv.DefaultCellStyle.SelectionBackColor = Theme.LightBackgroundColor;\r\n                    dgv.DefaultCellStyle.ForeColor = Theme.TextColor;\r\n                    dgv.DefaultCellStyle.SelectionForeColor = Theme.TextColor;\r\n                    dgv.ColumnHeadersDefaultCellStyle.BackColor = Theme.BackgroundColor;\r\n                    dgv.ColumnHeadersDefaultCellStyle.SelectionBackColor = Theme.BackgroundColor;\r\n                    dgv.ColumnHeadersDefaultCellStyle.ForeColor = Theme.TextColor;\r\n                    dgv.ColumnHeadersDefaultCellStyle.SelectionForeColor = Theme.TextColor;\r\n                    dgv.EnableHeadersVisualStyles = false;\r\n                    break;\r\n                case LinkLabel ll:\r\n                    ll.LinkColor = Theme.LinkColor;\r\n                    break;\r\n            }\r\n\r\n            control.ForeColor = Theme.TextColor;\r\n            control.BackColor = Theme.BackgroundColor;\r\n\r\n            foreach (Control child in control.Controls)\r\n            {\r\n                ApplyDarkThemeToControl(child);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n```cs\r\n// Copyright (c) 2014-2020, Els_kom org.\r\n// https://github.com/Elskom/\r\n// All rights reserved.\r\n// license: MIT, see LICENSE for more details.\r\n\r\nnamespace Els_kom\r\n{\r\n    using System;\r\n    using System.Drawing;\r\n    using System.Runtime.InteropServices;\r\n    using System.Windows.Forms;\r\n\r\n    internal static class NativeMethods\r\n    {\r\n        private static readonly Version OSVersion = Environment.OSVersion.Version;\r\n\r\n        public enum DwmWindowAttribute : uint\r\n        {\r\n            /// <summary>\r\n            /// Use with DwmGetWindowAttribute. Discovers whether non-client rendering is enabled. The retrieved value is of type BOOL. TRUE if non-client rendering is enabled; otherwise, FALSE.\r\n            /// </summary>\r\n            DWMWA_NCRENDERING_ENABLED = 1,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Sets the non-client rendering policy. The pvAttribute parameter points to a value from the DWMNCRENDERINGPOLICY enumeration.\r\n            /// </summary>\r\n            DWMWA_NCRENDERING_POLICY,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Enables or forcibly disables DWM transitions. The pvAttribute parameter points to a value of TRUE to disable transitions or FALSE to enable transitions.\r\n            /// </summary>\r\n            DWMWA_TRANSITIONS_FORCEDISABLED,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Enables content rendered in the non-client area to be visible on the frame drawn by DWM. The pvAttribute parameter points to a value of TRUE to enable content rendered in the non-client area to be visible on the frame; otherwise, it points to FALSE.\r\n            /// </summary>\r\n            DWMWA_ALLOW_NCPAINT,\r\n\r\n            /// <summary>\r\n            /// Use with DwmGetWindowAttribute. Retrieves the bounds of the caption button area in the window-relative space. The retrieved value is of type RECT.\r\n            /// </summary>\r\n            DWMWA_CAPTION_BUTTON_BOUNDS,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Specifies whether non-client content is right-to-left (RTL) mirrored. The pvAttribute parameter points to a value of TRUE if the non-client content is right-to-left (RTL) mirrored; otherwise, it points to FALSE.\r\n            /// </summary>\r\n            DWMWA_NONCLIENT_RTL_LAYOUT,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Forces the window to display an iconic thumbnail or peek representation (a static bitmap), even if a live or snapshot representation of the window is available. This value normally is set during a window's creation and not changed throughout the window's lifetime. Some scenarios, however, might require the value to change over time. The pvAttribute parameter points to a value of TRUE to require a iconic thumbnail or peek representation; otherwise, it points to FALSE.\r\n            /// </summary>\r\n            DWMWA_FORCE_ICONIC_REPRESENTATION,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Sets how Flip3D treats the window. The pvAttribute parameter points to a value from the DWMFLIP3DWINDOWPOLICY enumeration.\r\n            /// </summary>\r\n            DWMWA_FLIP3D_POLICY,\r\n\r\n            /// <summary>\r\n            /// Use with DwmGetWindowAttribute. Retrieves the extended frame bounds rectangle in screen space. The retrieved value is of type RECT.\r\n            /// </summary>\r\n            DWMWA_EXTENDED_FRAME_BOUNDS,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. The window will provide a bitmap for use by DWM as an iconic thumbnail or peek representation (a static bitmap) for the window. DWMWA_HAS_ICONIC_BITMAP can be specified with DWMWA_FORCE_ICONIC_REPRESENTATION. DWMWA_HAS_ICONIC_BITMAP normally is set during a window's creation and not changed throughout the window's lifetime. Some scenarios, however, might require the value to change over time. The pvAttribute parameter points to a value of TRUE to inform DWM that the window will provide an iconic thumbnail or peek representation; otherwise, it points to FALSE.\r\n            /// </summary>\r\n            DWMWA_HAS_ICONIC_BITMAP,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Do not show peek preview for the window. The peek view shows a full-sized preview of the window when the mouse hovers over the window's thumbnail in the taskbar. If this attribute is set, hovering the mouse pointer over the window's thumbnail dismisses peek (in case another window in the group has a peek preview showing). The pvAttribute parameter points to a value of TRUE to prevent peek functionality or FALSE to allow it.\r\n            /// </summary>\r\n            DWMWA_DISALLOW_PEEK,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Prevents a window from fading to a glass sheet when peek is invoked. The pvAttribute parameter points to a value of TRUE to prevent the window from fading during another window's peek or FALSE for normal behavior.\r\n            /// </summary>\r\n            DWMWA_EXCLUDED_FROM_PEEK,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Cloaks the window such that it is not visible to the user. The window is still composed by DWM.\r\n            /// </summary>\r\n            DWMWA_CLOAK,\r\n\r\n            /// <summary>\r\n            /// Use with DwmGetWindowAttribute.\r\n            /// </summary>\r\n            DWMWA_CLOAKED,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Freeze the window's thumbnail image with its current visuals. Do no further live updates on the thumbnail image to match the window's contents.\r\n            /// </summary>\r\n            DWMWA_FREEZE_REPRESENTATION,\r\n\r\n            /// <summary>\r\n            /// The maximum recognized DWMWINDOWATTRIBUTE value, used for validation purposes.\r\n            /// </summary>\r\n            DWMWA_LAST,\r\n\r\n            // Undocumented, available since October 2018 update (build 17763)\r\n            DWMWA_USE_IMMERSIVE_DARK_MODE = 19,\r\n        }\r\n\r\n        [DllImport(\"dwmapi.dll\")]\r\n        public static extern int DwmSetWindowAttribute(IntPtr hwnd, int attr, ref int attrValue, int attrSize);\r\n\r\n        public static bool UseImmersiveDarkMode(IntPtr handle, bool enabled)\r\n        {\r\n            if (IsWindows10OrGreater(17763))\r\n            {\r\n                // try\r\n                // {\r\n                var useImmersiveDarkMode = enabled ? 1 : 0;\r\n                var result = DwmSetWindowAttribute(handle, (int)DwmWindowAttribute.DWMWA_USE_IMMERSIVE_DARK_MODE, ref useImmersiveDarkMode, sizeof(int));\r\n                return result == 0;\r\n\r\n                // }\r\n                // catch (Exception e)\r\n                // {\r\n                //     DebugHelper.WriteException(e);\r\n                // }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        private static bool IsWindows10OrGreater(int build = -1)\r\n            => OSVersion.Major >= 10 && OSVersion.Build >= build;\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/winforms/issues/2974","RelatedDescription":"Closed issue \"[Forms Designer] The designer loader has not been initialized yet. You may only call this method after initialization error when trying to open forms.\" (#2974)"},{"Id":"583733208","IsPullRequest":true,"CreatedAt":"2020-03-19T00:32:50","Actor":"gpetrou","Number":"2987","RawContent":null,"Title":"Move InvalidateRgn to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move InvalidateRgn to Interop User32.\r\n- Replace some ExternDll usages with Libraries instead.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2987)","Url":"https://github.com/dotnet/winforms/pull/2987","RelatedDescription":"Closed or merged PR \"Move InvalidateRgn to Interop User32\" (#2987)"},{"Id":"583678529","IsPullRequest":true,"CreatedAt":"2020-03-18T12:22:20","Actor":"dotnet-maestro[bot]","Number":"2985","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2985)","Url":"https://github.com/dotnet/winforms/pull/2985","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2985)"},{"Id":"582962776","IsPullRequest":true,"CreatedAt":"2020-03-17T12:22:20","Actor":"dotnet-maestro[bot]","Number":"2982","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200316.3\r\n- **Date Produced**: 3/16/2020 7:15 PM\r\n- **Commit**: 8784a7bf875f37d9115a7e2b8c37c335f0dbf884\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20166.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20166.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20166.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20166.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20166.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2982)","Url":"https://github.com/dotnet/winforms/pull/2982","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2982)"},{"Id":"582221191","IsPullRequest":false,"CreatedAt":"2020-03-16T11:36:05","Actor":"Jessie-Zhang01","Number":"2979","RawContent":null,"Title":"NullReferenceException is thrown when creating a control in an MDI child form","State":"open","Body":"* .NET Core Version: 5.0.100-preview.3.20163.3.9\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More Info**\r\nThis is a not regression issue, it can reproduce from .Net 2.0 to .Net 4.8.\r\n\r\n**Minimal repro:**\r\n\r\n1. Extract the attached “Core.zip” and open it in VS.\r\n2. Build and run this solution, then click the “Exception occurs by click” button on the form, an exception will show.\r\n[Core.zip](https://github.com/dotnet/winforms/files/4337922/Core.zip)\r\n\r\n**Expected behavior:**\r\nThe application can be run successfully.\r\n\r\n**Actual behavior:**\r\nAn exception is thrown when Add a New Control to the Panel.\r\n![image](https://user-images.githubusercontent.com/45864649/76754447-61d26380-673f-11ea-830d-1cb0b4bb9b79.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2979","RelatedDescription":"Open issue \"NullReferenceException is thrown when creating a control in an MDI child form\" (#2979)"},{"Id":"581760017","IsPullRequest":true,"CreatedAt":"2020-03-16T00:47:48","Actor":"gpetrou","Number":"2977","RawContent":null,"Title":"Add MCN enum to Interop ComCtl32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add MCN enum to Interop ComCtl32.\r\n- Remove MCN constants and replace their usages with MCN enum values.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2977)","Url":"https://github.com/dotnet/winforms/pull/2977","RelatedDescription":"Closed or merged PR \"Add MCN enum to Interop ComCtl32\" (#2977)"},{"Id":"581755253","IsPullRequest":true,"CreatedAt":"2020-03-16T00:30:20","Actor":"gpetrou","Number":"2976","RawContent":null,"Title":"Add HDN enum in Interop ComCtl32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add HDN enum in Interop ComCtl32.\r\n- Remove HDN constants and replaces their usages with the above enum values.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2976)","Url":"https://github.com/dotnet/winforms/pull/2976","RelatedDescription":"Closed or merged PR \"Add HDN enum in Interop ComCtl32\" (#2976)"},{"Id":"581762691","IsPullRequest":true,"CreatedAt":"2020-03-15T17:53:35","Actor":"gpetrou","Number":"2978","RawContent":null,"Title":"Remove unused RichTextBoxConstants","State":"open","Body":"## Proposed changes\r\n\r\n- Remove unused RichTextBoxConstants.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2978)","Url":"https://github.com/dotnet/winforms/pull/2978","RelatedDescription":"Open PR \"Remove unused RichTextBoxConstants\" (#2978)"},{"Id":"581094207","IsPullRequest":true,"CreatedAt":"2020-03-14T07:54:33","Actor":"vladimir-krestov","Number":"2975","RawContent":null,"Title":"WIP: [Refactoring] Added protection for MonthCalendarAccessibleObject","State":"open","Body":"- Fixes #2475\r\n\r\nAdded protection for `MonthCalendarAccessibleObject` against incorrect parameters of methods to avoid exceptions throwing\r\n\r\n- Related Issue #2912\r\n- Related PR #2911\r\n\r\n## Proposed changes\r\n\r\n- Add `parentAccessibleObject` null condition for `GetCalendarCell` method to avoid `NullReferenceException` throwing when getting `rowIndex` value on 373 line (`MonthCalendar.MonthCalendarAccessibleObject.cs`)\r\n- Check SYSTEMTIME parameter value for `SysTimeToDateTime` method to get correct `DateTime` value (`DateTimePicker.cs`)\r\n- Add unit tests\r\n\r\n## Customer Impact\r\n\r\n- User apps won't crash in these methods when there are incorrect parameters\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit testing\r\n- Manual testing\r\n- CTI\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET Core SDK: 5.0.0-alpha.1.20072.3\r\n- Microsoft Windows [Version 10.0.18363.592]\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2975)","Url":"https://github.com/dotnet/winforms/pull/2975","RelatedDescription":"Open PR \"WIP: [Refactoring] Added protection for MonthCalendarAccessibleObject\" (#2975)"},{"Id":"579787085","IsPullRequest":false,"CreatedAt":"2020-03-12T08:58:53","Actor":"hughbe","Number":"2973","RawContent":null,"Title":"Adding a ToolStripDropDown child to ToolStripPanel throws NRE","State":"open","Body":"```cs\r\n[WinFormsFact]\r\npublic void Test()\r\n{\r\n    using var control = new ToolStripDropDown\r\n    {\r\n        TopLevel = false\r\n    };\r\n    using var parent = new ToolStripPanel();\r\n    parent.Controls.Add(control);\r\n}\r\n```\r\n\r\n```\r\n  Error Message:\r\n   System.NullReferenceException : Object reference not set to an instance of an object.\r\n  Stack Trace:\r\n     at System.Windows.Forms.Layout.FlowLayout.xLayoutRow(ContainerProxy containerProxy, ElementProxy elementProxy, Int32 startIndex, Int32 endIndex, Rectangle rowBounds, Int32& breakIndex, Boolean measureOnly)\r\n   at System.Windows.Forms.Layout.FlowLayout.xLayout(IArrangedElement container, Rectangle displayRect, Boolean measureOnly)\r\n   at System.Windows.Forms.Layout.FlowLayout.GetPreferredSize(IArrangedElement container, Size proposedConstraints)\r\n   at System.Windows.Forms.ToolStripPanelRow.System.Windows.Forms.Layout.IArrangedElement.GetPreferredSize(Size constrainingSize)\r\n   at System.Windows.Forms.Layout.FlowLayout.VerticalElementProxy.GetPreferredSize(Size proposedSize)\r\n   at System.Windows.Forms.Layout.FlowLayout.xLayoutRow(ContainerProxy containerProxy, ElementProxy elementProxy, Int32 startIndex, Int32 endIndex, Rectangle rowBounds, Int32& breakIndex, Boolean measureOnly)\r\n   at System.Windows.Forms.Layout.FlowLayout.xLayout(IArrangedElement container, Rectangle displayRect, Boolean measureOnly)\r\n   at System.Windows.Forms.Layout.FlowLayout.LayoutCore(IArrangedElement container, LayoutEventArgs args)\r\n   at System.Windows.Forms.Layout.LayoutEngine.Layout(Object container, LayoutEventArgs layoutEventArgs)\r\n   at System.Windows.Forms.Control.OnLayout(LayoutEventArgs levent)\r\n   at System.Windows.Forms.ToolStripPanel.OnLayout(LayoutEventArgs e)\r\n   at System.Windows.Forms.Control.PerformLayout(LayoutEventArgs args)\r\n   at System.Windows.Forms.Control.PerformLayout()\r\n   at System.Windows.Forms.Control.ResumeLayout(Boolean performLayout)\r\n   at System.Windows.Forms.Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)\r\n   at System.Windows.Forms.ToolStrip.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)\r\n   at System.Windows.Forms.ToolStripDropDown.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)\r\n   at System.Windows.Forms.Control.SetBounds(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)\r\n   at System.Windows.Forms.Control.set_Size(Size value)\r\n   at System.Windows.Forms.ToolStripDropDown.AdjustSize()\r\n   at System.Windows.Forms.ToolStripDropDown.OnLayout(LayoutEventArgs e)\r\n   at System.Windows.Forms.Control.PerformLayout(LayoutEventArgs args)\r\n   at System.Windows.Forms.Control.PerformLayout()\r\n   at System.Windows.Forms.Control.ResumeLayout(Boolean performLayout)\r\n   at System.Windows.Forms.Layout.LayoutTransaction.Dispose()\r\n   at System.Windows.Forms.ToolStripPanel.ToolStripPanelControlCollection.AddInternal(Control value)\r\n   at System.Windows.Forms.Tests.ControlTests.T() in C:\\Users\\hughbe\\source\\repos\\ConsoleApp\\ControlTests.cs:line 42\r\n```","Url":"https://github.com/dotnet/winforms/issues/2973","RelatedDescription":"Open issue \"Adding a ToolStripDropDown child to ToolStripPanel throws NRE\" (#2973)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-22T05:30:56.5646468Z","RunDurationInMilliseconds":831}