{"Data":{"Blog":{"FeedItems":[{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8400821867","Type":"PullRequestEvent","CreatedAt":"2018-10-10T21:59:25","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2285","RelatedDescription":"Opened pull request \" Revert \"[Xamarin.Android.Build.Tasks] deletebinobj fix for resources\" (#2285) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2216#issuecomment-428731234\r\n\r\nThis reverts commit fab260dfab1e2b7837e9c9e0e665007cb3156374.\r\n\r\nTest changes from 647659e8, catches the regression in #2216. It will be helpful to add this test in d15-9 going forward."},{"Id":"8399593784","Type":"IssuesEvent","CreatedAt":"2018-10-10T18:14:24","Actor":"MdNaushad","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2284","RelatedDescription":"Opened issue \"Xamarin Android CookieManager ignores cookies with samesite value set\" (#2284) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Xamarin Forms/Android Project.\r\n2. In the MainActivity OnCreate, create a cookie by setting the value for samesite as \"samesite=lax\".\r\n3. Add the cookie to the CookieManager:\r\n```\r\nvar cookie = new Cookie\r\n            {\r\n                Name = \".WithSameSite.Cookies\",\r\n                Value = \"13456789jhsvfshvdfjksDg48484751458sfgdfgdfg\",\r\n                Domain = \".example.com\",\r\n                Path = \"/\",\r\n                HttpOnly = true,\r\n                Secure = true,\r\n                Expires = DateTime.UtcNow.AddHours(1)\r\n            };\r\nvar cookieValue = $\"{cookie.Name}={cookie.Value};domain={cookie.Domain};path={cookie.Path};secure;httponly;samesite=lax;\";\r\n            CookieManager.Instance.SetCookie(\"https://www.example.com/\", cookieValue);\r\n```\r\n4) Try to fetch the cookie :\r\n```\r\n//fetch cookies with same site\r\n            var fetchCookie = CookieManager.Instance.GetCookie(\"https://www.example.com/\");\r\n            Console.WriteLine($\"Cookie fetched:{fetchCookie \r\n\r\n}\");\r\n```\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n[AndroidCookieIssue.zip](https://github.com/xamarin/xamarin-android/files/2465906/AndroidCookieIssue.zip)\r\n\r\n-->\r\n\r\n### Expected Behavior\r\nThe cookie should be fetched\r\n### Actual Behavior\r\nThe cookie is not getting fetched \r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visu\r\n[AndroidCookieIssue.zip](https://github.com/xamarin/xamarin-android/files/2465915/AndroidCookieIssue.zip)\r\nal Studio, then click the Show Details button, then click the Copy Information button.\r\n![image](https://user-images.githubusercontent.com/25201743/46750174-08a60b00-ccd5-11e8-980c-ec6bb5189305.png)\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8399306911","Type":"PullRequestEvent","CreatedAt":"2018-10-10T17:24:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2281","RelatedDescription":"Merged pull request \"[tests] fix AndroidUpdateResourcesTest.Issue2205 on Windows\" (#2281) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2098745\r\n\r\nThe `Issue2205` test is failing on Windows with:\r\n\r\n    Error message\r\n        System.ArgumentException : Illegal characters in path.\r\n    Stack trace\r\n        at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n        at System.IO.Path.Combine(String path1, String path2)\r\n        at Xamarin.ProjectTools.XamarinProject.UpdateProjectFiles(String directory, IEnumerable`1 projectFiles, Boolean doNotCleanup)\r\n        at Xamarin.ProjectTools.XamarinProject.Populate(String directory, IEnumerable`1 projectFiles)\r\n        at Xamarin.ProjectTools.ProjectBuilder.Save(XamarinProject project, Boolean doNotCleanupOnUpdate, Boolean saveProject)\r\n        at Xamarin.ProjectTools.ProjectBuilder.Build(XamarinProject project, Boolean doNotCleanupOnUpdate, String[] parameters, Boolean saveProject, Dictionary`2 environmentVariables)\r\n        at Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.Issue2205(Boolean useAapt2)\r\n\r\nLooking at the test, the `GoogleServicesJson` build item was declaring\r\nJSON string contents as a filename. Whoops!\r\n\r\nI guess that MacOS was OK with a JSON filename, while Windows was\r\ncertainly not.\r\n\r\nI changed the `BuildItem` to use the `TextContent` property, and used\r\na filename of `googleservices.json`. I also let VS format the method,\r\nso it matches our code formatting standards."},{"Id":"8399137668","Type":"PullRequestEvent","CreatedAt":"2018-10-10T16:54:23","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2283","RelatedDescription":"Opened pull request \"[Tests] More resilient network tests, take 2\" (#2283) at xamarin/xamarin-android","RelatedBody":"The previous\r\ncommit (https://github.com/xamarin/xamarin-android/commit/608d950a703ddb527258565c2a0705aa37f71789)\r\nsolved only part of the issue with network tests which fail on connection to a\r\ntest server. Not only one test was left without any code to catch failed\r\nconnection attempts, all the other tests failed to catch a connection issue in\r\nsituations when the Java backend tries to connect to the server only after the\r\nmanaged code attempts to wait on or obtain the result of the request from the\r\nasynchronous task running the request.\r\n\r\nThis commit *should* solve the remaining problems."},{"Id":"8398192266","Type":"IssuesEvent","CreatedAt":"2018-10-10T14:34:17","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2282","RelatedDescription":"Opened issue \"DebugType=none is always switched to DebugType=portable\" (#2282) at xamarin/xamarin-android","RelatedBody":"Context: http://feedback.devdiv.io/251340\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add `<DebugType>None</DebugType>` to a `csproj`\r\n2. `DebugType=portable` is used during the build...\r\n3. So it doesn't seem possible currently to disable pdb file generation if you don't want them?\r\n\r\nSeems to be due to:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/3f743678d3e7c19fc6f6e8f6928bfe4ae7d55ff0/src/Xamarin.Android.Build.Tasks/Xamarin.Android.CSharp.targets#L44\r\n\r\n### Expected Behavior\r\n\r\nIt should be possible to set `DebugType=None` in a Xamarin.Android project to disable pdb files.\r\n\r\n### Actual Behavior\r\n\r\n`DebugType=None` is switched to `DebugType=portable` instead...\r\n\r\n### Version Information\r\n\r\nReported on 15.8, happens on master currently.\r\n\r\n### What to do?\r\n\r\nFurther investigation required. We need to see what the IDEs (VS Windows + VS Mac) do when you change this setting. We also need to see what a plain .NET framework project does and emulate that behavior."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8401112359","Type":"IssuesEvent","CreatedAt":"2018-10-10T23:14:38","Actor":"pakbaz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4056","RelatedDescription":"Opened issue \"Frame with rounded corners have Visual issues on android\" (#4056) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen using Frame with CorderRadius property to produce rounded corner box have StackLayout inside, on android it seems to be couple of pixel smaller in one section with different background. on iOS it looks fine.\r\nTried to modify background, paddings, margins but seems to be a rendering bug on android.\r\n\r\n### Steps to Reproduce\r\n\r\nhaving a List template or even single rounded box using CornerRadius property on Frame with a two section background using a stacklayout and IsClippedToBounds to avoid bleeding, code sample below:\r\n\r\n ```\r\n<Frame Margin=\"10,0,10,10\" IsClippedToBounds=\"true\" BorderColor=\"{StaticResource BackgroundGrey}\" BackgroundColor=\"{Binding StatusColor}\" CornerRadius=\"10\" Padding=\"0\" IsVisible=\"{Binding IsVisible}\">\r\n            <Grid VerticalOptions=\"Start\" ColumnSpacing=\"0\">\r\n                <Grid.ColumnDefinitions>\r\n                    <ColumnDefinition Width=\"60\"/>\r\n                    <ColumnDefinition Width=\"6*\"/>\r\n                    <ColumnDefinition Width=\"3*\"/>\r\n                </Grid.ColumnDefinitions>\r\n                \r\n                <StackLayout BackgroundColor=\"{Binding StatusColor}\" HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"CenterAndExpand\" Orientation=\"Vertical\" Grid.Row=\"0\" Grid.Column=\"0\">\r\n                     <iconize:IconImage HorizontalOptions=\"CenterAndExpand\" VerticalOptions=\"CenterAndExpand\" WidthRequest=\"30\" HeightRequest=\"30\" IconColor=\"White\" Icon=\"{Binding IconPath}\" />\r\n                </StackLayout>\r\n                <StackLayout HorizontalOptions=\"FillAndExpand\" Padding=\"5,5,0,5\" BackgroundColor=\"{StaticResource GreyContainer}\" VerticalOptions=\"CenterAndExpand\" Orientation=\"Vertical\" Grid.Row=\"0\" Grid.Column=\"1\">\r\n                    <Label Text=\"Type\" FontSize=\"Small\" Style=\"{StaticResource LabelSmallBold}\"/>\r\n                    <Label Text=\"{Binding Name}\" FontSize=\"Small\" VerticalOptions=\"Start\"/>\r\n                </StackLayout>\r\n                <StackLayout HorizontalOptions=\"FillAndExpand\" Padding=\"0,5,0,5\" BackgroundColor=\"{StaticResource GreyContainer}\" VerticalOptions=\"Center\" Orientation=\"Vertical\" Grid.Row=\"0\" Grid.Column=\"2\">\r\n                    <Label Text=\"Expires\" FontSize=\"Small\" Style=\"{StaticResource LabelSmallBold}\"/>\r\n                    <Label Text=\"{Binding ExpirationDateString}\" FontSize=\"Small\" VerticalOptions=\"Start\"/>\r\n                </StackLayout>\r\n                \r\n            </Grid>\r\n        </Frame>\r\n```\r\n\r\n\r\n### Expected Behavior\r\nIt should look fine on both iOS and android.\r\n\r\n### Actual Behavior\r\nIt looks fine on iOS but apprears inconsistent on android.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2\r\n- IDE: Visual Studio Mac\r\n- Platform Target Frameworks: \r\n  - iOS:  12, 11\r\n  - Android: 6,7, 8, 8.1, 9 \r\n- Affected Devices: android devices only\r\n\r\n### Screenshots\r\n\r\n![screenshot](https://image.ibb.co/jNsuB9/Screen_Shot_2018_10_10_at_6_08_53_PM.png)\r\n\r\n"},{"Id":"8400561896","Type":"PullRequestEvent","CreatedAt":"2018-10-10T21:07:05","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4055","RelatedDescription":"Opened pull request \"[UITests] Update TestCloud.Agent\" (#4055) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUpdate UITest agent "},{"Id":"8400415185","Type":"IssuesEvent","CreatedAt":"2018-10-10T20:40:39","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3804","RelatedDescription":"Closed issue \"ObjectDisposedException during SetNativeControl in ViewRenderer for Android WebView\" (#3804) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nHey there! I'm having quite a strange issue with my custom renderer for an Android WebView.\r\nIn my application, I support opening multiple web views. I have a MasterDetailPage, where the master page contains a simple menu and the detail page contains the currently visible web view.\r\nThe web views are of type ContentPage which contain the custom WebView `SubWebView`.\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:controls=\"clr-namespace:Nxa.Touch.Controls;assembly=Nxa.Touch\"\r\n             x:Class=\"Nxa.Touch.SubWebViewPage\">\r\n    <ContentPage.Content>\r\n        <StackLayout>\r\n            <!-- the custom web view -->\r\n            <controls:SubWebView ...></controls:SubWebView>\r\n        </StackLayout>\r\n    </ContentPage.Content>\r\n</ContentPage>\r\n```\r\n\r\nThe pages are being cached in a dictionary in my MasterDetailPage, since I want the user to be able to reopen a view that was previously opened.\r\n\r\n```\r\nprivate IDictionary<string, SubWebViewPage> _views = new Dictionary<string, SubWebViewPage>();\r\n```\r\n\r\nWhen a view needs to be shown, I'm fetching the page from my dictionary and show it like this:\r\n\r\n```\r\nvar identifier = \"view1\";\r\nDetail = _views[identifier];\r\nIsPresented = false;\r\n```\r\n\r\nThe first time it works perfectly, but the second time I try to show it, I get an `ObjectDisposedException` during `SetNativeControl` in the renderer of my custom WebView, which looks like this:\r\n\r\n```\r\npublic class SubWebViewRenderer : ViewRenderer<Touch.Controls.SubWebView, WebView>\r\n    {\r\n        public SubWebViewRenderer(Context context) : base(context) { }\r\n\r\n        protected override void OnElementChanged(ElementChangedEventArgs<Touch.Controls.SubWebView> e)\r\n        {\r\n            base.OnElementChanged(e);\r\n\r\n            var subWebView = e.NewElement;\r\n            // subWebView.WebView is being set by the MasterDetailPage when a new web view is request to be opened\r\n            if (subWebView.WebView != null)\r\n            {\r\n                SetNativeControl((WebView)subWebView.WebView);\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nNow I know that there is a lot of code missing here, but there's quite a lot going on in my application. I've come across a few issues with getting ObjectDisposedExceptions in custom renderers, so I thought maybe it's a known problem already? I'm already sorry if the issue isn't clear enough. Please let me know if I can explain something in more detail.\r\n\r\nThank you,\r\nRonald\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.697729\r\n- Last known good version: None\r\n- IDE: Visual Studio 2017 15.8.4\r\n- Platform Target Frameworks:\r\n  - Android: Android 8.1 - API 27"},{"Id":"8399979747","Type":"IssuesEvent","CreatedAt":"2018-10-10T19:21:39","Actor":"breyed","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4054","RelatedDescription":"Opened issue \"Label.FormattedText does not dyanmically change size\" (#4054) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nText set via `Label.FormattedText` does not change size when the system text size changes.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a form with a SlackLayout containing two labels. In the first label, set `Text` to \"Hello\". In the second label, set `FormattedText` to a `FormattedString` with a single `Span`  with text \"World\".\r\n2. Create a dynamic binding for the `Style` of each label to \"ListItemCaptionStyle\".\r\n3. Run the app.\r\n4. In the platform's control panel, change the size to the smallest (e.g. on iOS, Settings > Display & Brightness > Text Size).\r\n5. Compare the labels' text sizes.\r\n6. In the platform's control panel, change the size to the largest.\r\n7. Compare the labels' text sizes.\r\n\r\n### Expected Behavior\r\n\"Hello\" and \"World\" are both dynamically change small or both large, depending on the system setting.\r\n\r\n### Actual Behavior\r\nThe label with the `Text` property worked. The label with `FormattedText` did not.\r\n\r\n### Basic Information\r\nTested on iOS. I haven't tested on other platforms.\r\n\r\n- Version with issue: Xamarin.Forms 3.2.0.871581\r\n- Platform Target Frameworks:\r\n  - iOS:  10.0\r\n"},{"Id":"8399652758","Type":"IssuesEvent","CreatedAt":"2018-10-10T18:24:24","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3384","RelatedDescription":"Closed issue \"CheckBox\" (#3384) at xamarin/Xamarin.Forms","RelatedBody":"The CheckBox item of WPF.\r\n\r\nCheckBox Text=\"My checkbox\" x:name=\"myCheckBox\" \r\nTextDirection=\"Right\" IsChecked=\"bool\" Checked=\"event_handler\" CanUncheck=\"false\"/>\r\n\r\nThis control can be used to select if a condition is true or no."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8402202143","Type":"PullRequestEvent","CreatedAt":"2018-10-11T05:26:56","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4939","RelatedDescription":"Merged pull request \"[CoreFoundation] Refactor Dispatch code to take advantage of recent code improvements.\" (#4939) at xamarin/xamarin-macios","RelatedBody":"Make DispatchObject inherit from NativeObject, and change existing code to\nadapt to and reuse code from NativeObject.\n\nThis PR is best reviewed commit-by-commit."},{"Id":"8401300748","Type":"PullRequestEvent","CreatedAt":"2018-10-11T00:14:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4945","RelatedDescription":"Merged pull request \"[msbuild] Enable nuget package conflict resolution\" (#4945) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/mono/mono/issues/10602 .\r\n\r\nFrom the issue:\r\n```\r\nWe need to enable this to support the system assemblies conflict\r\nresolution which we now rely on for any new packages to enhance\r\ndevelopers experience and get us out of dependency on specific package\r\nversions.\r\n```"},{"Id":"8400591034","Type":"IssuesEvent","CreatedAt":"2018-10-10T21:12:50","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4959","RelatedDescription":"Closed issue \"MonoMacGameView not rendering on Mojave\" (#4959) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download Mac sample app [MonoMacGameView](https://developer.xamarin.com/samples/mac/MonoMacGameWindow/)\r\n2. Compile and run the sample\r\n\r\n### Expected Behavior\r\nSee the cube and the pyramid rendering correctly\r\nPrior to updating to Xamarin.Mac 5, this was working on Mojave. We have an app that is having an identical problem to the sample.\r\n\r\n### Actual Behavior\r\nThe screen has no rendered content\r\n![screen shot 2018-10-09 at 1 13 13 pm](https://user-images.githubusercontent.com/1158332/46695838-7400b780-cbc5-11e8-9478-7d25b07ae38f.png)\r\n\r\n\r\n### Environment\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.9 (build 22)\r\nInstallation UUID: ecaddbe9-a78e-4787-b689-cbc3dfa7ace9\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.3\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.401/Sdks\r\nSDK Versions:\r\n\t2.1.401\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Community)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nXamarin.iOS not installed.\r\nCan't find mtouch or the Version file at /Library/Frameworks/Xamarin.iOS.framework/Versions/Current.\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706090022\r\nGit revision: 0a0ba3c4593e9adb1c6ff6324e641036146af376\r\nBuild date: 2018-10-05 16:38:51+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f7856b13f2c03a58e08381d3a5970bba18f5c7d7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:13:40 PDT 2018\r\n    root:xnu-4903.201.2~1/RELEASE_X86_64 x86_64\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\nhttps://developer.xamarin.com/samples/mac/MonoMacGameWindow/\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":33,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":80,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":181,"FavoriteCount":89,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":47,"RawContent":null}]}},"RunOn":"2018-10-11T05:30:53.0784844Z","RunDurationInMilliseconds":4241}