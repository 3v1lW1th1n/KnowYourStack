{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2019 Preview of Quality Rollup","PublishedOn":"2019-02-19T23:42:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the February 2019 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Addresses an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019","PublishedOn":"2019-02-19T18:22:20+00:00","CommentsCount":2,"FacebookCount":0,"Summary":".NET Core 1.0 was released on June 27, 2016 and .NET Core 1.1 was released on November 16, 2016. As an LTS release, .NET Core 1.0 is supported for three years. .NET Core 1.1 fits into the same support...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-core-1-0-and-1-1-will-reach-end-of-life-on-june-27-2019/","RawContent":null},{"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","PublishedOn":"2019-02-15T14:03:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Final Update 2/19/19 @1:30 PM (PST): This advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/","RawContent":null},{"Title":"Microsoft’s Developer Blogs are Getting an Update","PublishedOn":"2019-02-13T19:49:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In the coming days, we’ll be moving our developer blogs to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. This...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/microsofts-developer-blogs-are-getting-an-update/","RawContent":null},{"Title":"Help us make the .NET Architecture guides better for you!","PublishedOn":"2019-02-13T15:47:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the last couple of years, we worked with experts to create some incredible architecture guides &#38; reference samples for .NET developers. We focused on Microservices Architecture, Modernizing...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/help-us-make-the-net-architecture-guides-better-for-you/","RawContent":null},{"Title":".NET Framework February 2019 Security and Quality Rollup","PublishedOn":"2019-02-13T14:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated: February 19, 2019 The advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core February 2019 Updates – 1.0.14, 1.1.11, 2.1.8 and 2.2.2","PublishedOn":"2019-02-12T18:30:20+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core February 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes. .NET Core...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/12/net-core-february-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.10 – Machine Learning for .NET","PublishedOn":"2019-02-08T07:07:18+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/07/announcing-ml-net-0-10-machine-learning-for-net/","RawContent":null},{"Title":"Submit to the Applied F# Challenge!","PublishedOn":"2019-02-05T16:17:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Lena Hall, a Senior Cloud Developer Advocate at Microsoft. F# Software Foundation has recently announced their new initiative — Applied F# Challenge! We encourage you to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/05/submit-to-the-applied-f-challenge/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 2","PublishedOn":"2019-01-29T17:57:06+00:00","CommentsCount":52,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 2. It includes new features in .NET Core 3.0 and C# 8, in addition to the large number of new features in Preview 1. ASP.NET Core 3.0 Preview 2  is...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/29/announcing-net-core-3-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10427072993","Type":"IssuesEvent","CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Opened issue \".NET Core 3.0 RC 1\" (#123) at dotnet/announcements","RelatedBody":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10387173702","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:23:27","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Opened issue \"September 2019 .NET Updates\" (#122) at dotnet/announcements","RelatedBody":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10387041341","Type":"IssuesEvent","CreatedAt":"2019-09-10T17:04:51","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32971\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.7\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.8, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n"},{"Id":"10348207363","Type":"IssuesEvent","CreatedAt":"2019-09-04T19:14:06","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Opened issue \".NET Core 3.0 Preview 9\" (#120) at dotnet/announcements","RelatedBody":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n[EF Core](https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-9-and-entity-framework-6-3-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10478939934","Type":"IssuesEvent","CreatedAt":"2019-09-24T02:09:12","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26851","RelatedDescription":"Opened issue \"Test failed: JIT/SIMD/VectorMax_ro/VectorMax_ro.sh\" (#26851) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-r2r-extra #20190922.1 Run Test Pri1 R2R Linux x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=362899)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/601d11ee-7c38-43d9-ade5-193ab5df5959/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\n\r\n**Mode:**\r\nRunCrossGen=1\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=2\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on my Linux x64 machine\r\n\r\n**Log:**\r\n```\r\nJIT/SIMD/VectorMax_ro/VectorMax_ro.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/Reports/JIT.SIMD/VectorMax_ro/VectorMax_ro.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      in takeLock\r\n      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload/crossgen /Platform_Assemblies_Paths /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload:/home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/VectorMax_ro/IL:/home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/VectorMax_ro /in VectorMax_ro.org /out VectorMax_ro.dll\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Native image VectorMax_ro.dll generated successfully.\r\n      in ReleaseLock\r\n      in takeLock\r\n      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload/corerun VectorMax_ro.dll ''\r\n      Method System.Numerics.Vector4:Max was compiled but should not have been\r\n      Method System.Numerics.Vector3:Max was compiled but should not have been\r\n      Method System.Numerics.Vector2:Max was compiled but should not have been\r\n      in ReleaseLock\r\n      Expected: 100\r\n      Actual: 255\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10478506022","Type":"PullRequestEvent","CreatedAt":"2019-09-24T00:19:14","Actor":"trylek","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26850","RelatedDescription":"Opened pull request \"Skip the MethodRef optimization for ArrayMethod's\" (#26850) at dotnet/coreclr","RelatedBody":"As Jan Vorlicek discovered during his investigation of the remaining\r\nCPAOT bugs, CoreCLR runtime doesn't support the MethodRef encoding\r\nflavor for the special array methods. My understanding is that this\r\nis due to the fact that array types are somewhat weird as they are\r\nkind of \"generic types in disguise\".\r\n\r\nThanks\r\n\r\nTomas"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10477587706","Type":"IssuesEvent","CreatedAt":"2019-09-23T21:15:46","Actor":"giordi91","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/12684","RelatedDescription":"Closed issue \"dotnet publish does not generate runtimeconfig.json\" (#12684) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nGood evening, I am trying to integrate .net core 3.0 in my engine as a scripting language. As such I want to be able to kick c# code from my c++ code. I am following the sample code for hosting. \r\nThe code, requires a runtimeconfig.json for my c# dll that I want to load and execute at runtime. Unluckily I am unable to generate such file when using dotnet publish. \r\n\r\nI have tried to both create a visual studio project which a 3.0 class library and do\r\n```\r\ndotnet new classlib\r\n```\r\nAnd upgrade the project to netcoreapp3.0. Only the deps.json file is generated, not the runtimeconfig.json one.\r\n\r\n\r\nto repdoruce:\r\n* run : dotnet new classlib\r\n* modified project file for netcoreapp3.0\r\n* run dotnet publish\r\n* check build directory\r\n\r\n## Expected  behavior\r\nI would expect the see a *.runtimeconfig.json file generated along the *.dll *.pbd *.deps.json \r\nI tried to do both self contained and not, force x64 etc. No luck. \r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\nAm I doing anything wrong?\r\n\r\nBest regards\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10479591821","Type":"IssuesEvent","CreatedAt":"2019-09-24T04:51:49","Actor":"shyamutty","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Closed issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566) at dotnet/standard","RelatedBody":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n"},{"Id":"10479585734","Type":"IssuesEvent","CreatedAt":"2019-09-24T04:50:15","Actor":"shyamutty","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Opened issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566) at dotnet/standard","RelatedBody":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n"},{"Id":"10479114837","Type":"IssuesEvent","CreatedAt":"2019-09-24T02:51:23","Actor":"goldmannyc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1565","RelatedDescription":"Opened issue \"Where to download the netstandard.dll 2.1?\" (#1565) at dotnet/standard","RelatedBody":""},{"Id":"10477225494","Type":"PullRequestEvent","CreatedAt":"2019-09-23T20:25:01","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Merged pull request \"Ns21 summary\" (#1564) at dotnet/standard","RelatedBody":""},{"Id":"10477224561","Type":"PullRequestEvent","CreatedAt":"2019-09-23T20:24:53","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Opened pull request \"Ns21 summary\" (#1564) at dotnet/standard","RelatedBody":""},{"Id":"10477156022","Type":"PullRequestEvent","CreatedAt":"2019-09-23T20:15:45","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1563","RelatedDescription":"Merged pull request \"Update diffs to final product\" (#1563) at dotnet/standard","RelatedBody":""},{"Id":"10477133996","Type":"PullRequestEvent","CreatedAt":"2019-09-23T20:12:25","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1563","RelatedDescription":"Opened pull request \"Update diffs to final product\" (#1563) at dotnet/standard","RelatedBody":""},{"Id":"10472692181","Type":"IssuesEvent","CreatedAt":"2019-09-23T10:49:00","Actor":"yb199478","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1562","RelatedDescription":"Opened issue \"Is it possible to add a method that kills the process tree?\" (#1562) at dotnet/standard","RelatedBody":".Net standard does not provide any method to kill a process tree."},{"Id":"10468248630","Type":"PullRequestEvent","CreatedAt":"2019-09-22T12:23:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1561","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1561) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190921.2\r\n- **Date Produced**: 9/21/2019 6:26 PM\r\n- **Commit**: 4c074ae47660448eae66a362076124177709640a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19471.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10468226836","Type":"PullRequestEvent","CreatedAt":"2019-09-22T12:13:44","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1561","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1561) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190921.2\r\n- **Date Produced**: 9/21/2019 6:26 PM\r\n- **Commit**: 4c074ae47660448eae66a362076124177709640a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19471.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10465624315","Type":"PullRequestEvent","CreatedAt":"2019-09-21T12:33:23","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1560","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1560) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 4:58 PM\r\n- **Commit**: 0286bce5fd360207ca707fe7024248be428cf0e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10479716999","Type":"PullRequestEvent","CreatedAt":"2019-09-24T05:22:45","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41274","RelatedDescription":"Merged pull request \"Remove some unnecessary string concatenation from CertificatePal.AppendPrivateKeyInfo\" (#41274) at dotnet/corefx","RelatedBody":"A few minor tweaks.\r\ncc: @bartonjs"},{"Id":"10479318685","Type":"PullRequestEvent","CreatedAt":"2019-09-24T03:41:14","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41274","RelatedDescription":"Opened pull request \"Remove some unnecessary string concatenation from CertificatePal.AppendPrivateKeyInfo\" (#41274) at dotnet/corefx","RelatedBody":"A few minor tweaks.\r\ncc: @bartonjs"},{"Id":"10479034653","Type":"PullRequestEvent","CreatedAt":"2019-09-24T02:32:02","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41273","RelatedDescription":"Opened pull request \"[release/3.0] Fix validity encoding for cert dates after 2049\" (#41273) at dotnet/corefx","RelatedBody":"During the change from the reflection serializer to asn.xslt generation we lost\r\nthe metadata that said that X.509 Time GeneralizedTime values need to ignore\r\nfractional seconds.\r\n\r\nThat means we're generating fractional seconds when the input DateTimeOffset\r\nhas them, which means we violate RFC in our generated certificates.\r\n\r\nPort of #41269 to release/3.0.\r\nFixes #41248."},{"Id":"10478995219","Type":"PullRequestEvent","CreatedAt":"2019-09-24T02:22:37","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41269","RelatedDescription":"Merged pull request \"Fix validity encoding for cert dates after 2049\" (#41269) at dotnet/corefx","RelatedBody":"During the change from the reflection serializer to asn.xslt generation we lost\r\nthe metadata that said that X.509 Time GeneralizedTime values need to ignore\r\nfractional seconds.\r\n\r\nThat means we're generating fractional seconds when the input DateTimeOffset\r\nhas them, which means we violate RFC in our generated certificates.\r\n\r\nIntroduced by #31960.\r\nAddresses #41248 in master."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10479277289","Type":"PullRequestEvent","CreatedAt":"2019-09-24T03:31:00","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38324","RelatedDescription":"Merged pull request \"Remove IVTs to liveshare\" (#38324) at dotnet/roslyn","RelatedBody":"Tested locally with liveshare running.  Runs fine.\r\nLiveshare build should not be affected as the older DLLs build with specific roslyn versions.\r\n\r\nCloses #35074 "},{"Id":"10479277262","Type":"IssuesEvent","CreatedAt":"2019-09-24T03:31:00","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/35074","RelatedDescription":"Closed issue \"Migrate Live Share IVTs to the external access pattern\" (#35074) at dotnet/roslyn","RelatedBody":"We are planning to remove IVT access to dotnet/roslyn from the following assemblies for 16.2 Preview 1:\r\n\r\n* Microsoft.VisualStudio.LanguageServices.Remote\r\n* Microsoft.VisualStudio.LanguageServices.Remote.15.7\r\n* Microsoft.VisualStudio.LanguageServices.Remote.15.8\r\n* Microsoft.VisualStudio.LanguageServices.Remote.16.0\r\n* Microsoft.VisualStudio.LanguageServices.Remote.16.1\r\n* Microsoft.VisualStudio.LanguageServices.Remote.CSharp\r\n* Microsoft.VisualStudio.LanguageServices.Remote..CSharp.15.7\r\n* Microsoft.VisualStudio.LanguageServices.Remote.CSharp.15.8\r\n* Microsoft.VisualStudio.LanguageServices.Remote.CSharp.16.0\r\n* Microsoft.VisualStudio.LanguageServices.Remote.CSharp.16.1\r\n\r\nThese assemblies should be updated to operate correctly without IVT access to roslyn, or use an External Access assembly for all access to Roslyn internals. I will be assisting in the creation of the External Access layer if necessary for these components."},{"Id":"10478905200","Type":"PullRequestEvent","CreatedAt":"2019-09-24T02:00:52","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38811","RelatedDescription":"Opened pull request \"support local functions inside static in signature help\" (#38811) at dotnet/roslyn","RelatedBody":"Fixes signature help part of https://github.com/dotnet/roslyn/issues/38074\r\n\r\nThank you for discussions, @svick , @CyrusNajmabadi , @miloush and @333fred !\r\n\r\nTests were copied from https://github.com/dotnet/roslyn/commit/62918fc39895da53eb4ce76b4a83a949746220e8\r\nIt is weird but I could not cherry-pick it."},{"Id":"10478779678","Type":"PullRequestEvent","CreatedAt":"2019-09-24T01:30:08","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38805","RelatedDescription":"Merged pull request \"Merge release/dev16.3 to release/dev16.4-preview1\" (#38805) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.3 into release/dev16.4-preview1.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-to-release/dev16.4-preview1\ngit reset --hard upstream/release/dev16.4-preview1\ngit merge upstream/release/dev16.3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-to-release/dev16.4-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10478721958","Type":"PullRequestEvent","CreatedAt":"2019-09-24T01:19:20","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38810","RelatedDescription":"Opened pull request \"Support events\" (#38810) at dotnet/roslyn","RelatedBody":""},{"Id":"10478721614","Type":"PullRequestEvent","CreatedAt":"2019-09-24T01:19:19","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38809","RelatedDescription":"Opened pull request \"Use new Span/Memory APIs on System.Collections.Immutable\" (#38809) at dotnet/roslyn","RelatedBody":""},{"Id":"10478549311","Type":"PullRequestEvent","CreatedAt":"2019-09-24T00:30:17","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38806","RelatedDescription":"Merged pull request \"Merge release/dev16.3 to release/dev16.3-vs-deps\" (#38806) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-to-release/dev16.3-vs-deps\ngit reset --hard upstream/release/dev16.3-vs-deps\ngit merge upstream/release/dev16.3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10478548615","Type":"PullRequestEvent","CreatedAt":"2019-09-24T00:30:07","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38807","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#38807) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10478497423","Type":"IssuesEvent","CreatedAt":"2019-09-24T00:16:59","Actor":"Unreal-System","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795) at dotnet/corert","RelatedBody":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds."},{"Id":"10469447456","Type":"IssuesEvent","CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Opened issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796) at dotnet/corert","RelatedBody":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]"},{"Id":"10456718650","Type":"IssuesEvent","CreatedAt":"2019-09-20T02:21:36","Actor":"Unreal-System","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Opened issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795) at dotnet/corert","RelatedBody":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds."},{"Id":"10433855669","Type":"PullRequestEvent","CreatedAt":"2019-09-17T14:13:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#7794) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10432892147","Type":"PullRequestEvent","CreatedAt":"2019-09-17T12:22:44","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#7794) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10430907028","Type":"IssuesEvent","CreatedAt":"2019-09-17T07:56:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5899","RelatedDescription":"Closed issue \"Corrupted Guid stored to database (using Entity framework) via LINQ to SQL with .NET native toolchain\" (#5899) at dotnet/corert","RelatedBody":"Recently we've found an issue when Guid stored to database (we're using Entity Framework, and LINQ to SQL) become corrupted in the our UWP application built in Release mode (i.e. with the .NET Native toolchain). It looks like some pointer corruption 'cause value stored in database has a part of original Guid, for example, original guid visible via debugging in release mode:\r\nD4E4301C**A88EEE4A8591699604370085**\r\nStored value: **A88EEE4A8591699604370085**00000000\r\n\r\nOne more time, without .NET native toolchain everything is working as expected, it's happened in Release mode only!\r\n\r\nWe've found a temporarily workaround, changing Guid to string, but will be good if you can fix this bug ASAP!"},{"Id":"10430904163","Type":"IssuesEvent","CreatedAt":"2019-09-17T07:56:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6685","RelatedDescription":"Closed issue \"Ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are properly handled with regards to struct packing/layout\" (#6685) at dotnet/corert","RelatedBody":"The `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types are special and are directly mapped as the primitive ABI types (typically referred to as `__m64`, `__m128`, and `__m256`). ProjectN should ensure that these types are appropriately handled before they ship so that types are laid out appropriately in memory and so that it does not become a breaking change to fix them in the future.\r\n\r\nCoreCLR is already correctly handling these types in the VM layer: https://github.com/dotnet/coreclr/blob/master/src/vm/methodtablebuilder.cpp#L9521"},{"Id":"10430894891","Type":"IssuesEvent","CreatedAt":"2019-09-17T07:55:11","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6948","RelatedDescription":"Closed issue \"[.NET Native] Errors ILT0005 and NUTC3033 when building a UWP app with ImageSharp (.NET Standard)\" (#6948) at dotnet/corert","RelatedBody":"Hello,\r\nI'm working on a UWP project (currently targeting SDK 17134), and since I referenced the [ImageSharp library](https://github.com/SixLabors/ImageSharp) (which targets .NET Standard) I can no longer build my UWP app in Release mode.\r\n\r\n[This is the issue](https://github.com/SixLabors/ImageSharp/issues/828) on the ImageSharp repo, but I thought I'd post it here as well, since it's probably caused by the .NET Native compiler more than the library itself.\r\n\r\nHere are the errors I'm getting:\r\n\r\n> ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x64.microsoft.net.native.compiler\\2.2.1\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\Sergi\\source\\repos\\ImageSharpRepro\\ImageSharpRepro\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\ImageSharpRepro.rsp\"' returned exit code 1\r\n\r\n> Error: NUTC3033:Internal Compiler Error: Invalid MethodImpl body=6000353 decl=600032d when loading type 'SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>' from assembly 'SixLabors.ImageSharp' while loading MethodImpl list for 'instance SixLabors.ImageSharp.Processing.Processors.Quantization.IFrameQuantizer`1<TPixel1> SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>.SixLabors.ImageSharp.Processing.Processors.Quantization.IQuantizer.CreateFrameQuantizer<TPixel1>(SixLabors.ImageSharp.Configuration)'. while loading type 'SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>'. while computing compilation roots.\r\n\r\n### Steps to Reproduce\r\n\r\n- Create a new UWP project (I'm targeting SDK 17134 and using 16299 as minimum)\r\n- Reference the ImageSharp NuGet package (I'm using version `1.0.0-beta0006`)\r\n- Try to build the app in Release mode (either x86 or x64), this fails with the errors above\r\n\r\nI've already sent a repro to dotnetnative@microsoft.com - but the issue can really just be easily reproduced in any UWP app just by referencing ImageSharp and trying to build in Release.\r\n\r\n**NOTE**: I've tried to build the app both using .NETCore.UWP 6.1.9, 6.2.2 and 6.2.3, all of them fail with similar errors. If you have an internal build of the upcoming 6.2.4 package maybe you could try using that one to see if this particular glitch has already been addressed there?\r\n\r\nPlease let me know if you need any more info from me, I'm happy to help!\r\nThank you in advance.\r\nSergio"},{"Id":"10428602652","Type":"PullRequestEvent","CreatedAt":"2019-09-16T23:13:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7793) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10478622704","Type":"PullRequestEvent","CreatedAt":"2019-09-24T00:49:46","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3666","RelatedDescription":"Opened pull request \"WIP Helix test\" (#3666) at dotnet/sdk","RelatedBody":"will that work?"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"497414638","IsPullRequest":false,"CreatedAt":"2019-09-24T02:09:11","Actor":"VincentBu","Number":"26851","RawContent":null,"Title":"Test failed: JIT/SIMD/VectorMax_ro/VectorMax_ro.sh","State":"open","Body":"**Job:**\r\n[coreclr-r2r-extra #20190922.1 Run Test Pri1 R2R Linux x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=362899)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/601d11ee-7c38-43d9-ade5-193ab5df5959/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\n\r\n**Mode:**\r\nRunCrossGen=1\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=2\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on my Linux x64 machine\r\n\r\n**Log:**\r\n```\r\nJIT/SIMD/VectorMax_ro/VectorMax_ro.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/Reports/JIT.SIMD/VectorMax_ro/VectorMax_ro.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      in takeLock\r\n      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload/crossgen /Platform_Assemblies_Paths /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload:/home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/VectorMax_ro/IL:/home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Work/507a36e0-98c4-4305-8204-68edd0a7268c/Exec/JIT/SIMD/VectorMax_ro /in VectorMax_ro.org /out VectorMax_ro.dll\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Native image VectorMax_ro.dll generated successfully.\r\n      in ReleaseLock\r\n      in takeLock\r\n      /home/helixbot/work/601d11ee-7c38-43d9-ade5-193ab5df5959/Payload/corerun VectorMax_ro.dll ''\r\n      Method System.Numerics.Vector4:Max was compiled but should not have been\r\n      Method System.Numerics.Vector3:Max was compiled but should not have been\r\n      Method System.Numerics.Vector2:Max was compiled but should not have been\r\n      in ReleaseLock\r\n      Expected: 100\r\n      Actual: 255\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26851","RelatedDescription":"Open issue \"Test failed: JIT/SIMD/VectorMax_ro/VectorMax_ro.sh\" (#26851)"},{"Id":"497389015","IsPullRequest":true,"CreatedAt":"2019-09-24T00:19:13","Actor":"trylek","Number":"26850","RawContent":null,"Title":"Skip the MethodRef optimization for ArrayMethod's","State":"open","Body":"As Jan Vorlicek discovered during his investigation of the remaining\r\nCPAOT bugs, CoreCLR runtime doesn't support the MethodRef encoding\r\nflavor for the special array methods. My understanding is that this\r\nis due to the fact that array types are somewhat weird as they are\r\nkind of \"generic types in disguise\".\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/26850","RelatedDescription":"Open PR \"Skip the MethodRef optimization for ArrayMethod's\" (#26850)"},{"Id":"497382855","IsPullRequest":false,"CreatedAt":"2019-09-23T23:54:09","Actor":"briansull","Number":"26849","RawContent":null,"Title":"Improve the the hoisting of  loop invariant expressions that contain Constant ValueNumbers","State":"open","Body":"If the hoisted expression contains any Constant Value numbers that are not true constant nodes we should replace them with true constants.\r\n\r\nWe can remove the current  fix #26551 when we implement this.","Url":"https://github.com/dotnet/coreclr/issues/26849","RelatedDescription":"Open issue \"Improve the the hoisting of  loop invariant expressions that contain Constant ValueNumbers\" (#26849)"},{"Id":"497256139","IsPullRequest":true,"CreatedAt":"2019-09-23T23:45:54","Actor":"briansull","Number":"26839","RawContent":null,"Title":"[skip -ci] Feedback on PerfScore design doc","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26839","RelatedDescription":"Closed or merged PR \"[skip -ci] Feedback on PerfScore design doc\" (#26839)"},{"Id":"497217105","IsPullRequest":true,"CreatedAt":"2019-09-23T23:23:58","Actor":"franksinankaya","Number":"26836","RawContent":null,"Title":"Replace gtSsaNum with GetSsaNum","State":"closed","Body":"cc @jkotas @janvorli @am11 @jit-contrib","Url":"https://github.com/dotnet/coreclr/pull/26836","RelatedDescription":"Closed or merged PR \"Replace gtSsaNum with GetSsaNum\" (#26836)"},{"Id":"497220659","IsPullRequest":true,"CreatedAt":"2019-09-23T23:22:56","Actor":"franksinankaya","Number":"26837","RawContent":null,"Title":"Replace hasTailCalls with GetTailCalls()","State":"closed","Body":"Replace setTailCalls with SetTailCalls()\r\n\r\n@am11 @janvorli @jkotas @jit-contrib","Url":"https://github.com/dotnet/coreclr/pull/26837","RelatedDescription":"Closed or merged PR \"Replace hasTailCalls with GetTailCalls()\" (#26837)"},{"Id":"497371553","IsPullRequest":true,"CreatedAt":"2019-09-23T23:10:19","Actor":"GrabYourPitchforks","Number":"26848","RawContent":null,"Title":"Perf improvements to char.IsWhiteSpace / char.IsUpper / char.IsLower","State":"open","Body":"This is especially noticeable in benchmarks for APIs like `ReadOnlySpan.Trim()`.\r\n\r\n|          Method | Toolchain |                input |      Mean |     Error |    StdDev |    Median | Ratio | RatioSD | Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------------- |---------- |--------------------- |----------:|----------:|----------:|----------:|------:|--------:|------:|------:|------:|----------:|\r\n|            **Trim** |    **master** |                     **{empty}** |  **3.509 ns** | **0.0475 ns** | **0.0444 ns** |  **3.501 ns** |  **1.00** |    **0.00** |     **-** |     **-** |     **-** |         **-** |\r\n|            Trim |     proto |                    {empty}  |  3.423 ns | 0.0801 ns | 0.0710 ns |  3.399 ns |  0.98 |    0.03 |     - |     - |     - |         - |\r\n|                 |           |                      |           |           |           |           |       |         |       |       |       |           |\r\n|            **Trim** |    **master** |            **{spaces on both sides}** |  **9.161 ns** | **0.2052 ns** | **0.2195 ns** |  **9.091 ns** |  **1.00** |    **0.00** |     **-** |     **-** |     **-** |         **-** |\r\n|            Trim |     proto |             {spaces on both sides}  |  7.299 ns | 0.1714 ns | 0.1519 ns |  7.287 ns |  0.79 |    0.02 |     - |     - |     - |         - |\r\n|                 |           |                      |           |           |           |           |       |         |       |       |       |           |\r\n| **CountLowerChars** |    **master** | **Hello(...)able! [23]** | **55.934 ns** | **0.8882 ns** | **0.8308 ns** | **55.705 ns** |  **1.00** |    **0.00** |     **-** |     **-** |     **-** |         **-** |\r\n| CountLowerChars |     proto | Hello(...)able! [23] | 47.130 ns | 0.4410 ns | 0.4125 ns | 47.166 ns |  0.84 |    0.01 |     - |     - |     - |         - |\r\n|                 |           |                      |           |           |           |           |       |         |       |       |       |           |\r\n| CountUpperChars |    master | Hello(...)able! [23] | 61.556 ns | 0.6651 ns | 0.5554 ns | 61.641 ns |  1.00 |    0.00 |     - |     - |     - |         - |\r\n| CountUpperChars |     proto | Hello(...)able! [23] | 53.805 ns | 0.3064 ns | 0.2717 ns | 53.747 ns |  0.87 |    0.01 |     - |     - |     - |         - |\r\n|                 |           |                      |           |           |           |           |       |         |       |       |       |           |\r\n|            **Trim** |    **master** |              **abcdefg** |  **5.753 ns** | **0.0402 ns** | **0.0376 ns** |  **5.753 ns** |  **1.00** |    **0.00** |     **-** |     **-** |     **-** |         **-** |\r\n|            Trim |     proto |              abcdefg |  5.249 ns | 0.1380 ns | 0.2970 ns |  5.137 ns |  0.97 |    0.05 |     - |     - |     - |         - |\r\n\r\nBenchmark code:\r\n\r\n```cs\r\n[Benchmark]\r\n[ArgumentsSource(nameof(TrimArguments))]\r\npublic ReadOnlySpan<char> Trim(string input) => input.AsSpan().Trim();\r\n\r\n[Benchmark]\r\n[Arguments(\"Hello there, Constable!\")]\r\npublic int CountLowerChars(string input)\r\n{\r\n    int count = 0;\r\n\r\n    foreach (char ch in input)\r\n    {\r\n        if (char.IsLower(ch)) { count++; }\r\n    }\r\n\r\n    return count;\r\n}\r\n\r\n[Benchmark]\r\n[Arguments(\"Hello there, Constable!\")]\r\npublic int CountUpperChars(string input)\r\n{\r\n    int count = 0;\r\n\r\n    foreach (char ch in input)\r\n    {\r\n        if (char.IsUpper(ch)) { count++; }\r\n    }\r\n\r\n    return count;\r\n}\r\n\r\npublic static IEnumerable<object> TrimArguments()\r\n{\r\n    yield return \"\";\r\n    yield return \" abcdefg \";\r\n    yield return \"abcdefg\";\r\n}\r\n```\r\n\r\nThe performance should improve even further when https://github.com/dotnet/coreclr/issues/26845 is fixed.","Url":"https://github.com/dotnet/coreclr/pull/26848","RelatedDescription":"Open PR \"Perf improvements to char.IsWhiteSpace / char.IsUpper / char.IsLower\" (#26848)"},{"Id":"497369628","IsPullRequest":false,"CreatedAt":"2019-09-23T23:03:35","Actor":"GrabYourPitchforks","Number":"26847","RawContent":null,"Title":"Inefficient register allocation in simple method which dereferences a span","State":"open","Body":"```cs\r\n    public static int DerefAndReturn(int index, ReadOnlySpan<int> span) {\r\n        int retVal = default;\r\n        \r\n        if ((uint)index < (uint)span.Length)\r\n        {\r\n            retVal = span[index];\r\n        }\r\n        \r\n        return retVal;\r\n    }\r\n```\r\n\r\n```asm\r\nC.DerefAndReturn(Int32, System.ReadOnlySpan`1<Int32>)\r\n    L0000: mov rax, [rdx]\r\n    L0003: mov edx, [rdx+0x8]\r\n    L0006: xor r8d, r8d\r\n    L0009: cmp ecx, edx\r\n    L000b: jae L0014\r\n    L000d: movsxd r8, ecx\r\n    L0010: mov r8d, [rax+r8*4]\r\n    L0014: mov eax, r8d\r\n    L0017: ret\r\n```\r\n\r\nIn this code sample which utilizes a \"single return from function\" pattern, the local _retVal_ is stored in the `r8d` register instead of the `eax` register. This necessitates an additional `mov` instruction near the end of the method (L0014) to get the result into the correct return register. By using `r8` to hold the span reference and `eax` to hold the return value, we can eliminate this instruction and reduce the size of the code gen.\r\n\r\nThe `movsxd` instruction is also unnecessary and can be replaced with a simpler `mov` instruction: that's being tracked by https://github.com/dotnet/coreclr/issues/23127.","Url":"https://github.com/dotnet/coreclr/issues/26847","RelatedDescription":"Open issue \"Inefficient register allocation in simple method which dereferences a span\" (#26847)"},{"Id":"497367698","IsPullRequest":false,"CreatedAt":"2019-09-23T22:56:45","Actor":"Maoni0","Number":"26846","RawContent":null,"Title":"change the default of cpu group to be enabled on Windows","State":"open","Body":"historically the default has been disabled. in 3.0 by default we will use > 64 procs on linux since we got rid of the (simulated) cpu group concept there. we should change the default on windows to match this. \r\nthis includes changing the default for both GCCpuGroup and Thread_UseAllCpuGroups. \r\n\r\nCC @janvorli ","Url":"https://github.com/dotnet/coreclr/issues/26846","RelatedDescription":"Open issue \"change the default of cpu group to be enabled on Windows\" (#26846)"},{"Id":"497366737","IsPullRequest":false,"CreatedAt":"2019-09-23T22:53:18","Actor":"GrabYourPitchforks","Number":"26845","RawContent":null,"Title":"Span indexer doesn't elide bounds check when span initialized from an RVA static","State":"open","Body":"When a `ReadOnlySpan<byte>` is initialized from an RVA static, typical bounds check elision on the span's indexer doesn't take place as expected.\r\n\r\n```cs\r\n    private static ReadOnlySpan<byte> MyRvaStatic => new byte[] { 1, 2, 3, 4, 5 };\r\n    \r\n    public static int FetchFromRvaStatic(int index) {\r\n        int retVal = default;\r\n        \r\n        ReadOnlySpan<Byte> span = MyRvaStatic;\r\n        if ((uint)index < (uint)span.Length)\r\n        {\r\n            retVal = span[index];\r\n        }\r\n        \r\n        return retVal;\r\n    }\r\n    \r\n    public static int FetchFromArgument(int index, ReadOnlySpan<byte> span) {\r\n        int retVal = default;\r\n        \r\n        if ((uint)index < (uint)span.Length)\r\n        {\r\n            retVal = span[index];\r\n        }\r\n        \r\n        return retVal;\r\n    }\r\n```\r\n\r\n```asm\r\nC.get_MyRvaStatic()\r\n    L0000: mov rax, 0x2a875b3099c\r\n    L000a: mov [rcx], rax\r\n    L000d: mov dword [rcx+0x8], 0x5\r\n    L0014: mov rax, rcx\r\n    L0017: ret\r\n\r\nC.FetchFromRvaStatic(Int32)\r\n    L0000: sub rsp, 0x28\r\n    L0004: xor eax, eax\r\n    L0006: cmp ecx, 0x5\r\n    L0009: jae L0021\r\n    L000b: cmp ecx, 0x5\r\n    L000e: jae L0026\r\n    L0010: movsxd rax, ecx\r\n    L0013: mov rdx, 0x2a875b3099c\r\n    L001d: movzx eax, byte [rax+rdx]\r\n    L0021: add rsp, 0x28\r\n    L0025: ret\r\n    L0026: call 0x7ff9de711e00\r\n    L002b: int3\r\n\r\nC.FetchFromArgument(Int32, System.ReadOnlySpan`1<Byte>)\r\n    L0000: mov rax, [rdx]\r\n    L0003: mov edx, [rdx+0x8]\r\n    L0006: xor r8d, r8d\r\n    L0009: cmp ecx, edx\r\n    L000b: jae L0015\r\n    L000d: movsxd r8, ecx\r\n    L0010: movzx r8d, byte [rax+r8]\r\n    L0015: mov eax, r8d\r\n    L0018: ret\r\n```\r\n\r\nNote the `FetchFromRvaStatic` method has two bounds checks: the manual bounds check I wrote and the auto-generated bounds check from the indexer. The `FetchFromArgument` method only has the manual bounds check; the auto-generated bounds check is elided.","Url":"https://github.com/dotnet/coreclr/issues/26845","RelatedDescription":"Open issue \"Span indexer doesn't elide bounds check when span initialized from an RVA static\" (#26845)"},{"Id":"497199599","IsPullRequest":true,"CreatedAt":"2019-09-23T22:03:08","Actor":"stephentoub","Number":"26835","RawContent":null,"Title":"Change several internal/private instance methods to be static","State":"closed","Body":"Also change one ToLower(CultureInfo,.InvariantCulture) to be ToLowerInvariant()","Url":"https://github.com/dotnet/coreclr/pull/26835","RelatedDescription":"Closed or merged PR \"Change several internal/private instance methods to be static\" (#26835)"},{"Id":"497328794","IsPullRequest":false,"CreatedAt":"2019-09-23T21:20:32","Actor":"ajaybhargavb","Number":"26844","RawContent":null,"Title":"Directory.GetCurrentDirectory inconsistency between Windows and Mac","State":"closed","Body":"Original issue: https://github.com/aspnet/AspNetCore-ManualTests/issues/22\r\n\r\n**Repro steps:**\r\n- mkdir consoleapp\r\n- cd consoleapp\r\n- `dotnet new console`\r\n- Edit `Program.cs` to output `Directory.GetCurrentDirectory()`\r\n- `dotnet publish -c release`\r\n- Open the folder in Finder `/bin/release/netcoreapp3.0/publish`\r\n- Double click `webapp`\r\n\r\nExpected output:\r\n\r\n`/Users/username/Github/temp/webapp/bin/release/netcoreapp3.0/publish`\r\n\r\nActual output:\r\n\r\n`/Users/username`\r\n\r\nDotnet version:\r\n3.0.100-preview9-014004","Url":"https://github.com/dotnet/coreclr/issues/26844","RelatedDescription":"Closed issue \"Directory.GetCurrentDirectory inconsistency between Windows and Mac\" (#26844)"},{"Id":"497312832","IsPullRequest":true,"CreatedAt":"2019-09-23T20:31:37","Actor":"chipitsine","Number":"26843","RawContent":null,"Title":"src/inc/apithreadstress.cpp: resolve possible null pointer dereference","State":"open","Body":"found by cppcheck\r\n\r\n[src/inc/apithreadstress.cpp:72] -> [src/inc/apithreadstress.cpp:70]: (warning) Either the condition 'p!=NULL' is redundant or there is pointer arithmetic with NULL pointer.","Url":"https://github.com/dotnet/coreclr/pull/26843","RelatedDescription":"Open PR \"src/inc/apithreadstress.cpp: resolve possible null pointer dereference\" (#26843)"},{"Id":"497305371","IsPullRequest":false,"CreatedAt":"2019-09-23T20:15:28","Actor":"sdmaclea","Number":"26842","RawContent":null,"Title":"[Linux] Add initial perf jitdump support","State":"open","Body":"Linux uses the perf tools to profile application. The linux 4.10 kernel added support for a `perf` `jitdump` format.\r\n\r\nIt has allows better JIT support for perf. Specifically allowing adding:\r\n\r\n- native code so `perf` can show disassembly of JIT functions.\r\n- adding debug info to support source line annotation.\r\n- adding unwind info to better support stack unwind.\r\n\r\nI believe this will also allow us to properly support `ready to run` images.\r\n\r\nThe app must \r\n- create the jitdump file. [Specification](https://elixir.bootlin.com/linux/v4.10/source/tools/perf/Documentation/jitdump-specification.txt)\r\n- Inform `perf inject` of its presence by calling `mmap` with the filename.\r\n- Add `JIT_CODE_LOAD`\r\n- Optionally add `JIT_DEBUG_INFO` records\r\n- Optionally add `JIT_CODE_UNWINDING_INFO` records\r\n\r\nIt is used like this\r\n```\r\nperf record <app>\r\nperf inject --jit\r\nperf report\r\n```\r\n\r\n/cc @dotnet/dotnet-diag ","Url":"https://github.com/dotnet/coreclr/issues/26842","RelatedDescription":"Open issue \"[Linux] Add initial perf jitdump support\" (#26842)"},{"Id":"497288813","IsPullRequest":false,"CreatedAt":"2019-09-23T19:39:37","Actor":"BruceForstall","Number":"26841","RawContent":null,"Title":"Need documentation describing how to update the JIT-EE interface","State":"open","Body":"With the addition of crossgen2 to the build, updating the JIT-EE interface is considerably more complex. Before, it required updating the JIT-EE interface GUID, updating the JIT and VM code, and updating SuperPMI. Now, it requires updating crossgen2 as well.\r\n\r\nThis issue tracks creating a document to describe this, as mentioned here: https://github.com/dotnet/coreclr/pull/26418#issuecomment-533187793\r\n","Url":"https://github.com/dotnet/coreclr/issues/26841","RelatedDescription":"Open issue \"Need documentation describing how to update the JIT-EE interface\" (#26841)"},{"Id":"497274589","IsPullRequest":true,"CreatedAt":"2019-09-23T19:39:19","Actor":"echesakovMSFT","Number":"26840","RawContent":null,"Title":"Update clr-abi.md to indicate that R8 is used on Arm64 to pass the return buffer address","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26840","RelatedDescription":"Closed or merged PR \"Update clr-abi.md to indicate that R8 is used on Arm64 to pass the return buffer address\" (#26840)"},{"Id":"497166806","IsPullRequest":true,"CreatedAt":"2019-09-23T19:09:18","Actor":"MichalStrehovsky","Number":"26834","RawContent":null,"Title":"Mark crossgen2 smoke test GCStressIncompatible","State":"closed","Body":"This is known not to work with GCStress (see #26633).\r\n\r\nFixes #26826.","Url":"https://github.com/dotnet/coreclr/pull/26834","RelatedDescription":"Closed or merged PR \"Mark crossgen2 smoke test GCStressIncompatible\" (#26834)"},{"Id":"496862408","IsPullRequest":false,"CreatedAt":"2019-09-23T19:09:18","Actor":"VincentBu","Number":"26826","RawContent":null,"Title":"Test failed: readytorun\\crossgen2\\crossgen2smoke\\crossgen2smoke.cmd","State":"closed","Body":"**Job:**\r\n[coreclr-gcstress-extra #20190921.1 Run Test Pri1 Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=362555)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/1c6a614a-cfe9-43ee-aaee-e979ace30850/workitems/PayloadGroup0/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=1\r\n\r\n**Note:**\r\nI try to repro this failure but console output isn't same as that in helix.dot.net\r\n```\r\nBEGIN EXECUTION\r\nWarning: Method `[crossgen2smoke]Program+CharFilterDelegate.EndInvoke(IAsyncResult)` was not compiled because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Char CharFilterDelegate.EndInvoke(System.IAsyncResult)\r\nWarning: Method `[crossgen2smoke]Program+CharFilterDelegate.BeginInvoke(char,AsyncCallback,object)` was not compiled because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.IAsyncResult CharFilterDelegate.BeginInvoke(Char, System.AsyncCallback, System.Object)\r\nWarning: Method `[crossgen2smoke]Program+CharFilterDelegate.Invoke(char)` was not compiled because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Char CharFilterDelegate.Invoke(Char)\r\nWarning: Method `[crossgen2smoke]Program+CharFilterDelegate..ctor(object,native int)` was not compiled because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void CharFilterDelegate..ctor(System.Object, IntPtr)\r\nInfo: Method `[crossgen2smoke]Program.VectorTestOf<float64>(float64,float64,float64)` was not compiled because `[S.P.CoreLib]System.Numerics.Vector`1<float64>` requires runtime JIT\r\nInfo: Method `[crossgen2smoke]Program.VectorTestOf<float32>(float32,float32,float32)` was not compiled because `[S.P.CoreLib]System.Numerics.Vector`1<float32>` requires runtime JIT\r\nInfo: Method `[crossgen2smoke]Program.VectorTestOf<int32>(int32,int32,int32)` was not compiled because `[S.P.CoreLib]System.Numerics.Vector`1<int32>` requires runtime JIT\r\nEmitting R2R PE file: crossgen2smoke.dll\r\n \"E:\\source\\362555_Windows_NT.x64.Checked\\Tests\\Core_Root\\corerun.exe\" crossgen2smoke.dll\r\n\r\nAssert failure(PID 4972 [0x0000136c], Thread: 10184 [0x27c8]): (GetComponentSize() <= 2) || IsArray()\r\n\r\nCORECLR! GetCLRRuntimeHost + 0x41468D (0x00007ff9`20f7468d)\r\nCORECLR! GetCLRRuntimeHost + 0x4161C7 (0x00007ff9`20f761c7)\r\nCORECLR! GetCLRRuntimeHost + 0x333C9E (0x00007ff9`20e93c9e)\r\nCORECLR! GetCLRRuntimeHost + 0x333A4A (0x00007ff9`20e93a4a)\r\nCORECLR! GetCLRRuntimeHost + 0x75D87F (0x00007ff9`212bd87f)\r\nCORECLR! GetCLRRuntimeHost + 0x75DABD (0x00007ff9`212bdabd)\r\nCORECLR! GetCLRRuntimeHost + 0x75CCD2 (0x00007ff9`212bccd2)\r\nCORECLR! GetCLRRuntimeHost + 0x3A90D3 (0x00007ff9`20f090d3)\r\nCORECLR! GetCLRRuntimeHost + 0x678B79 (0x00007ff9`211d8b79)\r\nCORECLR! GetCLRRuntimeHost + 0xD558A (0x00007ff9`20c3558a)\r\n    File: f:\\workspace.1\\_work\\1\\s\\src\\vm\\methodtable.cpp Line: 7905\r\n    Image: E:\\source\\362555_Windows_NT.x64.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n\r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\n```\r\n\r\n**Log:**\r\n```\r\nreadytorun\\crossgen2\\crossgen2smoke\\crossgen2smoke.cmd [FAIL]\r\n      Fatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\1c6a614a-cfe9-43ee-aaee-e979ace30850\\Work\\75bad4f4-653a-410f-978f-cdcd49c4f970\\Exec\\readytorun\\crossgen2\\Reports\\readytorun.crossgen2\\crossgen2smoke\\crossgen2smoke.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      Warning: Method `[crossgen2smoke]Program+CharFilterDelegate.EndInvoke(IAsyncResult)` was not compiled because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Char CharFilterDelegate.EndInvoke(System.IAsyncResult)\r\n      Warning: Method `[crossgen2smoke]Program+CharFilterDelegate.BeginInvoke(char,AsyncCallback,object)` was not compiled because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.IAsyncResult CharFilterDelegate.BeginInvoke(Char, System.AsyncCallback, System.Object)\r\n      Warning: Method `[crossgen2smoke]Program+CharFilterDelegate.Invoke(char)` was not compiled because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Char CharFilterDelegate.Invoke(Char)\r\n      Warning: Method `[crossgen2smoke]Program+CharFilterDelegate..ctor(object,native int)` was not compiled because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void CharFilterDelegate..ctor(System.Object, IntPtr)\r\n      Info: Method `[crossgen2smoke]Program.VectorTestOf<float64>(float64,float64,float64)` was not compiled because `[S.P.CoreLib]System.Numerics.Vector`1<float64>` requires runtime JIT\r\n      Info: Method `[crossgen2smoke]Program.VectorTestOf<float32>(float32,float32,float32)` was not compiled because `[S.P.CoreLib]System.Numerics.Vector`1<float32>` requires runtime JIT\r\n      Info: Method `[crossgen2smoke]Program.VectorTestOf<int32>(int32,int32,int32)` was not compiled because `[S.P.CoreLib]System.Numerics.Vector`1<int32>` requires runtime JIT\r\n      Emitting R2R PE file: crossgen2smoke.dll\r\n       \"C:\\dotnetbuild\\work\\1c6a614a-cfe9-43ee-aaee-e979ace30850\\Payload\\corerun.exe\" crossgen2smoke.dll \r\n      Expected: 100\r\n      Actual: -1073741819\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26826","RelatedDescription":"Closed issue \"Test failed: readytorun\\crossgen2\\crossgen2smoke\\crossgen2smoke.cmd\" (#26826)"},{"Id":"497068518","IsPullRequest":false,"CreatedAt":"2019-09-23T15:35:43","Actor":"MulleDK19","Number":"26831","RawContent":null,"Title":"Every method is JIT'ted twice in x64?","State":"closed","Body":"Don't know if a bug, or some obscure feature, but it applies to both .NET Core 2.0 and .NET Framework all the way back to 2.0.\r\n\r\nIn x86, the first call to a method invokes a JIT stub through a function point. The stub compiles the method and replaces the function pointer with the address of the compiled code, then redirects to the compiled code. Any subsequent calls will jump directly to the already compiled code.\r\n\r\nI was debugging a x64 process, and was expecting the same behavior. But to my surprise, the JIT stub was called on the second call too. It eventually calls the initially compiled code, but it runs through hundreds of instructions before getting there. On the third call to a method, the JIT stub has been replaced by a direct jump to the compiled code.\r\n\r\nThis happens with every method. First and second call of every method invokes the JIT compiler stub, any subsequent calls jump to the compiled code directly.\r\n\r\nIs this a bug no one has noticed, or just some undocumented feature of the x64 JIT'ter? Haven't been able to find anything about it anyway. I tried patching the stub to jump to the compiled method after the first JIT, and it didn't seem to have any side effects for subsequent calls.","Url":"https://github.com/dotnet/coreclr/issues/26831","RelatedDescription":"Closed issue \"Every method is JIT'ted twice in x64?\" (#26831)"},{"Id":"497112557","IsPullRequest":false,"CreatedAt":"2019-09-23T13:53:00","Actor":"Melchy","Number":"26833","RawContent":null,"Title":"ValueType.Equals doesn't use bit comparsion","State":"open","Body":"ValueType.Equals() defined [here](https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/src/System/ValueType.cs) should compare bits of objects if the compared type doesn't contain any reference type. But it seems that it always uses reflection to check equality. (Corect behavior is described [here](https://docs.microsoft.com/dotnet/api/system.valuetype.equals).)\r\n\r\nFor example folowing code prints True:\r\n\r\n```csharp\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        TestStruct f, s;\r\n        f.variable = 0.0f;\r\n        s.variable = -0.0f;\r\n\t\r\n        Console.WriteLine(f.Equals(s)); //True -> binary check was not used\r\n    }\r\n}\r\n\r\npublic struct TestStruct\r\n{\r\n    public float variable;\r\n}\r\n ```\r\n\r\nThis is probably bug because same code on .Net 4.7.2 prints False. If this is intended feature than there should not be line 42 and 43 in file [ValueType.cs](https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/src/System/ValueType.cs)","Url":"https://github.com/dotnet/coreclr/issues/26833","RelatedDescription":"Open issue \"ValueType.Equals doesn't use bit comparsion\" (#26833)"},{"Id":"497074705","IsPullRequest":false,"CreatedAt":"2019-09-23T12:43:15","Actor":"rayslava","Number":"26832","RawContent":null,"Title":"Address Sanitizer support for native libraries","State":"open","Body":"We work on sanitization of whole Tizen OS and therefore try to cover as many code as we can with Address Sanitizer.\r\n\r\nCurrently we came to sanitization of native libraries which are used only by managed applications running on CoreCLR.\r\n\r\nCurrently we have setup of two parts:\r\n\r\n1. Additional build of patched Address Sanitizer run-time with \"switchable\" interceptors.\r\n\r\n2. Patched CoreCLR version with changed native calls generation behavior.\r\n\r\nAddress Sanitizer patch is required to add additional API to activate or deactivate ASan interception of library calls (e.g. tracing `malloc()`/`free()`) in order to get appropriate performance of CoreCLR engine and to avoid reports about CoreCLR internals' issues: our primary customer wants to get reports about their code only, CoreCLR testing is a separate task. Additional build is required since this API introduces a performance overhead to each library call, which we don't want to see for the rest of applications.\r\n\r\nCoreCLR version has changes in JIT part in generator of calls from managed code to native libraries, a wrapper is added which calls ASan API to switch tracing on when code from library is executed and turn it off during return back to managed code.\r\n\r\nNow we only detect issues inside native libraries, but our next target is annotate CoreCLR allocator, integrate it with ASan and catch bugs for cases when buffer allocated by managed code is passed to native library and corrupted there. Accordingly to our customers, who develop apps for Tizen, this case is rather hard to debug and consequences of such errors are rather bad.\r\n\r\nCurrently we use GCC to build Tizen OS, so our changes are introduced only to GCC ASan run-time inside `libasan.so`. Technically it's possible to add it to Clang run-time as well, but it'll require recompilation of target libraries since Clang ASan uses static linkage and we're not sure that someone really needs this support. If you are interested in this kind of testing as well, we could introduce this mode in a conditional build.\r\n\r\ncc @alpencolt","Url":"https://github.com/dotnet/coreclr/issues/26832","RelatedDescription":"Open issue \"Address Sanitizer support for native libraries\" (#26832)"},{"Id":"496904790","IsPullRequest":false,"CreatedAt":"2019-09-23T05:45:05","Actor":"evo01","Number":"26830","RawContent":null,"Title":"GC crashes application when using AssemblyBuilder","State":"open","Body":"Howdy,\r\n\r\nI am using .NET Core 3.0, current preview release, and the following code crashes the application immediately.  It appears assemblies cannot be collected as if you get rid of the GC.Collect, and wait for the amount of memory being used to reach 160 MB, the application attempts to GC and it crashes then too.\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            while (true)\r\n            {\r\n                AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"Test.dll\"), AssemblyBuilderAccess.RunAndCollect);\r\n\r\n                for (int i = 0; i < 3; i++)\r\n                {\r\n                    GC.Collect(i);   \r\n                }\r\n            }\r\n        }\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26830","RelatedDescription":"Open issue \"GC crashes application when using AssemblyBuilder\" (#26830)"},{"Id":"496872013","IsPullRequest":false,"CreatedAt":"2019-09-23T02:49:08","Actor":"VincentBu","Number":"26829","RawContent":null,"Title":"Assert failure: Compiler optimization assumption invalid: FAILED: pMgr != 0","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20190921.1 Run Test Pri1 Windows_NT x86 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=362662)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/e35e1939-a599-4b7e-8d5d-a57693e3262e/workitems/JIT.Regression/console\r\n\r\n**OS & Arch:**\r\nwindows x86\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_TailcallStress=1\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x86 machine.\r\n\r\n**Log:**\r\n```\r\nJIT\\Regression\\JitBlue\\GitHub_23861\\GitHub_23861\\GitHub_23861.cmd [FAIL]\r\n      \r\n      Assert failure(PID 1016 [0x000003f8], Thread: 1056 [0x0420]): Compiler optimization assumption invalid: FAILED: pMgr != 0\r\n      \r\n      CORECLR! CHECK::Trigger + 0x2EB (0x72dd819a)\r\n      CORECLR! VSD_ResolveWorker + 0x4FF (0x72fe50b2)\r\n      CORECLR! ResolveWorkerAsmStub + 0x1B (0x72fe4b5b)\r\n      <no module>! <no symbol> + 0x0 (0x07b30e04)\r\n      <no module>! <no symbol> + 0x0 (0x07b3073b)\r\n      <no module>! <no symbol> + 0x0 (0x07b39de0)\r\n      <no module>! <no symbol> + 0x0 (0x07c8fcc8)\r\n      <no module>! <no symbol> + 0x0 (0x07fa707e)\r\n      <no module>! <no symbol> + 0x0 (0x07fa5ab6)\r\n      <no module>! <no symbol> + 0x0 (0x07fa31e4)\r\n          File: f:\\workspace.2\\_work\\1\\s\\src\\vm\\virtualcallstub.cpp Line: 1673\r\n          Image: C:\\dotnetbuild\\work\\e35e1939-a599-4b7e-8d5d-a57693e3262e\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\e35e1939-a599-4b7e-8d5d-a57693e3262e\\Work\\e9e4fbd3-001a-40f2-8899-dd5a8d6a1f5d\\Exec\\JIT\\Regression\\Reports\\JIT.Regression\\JitBlue\\GitHub_23861\\GitHub_23861\\GitHub_23861.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\e35e1939-a599-4b7e-8d5d-a57693e3262e\\Payload\\corerun.exe\" GitHub_23861.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26829","RelatedDescription":"Open issue \"Assert failure: Compiler optimization assumption invalid: FAILED: pMgr != 0\" (#26829)"},{"Id":"496866394","IsPullRequest":false,"CreatedAt":"2019-09-23T02:12:37","Actor":"VincentBu","Number":"26828","RawContent":null,"Title":"Test failed: Interop\\ICustomMarshaler\\Primitives\\ICustomMarshaler\\ICustomMarshaler.cmd","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20190921.1 Run Test Pri1 Windows_NT x86 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=362555)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/8572fc02-46fb-4e52-9844-83d3f796f345/workitems/Interop/console\r\n\r\n**OS & Arch:**\r\nwindows x86\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=2\r\nCOMPlus_ReadyToRun=0\r\nCOMPlus_ZapDisable=1\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x86 machine.\r\n\r\n**Log:**\r\n```\r\nInterop\\ICustomMarshaler\\Primitives\\ICustomMarshaler\\ICustomMarshaler.cmd [FAIL]\r\n      \r\n      Assert failure(PID 5428 [0x00001534], Thread: 5528 [0x1598]): !CREATE_CHECK_STRING(pMT && pMT->Validate())\r\n      \r\n      CORECLR! Object::ValidateInner + 0x1D5 (0x6f8b6505)\r\n      CORECLR! Object::Validate + 0x141 (0x6f8b6281)\r\n      CORECLR! Object::ValidatePromote + 0xB (0x6f8b69a4)\r\n      CORECLR! WKS::GCHeap::Promote + 0x79 (0x6fb80b39)\r\n      CORECLR! GcEnumObject + 0x57 (0x6face2a7)\r\n      CORECLR! EECodeManager::EnumGcRefs + 0x104A (0x6f901f7a)\r\n      CORECLR! GcStackCrawlCallBack + 0x150 (0x6face4f0)\r\n      CORECLR! Thread::MakeStackwalkerCallback + 0x3A (0x6f72f3c1)\r\n      CORECLR! Thread::StackWalkFramesEx + 0x16E (0x6f7309ea)\r\n      CORECLR! Thread::StackWalkFrames + 0x159 (0x6f7307fc)\r\n          File: f:\\workspace.1\\_work\\1\\s\\src\\vm\\object.cpp Line: 597\r\n          Image: C:\\dotnetbuild\\work\\8572fc02-46fb-4e52-9844-83d3f796f345\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\8572fc02-46fb-4e52-9844-83d3f796f345\\Work\\5c26fc6c-63ed-4235-ad2c-36037b7e851f\\Exec\\Interop\\ICustomMarshaler\\Reports\\Interop.ICustomMarshaler\\Primitives\\ICustomMarshaler\\ICustomMarshaler.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\8572fc02-46fb-4e52-9844-83d3f796f345\\Payload\\corerun.exe\" ICustomMarshaler.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26828","RelatedDescription":"Open issue \"Test failed: Interop\\ICustomMarshaler\\Primitives\\ICustomMarshaler\\ICustomMarshaler.cmd\" (#26828)"},{"Id":"496864374","IsPullRequest":false,"CreatedAt":"2019-09-23T01:58:25","Actor":"VincentBu","Number":"26827","RawContent":null,"Title":"Test failed: baseservices/threading/threadpool/unregister/regression_749068/regression_749068.sh","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20190921.1 Run Test Pri1 Linux x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=362555)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/33f311ea-f13e-4a4b-b154-2e287ffb82ff/workitems/baseservices.threading/console\r\n\r\n**OS & Arch:**\r\nLinux x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_ReadyToRun=0\r\nCOMPlus_ZapDisable=1\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on our Linux x64 machine.\r\n\r\n**Log:**\r\n```\r\n baseservices/threading/threadpool/unregister/regression_749068/regression_749068.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/33f311ea-f13e-4a4b-b154-2e287ffb82ff/Work/6ab9572e-8877-4b78-b46e-bb6c28e7d416/Exec/baseservices/threading/Reports/baseservices.threading/threadpool/unregister/regression_749068/regression_749068.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/33f311ea-f13e-4a4b-b154-2e287ffb82ff/Payload/corerun regression_749068.dll ''\r\n      start\r\n      waiting on succesful unregister\r\n      callback running\r\n      Elapsed: 6383 millisec\r\n      Error. Callback was not signaled\r\n      end\r\n      test failed\r\n      Expected: 100\r\n      Actual: 2\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26827","RelatedDescription":"Open issue \"Test failed: baseservices/threading/threadpool/unregister/regression_749068/regression_749068.sh\" (#26827)"},{"Id":"496816645","IsPullRequest":false,"CreatedAt":"2019-09-22T18:40:30","Actor":"Suchiman","Number":"26825","RawContent":null,"Title":"Peculiar string operation performance","State":"open","Body":"So i got nerd sniped on IRC with how fast you can append characters to create a string.\r\nI created the following benchmark to measure a few alternatives just before i got told it's for an old MVC4 app. Then I've noticed that the performance is consistently worse on .NET Core, in particular for `StringBuilder` and even more so if you supply a `capacity` for `StringBuilder`. I then suspected Tiered Compilation but i couldn't figure how to really disable it for BDN.NET, `<TieredCompilation>false</TieredCompilation>` had at best an effect on the `InProcess` Benchmark. Also it appears that BDN.NET or the API it is using for measuring the `Allocated` number is incorrect on .NET Core, the .NET Framework numbers seem more plausible (allocating an `char[]` of 50k elements and a `string` from that `char[]` certainly doesn't allocate exactly as much as just allocating the `string`).\r\n\r\n```csharp\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\nusing System.Text;\r\n\r\nnamespace ConsoleApp37\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            BenchmarkRunner.Run<ConcatRace>();\r\n        }\r\n    }\r\n\r\n    //[InProcess]\r\n    [MemoryDiagnoser]\r\n    public class ConcatRace\r\n    {\r\n        const int length = 50000;\r\n\r\n        [Benchmark]\r\n        public string StringBuilderAddChar()\r\n        {\r\n            var result = new StringBuilder();\r\n\r\n            for (int i = 0; i < length; i++)\r\n            {\r\n                result.Append('s');\r\n            }\r\n\r\n            return result.ToString();\r\n        }\r\n\r\n        [Benchmark]\r\n        public string StringBuilderAddCharOptimized()\r\n        {\r\n            var result = new StringBuilder(length);\r\n\r\n            for (int i = 0; i < length; i++)\r\n            {\r\n                result.Append('s');\r\n            }\r\n\r\n            return result.ToString();\r\n        }\r\n\r\n        [Benchmark]\r\n        public unsafe string PointerAddChar()\r\n        {\r\n            var result = new char[length];\r\n\r\n            fixed (char* fixedPointer = result)\r\n            {\r\n                var pointer = fixedPointer;\r\n                for (int i = 0; i < length; i++)\r\n                {\r\n                    *pointer++ = 's';\r\n                }\r\n            }\r\n\r\n            return new string(result);\r\n        }\r\n\r\n        [Benchmark]\r\n        public unsafe string NormalAddChar()\r\n        {\r\n            var result = new char[length];\r\n\r\n            for (int i = 0; i < result.Length; i++)\r\n            {\r\n                result[i] = 's';\r\n            }\r\n\r\n            return new string(result);\r\n        }\r\n\r\n        [Benchmark]\r\n        public unsafe string FastPointerAddChar()\r\n        {\r\n            var result = new string('\\0', length);\r\n\r\n            fixed (char* fixedPointer = result)\r\n            {\r\n                var pointer = fixedPointer;\r\n                for (int i = 0; i < length; i++)\r\n                {\r\n                    *pointer++ = 's';\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# .NET Framework 4.7.2\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.18362\r\nIntel Core i5-4670K CPU 3.40GHz (Haswell), 1 CPU, 4 logical and 4 physical cores\r\n  [Host]     : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.8.3815.0\r\n  DefaultJob : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.8.3815.0\r\n\r\n\r\n```\r\n|                        Method |      Mean |     Error |    StdDev |   Gen 0 |   Gen 1 |   Gen 2 | Allocated |\r\n|------------------------------ |----------:|----------:|----------:|--------:|--------:|--------:|----------:|\r\n|          StringBuilderAddChar | 109.43 us | 0.3330 us | 0.2952 us | 62.3779 | 31.1279 | 31.1279 | 209.02 KB |\r\n| StringBuilderAddCharOptimized | 100.69 us | 0.5440 us | 0.5089 us | 62.3779 | 62.3779 | 62.3779 | 195.87 KB |\r\n|                PointerAddChar |  33.79 us | 0.2182 us | 0.1934 us | 62.4390 | 62.4390 | 62.4390 | 195.37 KB |\r\n|                 NormalAddChar |  38.40 us | 0.1843 us | 0.1539 us | 62.4390 | 62.4390 | 62.4390 | 195.37 KB |\r\n|            FastPointerAddChar |  24.62 us | 0.2241 us | 0.2096 us | 31.2195 | 31.2195 | 31.2195 |  97.69 KB |\r\n\r\n# .NET Core 3.0 RC1 (OutOfProcess)\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.18362\r\nIntel Core i5-4670K CPU 3.40GHz (Haswell), 1 CPU, 4 logical and 4 physical cores\r\n.NET Core SDK=3.0.100-rc1-014190\r\n  [Host]     : .NET Core 3.0.0-rc1-19456-20 (CoreCLR 4.700.19.45506, CoreFX 4.700.19.45604), 64bit RyuJIT\r\n  DefaultJob : .NET Core 3.0.0-rc1-19456-20 (CoreCLR 4.700.19.45506, CoreFX 4.700.19.45604), 64bit RyuJIT\r\n\r\n\r\n```\r\n|                        Method |      Mean |     Error |    StdDev |   Gen 0 |   Gen 1 |   Gen 2 | Allocated |\r\n|------------------------------ |----------:|----------:|----------:|--------:|--------:|--------:|----------:|\r\n|          StringBuilderAddChar | 120.80 us | 0.5277 us | 0.4936 us | 62.2559 | 31.0059 | 31.0059 | 208.55 KB |\r\n| StringBuilderAddCharOptimized | 142.44 us | 1.1631 us | 1.0879 us | 62.2559 | 62.2559 | 62.2559 |  97.73 KB |\r\n|                PointerAddChar |  35.33 us | 0.2321 us | 0.2057 us | 62.4390 | 62.4390 | 62.4390 |  97.68 KB |\r\n|                 NormalAddChar |  40.27 us | 0.4038 us | 0.3777 us | 62.4390 | 62.4390 | 62.4390 |  97.68 KB |\r\n|            FastPointerAddChar |  29.78 us | 0.1331 us | 0.1245 us | 31.2195 | 31.2195 | 31.2195 |  97.68 KB |\r\n\r\n# .NET Core 3.0 RC1 (InProcess)\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.18362\r\nIntel Core i5-4670K CPU 3.40GHz (Haswell), 1 CPU, 4 logical and 4 physical cores\r\n.NET Core SDK=3.0.100-rc1-014190\r\n  [Host] : .NET Core 3.0.0-rc1-19456-20 (CoreCLR 4.700.19.45506, CoreFX 4.700.19.45604), 64bit RyuJIT\r\n\r\nJob=InProcess  Toolchain=InProcessEmitToolchain  \r\n\r\n```\r\n|                        Method |      Mean |     Error |    StdDev |   Gen 0 |   Gen 1 |   Gen 2 | Allocated |\r\n|------------------------------ |----------:|----------:|----------:|--------:|--------:|--------:|----------:|\r\n|          StringBuilderAddChar | 121.68 us | 0.4015 us | 0.3352 us | 62.3779 | 31.1279 | 31.1279 | 208.55 KB |\r\n| StringBuilderAddCharOptimized | 111.83 us | 1.4062 us | 1.3154 us | 62.3779 | 62.3779 | 62.3779 |  97.73 KB |\r\n|                PointerAddChar |  43.64 us | 0.5115 us | 0.4784 us | 62.4390 | 62.4390 | 62.4390 |  97.68 KB |\r\n|                 NormalAddChar |  48.63 us | 0.6182 us | 0.5782 us | 62.4390 | 62.4390 | 62.4390 |  97.68 KB |\r\n|            FastPointerAddChar |  29.98 us | 0.3981 us | 0.3724 us | 31.2195 | 31.2195 | 31.2195 |  97.68 KB |","Url":"https://github.com/dotnet/coreclr/issues/26825","RelatedDescription":"Open issue \"Peculiar string operation performance\" (#26825)"},{"Id":"496815378","IsPullRequest":false,"CreatedAt":"2019-09-22T18:31:07","Actor":"hypeartist","Number":"26824","RawContent":null,"Title":"Devirtualization: in need of some clarifications","State":"open","Body":"I can't figure out which devirtualization cases are implemented at the moment of .NET Core 3.0 RC. Here is a quick and dirty example of some common (for me at least) use-cases:\r\n\r\n```csharp\r\nnamespace ConsoleTestApp\r\n{\r\n\tpublic static class Test2\r\n\t{\r\n\t\t//===== JitDasm target method ==============================\r\n\t\tpublic static int DoTest(int a, int b, byte c)\r\n\t\t{\r\n\t\t\tvar r1 = DoTestImpl1<int, CalculatorStruct>(a, b, c);\r\n\t\t\tvar r2 = DoTestImpl2<int, CalculatorClass>(a, b, c);\r\n\t\t\tvar r3 = DoTestImpl3(new CalculatorStruct(), a, b, c);\r\n\t\t\tvar r4 = DoTestImpl4<int, CalculatorBase>(new CalculatorClass(), a, b, c);\r\n\t\t\tvar r5 = DoTestImpl5(a, b, c);\r\n\t\t\tvar r6 = DoTestImpl6(a, b, c);\r\n\r\n\t\t\treturn r1 + r2 + r3 + r4 + r5 + r6;\r\n\t\t}\r\n\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tprivate static T DoTestImpl1<T, C>(T a, T b, byte c) \r\n\t\t\twhere T : unmanaged \r\n\t\t\twhere C : unmanaged, ICalculator\r\n\t\t{\r\n\t\t\tC calc = default;\r\n\t\t\treturn calc.Calc(a, b, c);\r\n\t\t}\r\n\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tprivate static T DoTestImpl2<T, C>(T a, T b, byte c)\r\n\t\t\twhere T : unmanaged\r\n\t\t\twhere C : CalculatorBase, new()\r\n\t\t{\r\n\t\t\tvar calc = new C();\r\n\t\t\treturn calc.Calc(a, b, c);\r\n\t\t}\r\n\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tprivate static T DoTestImpl3<T, C>(C calc, T a, T b, byte c)\r\n\t\t\twhere T : unmanaged\r\n\t\t\twhere C : unmanaged, ICalculator\r\n\t\t{\r\n\t\t\treturn calc.Calc(a, b, c);\r\n\t\t}\r\n\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tprivate static T DoTestImpl4<T, C>(C calc, T a, T b, byte c)\r\n\t\t\twhere T : unmanaged\r\n\t\t\twhere C : CalculatorBase\r\n\t\t{\r\n\t\t\treturn calc.Calc(a, b, c);\r\n\t\t}\r\n\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tprivate static T DoTestImpl5<T>(T a, T b, byte c)\r\n\t\t\twhere T : unmanaged\r\n\t\t{\r\n\t\t\tvar calc = new CalculatorClass();\r\n\t\t\treturn calc.Calc(a, b, c);\r\n\t\t}\r\n\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tprivate static T DoTestImpl6<T>(T a, T b, byte c)\r\n\t\t\twhere T : unmanaged\r\n\t\t{\r\n\t\t\tvar calc = new CalculatorStruct();\r\n\t\t\treturn calc.Calc(a, b, c);\r\n\t\t}\r\n\t}\r\n\r\n\t//===== Stuff used above ================================\r\n\tpublic interface ICalculator\r\n\t{\r\n\t\tT Calc<T>(T a, T b, byte c) where T : unmanaged;\r\n\t}\r\n\r\n\tpublic struct CalculatorStruct : ICalculator\r\n\t{\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tpublic T Calc<T>(T a, T b, byte c) where T : unmanaged => CalcMethods.Calc(a, b, c);\r\n\t}\r\n\r\n\tpublic abstract class CalculatorBase\r\n\t{\r\n\t\tpublic abstract T Calc<T>(T a, T b, byte c) where T : unmanaged;\r\n\t}\r\n\r\n\tpublic sealed class CalculatorClass : CalculatorBase\r\n\t{\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tpublic override T Calc<T>(T a, T b, byte c) => CalcMethods.Calc(a, b, c);\r\n\t}\r\n\r\n\tpublic static class CalcMethods\r\n\t{\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tpublic static T Calc<T>(T a, T b, byte c) where T : unmanaged\r\n\t\t{\r\n\t\t\tvar t = Mul(Add(a, b), Cast<byte, T>(c));\r\n\t\t\treturn Div(Mul(a, Cast<byte, T>(c)), Shr(t, 2));\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nThe conclusion is that the only method that get inlined is ```DoTestImpl6<T>```\r\nThe rest five methods are ends up with:\r\n\r\n```\r\n*************** in fgTransformIndirectCalls(inlinee)\r\n -- no candidates to transform\r\nInlining [000048] failed, so bashing STMT00011 to NOP\r\n\r\nINLINER: during 'fgInline' result 'failed this callee' reason 'generic virtual' for 'Test2:DoTest(int,int,ubyte):int' calling 'Test2:DoTestImplX(int,int,ubyte):int'\r\n\r\nINLINER: Marking Test2:DoTestImplX(int,int,ubyte):int as NOINLINE because of generic virtual\r\nINLINER: during 'fgInline' result 'failed this callee' reason 'generic virtual'\r\n```\r\n\r\nIs it expected behavior or I am missing something?\r\n\r\n[full JitDump output](https://gist.github.com/hypeartist/b2ddeffd44cce3bf59cbcf6703a8f4a6)\r\n\r\nUPD2: And to make things a little more confused here is another test example (this time completely ready-to-run):\r\n\r\n```csharp\r\nclass Test1\r\n\t{ \r\n\t\t//===== JitDasm target method ==============================\r\n\t\tpublic static void TestMethodAll(PodPtr<byte> p, byte r, byte g, byte b, byte a, byte c)\r\n\t\t{\r\n\t\t\tTestMethod2Impl(new BlenderStruct<byte, Rgba8>(), p, r, g, b, a, c);\r\n\t\t\tTestMethod1Impl(new BlenderClassFromBase<byte, Rgba8>(), p, r, g, b, a, c);\r\n\t\t\tTestMethod2Impl(new BlenderClassFromInterface<byte, Rgba8>(), p, r, g, b, a, c);\r\n\t\t}\r\n\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tprivate static void TestMethod1Impl<T>(BlenderBase<T> bl, PodPtr<T> p, T r, T g, T b, T a, byte c)\r\n\t\t\twhere T : unmanaged\r\n\t\t{\r\n\t\t\tbl.Blend(p, r, g, b, a);\r\n\t\t}\r\n\r\n\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\tprivate static void TestMethod2Impl<T>(IBlender<T> bl, PodPtr<T> p, T r, T g, T b, T a, byte c)\r\n\t\t\twhere T : unmanaged\r\n\t\t{\r\n\t\t\tbl.Blend(p, r, g, b, a);\r\n\t\t}\r\n\r\n\t\t//===== Stuff used above ================================\r\n\t\tpublic interface IBlender<T>\r\n\t\t\twhere T : unmanaged\r\n\t\t{\r\n\t\t\tvoid Blend(PodPtr<T> p, T r, T g, T b, T a);\r\n\t\t}\r\n\r\n\t\tpublic abstract class BlenderBase<T>\r\n\t\t\twhere T : unmanaged\r\n\t\t{\r\n\t\t\tpublic abstract void Blend(PodPtr<T> p, T r, T g, T b, T a);\r\n\t\t}\r\n\r\n\t\tpublic readonly struct BlenderStruct<T, C> : IBlender<T>\r\n\t\t\twhere T : unmanaged\r\n\t\t\twhere C : unmanaged, IColor<T>\r\n\t\t{\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic void Blend(PodPtr<T> p, T r, T g, T b, T a)\r\n\t\t\t{\r\n\t\t\t\tOrderBgra order = default;\r\n\t\t\t\tC color = default;\r\n\r\n\t\t\t\tref var dr = ref p[order.R];\r\n\t\t\t\tref var dg = ref p[order.G];\r\n\t\t\t\tref var db = ref p[order.B];\r\n\r\n\t\t\t\tdr = color.Lerp(dr, r, a);\r\n\t\t\t\tdg = color.Lerp(dg, g, a);\r\n\t\t\t\tdb = color.Lerp(db, b, a);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic sealed class BlenderClassFromBase<T, C> : BlenderBase<T>\r\n\t\t\twhere T : unmanaged\r\n\t\t\twhere C : unmanaged, IColor<T>\r\n\t\t{\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic override void Blend(PodPtr<T> p, T r, T g, T b, T a)\r\n\t\t\t{\r\n\t\t\t\tOrderBgra order = default;\r\n\t\t\t\tC color = default;\r\n\r\n\t\t\t\tref var dr = ref p[order.R];\r\n\t\t\t\tref var dg = ref p[order.G];\r\n\t\t\t\tref var db = ref p[order.B];\r\n\r\n\t\t\t\tdr = color.Lerp(dr, r, a);\r\n\t\t\t\tdg = color.Lerp(dg, g, a);\r\n\t\t\t\tdb = color.Lerp(db, b, a);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic sealed class BlenderClassFromInterface<T, C> : IBlender<T>\r\n\t\t\twhere T : unmanaged\r\n\t\t\twhere C : unmanaged, IColor<T>\r\n\t\t{\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic void Blend(PodPtr<T> p, T r, T g, T b, T a)\r\n\t\t\t{\r\n\t\t\t\tOrderBgra order = default;\r\n\t\t\t\tC color = default;\r\n\r\n\t\t\t\tref var dr = ref p[order.R];\r\n\t\t\t\tref var dg = ref p[order.G];\r\n\t\t\t\tref var db = ref p[order.B];\r\n\r\n\t\t\t\tdr = color.Lerp(dr, r, a);\r\n\t\t\t\tdg = color.Lerp(dg, g, a);\r\n\t\t\t\tdb = color.Lerp(db, b, a);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic readonly struct OrderBgra\r\n\t\t{\r\n\t\t\tpublic int R\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget => 2;\r\n\t\t\t}\r\n\r\n\t\t\tpublic int G\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget => 1;\r\n\t\t\t}\r\n\r\n\t\t\tpublic int B\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget => 0;\r\n\t\t\t}\r\n\r\n\t\t\tpublic int A\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget => 3;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic interface IColor<TValue>\r\n\t\t\twhere TValue : unmanaged\r\n\t\t{\r\n\t\t\tTValue R { get; set; }\r\n\t\t\tTValue G { get; set; }\r\n\t\t\tTValue B { get; set; }\r\n\t\t\tTValue A { get; set; }\r\n\t\t\tbool IsTransparent { get; }\r\n\t\t\tbool IsOpaque { get; }\r\n\t\t\tTValue Invert(TValue x);\r\n\t\t\tTValue Multiply(TValue a, TValue b);\r\n\t\t\tTValue Demultiply(TValue a, TValue b);\r\n\t\t\tTValue MultCover(TValue a, byte b);\r\n\t\t\tbyte ScaleCover(byte a, TValue b);\r\n\t\t\tTValue Lerp(TValue p, TValue q, TValue a);\r\n\t\t\tTValue Prelerp(TValue p, TValue q, TValue a);\r\n\t\t}\r\n\r\n\t\tpublic struct Rgba8 : IColor<byte>\r\n\t\t{\r\n\t\t\tprivate const int BaseShift = 8;\r\n\t\t\tprivate const int BaseScale = 1 << BaseShift;\r\n\t\t\tprivate const int BaseMask = BaseScale - 1;\r\n\t\t\tprivate const int BaseMsb = 1 << (BaseShift - 1);\r\n\r\n\t\t\tpublic byte R\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget;\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tset;\r\n\t\t\t}\r\n\r\n\t\t\tpublic byte G\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget;\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tset;\r\n\t\t\t}\r\n\r\n\t\t\tpublic byte B\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget;\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tset;\r\n\t\t\t}\r\n\r\n\t\t\tpublic byte A\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget;\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tset;\r\n\t\t\t}\r\n\r\n\t\t\tpublic bool IsTransparent\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget => A == 0;\r\n\t\t\t}\r\n\r\n\t\t\tpublic bool IsOpaque\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget => A == 255;\r\n\t\t\t}\r\n\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic byte Invert(byte x) => (byte) (BaseMask - x);\r\n\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic byte Multiply(byte a, byte b)\r\n\t\t\t{\r\n\t\t\t\tvar t = a * b + BaseMsb;\r\n\t\t\t\treturn (byte) (((t >> BaseShift) + t) >> BaseShift);\r\n\t\t\t}\r\n\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic byte Demultiply(byte a, byte b)\r\n\t\t\t{\r\n\t\t\t\tif (a * b == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (a >= b)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn BaseMask;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (byte) ((a * BaseMask + (b >> 1)) / b);\r\n\t\t\t}\r\n\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic byte MultCover(byte a, byte b) => Multiply(a, b);\r\n\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic byte ScaleCover(byte a, byte b) => Multiply(b, a);\r\n\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic byte Lerp(byte p, byte q, byte a)\r\n\t\t\t{\r\n\t\t\t\tvar t = (q - p) * a + BaseMsb - (p > q ? 1 : 0);\r\n\t\t\t\treturn (byte) (p + (((t >> BaseShift) + t) >> BaseShift));\r\n\t\t\t}\r\n\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic byte Prelerp(byte p, byte q, byte a) => (byte) (p + q - Multiply(p, a));\r\n#if DEBUG\r\n\t\tpublic override string ToString() => $\"R: {R}, G: {G}, B: {B}, A: {A}\";\r\n#endif\r\n\t\t}\r\n\r\n\t\tpublic unsafe struct PodPtr<T>\r\n\t\t\twhere T : unmanaged\r\n\t\t{\r\n\t\t\tprivate T* _pointer;\r\n\r\n\t\t\tpublic ref T this[int pos]\r\n\t\t\t{\r\n\t\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\t\tget => ref _pointer[pos];\r\n\t\t\t}\r\n\r\n\t\t\t[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]\r\n\t\t\tpublic static PodPtr<T> FromRef(ref T t)\r\n\t\t\t{\r\n\t\t\t\tvar tp = (T*) Unsafe.AsPointer(ref t);\r\n\t\t\t\treturn *(PodPtr<T>*) &tp;\r\n\t\t\t}\r\n#if DEBUG\r\n\t\tpublic override string ToString() => $\"0x{((IntPtr)_pointer).ToString(\"x8\")}\";\r\n#endif\r\n\t\t}\r\n\t}\r\n```\r\n\r\nThis time we get successfully inlined those two methods:\r\n\r\n```csharp\r\nTestMethod1Impl(new BlenderClassFromBase<byte, Rgba8>(), p, r, g, b, a, c);\r\nTestMethod2Impl(new BlenderClassFromInterface<byte, Rgba8>(), p, r, g, b, a, c);\r\n```\r\n\r\nWhile the method:\r\n\r\n```csharp\r\nTestMethod2Impl(new BlenderStruct<byte, Rgba8>(), p, r, g, b, a, c);\r\n```\r\n\r\nFails to get inlined with that reason:\r\n\r\n```\r\nINLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'cannot get method info' for 'Test1:TestMethod2Impl(ref,struct,ubyte,ubyte,ubyte,ubyte,ubyte)' calling 'BlenderStruct`2:Blend(struct,ubyte,ubyte,ubyte,ubyte):this'\r\n\r\nINLINER: Marking BlenderStruct`2:Blend(struct,ubyte,ubyte,ubyte,ubyte):this as NOINLINE because of cannot get method info\r\nINLINER: during 'impMarkInlineCandidate' result 'failed this callee' reason 'cannot get method info'\r\n```\r\n\r\n[Full JitDump output](https://gist.github.com/hypeartist/8a99980458e44f959ef36e55da4fc1c4)","Url":"https://github.com/dotnet/coreclr/issues/26824","RelatedDescription":"Open issue \"Devirtualization: in need of some clarifications\" (#26824)"},{"Id":"496811167","IsPullRequest":true,"CreatedAt":"2019-09-22T17:54:30","Actor":"benaadams","Number":"26823","RawContent":null,"Title":"Remove global locks from Exception stack trace handling ","State":"open","Body":"Use a Exception instance level lock for restoring EDI and setting stack traces rather than a global lock for EDI and a global spin lock for setting the stacktrace.\r\n\r\nFor deep async stacks this is called multiple times for the same exception and if multiple are triggered at same time for very many tasks due to dependencies; they are likely to hit high contention with the global locks.\r\n\r\n/cc @jkotas @stephentoub ","Url":"https://github.com/dotnet/coreclr/pull/26823","RelatedDescription":"Open PR \"Remove global locks from Exception stack trace handling \" (#26823)"},{"Id":"496795213","IsPullRequest":false,"CreatedAt":"2019-09-22T15:33:33","Actor":"fawdlstty","Number":"26822","RawContent":null,"Title":"The direct release failed after modifying the code","State":"open","Body":"Every time I release after modifying the project code, the first release always fails, and the second release only succeeds, which is a problem that recurs steadily in.net core 3 rc1, not in.net core 3 preview 9\r\n\r\n![20190922233200](https://user-images.githubusercontent.com/7323999/65390424-3aeb3400-dd91-11e9-9e65-6170b745b25c.png)\r\n\r\nerror log file content:\r\n\r\n```log\r\n2019-09-22 23:25:11\r\nSystem.AggregateException: 发生一个或多个错误。 ---> System.Exception: 发布失败。\r\n   --- 内部异常堆栈跟踪的结尾 ---\r\n   在 System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   在 System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   在 Microsoft.Publish.Framework.Model.DefaultPublishSteps.<>c__DisplayClass26_0.<IsBuildCompletedSuccessfully>b__2()\r\n   在 System.Threading.Tasks.Task`1.InnerInvoke()\r\n   在 System.Threading.Tasks.Task.Execute()\r\n--- 引发异常的上一位置中堆栈跟踪的末尾 ---\r\n   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   在 Microsoft.Publish.Framework.Model.DefaultPublishSteps.<DefaultCorePublishStep>d__23.MoveNext()\r\n--- 引发异常的上一位置中堆栈跟踪的末尾 ---\r\n   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   在 Microsoft.Publish.Framework.ViewModel.ProfileSelectorViewModel.<RunPublishTaskAsync>d__205.MoveNext()\r\n---> (内部异常 #0) System.Exception: 发布失败。<---\r\n\r\nSystem.Exception: 发布失败。\r\n\r\n===================\r\n\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26822","RelatedDescription":"Open issue \"The direct release failed after modifying the code\" (#26822)"},{"Id":"497223195","IsPullRequest":false,"CreatedAt":"2019-09-20T20:05:43","Actor":"mgth","Number":"26838","RawContent":null,"Title":"Comparing types for equality may fail while guid are equals.","State":"open","Body":".Net Core 3.0 RC1\r\nSometimes \r\n\r\ntypeA != typeB\r\nalthrought \r\ntypeA.GUID == typeB.GUID\r\n\r\nIn my case types ares the same, and it worked in dot net framework.\r\nOne type is obtained by reflection for a property type.\r\nThe other is obtained by reflexion on the class itself.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/26838","RelatedDescription":"Open issue \"Comparing types for equality may fail while guid are equals.\" (#26838)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"496450588","IsPullRequest":false,"CreatedAt":"2019-09-23T21:15:46","Actor":"giordi91","Number":"12684","RawContent":null,"Title":"dotnet publish does not generate runtimeconfig.json","State":"closed","Body":"## Steps to reproduce\r\nGood evening, I am trying to integrate .net core 3.0 in my engine as a scripting language. As such I want to be able to kick c# code from my c++ code. I am following the sample code for hosting. \r\nThe code, requires a runtimeconfig.json for my c# dll that I want to load and execute at runtime. Unluckily I am unable to generate such file when using dotnet publish. \r\n\r\nI have tried to both create a visual studio project which a 3.0 class library and do\r\n```\r\ndotnet new classlib\r\n```\r\nAnd upgrade the project to netcoreapp3.0. Only the deps.json file is generated, not the runtimeconfig.json one.\r\n\r\n\r\nto repdoruce:\r\n* run : dotnet new classlib\r\n* modified project file for netcoreapp3.0\r\n* run dotnet publish\r\n* check build directory\r\n\r\n## Expected  behavior\r\nI would expect the see a *.runtimeconfig.json file generated along the *.dll *.pbd *.deps.json \r\nI tried to do both self contained and not, force x64 etc. No luck. \r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\nAm I doing anything wrong?\r\n\r\nBest regards\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12684","RelatedDescription":"Closed issue \"dotnet publish does not generate runtimeconfig.json\" (#12684)"},{"Id":"497242401","IsPullRequest":false,"CreatedAt":"2019-09-23T19:22:29","Actor":"Zanadar","Number":"12692","RawContent":null,"Title":"Please publish SDK 3.0.100+dependencies","State":"closed","Body":"Hello! \r\nVery excited about this new release. Congrats!\r\nWhen you get a chance can we get a `+dependencies` release, please? \r\nThanks you.\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12692","RelatedDescription":"Closed issue \"Please publish SDK 3.0.100+dependencies\" (#12692)"},{"Id":"497239994","IsPullRequest":true,"CreatedAt":"2019-09-23T17:52:25","Actor":"am11","Number":"12691","RawContent":null,"Title":"Update manpages using dockerized pandoc tool","State":"open","Body":"Using `run_docker.sh` and fixes from https://github.com/dotnet/cli/pull/12690.\r\n","Url":"https://github.com/dotnet/cli/pull/12691","RelatedDescription":"Open PR \"Update manpages using dockerized pandoc tool\" (#12691)"},{"Id":"497235172","IsPullRequest":true,"CreatedAt":"2019-09-23T17:41:26","Actor":"am11","Number":"12690","RawContent":null,"Title":"Add Dockerfile for manpage tool and fixes","State":"open","Body":"* Simplify usage with docker: `run_docker.sh`\r\n* Add support for git to acquire dotnet/docs repo\r\n* Fix bug in `remove_references` filter which was throwing on processing `dotnet-test.md`\r\n  * filter breaks with this pattern: ``[some `code`](/path)``\r\n  * change filter to return nested AST generated array as is (without next sibling, which is path)\r\n    to fulfill its purpose\r\n\r\n---\r\n\r\nI will send separate PR for manpage update.","Url":"https://github.com/dotnet/cli/pull/12690","RelatedDescription":"Open PR \"Add Dockerfile for manpage tool and fixes\" (#12690)"},{"Id":"496766219","IsPullRequest":false,"CreatedAt":"2019-09-22T11:23:40","Actor":"alrz","Number":"12689","RawContent":null,"Title":"Roslyn analyzer project templates","State":"closed","Body":"It would be nice to be able to run `dotnet new analyzer|codefix` to create roslyn analyzer/codefix projects.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12689","RelatedDescription":"Closed issue \"Roslyn analyzer project templates\" (#12689)"},{"Id":"496585413","IsPullRequest":true,"CreatedAt":"2019-09-21T00:20:37","Actor":"dotnet-maestro[bot]","Number":"12688","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 10:30 PM\r\n- **Commit**: 72b39b0473993b932a08c8fc24a8988d45b416a5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19470.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19470.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12688","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12688)"},{"Id":"496578307","IsPullRequest":true,"CreatedAt":"2019-09-20T23:05:33","Actor":"dotnet-maestro[bot]","Number":"12687","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190923.5\r\n- **Date Produced**: 9/24/2019 4:13 AM\r\n- **Commit**: d7f6c5e944e500f44b8536aed8f6a05320f7729a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19473.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19473.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19473.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19473.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19473.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12687","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#12687)"},{"Id":"496554419","IsPullRequest":true,"CreatedAt":"2019-09-20T22:05:44","Actor":"dotnet-maestro[bot]","Number":"12686","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.5\r\n- **Date Produced**: 9/20/2019 8:16 PM\r\n- **Commit**: b0ea03ec3af2a9c388f718fbb4978984ab339953\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19470.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19470.5\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12686","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12686)"},{"Id":"496514144","IsPullRequest":true,"CreatedAt":"2019-09-20T20:10:38","Actor":"dotnet-maestro[bot]","Number":"12685","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 6:28 PM\r\n- **Commit**: 9817f3a7023df0fdda0511309010397bd5218384\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19470.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12685","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12685)"},{"Id":"496091035","IsPullRequest":false,"CreatedAt":"2019-09-20T17:06:00","Actor":"krwq","Number":"12681","RawContent":null,"Title":"Removing template from disk leaves dotnet new in unusable state","State":"closed","Body":"## Steps to reproduce\r\n\r\n- `dotnet new -i <path to any template>`\r\n- `rm -rf <path to the template>`\r\n- `dotnet new --help`\r\n\r\n## Expected  behavior\r\n\r\nWarning or actionable error message\r\n\r\n## Actual behavior\r\n\r\nError:\r\n\r\n```\r\nCould not find a part of the path '<path to the template>'.\r\n   at System.IO.Enumeration.FileSystemEnumerator`1.CreateDirectoryHandle(String path, Boolean ignoreNotFound)\r\n   at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, FindTransform transform, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerableFactory.UserEntries(String directory, String expression, EnumerationOptions options)\r\n   at System.IO.Directory.InternalEnumeratePaths(String path, String searchPattern, SearchTarget searchTarget, EnumerationOptions options)\r\n   at System.IO.Directory.EnumerateFileSystemEntries(String path, String searchPattern, SearchOption searchOption)\r\n   at Microsoft.TemplateEngine.Utils.PhysicalFileSystem.EnumerateFileSystemEntries(String directoryName, String pattern, SearchOption searchOption)\r\n   at Microsoft.TemplateEngine.Edge.Settings.Scanner.DetermineDirectoriesToScan(String baseDir)\r\n   at Microsoft.TemplateEngine.Edge.Settings.Scanner.Scan(String baseDir, Boolean allowDevInstall)\r\n   at Microsoft.TemplateEngine.Edge.Settings.TemplateCache.Scan(String installDir, IReadOnlyList`1& mountPointIdsForNewInstalls, Boolean allowDevInstall)\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.RebuildCacheFromSettingsIfNotCurrent(Boolean forceRebuild)\r\n   at Microsoft.TemplateEngine.Cli.New3Command.ExecuteAsync()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.NewCommandInputCli.<>c__DisplayClass19_0.<<OnExecute>b__0>d.MoveNext()\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n Commit:    c57bde4593\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.10\r\n OS Platform: Linux\r\n RID:         ubuntu.18.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100-preview-010184/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.6\r\n  Commit:  7dac9b1b51\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [/usr/share/dotnet/sdk]\r\n  2.1.801 [/usr/share/dotnet/sdk]\r\n  2.2.401 [/usr/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nRemoving all of the ~10 entries of my app from json files under `~/.templateengine` I'm able to use it again\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12681","RelatedDescription":"Closed issue \"Removing template from disk leaves dotnet new in unusable state\" (#12681)"},{"Id":"496280317","IsPullRequest":false,"CreatedAt":"2019-09-20T10:41:02","Actor":"xianyun666","Number":"12683","RawContent":null,"Title":"PublishSingleFile,After run,system error:api-ms-win-crt-runtime-l1-1-0.dll is missing","State":"open","Body":"## Steps to reproduce\r\nRun the software\r\n## Expected  behavior\r\nRun successfully\r\n\r\n## Actual behavior\r\nsystem error,api-ms-win-crt-runtime-l1-1-0.dll is missing\r\n\r\n## Environment data\r\nwindows7 sp1 64bit\r\nInstalled KB2533623\r\nNot installed KB2999226\r\n\r\n\r\nPublishSingleFile,This error will occur.But,--self-contained does not.\r\nI also found that,Found it in my cache directory.\r\n**C:\\Users\\liu\\AppData\\Local\\Temp\\\\.net\\myApp\\hym3u0df.ls0**\r\nThere are many files whose filenames begin with 'api-ms'\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12683","RelatedDescription":"Open issue \"PublishSingleFile,After run,system error:api-ms-win-crt-runtime-l1-1-0.dll is missing\" (#12683)"},{"Id":"496150626","IsPullRequest":true,"CreatedAt":"2019-09-20T05:55:38","Actor":"dotnet-maestro[bot]","Number":"12682","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/20/2019 4:11 AM\r\n- **Commit**: 33723cfa72892e93656fe53350da35835d64c099\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19469.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19469.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12682","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12682)"},{"Id":"495994223","IsPullRequest":false,"CreatedAt":"2019-09-19T20:05:11","Actor":"Raviuppa","Number":"12680","RawContent":null,"Title":"Help URL for failed dotnet tool installation pointing to wrong page","State":"closed","Body":"## Steps to reproduce\r\n\r\nWhen tried to install a wrong version of tool (dotnet-sos in this case) or when the tool unable to find the relevant version of the tool, it errors out with detailed information. However, the [URL ](https://aka.ms/failure-installing-tool)that spits out is pointing to Microsoft Docs [main page](https://docs.microsoft.com/en-us/) instead to the actual tool failure assistance page.\r\n\r\nRemember, today the RC2 tool is not there yet so the error happens. Once Rc2 or RTM too chain is up for consumption, you may not see the error but the Issue here is about the URL in the error message.\r\n\r\n- Open a Command Window\r\n- Execute dotnet tool install -g dotnet-sos --version 3.0.100-rc2-014234\r\n- Check the error message for the URL.\r\n\r\n## Expected  behavior\r\nThe [help URL](https://aka.ms/failure-installing-tool) should point to the tooling doc page\r\n\r\n## Actual behavior\r\n\r\nHelp URL pointing to the Docs [main page](https://docs.microsoft.com/en-us/).\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc2-014234\r\n Commit:    118e4306cb\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc2-014234\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc2-19460-02\r\n  Commit:  4421cfb105\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc2-014234 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc2.19460.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc2-19460-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc2-19460-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12680","RelatedDescription":"Closed issue \"Help URL for failed dotnet tool installation pointing to wrong page\" (#12680)"},{"Id":"495894353","IsPullRequest":false,"CreatedAt":"2019-09-19T19:53:42","Actor":"basbossink","Number":"12679","RawContent":null,"Title":"Warning NU1603 should include the approximate best match found in the message","State":"closed","Body":"## Steps to reproduce\r\nCreate a project that depends on a pre-release package that is not available (yet).\r\n```sh\r\ndotnet restore\r\n```\r\n\r\n## Expected  behavior\r\n```sh\r\nF:\\vlow\\Support.Mail\\tst\\Support.Mail.Tests\\Divv.Vlow.Support.Mail.Tests.csproj : warning NU1603: Divv.Vlow.Support.Mail depends on Divv.Vlow.Reports.Mail (>= 2.2.0-dev.2.DIVDEV-1308.1) but Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1 was not found. An approximate best match Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.0 was resolved. [F:\\vlow\\Support.Mail\\Support.Mail.sln]\r\n```\r\n\r\nSo the feature request is to add the actual version that was resolved to the warning message, since that information is more useful than repeating the version of the package that caused the warning.\r\n\r\n## Actual behavior\r\n```sh\r\nF:\\vlow\\Support.Mail\\tst\\Support.Mail.Tests\\Divv.Vlow.Support.Mail.Tests.csproj : warning NU1603: Divv.Vlow.Support.Mail depends on Divv.Vlow.Reports.Mail (>= 2.2.0-dev.2.DIVDEV-1308.1) but Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1 was not found. An approximate best match of Divv.Vlow.Reports.Mail 2.2.0-dev.2.DIVDEV-1308.1.debug was resolved. [F:\\vlow\\Support.Mail\\Support.Mail.sln]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.402\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12679","RelatedDescription":"Closed issue \"Warning NU1603 should include the approximate best match found in the message\" (#12679)"},{"Id":"495836384","IsPullRequest":false,"CreatedAt":"2019-09-19T19:52:43","Actor":"sdcb","Number":"12678","RawContent":null,"Title":"dotnet pack nuget package don't contains update time on file attributes","State":"closed","Body":"## Steps to reproduce\r\nJust run: `dotnet pack` on a project folder.\r\n\r\n## Expected  behavior\r\nDll file on nuget package should contains update time attribute.\r\n![image](https://user-images.githubusercontent.com/1317141/65253001-79cc8000-db2c-11e9-8895-5f17b1274d87.png)\r\n\r\n## Actual behavior\r\nBut it fixed to 01/01/1980\r\n![image](https://user-images.githubusercontent.com/1317141/65252957-67eadd00-db2c-11e9-9f9a-431df324b910.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc2-014266\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n```\r\n\r\n# Note: \r\n* I'm experience this issue on just .NET Core 3.0, maybe since preview9(or earlier).\r\n* When I using `dotnet pack` on .NET Core SDK 2.2, this is all good.\r\n* If I create nuget package using msbuild.exe or by `nuget pack {projectFile} -build`, this is also all good.","Url":"https://github.com/dotnet/cli/issues/12678","RelatedDescription":"Closed issue \"dotnet pack nuget package don't contains update time on file attributes\" (#12678)"},{"Id":"495636122","IsPullRequest":false,"CreatedAt":"2019-09-19T19:51:01","Actor":"xianyun666","Number":"12675","RawContent":null,"Title":"Can I customize the publish self-contained runtimes path？","State":"closed","Body":"At present, after publish self-contained, exe sibling directory, generate a lot of dll files and folders, \r\n\r\nsuch as System.Net.dll, api-ms-won-core-console-l1-1-0.dll, vcruntime140_cor3.dll, etc.\r\n**It's such a mess.**\r\nIt is best to publish with a parameter that separates exe from the runtimes directory, \r\nsuch as `dotnet publish --self-contained --runtime-packs myruntimes`?\r\nruntime-packs parameter supports absolute and relative paths.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12675","RelatedDescription":"Closed issue \"Can I customize the publish self-contained runtimes path？\" (#12675)"},{"Id":"495755704","IsPullRequest":true,"CreatedAt":"2019-09-19T12:03:17","Actor":"dotnet-maestro[bot]","Number":"12677","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12677","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#12677)"},{"Id":"495654112","IsPullRequest":false,"CreatedAt":"2019-09-19T08:36:50","Actor":"donhuvy","Number":"12676","RawContent":null,"Title":"dotnet cli version 3.0.100-rc1-014190 still generate *.SLN with # Visual Studio 15","State":"open","Body":"## Steps to reproduce\r\nInstall .NET Core 3 RC1\r\n\r\n```\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n```\r\nthen\r\n```\r\ncd Actio\r\ndotnet new sln\r\n```\r\n\r\nResult of file `Actio.sln`\r\n\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.26124.0\r\nMinimumVisualStudioVersion = 15.0.26124.0\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Api\", \"src\\Actio.Api\\Actio.Api.csproj\", \"{21E41DE9-5142-4D5C-96A4-CC19BCA24620}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Common\", \"src\\Actio.Common\\Actio.Common.csproj\", \"{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Services.Identity\", \"src\\Actio.Services.Identity\\Actio.Services.Identity.csproj\", \"{8830705C-FBD0-4190-8DD7-5AD513187E5E}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Actio.Services.Activities\", \"src\\Actio.Services.Activities\\Actio.Services.Activities.csproj\", \"{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\t\tRelease|x64 = Release|x64\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F}.Release|x86.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{21E41DE9-5142-4D5C-96A4-CC19BCA24620} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{D3A9DEA6-B88B-497A-9E6A-503F5DDB9B8B} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{8830705C-FBD0-4190-8DD7-5AD513187E5E} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\t\t{2CBE93E9-2FFA-41C4-9414-27DF33E4595F} = {329BFFB2-E363-4DD1-A7AE-E2D8769C72F9}\r\n\tEndGlobalSection\r\nEndGlobal\r\n\r\n```\r\n\r\n## Expected  behavior\r\n```\r\n# Visual Studio 15\r\n```\r\nbecome to \r\n```\r\n# Visual Studio 16\r\n```\r\nand other related things.\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\nE:\\Actio>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013656 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12676","RelatedDescription":"Open issue \"dotnet cli version 3.0.100-rc1-014190 still generate *.SLN with # Visual Studio 15\" (#12676)"},{"Id":"495520454","IsPullRequest":true,"CreatedAt":"2019-09-19T01:35:40","Actor":"dotnet-maestro[bot]","Number":"12674","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190918.6\r\n- **Date Produced**: 9/18/2019 11:51 PM\r\n- **Commit**: 30c4a25a9a675d632b6e7180e53a87e6fcacb909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19468.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19468.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12674","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12674)"},{"Id":"495462077","IsPullRequest":false,"CreatedAt":"2019-09-18T21:23:19","Actor":"CamSoper","Number":"12673","RawContent":null,"Title":"Launching with `dotnet run &` fails to run in background on Linux","State":"open","Body":"This might be a regression of https://github.com/dotnet/cli/issues/6216.\r\n\r\n## Steps to reproduce\r\nFrom bash:\r\n\r\n1. `mkdir temp && cd temp`\r\n1. `dotnet new api`\r\n1. `dotnet run &`  Note the job ID. \r\n1. `jobs`\r\n\r\n## Expected  behavior\r\nNew job is listed in *Running* state. App is running in background and responds to `curl` commands.\r\n\r\n## Actual behavior\r\nNew job is listed is *Stopped* state. App is not running in background.\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /home/cam/.dotnet/sdk/3.0.100-rc1-014190/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-rc1-014190 [/home/cam/.dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [/home/cam/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [/home/cam/.dotnet/shared/Microsoft.NETCore.App]\r\n\r\ncc: @scottaddie \r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12673","RelatedDescription":"Open issue \"Launching with `dotnet run &` fails to run in background on Linux\" (#12673)"},{"Id":"495375424","IsPullRequest":true,"CreatedAt":"2019-09-18T20:52:02","Actor":"dotnet-maestro[bot]","Number":"12672","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190918.2\r\n- **Date Produced**: 9/18/2019 7:07 PM\r\n- **Commit**: e6f9309bae0f8242045b80a50f65513da975906d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19468.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19468.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19468.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19468.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19468.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12672","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12672)"},{"Id":"495016283","IsPullRequest":true,"CreatedAt":"2019-09-18T06:34:44","Actor":"dotnet-maestro[bot]","Number":"12671","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190917.3\r\n- **Date Produced**: 9/18/2019 6:14 AM\r\n- **Commit**: b3a343bf8ed65f5208c5bb86c632856c5d107b1d\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-rc2.19467.3\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12671","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12671)"},{"Id":"494998622","IsPullRequest":true,"CreatedAt":"2019-09-18T06:10:39","Actor":"dotnet-maestro[bot]","Number":"12670","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190917.8\r\n- **Date Produced**: 9/18/2019 4:19 AM\r\n- **Commit**: 708eb333f08df7e339a3989765a068d65a1232bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19467.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19467.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19467.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19467.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12670","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12670)"},{"Id":"494960175","IsPullRequest":true,"CreatedAt":"2019-09-18T03:35:39","Actor":"dotnet-maestro[bot]","Number":"12669","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190917.7\r\n- **Date Produced**: 9/18/2019 1:52 AM\r\n- **Commit**: 1e19b8c0d63fe23da7bdd9625ca51c6bd2d1bab2\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview1.19467.7\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview1.19467.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview1.19467.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview1.19467.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview1.19467.7\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12669","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12669)"},{"Id":"494892502","IsPullRequest":true,"CreatedAt":"2019-09-18T00:47:06","Actor":"dotnet-maestro[bot]","Number":"12667","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190917.1\r\n- **Date Produced**: 9/17/2019 9:41 PM\r\n- **Commit**: c63dfd832a0545b99672738d4f48544a09f4faf9\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-rc2.19467.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12667","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12667)"},{"Id":"494906018","IsPullRequest":true,"CreatedAt":"2019-09-18T00:39:30","Actor":"dotnet-maestro[bot]","Number":"12668","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7d6fa2f4-b9c4-4071-7865-08d72198640e)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.0.6251\r\n- **Date Produced**: 9/17/2019 11:35 PM\r\n- **Commit**: b75150f2f4127a77a166c9552845e86fb24a3282\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.0-rtm.6251\r\n\r\n[marker]: <> (End:7d6fa2f4-b9c4-4071-7865-08d72198640e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12668","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#12668)"},{"Id":"494851767","IsPullRequest":true,"CreatedAt":"2019-09-17T21:40:40","Actor":"dotnet-maestro[bot]","Number":"12666","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190917.5\r\n- **Date Produced**: 9/17/2019 7:47 PM\r\n- **Commit**: 708eb333f08df7e339a3989765a068d65a1232bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19467.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19467.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19467.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19467.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12666","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12666)"},{"Id":"494822899","IsPullRequest":false,"CreatedAt":"2019-09-17T19:59:27","Actor":"andy-ms","Number":"12665","RawContent":null,"Title":"Building a project named `cs` with a PackageReference on Ubuntu fails with \"Could not copy\"","State":"open","Body":"## Steps to reproduce\r\n\r\n* `git clone https://github.com/andy-ms/dotnet-bug-repro.git`\r\n* `dotnet build`\r\n\r\n\r\n## Expected  behavior\r\n\r\nIt should succeed.\r\n\r\n\r\n## Actual behavior\r\n\r\n* One of these three things may happen:\r\n\r\n1) It succeeds.\r\n   In this case run `git clean -xfd` and try again.\r\n\r\n2) It may fail with one error.\r\n`home/anhans/bin/dotnet/sdk/3.0.100-preview8-013656/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3024: Could not copy the file \"/home/anhans/work/sample/cs/obj/Debug/netcoreapp3.0/cs\" to the destination file \"bin/Debug/netcoreapp3.0/cs\", because the destination is a folder instead of a file. To copy the source file into a folder, consider using the DestinationFolder parameter instead of DestinationFiles. [/home/anhans/work/sample/cs/cs.csproj]`\r\n\r\n3) It may give en error on each individual file it tries to copy.\r\n`/home/anhans/bin/dotnet/sdk/3.0.100-preview8-013656/Microsoft.Common.CurrentVersion.targets(4377,5): warning MSB3026: Could not copy \"/home/anhans/.nuget/packages/microsoft.codeanalysis.visualbasic/3.2.1/lib/netstandard2.0/cs/Microsoft.CodeAnalysis.VisualBasic.resources.dll\" to \"bin/Debug/netcoreapp3.0/cs/Microsoft.CodeAnalysis.VisualBasic.resources.dll\". Beginning retry 1 in 1000ms. The file '/home/anhans/work/sample/cs/bin/Debug/netcoreapp3.0/cs' already exists.  [/home/anhans/work/sample/cs/cs.csproj]`\r\n\r\nThis error message is repeated many times, with the name of the file being copied changing.\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /home/anhans/bin/dotnet/sdk/3.0.100-rc1-014190/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-rc1-014190 [/home/anhans/bin/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [/home/anhans/bin/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [/home/anhans/bin/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/12665","RelatedDescription":"Open issue \"Building a project named `cs` with a PackageReference on Ubuntu fails with \"Could not copy\"\" (#12665)"},{"Id":"494764583","IsPullRequest":true,"CreatedAt":"2019-09-17T18:20:38","Actor":"dotnet-maestro[bot]","Number":"12664","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190917.1\r\n- **Date Produced**: 9/17/2019 4:29 PM\r\n- **Commit**: 9042fe6c81aa3b47f58ccd94ff02e42f9f7a4e46\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19467.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19467.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19467.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19467.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19467.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12664","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12664)"},{"Id":"494229618","IsPullRequest":false,"CreatedAt":"2019-09-16T19:19:27","Actor":"sebastienros","Number":"12663","RawContent":null,"Title":"Latest version of 3.0.xx/release branch cannot be found","State":"open","Body":"The latest stable version of the sdk can be found here:\r\nhttps://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/latest.version\r\n\r\n```\r\n02df19ceac5d194d71b04c2823b9b02ced542c44\r\n3.0.100-rc2-014261\r\n```\r\n\r\nHowever when using this version with `dotnet-install` it can't be found. I waited a few hours in case it would be a transient issue but it's still occuring.\r\n\r\n```\r\n[12:14:50.094] dotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-rc2-014261/dotnet-sdk-3.0.100-rc2-014261-win-x64.zip\r\n[12:14:52.274] dotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-rc2-014261/dotnet-sdk-3.0.100-rc2-014261-win-x64.zip\r\n[12:14:52.276] dotnet-install: Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-rc2-014261/dotnet-dev-win-x64.3.0.100-rc2-014261.zip\r\n[12:14:54.384] dotnet-install: Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-rc2-014261/dotnet-dev-win-x64.3.0.100-rc2-014261.zip\r\n[12:14:54.434] Could not find/download: \".NET Core SDK\" with version = 3.0.100-rc2-014261\r\n[12:14:54.434] Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\n[12:14:54.434] At C:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\t1usq3ss.20k\\dotnet-install.ps1:633 char:5\r\n[12:14:54.434] +     throw \"Could not find/download: `\"$assetName`\" with version = $Sp ...\r\n[12:14:54.434] +     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n[12:14:54.434]     + CategoryInfo          : OperationStopped: (Could not find/...ET Core support:String) [], RuntimeException\r\n[12:14:54.434]     + FullyQualifiedErrorId : Could not find/download: \".NET Core SDK\" with version = 3.0.100-rc2-014261\r\n[12:14:54.434] Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support\r\n```","Url":"https://github.com/dotnet/cli/issues/12663","RelatedDescription":"Open issue \"Latest version of 3.0.xx/release branch cannot be found\" (#12663)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"497453537","IsPullRequest":false,"CreatedAt":"2019-09-24T04:51:49","Actor":"shyamutty","Number":"1566","RawContent":null,"Title":"Grpc .net client issue with .NET Core and .NET standard (2.0)","State":"closed","Body":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1202\tPackage Grpc.Net.Client 0.2.23-pre1 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Grpc.Net.Client 0.2.23-pre1 supports: netstandard2.1 (.NETStandard,Version=v2.1)\tGrpcGreeterClient\t\r\n\r\nGrpc.Net.Client 2.23.2 dependency is .NETStandard 2.1\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1566","RelatedDescription":"Closed issue \"Grpc .net client issue with .NET Core and .NET standard (2.0)\" (#1566)"},{"Id":"497424795","IsPullRequest":false,"CreatedAt":"2019-09-24T02:51:23","Actor":"goldmannyc","Number":"1565","RawContent":null,"Title":"Where to download the netstandard.dll 2.1?","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1565","RelatedDescription":"Open issue \"Where to download the netstandard.dll 2.1?\" (#1565)"},{"Id":"497309683","IsPullRequest":true,"CreatedAt":"2019-09-23T20:25:00","Actor":"terrajobst","Number":"1564","RawContent":null,"Title":"Ns21 summary","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1564","RelatedDescription":"Closed or merged PR \"Ns21 summary\" (#1564)"},{"Id":"497303937","IsPullRequest":true,"CreatedAt":"2019-09-23T20:15:45","Actor":"terrajobst","Number":"1563","RawContent":null,"Title":"Update diffs to final product","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1563","RelatedDescription":"Closed or merged PR \"Update diffs to final product\" (#1563)"},{"Id":"497024033","IsPullRequest":false,"CreatedAt":"2019-09-23T10:49:00","Actor":"yb199478","Number":"1562","RawContent":null,"Title":"Is it possible to add a method that kills the process tree?","State":"open","Body":".Net standard does not provide any method to kill a process tree.","Url":"https://github.com/dotnet/standard/issues/1562","RelatedDescription":"Open issue \"Is it possible to add a method that kills the process tree?\" (#1562)"},{"Id":"496771346","IsPullRequest":true,"CreatedAt":"2019-09-22T12:23:49","Actor":"dotnet-maestro[bot]","Number":"1561","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190921.2\r\n- **Date Produced**: 9/21/2019 6:26 PM\r\n- **Commit**: 4c074ae47660448eae66a362076124177709640a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19471.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19471.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1561","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1561)"},{"Id":"496650404","IsPullRequest":true,"CreatedAt":"2019-09-21T12:33:22","Actor":"dotnet-maestro[bot]","Number":"1560","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.3\r\n- **Date Produced**: 9/20/2019 4:58 PM\r\n- **Commit**: 0286bce5fd360207ca707fe7024248be428cf0e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1560","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1560)"},{"Id":"496648540","IsPullRequest":true,"CreatedAt":"2019-09-21T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1559","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1559","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1559)"},{"Id":"496322557","IsPullRequest":true,"CreatedAt":"2019-09-20T12:34:19","Actor":"dotnet-maestro[bot]","Number":"1558","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190920.1\r\n- **Date Produced**: 9/20/2019 10:21 AM\r\n- **Commit**: ce5dfbb9ad62f95885748c7e95ebcd3ca453d1bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19470.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19470.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1558","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1558)"},{"Id":"496312709","IsPullRequest":true,"CreatedAt":"2019-09-20T12:11:37","Actor":"dotnet-maestro[bot]","Number":"1557","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.8\r\n- **Date Produced**: 9/19/2019 10:34 PM\r\n- **Commit**: 67f02d61a4bff11930c10fb03f77bb4f93a37690\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1557","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1557)"},{"Id":"496006418","IsPullRequest":true,"CreatedAt":"2019-09-19T20:28:51","Actor":"dotnet-maestro[bot]","Number":"1556","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.4\r\n- **Date Produced**: 9/19/2019 6:33 PM\r\n- **Commit**: 19e994876c2c29b01b78cc7a2a7019eb7dfcbd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1556","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1556)"},{"Id":"495468017","IsPullRequest":false,"CreatedAt":"2019-09-19T14:08:45","Actor":"mstoffel-infraserv","Number":"1553","RawContent":null,"Title":"Regex Match Hangs forever","State":"closed","Body":"During processing with one of our applications we ran into an issue with Regex Match method hanging forever with a specific regular expression and specific text. See attached code for details.\r\n[BadRegex.zip](https://github.com/dotnet/standard/files/3628478/BadRegex.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1553","RelatedDescription":"Closed issue \"Regex Match Hangs forever\" (#1553)"},{"Id":"495764912","IsPullRequest":true,"CreatedAt":"2019-09-19T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1555","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190918.14\r\n- **Date Produced**: 9/19/2019 4:54 AM\r\n- **Commit**: 19b304f7815894b13cb61e87e1c9eac49a474c7e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19468.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19468.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1555","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1555)"},{"Id":"495754976","IsPullRequest":true,"CreatedAt":"2019-09-19T12:21:51","Actor":"dotnet-maestro[bot]","Number":"1554","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190918.2\r\n- **Date Produced**: 9/18/2019 8:56 PM\r\n- **Commit**: a28ee518026d2c5d477472f44d391cf9379fc7cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19468.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1554","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1554)"},{"Id":"495184946","IsPullRequest":true,"CreatedAt":"2019-09-18T12:19:39","Actor":"dotnet-maestro[bot]","Number":"1552","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190917.6\r\n- **Date Produced**: 9/18/2019 3:17 AM\r\n- **Commit**: 4ca1feeeb484e8a7089ce8a9d377703ad5b8a53e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19467.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19467.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1552","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1552)"},{"Id":"494584582","IsPullRequest":true,"CreatedAt":"2019-09-17T12:26:25","Actor":"dotnet-maestro[bot]","Number":"1551","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190916.8\r\n- **Date Produced**: 9/17/2019 7:53 AM\r\n- **Commit**: 4aea703673e942756c02b222e6b5babaf8612a25\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19466.8\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19466.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19466.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1551","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1551)"},{"Id":"494010485","IsPullRequest":true,"CreatedAt":"2019-09-16T12:21:02","Actor":"dotnet-maestro[bot]","Number":"1550","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190915.2\r\n- **Date Produced**: 9/15/2019 6:42 PM\r\n- **Commit**: e8efb815275c8323fedc950ca3596474fa5e23c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19465.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19465.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19465.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1550","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1550)"},{"Id":"493907721","IsPullRequest":false,"CreatedAt":"2019-09-16T08:19:30","Actor":"HamidTheGeek","Number":"1549","RawContent":null,"Title":"SqlParameter.DbType is set to Datetime when I am setting it to Time","State":"open","Body":"It seems like an intentional behavior but I don't get the reason. \r\n\r\n```c#\r\nvar param = new SqlParameter();\r\nparam.DbType = DbType.Time;\r\nConsole.WriteLine(param.DbType.ToString());\r\n```\r\n`DateTime` will be printed in the console. Therefore, the following value would be `false`.\r\n```c#\r\nvar param = new SqlParameter();\r\nparam.DbType = DbType.Time;\r\nvar value = param.DbType == DbType.Time;\r\n```\r\n\r\nI have tested this in `netstandard2.0`.","Url":"https://github.com/dotnet/standard/issues/1549","RelatedDescription":"Open issue \"SqlParameter.DbType is set to Datetime when I am setting it to Time\" (#1549)"},{"Id":"493730129","IsPullRequest":true,"CreatedAt":"2019-09-15T12:21:32","Actor":"dotnet-maestro[bot]","Number":"1548","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190914.4\r\n- **Date Produced**: 9/15/2019 5:48 AM\r\n- **Commit**: cbcc2a5e6f8be1e43b16874ed358c18c5d6bcd5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19464.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19464.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19464.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1548","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1548)"},{"Id":"493617725","IsPullRequest":true,"CreatedAt":"2019-09-14T12:32:41","Actor":"dotnet-maestro[bot]","Number":"1547","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190913.7\r\n- **Date Produced**: 9/14/2019 3:54 AM\r\n- **Commit**: f07730eedb1f7e2cb5e178d988bc2255f7ce7021\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19463.7\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19463.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19463.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1547","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1547)"},{"Id":"493616084","IsPullRequest":true,"CreatedAt":"2019-09-14T12:11:29","Actor":"dotnet-maestro[bot]","Number":"1546","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190913.3\r\n- **Date Produced**: 9/13/2019 11:47 PM\r\n- **Commit**: 7b731032220c21a3ed0021c72757b1f3122579b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19463.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1546","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1546)"},{"Id":"493518578","IsPullRequest":false,"CreatedAt":"2019-09-13T21:11:22","Actor":"BobHein","Number":"1545","RawContent":null,"Title":"When writing .Net Standard projects, is it OK to include Nuget packages which are part of .Net Core as dependencies?","State":"open","Body":"There are many Microsoft Nuget packages which contain classes which are not part of .Net Standard, but these packages are available as standalone Nuget packages. Most of them seem to be components of .Net core. A few Examples of many are:\r\n\r\nSystem.Data.SqlClient\r\nSystem.Data.DataSetExtensions\r\nSystem.Drawing.Common\r\n\r\nThese all seems to indicate that they are supported under .Net Standard in the Nuget documentation.  My questions:\r\n\r\n1) Are they really safe to use under .Net Standard DLLs, which will run in both .Net Core and .Net Framework environments?\r\n2) If they are safe to use, why aren't they included as part of .Net Standard? Note that I also want them to run under Linux as well.\r\n3) If they are not safe to use, why not? And how do you know what is and isn't safe to use?","Url":"https://github.com/dotnet/standard/issues/1545","RelatedDescription":"Open issue \"When writing .Net Standard projects, is it OK to include Nuget packages which are part of .Net Core as dependencies?\" (#1545)"},{"Id":"493297430","IsPullRequest":true,"CreatedAt":"2019-09-13T12:35:42","Actor":"dotnet-maestro[bot]","Number":"1544","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190912.15\r\n- **Date Produced**: 9/13/2019 5:08 AM\r\n- **Commit**: 31a5bba0e79a5ae875f691d70ec3b9789691136d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19462.15\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19462.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19462.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1544","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1544)"},{"Id":"493287649","IsPullRequest":true,"CreatedAt":"2019-09-13T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1543","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190912.5\r\n- **Date Produced**: 9/13/2019 5:59 AM\r\n- **Commit**: 6003ee189f456c92a18b097f226d4927309def27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19462.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1543","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1543)"},{"Id":"493039917","IsPullRequest":false,"CreatedAt":"2019-09-12T21:31:56","Actor":"Anipik","Number":"1542","RawContent":null,"Title":"Using Dotnet pack to produce the packages for Netstandard/Library packages.","State":"open","Body":"Currently we are using pkgproj and a lot of arcade & custom infrastructure to build packages.\r\n\r\nGoing forward we will be only publishing the ref assembly packages so it becomes more useful to move towards using dotnet pack.\r\n\r\nHaving the same architecture for preview and the final release will help us avoid problems in the release pipelines. \r\n\r\ncc @ericstj @ViktorHofer @danmosemsft ","Url":"https://github.com/dotnet/standard/issues/1542","RelatedDescription":"Open issue \"Using Dotnet pack to produce the packages for Netstandard/Library packages.\" (#1542)"},{"Id":"493029008","IsPullRequest":true,"CreatedAt":"2019-09-12T21:17:00","Actor":"mmitche","Number":"1541","RawContent":null,"Title":"Stabilize package verions","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1541","RelatedDescription":"Closed or merged PR \"Stabilize package verions\" (#1541)"},{"Id":"492776720","IsPullRequest":true,"CreatedAt":"2019-09-12T13:25:04","Actor":"dotnet-maestro[bot]","Number":"1540","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8358c059-232d-4dac-c08d-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190911.13\r\n- **Date Produced**: 9/12/2019 3:32 AM\r\n- **Commit**: 144ebb6ff997bf7a777206a233cdd8c03e13f60c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-rc2.19461.13\r\n  - **System.Reflection.Emit** -> 4.6.0-rc2.19461.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-rc2.19461.13\r\n\r\n[marker]: <> (End:8358c059-232d-4dac-c08d-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1540","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#1540)"},{"Id":"492776601","IsPullRequest":true,"CreatedAt":"2019-09-12T12:44:23","Actor":"dotnet-maestro[bot]","Number":"1539","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190911.10\r\n- **Date Produced**: 9/11/2019 11:00 PM\r\n- **Commit**: e32d9a2664a59eccbcbe5a4044cffbdd96538b5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19461.10\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19461.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19461.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1539","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1539)"},{"Id":"492775521","IsPullRequest":true,"CreatedAt":"2019-09-12T12:42:08","Actor":"dotnet-maestro[bot]","Number":"1538","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190911.7\r\n- **Date Produced**: 9/12/2019 6:45 AM\r\n- **Commit**: 8eb29ba860a3cfcfe68f9a8256caa7efc1f1aaba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19461.7\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1538","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1538)"},{"Id":"492761054","IsPullRequest":true,"CreatedAt":"2019-09-12T12:11:42","Actor":"dotnet-maestro[bot]","Number":"1537","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190911.7\r\n- **Date Produced**: 9/12/2019 6:45 AM\r\n- **Commit**: 8eb29ba860a3cfcfe68f9a8256caa7efc1f1aaba\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19461.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19461.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1537","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1537)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"497436491","IsPullRequest":true,"CreatedAt":"2019-09-24T05:22:45","Actor":"stephentoub","Number":"41274","RawContent":null,"Title":"Remove some unnecessary string concatenation from CertificatePal.AppendPrivateKeyInfo","State":"closed","Body":"A few minor tweaks.\r\ncc: @bartonjs","Url":"https://github.com/dotnet/corefx/pull/41274","RelatedDescription":"Closed or merged PR \"Remove some unnecessary string concatenation from CertificatePal.AppendPrivateKeyInfo\" (#41274)"},{"Id":"497420139","IsPullRequest":true,"CreatedAt":"2019-09-24T02:32:01","Actor":"bartonjs","Number":"41273","RawContent":null,"Title":"[release/3.0] Fix validity encoding for cert dates after 2049","State":"open","Body":"During the change from the reflection serializer to asn.xslt generation we lost\r\nthe metadata that said that X.509 Time GeneralizedTime values need to ignore\r\nfractional seconds.\r\n\r\nThat means we're generating fractional seconds when the input DateTimeOffset\r\nhas them, which means we violate RFC in our generated certificates.\r\n\r\nPort of #41269 to release/3.0.\r\nFixes #41248.","Url":"https://github.com/dotnet/corefx/pull/41273","RelatedDescription":"Open PR \"[release/3.0] Fix validity encoding for cert dates after 2049\" (#41273)"},{"Id":"497325102","IsPullRequest":true,"CreatedAt":"2019-09-24T02:22:36","Actor":"bartonjs","Number":"41269","RawContent":null,"Title":"Fix validity encoding for cert dates after 2049","State":"closed","Body":"During the change from the reflection serializer to asn.xslt generation we lost\r\nthe metadata that said that X.509 Time GeneralizedTime values need to ignore\r\nfractional seconds.\r\n\r\nThat means we're generating fractional seconds when the input DateTimeOffset\r\nhas them, which means we violate RFC in our generated certificates.\r\n\r\nIntroduced by #31960.\r\nAddresses #41248 in master.","Url":"https://github.com/dotnet/corefx/pull/41269","RelatedDescription":"Closed or merged PR \"Fix validity encoding for cert dates after 2049\" (#41269)"},{"Id":"497264110","IsPullRequest":true,"CreatedAt":"2019-09-24T00:20:50","Actor":"chidozieononiwu","Number":"41263","RawContent":null,"Title":"Public static fields should require no suffix","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/41263","RelatedDescription":"Closed or merged PR \"Public static fields should require no suffix\" (#41263)"},{"Id":"497376885","IsPullRequest":true,"CreatedAt":"2019-09-24T00:10:17","Actor":"carlossanlop","Number":"41272","RawContent":null,"Title":"Remove person who left the company","State":"closed","Body":"Co-owner of System.DirectoryServices.AccountManagement.","Url":"https://github.com/dotnet/corefx/pull/41272","RelatedDescription":"Closed or merged PR \"Remove person who left the company\" (#41272)"},{"Id":"497373823","IsPullRequest":true,"CreatedAt":"2019-09-23T23:18:29","Actor":"nabeelvalley","Number":"41271","RawContent":null,"Title":"Prevent Setting SmtpClient.DefaultCredentials clearing Credentials","State":"open","Body":"Prevent setting `SmtpClient.DefaultCredentials = false` from clearing out `SmtpClient.Credentials` if set before that as noted in issue #24514","Url":"https://github.com/dotnet/corefx/pull/41271","RelatedDescription":"Open PR \"Prevent Setting SmtpClient.DefaultCredentials clearing Credentials\" (#41271)"},{"Id":"497331647","IsPullRequest":true,"CreatedAt":"2019-09-23T21:13:09","Actor":"Anipik","Number":"41270","RawContent":null,"Title":"Removing Microsoft.bcl* packages","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/41270","RelatedDescription":"Open PR \"Removing Microsoft.bcl* packages\" (#41270)"},{"Id":"497324872","IsPullRequest":false,"CreatedAt":"2019-09-23T20:57:57","Actor":"stephentoub","Number":"41268","RawContent":null,"Title":"Remove dependencies on System.ComponentModel.TypeConverter.dll","State":"open","Body":"We have several assemblies, e.g. System.Data.Common.dll, System.Diagnostics.EventLog.dll, etc., which are pulled in by the default ASP.NET Core app templates (either directly or because of ASP.NET dependencies) and that in turn reference stuff from System.ComponentModel.TypeConverter.dll.  It has a gigantic closure with lots of stuff explicitly rooted, and is adding a huge amount of state to a trimmed app.","Url":"https://github.com/dotnet/corefx/issues/41268","RelatedDescription":"Open issue \"Remove dependencies on System.ComponentModel.TypeConverter.dll\" (#41268)"},{"Id":"497289146","IsPullRequest":false,"CreatedAt":"2019-09-23T19:40:27","Actor":"steveharter","Number":"41266","RawContent":null,"Title":"Verify code covererage for deserialize read methods where `reader.BytesConsumed != utf8Json.Length`","State":"open","Body":"`System.Text.Json.JsonSerializer.ParseCore()` and  `System.Text.Json.JsonSerializer.Deserialize()` both have a check like this:\r\n```cs\r\n                if (reader.BytesConsumed != actualByteCount)\r\n                {\r\n                    ThrowHelper.ThrowJsonException_DeserializeDataRemaining(\r\n                        actualByteCount, actualByteCount - reader.BytesConsumed);\r\n                }\r\n```\r\n\r\nHowever that is not getting hit by any tests. In fact, it is likely that it is now dead code because the reader verifies all data is read when `isFinalBlock==true` is passed into the reader (as is the case for the two methods above).\r\n\r\nWe need to verify that the `if` statement is still valid or whether it should be removed.","Url":"https://github.com/dotnet/corefx/issues/41266","RelatedDescription":"Open issue \"Verify code covererage for deserialize read methods where `reader.BytesConsumed != utf8Json.Length`\" (#41266)"},{"Id":"497287976","IsPullRequest":true,"CreatedAt":"2019-09-23T19:37:51","Actor":"GrabYourPitchforks","Number":"41265","RawContent":null,"Title":"Add more Unicode validation tests","State":"open","Body":"Added some outerloop unit tests that parse the raw Unicode data files, then call various APIs on `char` and `Rune` passing every possible input. The control results (as parsed from the raw data files) are compared against the runtime's output for correctness.\r\n\r\nThis is largely in preparation for updating the runtime's stored Unicode table to version 12.1 (it's currently 11.0), including bringing forward invariant case mapping information.\r\n\r\nThere are no functional runtime changes in this PR.","Url":"https://github.com/dotnet/corefx/pull/41265","RelatedDescription":"Open PR \"Add more Unicode validation tests\" (#41265)"},{"Id":"497272784","IsPullRequest":false,"CreatedAt":"2019-09-23T19:05:03","Actor":"MakisupaVT","Number":"41264","RawContent":null,"Title":"System.Management.MangementScope Exception with Dotnet Core 3 Release","State":"open","Body":"I'm attempting to upgrade a project to Dotnet Core 3 which uses System.Management for WMI calls. When connecting to my MangementScope:\r\n\r\n`var scope = new ManagementScope(@\"\\\\computer\\root\\CIMV2\", new ConnectionOptions());`\r\n\r\nProgram dies with the exception:\r\n\r\n> An unhandled exception has occurred while executing the request.\r\nSystem.Runtime.InteropServices.MarshalDirectiveException: Cannot marshal 'parameter #3': Cannot marshal a string by-value with the [Out] attribute.\r\n   at System.StubHelpers.StubHelpers.ThrowInteropParamException(Int32 resID, Int32 paramIdx)\r\n   at System.Management.ManagementPath.GetWbemPath(IWbemPath wbemPath)\r\n   at System.Management.ManagementScope.set_prvpath(ManagementPath value)\r\n   at System.Management.ManagementScope..ctor(ManagementPath path, ConnectionOptions options)\r\n\r\nI've seen the same Marshal exception on recent Core 3 preview posts that were supposedly fixed, but this issue seems to persist.","Url":"https://github.com/dotnet/corefx/issues/41264","RelatedDescription":"Open issue \"System.Management.MangementScope Exception with Dotnet Core 3 Release\" (#41264)"},{"Id":"497262695","IsPullRequest":false,"CreatedAt":"2019-09-23T18:42:57","Actor":"Tratcher","Number":"41262","RawContent":null,"Title":"HttpResponseMessage.TrailingHeaders blocks some headers","State":"open","Body":"HttpResponseMessage.TrailingHeaders re-used the HttpResponseHeaders collection that blocks some headers it thinks belong in HttpContentHeaders instead. With trailers you don't have that flexibility and this may block customer scenarios.\r\n\r\nA header like `Content-MD5` is restricted.\r\n- The header is received and stored in the collection.\r\n- `response.TrailingHeaders.ToString()` does show the value.\r\n- `response.TrailingHeaders.GetValues(\"Content-MD5\");` throws:\r\n```\r\nSystem.InvalidOperationException: Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.\r\nat System.Net.Http.Headers.HttpHeaders.GetHeaderDescriptor(String name)\r\nat System.Net.Http.Headers.HttpHeaders.GetValues(String name)\r\nat ResponseTrailers.Program.Main(String[] args) in C:\\temp\\ResponseTrailers\\Program.cs:line 30\r\n```\r\n- `response.TrailingHeaders.TryGetValues(\"Content-MD5\", out var values)` returns false.\r\n- Enumeration is the only way to get the value:\r\n```\r\nforeach (var header in response.TrailingHeaders)\r\n{\r\n    Console.WriteLine($\"Trailer {header.Key}: {string.Join(\", \", header.Value)}\");\r\n}\r\n```\r\n\r\nI reviewed the content headers that would be blocked and didn’t find any that people are likely to use, but devs are unpredictable. \r\n\r\nProposed change: HttpResponseMessage owns and creates the trailers collection. It could be changed to create it using a new internal constructor that specified different behavior. No public API changes would be required. Note there are plenty of headers that are prohibited in trailers that could be filtered by these rules instead of the content headers.\r\nhttps://github.com/dotnet/corefx/blob/9161098ade5075a8c126b2d7eb98abbeadff2961/src/System.Net.Http/src/System/Net/Http/HttpResponseMessage.cs#L123-L126\r\nhttps://github.com/dotnet/corefx/blob/9161098ade5075a8c126b2d7eb98abbeadff2961/src/System.Net.Http/src/System/Net/Http/Headers/HttpResponseHeaders.cs#L144-L145\r\n\r\nThe secondary issue is that HttpResponseHeaders has many properties that would not apply to trailers. That is a long term API wart, but not blocking.\r\n\r\n.NET Core 3.0 based repro. Run Kestrel directly, not IIS Express.\r\n[ResponseTrailers.zip](https://github.com/dotnet/corefx/files/3643612/ResponseTrailers.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/41262","RelatedDescription":"Open issue \"HttpResponseMessage.TrailingHeaders blocks some headers\" (#41262)"},{"Id":"497227153","IsPullRequest":true,"CreatedAt":"2019-09-23T17:23:05","Actor":"cston","Number":"41261","RawContent":null,"Title":"Use slow path for CallInstruction returning enum value #40976","State":"open","Body":"#### Description\r\nThe System.Linq.Expressions interpreter treats the result of a call to method that returns an enum value as the underlying type rather than the enum type.\r\n\t\t\r\n#### Customer Impact\r\nCustomer reported issue. Interpreting an Expression that calls a method returning an enum value can result in an `InvalidCastException`. See https://github.com/dotnet/corefx/issues/40968.\r\n\r\n#### Regression?\r\nYes, a regression from 2.2.\r\n\r\n#### Risk\r\nLow. The fix is to revert an optimization added to the Expression interpreter in 3.0 for enum values.\r\n\r\nPort of https://github.com/dotnet/corefx/pull/40976 and https://github.com/dotnet/corefx/pull/41218 to release/3.0.","Url":"https://github.com/dotnet/corefx/pull/41261","RelatedDescription":"Open PR \"Use slow path for CallInstruction returning enum value #40976\" (#41261)"},{"Id":"497217760","IsPullRequest":true,"CreatedAt":"2019-09-23T17:04:34","Actor":"Anipik","Number":"41259","RawContent":null,"Title":"Using stable version for restore","State":"closed","Body":"we just published the 3.0 ga release so no longer using a preview package\r\n\r\n\r\ncc @ericstj @ViktorHofer @safern ","Url":"https://github.com/dotnet/corefx/pull/41259","RelatedDescription":"Closed or merged PR \"Using stable version for restore\" (#41259)"},{"Id":"496960550","IsPullRequest":true,"CreatedAt":"2019-09-23T16:54:51","Actor":"ViktorHofer","Number":"41251","RawContent":null,"Title":"Update dotnet-tools.json","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/41251","RelatedDescription":"Closed or merged PR \"Update dotnet-tools.json\" (#41251)"},{"Id":"497209735","IsPullRequest":false,"CreatedAt":"2019-09-23T16:43:52","Actor":"Anipik","Number":"41258","RawContent":null,"Title":"Build-tests target is failing for Linux-musl x64 leg","State":"open","Body":"Error\r\n```\r\n/__w/1/s/dir.traversal.targets(81,3): warning MSB4011: \"/__w/1/s/Tools/Dumpling.targets\" cannot be imported again. It was already imported at \"/__w/1/s/Tools/tests.targets (558,3)\". This is most likely a build authoring error. This subsequent import will be ignored. [/__w/1/s/src/tests.builds]\r\n/__w/1/s/src/Microsoft.XmlSerializer.Generator/tests/Microsoft.XmlSerializer.Generator.Tests.csproj(59,5): error MSB3073: The command \"/__w/1/s/bin/testhost/netcoreapp-Linux-Debug-x64/dotnet /__w/1/s/bin/AnyOS.AnyCPU.Debug/Microsoft.XmlSerializer.Generator.Tests/netcoreapp/dotnet-Microsoft.XmlSerializer.Generator.dll /__w/1/s/bin/AnyOS.AnyCPU.Debug/Microsoft.XmlSerializer.Generator.Tests/netcoreapp/Microsoft.XmlSerializer.Generator.Tests.dll --force --quiet\" exited with code 134.\r\n    1 Warning(s)\r\n    1 Error(s)\r\n```\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=352350&view=logs\r\n","Url":"https://github.com/dotnet/corefx/issues/41258","RelatedDescription":"Open issue \"Build-tests target is failing for Linux-musl x64 leg\" (#41258)"},{"Id":"497221717","IsPullRequest":false,"CreatedAt":"2019-09-23T14:11:33","Actor":"kulashaker30","Number":"41260","RawContent":null,"Title":"WebClient - Connection: Keep-Alive ALWAYS present.","State":"open","Body":"# Issue Title\r\n\r\nWebClient is always sending 'Connection: Keep-Alive'\r\n\r\n# General\r\n\r\nI am having trouble with WebClient always getting timeout exception because the Connection header is always present in the request. \r\n","Url":"https://github.com/dotnet/corefx/issues/41260","RelatedDescription":"Open issue \"WebClient - Connection: Keep-Alive ALWAYS present.\" (#41260)"},{"Id":"497112555","IsPullRequest":false,"CreatedAt":"2019-09-23T13:53:00","Actor":"andrau","Number":"41257","RawContent":null,"Title":"Message of UriFormatException does not include offending URI","State":"open","Body":"When reading an URI or even several URIs from configuration files as strings and instantiating them using new Uri(string), it would be helpful if the exception for invalid URIs (e.g. because of typos) would include the offending Uri (especially if the exception is in a logfile of a production system where debugging is not an easily available option). \r\n\r\nThis would save the need to do a try-catch around every new Uri() and pretty-print the log message and allow safeguarding an entire initialization section with a more general try - catch(Exception) block without losing any information.\r\n\r\nExample Code:\r\n\r\n    static void UriFormatExceptionWithoutOffendingUri()\r\n    {\r\n      try\r\n      {\r\n        var uri1 = new Uri(\"http://www.valid.com\");\r\n        var uri2 = new Uri(\"foo//invalid\");\r\n        var uri3 = new Uri(\"https://www.secure.org\");\r\n      }\r\n      catch (UriFormatException ex)\r\n      {\r\n        Console.WriteLine(ex.Message);\r\n      }\r\n    }\r\n\r\nyields: \"Invalid URI: The format of the URI could not be determined.\"\r\n\r\nSo we cannot easily determine which URI was invalid\r\n\r\ndesired: \"Invalid URI: The format of the URI 'foo//invalid' could not be determined.\"\r\n\r\nWould that be safe or do you think this would disclose too much information?","Url":"https://github.com/dotnet/corefx/issues/41257","RelatedDescription":"Open issue \"Message of UriFormatException does not include offending URI\" (#41257)"},{"Id":"497059794","IsPullRequest":true,"CreatedAt":"2019-09-23T13:23:09","Actor":"dotnet-maestro[bot]","Number":"41255","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190922.2\r\n- **Date Produced**: 9/23/2019 1:07 AM\r\n- **Commit**: c72abf4cd9025b4897ca43f3a7bf46e52725fbce\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19472.2\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19472.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19472.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41255","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#41255)"},{"Id":"497092550","IsPullRequest":false,"CreatedAt":"2019-09-23T13:17:41","Actor":"JiriCepelkaFirstLineSoftware","Number":"41256","RawContent":null,"Title":"New interface implementing IDisposable exposing dispose state information ","State":"open","Body":"Sometimes I could be convenient to know if IDisposable implementation is already disposed without exercising some try/catch about [ObjectDisposedException](https://docs.microsoft.com/en-us/dotnet/api/system.objectdisposedexception?view=netframework-4.8) or other/similar cases.\r\n\r\nInstance:\r\n\r\n    var request = (HttpWebRequest)WebRequest.Create(\"http://www.seznam.cz\");\r\n    \r\n    using (var response = request.GetResponse())\r\n    {\r\n        using (var responseStream = response.GetResponseStream())\r\n        {\r\n            using (var streamReader = new StreamReader(responseStream))\r\n            {\r\n                responseStream.ReadByte();\r\n                WriteLine(\"responseStream: \" + responseStream.CanRead);\r\n            }\r\n    \r\n            WriteLine(\"responseStream: \" + responseStream.CanRead);\r\n            responseStream.ReadByte();        \r\n        }    \r\n    }\r\n\r\n`responseStream: True`\r\n`responseStream: False`\r\n\r\n`The request was aborted: The connection was closed unexpectedly.`\r\n`  + System.Net.ConnectStream.Read(byte[], int, int)`\r\n`  + System.IO.Stream.ReadByte()`\r\n\r\nInstead of rely on exact implementation one could easily extract information needed from bool property.\r\n\r\n    interface IDisposableExt : IDisposable { \r\n        bool AlreadyDisposed { get; }\r\n    }\r\n\r\nTo **prevent braking change** this could be new interface implementing IDisposable.\r\n\r\n**Implementation**\r\nYet nowadays developer is responsible for implementing IDisposable pattern properly. Specifically: call _GC.SuppressFinalize(this)_, release object resources only once, handle finalizer/consumer call case and further more responsibilities on this. Regard this pattern there already exists private field bool disposed.\r\n\r\n`private bool disposed = false;`\r\n\r\nSince that transforming such a private bool field to public bool property is little-effort change in responsibility (IDisposable pattern).\r\n\r\n`bool AlreadyDisposed { get; }`","Url":"https://github.com/dotnet/corefx/issues/41256","RelatedDescription":"Open issue \"New interface implementing IDisposable exposing dispose state information \" (#41256)"},{"Id":"497043206","IsPullRequest":false,"CreatedAt":"2019-09-23T11:34:49","Actor":"IJzerbaard","Number":"41254","RawContent":null,"Title":"Improve Vector<uint> and Vector<ushort> multiply","State":"open","Body":"I read on https://docs.microsoft.com/en-us/dotnet/api/system.numerics.vector-1?view=netcore-3.0 that Vector<uint> and Vector<ushort> multiplications do not map to intrinsics. Experimentation confirmed that.\r\n\r\nHowever, they could simply map to `(v)pmulld` (when available) and `(v)pmullw`.\r\n\r\nCurrent workaround:\r\n\r\n        static Vector<uint> Multiply(Vector<uint> a, Vector<uint> b)\r\n        {\r\n            return Vector.AsVectorUInt32(Vector.AsVectorInt32(a) * Vector.AsVectorInt32(b));\r\n        }\r\n\r\n        static Vector<ushort> Multiply(Vector<ushort> a, Vector<ushort> b)\r\n        {\r\n            return Vector.AsVectorUInt16(Vector.AsVectorInt16(a) * Vector.AsVectorInt16(b));\r\n        }\r\n\r\nbyte, sbyte, long and ulong could potentially be supported with multi-operation sequences, which is at least better than calling some scalar fallback, especially for the 8bit cases.","Url":"https://github.com/dotnet/corefx/issues/41254","RelatedDescription":"Open issue \"Improve Vector<uint> and Vector<ushort> multiply\" (#41254)"},{"Id":"496963807","IsPullRequest":false,"CreatedAt":"2019-09-23T08:39:32","Actor":"AndersMalmgren","Number":"41253","RawContent":null,"Title":"The SSL connection could not be established, see inner exception. Authentication failed, see inner exception. The buffers supplied to a function was too small","State":"open","Body":"We have  .NET Core rest service hosted in service fabric on Azure. Every hour we have a scheduled task fetches data from a remote service. This fails every now and then with a SSL exception, from Application insights\r\n\r\n> The SSL connection could not be established, see inner exception. Authentication failed, see inner exception. The buffers supplied to a function was too small\r\n\r\nStack trace from application insights\r\n\r\n> System.Net.Http.HttpRequestException:\r\n>    at System.Net.Http.ConnectHelper+<EstablishSslConnectionAsyncCore>d__5.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Http.HttpConnectionPool+<CreateConnectionAsync>d__44.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Http.HttpConnectionPool+<WaitForCreatedConnectionAsync>d__49.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Threading.Tasks.ValueTask`1.get_Result (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Http.HttpConnectionPool+<SendWithRetryAsync>d__39.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Http.RedirectHandler+<SendAsync>d__4.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Http.DiagnosticsHandler+<SendAsync>d__2.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler+<SendAsync>d__2.MoveNext (Microsoft.Extensions.Http, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler+<SendAsync>d__2.MoveNext (Microsoft.Extensions.Http, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Http.HttpClient+<FinishSendAsyncBuffered>d__62.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at IC.Eko.Core.ExternalPart.PageroOnlineClient+<ListFilesByAsync>d__4.MoveNext (IC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=nullIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: C:\\git\\projects\\EKO\\Eko\\src\\IC.Eko.Core\\ExternalPart\\PageroOnlineClient.csIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: 31)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at IC.Eko.Core.ExternalPart.PageroOnlineExternalPartAdapter+<>c__DisplayClass8_0+<<ListRemoteFilesAsync>b__0>d.MoveNext (IC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=nullIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: C:\\git\\projects\\EKO\\Eko\\src\\IC.Eko.Core\\ExternalPart\\PageroOnlineExternalPartAdapter.csIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: 104)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at IC.Eko.Utils.Extensions.EnumerableExtensions+<WhenAll>d__4`1.MoveNext (IC.Eko.Utils, Version=1.0.0.0, Culture=neutral, PublicKeyToken=nullIC.Eko.Utils, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: C:\\git\\projects\\EKO\\Eko\\src\\IC.Eko.Utils\\Extensions\\EnumerableExtensions.csIC.Eko.Utils, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: 53)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at IC.Eko.Core.ExternalPart.PageroOnlineExternalPartAdapter+<ListRemoteFilesAsync>d__8.MoveNext (IC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=nullIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: C:\\git\\projects\\EKO\\Eko\\src\\IC.Eko.Core\\ExternalPart\\PageroOnlineExternalPartAdapter.csIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: 95)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at IC.Eko.Core.ExternalPart.PageroOnlineExternalPartAdapter+<ListResponsesAsync>d__6.MoveNext (IC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=nullIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: C:\\git\\projects\\EKO\\Eko\\src\\IC.Eko.Core\\ExternalPart\\PageroOnlineExternalPartAdapter.csIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: 61)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at IC.Eko.Core.CommandHandlers.ExternalPart.FetchResponsesCommandHandler+<Handle>d__4.MoveNext (IC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=nullIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: C:\\git\\projects\\EKO\\Eko\\src\\IC.Eko.Core\\CommandHandlers\\ExternalPart\\FetchResponsesCommandHandler.csIC.Eko.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: 30)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at IC.Eko.Core.Cqs.Commands.CommandRunner+<ExecuteCommand>d__15.MoveNext (IC.Eko.Core.Cqs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=nullIC.Eko.Core.Cqs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: C:\\git\\projects\\EKO\\Eko\\src\\IC.Eko.Core.Cqs\\Commands\\CommandRunner.csIC.Eko.Core.Cqs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null: 151)\r\n> Inner exception System.Security.Authentication.AuthenticationException handled at System.Net.Http.ConnectHelper+<EstablishSslConnectionAsyncCore>d__5.MoveNext:\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Security.SslState.StartSendAuthResetSignal (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.CheckCompletionBeforeNextReceive (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartSendBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.ProcessReceivedBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartReadFrame (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartReceiveBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.CheckCompletionBeforeNextReceive (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartSendBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.ProcessReceivedBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartReadFrame (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartReceiveBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.CheckCompletionBeforeNextReceive (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartSendBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.ProcessReceivedBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartReadFrame (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartReceiveBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.CheckCompletionBeforeNextReceive (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartSendBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.ProcessReceivedBlob (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.StartReadFrame (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.PartialFrameCallback (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Security.SslState.ThrowIfExceptional (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.InternalEndProcessAuthentication (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslState.EndProcessAuthentication (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslStream.EndAuthenticateAsClient (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Net.Security.SslStream+<>c.<AuthenticateAsClientAsync>b__47_1 (System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n>    at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)\r\n>    at System.Net.Http.ConnectHelper+<EstablishSslConnectionAsyncCore>d__5.MoveNext (System.Net.Http, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a)\r\n> Inner exception System.ComponentModel.Win32Exception handled at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw:\r\n\r\nThe code is nothing special, we use the `IHttpClientFactory` in conjuction with `services.AddHttpClient();` in `Startup.cs`","Url":"https://github.com/dotnet/corefx/issues/41253","RelatedDescription":"Open issue \"The SSL connection could not be established, see inner exception. Authentication failed, see inner exception. The buffers supplied to a function was too small\" (#41253)"},{"Id":"496962700","IsPullRequest":true,"CreatedAt":"2019-09-23T08:37:06","Actor":"AntonLandor","Number":"41252","RawContent":null,"Title":"Added tests to cover all reachable branches when backed by JsonNode","State":"open","Body":"Solves [#41130](https://github.com/dotnet/corefx/issues/41130). Reachable branches covered.","Url":"https://github.com/dotnet/corefx/pull/41252","RelatedDescription":"Open PR \"Added tests to cover all reachable branches when backed by JsonNode\" (#41252)"},{"Id":"496957029","IsPullRequest":true,"CreatedAt":"2019-09-23T08:24:26","Actor":"tmds","Number":"41250","RawContent":null,"Title":"Socket: don't perform RST close on Dispose when user called Shutdown","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41189\r\nRegressed in https://github.com/dotnet/corefx/pull/38804.\r\n\r\nCC @halter73 @davidsh @wfurt @stephentoub @jkotalik","Url":"https://github.com/dotnet/corefx/pull/41250","RelatedDescription":"Open PR \"Socket: don't perform RST close on Dispose when user called Shutdown\" (#41250)"},{"Id":"496928572","IsPullRequest":true,"CreatedAt":"2019-09-23T07:08:46","Actor":"stephentoub","Number":"41249","RawContent":null,"Title":"Annotate System.Threading.Tasks.Parallel for nullability","State":"open","Body":"Contributes to https://github.com/dotnet/corefx/issues/40623","Url":"https://github.com/dotnet/corefx/pull/41249","RelatedDescription":"Open PR \"Annotate System.Threading.Tasks.Parallel for nullability\" (#41249)"},{"Id":"496895993","IsPullRequest":false,"CreatedAt":"2019-09-23T05:03:45","Actor":"anchernyaev","Number":"41248","RawContent":null,"Title":"System.Security.Cryptography.CryptographicException: Error occurred during a cryptographic operation when get end date from self signed certificate","State":"open","Body":"# Issue Title\r\n\r\nAfter update to .net core 3.0 (SDK 3.0.100-preview9-014004) we got a problem after generate self signed SSL-certificate.\r\n\r\n# General\r\n\r\nWe generate self signed certificate with start date and end date. But after generate, call method **certificate.NotAfter** leads to throw exception \r\n\r\n```\r\nSystem.Security.Cryptography.CryptographicException: Error occurred during a cryptographic operation.\r\n  at Internal.Cryptography.Pal.OpenSslX509CertificateReader.ExtractValidityDateTime(IntPtr validityDatePtr)\r\n  at Internal.Cryptography.Pal.OpenSslX509CertificateReader.get_NotAfter()\r\n  at System.Security.Cryptography.X509Certificates.X509Certificate.GetNotAfter()\r\n  at System.Security.Cryptography.X509Certificates.X509Certificate2.get_NotAfter().\r\n```\r\nWhen we used SDK 2.2 it worked correctly.\r\n\r\nGenerate certificate method:\r\n```\r\n\t\t{\r\n\t\t\tvar distinguishedName = new X500DistinguishedName($\"CN={SslCertificate.DefaultCertName}\");\r\n\r\n\t\t\tvar keySizeBits = 2048;\r\n\t\t\tusing (var rsa = RSA.Create(keySizeBits))\r\n\t\t\t{\r\n\t\t\t\tvar request = new CertificateRequest(distinguishedName, rsa, HashAlgorithmName.SHA256, RSASignaturePadding.Pkcs1);\r\n\r\n\t\t\t\tvar certificateKeyUsageExtension = new X509KeyUsageExtension(X509KeyUsageFlags.DataEncipherment | X509KeyUsageFlags.KeyEncipherment , false);\r\n\t\t\t\trequest.CertificateExtensions.Add(\r\n\t\t\t\t\tcertificateKeyUsageExtension);\r\n\r\n\t\t\t\t\r\n\t\t\t\tvar certificateServerValidationUsageExtension = new X509EnhancedKeyUsageExtension(\r\n\t\t\t\t\tnew OidCollection { new Oid(\"1.3.6.1.5.5.7.3.1\") }, false);\r\n\t\t\t\trequest.CertificateExtensions.Add(\r\n\t\t\t\t\tcertificateServerValidationUsageExtension);\r\n\t\t\t\t\r\n\r\n\t\t\t\tvar startCertificateDate = DateTime.UtcNow.AddDays(-1);\r\n\t\t\t\tvar endCertificateDate = DateTime.UtcNow.AddYears(50);\r\n\t\t\t\tvar certificate = request.CreateSelfSigned(startCertificateDate, endCertificateDate);\r\n\r\n\t\t\t\treturn certificate;\r\n\t\t\t}\r\n```\r\n\r\nAfter call _request.CreateSelfSigned(startCertificateDate, endCertificateDate)_ we got a certificate, from which it is impossible to get an end date. Method _certificate.NotAfter_ thrown exception.\r\n\r\nThe problem appears only on linux (Ubuntu 18.04). On windows it works correclty.\r\n\r\nCan you help? How can we fix this problem?","Url":"https://github.com/dotnet/corefx/issues/41248","RelatedDescription":"Open issue \"System.Security.Cryptography.CryptographicException: Error occurred during a cryptographic operation when get end date from self signed certificate\" (#41248)"},{"Id":"496864840","IsPullRequest":false,"CreatedAt":"2019-09-23T02:01:38","Actor":"Alan-Lun","Number":"41247","RawContent":null,"Title":"System.Net.Http.HttpRequestException","State":"open","Body":"version\r\n.Net core 2.2 API\r\n\r\nDocker File : FROM microsoft/dotnet:2.2-aspnetcore-runtime\r\n\r\ndotnet publish xxxx_API.csproj -c Release\r\n\r\nAWS ECS\r\n\r\nError:System.Net.Http.HttpRequestException: Too many open files in system —> System.Net.Sockets.SocketException: Too many open files in system\r\n\r\n想請問這是為什麼","Url":"https://github.com/dotnet/corefx/issues/41247","RelatedDescription":"Open issue \"System.Net.Http.HttpRequestException\" (#41247)"},{"Id":"496771171","IsPullRequest":true,"CreatedAt":"2019-09-22T13:07:54","Actor":"dotnet-maestro[bot]","Number":"41246","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190921.3\r\n- **Date Produced**: 9/22/2019 1:59 AM\r\n- **Commit**: 3fac26a68b0129375ffdffab989c2e576c401459\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19471.3\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19471.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19471.3\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41246","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#41246)"},{"Id":"496649884","IsPullRequest":true,"CreatedAt":"2019-09-21T13:22:42","Actor":"dotnet-maestro[bot]","Number":"41245","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190920.4\r\n- **Date Produced**: 9/21/2019 12:55 AM\r\n- **Commit**: 71c8b264f6dc8c32939cefbd15a8c8c3ffdf0a67\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19470.4\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19470.4\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19470.4\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41245","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#41245)"},{"Id":"496642965","IsPullRequest":false,"CreatedAt":"2019-09-21T10:50:25","Actor":"JulienM28","Number":"41244","RawContent":null,"Title":"System.Text.Json Deserialization issue","State":"open","Body":"I have a Json string starting like this:\r\n\r\n````json\r\n{\"nameid\":\"1\",\r\n.............\r\n\"exp\":1566506525\r\n.............\r\n}\r\n````\r\nthe nameid is part of claims and is automatically serialized to string.\r\n\r\nBut my dto defines an integer:\r\n\r\n````csharp\r\n   [JsonPropertyName(\"nameid\")]\r\n        public int Id { get; set; }\r\n............\r\n  [JsonPropertyName(\"exp\")]\r\n        public int Expiration { get; set; }\r\n````\r\nWhen I Deserialize the Json in Blazor WebAssembly App I get this error:\r\n\r\nWASM: Exception: The JSON value could not be converted to System.Int32. Path: $.nameid | LineNumber: 0 | BytePositionInLine: 13.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41244","RelatedDescription":"Open issue \"System.Text.Json Deserialization issue\" (#41244)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"497412663","IsPullRequest":true,"CreatedAt":"2019-09-24T02:00:50","Actor":"ivanbasov","Number":"38811","RawContent":null,"Title":"support local functions inside static in signature help","State":"open","Body":"Fixes signature help part of https://github.com/dotnet/roslyn/issues/38074\r\n\r\nThank you for discussions, @svick , @CyrusNajmabadi , @miloush and @333fred !\r\n\r\nTests were copied from https://github.com/dotnet/roslyn/commit/62918fc39895da53eb4ce76b4a83a949746220e8\r\nIt is weird but I could not cherry-pick it.","Url":"https://github.com/dotnet/roslyn/pull/38811","RelatedDescription":"Open PR \"support local functions inside static in signature help\" (#38811)"},{"Id":"497365254","IsPullRequest":true,"CreatedAt":"2019-09-24T01:30:06","Actor":"dotnet-bot","Number":"38805","RawContent":null,"Title":"Merge release/dev16.3 to release/dev16.4-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3 into release/dev16.4-preview1.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-to-release/dev16.4-preview1\ngit reset --hard upstream/release/dev16.4-preview1\ngit merge upstream/release/dev16.3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-to-release/dev16.4-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38805","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3 to release/dev16.4-preview1\" (#38805)"},{"Id":"497402278","IsPullRequest":true,"CreatedAt":"2019-09-24T01:15:52","Actor":"agocke","Number":"38810","RawContent":null,"Title":"Support events","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38810","RelatedDescription":"Open PR \"Support events\" (#38810)"},{"Id":"497402233","IsPullRequest":true,"CreatedAt":"2019-09-24T01:15:41","Actor":"agocke","Number":"38809","RawContent":null,"Title":"Use new Span/Memory APIs on System.Collections.Immutable","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38809","RelatedDescription":"Open PR \"Use new Span/Memory APIs on System.Collections.Immutable\" (#38809)"},{"Id":"497365661","IsPullRequest":true,"CreatedAt":"2019-09-24T00:30:16","Actor":"dotnet-bot","Number":"38806","RawContent":null,"Title":"Merge release/dev16.3 to release/dev16.3-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3 into release/dev16.3-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-to-release/dev16.3-vs-deps\ngit reset --hard upstream/release/dev16.3-vs-deps\ngit merge upstream/release/dev16.3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-to-release/dev16.3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38806","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3 to release/dev16.3-vs-deps\" (#38806)"},{"Id":"497365735","IsPullRequest":true,"CreatedAt":"2019-09-24T00:30:07","Actor":"dotnet-bot","Number":"38807","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38807","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#38807)"},{"Id":"497378823","IsPullRequest":true,"CreatedAt":"2019-09-23T23:37:47","Actor":"RikkiGibson","Number":"38808","RawContent":null,"Title":"Parse attributes on local function declarations","State":"open","Body":"Related to #38801\r\n\r\nAttributes on local function parameters or type parameters are already parsed as expected but they simply give errors. This PR adds an AttributeLists property to LocalFunctionStatementSyntax and parses the attributes into that property.","Url":"https://github.com/dotnet/roslyn/pull/38808","RelatedDescription":"Open PR \"Parse attributes on local function declarations\" (#38808)"},{"Id":"497364039","IsPullRequest":true,"CreatedAt":"2019-09-23T22:50:17","Actor":"genlu","Number":"38804","RawContent":null,"Title":"Merge release/dev16.3 into release/dev16.4-preview1","State":"closed","Body":"I'm planning to make another merge from dev16.4-preview1-vs-deps to dev16.4-preview, before flowing dev16.4 to master. Not sure if this is how we handled the code flow like this in the past. \r\n\r\n@dotnet/roslyn-infrastructure @jaredpar @agocke @JoeRobich ","Url":"https://github.com/dotnet/roslyn/pull/38804","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3 into release/dev16.4-preview1\" (#38804)"},{"Id":"496588006","IsPullRequest":true,"CreatedAt":"2019-09-23T22:00:08","Actor":"dotnet-bot","Number":"38790","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/38790","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#38790)"},{"Id":"497287607","IsPullRequest":true,"CreatedAt":"2019-09-23T21:32:13","Actor":"genlu","Number":"38800","RawContent":null,"Title":"Merge dev16.3-vs-deps to dev16.3","State":"closed","Body":"@dotnet/roslyn-infrastructure","Url":"https://github.com/dotnet/roslyn/pull/38800","RelatedDescription":"Closed or merged PR \"Merge dev16.3-vs-deps to dev16.3\" (#38800)"},{"Id":"497254521","IsPullRequest":true,"CreatedAt":"2019-09-23T21:14:33","Actor":"genlu","Number":"38799","RawContent":null,"Title":"Add telemetry for target type completion","State":"closed","Body":"#38096\r\nWant to monitor the perf and make sure it doesn't regress when rolling out to broader audience.\r\n\r\n@dotnet/roslyn-ide ","Url":"https://github.com/dotnet/roslyn/pull/38799","RelatedDescription":"Closed or merged PR \"Add telemetry for target type completion\" (#38799)"},{"Id":"497326072","IsPullRequest":true,"CreatedAt":"2019-09-23T21:00:44","Actor":"mavasani","Number":"38803","RawContent":null,"Title":"Add options to configure background analysis in the IDE","State":"open","Body":"1. Option to **enable power save mode**: Fixes #38429. This option turns off all the background analysis and also turns off remote host (RoslynCodeAnalysis service hub process) for C# and VB projects to reduce memory consumption in this mode. This option turns off most of the background analyses that are executed by the solution crawler. We still execute the bare minimum analysis for a reasonable editing experience: compiler analyzer to get compiler warnings/errors and also execute the add usings and remove unncessary usings analyzers. We can tune this required analysis set in future, as required.\r\n\r\n2. Option to **disable live analyzer execution**: There have been lot of requests in past to give users a single knob to turn on/off execution of all Roslyn analyzers in the IDE (third party analyzers + IDE code style analyzers which are enabled by default).\r\n\r\nI have also hooked up the low virtual memory listener which detects low VM and used to turn off just the full solution analysis to now instead turn on a forced power save mode for the current VS session (which also turns off full solution analysis, along with other background analyses).\r\n\r\n**TODOs:**\r\n1. More manual testing\r\n2. Get design consensus on the preferred option(s):\r\n   1. 2 options (current PR): Options to configure Power save mode and Analyzer execution\r\n   2. Single option to configure Power save mode only\r\n   3. Multiple options: One top level option to configure Power save mode, with lot of individual options to control individual background analyses. This is less preferable due to overload of options and information for users.","Url":"https://github.com/dotnet/roslyn/pull/38803","RelatedDescription":"Open PR \"Add options to configure background analysis in the IDE\" (#38803)"},{"Id":"497321192","IsPullRequest":true,"CreatedAt":"2019-09-23T20:49:52","Actor":"AlekseyTs","Number":"38802","RawContent":null,"Title":"Move optimization around use of Nullable type in Boolean Expressions into LocalRewriter and eliminate invalid optimization.","State":"open","Body":"Fixes #38305.\r\n\r\nThe goal of optimization is to eliminate the need to deal with instances of Nullable(Of Boolean) type as early as possible, and, as a result, simplify evaluation of built-in OrElse/AndAlso operators by eliminating the need to use three-valued Boolean logic. The optimization is possible because when an entire Boolean Expression is evaluated to Null, that has the same effect as if result of evaluation was False. However, we do want to preserve the original order of evaluation, according to language rules.","Url":"https://github.com/dotnet/roslyn/pull/38802","RelatedDescription":"Open PR \"Move optimization around use of Nullable type in Boolean Expressions into LocalRewriter and eliminate invalid optimization.\" (#38802)"},{"Id":"496578249","IsPullRequest":true,"CreatedAt":"2019-09-23T20:35:38","Actor":"dibarbet","Number":"38787","RawContent":null,"Title":"Allow selection in move type to file","State":"closed","Body":"Currently, move type to file only works if you put the caret in the type name.  So use the new refactoring helpers to define the span where move type to file should be offered.","Url":"https://github.com/dotnet/roslyn/pull/38787","RelatedDescription":"Closed or merged PR \"Allow selection in move type to file\" (#38787)"},{"Id":"496977794","IsPullRequest":false,"CreatedAt":"2019-09-23T20:34:42","Actor":"roji","Number":"38795","RawContent":null,"Title":"Nullability-related bug producing BadImageFormatException","State":"closed","Body":"While doing some NRE work on Npgsql, I came across a subtle bug that triggers a BadImageFormatException in runtime. Following is a minimal repro, using dotnet SDK 3.0.100-rc1-014190:\r\n\r\n```c#\r\nstatic class Program\r\n{\r\n    static void Main()\r\n    {\r\n        var x = typeof(Bar<>);\r\n        Console.WriteLine(x);\r\n    }\r\n}\r\n\r\npublic class Bar<T>\r\n{\r\n    public override bool Equals(object? o) => o is Bar<T> range;\r\n    public override int GetHashCode() => 0;\r\n}\r\n```\r\n\r\nDisabling nullability specifically around the Equals method makes the error go away.\r\n\r\nThe repro is available in https://github.com/roji/CompilerNullabilityBug.","Url":"https://github.com/dotnet/roslyn/issues/38795","RelatedDescription":"Closed issue \"Nullability-related bug producing BadImageFormatException\" (#38795)"},{"Id":"497290208","IsPullRequest":false,"CreatedAt":"2019-09-23T19:42:46","Actor":"RikkiGibson","Number":"38801","RawContent":null,"Title":"Test plan for \"local function attributes\"","State":"open","Body":"Championed issue: dotnet/csharplang#1888\r\n\r\n- [ ] attribute on declaration\r\n- [ ] attribute on return type\r\n- [ ] attribute on type parameters\r\n- [ ] attribute on parameters\r\n- [ ] interaction with potentially ambiguous syntax?\r\n- [ ] speculative semantic model #24135\r\n- [ ] ...\r\n","Url":"https://github.com/dotnet/roslyn/issues/38801","RelatedDescription":"Open issue \"Test plan for \"local function attributes\"\" (#38801)"},{"Id":"497223639","IsPullRequest":false,"CreatedAt":"2019-09-23T17:15:02","Actor":"vsfeedback","Number":"38798","RawContent":null,"Title":"Indent characters change from tabs to spaces at line break","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/742548/indent-characters-change-from-tabs-to-spaces-at-li.html)._\n\n---\n[regression] [worked-in:16.3 preview 1]\r\nmy settings\nindenting: Smart\nTab size: 4\nIndent size: 4\nKeep tabs: true\n\nThe sample code is as follows.\n\n```cs\nnamespace Sample\n{\n\tpublic class Hoge\n\t{\n\t\tpublic int Test()\n\t\t{\n\t\t\tint x = 1;\n\t\t\treturn x;\n\t\t}\n\t}\n}\n```\n\nIf you place a cursor at the beginning of &quot;int x&quot; and type enter key, the indent of the new line is incorrect.\nThere should be 3 tabs but 3 spaces as shown in the code below.\n\n```cs\nnamespace Sample\n{\n\tpublic class Hoge\n\t{\n\t\tpublic int Test()\n\t\t{\n\t\t\t\nint x = 1;\n\t\t\treturn x;\n\t\t}\n\t}\n}\n```\n\nIn VS2019 (not preview) and previous VS2019 preview, the line was broken correctly like the following code.\n\n```cs\nnamespace Sample\n{\n\tpublic class Hoge\n\t{\n\t\tpublic int Test()\n\t\t{\n\nint x = 1;\n\t\t\treturn x;\n\t\t}\n\t}\n}\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/23/2019, 02:37 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/38798","RelatedDescription":"Open issue \"Indent characters change from tabs to spaces at line break\" (#38798)"},{"Id":"497187951","IsPullRequest":false,"CreatedAt":"2019-09-23T15:59:55","Actor":"NextTurn","Number":"38797","RawContent":null,"Title":"Documentation comment auto completion should not generate <returns> for indexers","State":"open","Body":"**Version Used**: Visual Studio 2019 Version 16.3\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\npublic class Program\r\n{\r\n    public object this[int index]\r\n    {\r\n        get => throw new System.NotImplementedException();\r\n        set => throw new System.NotImplementedException();\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\n```cs\r\npublic class Program\r\n{\r\n    /// <summary>\r\n    /// \r\n    /// </summary>\r\n    /// <param name=\"index\"></param>\r\n    /// <value></value>\r\n    public object this[int index]\r\n    {\r\n        get => throw new System.NotImplementedException();\r\n        set => throw new System.NotImplementedException();\r\n    }\r\n}\r\n```\r\n\r\n-or-\r\n\r\n```cs\r\npublic class Program\r\n{\r\n    /// <summary>\r\n    /// \r\n    /// </summary>\r\n    /// <param name=\"index\"></param>\r\n    public object this[int index]\r\n    {\r\n        get => throw new System.NotImplementedException();\r\n        set => throw new System.NotImplementedException();\r\n    }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\n```cs\r\npublic class Program\r\n{\r\n    /// <summary>\r\n    /// \r\n    /// </summary>\r\n    /// <param name=\"index\"></param>\r\n    /// <returns></returns>\r\n    public object this[int index]\r\n    {\r\n        get => throw new System.NotImplementedException();\r\n        set => throw new System.NotImplementedException();\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/38797","RelatedDescription":"Open issue \"Documentation comment auto completion should not generate <returns> for indexers\" (#38797)"},{"Id":"497168667","IsPullRequest":false,"CreatedAt":"2019-09-23T15:26:04","Actor":"GrimGadget","Number":"38796","RawContent":null,"Title":"IDE0067 False Positive","State":"open","Body":"**Version Used**: VS2019 16.2.5 \r\n\r\n**Steps to Reproduce**:\r\n```csharp\r\n        public override Stream ToStream<T>(T input)\r\n        {\r\n            if (input == null) throw new ArgumentNullException(nameof(input));\r\n\r\n#pragma warning disable IDE0067 // Dispose objects before losing scope\r\n            // This method creates a new stream.  It's pointless to return a disposed object.\r\n            return ToStreamAsync(input).GetAwaiter().GetResult();\r\n#pragma warning restore IDE0067 // Dispose objects before losing scope\r\n        }\r\n```\r\n\r\n**Expected Behavior**:\r\nDisposed state of the return value should be ignored.  It's never appropriate for a return value to be disposed when returned.  Particularly if the instance is created as new inside the method and then used as a return value.\r\n\r\n**Actual Behavior**:\r\nGet IDE0067 warning saying the object should be disposed before losing scope.\r\n","Url":"https://github.com/dotnet/roslyn/issues/38796","RelatedDescription":"Open issue \"IDE0067 False Positive\" (#38796)"},{"Id":"496660081","IsPullRequest":false,"CreatedAt":"2019-09-22T19:30:36","Actor":"AArnott","Number":"38791","RawContent":null,"Title":"Compiler incorrectly interprets ?? operator and reports CS8602 on later dereference","State":"closed","Body":"**Version Used**: .NET Core SDK 3.0.100-rc1-014190\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\ngit clone https://github.com/aarnott/Nerdbank.Streams.git\r\ncd Nerdbank.Streams\r\ngit checkout efceb295908f8d5fe1904ed139347fcf12c0871e\r\ndotnet build src\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo warnings.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nStreamPipeReader.cs(128,97): warning CS8602: Dereference of a possibly null reference. [D:\\git\\Nerdbank.Streams\\src\\Nerdbank.Streams\\Nerdbank.Streams.csproj]\r\nStreamPipeWriter.cs(98,97): warning CS8602: Dereference of a possibly null reference. [D:\\git\\Nerdbank.Streams\\src\\Nerdbank.Streams\\Nerdbank.Streams.csproj]\r\nMultiplexingStream.Channel.cs(252,25): warning CS8602: Dereference of a possibly null reference. [D:\\git\\Nerdbank.Streams\\src\\Nerdbank.Streams\\Nerdbank.Streams.csproj]\r\nMultiplexingStream.Channel.cs(592,21): warning CS8602: Dereference of a possibly null reference. [D:\\git\\Nerdbank.Streams\\src\\Nerdbank.Streams\\Nerdbank.Streams.csproj]\r\nMultiplexingStream.Channel.cs(252,25): warning CS8602: Dereference of a possibly null reference. [D:\\git\\Nerdbank.Streams\\src\\Nerdbank.Streams\\Nerdbank.Streams.csproj]\r\nStreamPipeWriter.cs(98,97): warning CS8602: Dereference of a possibly null reference. [D:\\git\\Nerdbank.Streams\\src\\Nerdbank.Streams\\Nerdbank.Streams.csproj]\r\nStreamPipeReader.cs(128,97): warning CS8602: Dereference of a possibly null reference. [D:\\git\\Nerdbank.Streams\\src\\Nerdbank.Streams\\Nerdbank.Streams.csproj]\r\nMultiplexingStream.Channel.cs(592,21): warning CS8602: Dereference of a possibly null reference. [D:\\git\\Nerdbank.Streams\\src\\Nerdbank.Streams\\Nerdbank.Streams.csproj]\r\n```\r\n\r\nEach of these warnings comes after a `??` operator. For example:\r\n\r\n```cs\r\n            if (this.flushCancellationSource?.IsCancellationRequested ?? true)\r\n            {\r\n                this.flushCancellationSource = new CancellationTokenSource();\r\n            }\r\n\r\n            using (var cts = CancellationTokenSource.CreateLinkedTokenSource(cancellationToken, this.flushCancellationSource.Token))\r\n```\r\n\r\nThe compiler flags the last dereference of `this.flushCancellationSource` as a possible null dereference even though the if check above guarantees otherwise.","Url":"https://github.com/dotnet/roslyn/issues/38791","RelatedDescription":"Closed issue \"Compiler incorrectly interprets ?? operator and reports CS8602 on later dereference\" (#38791)"},{"Id":"496463504","IsPullRequest":true,"CreatedAt":"2019-09-22T16:17:19","Actor":"gafter","Number":"38784","RawContent":null,"Title":"Add a comment explaining the recently added cycle detection code and its relation to the language specification.","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38784","RelatedDescription":"Closed or merged PR \"Add a comment explaining the recently added cycle detection code and its relation to the language specification.\" (#38784)"},{"Id":"496795276","IsPullRequest":false,"CreatedAt":"2019-09-22T15:34:05","Actor":"huoyaoyuan","Number":"38794","RawContent":null,"Title":"Quick info cannot show type for linq group variable declaration","State":"open","Body":"**Version Used**: \r\nVS 16.3 Preview 4\r\n\r\n<img width=\"355\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5644458/65390432-5fdfa700-dd91-11e9-9d33-aa3b928a0e23.png\">\r\n<img width=\"334\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5644458/65390436-70901d00-dd91-11e9-968b-fdb90221027b.png\">\r\n","Url":"https://github.com/dotnet/roslyn/issues/38794","RelatedDescription":"Open issue \"Quick info cannot show type for linq group variable declaration\" (#38794)"},{"Id":"496794507","IsPullRequest":true,"CreatedAt":"2019-09-22T15:28:33","Actor":"mavasani","Number":"38793","RawContent":null,"Title":"Analyzer driver perf optimization","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38793","RelatedDescription":"Open PR \"Analyzer driver perf optimization\" (#38793)"},{"Id":"496793475","IsPullRequest":true,"CreatedAt":"2019-09-22T15:21:29","Actor":"mavasani","Number":"38792","RawContent":null,"Title":"Allow disabled by default analyzers to be enabled with editorconfig e…","State":"open","Body":"…ntries.\r\n\r\nWe now mark analyzer as not suppressed if at least one syntax tree in compilation has DiagnosticOptions that has non-suppress severity.","Url":"https://github.com/dotnet/roslyn/pull/38792","RelatedDescription":"Open PR \"Allow disabled by default analyzers to be enabled with editorconfig e…\" (#38792)"},{"Id":"496586241","IsPullRequest":true,"CreatedAt":"2019-09-20T23:50:51","Actor":"jaredpar","Number":"38789","RawContent":null,"Title":"Enable more xUnit analyzer rules","State":"open","Body":"This enables the following xUnit analyzer rules:\r\n\r\n- xUnit2000 - literal or constant value should be first in Assert.Equal\" is a valid assert, but very noisy. Will do the refactoring later\r\n- xUnit2003 - do not use Assert.Equal for null value\" is a valid assert, but very noisy right now \r\n- xUnit2004 - do not use Assert.Equal for boolean conditions\" is a valid assert, but very noisy right now\r\n- xUnit2007 - do not use Assert.IsType(typeof...)\" is a valid assert, but very noisy right now \r\n- xUnit2015 - do not use typeof() expression to check the exception type. \" is a valid assert, but very noisy right now \r\n","Url":"https://github.com/dotnet/roslyn/pull/38789","RelatedDescription":"Open PR \"Enable more xUnit analyzer rules\" (#38789)"},{"Id":"496579831","IsPullRequest":true,"CreatedAt":"2019-09-20T23:12:59","Actor":"RikkiGibson","Number":"38788","RawContent":null,"Title":"Use default parameter values in flow analysis","State":"open","Body":"Closes #37903\r\n\r\n/cc @jcouv. This flows data around in a somewhat disjunct way but I felt that adding lots of additional return values (i.e. `ImmutableArray<BoundExpression> arguments, ImmutableArray<BoundExpression> argumentsNoConversions, ImmutableArray<Conversion> conversions`) which \"augment\" the original arrays with the default parameter values was also kind of clumsy.","Url":"https://github.com/dotnet/roslyn/pull/38788","RelatedDescription":"Open PR \"Use default parameter values in flow analysis\" (#38788)"},{"Id":"496572854","IsPullRequest":true,"CreatedAt":"2019-09-20T22:39:18","Actor":"jcouv","Number":"38786","RawContent":null,"Title":"Implement lambda discard parameters","State":"open","Body":"In the new language version, when more than one parameter of a lambda/delegate is an underscore, we allow it and bind them as discard parameter symbols (which are like regular parameters, but without names).\r\n\r\nhttps://github.com/dotnet/csharplang/issues/111","Url":"https://github.com/dotnet/roslyn/pull/38786","RelatedDescription":"Open PR \"Implement lambda discard parameters\" (#38786)"},{"Id":"496480762","IsPullRequest":true,"CreatedAt":"2019-09-20T20:27:10","Actor":"jcouv","Number":"38785","RawContent":null,"Title":"Refresh features/compiler branch with latest bits from master","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/38785","RelatedDescription":"Closed or merged PR \"Refresh features/compiler branch with latest bits from master\" (#38785)"},{"Id":"496439757","IsPullRequest":false,"CreatedAt":"2019-09-20T16:21:32","Actor":"0xd4d","Number":"38783","RawContent":null,"Title":"Operators are classified as methods in tooltips","State":"open","Body":"**Version Used**: VS 16.2\r\n\r\n**Steps to Reproduce**:\r\n\r\n- Hover over any of the operators below `==`, `!=`, `<`\r\n\r\n```C#\r\nnamespace ConsoleApp3\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            _ = 1 == 1;\r\n            _ = 1 != 1;\r\n            _ = 1 < 1;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThey get the same color as shown in the editor\r\n\r\n**Actual Behavior**:\r\n\r\nThey get the same color as methods\r\n\r\nThis also happens in the 'Find All References' window.","Url":"https://github.com/dotnet/roslyn/issues/38783","RelatedDescription":"Open issue \"Operators are classified as methods in tooltips\" (#38783)"},{"Id":"496400898","IsPullRequest":false,"CreatedAt":"2019-09-20T15:00:05","Actor":"hugoqribeiro","Number":"38782","RawContent":null,"Title":"Problem with using common .editorconfig file (imported in csproj) in Visual Studio 2019 Preview 4","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2019 Preview 4\r\nMicrosoft.CodeAnalysis.FxCopAnalyzers v2.9.4\r\n\r\n**Steps to Reproduce**:\r\n\r\nI want to streamlime code analysis and the respetive rules accross multiple projects and teams.\r\n\r\nWe used to do that by having a NuGet package that imported analyzers to projects (Microsoft.CodeAnalysis.FxCopAnalyzers and StyleCop.Analyzers) and defined a ruleset to define how each rule was handled by VS (error, warning, etc.).\r\n\r\nI have been trying to setup this using a common .editorconfig file instead of the ruleset. The problem is that settings like the following just seem to be ignored when the .editorconfig file is imported from a shared folder.\r\n\r\n```\r\ndotnet_diagnostic.CA1062.severity = error\r\n```\r\n\r\nFor the purpose of testing this, I have a very simple scenario that illustrates the problem.\r\n\r\nThe .editorconfig file is as follows:\r\n\r\n```\r\n[*.cs]\r\ndotnet_diagnostic.CA1062.severity = error\r\n#dotnet_code_quality.null_check_validation_methods = NotNull\r\n```\r\n\r\nNow this file is imported in a csproj like this:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>netstandard2.0</TargetFramework>\r\n    </PropertyGroup>\r\n    <Import Project=\"..\\..\\_Shared\\Build.props\" />\r\n    <ItemGroup>\r\n        <PackageReference Include=\"Microsoft.CodeAnalysis.FxCopAnalyzers\" Version=\"2.9.4\">\r\n            <PrivateAssets>All</PrivateAssets>\r\n        </PackageReference>\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\nBuild.props is like this:\r\n\r\n```\r\n<Project>\r\n    <PropertyGroup>\r\n    <SkipDefaultEditorConfigAsAdditionalFile>true</SkipDefaultEditorConfigAsAdditionalFile>\r\n    </PropertyGroup>\r\n    <ItemGroup Condition=\"Exists('$(MSBuildThisFileDirectory)\\.editorconfig')\" >\r\n        <AdditionalFiles Include=\"$(MSBuildThisFileDirectory)\\.editorconfig\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe following code is supposed to trigger an **error on CA1062** (validation of input):\r\n\r\n```\r\npublic int Calculate(InputData input)\r\n{\r\n    SmartGuard.NotNull(nameof(input), input);\r\n    if (this.Multiply)\r\n    {\r\n        return input.Value * 2;\r\n    }\r\n    else\r\n    {\r\n        return input.Value + 2;\r\n    }\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\nBut the result is a **warning**, which means that `CA1062.severity` is being ignored.\r\n\r\nNow, if I change .editorconfig and uncomment the second line:\r\n\r\n```\r\n[*.cs]\r\ndotnet_diagnostic.CA1062.severity = error\r\ndotnet_code_quality.null_check_validation_methods = NotNull\r\n```\r\n\r\nThe error goes way which means that `null_check_validation_methods` is being considered.\r\n\r\nWhy is that `CA1062.severity` is being ignored?\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/38782","RelatedDescription":"Open issue \"Problem with using common .editorconfig file (imported in csproj) in Visual Studio 2019 Preview 4\" (#38782)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"496108391","IsPullRequest":false,"CreatedAt":"2019-09-24T00:16:58","Actor":"Unreal-System","Number":"7795","RawContent":null,"Title":".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.","State":"closed","Body":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds.","Url":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795)"},{"Id":"496830692","IsPullRequest":false,"CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Number":"7796","RawContent":null,"Title":"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure","State":"open","Body":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Open issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796)"},{"Id":"494589847","IsPullRequest":true,"CreatedAt":"2019-09-17T14:13:36","Actor":"Dotnet-GitSync-Bot","Number":"7794","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7794","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7794)"},{"Id":"494273259","IsPullRequest":true,"CreatedAt":"2019-09-16T23:13:23","Actor":"Dotnet-GitSync-Bot","Number":"7793","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7793","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7793)"},{"Id":"493430075","IsPullRequest":false,"CreatedAt":"2019-09-16T15:38:33","Actor":"RalfKornmannEnvision","Number":"7790","RawContent":null,"Title":"GC on ARM64 based \"kind of unix\" system","State":"closed","Body":"I am sorry to bother again. After fixing some more minor issues and brush up my ARM64 assembler knowledge I was finally able to run a simple hello world on my ARM64 system without crashing. Doing things like writing to the log (the system doesn't have a text based console at all), Thread.Sleep, Environment.TickCount, printing the command line arguments etc works fine. But than I made the \"mistake\" to trigger the GC. \r\n\r\nTo make a long story short after some more debugging I noticed that the unwind of the stack does not work. The reason was pretty obvious. Libunwind doesn't have any information about the function were the stack walk should be started. I am aware that there are some parts missing for ARM64 targets that I need to fill but there is one question I was not able to answer so far. Does the GC only need unwind information for the managed code part? Or do I need to provide information for the C/C++ parts and even the dynamic libs of the OS? I am aware that libunwind can fetch these information by it's own. Unfortunately the function that it uses for this is not supported by the OS my system is using.  I may be able to get the unwind sections from the runtime C/C++ code.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7790","RelatedDescription":"Closed issue \"GC on ARM64 based \"kind of unix\" system\" (#7790)"},{"Id":"493684541","IsPullRequest":true,"CreatedAt":"2019-09-15T07:35:11","Actor":"Dotnet-GitSync-Bot","Number":"7792","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7792","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7792)"},{"Id":"493500562","IsPullRequest":true,"CreatedAt":"2019-09-14T14:02:26","Actor":"MichalStrehovsky","Number":"7791","RawContent":null,"Title":"Fix casting to pointers","State":"closed","Body":"Porting a fix made for .NET Native.\r\n\r\nA popular game engine has a `castclass void*` IL instruction in one of the generated files it ships with. This construct is weird enough that it crashes the .NET Native compiler. It doesn't crash the CoreRT compiler, but we still want the runtime side of the fix.","Url":"https://github.com/dotnet/corert/pull/7791","RelatedDescription":"Closed or merged PR \"Fix casting to pointers\" (#7791)"},{"Id":"492984849","IsPullRequest":true,"CreatedAt":"2019-09-13T13:52:21","Actor":"Dotnet-GitSync-Bot","Number":"7789","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @NextTurn","Url":"https://github.com/dotnet/corert/pull/7789","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7789)"},{"Id":"489459547","IsPullRequest":true,"CreatedAt":"2019-09-12T19:12:20","Actor":"cshung","Number":"7775","RawContent":null,"Title":"[WIP] Complete the filtering for MethodImpl.AggressiveOptimization","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7775","RelatedDescription":"Closed or merged PR \"[WIP] Complete the filtering for MethodImpl.AggressiveOptimization\" (#7775)"},{"Id":"492918947","IsPullRequest":true,"CreatedAt":"2019-09-12T19:11:42","Actor":"Dotnet-GitSync-Bot","Number":"7788","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @TylerBrinkley @tarekgh @obligaron @marek-safar @jkotas @sywhang","Url":"https://github.com/dotnet/corert/pull/7788","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7788)"},{"Id":"491162081","IsPullRequest":true,"CreatedAt":"2019-09-11T00:16:26","Actor":"Dotnet-GitSync-Bot","Number":"7786","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7786","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7786)"},{"Id":"490571600","IsPullRequest":true,"CreatedAt":"2019-09-09T17:52:58","Actor":"davidwrighton","Number":"7779","RawContent":null,"Title":"Resource writing","State":"closed","Body":"- Refactor the win32 resource reading code to use more natural managed data structures\r\n- Build a Win32 resource emitter on top of refactored data structures\r\n- Replace resource section copy logic with new node to generate win32 resources","Url":"https://github.com/dotnet/corert/pull/7779","RelatedDescription":"Closed or merged PR \"Resource writing\" (#7779)"},{"Id":"491229182","IsPullRequest":false,"CreatedAt":"2019-09-09T17:33:38","Actor":"RalfKornmannEnvision","Number":"7787","RawContent":null,"Title":"finally funclets brocken for ARM64!?","State":"open","Body":"I am not sure if this is a corert or coreclr issue but as I am working on a corert port for an custom ARM64 system I start with posting it here.\r\n\r\nAfter adding code to the objectwriter and the ilcompiler I managed to get a simple hello world app running to the main method. But it than crashed during the shutdown. After some debugging i figured out that the static constructors are never called. After some more debugging I noticed that ClassConstructorRunner.GetCctor corrupts the stack frame,\r\n\r\nIt happens at the end of the method in an assembler block that i believe is the finally funclet for the using. It looks like this\r\n\r\n  28667c: a9be7bfd stp x29, x30, [sp, #-32]!\r\n  286680: f90013f3 str x19, [sp, #32]\r\n  286684: 9103a3a0 add x0, x29, #0xe8\r\n  286688: 97fc0d42 bl 189b90 <S_P_CoreLib_System_Threading_LockHolder__Dispose>\r\n  28668c: d503201f nop\r\n  286690: d503201f nop\r\n  286694: f94013f3 ldr x19, [sp, #32]\r\n  286698: a8c27bfd ldp x29, x30, [sp], #32\r\n  28669c: d65f03c0 ret\r\n\r\nThe fact that x19 is stored with an offset of 32 looks strange for me and it overwrites the already stored data. Based on other stackframes I would expect an offset of 16 here. Or the new stackframe for the funclet needs to be 16 bytes larger.\r\n\r\nDisclaimer: As the development system for the custom ARM64 system runs on windows I although use a ARM64 jit that is build to run on X64. Very simular to the protonojit but not as alt jit to get all the data needed to write the arm64 elf file that the linker for the custom ARM64 system needs. Unfortunately I don't have an ARM64 windows or linux system to check if a non cross jit generates the same code.\r\n\r\nI assume there is no ready to use jit for my use case and I need to build it anyway. In this case I could properly fix the issue but I would need a hint how the code is expected to look like.  ","Url":"https://github.com/dotnet/corert/issues/7787","RelatedDescription":"Open issue \"finally funclets brocken for ARM64!?\" (#7787)"},{"Id":"490799316","IsPullRequest":true,"CreatedAt":"2019-09-08T23:57:41","Actor":"MichalStrehovsky","Number":"7785","RawContent":null,"Title":"Mark unsafe intrinsics as reflection blocked","State":"closed","Body":"Keeping these reflection enabled pulls in quite a bit of junk (generic dictionaries, standalone method bodies, bookkeeping) that adds up to 1.5% of the size of Hello World...","Url":"https://github.com/dotnet/corert/pull/7785","RelatedDescription":"Closed or merged PR \"Mark unsafe intrinsics as reflection blocked\" (#7785)"},{"Id":"490775070","IsPullRequest":false,"CreatedAt":"2019-09-08T21:11:53","Actor":"mrzaxaryan","Number":"7784","RawContent":null,"Title":"Non-trivial marshalling is not yet supported by this compiler.","State":"closed","Body":"Can't save image to MemoryStream \r\n.NET Core v3.0.0-preview9\r\nVisual Studio 16.3.0 Preview 3.0\r\nException: `System.Exception: Method '[System.Drawing.Common]System.Drawing.SafeNativeMethods+Gdip.GdipSaveImageToStream(HandleRef,IStream,Guid&,HandleRef)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipSaveImageToStream(HandleRef, Interop.Ole32.IStream, Guid&, HandleRef) + 0x39\r\n   at System.Drawing.Image.Save(Stream, ImageCodecInfo, EncoderParameters) + 0x1af`\r\n","Url":"https://github.com/dotnet/corert/issues/7784","RelatedDescription":"Closed issue \"Non-trivial marshalling is not yet supported by this compiler.\" (#7784)"},{"Id":"490757817","IsPullRequest":true,"CreatedAt":"2019-09-08T20:09:59","Actor":"MichalStrehovsky","Number":"7782","RawContent":null,"Title":"Port GC changes from CoreCLR","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/commit/cd42ee8fe410f71026467ad2e90116115b85f68d\r\nPorts https://github.com/dotnet/coreclr/commit/740752c9d206a465e96a4d01e7dafb6adb6ded63","Url":"https://github.com/dotnet/corert/pull/7782","RelatedDescription":"Closed or merged PR \"Port GC changes from CoreCLR\" (#7782)"},{"Id":"490760342","IsPullRequest":true,"CreatedAt":"2019-09-08T20:08:39","Actor":"MichalStrehovsky","Number":"7783","RawContent":null,"Title":"Update CoreFX","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7783","RelatedDescription":"Closed or merged PR \"Update CoreFX\" (#7783)"},{"Id":"490704961","IsPullRequest":true,"CreatedAt":"2019-09-08T05:12:25","Actor":"Dotnet-GitSync-Bot","Number":"7781","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7781","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7781)"},{"Id":"490412146","IsPullRequest":true,"CreatedAt":"2019-09-08T00:46:12","Actor":"trylek","Number":"7777","RawContent":null,"Title":"Output raw test lists for the individual outcomes from SuperIlc","State":"closed","Body":"This change tweaks SuperIlc to emit simple line-oriented test lists\r\nfor the various compilation and execution outcomes. I found this\r\nquite useful for comparing various runs. I have also deleted a bit\r\nof dead code I noticed.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7777","RelatedDescription":"Closed or merged PR \"Output raw test lists for the individual outcomes from SuperIlc\" (#7777)"},{"Id":"490662770","IsPullRequest":false,"CreatedAt":"2019-09-07T17:55:27","Actor":"nexon33","Number":"7780","RawContent":null,"Title":"Implement GetInterfaceMap","State":"open","Body":"I want to be able to render a view in asp.net core, I need the controller inheritance to be able to call View();\r\nIs there any simple way of doing this or should I forget about it for now?","Url":"https://github.com/dotnet/corert/issues/7780","RelatedDescription":"Open issue \"Implement GetInterfaceMap\" (#7780)"},{"Id":"490072419","IsPullRequest":true,"CreatedAt":"2019-09-06T23:34:35","Actor":"davidwrighton","Number":"7776","RawContent":null,"Title":"Partial compilation and generic ibc processing","State":"closed","Body":"- Support for partial compilation\r\n- Support for parsing generics in IBC data\r\n - Bonus feature of searching referenced and input assemblies for types if the module in the IBC data is invalid","Url":"https://github.com/dotnet/corert/pull/7776","RelatedDescription":"Closed or merged PR \"Partial compilation and generic ibc processing\" (#7776)"},{"Id":"490437186","IsPullRequest":true,"CreatedAt":"2019-09-06T22:57:58","Actor":"Dotnet-GitSync-Bot","Number":"7778","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7778","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7778)"},{"Id":"489360143","IsPullRequest":true,"CreatedAt":"2019-09-05T19:38:18","Actor":"fadimounir","Number":"7772","RawContent":null,"Title":"Compile cross-module generics in the same version bubble.","State":"closed","Body":"This work is related to the single-exe prototype, but after discussing with @davidwrighton, these are changes that we can have in master as well.\r\n\r\nCompiling generics from external modules in the version bubble is enabled using a command line switch.\r\n\r\nOther changes: Changing signatures in hashtable of instantiations to include owning type as a way of encoding the module override info\r\n","Url":"https://github.com/dotnet/corert/pull/7772","RelatedDescription":"Closed or merged PR \"Compile cross-module generics in the same version bubble.\" (#7772)"},{"Id":"489380977","IsPullRequest":true,"CreatedAt":"2019-09-05T14:33:56","Actor":"MichalStrehovsky","Number":"7773","RawContent":null,"Title":"Get jitwrapper building on x86","State":"closed","Body":"CoreCLR repo is going to build it that way. I could exclude that outside x64, but it's just better to fix it...","Url":"https://github.com/dotnet/corert/pull/7773","RelatedDescription":"Closed or merged PR \"Get jitwrapper building on x86\" (#7773)"},{"Id":"488748576","IsPullRequest":true,"CreatedAt":"2019-09-05T13:42:32","Actor":"janvorli","Number":"7767","RawContent":null,"Title":"Implement SystemV AMD64 ABI struct classification","State":"closed","Body":"This change implements SystemV AMD64 ABI struct classification necessary\r\nfor correct passing of function arguments of struct types and returning\r\nthese by value on Unix AMD64.\r\n\r\nThis change is a port of the CoreCLR version with necessary changes to reflect differences in the type system interface between CoreRT and CoreCLR. I have also added caching of the classification result as JIT calls classification for the same type many times.","Url":"https://github.com/dotnet/corert/pull/7767","RelatedDescription":"Closed or merged PR \"Implement SystemV AMD64 ABI struct classification\" (#7767)"},{"Id":"489406467","IsPullRequest":true,"CreatedAt":"2019-09-04T23:16:31","Actor":"Dotnet-GitSync-Bot","Number":"7774","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @NextTurn","Url":"https://github.com/dotnet/corert/pull/7774","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7774)"},{"Id":"488925681","IsPullRequest":true,"CreatedAt":"2019-09-04T16:39:39","Actor":"Dotnet-GitSync-Bot","Number":"7771","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7771","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7771)"},{"Id":"488893657","IsPullRequest":true,"CreatedAt":"2019-09-04T02:16:33","Actor":"Dotnet-GitSync-Bot","Number":"7770","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7770","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7770)"},{"Id":"488826953","IsPullRequest":true,"CreatedAt":"2019-09-04T01:18:56","Actor":"Dotnet-GitSync-Bot","Number":"7769","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7769","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7769)"},{"Id":"488782037","IsPullRequest":true,"CreatedAt":"2019-09-03T21:33:47","Actor":"trylek","Number":"7768","RawContent":null,"Title":"Minor triage improvement in SuperIlc","State":"closed","Body":"For tests with unhandled runtime exceptions, we can improve SuperIlc\r\ntriage by using the exception as the triage string instead of just\r\nreporting a non-zero exit code. Part of the logic already existed\r\nbut it apparently had a typo in the exception message check due to\r\nwhich it failed to kick in.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7768","RelatedDescription":"Closed or merged PR \"Minor triage improvement in SuperIlc\" (#7768)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"497396166","IsPullRequest":true,"CreatedAt":"2019-09-24T00:49:46","Actor":"wli3","Number":"3666","RawContent":null,"Title":"WIP Helix test","State":"open","Body":"will that work?","Url":"https://github.com/dotnet/sdk/pull/3666","RelatedDescription":"Open PR \"WIP Helix test\" (#3666)"},{"Id":"497330597","IsPullRequest":false,"CreatedAt":"2019-09-23T21:10:44","Actor":"giordi91","Number":"3665","RawContent":null,"Title":"Issues comparing types from hosted .net core contexts in c++","State":"open","Body":"Good evening, apologies if this is not the right place for this question. If this is the case please let me know. \r\n\r\nI am working on a project where I am hosting a .net core 3.0 context in my c++ application, trying to use c# as scripting language. The main idea is to bootstrap a high level c# class, and do all the heavy lifting inside there and minimize as much as possible c++ and c# interaction. Here is a structure of my project:\r\n\r\n![Untitled Diagram(1)](https://user-images.githubusercontent.com/2525797/65462034-dab9c800-de4c-11e9-894b-1d9cc447e432.png)\r\n\r\nThe c++ application starts and loads a \"context.dll\" This is the c# class I will be using to do the heavy lifting, such class is loaded using hostfxr.I get a delegate to a static function and call it. \r\nThat context.dll is then used to load scripting dlls. Basically user defined classes. I am interested on all classes which inherit from \"ScriptingComponent\" base class. Such class is defined in core.dll \r\nI do not explicitly load such .dll It is set as reference in the context.dll project. The context.dll uses the ScriptingComponent symbol to use reflection on the loaded assemblies. \r\n\r\nThe context.dll loads then script.dll, Inside that dll there is a signle class, inheriting from Scriptable component. To do the loading I was using AssemblyLoadContext.Default.LoadFromPath, the issue with that was it did not correctly resolve the core.dll dependency. Then I moved to use the same code showed here:\r\nhttps://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support\r\n\r\nThis allowed to correctly resolve the core.dll dependency of the script.dll library. Everything seems to work fine but then every method I am using of reflection to ask if the class in script.dll inherits from ScriptableComponents it fails. \r\nI can post a lot of tests I did to make sure 100% that they are the same, even the GUID \r\nwas exactly the same, although my comparison fails.\r\n \r\nNow that made me thinking, might that be that symbol is loaded twice into two different contexts? The first is contex.dll which loads the Symbol from core.dll, but then the symbol might be loaded again as a dependency of script.dll and somehow the two don't match across contexts?\r\n\r\nThis is the context of core.dll, a single base class and nothing else\r\n```c#\r\n    public class ScriptableComponent\r\n    {\r\n        public virtual void PreAnimationEval()\r\n        {\r\n            Console.WriteLine(\"From base\");\r\n        }\r\n\r\n        public virtual void PostAnimationEval()\r\n        {\r\n        }\r\n    }\r\n```\r\n\r\nMy script.dll has this inside, a single base class inheriting from ScriptableComponent:\r\n```c#\r\npublic class TestLib : ScriptableComponent\r\n    {\r\n        public override void PreAnimationEval()\r\n        {\r\n            Console.WriteLine(\"From override\");\r\n        }\r\n    }\r\n```\r\n\r\nFinally in the context.dll I load the assembly and check for the types inherithing from my type.\r\n```c#\r\n                PluginLoadContext loadContext = new PluginLoadContext(path);             \r\n                Assembly ass = loadContext.LoadFromAssemblyName(new AssemblyName(assemblyName));\r\n\r\n                List<MethodInfo> methods = new List<MethodInfo>();\r\n\r\n                foreach (Type type in ass.GetTypes())\r\n                {\r\n\r\n                    if(type.IsSubclassOf(typeof(ScriptableComponent)))\r\n                    {\r\n                        Console.WriteLine(\"Found scriptable component: \" + type.Name);\r\n                    }\r\n                 }\r\n```\r\n\r\nThe documentation of the Microsoft tutorial on plugin architecture mentions that AssemblyLoadContext is made to load stuff in isolation, might that be the prolem? Ideally I would want to load in the same context my main dll (contex.dll) is in. \r\n\r\nCan you advice on the matter? \r\nI understand is not a simple issue and hope it is not too confusing.","Url":"https://github.com/dotnet/sdk/issues/3665","RelatedDescription":"Open issue \"Issues comparing types from hosted .net core contexts in c++\" (#3665)"},{"Id":"497311467","IsPullRequest":false,"CreatedAt":"2019-09-23T20:28:38","Actor":"yingnanl","Number":"3664","RawContent":null,"Title":"Set GCCpuGroup and Thread_UseAllCpuGroups via project file options","State":"open","Body":"Currently I can set ServerGarbageCollection by project file options as below.\r\n\r\n  <PropertyGroup>\r\n    <ServerGarbageCollection>true</ServerGarbageCollection>\r\n    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>    \r\n  </PropertyGroup>\r\n\r\nIs it ok to support GCCpuGroup and Thread_UseAllCpuGroups too?","Url":"https://github.com/dotnet/sdk/issues/3664","RelatedDescription":"Open issue \"Set GCCpuGroup and Thread_UseAllCpuGroups via project file options\" (#3664)"},{"Id":"497008416","IsPullRequest":false,"CreatedAt":"2019-09-23T10:12:46","Actor":"giordi91","Number":"3663","RawContent":null,"Title":"Debugging .net core 3.0 from hosted application","State":"open","Body":"I am hosting a .net core 3.0 context into my c++ application. Unluckily no matter what I try I am  not able to debug the c# code. Is there any way to do so? \r\n\r\nI am loading an entry point assembly using hostfxr.h as shown in the dotnet/samples. Then from inside c# I am loading all the other c# dlls using the documentation from here:\r\nhttps://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support\r\n\r\nEverything works fine, I am mostly missing the ability to debug the c# code. That is the main reason I picked c# over other languages for the integration. \r\n\r\nI have enabled native code debugging in my c# application, but that did not help. Do I need to load the pbd files manually somehow?\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3663","RelatedDescription":"Open issue \"Debugging .net core 3.0 from hosted application\" (#3663)"},{"Id":"496402326","IsPullRequest":false,"CreatedAt":"2019-09-20T15:02:40","Actor":"rainersigwald","Number":"3662","RawContent":null,"Title":"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata","State":"open","Body":"_From @joeltankam on Friday, September 20, 2019 2:22:39 PM_\r\n\r\n### Steps to reproduce\r\n\r\nI encounter some missing metadata to `ReferenceCopyLocalPaths` item since migrating to `Microsoft.NET.Sdk` format in project files.\r\n\r\nLets consider the following project file :\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net471</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nI use the following code to print metadata from `ReferenceCopyLocalPaths` items : \r\n\r\n```xml\r\n  <UsingTask TaskName=\"GetMetadataTask\" TaskFactory=\"CodeTaskFactory\" AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.v4.0.dll\" >\r\n    <ParameterGroup>\r\n      <Items ParameterType=\"Microsoft.Build.Framework.ITaskItem[]\" Required=\"true\" />\r\n      <MetadataString Output=\"true\" />\r\n    </ParameterGroup>\r\n    <Task>\r\n      <Using Namespace=\"System\"/>\r\n      <Code Type=\"Fragment\" Language=\"cs\">\r\n        <![CDATA[\r\n            StringBuilder metadata = new StringBuilder();\r\n            foreach (var item in Items)\r\n            {\r\n                metadata.AppendFormat(\"{0}\\r\\n\", item);\r\n                foreach (string name in item.MetadataNames)\r\n                {\r\n                    metadata.AppendFormat(\"  {0}={1}\\r\\n\", name, item.GetMetadata(name));\r\n                }\r\n                metadata.AppendFormat(\"\\r\\n\");\r\n            }\r\n            MetadataString = metadata.ToString();\r\n        ]]>\r\n      </Code>\r\n    </Task>\r\n  </UsingTask>\r\n\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveAssemblyReferences\">\r\n    <ItemGroup>\r\n      <PrintItems Include=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\" />\r\n    </ItemGroup>\r\n    <GetMetadataTask Items=\"@(PrintItems)\">\r\n      <Output TaskParameter=\"MetadataString\" PropertyName=\"MyBeautifulMetadata\"/>\r\n    </GetMetadataTask>\r\n    <Message Importance=\"High\" Text=\"$(MyBeautifulMetadata)\" />\r\n  </Target>\r\n```\r\n\r\n### Expected  behavior\r\nWhen using old project files format, I had the following metadata : \r\n\r\n```txt\r\n  ItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\n### Actual behavior\r\n\r\nNow I get the following : \r\n\r\n```txt\r\nItemName=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    NuGetPackageId=Newtonsoft.Json\r\n    NuGetPackageVersion=12.0.2\r\n    FullPath=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    RootDir=C:\\\r\n    Filename=Newtonsoft.Json\r\n    Extension=.dll\r\n    RelativeDir=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    Directory=Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\\r\n    RecursiveDir=\r\n    Identity=C:\\Users\\joel.tankam\\.nuget\\packages\\newtonsoft.json\\12.0.2\\lib\\net45\\Newtonsoft.Json.dll\r\n    ModifiedTime=2019-04-22 01:06:16.0000000\r\n    CreatedTime=2019-09-18 10:16:19.6451378\r\n    AccessedTime=2019-09-18 10:16:19.6451378\r\n    DefiningProjectFullPath=C:\\MyBeautifulProject\\Project.csproj\r\n    DefiningProjectDirectory=C:\\MyBeautifulProject\\\r\n    DefiningProjectName=Project\r\n    DefiningProjectExtension=.csproj\r\n```\r\n\r\nThe difference being the absence of : \r\n\r\n```txt\r\n    Private=false\r\n    NuGetIsFrameworkReference=false\r\n    NuGetSourceType=Package\r\n```\r\n\r\nHowever, I need the `NuGetSourceType` metadata in my build process. \r\nIs there please any reason why this this metadata disappeared ? Is there a way to set it back ?\r\n\r\nI currently use this custom target to set back `NuGetSourceType` :\r\n\r\n```xml\r\n  <Target Name=\"_SetNuGetSourceTypeToCopyLocal\" AfterTargets=\"ResolveReferences\">\r\n    <ItemGroup>\r\n      <ReferenceCopyLocalPaths Update=\"@(ReferenceCopyLocalPaths)\" Condition=\"'%(ReferenceCopyLocalPaths.NuGetPackageId)' != ''\">\r\n        <NuGetSourceType>Package</NuGetSourceType>\r\n      </ReferenceCopyLocalPaths>\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\n\r\n### Environment data\r\n`msbuild /version` output: 15.9.21.664\r\n.NET Core SDK version : 2.2.108\r\nVisual Studio : Professional 2017, v 15.9.16\r\n\r\n\r\n_Copied from original issue: microsoft/msbuild#4754_","Url":"https://github.com/dotnet/sdk/issues/3662","RelatedDescription":"Open issue \"ReferenceCopyLocalPaths no longer content NuGetSourceType metadata\" (#3662)"},{"Id":"494301303","IsPullRequest":false,"CreatedAt":"2019-09-19T23:50:33","Actor":"wli3","Number":"3649","RawContent":null,"Title":"Add DefaultAppHostRuntimeIdentifier support for ARM and ARM64","State":"closed","Body":"https://github.com/dotnet/sdk/blob/fe6b50c78426124e34e56ecb7df8b6b86e6e0b48/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L118\r\n\r\ndoes not consider ARM and ARM64","Url":"https://github.com/dotnet/sdk/issues/3649","RelatedDescription":"Closed issue \"Add DefaultAppHostRuntimeIdentifier support for ARM and ARM64\" (#3649)"},{"Id":"496051527","IsPullRequest":false,"CreatedAt":"2019-09-19T22:15:19","Actor":"billwert","Number":"3661","RawContent":null,"Title":"PrepareForReadyToRunCompilation task fails on 5.0","State":"open","Body":"Trying to publish with ready to run on a console app with the 5.0 SDK fails as below.\r\n\r\ncc: @nguerrera @fadimounir \r\n\r\n```console\r\nC:\\test>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-014713\r\n Commit:    60688b13db\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18986\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha1.19468.6\r\n  Commit:  30c4a25a9a\r\n\r\n.NET Core SDKs installed:\r\n  5.0.100-alpha1-014713 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.0-alpha1.19468.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0-alpha1.19468.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-alpha1.19468.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n```console\r\nC:\\test>dotnet publish -c Release -bl /p:PublishReadyToRun=true -r win-x64\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19456-02+ee8294b55 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\MSBuild.dll -bl -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\dotnet.dll -maxcpucount -property:Configuration=Release -property:RuntimeIdentifier=win-x64 /p:PublishReadyToRun=true -restore -target:Publish -verbosity:m .\\test.csproj\r\n  Restore completed in 2.38 sec for C:\\test\\test.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n  test -> C:\\test\\bin\\Release\\netcoreapp3.0\\win-x64\\test.dll\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: The \"PrepareForReadyToRunCompilation\" task failed unexpectedly. [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018: System.InvalidOperationException: Sequence contains more than one element [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.ThrowHelper.ThrowMoreThanOneElementException() [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source) [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.PrepareForReadyToRunCompilation.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/PrepareForReadyToRunCompilation.cs:line 69 [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\test\\test.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014713\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(252,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\test\\test.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3661","RelatedDescription":"Open issue \"PrepareForReadyToRunCompilation task fails on 5.0\" (#3661)"},{"Id":"495449618","IsPullRequest":true,"CreatedAt":"2019-09-19T16:35:52","Actor":"wli3","Number":"3657","RawContent":null,"Title":"Default app host runtime identifier for arm and arm64","State":"closed","Body":"Fix https://github.com/dotnet/sdk/issues/3649\r\n\r\nDue to https://github.com/dotnet/sdk/issues/3636 I cannot test it. And https://github.com/dotnet/sdk/issues/3636 's fix will be in core-sdk. So I think we should check it in for now.","Url":"https://github.com/dotnet/sdk/pull/3657","RelatedDescription":"Closed or merged PR \"Default app host runtime identifier for arm and arm64\" (#3657)"},{"Id":"495755187","IsPullRequest":true,"CreatedAt":"2019-09-19T12:02:08","Actor":"dotnet-maestro[bot]","Number":"3660","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3660","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3660)"},{"Id":"495642530","IsPullRequest":false,"CreatedAt":"2019-09-19T08:13:09","Actor":"thomaslevesque","Number":"3659","RawContent":null,"Title":"SDK 3.0 RC1 installer doesn't uninstall 3.0 preview 7","State":"open","Body":"As I understand it, .NET Core 3 SDK installer is supposed to uninstall previous versions.\r\nHowever, I had preview7 and just installed RC1, and preview7 wasn't removed:\r\n\r\n```\r\n> dotnet --info\r\n...\r\n    .NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\nIs this expected?\r\n\r\nAlso, preview7 no longer appears in \"Apps and features\", so I'm not sure how to remove it...","Url":"https://github.com/dotnet/sdk/issues/3659","RelatedDescription":"Open issue \"SDK 3.0 RC1 installer doesn't uninstall 3.0 preview 7\" (#3659)"},{"Id":"495584268","IsPullRequest":true,"CreatedAt":"2019-09-19T05:40:40","Actor":"nguerrera","Number":"3658","RawContent":null,"Title":"Speed up tests","State":"open","Body":"Hacked up implementation for now, draft to measure impact in PR validation. Not ready for review","Url":"https://github.com/dotnet/sdk/pull/3658","RelatedDescription":"Open PR \"Speed up tests\" (#3658)"},{"Id":"493793478","IsPullRequest":false,"CreatedAt":"2019-09-18T20:57:29","Actor":"wli3","Number":"3648","RawContent":null,"Title":"[Investigate] Test the build of c# -> C++ -> C# works or not","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/issues/3648","RelatedDescription":"Closed issue \"[Investigate] Test the build of c# -> C++ -> C# works or not\" (#3648)"},{"Id":"494904114","IsPullRequest":true,"CreatedAt":"2019-09-18T18:17:46","Actor":"wli3","Number":"3652","RawContent":null,"Title":"Block non library","State":"closed","Body":"Instead of blocking exe only, considering there are also StaticLibrary and empty (utility)","Url":"https://github.com/dotnet/sdk/pull/3652","RelatedDescription":"Closed or merged PR \"Block non library\" (#3652)"},{"Id":"494997302","IsPullRequest":true,"CreatedAt":"2019-09-18T05:30:50","Actor":"livarcocc","Number":"3656","RawContent":null,"Title":"Change the installed 2.2 runtime to 2.2.7.","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3656","RelatedDescription":"Open PR \"Change the installed 2.2 runtime to 2.2.7.\" (#3656)"},{"Id":"494996231","IsPullRequest":false,"CreatedAt":"2019-09-18T05:26:58","Actor":"mmitche","Number":"3655","RawContent":null,"Title":"Reenable Helix perf on 3.0.1xx ","State":"open","Body":"Re-enable helix perf on 3.0.1xx. Removed at: https://github.com/dotnet/sdk/pull/3654","Url":"https://github.com/dotnet/sdk/issues/3655","RelatedDescription":"Open issue \"Reenable Helix perf on 3.0.1xx \" (#3655)"},{"Id":"494995531","IsPullRequest":true,"CreatedAt":"2019-09-18T05:25:16","Actor":"mmitche","Number":"3654","RawContent":null,"Title":"Remove perf from builds","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3654","RelatedDescription":"Closed or merged PR \"Remove perf from builds\" (#3654)"},{"Id":"494906082","IsPullRequest":true,"CreatedAt":"2019-09-18T05:15:21","Actor":"dotnet-maestro[bot]","Number":"3653","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.0.6251\r\n- **Date Produced**: 9/17/2019 11:35 PM\r\n- **Commit**: b75150f2f4127a77a166c9552845e86fb24a3282\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.0-rtm.6251\r\n\r\n[marker]: <> (End:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3653","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#3653)"},{"Id":"494846089","IsPullRequest":false,"CreatedAt":"2019-09-17T20:52:01","Actor":"wli3","Number":"3651","RawContent":null,"Title":"Block ConfigurationType = \"StaticLibrary\" and \"\" (utility)","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/issues/3651","RelatedDescription":"Open issue \"Block ConfigurationType = \"StaticLibrary\" and \"\" (utility)\" (#3651)"},{"Id":"494423594","IsPullRequest":false,"CreatedAt":"2019-09-17T06:18:24","Actor":"dasMulli","Number":"3650","RawContent":null,"Title":"Warn on publishing solutions / path forward for publishing solutions","State":"open","Body":"There are many issues with doing a publish on solution files.\r\n\r\nI suggest emitting a Warning when trying to do so. I think this may be possible through solution extension points.\r\n\r\nso `dotnet publish the.sln` would emit something like `NETSDK999: Publishing whole solutions can lead to unintended side-effects`.\r\nThis could then be disabled with `dotnet publish the.sln -p:WarnOnPublishingSolutions=False`.\r\n\r\nWhile there are suggestions of allowing base paths for solution publishing to create folders for each project are possible, it has a few edge cases (same csproj names in different solution folders etc.).","Url":"https://github.com/dotnet/sdk/issues/3650","RelatedDescription":"Open issue \"Warn on publishing solutions / path forward for publishing solutions\" (#3650)"},{"Id":"493792608","IsPullRequest":false,"CreatedAt":"2019-09-16T22:11:30","Actor":"wli3","Number":"3647","RawContent":null,"Title":"[Investigate] Setting Runtimeidentifier in C++ props and target might not be needed","State":"closed","Body":"It works today without setting it. Need to understand how we derive the RID. And ensure it is ok not setting it","Url":"https://github.com/dotnet/sdk/issues/3647","RelatedDescription":"Closed issue \"[Investigate] Setting Runtimeidentifier in C++ props and target might not be needed\" (#3647)"},{"Id":"493678850","IsPullRequest":true,"CreatedAt":"2019-09-15T00:05:26","Actor":"dotnet-bot","Number":"3646","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3646","RelatedDescription":"Open PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3646)"},{"Id":"493651275","IsPullRequest":true,"CreatedAt":"2019-09-14T18:13:58","Actor":"lg2de","Number":"3645","RawContent":null,"Title":"do not overwrite \"all warnings as errors\" (fixes #3613)","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3645","RelatedDescription":"Open PR \"do not overwrite \"all warnings as errors\" (fixes #3613)\" (#3645)"},{"Id":"493446026","IsPullRequest":false,"CreatedAt":"2019-09-14T17:13:03","Actor":"wjk","Number":"3638","RawContent":null,"Title":"Package restore can't find runtime packs when explicit RID specified","State":"closed","Body":"When I try to restore a project that contains one or more RIDs specified in the project file `RuntimeIdentifiers` property, it cannot find a matching version of the following packages:\r\n\r\n* `Microsoft.NETCore.App.Runtime.<rid>`\r\n* `Microsoft.AspNetCore.App.Runtime.<rid>`\r\n* `Microsoft.NETCore.WindowsDesktop.Runtime.<rid>`\r\n\r\nIt says that there are other versions of these packages available on NuGet.org, but no matter what I try I cannot get the package restore to use the versions that actually exist. I've tried numerous SDK versions in the `global.json` file, to no avail. The only way I can get my project to restore (and, therefore, build) is to remove the `RuntimeIdentifiers` property from the csproj file. This can break other parts of my build, so it isn't a good solution overall.\r\n\r\nThis problem started occurring at roughly the time I installed Preview 9/RC 2 of .NET Core 3. Thanks for looking into this for me!","Url":"https://github.com/dotnet/sdk/issues/3638","RelatedDescription":"Closed issue \"Package restore can't find runtime packs when explicit RID specified\" (#3638)"},{"Id":"493616381","IsPullRequest":true,"CreatedAt":"2019-09-14T14:18:16","Actor":"dotnet-bot","Number":"3643","RawContent":null,"Title":"Merge release/3.0.100-preview9 to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.100-preview9 into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.100-preview9-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/3.0.100-preview9\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.100-preview9-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3643","RelatedDescription":"Closed or merged PR \"Merge release/3.0.100-preview9 to release/3.0.1xx\" (#3643)"},{"Id":"493616125","IsPullRequest":true,"CreatedAt":"2019-09-14T13:57:47","Actor":"dotnet-maestro[bot]","Number":"3642","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190913.3\r\n- **Date Produced**: 9/13/2019 11:47 PM\r\n- **Commit**: 7b731032220c21a3ed0021c72757b1f3122579b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19463.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19463.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3642","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3642)"},{"Id":"493616393","IsPullRequest":true,"CreatedAt":"2019-09-14T12:05:32","Actor":"dotnet-bot","Number":"3644","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3644","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3644)"},{"Id":"493558211","IsPullRequest":true,"CreatedAt":"2019-09-14T01:53:13","Actor":"dotnet-maestro[bot]","Number":"3641","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190913.1\r\n- **Date Produced**: 9/13/2019 10:50 AM\r\n- **Commit**: 372f44450f51552a8cf725acf705dc477bd8391f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19463.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19463.1\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3641","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3641)"},{"Id":"493482678","IsPullRequest":true,"CreatedAt":"2019-09-13T21:28:56","Actor":"dotnet-maestro[bot]","Number":"3640","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190913.05\r\n- **Date Produced**: 9/13/2019 4:13 PM\r\n- **Commit**: 7d57652f33493fa022125b7f63aad0d70c52d810\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3640","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3640)"},{"Id":"493472396","IsPullRequest":false,"CreatedAt":"2019-09-13T18:59:57","Actor":"bricelam","Number":"3639","RawContent":null,"Title":"Enable embedded resource DependentUpon convention on .NET Framework","State":"open","Body":"Shouldn't this also be enabled for .NETFramework? Without it, embedded resource names are changing between classic and SDK-style projects. (Originally reported in https://github.com/aspnet/EntityFramework6/issues/1258)\r\n\r\nhttps://github.com/dotnet/sdk/blob/25d8a32f0c357b8e6ccaa39fba27d5c61364e26a/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L109-L112\r\n\r\ncc @divega @Pilchie @ajcvickers @BenVillalobos","Url":"https://github.com/dotnet/sdk/issues/3639","RelatedDescription":"Open issue \"Enable embedded resource DependentUpon convention on .NET Framework\" (#3639)"},{"Id":"493287815","IsPullRequest":true,"CreatedAt":"2019-09-13T14:28:25","Actor":"dotnet-maestro[bot]","Number":"3637","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190912.5\r\n- **Date Produced**: 9/13/2019 5:59 AM\r\n- **Commit**: 6003ee189f456c92a18b097f226d4927309def27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19462.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19462.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3637","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3637)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1176348532845858816","CreatedAt":"2019-09-24T04:12:00+00:00","UserScreenname":"dotnet","Text":"Caption this https://t.co/y9cwRFil6H","Source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>","RetweetCount":22,"FavoriteCount":2,"RawContent":null},{"Id":"1176283862319714305","CreatedAt":"2019-09-23T23:55:01+00:00","UserScreenname":"dotnet","Text":"The Virtual Attendee Party is happening now @ #dotNETConf -.and it'll be great fun to join in. Come see:… https://t.co/FQrHcgeI55","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1176276311335215104","CreatedAt":"2019-09-23T23:25:01+00:00","UserScreenname":"dotnet","Text":"The .NET Community Roundup with @SHanselman and @JonGalloway is running now at #dotNETConf. \n\nAre you watching yet?… https://t.co/KwBvXg332e","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":27,"FavoriteCount":9,"RawContent":null},{"Id":"1176268760837185538","CreatedAt":"2019-09-23T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: What's new in #MLNET with @CesarDelatorre. Watch here: https://t.co/irKAH46tsn https://t.co/AXj5eLfUIp","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":19,"FavoriteCount":17,"RawContent":null},{"Id":"1176261211534635008","CreatedAt":"2019-09-23T22:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Tips and Tricks for .NET Debugging in #VisualStudio with @lyrichardson01. Tune in:… https://t.co/VS74M5B8GK","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1176257813317902336","CreatedAt":"2019-09-23T22:11:31+00:00","UserScreenname":"dotnet","Text":"News from #dotNETConf!\n\n#VisualStudio 2019 version 16.3 and #VS4Mac version 8.3 now support .NET Core 3.0, C# 8.0 a… https://t.co/9vNNYQKAb8","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":91,"FavoriteCount":63,"RawContent":null},{"Id":"1176253661745483776","CreatedAt":"2019-09-23T21:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Entity Framework Core 3.0 and beyond with @divega. Live stream: https://t.co/irKAH46tsn https://t.co/pCyaqaztXH","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":15,"FavoriteCount":8,"RawContent":null},{"Id":"1176246112660987904","CreatedAt":"2019-09-23T21:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: @gotheap and @mika_dumont show us how to increase  .NET Productivity with… https://t.co/GrY3JXt57n","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":27,"FavoriteCount":14,"RawContent":null},{"Id":"1176238562934759424","CreatedAt":"2019-09-23T20:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: What's New in SignalR with .NET Core 3.0? With Stephen Halter. Watch here:… https://t.co/oFz9RLmcXM","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"1176231012575121408","CreatedAt":"2019-09-23T20:25:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: Building Cloud Native Apps with .NET Core 3.0 and #K8s with @spboyer. Tune in:… https://t.co/LirE0EiOZF","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":30,"FavoriteCount":14,"RawContent":null},{"Id":"1176223462194630659","CreatedAt":"2019-09-23T19:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now @ #dotNETConf: #XamarinForms: More Productive and Beautiful Than Ever with @davidortinau. The live st… https://t.co/M68lqUVFVZ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":20,"FavoriteCount":7,"RawContent":null},{"Id":"1176220630212988928","CreatedAt":"2019-09-23T19:43:46+00:00","UserScreenname":"dotnet","Text":"And we’re very happy you did! Let’s make .NET awesome for everyone, everywhere. ❤️ https://t.co/6sk43beJ4v","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":164,"FavoriteCount":49,"RawContent":null},{"Id":"1176220606473261056","CreatedAt":"2019-09-23T19:43:40+00:00","UserScreenname":"dotnet","Text":"Ask your Blazor questions live now #dotNETConf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-09-24T05:30:37.245296Z","RunDurationInMilliseconds":14952}