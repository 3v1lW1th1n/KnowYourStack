{"Data":{"Blog":{"FeedItems":[{"Title":"Android’s D8 dexer and R8 shrinker","PublishedOn":"2019-01-28T18:10:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is quite a bit of complexity to packaging an Android application. Xamarin.Android has to run through the same build pipeline as Android apps built in Android Studio&#8211;with the addition of...","Href":"https://blog.xamarin.com/androids-d8-dexer-and-r8-shrinker/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019 Preview 2","PublishedOn":"2019-01-23T20:22:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, Visual Studio 2019 Preview 2 was released and includes many improvements for mobile developers in Visual Studio. This release, we focused on key areas to make you more productive when authoring...","Href":"https://blog.xamarin.com/whats-new-for-xamarin-developers-in-visual-studio-2019-preview-2/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: New Year – New Pod!","PublishedOn":"2019-01-18T18:59:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. This episode includes a discussion of...","Href":"https://blog.xamarin.com/visual-studio-mobile-developer-podcast-new-year-new-pod/","RawContent":null},{"Title":"Introducing the .NET Community Standup Series","PublishedOn":"2019-01-17T16:57:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We love our amazing .NET community that is filled with amazing developers writing fantastic blogs, libraries, presentations, and pull requests every week. We are always looking for ways to highlight...","Href":"https://blog.xamarin.com/introducing-the-net-community-standup-series/","RawContent":null},{"Title":"Xamarin.Forms 3.5: A Little Bindable Love","PublishedOn":"2019-01-11T18:06:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Andrei Nitescu, a mobile developer since 2013 and frequent contributor to Xamarin.Forms. He shares about his experiences with other developers on his blog, and...","Href":"https://blog.xamarin.com/xamarin-forms-3-5-a-little-bindable-love/","RawContent":null},{"Title":"Hackathon Superweapon: F# and Fabulous","PublishedOn":"2019-01-10T20:27:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, I participated in Hack for the Sea, a weekend devoted to applying tech to marine conservation. One of our local challenges was a “cross-platform mobile app for reporting marine debris.” A...","Href":"https://blog.xamarin.com/hackathon-superweapon-f-and-fabulous/","RawContent":null},{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8974906071","Type":"IssuesEvent","CreatedAt":"2019-01-30T02:30:19","Actor":"EmilAlipiev","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2669","RelatedDescription":"Opened issue \"D8-R8 build fails with  java.lang.StringIndexOutOfBoundsException\" (#2669) at xamarin/xamarin-android","RelatedBody":"i have added d8 and r8 in my android configuration and disabled MultipleDex as shown below and used my existing proguard file which i use with multipledex+proguardenabled=true settings. it returns error as below. I have created an empty project and copied same settings and proguard file. Problem can be reproduced with attached sample. please find the attached simply and build release.\r\n\r\n```\r\n   <AndroidEnableMultipleDex>false</AndroidEnableMultipleDex>\r\n    <AndroidExplicitCrunch>true</AndroidExplicitCrunch>\r\n    <AndroidDexTool>d8</AndroidDexTool>\r\n    <AndroidLinkTool>r8</AndroidLinkTool>\r\n```\r\n\r\n**Error:**\r\n```\r\n8>(_CompileToDalvikWithD8 target) -> \r\n8>  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Xamarin\\Android\\Xamarin.Android.D8.targets(81,5): error : java.lang.StringIndexOutOfBoundsException: String index out of range :  4735\r\n8>\r\n[App1.zip](https://github.com/xamarin/xamarin-android/files/2810654/App1.zip)\r\n\r\n```"},{"Id":"8974777133","Type":"PullRequestEvent","CreatedAt":"2019-01-30T01:55:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2664","RelatedDescription":"Merged pull request \"[NDK,Windows] Fix NDK r19 clang scripts bug on Windows\" (#2664) at xamarin/xamarin-android","RelatedBody":"The llvm toolchain directory contains a selection of shell scripts (both Unix\r\nand Windows) which call `clang/clang++` with different `-target` parameters\r\ndepending on both the target architecture and API level. For instance, the\r\nclang/clang++ compilers targetting aarch64 on API level 28 will have the\r\nfollowing Unix shell scripts present in the toolchain `bin` directory:\r\n\r\n     aarch64-linux-android28-clang\r\n     aarch64-linux-android28-clang++\r\n\r\nHowever, the Windows version of the NDK has a bug where there is only one  Windows\r\ncounterpart to the above Unix scripts:\r\n\r\n     aarch64-linux-android28-clang.cmd\r\n\r\nThis script, despite its name suggesting that it calls `clang.exe` in fact calls\r\n`clang++.exe` which breaks compilation of some C programs (including the code\r\ngenerated by Mono's mkbundle utility) because `clang++` treats the input as C++.\r\nThere is no corresponding `aarch64-linux-android28-clang++.cmd` and so\r\ninvocation of `clang.exe` becomes harder and,  most certainly, non-standard as\r\nfar as cross-platform NDK compatibility is concerned.\r\n\r\nThis commit tries to rectify the situation by special-casing the compiler tool\r\nhandling to return path to the actual .exe instead of the CMD and provide the\r\nnecessary target parameters on the compiler invocation."},{"Id":"8974711471","Type":"PullRequestEvent","CreatedAt":"2019-01-30T01:37:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2667","RelatedDescription":"Merged pull request \"Bump `ManagedRuntime` dependency\" (#2667) at xamarin/xamarin-android","RelatedBody":"Updates the minimum required MDK version to the same commit currently\r\nreferenced in external/mono. This brings in a bunch of fixes that have\r\nsince been applied to the mono/mono:2018-08 branch.\r\n\r\nFrom recent testing, this also appears to resolve the Android SDK download failures\r\nwe've been seeing intermittently on machines which don't already have these\r\ncomponents fully cached:\r\n```\r\n2019-01-29T18:05:08.0179160Z (_DownloadItems target) -> \r\n2019-01-29T18:05:08.0180480Z   /Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.targets(42,5): error : Unable to download URL `https://dl.google.com/android/repository/platform-26_r02.zip` to `/Users/vsts/android-archives/platform-26_r02.zip`: An error occurred while sending the request [/Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj]\r\n2019-01-29T18:05:08.0181710Z   /Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.targets(42,5): error : An error occurred while sending the request [/Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj]\r\n```"},{"Id":"8974707554","Type":"PullRequestEvent","CreatedAt":"2019-01-30T01:36:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2665","RelatedDescription":"Merged pull request \"Bump to mono/mono/2018-08@2359cba4\" (#2665) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/11615\r\nFixes: https://github.com/mono/mono/issues/12538\r\n\r\nDon't probe AOT cache directories on Android; they don't exist.\r\n\r\nNative Crash Stability Fix Batch.\r\n\r\nFix deadlock when unwinding with coop enabled."},{"Id":"8974704276","Type":"PullRequestEvent","CreatedAt":"2019-01-30T01:35:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2668","RelatedDescription":"Merged pull request \"Bump `ManagedRuntime` dependency\" (#2668) at xamarin/xamarin-android","RelatedBody":"Updates the minimum required MDK version to the same commit currently\r\nreferenced in external/mono. This brings in a bunch of fixes that have\r\nsince been applied to the mono/mono:2018-08 branch.\r\n\r\nFrom recent testing, this also appears to resolve the Android SDK download failures\r\nwe've been seeing intermittently on machines which don't already have these\r\ncomponents fully cached:\r\n```\r\n2019-01-29T18:05:08.0179160Z (_DownloadItems target) -> \r\n2019-01-29T18:05:08.0180480Z   /Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.targets(42,5): error : Unable to download URL `https://dl.google.com/android/repository/platform-26_r02.zip` to `/Users/vsts/android-archives/platform-26_r02.zip`: An error occurred while sending the request [/Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj]\r\n2019-01-29T18:05:08.0181710Z   /Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.targets(42,5): error : An error occurred while sending the request [/Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj]\r\n```"},{"Id":"8974149776","Type":"PullRequestEvent","CreatedAt":"2019-01-29T23:12:30","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2668","RelatedDescription":"Opened pull request \"Bump `ManagedRuntime` dependency\" (#2668) at xamarin/xamarin-android","RelatedBody":"Updates the minimum required MDK version to the same commit currently\r\nreferenced in external/mono. This brings in a bunch of fixes that have\r\nsince been applied to the mono/mono:2018-08 branch.\r\n\r\nFrom recent testing, this also appears to resolve the Android SDK download failures\r\nwe've been seeing intermittently on machines which don't already have these\r\ncomponents fully cached:\r\n```\r\n2019-01-29T18:05:08.0179160Z (_DownloadItems target) -> \r\n2019-01-29T18:05:08.0180480Z   /Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.targets(42,5): error : Unable to download URL `https://dl.google.com/android/repository/platform-26_r02.zip` to `/Users/vsts/android-archives/platform-26_r02.zip`: An error occurred while sending the request [/Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj]\r\n2019-01-29T18:05:08.0181710Z   /Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.targets(42,5): error : An error occurred while sending the request [/Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj]\r\n```"},{"Id":"8974091409","Type":"PullRequestEvent","CreatedAt":"2019-01-29T23:00:05","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2667","RelatedDescription":"Opened pull request \"Bump `ManagedRuntime` dependency\" (#2667) at xamarin/xamarin-android","RelatedBody":"Updates the minimum required MDK version to the same commit currently\r\nreferenced in external/mono. This brings in a bunch of fixes that have\r\nsince been applied to the mono/mono:2018-08 branch.\r\n\r\nFrom recent testing, this also appears to resolve the Android SDK download failures\r\nwe've been seeing intermittently on machines which don't already have these\r\ncomponents fully cached:\r\n```\r\n2019-01-29T18:05:08.0179160Z (_DownloadItems target) -> \r\n2019-01-29T18:05:08.0180480Z   /Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.targets(42,5): error : Unable to download URL `https://dl.google.com/android/repository/platform-26_r02.zip` to `/Users/vsts/android-archives/platform-26_r02.zip`: An error occurred while sending the request [/Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj]\r\n2019-01-29T18:05:08.0181710Z   /Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.targets(42,5): error : An error occurred while sending the request [/Users/vsts/agent/2.144.2/work/1/s/external/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj]\r\n```"},{"Id":"8973878452","Type":"PullRequestEvent","CreatedAt":"2019-01-29T22:17:58","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2666","RelatedDescription":"Opened pull request \"[build] support for building with VS 2019\" (#2666) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2627\r\n\r\nThere are several things broken when building with MSBuild 16.0 and/or\r\nusing Visual Studio 2019.\r\n\r\n## TargetFrameworkVersion ##\r\n\r\nAnything referencing MSBuild assemblies must now be\r\n`TargetFrameworkVersion=v4.7.2`, since these assemblies are now\r\ntargeting it.\r\n\r\nWe should take this as an opportunity to consolidate all\r\n`$(TargetFrameworkVersion)`, so I moved this property into\r\n`Configuration.props`. I was able to remove the property in many\r\nprojects, and the IDE still seemed to work fine.\r\n\r\n## Prepend<T> ##\r\n\r\nWith `$(TargetFrameworkVersion)` changing, this method:\r\n\r\n    internal static IEnumerable<T> Prepend<T> (this IEnumerable<T> l, T another) where T : XNode\r\n\r\nNow exists in the BCL, so we can remove it.\r\n\r\n## MSBuild.exe location ##\r\n\r\nIn VS 2017, MSBuild is located in:\r\n\r\n    %VsInstallDir%\\MSBuild\\15.0\\Bin\\MSBuild.exe\r\n\r\nIn VS 2019, it is now located in:\r\n\r\n    %VsInstallDir%\\MSBuild\\Current\\Bin\\MSBuild.exe\r\n\r\nRight now we have a bit of code that \"finds\" Visual Studio, MSBuild,\r\netc. so we should take this opportunity to improve it.\r\n\r\nWe originally thought about MSBuildLocator:\r\n\r\nhttps://www.nuget.org/packages/Microsoft.Build.Locator/\r\nhttps://github.com/Microsoft/MSBuildLocator\r\n\r\nBut the licensing of the library was concerning... We were uncertain\r\nif we could redistribute MSBuildLocator as part of an OSS product.\r\n\r\nFor now we can just use `vswhere.exe`:\r\n\r\nhttps://github.com/Microsoft/vswhere/wiki/Find-MSBuild\r\n\r\nI made a simple `vswhere.csproj` we can reference where this\r\nfunctionality is needed. Currently `xabuild` and\r\n`Xamarin.ProjectTools` need to locate the Visual Studio directory.\r\n\r\n## Other breakage in xabuild.exe ##\r\n\r\nIn VS 2019, the path to Roslyn is a bit odd:\r\n\r\n    %VsInstallDir%\\MSBuild\\15.0\\Bin\\Roslyn\r\n\r\nI had to rework things to still work when combined with a different\r\nMSBuild location:\r\n\r\n    %VsInstallDir%\\MSBuild\\Current\\Bin\\MSBuild.exe\r\n\r\n## NUnit ##\r\n\r\nThere does not appear to be an NUnit extension available for VS 2019\r\nyet. I frequently use the `Test Explorer` in VS to individually run\r\ntests.\r\n\r\nHowever, it looks like they are switching to a different model for\r\ntest frameworks. Each test framework ships its own \"adapter\" that\r\nenables the testing UIs in Visual Studio. These are shipped on NuGet,\r\nand so they can work without installing any extra extensions.\r\n\r\nSo we just need:\r\n\r\n    https://www.nuget.org/packages/NUnit3TestAdapter/\r\n\r\nThis package should not affect anything on non-Windows platforms.\r\n\r\n## Other repositories ##\r\n\r\nWe will need to switch to `TargetFrameworkVersion=v4.7.2` and use the\r\nNUnit adapter in other repos:\r\n\r\n- Downstream in `monodroid`, things will likely break without these\r\n  changes.\r\n- `Java.Interop` is currently *working*, but should be updated.\r\n- `xamarin-android-tools` is currently *working*, but should be updated."},{"Id":"8973778395","Type":"PullRequestEvent","CreatedAt":"2019-01-29T21:59:49","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2665","RelatedDescription":"Opened pull request \"Bump to mono/mono/2018-08@2359cba4\" (#2665) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/11615\r\nFixes: https://github.com/mono/mono/issues/12538\r\n\r\nDon't probe AOT cache directories on Android; they don't exist.\r\n\r\nNative Crash Stability Fix Batch.\r\n\r\nFix deadlock when unwinding with coop enabled."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8974205481","Type":"IssuesEvent","CreatedAt":"2019-01-29T23:25:24","Actor":"tetradog","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5090","RelatedDescription":"Opened issue \"[Enhancement] Script Error,imposible set IsScriptEnabled=false!!\" (#5090) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nWe need to disable script errors...\r\n\r\n\r\n"},{"Id":"8974056164","Type":"PullRequestEvent","CreatedAt":"2019-01-29T22:52:42","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5080","RelatedDescription":"Merged pull request \"Update support dependencies to latest 28.0.0.1 version\" (#5080) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nLatest version of the support libraries help to mitigate an issue that causes VS to freeze when there is a mismatch of support versions from transient dependencies"},{"Id":"8974046515","Type":"IssuesEvent","CreatedAt":"2019-01-29T22:50:48","Actor":"dimitarcnbs","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5089","RelatedDescription":"Opened issue \"Forms Previewer should have an indicator showing while it's working and when it's done.\" (#5089) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nForms Previewer is hard to know when it's taking time to generate the preview and when it's actually done and the preview image is changed. This is especially true when the project is large and takes seconds for the previewer to render the preview image.\r\n\r\nThere should be an indicator showing when the preview image is being generated and when the preview image is done and showing.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8975461517","Type":"PullRequestEvent","CreatedAt":"2019-01-30T05:25:29","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5490","RelatedDescription":"Merged pull request \"[MetalPerformanceShaders] Update bindings from Xcode 9.2 to 10.2 - Part 1 of 2\" (#5490) at xamarin/xamarin-macios","RelatedBody":"Fixes: xamarin/xamarin-macios#5362\r\n\r\nThis includes updates for:\r\n\r\n* MetalPerformanceShaders.framework\r\n* MPSCore.framework\r\n* MPSImage.framework\r\n* MPSMatrix.framework\r\n* MPSRayIntersector.framework\r\n\r\nPending:\r\n\r\n* MPSNeuralNetwork.framework\r\n\r\nThis also includes a couple of cherry-picked commits that are needed so the metal performance shaders work applies cleanly and it does not create more merge hell when this branch is merged into master."},{"Id":"8975306064","Type":"IssuesEvent","CreatedAt":"2019-01-30T04:32:49","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5509","RelatedDescription":"Closed issue \"Multipeer Connectivity not working on Personal hotspot\" (#5509) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n\r\n\r\n\r\n1. Download sample https://github.com/lobrien/MultipeerConnectivity\r\n2. Build application and deploy to two phones connected to same wifi.\r\n3. On one phone  select Advertiser\r\n4. On next phone select browser\r\n5. Send Message\r\n6. Message should be sent to other phone.\r\n7. No setup a Personal hotspot\r\n8 retry step 3-6\r\n\r\n\r\n### Expected Behavior\r\nMessage should be sent to second phone\r\n### Actual Behavior\r\n Peer is found but and start connection event in DidChangeState() is sendt but after a while I get a NotConnected event. and its not possible to send message.\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.7.3 (build 43)\r\nInstallation UUID: fa3e4cec-b590-4800-b32d-d6a8467064bb\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.1\r\n\t2.2.0\r\n\t2.1.5\r\nSDK: /usr/local/share/dotnet/sdk/2.2.103/Sdks\r\nSDK Versions:\r\n\t2.2.103\r\n\t2.2.100\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.5.1 (Visual Studio Professional)\r\nAndroid SDK: /Users/sestrombergh/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/sestrombergh/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\nopenjdk version \"1.8.0-9\"\r\nOpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\nOpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.7.1.0\r\nHash: 06ceaea1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.13 (Visual Studio Professional)\r\nHash: a4332c90\r\nBranch: \r\nBuild date: 2019-01-11 13:08:10-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.13 (Visual Studio Professional)\r\nHash: a4332c90\r\nBranch: d15-9\r\nBuild date: 2019-01-11 13:08:09-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707030043\r\nGit revision: 5896ab2acba037c62271742e9e56b900c96c1d8f\r\nBuild date: 2019-01-15 21:18:33+00\r\nBuild branch: release-7.7\r\nXamarin extensions: e5b43ba963b7b407aa5b9f2c59018c32a709e6ab\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Wed Oct 10 23:06:14 PDT 2018\r\n    root:xnu-4570.71.13~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nLiveXAML 1.3.31\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\nDownload sample https://github.com/lobrien/MultipeerConnectivity\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8974694031","Type":"PullRequestEvent","CreatedAt":"2019-01-30T01:32:36","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5514","RelatedDescription":"Opened pull request \"[Appkit] Adds missing ModelAttribute to NSFilePromiseProviderDelegate\" (#5514) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#5504"},{"Id":"8973589306","Type":"PullRequestEvent","CreatedAt":"2019-01-29T21:27:03","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5513","RelatedDescription":"Opened pull request \"[coremedia] Update for xcode 10.2 beta 1\" (#5513) at xamarin/xamarin-macios","RelatedBody":"Most additions are block-based alternatives to callback API. However,\nthe way we bind them, it produce identical API so they are ignored."},{"Id":"8973325824","Type":"IssuesEvent","CreatedAt":"2019-01-29T20:42:55","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5512","RelatedDescription":"Opened issue \"[Xcode10.2] XI unitests fail to build from bots with an error MTOUCH : error MT5106: Could not compile the file(s) \" (#5512) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Update System to Xamarin.iOS, Xamarin.iOS\r\nVersion: 12.4.0.15 (Visual Studio Community)\r\nHash: 8a579bbb and install Xcode10.2\r\n2. Build monotouch-test, donlink test or mini test\r\n\r\n### Expected Behavior\r\nTests Projects should build successfully\r\n### Actual Behavior\r\nFailed to build with an error,  MTOUCH : error MT5106: Could not compile the file(s) '/Users/xamarinqa/agent/_work/r1/a/xamarin-macios/tests/monotouch-test/obj/iPhone/Debug-unified/mtouch-cache/armv7/Xamarin.iOS.dll.s'. Please file a bug report at http://bugzilla.xamarin.com [/Users/xamarinqa/agent/_work/r1/a/xamarin-macios/tests/monotouch-test/monotouch-test.csproj]\r\n\r\n### Environment\r\n\r\n```\r\nXamarin.iOS\r\nVersion: 12.4.0.15 (Visual Studio Community)\r\nHash: 8a579bbb\r\n```\r\n\r\n### Build Logs\r\nBuild Log: http://xqa.blob.core.windows.net/gist/report-533d048480f24f6eb60d613792db0cf4.txt\r\n\r\n### Example Project (If Possible)\r\nmonotouch-test project from xamarin-macios/tests\r\n\r\n### Additional Info\r\nThis issue occurred only running from CI, I couldn't reproduce it locally."},{"Id":"8973117361","Type":"IssuesEvent","CreatedAt":"2019-01-29T20:07:02","Actor":"jsauve","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5511","RelatedDescription":"Opened issue \"Token cancellation bug in NSUrlSession http handler in Xamarin.iOS\" (#5511) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n1. Get sample project from: https://github.com/jsauve/PossibleNSUrlSessionHandlerBug\r\n3. Run the app in the iOS simulator.\r\n4. Click \"Post data\" button in the app.\r\n5. Watch the output window, and click \"Cancel\" button in the app just as new threads start spinning up when `SendAsync()` is about to complete, but has not quite yet completed (line 87, MainPage.xaml.cs). It's tricky to get it timed just right, but it possible with persistence. (You may need to restart the app if you don't get it on the first try, because the response seems to be cached after the first try, making the behavior more difficult to catch. You could also potentially insert an awaited `Task.Delay()` right before SendAsync() to give yourself more time to prepare to click Cancel.)\r\n\r\nScreen capture video included for clarity: https://www.youtube.com/watch?v=TYLUjhxgG4Y\r\n\r\nThe managed http handler does not appear to have this issue; only the NSUrlSession handler.\r\n\r\n### Expected Behavior\r\nThe awaited Task gets cancelled (via the token), regardless of whether or not NSUrlSession or the managed handler are selected in the iOS project.\r\n\r\n### Actual Behavior\r\nWhen using the NSUrlSession http handler, the awaited `SendAsync()` Task will sometimes not complete, leaving the app hanging. It seems that if the token is cancelled at just the right moment (possibly after the native network call has completed, but the data has not yet been returned to the managed layer), that the cancellation will leave HttpClient's `SendAsync()` method hanging indefinitely.\r\n\r\n### Environment\r\nhttps://gist.github.com/jsauve/cb5fcbddcdc7e3f1508e5308eca37497\r\n\r\n### Build Logs\r\nIrrelevant\r\n\r\n### Example Project (If Possible)\r\nhttps://github.com/jsauve/PossibleNSUrlSessionHandlerBug\r\n"},{"Id":"8972874144","Type":"IssuesEvent","CreatedAt":"2019-01-29T19:27:37","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5510","RelatedDescription":"Opened issue \"[Xcode10.2] Could not load the framework 'libswiftIOKit.dylib' while executing --listdev on macOS 10.14.4\" (#5510) at xamarin/xamarin-macios","RelatedBody":"Steps to Reproduce\r\n\r\n1. Update a machine to macOS10.14.4 developer beta. Install Xcode10.2 beta1\r\n2.  Install XI and XM from xcode10.2 branch\r\n3. Execute  mtouch --listdev from commandline\r\n\r\n### Expected Behavior\r\nAll devices connected get displayed\r\n### Actual Behavior\r\nerror HE0004: Could not load the framework 'libswiftIOKit.dylib' (path: /Applications/Xcode_10.2.0-beta.app/Contents/Frameworks/libswiftIOKit.dylib): dlopen(/Applications/Xcode_10.2.0-beta.app/Contents/Frameworks/libswiftIOKit.dylib, 1): Library not loaded: @rpath/libswiftCoreFoundation.dylib\r\n  Referenced from: /Applications/Xcode_10.2.0-beta.app/Contents/Frameworks/libswiftIOKit.dylib\r\n  Reason: image not found\r\n\r\n### Environment\r\n\r\n```\r\n xamarin.mac-5.4.0.15.pkg\r\n xamarin.ios-12.4.0.15.pkg\r\n\r\n OSX: 10.14.4\r\n\r\n```\r\n\r\n### Build Logs\r\nError Log: https://gist.github.com/GouriKumari/e69b047e5d5f8b334cb24830e2b94eb8\r\nSystem Log: https://gist.github.com/GouriKumari/3d02d62a7c6f93faca6409907552d8d9\r\n### Additional Info:\r\nI couldn't launch an iOS app on simulator from this bot. But it worked from Xcode directly. \r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":61,"FavoriteCount":27,"RawContent":null},{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":154,"FavoriteCount":72,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":20,"RawContent":null},{"Id":"1085961073902129152","CreatedAt":"2019-01-17T18:04:30+00:00","UserScreenname":"xamarinhq","Text":"As the .NET community expands so should the community standups... We are pleased to introduce the expansion of the… https://t.co/EDO0vChQlR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1083829954515750923","CreatedAt":"2019-01-11T20:56:12+00:00","UserScreenname":"xamarinhq","Text":"...just posted on the Xamarin Blog, Andrei Nitescu shares one of his contributions to Xamarin.Forms, the bindable l… https://t.co/rp3eVPLbYl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":104,"FavoriteCount":45,"RawContent":null},{"Id":"1083399709526503424","CreatedAt":"2019-01-10T16:26:34+00:00","UserScreenname":"xamarinhq","Text":"Our very first Mobile .NET #CommunityStandup will be live in about 30 minutes at 9am Pacific! @maddyleger1,… https://t.co/vmFHIKZTIt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":270,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":153,"FavoriteCount":69,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":83,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":176,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":113,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2019-01-30T05:31:19.5806687Z","RunDurationInMilliseconds":2705}