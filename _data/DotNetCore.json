{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Entity Framework Core 2.1 Preview 2","PublishedOn":"2018-04-11T18:02:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we’re releasing the second preview of EF Core 2.1, alongside .NET Core 2.1 Preview 2 and ASP.NET Core 2.1 Preview 2. Thank you so much to everyone who has tried our early builds and has helped...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-entity-framework-core-2-1-preview-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 2","PublishedOn":"2018-04-11T17:53:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 2. The release is now ready for broad testing, as we get closer to a final build within the next two to three months. We&#8217;d appreciate any feedback...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/","RawContent":null},{"Title":"Explore CosmosDB with .NET Core and MongoDB","PublishedOn":"2018-04-09T16:00:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you had to design general purpose &#8220;metadata&#8221; tables in your SQL database that basically store column names and values? Do you often serialize/de-serialize XML or JSON from your SQL...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/09/explore-cosmosdb-with-net-core-and-mongodb/","RawContent":null},{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":33,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"},{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7524039457","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:52:25","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17532","RelatedDescription":"Merged pull request \"Remove CreateFromPinnedArray from Memory (moved to MemoryMarshal)\" (#17532) at dotnet/coreclr","RelatedBody":"Part of https://github.com/dotnet/corefx/issues/28954\r\n\r\nCorefx side (remove from ref): https://github.com/dotnet/corefx/pull/29077\r\n\r\nRelated PR: https://github.com/dotnet/coreclr/pull/17500"},{"Id":"7523659900","Type":"PullRequestEvent","CreatedAt":"2018-04-13T02:22:48","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17538","RelatedDescription":"Opened pull request \"Update CoreFx to preview3-26413-02 (master)\" (#17538) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7523518618","Type":"PullRequestEvent","CreatedAt":"2018-04-13T01:31:23","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17537","RelatedDescription":"Opened pull request \"[Arm64/Windows] Simplify JIT_MemSet & JIT_MemCpy\" (#17537) at dotnet/coreclr","RelatedBody":"JIT_Memset alignment code was definitly broken for some\r\nunaligned cases\r\n\r\nJIT_MemCpy likely had the same issue\r\n\r\nSimplify implementation to reduce maintenance burden\r\n\r\n@janvorli @jkotas PTAL\r\n@dotnet/arm64-contrib FYI\r\n\r\nThis is the Windows equivalent of #17536 \r\n\r\nShould be required to fix probable issues on windows like #17167, #17168, & #17169 \r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7522707085","Type":"IssuesEvent","CreatedAt":"2018-04-12T21:21:34","Actor":"lunim","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9064","RelatedDescription":"Opened issue \"Improve dotnet tool install/update experience\" (#9064) at dotnet/cli","RelatedBody":"For the purposes of build automation, it would be helpful for 'dotnet tool install' to either update or return a positive exit code if the tool is already installed.  Likewise, 'dotnet tool update' might install the tool if not already installed.\r\n\r\nWe are basically looking for a clean way to ensure a global tool is installed and updated at runtime, preferably with a single command.  It seems most error code responses are 1, so it is difficult to determine what the error is.\r\n\r\nSome examples of current behavior:\r\n\r\n> dotnet tool install dotnet-mytool -g\r\n> Tool 'dotnet-mytool' (version '1.0.0') was successfully installed.\r\n\r\nThen, when running with version 1.0.1 available of the same tool:\r\n> dotnet tool install dotnet-mytool -g\r\n> Tool 'dotnet-mytool' is already installed.\r\n\r\nIf I try to run update without the tool installed:\r\n> dotnet tool update dotnet-mytool -g\r\n> Tool 'dotnet-mytool' is not currently installed\r\n\r\nOne potential flow that would be useful:\r\n\r\n> dotnet tool install dotnet-mytool -g\r\n> Tool 'dotnet-mytool' (version '1.0.0') was successfully installed.\r\n\r\n _(new tool version published)_\r\n\r\n> dotnet tool install dotnet-mytool -g [possible flag to enable behavior]\r\n> Tool 'dotnet-mytool' was successfully updated from version '1.0.0' to version '1.0.1'.\r\n\r\n> dotnet tool install dotnet-mytool -g\r\n> Tool 'dotnet-mytool' is already installed and is the latest version [code 0, currently returns a 1]\r\n"},{"Id":"7522704397","Type":"PullRequestEvent","CreatedAt":"2018-04-12T21:21:00","Actor":"mishra14","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/9063","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.7.0-rtm.5092 into cli\" (#9063) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.7.0-rtm.5092 into cli release/2.1.2xx branch"},{"Id":"7522699550","Type":"PullRequestEvent","CreatedAt":"2018-04-12T21:19:56","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9063","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.7.0-rtm.5092 into cli\" (#9063) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.7.0-rtm.5092 into cli release/2.1.2xx branch"},{"Id":"7521127382","Type":"IssuesEvent","CreatedAt":"2018-04-12T16:13:33","Actor":"kasper3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9062","RelatedDescription":"Opened issue \"Unify names of argument --source-feed vs -s,--source\" (#9062) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nTry:\r\n\r\n```cmd\r\ndotnet nuget push -h\r\n\r\nUsage: dotnet nuget push [arguments] [options]\r\n\r\nArguments:\r\n  [root]  Specify the path to the package and your API key to push the package to the server.\r\n\r\nOptions:\r\n  ...\r\n  -s|--source <source>           Specifies the server URL\r\n  ...\r\n```\r\n\r\nthen:\r\n\r\n```cmd\r\ndotnet tool install -h\r\n\r\nUsage: dotnet tool install [options] <PACKAGE_ID>\r\n\r\nArguments:\r\n  <PACKAGE_ID>   NuGet Package Id of the tool to install.\r\n\r\nOptions:\r\n  ...\r\n  --source-feed <SOURCE_FEED>   Adds an additional NuGet package source to use during installation.\r\n  ...\r\n```\r\n\r\n## Expected  behavior\r\n\r\n`dotnet tool install` should have `-s, --source` switch instead of `--source-feed` without (unreserved) `-s` alias\r\n\r\n## Actual behavior\r\n\r\n`dotnet nuget push` has `-s, --source`, and `dotnet tool install` has `--source-feed`, hence the disparity.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-preview3-008443\r\n Commit:    1e2e8138b9\r\n```"},{"Id":"7520938085","Type":"IssuesEvent","CreatedAt":"2018-04-12T15:42:46","Actor":"BillHiebert","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9061","RelatedDescription":"Opened issue \"Occasionally seeing warnings or errors building Asp.Net Core 2.1 projects\" (#9061) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n- From VS, create a new ASP.NET Core 2.1 Empty Web project\r\n- Build\r\n\r\n## Expected  behavior\r\nBuild succeeds\r\n\r\n## Actual behavior\r\nOccasionally, the build will succeed but show the following warning:\r\n\r\nCould not write state file \"obj\\Debug\\netcoreapp1.1\\App3.csprojAssemblyReference.cache\". The process cannot access the file 'D:\\dd\\WTE\\Rel\\TestResults\\Deploy_asplab 2018-04-11 14_56_42\\Out\\App3\\App3\\obj\\Debug\\netcoreapp1.1\\App3.csprojAssemblyReference.cache' because it is being used by another process.\r\n\r\nOn one occasion I saw the following error:\r\n\r\n```\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly.\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\\Users\\billhie\\Source\\Repos\\WebApplication87\\WebApplication87\\obj\\Debug\\netcoreapp2.1\\WebApplication87.assets.cache' because it is being used by another process.\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n1>Done building project \"WebApplication87.csproj\" -- FAILED.\r\n\r\n\r\n```\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-preview2-008530\r\n Commit:    822ae6d43a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-preview2-26406-04\r\n  Commit:  6833f3026b\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.7 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.8 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007474 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007480 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview1-008174 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview2-008530 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7520936673","Type":"IssuesEvent","CreatedAt":"2018-04-12T15:42:33","Actor":"akaylh","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/707","RelatedDescription":"Opened issue \"Need DbProviderFactories\" (#707) at dotnet/standard","RelatedBody":"DbProviderFactories is very  important feature,Please support in standard.\r\nBTW I know already in .net core 2.1."},{"Id":"7516946311","Type":"PullRequestEvent","CreatedAt":"2018-04-12T00:40:56","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/700","RelatedDescription":"Merged pull request \"Update BuildTools to preview3-02711-02 (master)\" (#700) at dotnet/standard","RelatedBody":""},{"Id":"7514495259","Type":"IssuesEvent","CreatedAt":"2018-04-11T15:51:18","Actor":"lmagyar","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/706","RelatedDescription":"Closed issue \"Failed assembly resolution in XAML workflow projects\" (#706) at dotnet/standard","RelatedBody":"**Situation:**\r\n* using VS 15.6.5\r\n* a net461 project uses old project format but the new PackageReference tag\r\n* the net461 project contains XAML Workflow Activity definitions\r\n* the net461 project refers directly to a netstandard2.0 NuGet package or refers to a net461 NuGet package that has references to netstandard projects, ie. it's a mixed environment\r\n  * indirect: Microsoft.Orleans.Core v1.5.3 (net461 project)\r\n  * direct: Orleans.Activities v0.4.0, Abp v3.4.0 (netstandard2.0 projects)\r\n\r\n**Problem:**\r\n* build warnings, that some (quite random) .dll-s has an incorrect format\r\n* it's only a warning, but the application really fails with `System.NotSupportedException: Expression Activity type 'CSharpValue'1' requires compilation in order to run.  Please ensure that the workflow has been compiled.`\r\n\r\nIn case of referring to Orleans.Activities NuGet pkg the build warnings:\r\n* `Could not compile workflow expressions because file 'file:///C:\\Users\\xxx\\.nuget\\packages\\system.reflection.typeextensions\\4.4.0\\ref\\net461\\System.Reflection.TypeExtensions.dll' has an incorrect format. Workflows in this project may still run, if they do not require expression compilation. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n* `Could not run workflow validation because file 'System.Reflection.TypeExtensions, PublicKeyToken=b03f5f7f11d50a3a' has an incorrect format. This will not prevent workflows from running; but any workflow that has a validation error will fail at runtime. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n\r\nIn case of referring to Microsoft.Orleans.Core NuGet pkg the build warnings:\r\n* `Could not compile workflow expressions because file 'file:///C:\\Users\\xxx\\.nuget\\packages\\system.net.http\\4.3.0\\ref\\net46\\System.Net.Http.dll' has an incorrect format. Workflows in this project may still run, if they do not require expression compilation. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n* `Could not run workflow validation because file 'System.Net.Http, PublicKeyToken=b03f5f7f11d50a3a' has an incorrect format. This will not prevent workflows from running; but any workflow that has a validation error will fail at runtime. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n\r\nIn case of referring to Abp NuGet pkg the build warnings:\r\n* `Could not compile workflow expressions because file 'file:///C:\\Users\\xxx\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.4.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll' has an incorrect format. Workflows in this project may still run, if they do not require expression compilation. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n* `Could not run workflow validation because file 'System.Runtime.CompilerServices.Unsafe, PublicKeyToken=b03f5f7f11d50a3a' has an incorrect format. This will not prevent workflows from running; but any workflow that has a validation error will fail at runtime. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n\r\n**Repros:**\r\n* see [developer community problem](https://developercommunity.visualstudio.com/content/problem/202765/failed-assembly-resolution-in-xaml-workflow-projec.html) though nobody cares about these reports...\r\n* [lmagyar/Orleans.Activities/tree/samples-xaml \"permalink\"](https://github.com/lmagyar/Orleans.Activities/tree/75f54b293bd06a1a71d4ce490e864117b7d5571d)\r\n  * **NOTE:** If you want to run the solution,\r\n    * there is another error #704, before running it, copy a netfx.force.conflicts.dll to the `Arithmetical.DevSiloHost` output dir\r\n    * first start manually `Arithmetical.DevSiloHost` wait 5s to start up, then start manually `Arithmetical.DevClusterClient`!\r\n\r\nreferring #704 #481 dotnet/sdk#1930\r\n\r\nI don't know whether dotnet/project-system is a better place for this issue?"},{"Id":"7514317727","Type":"IssuesEvent","CreatedAt":"2018-04-11T15:23:43","Actor":"joperezr","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/704","RelatedDescription":"Closed issue \"Missing netfx.force.conflicts.dll problem, again\" (#704) at dotnet/standard","RelatedBody":"**Situation:**\r\n* a net461 project refers to a netstandard2.0 NuGet package\r\n* the net461 project uses old project format but the new PackageReference tag\r\n* the net461 project contains XAML Workflow Activity definitions\r\n* using VS 15.6.5\r\n\r\n**Problem:**\r\n* the XAML codegen adds a reference to netfx.force.conflicts: `assemblyList.Add(Load(\"netfx.force.conflicts, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\"));`\r\n* but this .dll is not copied to the output directory\r\n* it causes exception: `System.IO.FileNotFoundException: Could not load file or assembly 'netfx.force.conflicts, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.`\r\n\r\n**Workaround:**\r\n* manually copying a netfx.force.conflicts.dll to the output solves the problem, the app runs\r\n* I don't know whether this .dll necessary at runtime at all, maybe generating `assemblyList.Add(Load(\"netfx.force.conflicts...` is unnecessary\r\n\r\n**Repro:**\r\n* [lmagyar/Orleans.Activities/tree/samples-xaml \"permalink\"](https://github.com/lmagyar/Orleans.Activities/tree/75f54b293bd06a1a71d4ce490e864117b7d5571d)\r\n* **NOTE:** If you want to run the solution, first start manually `HelloWorld.DevSiloHost` wait 5s to start up, then start manually `HelloWorld.DevClusterClient`!\r\n\r\nreferring #481 dotnet/sdk#1930\r\n\r\nI don't know whether dotnet/project-system is a better place for this issue?"},{"Id":"7507355727","Type":"IssuesEvent","CreatedAt":"2018-04-10T14:19:36","Actor":"lmagyar","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/706","RelatedDescription":"Opened issue \"Failed assembly resolution in XAML workflow projects\" (#706) at dotnet/standard","RelatedBody":"**Situation:**\r\n* using VS 15.6.5\r\n* a net461 project uses old project format but the new PackageReference tag\r\n* the net461 project contains XAML Workflow Activity definitions\r\n* the net461 project refers directly to a netstandard2.0 NuGet package or refers to a net461 NuGet package that has references to netstandard projects, ie. it's a mixed environment\r\n  * indirect: Microsoft.Orleans.Core v1.5.3 (net461 project)\r\n  * direct: Orleans.Activities v0.4.0, Abp v3.4.0 (netstandard2.0 projects)\r\n\r\n**Problem:**\r\n* build warnings, that some (quite random) .dll-s has an incorrect format\r\n* it's only a warning, but the application really fails with `System.NotSupportedException: Expression Activity type 'CSharpValue'1' requires compilation in order to run.  Please ensure that the workflow has been compiled.`\r\n\r\nIn case of referring to Orleans.Activities NuGet pkg the build warnings:\r\n* `Could not compile workflow expressions because file 'file:///C:\\Users\\xxx\\.nuget\\packages\\system.reflection.typeextensions\\4.4.0\\ref\\net461\\System.Reflection.TypeExtensions.dll' has an incorrect format. Workflows in this project may still run, if they do not require expression compilation. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n* `Could not run workflow validation because file 'System.Reflection.TypeExtensions, PublicKeyToken=b03f5f7f11d50a3a' has an incorrect format. This will not prevent workflows from running; but any workflow that has a validation error will fail at runtime. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n\r\nIn case of referring to Microsoft.Orleans.Core NuGet pkg the build warnings:\r\n* `Could not compile workflow expressions because file 'file:///C:\\Users\\xxx\\.nuget\\packages\\system.net.http\\4.3.0\\ref\\net46\\System.Net.Http.dll' has an incorrect format. Workflows in this project may still run, if they do not require expression compilation. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n* `Could not run workflow validation because file 'System.Net.Http, PublicKeyToken=b03f5f7f11d50a3a' has an incorrect format. This will not prevent workflows from running; but any workflow that has a validation error will fail at runtime. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n\r\nIn case of referring to Abp NuGet pkg the build warnings:\r\n* `Could not compile workflow expressions because file 'file:///C:\\Users\\xxx\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.4.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll' has an incorrect format. Workflows in this project may still run, if they do not require expression compilation. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n* `Could not run workflow validation because file 'System.Runtime.CompilerServices.Unsafe, PublicKeyToken=b03f5f7f11d50a3a' has an incorrect format. This will not prevent workflows from running; but any workflow that has a validation error will fail at runtime. If the file is a platform-specific library or executable, consider building the project using MSBuild.exe from a command prompt of the targeted platform.`\r\n\r\n**Repros:**\r\n* see [developer community problem](https://developercommunity.visualstudio.com/content/problem/202765/failed-assembly-resolution-in-xaml-workflow-projec.html) though nobody cares about these reports...\r\n* [lmagyar/Orleans.Activities/tree/samples-xaml](https://github.com/lmagyar/Orleans.Activities/tree/samples-xaml) or [lmagyar/Orleans.Activities/tree/samples-xaml \"permalink\"](https://github.com/lmagyar/Orleans.Activities/tree/75f54b293bd06a1a71d4ce490e864117b7d5571d)\r\n  * **NOTE:** If you want to run the solution,\r\n    * there is another error #704, before running it, copy a netfx.force.conflicts.dll to the `Arithmetical.DevSiloHost` output dir\r\n    * first start manually `Arithmetical.DevSiloHost` wait 5s to start up, then start manually `Arithmetical.DevClusterClient`!\r\n\r\nreferring #704 #481 dotnet/sdk#1930\r\n\r\nI don't know whether dotnet/project-system is a better place for this issue?"},{"Id":"7506696885","Type":"IssuesEvent","CreatedAt":"2018-04-10T12:32:41","Actor":"Tachionstrahl","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/705","RelatedDescription":"Opened issue \"System.Web.HttpUtility.HtmlDecode can't decode &hairsp;\" (#705) at dotnet/standard","RelatedBody":"Hello,\r\ni have a problem with the HtmlDecode Method of System.Web.HttpUtility:\r\nIt can't decode the \"&hairsp;\" Entity. I was wondering if there is a reason for it, because it's defined by the w3.org ([](https://www.w3.org/TR/WD-math-970710/fnewtable05.html))\r\n\r\nGreetings from Germany,\r\nTachionstrahl"},{"Id":"7506611689","Type":"IssuesEvent","CreatedAt":"2018-04-10T12:16:29","Actor":"lmagyar","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/704","RelatedDescription":"Opened issue \"Missing netfx.force.conflicts.dll problem, again\" (#704) at dotnet/standard","RelatedBody":"**Situation:**\r\n* a net461 project refers to a netstandard2.0 NuGet package\r\n* the net461 project uses old project format but the new PackageReference tag\r\n* the net461 project contains XAML Workflow Activity definitions\r\n* using VS 15.6.5\r\n\r\n**Problem:**\r\n* the XAML codegen adds a reference to netfx.force.conflicts: `assemblyList.Add(Load(\"netfx.force.conflicts, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\"));`\r\n* but this .dll is not copied to the output directory\r\n* it causes exception: `System.IO.FileNotFoundException: Could not load file or assembly 'netfx.force.conflicts, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.`\r\n\r\n**Workaround:**\r\n* manually copying a netfx.force.conflicts.dll to the output solves the problem, the app runs\r\n* I don't know whether this .dll necessary at runtime at all, maybe generating `assemblyList.Add(Load(\"netfx.force.conflicts...` is unnecessary\r\n\r\n**Repro:**\r\n* [lmagyar/Orleans.Activities/tree/samples-xaml](https://github.com/lmagyar/Orleans.Activities/tree/samples-xaml)\r\n* [lmagyar/Orleans.Activities/tree/samples-xaml \"permalink\"](https://github.com/lmagyar/Orleans.Activities/tree/75f54b293bd06a1a71d4ce490e864117b7d5571d)\r\n* **NOTE:** If you want to run the solution, first start manually `HelloWorld.DevSiloHost` wait 5s to start up, then start manually `HelloWorld.DevClusterClient`!\r\n\r\nreferring #481 dotnet/sdk#1930\r\n\r\nI don't know whether dotnet/project-system is a better place for this issue?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7524106328","Type":"PullRequestEvent","CreatedAt":"2018-04-13T05:19:55","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/28734","RelatedDescription":"Closed pull request \"Adding Begin/End tasks to definitions\" (#28734) at dotnet/corefx","RelatedBody":""},{"Id":"7524095804","Type":"PullRequestEvent","CreatedAt":"2018-04-13T05:15:38","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29083","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-26413-00, beta-26413-00, respectively (master)\" (#29083) at dotnet/corefx","RelatedBody":""},{"Id":"7524056932","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:59:32","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29082","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#29082) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7524041158","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:53:11","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29070","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#29070) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7524036359","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:51:07","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29053","RelatedDescription":"Merged pull request \"Fix wrong value in codedoc\" (#29053) at dotnet/corefx","RelatedBody":"The documented value (int.MaxValue) is different from the value in the code (-1).\r\n\r\nfix #28782"},{"Id":"7524036345","Type":"IssuesEvent","CreatedAt":"2018-04-13T04:51:07","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/28782","RelatedDescription":"Closed issue \"Difference in code and documentation of BlockingCollection.BoundedCapacity\" (#28782) at dotnet/corefx","RelatedBody":"@nerai commented on [Tue Apr 03 2018](https://github.com/dotnet/coreclr/issues/17395)\n\n[.NET framework reference source of `BlockingCollection.BoundedCapacity`](https://referencesource.microsoft.com/#System/sys/system/collections/concurrent/BlockingCollection.cs,72) says:\r\n\r\n> ... The bounded capacity of this collection, or int.MaxValue if no bound was supplied.\r\n\r\nHowever, if no capacity is supplied in the ctor, it is called:\r\n\r\n    Initialize(collection, NON_BOUNDED, collection.Count);\r\n\r\nwith\r\n\r\n    private const int NON_BOUNDED = -1;\r\n\r\nSo the BoundedCapacity of an unbounded instance is -1, not int.MaxValue. To verify:\r\n\r\n\tvar a = new BlockingCollection<int> ();\r\n\tConsole.WriteLine (a.BoundedCapacity); // prints -1\r\n\tConsole.WriteLine (int.MaxValue); // prints 2147483647\r\n\n\n---\n\n@RussKeldorph commented on [Tue Apr 03 2018](https://github.com/dotnet/coreclr/issues/17395#issuecomment-378327059)\n\n@danmosemsft \n\n"},{"Id":"7524005295","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:37:49","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29081","RelatedDescription":"Opened pull request \"Address some SocketsHttpHandler feedback\" (#29081) at dotnet/corefx","RelatedBody":"- We were using WriteAsciiStringAsync in one place we shouldn't have been.  Change it to WriteStringAsync.\r\n- We were potentially overflowing in a multiplication on MaxResponseHeadersLength if it was set to a very large value.  Changed it to use long multiplication and to cap the max length at int.MaxValue.\r\n- We were accidentally using DateTimeOffset.Now instead of UtcNow when getting the current time during stale pool removal.  Change to UtcNow.\r\n- We had an unnecessary/unreachable catch block.  Remove it.\r\n- In a race condition where the handler and thus its pool manager was disposed while the cleaning timer callback was in flight (either already queued or already running), we could potentially dispose of the timer and then the callback attempt to change the timer and incur an ObjectDisposedException that would go unhandled on a thread pool thread.  One fix would be to track disposal under the same lock that's used to mutate the cleaning timer, but that incurs the cost of tracking disposal and taking a lock on disposal in order to deal with a rare race condition (that we've never actually seen happen).  Instead, I opt to simply catch and eat any ODEs that occur.\r\n- If either of the connection lifetime values are set at 0, we avoid putting connections back into a pool and thus also avoid creating the cleaning timer.  But we're still putting the created pool into the pools collection, which in theory in an extreme case could be a leak.  The fix is simply to not store the pool into the pools in this case.\r\n\r\ncc: @GrabYourPitchforks, @geoffkizer, @davidsh"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7524010050","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:39:53","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26137","RelatedDescription":"Opened pull request \"Merge dev15.7.x to dev15.7.x-vs-deps\" (#26137) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev15.7.x into dev15.7.x-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev15.7.x-to-dev15.7.x-vs-deps\ngit reset --hard upstream/dev15.7.x-vs-deps\ngit merge upstream/dev15.7.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev15.7.x-to-dev15.7.x-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7523999550","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:35:30","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5684","RelatedDescription":"Merged pull request \"[ARM/X86] Fix calling conventions\" (#5684) at dotnet/corert","RelatedBody":"@dotnet/arm32-corert-contrib please review"},{"Id":"7523994225","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:33:15","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5689","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#5689) at dotnet/corert","RelatedBody":"Picks up dotnet/coreclr#17506.\r\n\r\nFixes #5661.\r\n\r\nThanks @sandreenko for the quick fix!"},{"Id":"7523994219","Type":"IssuesEvent","CreatedAt":"2018-04-13T04:33:15","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5661","RelatedDescription":"Closed issue \"Bad codegen in Boolean::TryParse\" (#5661) at dotnet/corert","RelatedBody":"`TryParse(ReadOnlySpan<char> value, out bool result)` [accesses two string literals](https://github.com/dotnet/corert/blob/7ce5d362dd49aeacf40071b1623181b2a477583a/src/System.Private.CoreLib/shared/System/Boolean.cs#L202-L235) and makes a Span out of them - \"True\" and \"False\".\r\n\r\nRyuJIT with optimizations enabled will reuse the first Span for \"True\" instead of making a new one for \"False\".\r\n\r\nTo repro, simply compile `Console.WriteLine(Boolean.Parse(\"False\"));` with optimizations enabled. It will throw an exception because we don't match \"False\" to \"False\", but try to match \"True\" twice.\r\n\r\nMy guess is there's something wrong with this piece of code in RyuJIT:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/0f0320e58fd006a02cdecf7ae45426f54da333e5/src/jit/gentree.cpp#L6426-L6430"},{"Id":"7523681263","Type":"PullRequestEvent","CreatedAt":"2018-04-13T02:30:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5695","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5695) at dotnet/corert","RelatedBody":""},{"Id":"7523153289","Type":"PullRequestEvent","CreatedAt":"2018-04-12T23:19:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5690","RelatedDescription":"Merged pull request \"Fix metadata generation for null string constants\" (#5690) at dotnet/corert","RelatedBody":"This should take the code path that returns `ConstantReferenceValue`."},{"Id":"7522471627","Type":"PullRequestEvent","CreatedAt":"2018-04-12T20:32:42","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5695","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5695) at dotnet/corert","RelatedBody":""},{"Id":"7522361297","Type":"PullRequestEvent","CreatedAt":"2018-04-12T20:10:21","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5686","RelatedDescription":"Merged pull request \"Use canonical method IL in scanner's ImportCall\" (#5686) at dotnet/corert","RelatedBody":"This is necessary so that the scanner can accurately predict what weird things we're going to need later. We're emulating what `getCallInfo` will do.\r\n\r\nFixes #5648. Note that the F# hello app is still blocked, this time on complex tail calls (#1683)."},{"Id":"7522361254","Type":"IssuesEvent","CreatedAt":"2018-04-12T20:10:20","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5648","RelatedDescription":"Closed issue \"F# HelloWorld fails with ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'Microsoft.FSharp.Core.FSharpFunc`2<Microsoft.FSharp.Core.Unit, System.__Canon>' not computed by the IL scanner.\" (#5648) at dotnet/corert","RelatedBody":"I have modified the HelloWorld [1] example to F# and tried to compile it with CoreRT. \r\n[helloworld.zip](https://github.com/dotnet/corert/files/1873738/helloworld.zip)\r\n\r\n\r\nThe ILCompiler fails with the following message:\r\n\r\n```\r\ndotnet publish -c Release -r linux-x64\r\nMicrosoft (R) Build Engine version 15.5.180.51428 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /tmp/helloworld/helloworld.fsproj...\r\n  Generating MSBuild file /tmp/helloworld/obj/helloworld.fsproj.nuget.g.props.\r\n  Restore completed in 1.77 sec for /tmp/helloworld/helloworld.fsproj.\r\n  helloworld -> /tmp/helloworld/bin/Release/netcoreapp2.0/linux-x64/helloworld.dll\r\n  /usr/bin/clang-3.9\r\n  Generating native code\r\nEXEC : error : Code generation failed [/tmp/helloworld/helloworld.fsproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'Microsoft.FSharp.Core.FSharpFunc`2<Microsoft.FSharp.Core.Unit, System.__Canon>' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO& pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO& pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(IMethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/zpodlovics/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-26403-02/build/Microsoft.NETCore.Native.targets(171,5): error MSB3073: The command \"\"/home/zpodlovics/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26403-02/tools/ilc\" @\"obj/Release/netcoreapp2.0/linux-x64/native/helloworld.ilc.rsp\"\" exited with code 1. [/tmp/helloworld/helloworld.fsproj]\r\n```\r\n\r\nUsing a more recent version (4.3.*) of F# dependency have the same problem (by modifying the fsproj file):\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.fs\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"FSharp.Core\" Version=\"4.3.*\" />\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nThe exception seems to raised from here:\r\nhttps://github.com/dotnet/corert/blob/master/src/ILCompiler.Compiler/src/Compiler/ILScanner.cs#L155\r\n\r\nEnvironment: Ubuntu 16.04 x86_64\r\n```\r\nii  dotnet-host                                                 2.1.0-preview1-26216-03-1                                   amd64        Microsoft .NET Core Host - 2.1.0 Preview 1\r\nii  dotnet-hostfxr-2.0.5                                        2.0.5-1                                                     amd64        Microsoft .NET Core Host FX Resolver - 2.0.5 2.0.5\r\nii  dotnet-hostfxr-2.0.6                                        2.0.6-1                                                     amd64        Microsoft .NET Core Host FX Resolver - 2.0.6 2.0.6\r\nii  dotnet-runtime-2.0.5                                        2.0.5-1                                                     amd64        Microsoft .NET Core Runtime - 2.0.5 Microsoft.NETCore.App 2.0.5\r\nii  dotnet-runtime-2.0.6                                        2.0.6-1                                                     amd64        Microsoft .NET Core Runtime - 2.0.6 Microsoft.NETCore.App 2.0.6\r\nii  dotnet-runtime-deps-2.1.0-preview1-26216-03                 2.1.0-preview1-26216-03-1                                   amd64        dotnet-runtime-deps-2.1.0-preview1-26216-03 2.1.0-preview1-26216-03\r\nii  dotnet-sdk-2.1.4                                            2.1.4-1                                                     amd64        Microsoft .NET Core SDK - 2.1.4\r\n```\r\n\r\n\r\n[1] https://github.com/dotnet/corert/tree/master/samples/HelloWorld"},{"Id":"7521905797","Type":"PullRequestEvent","CreatedAt":"2018-04-12T18:40:05","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5694","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5694) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7521420166","Type":"PullRequestEvent","CreatedAt":"2018-04-12T17:07:56","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5687","RelatedDescription":"Merged pull request \"CoreFX Shell Script Fix\" (#5687) at dotnet/corert","RelatedBody":"Fixes an issue on OSX where directory resolution would fail if a CoreFX directory was not present"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7523641952","Type":"PullRequestEvent","CreatedAt":"2018-04-13T02:16:18","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2135","RelatedDescription":"Merged pull request \"Add support for InvariantGlobalization MSBuild property\" (#2135) at dotnet/sdk","RelatedBody":"Fixes #1328"},{"Id":"7523641944","Type":"IssuesEvent","CreatedAt":"2018-04-13T02:16:18","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1328","RelatedDescription":"Closed issue \"Add MSBuild property for Globalization.Invariant\" (#1328) at dotnet/sdk","RelatedBody":"We added support in the runtime to turn off culture support, so you can run apps without having to install ICU on the machine.\r\n\r\nTo enable this, a flag in the runtimeconfig.json is set:\r\n\r\nSee https://github.com/dotnet/corefx/blob/master/src/System.Globalization/tests/Invariant/xunit.console.netcore.runtimeconfig.json#L4\r\n\r\n```JSON\r\n{\r\n  \"runtimeOptions\": {\r\n    \"configProperties\": {\r\n      \"System.Globalization.Invariant\": true\r\n    },\r\n```\r\n\r\nWe should add an MSBuild property for this switch, just like we did for the GC and ThreadPool properties in https://github.com/dotnet/sdk/pull/746.\r\n\r\nIt should be as simple as adding a new line in https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.Sdk.targets#L173-L193 for the property.  (And adding a test.)"},{"Id":"7523279217","Type":"PullRequestEvent","CreatedAt":"2018-04-13T00:02:06","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2141","RelatedDescription":"Opened pull request \"Support uppercase 'V' in TargetFrameworkVersion\" (#2141) at dotnet/sdk","RelatedBody":"Fixes #1884\r\n\r\nPeeling the onion on this, NuGet will also need a fix for the end-to-end to work: https://github.com/NuGet/Home/issues/6823"},{"Id":"7523070734","Type":"PullRequestEvent","CreatedAt":"2018-04-12T22:53:31","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2140","RelatedDescription":"Opened pull request \"WIP Run target according to NoBuild flag\" (#2140) at dotnet/sdk","RelatedBody":"pending tests"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"984485381071450112","CreatedAt":"2018-04-12T17:36:20+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0-preview2 now available https://t.co/W0wBUDkqXt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":67,"FavoriteCount":47,"RawContent":null},{"Id":"984130513383317505","CreatedAt":"2018-04-11T18:06:13+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core 2.1 Preview 2 https://t.co/SS9hInyJlJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":121,"FavoriteCount":73,"RawContent":null},{"Id":"984127988592623616","CreatedAt":"2018-04-11T17:56:11+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 2.1 Preview 2 https://t.co/T8ah6NSIAq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":404,"FavoriteCount":243,"RawContent":null},{"Id":"983818840961269761","CreatedAt":"2018-04-10T21:27:44+00:00","UserScreenname":"dotnet","Text":"Explore CosmosDB with .NET Core and MongoDB https://t.co/9VeWPHkIKo","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":110,"FavoriteCount":37,"RawContent":null},{"Id":"983697698778841088","CreatedAt":"2018-04-10T13:26:22+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz with guest @jonskeet for some live coding this morning as they discuss managing DateTime valu… https://t.co/c6k5MACy5Z","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"983487812107304960","CreatedAt":"2018-04-09T23:32:21+00:00","UserScreenname":"dotnet","Text":"Curious which analyzers/fixers (“Quick Actions”) @roslyn provides? @kuhlenhuth has the answer. https://t.co/nawR22r6jz","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":19,"FavoriteCount":7,"RawContent":null},{"Id":"981533325767606273","CreatedAt":"2018-04-04T14:05:55+00:00","UserScreenname":"dotnet","Text":"Jeff (@csharpfritz) is working with @Azure Q &amp; A Maker today to improve his chat-bot for Twitch and Mixer.  Tune in… https://t.co/MLdDPdKPTL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2018-04-13T05:30:19.780533Z","RunDurationInMilliseconds":7424}