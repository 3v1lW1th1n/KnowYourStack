{"Data":{"Blog":{"FeedItems":[{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7849502565","Type":"PullRequestEvent","CreatedAt":"2018-06-20T04:03:46","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1857","RelatedDescription":"Opened pull request \"[documentation] make it clear that Android target is needed for tests.\" (#1857) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7848638108","Type":"PullRequestEvent","CreatedAt":"2018-06-19T22:39:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1815","RelatedDescription":"Merged pull request \"Build libmonodroid with cmake for all targets\" (#1815) at xamarin/xamarin-android","RelatedBody":"libmonodroid is built for several targets - Android, host system, cross builds\r\nfor Windows. Android builds use the make-based `ndk-build` mechanism while the\r\nhost and cross build put all the building steps in the .csproj file, which is\r\nneither native for msbuild nor nice. In effect we specify C/C++ compiler/linker\r\nflags as well as source files in two locations, thus making it error prone when\r\nmaking changes/fixing bugs.\r\n\r\nAndroid SDK, however, ships its own copy of cmake (for all supported platforms),\r\nwhile NDK ships support for building native Android apps with cmake. Cmake\r\nshipped with the SDK can be used to build the host versions of libmonodroid and\r\nthis lets us use a single build script for all the targets we need.\r\n\r\nThis commit adds the cmake script and changes monodroid targets to invoke cmake\r\nin order to build Ninja (instead of make) build files (ninja is shipped with the\r\nAndroid SDK cmake) letting us use the same configuration and build command\r\nacross all the platforms we support."},{"Id":"7848601452","Type":"PullRequestEvent","CreatedAt":"2018-06-19T22:29:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1854","RelatedDescription":"Merged pull request \"[build] `make package-build-status` captures binlog files\" (#1854) at xamarin/xamarin-android","RelatedBody":"Commit 987a05fa updated the build system to create MSBuild `binlog`\r\nfiles, so that the \"normal\" build logs could be smaller.\r\n\r\nThere's just one problem with this arrangement: when something goes\r\nwrong, we need the `*.binlog` files to determine what went wrong, but\r\n*nothing was preserving the `.binlog` files*!\r\n\r\nOops.\r\n\r\nUpdate the `make package-build-status` target so that it stores\r\ngenerated `*.binlog` files into the `build-status-*` file.\r\n\r\nAdditionally, alter the `.binlog` filename format so that instead of\r\ncontaining the Unix time_t/epoch value, it instead uses ISO 8601\r\nnotation of `<year><month><date>T<hour><minute><second>`.  This\r\nresults in more human readable values, and will allow for saner\r\nintegration in the future for when we migrate unit test execution over\r\nto also produce `.binlog` files, as producing ISO-8601 format is\r\nstraightforward from .NET `System.DateTime`; time_t isn't as easy."},{"Id":"7848409066","Type":"PullRequestEvent","CreatedAt":"2018-06-19T21:42:58","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1846","RelatedDescription":"Closed pull request \"Updated reference to mono/mono@4e1474e\" (#1846) at xamarin/xamarin-android","RelatedBody":"Updated reference to mono/mono@4e1474e"},{"Id":"7847419908","Type":"IssuesEvent","CreatedAt":"2018-06-19T18:23:59","Actor":"wescur88","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1856","RelatedDescription":"Opened issue \"Issues with Binding to jar file\" (#1856) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create Android  Binding Project\r\n2. Add minewBeaconAdmin.jar to the Jars folder as an EmbeddedJar\r\n3. Set Target Framework to Android Api 21(Android 5.0 Lollipop)\r\n4. Android Class Parser selection produces the same results\r\n5. First compilation causes errors, edit generated files then build again(not rebuild)\r\n   -change 'public override unsafe bool IsInAlphabet (sbyte p0)' to                                                \r\n    'protected override unsafe bool IsInAlphabet (sbyte p0)' in Org.Apache.Commons.Csts.Binary.Base32\r\n   - add 'IIterable IPhonemeExpr.Phonemes { get; }' to PhonemeList in \r\n    'Org.Apache.Commons.Csts.Language.BM.Rule'\r\n6. Add binding to Android project, I am actually using a Dependency Service to access this library in \r\n   Xamarin Forms.\r\n7. SDK guide docs.beaconyun.com/BeaconAdmin/Android_BeaconAdmin_Software_Development_Kit_Guide_en/\r\n8. Hardware Smart Minew i4 iBeacon  \r\nwww.minewtech.cn/product/60456179997-220649015/Smart_Minew_i4_iBeacon_nRF51822_chipet_ble_4_0_beacon_for_IOS_Android.html\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n[MinewBeaconAdminSDK(Android)20170801 (2).zip](https://github.com/xamarin/xamarin-android/files/2116373/MinewBeaconAdminSDK.Android.20170801.2.zip)\r\n\r\n[MinewBeaconAdminAndroidBinding.zip](https://github.com/xamarin/xamarin-android/files/2116377/MinewBeaconAdminAndroidBinding.zip)\r\n\r\n\r\n\r\n### Expected Behavior\r\nThe expected behavior is to scan for beacons and connect to a beacon.\r\n\r\n### Actual Behavior\r\nWhen trying to connect to the beacon, \"Java.Lang.NullPointerException: Attempt to invoke virtual method 'void com.minew.beaconset.ConnectService.connect(com.minew.beaconset.MinewBeacon)' on a null object reference\"\r\n\r\nsdk implementation:\r\npublic void connect() {\r\n        this.mConnectService = MinewBeaconManager.getInstance(this.mContext).getConnectService();\r\n        this.mConnectService.connect(this.mBeacon);\r\n        minewBeaconConnections.put(this.mBeacon.getMacAddress(), this);\r\n        this.state = ConnectionState.BeaconStatus_Connecting;\r\n    }\r\n\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.6.6\r\nVisualStudio.15.Release/15.6.6+27428.2037\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA413\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA413\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10402.2\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.6.18072.2\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nEclipseAndroidImporter   1.0\r\nImport Android projects from Eclipse.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.6.18072.2\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.6.18072.2\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.6.18072.2\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.6.18072.2\r\nProfiling support for Python projects.\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik ASP.NET AJAX VSExtensions   2017.3.1017.0\r\nProgress® Telerik® UI for ASP.NET AJAX Visual Studio extensions\r\n\r\nTelerik ASP.NET Core VSExtensions   2017.3.1121.0\r\nProgress® Telerik® UI for ASP.NET Core Visual Studio extensions\r\n\r\nTelerik ASP.NET MVC VSExtensions   2017.3.1121.0\r\nProgress® Telerik® UI for ASP.NET MVC Visual Studio extensions\r\n\r\nTelerik WinForms VSExtensions   2018.1.215.2\r\nProgress® Telerik® UI for WinForms Visual Studio extensions\r\n\r\nTelerik WPF VSExtensions   2018.1.215.2\r\nProgress® Telerik® UI for WPF Visual Studio extensions\r\n\r\nTelerik Xamarin VSExtensions   2018.1.322.3\r\nProgress® Telerik® UI for Xamarin Visual Studio extensions\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27428.2015\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Linux Development   1.0.8\r\nVisual C++ for Linux Development\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7102.2\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Unity   3.6.0.5\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.753 (f0f46392f)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.96 (a702a9ceb)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.9.1.24 (f62de47)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7846801451","Type":"PullRequestEvent","CreatedAt":"2018-06-19T16:26:26","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1855","RelatedDescription":"Opened pull request \"[Mono.Android] ResourceIdManager.UpdateIdValues called N times\" (#1855) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1544\r\n\r\nI was able to verify that my app's `Resource.UpdateIdValues` was\r\ngetting invoked multiple times with VS 15.7.4:\r\n- Create a new Xamarin.Android app\r\n- Create a new Xamarin.Android library, and reference it from the app\r\n- (Optional) call `Android.Runtime.ResourceIdManager.UpdateIdValues`\r\n  directly\r\n\r\nBy placing a breakpoint, and/or `Log.Debug` messages, I can verify\r\nthat my app's `Resource.UpdateIdValues` was being called 5 times!\r\n\r\nThe issue lies in this code:\r\n\r\n    if (id_initialized)\r\n        return;\r\n    //System.Reflection code to call Resource.UpdateIdValues() in the app\r\n    id_initialized = true;\r\n\r\nWhile `Resource.UpdateIdValues` is being invoked,\r\n`ResourceIdManager.UpdateIdValues ()` is called recursively.\r\n`id_initialized` will not be set until after the reflection code has\r\nfinished.\r\n\r\nThe fix is to immediately set the flag:\r\n\r\n    if (id_initialized)\r\n        return;\r\n    id_initialized = true;\r\n    //System.Reflection code to call Resource.UpdateIdValues() in the app\r\n\r\nI was able to verify the fix in my app:\r\n- Build the app with `xabuild`\r\n- Re-add the `Log.Debug` message in my app's `Resource.UpdateIdValues`\r\n- Deploy the app with `xabuild`\r\n- Upon launch, I *now* only see 1 log message with `adb logcat`\r\n\r\nThe performance impact is likely:\r\n- The reflection code would be slow in\r\n  `Android.Runtime.ResourceIdManager.UpdateIdValues`\r\n- In the app's `Resource.UpdateIdValues`, mostly fields are being read\r\n  and set. It *helps* to skip this, but it shouldn't be as slow as the\r\n  reflection code.\r\n\r\nWe should consider this for 15.8 if there is still time."},{"Id":"7846582426","Type":"PullRequestEvent","CreatedAt":"2018-06-19T15:51:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1854","RelatedDescription":"Opened pull request \"[build] `make package-build-status` captures binlog files\" (#1854) at xamarin/xamarin-android","RelatedBody":"Commit 987a05fa updated the build system to create MSBuild `binlog`\r\nfiles, so that the \"normal\" build logs could be smaller.\r\n\r\nThere's just one problem with this arrangement: when something goes\r\nwrong, we need the `*.binlog` files to determine what went wrong, but\r\n*nothing was preserving the `.binlog` files*!\r\n\r\nOops.\r\n\r\nUpdate the `make package-build-status` target so that it stores\r\ngenerated `*.binlog` files into the `build-status-*` file.\r\n\r\nAdditionally, alter the `.binlog` filename format so that instead of\r\ncontaining the Unix time_t/epoch value, it instead uses ISO 8601\r\nnotation of `<year><month><date>T<hour><minute><second>`.  This\r\nresults in more human readable values, and will allow for saner\r\nintegration in the future for when we migrate unit test execution over\r\nto also produce `.binlog` files, as producing ISO-8601 format is\r\nstraightforward from .NET `System.DateTime`; time_t isn't as easy."},{"Id":"7846581983","Type":"IssuesEvent","CreatedAt":"2018-06-19T15:51:31","Actor":"basdecort","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1853","RelatedDescription":"Opened issue \"Certificate pinning using AndroidClientHandler and ServicePointManager\" (#1853) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nSimilar to [this issue](https://github.com/xamarin/xamarin-macios/issues/4170) on Xamarin.iOS. \r\n\r\n1. Configure Droid project to use AndroidClientHandler as HttpClient implementation.\r\n2. Register a callback: ServicePointManager.ServerCertificateValidationCallback += (sender, certificate, chain, sslPolicyErrors) => {};\r\n3. Create new HttpClient: var client = new HttpClient(); \r\n4. Make a GET request: client.GetStringAsync(\"https://www.xamarin.com\"); \r\n\r\nRepro project: \r\n[ReproProject.zip](https://github.com/xamarin/xamarin-android/files/2115931/ReproProject.zip)\r\n\r\n### Expected Behavior\r\nI expect the ServerCertificateValidationCallback to be called for every request, but this does not happen when using the AndroidClientHandler.\r\n\r\n### Actual Behavior\r\nThe ServerCertificateValidationCallback is <ins>not</ins> called at all when using AndroidClientHandler. When using the default HttpClientHandler, the ServerCertificateValidationCallback gets called as expected.\r\n\r\n### Version Information\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.2 (build 40)\r\nInstallation UUID: 621e6bd4-594e-47fd-9aaa-510f440c3a87\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/gebruiker/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Enterprise)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705020040\r\nGit revision: cfe2fc0566bc4db990242959de40505a13f58352\r\nBuild date: 2018-05-30 11:24:18-04\r\nXamarin addins: 3ac7413ef51a88e06367313c27aec8f7292752a6\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Fri Apr 13 19:32:32 PDT 2018\r\n    root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nStraight8's SpecFlow Integration 1.11.1.0\r\nStraight8's SpecFlow Intergration 1.11.0.0\r\nInternet of Things (IoT) development (Preview) 7.5"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7849335729","Type":"PullRequestEvent","CreatedAt":"2018-06-20T02:56:24","Actor":"jonlipsky","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3093","RelatedDescription":"Opened pull request \"Visual element packager\" (#3093) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nApplying the changes from pull request #2275 that Clancey submitted against master to the 3.1.0 branch.\r\n\r\n### Issues Resolved ###\r\n\r\n\r\n### API Changes ###\r\n\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard"},{"Id":"7848853265","Type":"PullRequestEvent","CreatedAt":"2018-06-19T23:51:22","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3092","RelatedDescription":"Opened pull request \"[ALL] fixes #3089 Change default TextCell to use binding\" (#3092) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nChanged usage of default TextCell by ListView to use Bindings to set the Text instead of just setting the text directly. This way recycled cells will correctly have their text changed when the BindingContext is changed\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #3089 \r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7848801176","Type":"PullRequestEvent","CreatedAt":"2018-06-19T23:32:56","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3091","RelatedDescription":"Opened pull request \"[Android] Prevent bubbled gestures from falling through transparent containers\" (#3091) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nOn Android, gestures bubbling up from nested layouts are passing through InputTransparent containers to the controls behind them, even if when the original layout handling the event is not InputTransparent. These changes correct that behavior to bring it in line with UWP/iOS.\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #2858 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"7848716351","Type":"PullRequestEvent","CreatedAt":"2018-06-19T23:04:18","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3090","RelatedDescription":"Opened pull request \"[iOS] If the UITableView hasn't rendered anything yet don't try to sync cells\" (#3090) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded a check to verify if the cells of the UITableView have rendered and need to be kept synchronized to source list\r\n\r\n### Issues Resolved ###\r\n\r\n\r\n- fixes #1342\r\n\r\n\r\n### Platforms Affected ###\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7848532529","Type":"IssuesEvent","CreatedAt":"2018-06-19T22:11:07","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3089","RelatedDescription":"Opened issue \"[All] TextCell text doesn't change when using Recycling on ListViews \" (#3089) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nCurrently when a TextCell is used for the Default cell type (no viewcells specified) the Text property is just set so recycled cells don't have there text updated\r\n\r\n```C#\r\n\t\tprotected override Cell CreateDefault(object item)\r\n\t\t{\r\n\t\t\tstring text = null;\r\n\t\t\tif (item != null)\r\n\t\t\t\ttext = item.ToString();\r\n\r\n\t\t\treturn new TextCell { Text = text };\r\n\t\t}\r\n```\r\n\r\nRecycling sets the BindingContext of the cell so a reused cell will just have the old Text.  Instead of setting the Text on the TextCell it should setup a binding to the Text Property\r\n\r\n```C#\r\n\t\tprotected override Cell CreateDefault(object item)\r\n\t\t{\r\n\t\t\tstring text = null;\r\n\t\t\tif (item != null)\r\n\t\t\t\ttext = item.ToString();\r\n\r\n\t\t\tvar textCell = new TextCell();\r\n\t\t\ttextCell.SetBinding(TextCell.TextProperty, \".\");\r\n\t\t\treturn textCell;\r\n\t\t}\r\n```\r\n### Steps to Reproduce\r\n\r\n- set list view to recycle\r\n- Set the ItemSource of a ListView to a list of strings\r\n- set the ItemSource to a list of strings that are different\r\n- notice how you'll just see the first list of strings\r\n\r\n### Expected Behavior\r\nRecycled TextCells should sensitive to BindingContext updates\r\n\r\n### Actual Behavior\r\nRecycled TextCells are just stuck forever as there original Text\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1\r\n- Last known good version: unknown\r\n"},{"Id":"7848217366","Type":"IssuesEvent","CreatedAt":"2018-06-19T21:01:38","Actor":"dansiegel","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3088","RelatedDescription":"Opened issue \"Update Dependency Resolver to include Dependency Type\" (#3088) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nDue to the need to include an `Android.Content.Context` for Android Renderers, the DependencyResolver uses `Resolve(Type type, params object[] args)` The problem with these args is that they are ultimately meant to be used by a DI Container to pass in as constructor arguments but we have no way of knowing that args[0] is meant to be Context without explicitly checking for the type which is not something that we can really do from shared code. It also means that this is not flexible to easily use across other platforms.\r\n\r\nThis becomes an issue as injecting a dependency at Resolve time generally requires that we know what the type is supposed to be.\r\n\r\n```cs\r\n// Autofac\r\nparameters.Add(new TypedParameter(typeof(Android.Content.Context), context));\r\ncontainer.Resolve(type, parameters.ToArray());\r\n\r\n// DryIoc\r\nvar resolver = container.Resolve<Func<Android.Content.Context, object>>(type);\r\nresolver.Invoke(context);\r\n\r\n// Unity\r\noverrides.Add(new DependencyOverride(typeof(Android.Content.Context), context));\r\ncontainer.Resolve(type, overrides.ToArray());\r\n```\r\n\r\n### Proposal\r\n\r\nChange object[] to another type that can be can wrap both the expected type and instance.\r\n\r\n```cs\r\npublic class DependencyObject\r\n{\r\n    public Type Type { get; set; }\r\n    public object Instance { get; set; }\r\n}\r\n\r\nDependencyResolver.Resolve(typeof(BoxRenderer), new DependencyObject{ Type = typeof(Context), Instance = someInstance });\r\n```\r\n\r\nThis ensures that most DI Containers should be able to support this, and that it will be extensible from shared code moving forward regardless of what changes are made regardless of platform.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1\r\n- Last known good version: n/a\r\n- IDE: n/a\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7849490527","Type":"PullRequestEvent","CreatedAt":"2018-06-20T03:58:47","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4298","RelatedDescription":"Opened pull request \"[contacts] Update for beta 2\" (#4298) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7849456430","Type":"PullRequestEvent","CreatedAt":"2018-06-20T03:44:27","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4297","RelatedDescription":"Opened pull request \"[accounts] Update for beta 2\" (#4297) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7849435770","Type":"PullRequestEvent","CreatedAt":"2018-06-20T03:36:00","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4296","RelatedDescription":"Opened pull request \"[mapkit] Update for beta2 (macOS only changes)\" (#4296) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7849432104","Type":"IssuesEvent","CreatedAt":"2018-06-20T03:34:31","Actor":"goneale","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4295","RelatedDescription":"Opened issue \"Xamarin.UITest error - Simulator does not support any of the architectures ([x86_64, i386])\" (#4295) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Run a Xamarin.UITest 2.2.4 project which starts iOS simulator.\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nSimulator and app runs fine as it did in versions prior.\r\n\r\n### Actual Behavior\r\nXamarin.UITest fails with an error:\r\n`Exit code '1' received from '/var/folders/wl/19hwxjcd693dx9y4cxyhxyy80000gn/T/xdb/DeviceAgent.iOS.Dependencies/9a7eae887a041f733c06f5eef3e12600/bin/iOSDeviceManager install \"/var/folders/wl/19hwxjcd693dx9y4cxyhxyy80000gn/T/xdb/DeviceAgent.iOS.Dependencies/9a7eae887a041f733c06f5eef3e12600/app/DeviceAgent-Runner.app\" -d EAE76EEE-005A-4CB3-8A39-BECDBA18C68F'\r\n\r\n\t\t-c,--codesign-identity\t<codesign-identifier> [OPTIONAL] \tIdentity used to codesign app bundle [device only]. Deprecated - should use profile path.\tDEFAULT=\r\n\t\t-d,--device-id\t<device-identifier>\tiOS Simulator GUID or 40-digit physical device ID\r\n\t\t-f,--force\t<force-reinstall-app> [OPTIONAL] \tReinstall the app if the device contains an older version than the bundle specified\tDEFAULT=0\r\n\t\t-i,--resources-path\t<resources-path> [OPTIONAL] \tPath to resources (executables) to inject into app directory. A list of colon separated files may be specified.\r\n\t\t-p,--profile-path\t<profile-path> [OPTIONAL] \tPath to provisioning profile\r\n\tinstall <app-path>\r\nApp com.apple.test.DeviceAgent-Runner is not installed on EAE76EEE-005A-4CB3-8A39-BECDBA18C68F\r\nError installing application: Error Domain=com.facebook.FBSimulatorControl Code=0 \"Simulator does not support any of the architectures ([x86_64, i386]) of the executable at /var/folders/wl/19hwxjcd693dx9y4cxyhxyy80000gn/T/xdb/DeviceAgent.iOS.Dependencies/9a7eae887a041f733c06f5eef3e12600/app/DeviceAgent-Runner.app/DeviceAgent-Runner. Simulator Archs ([(null)])\" UserInfo={NSLocalizedDescription=Simulator does not support any of the architectures ([x86_64, i386]) of the executable at /var/folders/wl/19hwxjcd693dx9y4cxyhxyy80000gn/T/xdb/DeviceAgent.iOS.Dependencies/9a7eae887a041f733c06f5eef3e12600/app/DeviceAgent-Runner.app/DeviceAgent-Runner. Simulator Archs ([(null)])}\r\nRunning: /var/folders/wl/19hwxjcd693dx9y4cxyhxyy80000gn/T/xdb/DeviceAgent.iOS.Dependencies/9a7eae887a041f733c06f5eef3e12600/bin/iOSDeviceManager is-installed /var/folders/wl/19hwxjcd693dx9y4cxyhxyy80000gn/T/xdb/DeviceAgent.iOS.Dependencies/9a7eae887a041f733c06f5eef3e12600/app/DeviceAgent-Runner.app -d EAE76EEE-005A-4CB3-8A39-BECDBA18C68F\r\nExit code '2' received from '/var/folders/wl/19hwxjcd693dx9y4cxyhxyy80000gn/T/xdb/DeviceAgent.iOS.Dependencies/9a7eae887a041f733c06f5eef3e12600/bin/iOSDeviceManager is-installed /var/folders/wl/19hwxjcd693dx9y4cxyhxyy80000gn/T/xdb/DeviceAgent.iOS.Dependencies/9a7eae887a041f733c06f5eef3e12600/app/DeviceAgent-Runner.app -d EAE76EEE-005A-4CB3-8A39-BECDBA18C68F'\r\n`\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.2\r\nVisualStudio.15.Release/15.7.2+27703.2018\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40511.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.1    Build 112.0.20180414.70444\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nRedgate SQL Prompt   9.0.10.4053\r\nWrite, format, and refactor SQL effortlessly\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 56f97a8dd4353d897336941f3e644423b87c794f.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2018\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.0.448 (4373404db)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.270 (82d750d12)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.178 (408d357)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: 3a564231-7fd9-49be-b102-622537f96554\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/goneale/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 25.3.1\r\nSDK Platform Tools Version: 25.0.3\r\nSDK Build Tools Version: 25.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7849194655","Type":"PullRequestEvent","CreatedAt":"2018-06-20T02:02:48","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4294","RelatedDescription":"Merged pull request \"Bump for xcode10 beta 2\" (#4294) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7847736754","Type":"PullRequestEvent","CreatedAt":"2018-06-19T19:26:47","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4294","RelatedDescription":"Opened pull request \"Bump for xcode10 beta 2\" (#4294) at xamarin/xamarin-macios","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":39,"FavoriteCount":15,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":62,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":19,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":27,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":84,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2018-06-20T05:31:00.6387129Z","RunDurationInMilliseconds":4033}