{"Data":{"Vue-Issues":{"Issues":[{"Id":"598337762","IsPullRequest":false,"CreatedAt":"2020-04-11T19:56:32","Actor":"hutchings90","Number":"11305","RawContent":null,"Title":"Allow template tags to use the v-text directive","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ey867nzs/2/](https://jsfiddle.net/ey867nzs/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a Vue app and display a string using mustache syntax, `v-text` on a `div` element, and `v-text` on a `template` element.\r\n\r\n### What is expected?\r\nThe string is displayed by all three methods.\r\n\r\n### What is actually happening?\r\nThe string is displayed by mustache syntax and `v-text` on a `div` element, but the string is not displayed by the `v-text` on a `template` element.\r\n\r\n---\r\nThis is a feature request similar to #7726. I created a new issue since the other one is closed, it is 2 years old, and I have reasons for requesting this feature that were not provided in that issue.\r\n\r\nA problem with mustache syntax is that the UI could get cluttered with curly braces if there is a delay in rendering or if there is a bug. A problem with using `v-text` on a DOM element is that undesired CSS styles could get applied to the DOM element. Allowing `v-text` to be used on `template` elements would avoid these problems.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11305","RelatedDescription":"Closed issue \"Allow template tags to use the v-text directive\" (#11305)"},{"Id":"598326528","IsPullRequest":false,"CreatedAt":"2020-04-11T19:14:29","Actor":"pSnehanshu","Number":"11304","RawContent":null,"Title":"val and oldVal passed to watchers are incorrect when watching an array","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/p_snehanshu/9g8m2bu1/10/](https://jsfiddle.net/p_snehanshu/9g8m2bu1/10/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn a vue component, watch an array.\r\nThen change the array, either push or splice or pop.\r\nInside the watcher, compare the `val` and the `oldVal`\r\n\r\n### What is expected?\r\nthe `val` and the `oldVal` are expected to be different.\r\nThe `val` should have the current value, and `oldVal` should have the previous value.\r\n\r\n### What is actually happening?\r\nthe `val` and the `oldVal` are exactly the same.\r\nWhile `val` is correct in its place, the `oldVal` should have been different, but it's not.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11304","RelatedDescription":"Closed issue \"val and oldVal passed to watchers are incorrect when watching an array\" (#11304)"},{"Id":"598262662","IsPullRequest":false,"CreatedAt":"2020-04-11T13:06:17","Actor":"huiBuiling","Number":"11303","RawContent":null,"Title":"TypeError: Cannot read property 'parseComponent' of undefined ","State":"closed","Body":"vuecli3 + ts\r\n\r\n之前项目运行正常，现在打开运行报错\r\n\r\nModule build failed (from ./node_modules/vue-loader/lib/index.js):\r\nTypeError: Cannot read property 'parseComponent' of undefined\r\n    at parse (F:\\web\\QL\\QingLiu_mall_web\\client\\node_modules\\vue-loader\\node_modules\\@vue\\component-compiler-utils\\dist\\parse.js:14:23)\r\n    at Object.module.exports (F:\\web\\QL\\QingLiu_mall_web\\client\\node_modules\\vue-loader\\lib\\index.js:67:22)\r\n\r\n @ ./src/router.ts 52:13-60\r\n @ ./src/main.ts\r\n @ multi (webpack)-dev-server/client?http://192.168.1.106:5212/sockjs-node (webpack)/hot/dev-server.js ./src/main.ts\r\n\r\nType checking in progress...\r\n","Url":"https://github.com/vuejs/vue/issues/11303","RelatedDescription":"Closed issue \"TypeError: Cannot read property 'parseComponent' of undefined \" (#11303)"},{"Id":"598046418","IsPullRequest":false,"CreatedAt":"2020-04-10T19:50:11","Actor":"davestewart","Number":"11302","RawContent":null,"Title":"Add cross-platform keyboard event modifiers","State":"closed","Body":"### What problem does this feature solve?\r\n\r\nMacs and PCs use different keyboard modifiers for the same tasks, i.e. `CTRL C` and `CMD C` or in keyboard event terms `.ctrl` and `.meta`.\r\n\r\nBecause you can't add modifiers dynamically, you have to build handlers yourself, losing out on the built in sugar:\r\n\r\n```js\r\nfunction onKeyPress (event) {\r\n  const isCopy = event.key === 'c' && ((isMac && event.metaKey) || event.ctrlKey)\r\n  ...\r\n}\r\n```\r\n\r\nOr use a plugin and do something like:\r\n\r\n```vue\r\n<GlobalEvents v-if=\"isMac\" @keypress.meta.c=\"copy\" />\r\n<GlobalEvents v-if=\"isWin\" @keypress.ctrl.c=\"copy\" />\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\nI'm proposing several new cross-platform modifiers that would make it much easier to work with cross-platform keyboard shortcuts, on top of the existing excellent keyboard event handling:\r\n\r\n- `action` - substitute the correct modifier key `ctrl` or `meta` depending on platform\r\n- `mac` - limit the modifier to mac only\r\n- `win` - limit the modifier to windows / linux only\r\n\r\nThat would allow combinations like so:\r\n\r\n```vue\r\n// automatic\r\n<input @keypress.action.c=\"copy\" />\r\n```\r\n\r\n```vue\r\n// manual, perhaps with different handling based on platform\r\n<input @keypress.mac.meta.v=\"pasteMac\" @keypress.win.ctrl.v=\"pasteWin\"  />\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11302","RelatedDescription":"Closed issue \"Add cross-platform keyboard event modifiers\" (#11302)"},{"Id":"596082507","IsPullRequest":false,"CreatedAt":"2020-04-10T17:33:41","Actor":"derMart","Number":"11293","RawContent":null,"Title":"Interesting bug / quirk computed property not updating correctly, but probably not fixable","State":"closed","Body":"Hi consider this snippet:\r\n```\r\n  ...\r\n  computed: {\r\n    someProp() {\r\n      if(this.nonReactiveProperty) {\r\n        return this.reactiveProperty;\r\n      }\r\n   }\r\n  },\r\n  ...\r\n```\r\nFrom the documentation I would assume (please show me if I missed something) that `someProp()` should get re-evaluated when `this.reactiveProperty` does change. Works as expected as long as `this.nonReactiveProprty` is true all time. However, if `this.nonReactiveProperty` is false the first time someProp() is read, then someProp() will never re-evaluate, even if `this.reactiveProperty` changes (after `this.nonReactiveProperty` gets true).\r\nThe problem is, I guess it is not fixable. Am I assuming correctly, that the dependencies of `someProp()` get calculated the first time it is executed? So code which does not get executed then, vue is just blind of....?\r\nThis is quite tricky and probably I've run into this quite some times before figuring out. It gets even harder to see when inside lazy conditions. E.g. this works all the time:\r\n```\r\nsomeProp() {\r\n   if(this.reactiveProperty && this.nonReactiveProperty) {\r\n     return this.reactiveProperty;\r\n   }\r\n}\r\n```\r\nwhile this might not:\r\n```\r\nsomeProp() {\r\n   if(this.nonReactiveProperty && this.reactiveProperty) {\r\n     return this.reactiveProperty;\r\n   }\r\n}\r\n```\r\n\r\nSo if this is not fixable, and I didn't miss something, I would suggest to add this to the documentation.\r\n\r\nEDIT: here is a codesandbox: https://codesandbox.io/s/priceless-leftpad-kktuq?file=/src/App.vue\r\n\r\nbest\r\nMartin\r\n","Url":"https://github.com/vuejs/vue/issues/11293","RelatedDescription":"Closed issue \"Interesting bug / quirk computed property not updating correctly, but probably not fixable\" (#11293)"},{"Id":"597724106","IsPullRequest":false,"CreatedAt":"2020-04-10T06:59:46","Actor":"imzue","Number":"11301","RawContent":null,"Title":"On iOS 13.4, page will crash if data is too big.","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/imzue/vue-for-issue](https://github.com/imzue/vue-for-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Require a big json file (for example, there are 10,000 elements, like `{ \"test0\": \"message1\", ... \"test10000\": \"message9990\" }`);\r\n2. Assign it to a variable in data;\r\n3. Open the safari on the damn iOS 13.4.1;\r\n4. YOU WILL SEE `a problem repeatedly occurred on \"http://192.168.1.100:8080/#/\"` OR `\"http://192.168.1.100:8080/#/\"`重复出现问题\r\n\r\n\r\n### What is expected?\r\nA normal web page on the damn iOS 13.4.1.\r\n\r\n### What is actually happening?\r\na problem repeatedly occurred on \"http://192.168.1.100:8080/#/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11301","RelatedDescription":"Closed issue \"On iOS 13.4, page will crash if data is too big.\" (#11301)"},{"Id":"597339685","IsPullRequest":false,"CreatedAt":"2020-04-09T15:03:08","Actor":"folmert","Number":"11300","RawContent":null,"Title":"Improve error message when template tag is skipped","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/currying-shadow-inm2w?file=/src/App.vue](https://codesandbox.io/s/currying-shadow-inm2w?file=/src/App.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a .vue file with template, with 2 elements inside and a script tag.\r\n2. Remove the wrapping `<template></template>` tag.\r\n3. It sparks a confusing error:\r\n```\r\nModule parse failed: Unexpected token (7:0)\r\nFile was processed with these loaders:\r\n * ./node_modules/vuetify-loader/lib/loader.js\r\n * ./node_modules/cache-loader/dist/cjs.js\r\n * ./node_modules/vue-loader/lib/index.js\r\nYou may need an additional loader to handle the result of these loaders.\r\n|\r\n|\r\n> <v-layout wrap>\r\n|     <v-flex xs4>\r\n|         <v-select\r\n\r\n```\r\n\r\n### What is expected?\r\nThe error should say that template tag was skipped.\r\n\r\n### What is actually happening?\r\nCurrent error message isn't very helpful.\r\n\r\n---\r\nIn such a case on codesandbox the error message is actually helpful:\r\n`Failed to mount component: template or render function not defined.`\r\nbut it's different when compiled via `yarn serve`. \r\n\r\nI've wasted many minutes trying to figure out the reason behind this error, as my IDE (WebStorm) doesn't highlight lack of `template` as an error. With a more helpful error message developers could save time spent on debugging.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11300","RelatedDescription":"Closed issue \"Improve error message when template tag is skipped\" (#11300)"},{"Id":"597306823","IsPullRequest":false,"CreatedAt":"2020-04-09T14:05:19","Actor":"tuomassalo","Number":"11299","RawContent":null,"Title":"SSR fails to render component inside v-else of a v-if with v-html","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/tuomassalo/vue-ssr-v-html-bug](https://github.com/tuomassalo/vue-ssr-v-html-bug)\r\n\r\n\r\n### Steps to reproduce\r\n- clone the repo\r\n- run `npm run dev`\r\n- open `localhost:8080`\r\n- observe Console log.\r\n\r\n\r\n### What is expected?\r\nI expect SSR to render \"bar: Bar!\", as the client-side does.\r\n\r\nOr, I'd like to get an eslint warning that this is a bad idea (if that is the problem).\r\n\r\n### What is actually happening?\r\n`App.vue` fails to render `bar-component` on the server. Instead, it outputs `<bar-component></bar-component>`, and the dev server gives the warning \"The client-side rendered virtual DOM tree is not matching server-rendered content.\"\r\n\r\n---\r\n\r\nThe key part of `App.vue` is this:\r\n\r\n```\r\n<div v-if=\"foo\" v-html=\"'Foo.'\"/>\r\n<div v-else>\r\n  bar: <bar-component/>\r\n</div>\r\n```\r\n\r\nMy original component was naturally longer. I ran into this problem after changing the `v-if` line from something like:\r\n\r\n    <div v-if=\"foo\">{{ foo }}</div>\r\n\r\nTo:\r\n\r\n    <div v-if=\"foo\" v-html=\"foo\"/>\r\n\r\n... which *seemed* innocuous to me.\r\n\r\nFinally, apologies for posting a very possible duplicate.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11299","RelatedDescription":"Open issue \"SSR fails to render component inside v-else of a v-if with v-html\" (#11299)"},{"Id":"597001347","IsPullRequest":true,"CreatedAt":"2020-04-09T03:51:53","Actor":"Brooooooklyn","Number":"11298","RawContent":null,"Title":"feat(server): make MAX_STACK_DEPTH configurable","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n\r\nIn my scenario, there are many recursive calls in render function, and `SSR` application would throw the `Maximum call stack size exceeded` before the `stackDepth` reach `800`. I want the `MAX_STACK_DEPTH` to be configurable in this case.\r\n","Url":"https://github.com/vuejs/vue/pull/11298","RelatedDescription":"Open PR \"feat(server): make MAX_STACK_DEPTH configurable\" (#11298)"},{"Id":"596845428","IsPullRequest":false,"CreatedAt":"2020-04-08T20:36:50","Actor":"Tibon4ik","Number":"11297","RawContent":null,"Title":"vue-server-renderer: inheritAttrs false doesn't work properly","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/Tibon4ik/vue-server-renderer-inherit-attrs](https://github.com/Tibon4ik/vue-server-renderer-inherit-attrs)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone the repo\r\n* $ npm install\r\n* $ npm run test\r\n\r\n\r\nOr:\r\n```javascript\r\n// Step 1: Create a Vue instance\r\nconst Vue = require(\"vue\");\r\n\r\nconst AppCard = {\r\n  template: `<div>appCardProp: {{ appCardProp }}</div>`,\r\n  props: {\r\n    appCardProp: {}\r\n  }\r\n}\r\n\r\nconst PlayerCard = {\r\n  template: `<AppCard v-bind=\"$attrs\" />`,\r\n  components: { AppCard },\r\n  inheritAttrs: false\r\n}\r\n\r\nconst app = new Vue({\r\n  template: `\r\n  <div>\r\n    <PlayerCard app-card-prop=\"appCardProp value\" />\r\n  </div>\r\n  `,\r\n  components: { PlayerCard }\r\n});\r\n\r\n// Step 2: Create a renderer\r\nconst renderer = require(\"vue-server-renderer\").createRenderer();\r\n\r\n// Step 3: Render the Vue instance to HTML\r\nrenderer.renderToString(app, (err, html) => {\r\n  if (err) throw err;\r\n  console.log(html);\r\n  // <div data-server-rendered=\"true\"><div app-card-prop=\"appCardProp value\">appCardProp: appCardProp value</div></div>\r\n  // Html attribute \"app-card-prop\" must be missing\r\n});\r\n```\r\n\r\n### What is expected?\r\n```html\r\n<div data-server-rendered=\"true\">\r\n  <div>\r\n    appCardProp: appCardProp value\r\n  </div>\r\n</div>\r\n```\r\n\r\n### What is actually happening?\r\n```html\r\n<div data-server-rendered=\"true\">\r\n  <div app-card-prop=\"appCardProp value\">\r\n    appCardProp: appCardProp value\r\n  </div>\r\n</div>\r\n```\r\n\r\n---\r\nThis bug happens when i use component with inheritAttrs: false, which use another component on top level of section or render function.\r\n\r\nI want to pass props to inner component with v-bind=\"$attrs\" and inheritAttrs: false. It passes props inside but still adds attributes to html element.\r\n\r\nI noticed that this bug doesn't occur in next cases:\r\n* if i set inheritAttrs: false on inner component (AppCard of code section).\r\n* if top level of \"template\" or render function is not a component (e.g. simple \"div\" or \"span\").\r\n\r\nRelated: https://github.com/nuxt/nuxt.js/issues/7195\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11297","RelatedDescription":"Open issue \"vue-server-renderer: inheritAttrs false doesn't work properly\" (#11297)"},{"Id":"596734748","IsPullRequest":false,"CreatedAt":"2020-04-08T18:23:39","Actor":"ryaninvents","Number":"11296","RawContent":null,"Title":"\"v-slot\" abbreviated syntax for default slot does not observe components using is=\"component-name\"","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/elated-sun-8npx9?file=/src/App.vue](https://codesandbox.io/s/elated-sun-8npx9?file=/src/App.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nError message displays immediately when viewing repro.\r\n\r\n### What is expected?\r\nVue should recognize that the given `v-slot` is attached to a component, because the element has the `is=\"hello-world\"` attribute set.\r\n\r\n### What is actually happening?\r\nVue sees the `v-slot` attribute on a `section` element, and assumes it is an error.\r\n\r\n---\r\nOrdinarily I'd just rewrite my code to directly reference the component (without the `is=` attribute) but I'm rehydrating server-rendered content and need the wrapper to be semantic.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11296","RelatedDescription":"Closed issue \"\"v-slot\" abbreviated syntax for default slot does not observe components using is=\"component-name\"\" (#11296)"},{"Id":"596640235","IsPullRequest":false,"CreatedAt":"2020-04-08T14:53:03","Actor":"Bastczuak","Number":"11295","RawContent":null,"Title":"Weird HMR behavior when using scoped slots","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/Bastczuak/vue-issue](https://github.com/Bastczuak/vue-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. yarn\r\n2. yarn serve\r\n3. open the file \"src/components/Test.vue\"\r\n4. copy the button multiple times or try for yourself to add and remove HTML tags.\r\n5. save the file\r\n6. open network in dev tools and see that the changes are transferred to the browser\r\n7. see no or weird dom changes in the browser\r\n\r\n### What is expected?\r\nDoing changes in in my code are loaded and shown in the browser.\r\n\r\n### What is actually happening?\r\nNo changes are shown in the browser.\r\n\r\n---\r\nIt's a bit tricky to reproduce the bug. I found a way to copy the same HTML tags multiple times into the template to produce this effect. I am using a renderless component `ScopedSlots.vue` which exposes properties via scoped slots to children. Children HTML tags are hot reloaded in the browser but changes in code in other Vue components inside the slot are not updated properly. Also the weird thing is that the code changes are transferred to the browser but  the DOM will not change.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11295","RelatedDescription":"Open issue \"Weird HMR behavior when using scoped slots\" (#11295)"},{"Id":"594259154","IsPullRequest":true,"CreatedAt":"2020-04-07T21:45:07","Actor":"vue-bot","Number":"11280","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11280","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11280)"},{"Id":"594259079","IsPullRequest":true,"CreatedAt":"2020-04-07T21:44:58","Actor":"vue-bot","Number":"11279","RawContent":null,"Title":"[automated] Patreon backers update (Apr 2020","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11279","RelatedDescription":"Closed or merged PR \"[automated] Patreon backers update (Apr 2020\" (#11279)"},{"Id":"596025214","IsPullRequest":false,"CreatedAt":"2020-04-07T19:21:13","Actor":"Daeluse","Number":"11292","RawContent":null,"Title":"Template Tags Being Stripped","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://stackblitz.com/edit/vuejs-template-issue](https://stackblitz.com/edit/vuejs-template-issue)\r\n\r\n### Steps to reproduce\r\nUsing the minimal reproduction link:\r\n\r\n1. Visit the minimal reproduction link\r\n2. Inspect the document under both \"Template Content\" headers. \r\n    - Notice that under the first header the template tags are being stripped.\r\n    - Notice that under the second header the template tags are being preserved.\r\n\r\nTo re-create this in a sandbox of your own, you can perform the following:\r\n\r\n1. Create a block level element with the v-pre directive and place template tags a children.\r\n    - Observe the template tags being removed.\r\n2. Add any VueJS compiled element as a sibling to the block level element with v-pre.\r\n    - Observe the template tags are being preserved. \r\n\r\n### What is expected?\r\nIn both cases the presence of v-pre should instruct Vue not to remove the template tags.\r\n\r\n### What is actually happening?\r\nv-pre is only preserving the template tags when a VueJS compiled element is sibling to the element with the v-pre tag.\r\n\r\n---\r\nI am working on integrating Web Components into VueJS applications and would like to leverage the power of the Shadow DOM.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11292","RelatedDescription":"Closed issue \"Template Tags Being Stripped\" (#11292)"},{"Id":"596085009","IsPullRequest":false,"CreatedAt":"2020-04-07T19:03:08","Actor":"derMart","Number":"11294","RawContent":null,"Title":"Interesting bug / quirk computed property not updating correctly, but probably not fixable","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue?file=/src/App.vue](https://codesandbox.io/s/vue?file=/src/App.vue)\r\n^^work in progress\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHi consider this snippet:\r\n```\r\n  ...\r\n  computed: {\r\n    someProp() {\r\n      if(this.nonReactiveProperty) {\r\n        return this.reactiveProperty;\r\n      }\r\n   }\r\n  },\r\n  ...\r\n```\r\nFrom the documentation I would assume (please show me if I missed something) that `someProp()` should get re-evaluated when `this.reactiveProperty` does change. Works as expected as long as `this.nonReactiveProprty` is true all time. However, if `this.nonReactiveProperty` is false the first time someProp() is read, then someProp() will never re-evaluate, even if `this.reactiveProperty` changes (after `this.nonReactiveProperty` gets true).\r\nThe problem is, I guess it is not fixable. Am I assuming correctly, that the dependencies of `someProp()` get calculated the first time it is executed? So code which does not get executed then, vue is just blind of....?\r\nThis is quite tricky and probably I've run into this quite some times before figuring out. It gets even harder to see when inside lazy conditions. E.g. this works all the time:\r\n```\r\nsomeProp() {\r\n      if(this.reactiveProperty && this.nonReactiveProperty) {\r\n        return this.reactiveProperty;\r\n      }\r\n   }\r\n```\r\nwhile this might not:\r\n```\r\nsomeProp() {\r\n      if(this.nonReactiveProperty && this.reactiveProperty) {\r\n        return this.reactiveProperty;\r\n      }\r\n   }\r\n```\r\n\r\nSo if this is not fixable, and I didn't miss something, I would suggest to add this to the documentation.\r\n\r\nbest\r\nMartin\r\n\r\n\r\n### What is expected?\r\nsomeProp() should re-evaluate after this.reactiveProperty changes and this.nonReactiveProperty is true\r\n\r\n### What is actually happening?\r\nsomeProp() does not re-evaluate after this.reactiveProperty changes and this.nonReactiveProperty is true, if this.nonReactiveProperty was false the first time someProp() get read.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11294","RelatedDescription":"Closed issue \"Interesting bug / quirk computed property not updating correctly, but probably not fixable\" (#11294)"},{"Id":"595043957","IsPullRequest":true,"CreatedAt":"2020-04-06T21:54:14","Actor":"timgates42","Number":"11286","RawContent":null,"Title":"docs: Fix simple typo, unnecesarry -> unnecessary","State":"closed","Body":"There is a small typo in dist/vue.common.dev.js, dist/vue.esm.browser.js, dist/vue.esm.js, dist/vue.js, dist/vue.runtime.common.dev.js, dist/vue.runtime.esm.js, dist/vue.runtime.js, src/platforms/web/runtime/modules/dom-props.js.\n\nShould read `unnecessary` rather than `unnecesarry`.\n\n","Url":"https://github.com/vuejs/vue/pull/11286","RelatedDescription":"Closed or merged PR \"docs: Fix simple typo, unnecesarry -> unnecessary\" (#11286)"},{"Id":"595322149","IsPullRequest":false,"CreatedAt":"2020-04-06T21:39:12","Actor":"linkdd","Number":"11290","RawContent":null,"Title":"Concerns regarding Dockerization of a VueJS application","State":"closed","Body":"### What problem does this feature solve?\r\nHello, not really a feature request but still, some help is wanted here :)\r\n\r\nI have two very simple rules:\r\n\r\n - my Docker image must be exactly the same between my development environment and my production environment\r\n - configuration values must be passed at runtime and nowhere else\r\n\r\nWhy ? Simple:\r\n\r\n - if I validate (linting, non regression testing, functionnal testing, ...) my Docker image in my development environment, I don't want to do the same for my production environment. The image can be used as is since both are exactly the same.\r\n - when I build a Docker image, it must be able to run in different environment, thus passing configuration values at build time is not an option since it would result in different images across different environments\r\n\r\nSo, when serving a VueJS application in production, I will obviously build (`yarn run build`) and then serve the static content with nginx.\r\nThe problem here is that configuration must be passed at the build stage, which is not an option for me because of the reasons evoked above.\r\n\r\n### What does the proposed API look like?\r\nThe only solution I see to this problem would be to generate a file at runtime that Nginx would inject in the `index.html`. But this is not trivial.\r\n\r\nDoes anyone has other recommendations regarding this issue ?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11290","RelatedDescription":"Closed issue \"Concerns regarding Dockerization of a VueJS application\" (#11290)"},{"Id":"594383777","IsPullRequest":true,"CreatedAt":"2020-04-06T14:34:14","Actor":"zhangchen915","Number":"11282","RawContent":null,"Title":"fix: correctly remove once listener with event handler return null #11281","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11282","RelatedDescription":"Closed or merged PR \"fix: correctly remove once listener with event handler return null #11281\" (#11282)"},{"Id":"595153859","IsPullRequest":false,"CreatedAt":"2020-04-06T14:22:34","Actor":"MartinMalinda","Number":"11289","RawContent":null,"Title":"Cannot pass an initial value to dynamic textarea","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-composition-api-example-b9qkq](https://codesandbox.io/s/vue-composition-api-example-b9qkq)\r\n\r\n### Steps to reproduce\r\nTake this piece of code: <component :is=\"txt\" v-model=\"textareaInitialValue\" :value=\"textareaInitialValue\"/>. Txt is just bound to `textarea`. There's no way to pass an initial value because `<textarea>` requires `v-model` but `v-model` on `<component>` will be turned into `{ value }` \r\n\r\n### What is expected?\r\nI expect the <component> to correctly pass the v-model to textarea or that textarea could data bind `value` just like `<input>`.\r\n\r\n### What is actually happening?\r\nNothing displays in the dynamic textarea\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11289","RelatedDescription":"Closed issue \"Cannot pass an initial value to dynamic textarea\" (#11289)"},{"Id":"595080998","IsPullRequest":true,"CreatedAt":"2020-04-06T12:38:10","Actor":"trecenti","Number":"11287","RawContent":null,"Title":"fix(src/server/render.js): Fixes component directives rendering","State":"open","Body":"fix #10733\r\n\r\nSSR render does not execute directives attached to a component, this is happening because during SSR render we're using the component's root element as a source for rendering, thus there's no directive associated with it.\r\n\r\nThis fixes it by copying directives from the Component declaration to the Component's root element, while rendering the root element it references the Component instance vnode to properly render it's modules applying the directives.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n","Url":"https://github.com/vuejs/vue/pull/11287","RelatedDescription":"Open PR \"fix(src/server/render.js): Fixes component directives rendering\" (#11287)"},{"Id":"594995416","IsPullRequest":false,"CreatedAt":"2020-04-06T10:40:16","Actor":"NikoGJ","Number":"11285","RawContent":null,"Title":"Form being submitted with <button> tags with type button and submit being toggled alltogether","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/NikoGJ/pen/OJVeYbQ?editors=1011](https://codepen.io/NikoGJ/pen/OJVeYbQ?editors=1011)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Click on Submit button, then on Stop button\r\n- Check the console logs\r\n\r\n### What is expected?\r\nWhen clicking on the stop button, (with the v-if/v-else attributes being present on the html), the console log should display only the following message:\r\n\"stop button clicked\"\r\n\r\nit should not trigger the form submition, as the stop button is just a regular button.\r\n\r\nWe can test the same, with the v-if/v-else attributes being removed, the 2 buttons are then shown, and the behaviour when clicking on each button is appropriate\r\n\r\n\r\n\r\n\r\n\r\n### What is actually happening?\r\nWhen clicking on the stop button, (with the v-if/v-else attributes being present on the html), the console log displays the following messages\r\n\"stop button clicked\"\r\n\"submit on form called\"\r\n\r\n---\r\n- Sorry for the title not being accurate\r\n- 2 workarounds found to make it work:\r\n  - replacing the &lt;button type=\"button\"&gt; by an &lt;input type=\"button\"&gt; instead\r\n  - or specifying v-on:click.prevent=\"...\" on the &lt;button type=\"button\"&gt; instead of v-on:click=\"...\"\r\nOn both workarounds, I do not understand the reason of why it suddently makes it work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11285","RelatedDescription":"Closed issue \"Form being submitted with <button> tags with type button and submit being toggled alltogether\" (#11285)"},{"Id":"594924811","IsPullRequest":true,"CreatedAt":"2020-04-06T08:52:31","Actor":"zhangchen915","Number":"11284","RawContent":null,"Title":"fix(parser): \"checkInFor\" should search up to inline-template","State":"open","Body":"fix #11248\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11284","RelatedDescription":"Open PR \"fix(parser): \"checkInFor\" should search up to inline-template\" (#11284)"},{"Id":"594798104","IsPullRequest":false,"CreatedAt":"2020-04-06T05:06:41","Actor":"blacksonic","Number":"11283","RawContent":null,"Title":"Unable to reach context attributes in Vue 3 setup method","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/blacksonic/todomvc-vue-composition-api/blob/master/src/components/app/app.vue](https://github.com/blacksonic/todomvc-vue-composition-api/blob/master/src/components/app/app.vue)\r\n\r\n### Steps to reproduce\r\nClone the repository, install dependencies and after running `npm start` uncomment the commented lines linked to the issue.\r\n\r\nI'm using the 3.0.0-alpha.11 Vue release with the new compiler (vue-cli-plugin-vue-next) and Vuex 4.0.0-alpha.1\r\n\r\n### What is expected?\r\nAble to access attributes on context\r\n\r\n### What is actually happening?\r\nThe Proxy object always return undefined for properties which exist on the target object\r\n\r\n---\r\nIn the `setup` method in the second `context` parameter, I try to reach `context.attrs.parent` or `context.attrs.appContext`. They exist on the `target` property of the Proxy because when console logging to the terminal I can check them, but when accessing them programmatically they can't be reached\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11283","RelatedDescription":"Closed issue \"Unable to reach context attributes in Vue 3 setup method\" (#11283)"},{"Id":"594239735","IsPullRequest":true,"CreatedAt":"2020-04-05T08:09:38","Actor":"PeterChen1997","Number":"11278","RawContent":null,"Title":"fix: format parseHTML function","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11278","RelatedDescription":"Closed or merged PR \"fix: format parseHTML function\" (#11278)"},{"Id":"594281795","IsPullRequest":false,"CreatedAt":"2020-04-05T06:19:12","Actor":"LKL2017","Number":"11281","RawContent":null,"Title":".once modifier did'nt perform as expected if my event handler return null","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/q0v6m8dr/1/](https://jsfiddle.net/q0v6m8dr/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. bind a handler to an event which with a '.once' modifier \r\n3. set null for the hanlder's return value\r\n2. trigger the event,  and  trigger again\r\n\r\n### What is expected?\r\nonly the first trigger will invoke handler,  under '.once' influence\r\n\r\n### What is actually happening?\r\nsubsequent trigger will also invoke handler beside the first one\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11281","RelatedDescription":"Open issue \".once modifier did'nt perform as expected if my event handler return null\" (#11281)"},{"Id":"593944493","IsPullRequest":false,"CreatedAt":"2020-04-04T16:56:24","Actor":"surjit","Number":"11277","RawContent":null,"Title":"data() method when component extended","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/surjit/vue-test/commit/e7d262d421106c05774bea5b5f96f94f68c3e2fb](https://github.com/surjit/vue-test/commit/e7d262d421106c05774bea5b5f96f94f68c3e2fb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm run server\r\nand Look into console\r\n\r\n### What is expected?\r\nI'm expecting test_b should be object as test\r\nCreateEdit.vue line 8,7\r\n\r\n\r\n### What is actually happening?\r\nNow, It undefined\r\n\r\n\r\n---\r\nI'm trying to get route resolve working as the way Angular does\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11277","RelatedDescription":"Closed issue \"data() method when component extended\" (#11277)"},{"Id":"593865328","IsPullRequest":true,"CreatedAt":"2020-04-04T13:36:05","Actor":"dependabot[bot]","Number":"11276","RawContent":null,"Title":"build(deps-dev): bump acorn from 5.7.3 to 5.7.4","State":"open","Body":"Bumps [acorn](https://github.com/acornjs/acorn) from 5.7.3 to 5.7.4.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/acornjs/acorn/commit/6370e90067552022710190319cbbbd8c43001957\"><code>6370e90</code></a> Mark version 5.7.4</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/fbc15b1344f6dfb992f67b4bbf1357436247c8a0\"><code>fbc15b1</code></a> More rigorously check surrogate pairs in regexp validator</li>\n<li>See full diff in <a href=\"https://github.com/acornjs/acorn/compare/5.7.3...5.7.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=acorn&package-manager=npm_and_yarn&previous-version=5.7.3&new-version=5.7.4)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/vuejs/vue/network/alerts).\n\n</details>","Url":"https://github.com/vuejs/vue/pull/11276","RelatedDescription":"Open PR \"build(deps-dev): bump acorn from 5.7.3 to 5.7.4\" (#11276)"},{"Id":"593608496","IsPullRequest":false,"CreatedAt":"2020-04-03T23:40:37","Actor":"cron13","Number":"11275","RawContent":null,"Title":"[vue-server-renderer] It is possible to use Component-level Caching with data that i got from serverPrefetch()?","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/modest-blackwell-uvtxt](https://codesandbox.io/s/modest-blackwell-uvtxt)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ngo to https://codesandbox.io/s/modest-blackwell-uvtxt and reload browser window - you've got Mismatching childNodes vs. VNodes error, because cached doesn't store data\r\n\r\n### What is expected?\r\ncache component with data\r\n\r\n### What is actually happening?\r\nMismatching childNodes vs. VNodes \r\n\r\n---\r\nHi,\r\nThis issue related to https://github.com/nuxt/nuxt.js/issues/7161\r\nI wanna cache component with data that i fetch from api\r\nBut component cache store only HTML so i got hydration error\r\nMay be it is possible to store html some data that i got from serverPrefetch() or nuxtjs fetch() hook?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11275","RelatedDescription":"Closed issue \"[vue-server-renderer] It is possible to use Component-level Caching with data that i got from serverPrefetch()?\" (#11275)"},{"Id":"593555211","IsPullRequest":false,"CreatedAt":"2020-04-03T19:00:33","Actor":"literakl","Number":"11274","RawContent":null,"Title":"Specific information in template  errors","State":"closed","Body":"### What problem does this feature solve?\r\nI have a trouble with template bugs. The vue warning identifies the file but not the specific location of the error. For example when I access some property of undefined object I receive the name of property and that is all. If this property has multiple occurences it is hard to find which is the root cause. The source map unfortunatelly does not apply for template code.\r\n\r\n    [Vue warn]: Error in render: \"TypeError: Cannot read property 'since' of undefined\"\r\n    found in\r\n    ---> <Profile> at src/views/Profile.vue\r\n       <App> at src/App.vue\r\n         <Root>\r\n\r\nThis error from the error handler is useless too:\r\n\r\n    TypeError: Cannot read property 'since' of undefined\r\n    at Proxy.render (Profile.vue?08f5:69)\r\n    at VueComponent.Vue._render (vue.runtime.esm.js:3548)\r\n    at VueComponent.updateComponent (vue.runtime.esm.js:4066)\r\n    at Watcher.get (vue.runtime.esm.js:4479)\r\n    at Watcher.run (vue.runtime.esm.js:4554)\r\n    at flushSchedulerQueue (vue.runtime.esm.js:4310)\r\n    at Array.<anonymous> (vue.runtime.esm.js:1980)\r\n    at flushCallbacks (vue.runtime.esm.js:1906)\r\n\r\nI prepared minimum reproducible project: https://wwww.github.com/literakl/vue-errors\r\n\r\n\r\n### What does the proposed API look like?\r\nThe error can look this way:\r\n\r\n    [Vue warn]: Error in render at line 35: \"TypeError: Cannot read property 'since' of undefined\"\r\n    found in\r\n    ---> <Profile> at src/views/Profile.vue\r\n       <App> at src/App.vue\r\n         <Root>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11274","RelatedDescription":"Closed issue \"Specific information in template  errors\" (#11274)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"598042950","IsPullRequest":false,"CreatedAt":"2020-04-10T19:44:58","Actor":"6etacat","Number":"3169","RawContent":null,"Title":"Vue Router Dynamic Class Issue","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/zhoLsm6b/11/](https://jsfiddle.net/zhoLsm6b/11/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen a router-view tries to dynamically add classes to the router-links, some changes are overridden. \r\n\r\n### What is expected?\r\nDynamically added classes are preserved. \r\n\r\n### What is actually happening?\r\nWhen vue-router sees it needs to modify the classes, it does not preserve the previous classes. \r\n\r\n---\r\nI need to add another class for CSS modifications on the navigation bar for my 404 page. This requires me to reactively add a class to the router-links. \r\n\r\nMaybe rather than create a new classList, we can simply use `classList.add` or `classList.remove` so the user-added classes can be preserved when vue-router updates the elements?\r\n\r\nOr is this configurable in the router setup?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3169","RelatedDescription":"Closed issue \"Vue Router Dynamic Class Issue\" (#3169)"},{"Id":"595945573","IsPullRequest":false,"CreatedAt":"2020-04-07T15:16:37","Actor":"cartok","Number":"3168","RawContent":null,"Title":"Make asynch code possible in RouteConfig.redirect functions","State":"closed","Body":"### What problem does this feature solve?\r\nYou might be required to execute async code in order to be able to make a decision on where to redirect to.  \r\n\r\n**For example:**\r\n1. Some external service generates a URI like */foo?value=value*\r\n2. A user clicks on the link that came via email\r\n3. The app should redirect from */foo* to */bar or /baz*. The decision on where to redirect to depends on another service (elastic for example). If it found data for *value=value* you want to redirect to */bar*. If not to */baz*. (could be a check if some product still exists where you want to let the user create a review for)\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n// This redirect should execute properly\r\nconst route: RouteConfig = {\r\n  path: '/foo',\r\n  redirect: async function (to) {\r\n    const info = await someApiRequest({ value: to.query.value })\r\n\r\n    if (info) {\r\n      return '/bar'\r\n    } else {\r\n      return '/baz'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3168","RelatedDescription":"Closed issue \"Make asynch code possible in RouteConfig.redirect functions\" (#3168)"},{"Id":"595918906","IsPullRequest":false,"CreatedAt":"2020-04-07T14:38:26","Actor":"SimonSiefke","Number":"3167","RawContent":null,"Title":"Better error message Component type is invalid ","State":"open","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-em6dm?file=/router/index.js](https://codesandbox.io/s/vue-routing-example-em6dm?file=/router/index.js)\r\n\r\nVisit the `/hello` page in the codesandbox reproduction and open the console to see the error message\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSetup lazy-loaded routes and make a mistake by forgetting that it must not be an import but a function that returns the import statement\r\n```\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: import(/* webpackChunkName: \"Home\" */ '../views/Home.vue'),\r\n  }\r\n]\r\n```\r\n\r\n### What is expected?\r\nAn error message that says the component is not valid (because it is a promise) and that the expected type is a function\r\n\r\n### What is actually happening?\r\nVue shows the following error message: \r\n```\r\nFailed to mount component: template or render function not defined.\r\n```\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3167","RelatedDescription":"Open issue \"Better error message Component type is invalid \" (#3167)"},{"Id":"595030290","IsPullRequest":false,"CreatedAt":"2020-04-06T11:22:37","Actor":"bponomarenko","Number":"3166","RawContent":null,"Title":"Provide access to the router instance and component options in \"beforeRouteEnter\" guard","State":"open","Body":"### What problem does this feature solve?\r\nThere are some use cases, when it is required to have access to the router instance and component options inside `beforeRouteEnter` guard. While `beforeRouteUpdate` and `beforeRouteLeave` could get such access through `this.$router` and `this.$options`, it seems not way to achieve it in `beforeRouteEnter`. Importing router instance (similar to store import suggestion [here](https://github.com/vuejs/vue-router/issues/2118#issuecomment-484037415)) is not an option for us because we have shared set of router components, which are re-used in different vue applications, so there is no single place to import it from.\r\n\r\n### Use case\r\n\r\nI'm trying to create generic plugin for our applications which will define hook to pre-load data. In some component data pre-load will happen via vuex store, so it should be accessible in this hook.\r\n\r\nHere is simplified code for the plugin:\r\n```js\r\nexport default function install(Vue) {\r\n  Vue.mixin({\r\n    async beforeRouterEnter(to, from, next) {\r\n      if (componentOptions.preloadData) {\r\n        try {\r\n          const nextCallback = componentOptions.preloadData.call(null, router.app.$store);\r\n          next(nextCallback);\r\n        } catch (error) {\r\n          // Custom error for a generic error handler\r\n          next(new DataPreloadError(error));\r\n        }\r\n      } else {\r\n        next();\r\n      }\r\n    },\r\n  });\r\n};\r\n```\r\n\r\nThis plugin will make it possible to define custom `preloadData() { ... }` component option for a generic data pre-load as part of routing process. The only missing  references to make it work are `componentOptions` and `router`.\r\n\r\nNote that it is possible to provide `router` access in this particular example by passing it as plugin argument – `export default function install(Vue, router) { ... }`. However, it might be still beneficial to have access to router in the `beforeRouteEnter` guard, as it will be a solution for #3157.\r\n\r\n### What does the proposed API look like?\r\nProposal is to add additional `guardContext` argument to the guard function:\r\n```js\r\nbeforeRouteEnter(to, from, next, context) {\r\n // where context is { router: ..., componentOptions: ... }\r\n}\r\n```\r\n\r\nHowever if it should be implemented in different way – would be great to hear it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3166","RelatedDescription":"Open issue \"Provide access to the router instance and component options in \"beforeRouteEnter\" guard\" (#3166)"},{"Id":"593057325","IsPullRequest":false,"CreatedAt":"2020-04-03T08:06:23","Actor":"hengyizhangcn","Number":"3165","RawContent":null,"Title":"Is there the possibility of coexisting with hash mode and history mode in one program","State":"closed","Body":"### What problem does this feature solve?\r\nIs there the possibility of coexisting with hash mode and history mode in one program\r\n\r\n### What does the proposed API look like?\r\nIs there the possibility of coexisting with hash mode and history mode in one program\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3165","RelatedDescription":"Closed issue \"Is there the possibility of coexisting with hash mode and history mode in one program\" (#3165)"},{"Id":"593055233","IsPullRequest":false,"CreatedAt":"2020-04-03T03:42:28","Actor":"hengyizhangcn","Number":"3164","RawContent":null,"Title":"Is there the possibility of coexisting with hash mode and history mode in one program","State":"closed","Body":"Is there the possibility of coexisting with hash mode and history mode in one program","Url":"https://github.com/vuejs/vue-router/issues/3164","RelatedDescription":"Closed issue \"Is there the possibility of coexisting with hash mode and history mode in one program\" (#3164)"},{"Id":"591671724","IsPullRequest":false,"CreatedAt":"2020-04-01T06:51:14","Actor":"hengyizhangcn","Number":"3163","RawContent":null,"Title":" nothing","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/3163","RelatedDescription":"Closed issue \" nothing\" (#3163)"},{"Id":"591603172","IsPullRequest":false,"CreatedAt":"2020-04-01T04:00:35","Actor":"zhgt1997","Number":"3162","RawContent":null,"Title":"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录","State":"closed","Body":"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录，页面没有内容，有什么解决的方法吗\r\n","Url":"https://github.com/vuejs/vue-router/issues/3162","RelatedDescription":"Closed issue \"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录\" (#3162)"},{"Id":"590433621","IsPullRequest":false,"CreatedAt":"2020-03-30T17:37:56","Actor":"evont","Number":"3161","RawContent":null,"Title":"getMatchedComponents 在base 模式下没有返回正确路由","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/evont/vue-multi-ssr](https://github.com/evont/vue-multi-ssr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSSR 下，如果使用了base 选项，比如： { routes: [{ path: '/page1', component: Page1 }], base: '/test' }，访问/pc2/page1, getMatchedComponents 将不会匹配到Page1，会抛出not found\r\n\r\n### What is expected?\r\ngetMatchedComponents 在base 模式下能够正确匹配到组件\r\n\r\n### What is actually happening?\r\ngetMatchedComponents 会直接使用routes中的path 去和fullPath 比对，导致无法获得正确路由组件\r\n\r\n---\r\n在尝试修改源码，在addRouteRecord 添加base 到 normalizedPath，即record.path 加上了base 之后，运行正常，但由于对源码改动比较大，且不确定这一问题是否为正常行为，希望解答或修复，感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3161","RelatedDescription":"Closed issue \"getMatchedComponents 在base 模式下没有返回正确路由\" (#3161)"},{"Id":"590110975","IsPullRequest":false,"CreatedAt":"2020-03-30T09:37:36","Actor":"anihCevol","Number":"3159","RawContent":null,"Title":"beforeRouteLeave","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB](https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nB页面：\r\n```\r\nexport default {\r\n  beforeRouteLeave (to, from, next) {\r\n    next(false)\r\n  }\r\n}\r\n```\r\n假如A页面高度300，A页面滑动到底部，然后路由跳转到B页面，假如B页面高度400，在B页面点击浏览器返回键， 虽然阻止了页面返回，但是页面滚动到了300的位置。\r\n\r\n### What is expected?\r\n页面位置不变\r\n\r\n### What is actually happening?\r\n页面位置滚动上一个页面位置高度\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3159","RelatedDescription":"Closed issue \"beforeRouteLeave\" (#3159)"},{"Id":"590112810","IsPullRequest":false,"CreatedAt":"2020-03-30T09:37:05","Actor":"951759534","Number":"3160","RawContent":null,"Title":"NavigationDuplicated error","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n````\r\nexport const dataRouter= [\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'NormalWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  }\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'ContractWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  },\r\n  {\r\n    path: '',\r\n    redirect: {\r\n      path: 'normalWrites'\r\n    }\r\n  }\r\n];\r\n\r\nrouter.js\r\nconst routes = [\r\n {\r\n        path: '/secondReviewList',\r\n        name: 'SecondReviewList',\r\n        component: SecondReviewList,\r\n        meta: {\r\n          requiresAuth: true\r\n        },\r\n        children: dataRouter\r\n      }\r\n]\r\nnew Router({\r\nroutes,\r\nmode: 'history',\r\n})\r\n\r\nview\r\n\r\n<button @click=\"changurl\">\r\n   change url\r\n<button>\r\n<router-view></router-view>\r\n\r\n\r\njs\r\n\r\nchangeUrl() {\r\n  this.$router.push({\r\n   url: '/secondReviewList/contractWrites'\r\n})\r\n}\r\n````\r\n\r\n### What is expected?\r\nno error\r\n\r\n### What is actually happening?\r\ntrigger this onClick event throw NavigationDuplicated error and this url isn't changed\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3160","RelatedDescription":"Closed issue \"NavigationDuplicated error\" (#3160)"},{"Id":"590110891","IsPullRequest":false,"CreatedAt":"2020-03-30T08:54:23","Actor":"951759534","Number":"3158","RawContent":null,"Title":"NavigationDuplicated error ","State":"closed","Body":"```\r\nexport const dataRouter= [\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'NormalWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  }\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'ContractWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  },\r\n  {\r\n    path: '',\r\n    redirect: {\r\n      path: 'normalWrites'\r\n    }\r\n  }\r\n];\r\n\r\nrouter.js\r\nconst routes = [\r\n {\r\n        path: '/secondReviewList',\r\n        name: 'SecondReviewList',\r\n        component: SecondReviewList,\r\n        meta: {\r\n          requiresAuth: true\r\n        },\r\n        children: dataRouter\r\n      }\r\n]\r\nnew Router({\r\nroutes,\r\nmode: 'history',\r\n})\r\n\r\nview\r\n\r\n<button @click=\"changurl\">\r\n   change url\r\n<button>\r\n<router-view></router-view>\r\n\r\n\r\njs\r\n\r\nchangeUrl() {\r\n  this.$router.push({\r\n   url: '/secondReviewList/contractWrites'\r\n})\r\n}\r\n```\r\n\r\n\r\ntrigger this onClick event    throw NavigationDuplicated error and this url isn't changed\r\n","Url":"https://github.com/vuejs/vue-router/issues/3158","RelatedDescription":"Closed issue \"NavigationDuplicated error \" (#3158)"},{"Id":"589214905","IsPullRequest":false,"CreatedAt":"2020-03-28T17:53:45","Actor":"bponomarenko","Number":"3157","RawContent":null,"Title":"Add possibility to handle aborted navigations globally","State":"closed","Body":"### What problem does this feature solve?\r\nAdds possibility to handle aborted navigations globally.\r\n\r\nInitiated vue-router navigation could have different outcomes:\r\n* successful navigation\r\n* errored navigation (in case there is non-internal js error in one of the guards or hooks)\r\n* aborted navigation\r\n\r\nIn cases, when application logic depends on these navigation results, `vue-router` has very limited support to catch aborted navigations, and no support to do it globally.\r\n\r\nSuccessful navigation can be catched in global `afterEach` hook or in `beforeResolve` guard (however error still can be thrown there). Also there is optional `onComplete` callback for `router.push`, but there is no way to set it from `<router-link>`.\r\nNavigation with error (because of JS error in one of the guards or hooks) can be catched in global `onError` hook. Also there is optional `onAbort` callback for `router.push` (which will be called for both navigation with error and aborted navigation), but there is no way to set it from `<router-link>`.\r\nWhen it comes to aborted navigations, the only place where it can be catched – `onAbort` callback for `router.push`. However, as mentioned before, it is not possible to set it from `<router-link>`. Moreover, there is no global hook to catch aborted navigations at all.\r\n\r\n### Use case\r\n\r\nIn our application we would like to simply display loading indicator in the root App component while navigation is in progress. Also, we would like to have this functionality be generic, so it can be applied to different applications. The easiest way to achieve it is by creating separate ES module like this `navigation-state-plugin.js`:\r\n``` js\r\nimport Vue from 'vue';\r\n\r\nexport const state = Vue.observable({ navigating: false });\r\n\r\nexport default router => {\r\n  // When navigation initiated – update state and proceed\r\n  router.beforeEach((to, from, next) {\r\n    state.navigating = true;\r\n    next();\r\n  });\r\n\r\n  // When navigation successfully finished – update state accordingly\r\n  router.afterEach(() => {\r\n    state.navigating = false;\r\n  });\r\n\r\n  // When navigation failed –also update state\r\n  router.onError(error => {\r\n    state.navigating = false;\r\n  });\r\n};\r\n```\r\n\r\nIn this way in can be applied in the `main.js`:\r\n```js\r\nimport VueRouter from 'vue-router';\r\nimport applyPlugin from './navigation-state-plugin.js`;\r\n\r\n// do other initializations\r\n\r\nconst router = new VueRouter(...);\r\napplyPlugin(router);\r\n\r\n// init application\r\n```\r\n\r\nAlso state from this file can be imported in App.vue and used to display loading indicator when `state.navigating` is `true`.\r\n\r\nHowever, when navigation is aborted there is no way to track it in a global manner, which leads to loading indicator to stay visible on a screen.\r\n\r\nAs possible solution, [it was suggested](https://github.com/vuejs/vue-router/issues/3027#issuecomment-599474646) to _\"use `router.push` or the v-slot api and get the promise returned from `navigate`\"_ (which is currently not available because #3042 has no PR). However this solution would require to create wrappers around vue-router API, which should always be used throughout entire application instead of native `vue-router` api. Even though it is easy to do for `router.push`, it is cumbersome to do for `<router-link>` because wrapper should be able to support the same rendering scenarios (without slot content, with slot content, with scoped slot content, etc.)\r\nIt is also not suitable for us, because we have shared set of router components, which are re-used in different vue applications. And not all applications will have `navigation-state-plugin.js`. So we need to have possibility to use native `router.push` and `<router-link>` with an option to globally manage navigation state.\r\n\r\n### What does the proposed API look like?\r\nMost obvious would be to introduce global `onAbort` hook:\r\n```js\r\n  router.onAbort(function callback(abortedRoute, reason) { ... });\r\n```\r\nwhere `reason` can be one of the errors from #3047\r\n\r\nIt may be possible to call existing `onError` or `afterEach` hooks also for aborted navigations, but that would be a breaking change, and probably would make API more confusing.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3157","RelatedDescription":"Closed issue \"Add possibility to handle aborted navigations globally\" (#3157)"},{"Id":"586168513","IsPullRequest":false,"CreatedAt":"2020-03-25T08:50:13","Actor":"Mafii","Number":"3154","RawContent":null,"Title":"Using Router with Office.js: router tries using push state even tho it's reset manually by the office js script","State":"closed","Body":"### What problem does this feature solve?\r\nWhen using Microsofts Offic.js (e.g. in Word: https://docs.microsoft.com/en-us/javascript/api/word?view=word-js-preview), and using Vue with vue router, the router tries using push state, but the office js script deletes the push state since the excel web pane is not supporting the push state. The check in push state wheter push state can be used, checks for `window.history && 'pushState' in window.history`, but office.js resets the fields on window.history, not window.history itself (see https://stackoverflow.com/a/42703406/). I propose we check if Office.js is available in the context, and if so, we disable the push state.\r\n\r\n### What does the proposed API look like?\r\nWe would add a check at this position:\r\n\r\nhttps://github.com/vuejs/vue-router/blob/c0d3376f4e3527bd761bd325873366ed74f5736b/src/util/push-state.js#L17\r\n\r\nThe additional check could look like this:\r\n\r\n```const officeJsLoaded = window.Office && window.Office.context;```\r\n\r\nso the whole function might look like this:\r\n\r\n```\r\nexport const supportsPushState =\r\n  inBrowser &&\r\n  (function () {\r\n    const ua = window.navigator.userAgent\r\n    const officeJsLoaded = window.Office && window.Office.context\r\n\r\n    if (\r\n      officeJsLoaded ||\r\n      ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\r\n      ua.indexOf('Mobile Safari') !== -1 &&\r\n      ua.indexOf('Chrome') === -1 &&\r\n      ua.indexOf('Windows Phone') === -1)\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    return window.history && 'pushState' in window.history\r\n  })()\r\n```\r\n\r\n\r\n\r\nAlternatively, we could check if `window.history.pushState` is null, but I am not sure of the implications of this. Maybe someone who knows the expected state in the browsers can shed a light wheter that would make sense.\r\n\r\nThis would result in this return statement, the rest of the function not being changed:\r\n```\r\nreturn window.history && 'pushState' in window.history && window.history.pushState !== null\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3154","RelatedDescription":"Closed issue \"Using Router with Office.js: router tries using push state even tho it's reset manually by the office js script\" (#3154)"},{"Id":"586418841","IsPullRequest":false,"CreatedAt":"2020-03-23T18:18:19","Actor":"rfftrifork","Number":"3156","RawContent":null,"Title":"Allow nested routes without parent component","State":"open","Body":"### What problem does this feature solve?\r\nThis issue already exist, but was closed: https://github.com/vuejs/vue-router/issues/2105 I do believe it shouldn't have been.\r\n\r\nThe `PassThrough` solution will most likely do it, but it is a workaround. I do not want to specify every view as a pass through.\r\n\r\nThis should imo. be supported by vue-router directly, making it easier to design ones system as small sub components, allowing each component to know it's own navigation and be loosely coupled.\r\n\r\n\r\nAlso, I don't know if it's the same or another issue, but `name` hierarchies would make this feature quite powerful\r\n\r\n### What does the proposed API look like?\r\nInterface wise I would say it makes sense to simply default to this behavior if `component` isn't specified.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3156","RelatedDescription":"Open issue \"Allow nested routes without parent component\" (#3156)"},{"Id":"586418167","IsPullRequest":false,"CreatedAt":"2020-03-23T18:17:10","Actor":"rfftrifork","Number":"3155","RawContent":null,"Title":"Allow nested routes without parent component","State":"closed","Body":"This issue already exist, but was closed: https://github.com/vuejs/vue-router/issues/2105 I do believe it shouldn't have been.\r\n\r\nThe `PassThrough` solution will most likely do it, but it is a workaround. I do not want to specify every view as a pass through.\r\n\r\nThis should imo. be supported by vue-router directly, making it easier to design ones system as small sub components, allowing each component to know it's own navigation and be loosely coupled.\r\n\r\nInterface wise I would say it makes sense to simply default to this behavior if `component` isn't specified.\r\n\r\nAlso, I don't know if it's the same or another issue, but `name` hierarchies would make this feature quite powerful","Url":"https://github.com/vuejs/vue-router/issues/3155","RelatedDescription":"Closed issue \"Allow nested routes without parent component\" (#3155)"},{"Id":"586001267","IsPullRequest":false,"CreatedAt":"2020-03-23T08:58:46","Actor":"snowtreetree","Number":"3153","RawContent":null,"Title":"router back not work when loading","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/snowtreetree/router-back](https://github.com/snowtreetree/router-back)\r\n\r\n**[youtube video](https://www.youtube.com/watch?v=dxpUgt-fCSo) ,  I upload my video to youtube , you can watch it in 15 second.**\r\n\r\n### Description\r\n**It's not js, just image**\r\n** in my  [app](https://github.com/snowtreetree/router-back), you can change network to slow3g，**when browser top left conrner show loading**,  click `to button`, the page show correctly,  then click browser back, the router params have changed, but the page show no change.**\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/30932683/77144357-a142dc00-6ac0-11ea-8740-ef99a6b34770.png)\r\n\r\n### What is expected?\r\nrouter back immediately.\r\n\r\n### What is actually happening?\r\nwhen something is loading，i want to let router go back, but the page does not change immediately,  when browser loading end,  the page show correctly.\r\n\r\n---\r\nIn my app , I need to do something in router change(log my page path, title), but when the internet speed is slow,  use the function of back or go(-1), I can not back 🤷‍♀️。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3153","RelatedDescription":"Closed issue \"router back not work when loading\" (#3153)"},{"Id":"585778650","IsPullRequest":false,"CreatedAt":"2020-03-22T18:12:46","Actor":"joeldenning","Number":"3152","RawContent":null,"Title":"Ability to detach and reattach popstate listeners","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\nhttps://codesandbox.io/s/nostalgic-mahavira-y0m7q\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n#### Memory leak\r\n\r\nCall `new VueRouter()` multiple times. It is impossible to clean up its popstate listener.\r\n\r\n#### Basepath bug\r\n\r\nIf you have multiple vue applications, each using vue-router, they must all share the same base path, even if you ensure only one of them is active at a time by destroying / remounting when navigating between them. Otherwise they will all attempt to ensure that every route starts with their base path.\r\n\r\nSame goes for if you have one vue-router and one react-router. The vue-router will force all urls to start with its base path within the react-owned pages, even if you have destroyed the vue application before navigating to the react application.\r\n\r\n### What is expected?\r\nI think the best solution is to call `window.addEventListener('popstate', handler)` when `const intance = new Vue({router})` is called, instead of when `new VueRouter()` is called. And then call `window.removeEventListener('popstate', handler)` when `instance.$destroy()` is called.\r\n\r\nAlternatively, it could be cleaned up like so:\r\n\r\n```js\r\n// Alternative solution (not my preferred one, but works)\r\n\r\nconst router = new VueRouter({...})\r\n// later, to clean up event listeners:\r\nrouter.detach()\r\n// later, to reattach event listeners\r\nrouter.attach()\r\n```\r\n\r\n### What is actually happening?\r\nwindow.addEventListener is called during `new VueRouter()`, and there is no way to ever remove that event listener.\r\n\r\n---\r\nSee related https://github.com/single-spa/single-spa/issues/488. I am a maintainer of single-spa, which has dozens of organizations using one or more instances of vue-router. For us, cleaning up the event listener when the application is unmounted is important to being able to have isolated apps on the same page.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3152","RelatedDescription":"Open issue \"Ability to detach and reattach popstate listeners\" (#3152)"},{"Id":"585149522","IsPullRequest":false,"CreatedAt":"2020-03-21T11:22:13","Actor":"Mister-Hope","Number":"3151","RawContent":null,"Title":"Types: Missing options on instance.$router","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Steps to reproduce\r\n```\r\nthis.$router.options // should be the options that user passed to vue-rotuer\r\n```\r\n\r\n## Solution\r\n\r\nI think we should change \r\n\r\n```ts\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $router: VueRouter\r\n    $route: Route\r\n  }\r\n}\r\n```\r\nto \r\n\r\n\r\n```ts\r\nimport { RouterOptions } from './router'\r\n\r\ndeclare module 'vue/types/vue' {\r\n  interface Vue {\r\n    $router: VueRouter & { options: RouterOptions }\r\n    $route: Route\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3151","RelatedDescription":"Closed issue \"Types: Missing options on instance.$router\" (#3151)"},{"Id":"584909405","IsPullRequest":false,"CreatedAt":"2020-03-20T08:25:15","Actor":"snowtreetree","Number":"3150","RawContent":null,"Title":"router back not work when loading","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/snowtreetree/router-back](https://github.com/snowtreetree/router-back)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n![image](https://user-images.githubusercontent.com/30932683/77144357-a142dc00-6ac0-11ea-8740-ef99a6b34770.png)\r\n\r\n### What is expected?\r\nrouter back immediately.\r\n\r\n### What is actually happening?\r\nwhen something is loading，i want to let router go back, but the page does not change immediately,  when browser loading end,  the page show correctly.\r\n\r\n---\r\nIn my app , I need to do something in router change(log my page path, title), but when the internet speed is slow,  use the function of back or go(-1), I can not back 🤷‍♀️。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3150","RelatedDescription":"Closed issue \"router back not work when loading\" (#3150)"},{"Id":"584372607","IsPullRequest":false,"CreatedAt":"2020-03-19T12:47:24","Actor":"krystof-k","Number":"3149","RawContent":null,"Title":"<router-link> doesn't blur","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/xenodochial-murdock-xssfp](https://codesandbox.io/s/xenodochial-murdock-xssfp)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nYou can set up a new project `vue create .` & `vue add router`, then add\r\n\r\n```css\r\na:focus {\r\nborder: 5px solid red;\r\n}\r\n```\r\n\r\nand try to click any of the navigation links.\r\n\r\n### What is expected?\r\nIt should blur after route changed.\r\n\r\n### What is actually happening?\r\nIt doesn't blur.\r\n\r\n---\r\nI tried googling for a long time but found no issues mentioning this. So either I'm missing something or it nobody styles focus state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3149","RelatedDescription":"Closed issue \"<router-link> doesn't blur\" (#3149)"},{"Id":"583448353","IsPullRequest":false,"CreatedAt":"2020-03-18T09:09:44","Actor":"M0j1","Number":"3148","RawContent":null,"Title":"Cannot get symbol type value in params","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/wandering-shape-utn95](https://codesandbox.io/s/wandering-shape-utn95)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJumping from the HOME page to the User page, the params carry a value of symbol type key, but the params obtained on the user page do not contain a value of type symbol\r\n\r\n### What is expected?\r\nI can get the key of symbol type and use it\r\n\r\n### What is actually happening?\r\nIn the params passed, the symbol type key cannot be obtained, and the Google console cannot see it\r\n\r\n---\r\nv3.1.3 can get it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3148","RelatedDescription":"Closed issue \"Cannot get symbol type value in params\" (#3148)"},{"Id":"583412666","IsPullRequest":false,"CreatedAt":"2020-03-18T02:11:51","Actor":"fellowT","Number":"3147","RawContent":null,"Title":"路由切换报错","State":"closed","Body":"Identifier 'pleaseLetJsLoaded' has already been declared\r\n![image](https://user-images.githubusercontent.com/37097875/76918253-ddc7d980-6900-11ea-88aa-5b4c4ce02803.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3147","RelatedDescription":"Closed issue \"路由切换报错\" (#3147)"},{"Id":"582192010","IsPullRequest":false,"CreatedAt":"2020-03-16T10:55:45","Actor":"deefeloper","Number":"3146","RawContent":null,"Title":"Home view created twice","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://none.needed](https://none.needed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a boilerplate vue app, add console.log() in created() in Home.\r\n\r\n### What is expected?\r\nOnly one log\r\n\r\n### What is actually happening?\r\ntwo logs\r\n\r\n---\r\nOnly the Home view is created twice on initial load & refresh, all other views are fine. I double checked that the mount div is not in there twice\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3146","RelatedDescription":"Closed issue \"Home view created twice\" (#3146)"},{"Id":"581212425","IsPullRequest":false,"CreatedAt":"2020-03-14T13:35:45","Actor":"bailihua93","Number":"3145","RawContent":null,"Title":"router.go won't work when the page is Pending","State":"closed","Body":"when the page is been Pending because of  some api   pending, after this.$router.push ,the  $router.go(-1)  won't work","Url":"https://github.com/vuejs/vue-router/issues/3145","RelatedDescription":"Closed issue \"router.go won't work when the page is Pending\" (#3145)"},{"Id":"580620420","IsPullRequest":false,"CreatedAt":"2020-03-13T14:08:36","Actor":"phiter","Number":"3144","RawContent":null,"Title":"Add aria-current=\"page\" to the active link","State":"closed","Body":"### What problem does this feature solve?\r\nUsers that can see the page can have a nice experience of knowing which link is currently active just by looking at a styled active link with the `activeClass`.\r\n\r\nBut visually impaired users, those who rely on screen readers, currently have no way of knowing that the currently selected link is the active link.\r\n\r\nTo fix this, `aria-current=\"page\"` adds an extra information to the screen reader that the currently focused link is the same as the current page, so if we add that together with `activeClass` we'll be aiding both sighted and blind users.\r\n\r\n### What does the proposed API look like?\r\nBasically, when we add `activeClass` also pass `aria-current=\"page\"` to the generated anchor.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3144","RelatedDescription":"Closed issue \"Add aria-current=\"page\" to the active link\" (#3144)"},{"Id":"580374482","IsPullRequest":false,"CreatedAt":"2020-03-13T05:07:27","Actor":"lovetingyuan","Number":"3143","RawContent":null,"Title":"Error: Cannot read property 'apply' of undefined","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/stupefied-river-6pyng](https://codesandbox.io/s/stupefied-river-6pyng)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nuse component route guard before vue-router installed.\r\n```javascript\r\nVue.mixin({\r\n  beforeRouteUpdate(to, from, next) {\r\n    next();\r\n  }\r\n});\r\n\r\nVue.use(Router)\r\n\r\n```\r\n\r\n### What is expected?\r\nJust no error or the document should indicate that user should not use component route guard mixins before vue-router is installed.\r\n\r\n### What is actually happening?\r\n```bash\r\nTypeError: Cannot read property 'apply' of undefined\r\n    at boundRouteGuard (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2297:20)\r\n\r\n    at iterator (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2160:7)\r\n\r\n    at step (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:1886:9)\r\n\r\n    at runQueue (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:1894:3)\r\n\r\n    at HTML5History.confirmTransition (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2187:3)\r\n\r\n    at HTML5History.transitionTo (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2074:8)\r\n\r\n    at HTML5History.push (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2405:10)\r\n\r\n    at VueRouter.push (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:2820:18)\r\n\r\n    at handler (https://6pyng.csb.app/node_modules/vue-router/dist/vue-router.common.js:1100:18)\r\n\r\n    at invokeWithErrorHandling (eval at Qr (https://codesandbox.io/static/js/sandbox.37b4bff87.js:1:178758), <anonymous>:1859:26)\r\n\r\n    at HTMLAnchorElement.invoker (eval at Qr (https://codesandbox.io/static/js/sandbox.37b4bff87.js:1:178758), <anonymous>:2184:14)\r\n\r\n    at HTMLAnchorElement.original._wrapper (eval at Qr (https://codesandbox.io/static/js/sandbox.37b4bff87.js:1:178758), <anonymous>:7543:25)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3143","RelatedDescription":"Open issue \"Error: Cannot read property 'apply' of undefined\" (#3143)"},{"Id":"579759620","IsPullRequest":false,"CreatedAt":"2020-03-12T08:16:36","Actor":"Evertvdw","Number":"3142","RawContent":null,"Title":"Async child components are created after App.vue mounted() on client but not on SSR","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/fervent-dream-5upjy](https://codesandbox.io/s/fervent-dream-5upjy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the code and check the console output of the SSR and the Client hydration.\r\n\r\n\r\n### What is expected?\r\nI'm using Quasar with SSR mode, but we have trouble there with async components. We run into some errors because at the SSR side some components are created, which on the client side are created after the initial mount. This in turn causes hydration errors. In the provided example I have a MainLayout (which is async loaded in the router), which in turn  loads (also async) an EssentialLink component. In order to solve our issue this EssentialLink component should be created on the client side before the App.vue mounted hook. \r\n\r\n### What is actually happening?\r\nCurrently only the component loaded async in the route itself is created before App.vue mounted(). Child components that are also async are created after the App.vue mounted() hook which causes issues for us. \r\n\r\n---\r\nServer and client side are waiting for router.onReady() which in the documentation says that async components are resolved before this hook is called: https://router.vuejs.org/api/#router-onready. \r\n\r\nIt seems to me that the router.onReady() should only be fired when all async child components are also resolved and created.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3142","RelatedDescription":"Closed issue \"Async child components are created after App.vue mounted() on client but not on SSR\" (#3142)"},{"Id":"576676381","IsPullRequest":false,"CreatedAt":"2020-03-06T03:38:31","Actor":"rashadrivera","Number":"3141","RawContent":null,"Title":"VueRouter Silently Fails","State":"closed","Body":"When configuring vue-router, it can fail without any explanation.  In my case, I placed a '<router-view></router-view>' tag in my app.  However, when the app renders the UI, there is nothing shown.  The Chrome debug tool shows the router-view node, but nothing is inside.  \r\n\r\nThe expected behavior is for the router to throw an error or show a console message explaining why it did not render anything instead of silently failing.  ","Url":"https://github.com/vuejs/vue-router/issues/3141","RelatedDescription":"Closed issue \"VueRouter Silently Fails\" (#3141)"},{"Id":"575935320","IsPullRequest":false,"CreatedAt":"2020-03-05T15:26:46","Actor":"vallemar","Number":"3140","RawContent":null,"Title":"Overwrite Props to Route Components does not work","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/vallemar/rfwo5m3v/74/](https://jsfiddle.net/vallemar/rfwo5m3v/74/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the text.\r\n\r\n### What is expected?\r\nI hope that the properties that are passed to the view are the ones that I have configured in my data link with <router-link>.\r\n\r\n### What is actually happening?\r\nThe property that is passed is the default that is put on the router and is not overwritten by the one that is passed at that time from the <router-link>.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3140","RelatedDescription":"Closed issue \"Overwrite Props to Route Components does not work\" (#3140)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"597702504","IsPullRequest":true,"CreatedAt":"2020-04-10T05:23:52","Actor":"godky","Number":"1711","RawContent":null,"Title":"Register nested modules through more uniform naming ","State":"open","Body":"Usually people prefer to register nested modules `nested / myModule`  by passing in ` nested / myModule` instead of `['nested', 'myModule']`, which is more unified with the namespace.In addition,this modification will consider a single empty string path to be the root module.","Url":"https://github.com/vuejs/vuex/pull/1711","RelatedDescription":"Open PR \"Register nested modules through more uniform naming \" (#1711)"},{"Id":"596338483","IsPullRequest":true,"CreatedAt":"2020-04-08T06:24:15","Actor":"corgiyun","Number":"1710","RawContent":null,"Title":"docs: update getters.md","State":"open","Body":"docs: update getters.md","Url":"https://github.com/vuejs/vuex/pull/1710","RelatedDescription":"Open PR \"docs: update getters.md\" (#1710)"},{"Id":"596259791","IsPullRequest":false,"CreatedAt":"2020-04-08T02:12:46","Actor":"bangbala","Number":"1709","RawContent":null,"Title":"vuex性能问题","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nstore:xxx.js内容\r\n...\r\n  current(state) {\r\n    ...\r\n  }\r\n\r\n  platform(state, getters) {\r\n    return getters.current.platform;\r\n  },\r\n\r\n\r\n  groups(state, getters) {\r\n    const platform = getters.platform;\r\n    return [platform]\r\n  }\r\n..\r\n\r\n\r\n组件：\r\n...\r\ncomputed:{\r\n  ...mapGetters(\"xxx\", [\"groups\"])\r\n}\r\n...\r\n\r\n发现current改变，但current.platform的值没有变化情况下发现groups会调用多次","Url":"https://github.com/vuejs/vuex/issues/1709","RelatedDescription":"Closed issue \"vuex性能问题\" (#1709)"},{"Id":"595621726","IsPullRequest":true,"CreatedAt":"2020-04-07T06:21:51","Actor":"baojie223","Number":"1708","RawContent":null,"Title":"refactor: normalizeMap uses Map instead of Object","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1708","RelatedDescription":"Open PR \"refactor: normalizeMap uses Map instead of Object\" (#1708)"},{"Id":"592622128","IsPullRequest":true,"CreatedAt":"2020-04-02T13:13:47","Actor":"kiaking","Number":"1707","RawContent":null,"Title":"build: add conventional changelog support","State":"open","Body":"This PR adds Conventional Changelog support to enhance release process and to align with recent Vue ecosystems.\r\n\r\n- Generate initial CHANGELOG.md including all past releases.\r\n- Add Contribution guideline taken from Vue & Vue next. The contents are modified slightly to fit into Vuex context.\r\n- Update release shell file to support changeling generation.","Url":"https://github.com/vuejs/vuex/pull/1707","RelatedDescription":"Open PR \"build: add conventional changelog support\" (#1707)"},{"Id":"575414643","IsPullRequest":false,"CreatedAt":"2020-04-02T09:13:36","Actor":"asoglovo","Number":"1690","RawContent":null,"Title":"Helper functions to subscribe a component to the commits/actions stream","State":"closed","Body":"### What problem does this feature solve?\r\nAdd a \"mapping\" layer from the mutations/actions stream to the components that want to subscribe to them. \r\n\r\nSimilarly to the existing `mapActions` or `mapGetters` functions which decouple the Vuex store from the components using it, a new pair of functions could exist to allow the components get subscribed to the dispatched actions or committed mutations in a way such that direct usage of the store is not necessary.\r\n\r\n### What does the proposed API look like?\r\nIn the components, instead of directly accessing `$store` to subscribe to the actions stream:\r\n\r\n```js\r\ncreated() {\r\n  this.unsubscribe = this.$store.subscribeAction((action, state) => {\r\n    if (action.type === 'MY_ACTION_TYPE') { ... }\r\n  })\r\n},\r\n\r\ndestroyed() {\r\n  this.unsubscribe()\r\n}\r\n```\r\n\r\nWe'd have something like:\r\n\r\n```js\r\ncreated() {\r\n  this.unsubscribe = subscribeAction('MY_ACTION_TYPE', (payload, state) => { ... })\r\n},\r\n\r\ndestroyed() {\r\n  this.unsubscribe()\r\n}\r\n```\r\n\r\nThis function would not only decouple the usage of the store from the components, but also provide a filter to only respond to the given action type. Note that, since subscribing to actions is not a widespread idiom with Vuex, we could go without a plural version, such as `subscribeActions`.\r\n\r\nA similar function, `subscribeMutation` could do the same for mutations.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1690","RelatedDescription":"Closed issue \"Helper functions to subscribe a component to the commits/actions stream\" (#1690)"},{"Id":"584741692","IsPullRequest":true,"CreatedAt":"2020-04-02T09:06:37","Actor":"andrewminer","Number":"1699","RawContent":null,"Title":"Throw an error when an unknown mutation is requested","State":"closed","Body":"I noticed when I was running my unit tests that I got a number of `[vuex] unknown mutation type` errors in the log, but without any tests actually failing.  This was due to my having (deliberately) removed a store which provided those mutations.  This also removed those tests which were explicitly exercising that mutation, so there were no longer any tests which actually checked that the mutation worked.  So, that all checks out.\r\n\r\nHowever...  there still were all the the places which were calling the now unknown mutation without triggering any errors of their own in _their_ tests.  This pull request changes the reaction to not finding a mutation to thow an error instead of swallowing the problem.  This will (correctly, to my mind) cause upstream code which erroneously commits a non-existant mutation to fail.","Url":"https://github.com/vuejs/vuex/pull/1699","RelatedDescription":"Closed or merged PR \"Throw an error when an unknown mutation is requested\" (#1699)"},{"Id":"567707440","IsPullRequest":false,"CreatedAt":"2020-03-30T15:29:49","Actor":"blacksonic","Number":"1683","RawContent":null,"Title":"Vuex breaks with Vue 3.x upgrade","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://github.com/blacksonic/todoapp-vue/tree/vue3](https://github.com/blacksonic/todoapp-vue/tree/vue3)\r\n\r\n### Steps to reproduce\r\nvue add vue-next\r\ntry to use the Vuex plugin on the instance returned from createApp\r\n\r\n### What is expected?\r\nVuex plugin added to the app instance\r\n\r\n### What is actually happening?\r\nThe app breaks with console error:\r\n\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n\r\n---\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\nvar version = Number(Vue.version.split('.')[0]);\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1683","RelatedDescription":"Closed issue \"Vuex breaks with Vue 3.x upgrade\" (#1683)"},{"Id":"590380264","IsPullRequest":true,"CreatedAt":"2020-03-30T15:25:35","Actor":"kiaking","Number":"1706","RawContent":null,"Title":"docs: add docs and typings for the new `hasModule` method","State":"open","Body":"This PR adds docs and typing for the new `hasModule` API which was added at #834.","Url":"https://github.com/vuejs/vuex/pull/1706","RelatedDescription":"Open PR \"docs: add docs and typings for the new `hasModule` method\" (#1706)"},{"Id":"589214433","IsPullRequest":true,"CreatedAt":"2020-03-30T11:09:28","Actor":"brycehipp","Number":"1703","RawContent":null,"Title":"Correcting typo in README","State":"closed","Body":"I was reading through the changes coming to v4 and noticed a minor typo.","Url":"https://github.com/vuejs/vuex/pull/1703","RelatedDescription":"Closed or merged PR \"Correcting typo in README\" (#1703)"},{"Id":"589517974","IsPullRequest":false,"CreatedAt":"2020-03-28T06:16:08","Actor":"shredmaster","Number":"1705","RawContent":null,"Title":"fluent API to access to actions/getters/state/mutations","State":"open","Body":"### What problem does this feature solve?\r\nour team just adopted VueJS recently and I really don't like using the mapXXX helpers for a couple of reasons. \r\n\r\n1. bad readability\r\n2. magic strings are hard to maintain and refactor\r\n3. can't navigate to the source in the IDE\r\n\r\nI think it would be nice to access the module directly.\r\n\r\n### What does the proposed API look like?\r\n\r\n```js\r\nconst cart = {\r\n  actions: {\r\n    checkout ({ commit, state }, products) {\r\n    }\r\n  }\r\n}\r\n```\r\nto dispatch checkout action, you can call the method directly.\r\n\r\n```js\r\n$store.cart.actions.checkout(products)\r\n```\r\n\r\nI made a simple plugin [vuex-help](https://github.com/shredmaster/vuex-help) to access modules directly, but I think this would be a nice addition to the existing API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1705","RelatedDescription":"Open issue \"fluent API to access to actions/getters/state/mutations\" (#1705)"},{"Id":"589517507","IsPullRequest":false,"CreatedAt":"2020-03-28T06:12:25","Actor":"shredmaster","Number":"1704","RawContent":null,"Title":"More fluent API to access to actions/getters/state/mutations","State":"closed","Body":"## What problem does this feature solve?\r\nour team just adopted VueJS recently and I really don't like using the mapXXX helpers for a couple of reasons. \r\n\r\n1. bad readability\r\n2. magic strings are hard to maintain and refactor\r\n3. can't navigate to the source in the IDE\r\n\r\nI think it would be nice to access the module directly.\r\n\r\n## What does the proposed API look like?\r\n\r\n```js\r\nconst cart = {\r\n  actions: {\r\n    checkout ({ commit, state }, products) {\r\n    }\r\n  }\r\n}\r\n```\r\nto dispatch checkout action, you can call the method directly.\r\n\r\n```js\r\n$store.cart.actions.checkout(products)\r\n```\r\n\r\nI made a simple plugin [vuex-help](https://github.com/shredmaster/vuex-help) to access modules directly, but I think this would be a nice addition to the existing API. ","Url":"https://github.com/vuejs/vuex/issues/1704","RelatedDescription":"Closed issue \"More fluent API to access to actions/getters/state/mutations\" (#1704)"},{"Id":"586791755","IsPullRequest":true,"CreatedAt":"2020-03-24T14:40:47","Actor":"sunnyke","Number":"1702","RawContent":null,"Title":"modify test description","State":"closed","Body":"spell error:\r\nfile path:  /vuex/test/unit/util.spec.js \r\ndiff: change nornal to normal","Url":"https://github.com/vuejs/vuex/pull/1702","RelatedDescription":"Closed or merged PR \"modify test description\" (#1702)"},{"Id":"585149548","IsPullRequest":true,"CreatedAt":"2020-03-24T14:36:24","Actor":"kootoopas","Number":"1701","RawContent":null,"Title":"Fix getter type optional params","State":"closed","Body":"Fix getter type to match implementation by marking optional params.","Url":"https://github.com/vuejs/vuex/pull/1701","RelatedDescription":"Closed or merged PR \"Fix getter type optional params\" (#1701)"},{"Id":"583179440","IsPullRequest":false,"CreatedAt":"2020-03-23T21:03:34","Actor":"kossa","Number":"1698","RawContent":null,"Title":"Doc got empty page","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[http://localhost:8080/](http://localhost:8080/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone repo\r\nrun : npm i\r\nrun : npm run docs\r\n\r\nin browser open : http://localhost:8080/\r\n\r\n### What is expected?\r\nSee the documentation\r\n\r\n### What is actually happening?\r\nBlank page\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1698","RelatedDescription":"Closed issue \"Doc got empty page\" (#1698)"},{"Id":"584889928","IsPullRequest":false,"CreatedAt":"2020-03-20T07:30:21","Actor":"sunlulu8","Number":"1700","RawContent":null,"Title":"老项目vuex不能共享","State":"closed","Body":"老项目，在每个模块都有一个入口文件会创建vue实例然后注入store，这种写法vuex好像不能共享啊，应该怎么修改才可以在一个模块修改state之后另一个模块getters可以自己获取","Url":"https://github.com/vuejs/vuex/issues/1700","RelatedDescription":"Closed issue \"老项目vuex不能共享\" (#1700)"},{"Id":"583168608","IsPullRequest":true,"CreatedAt":"2020-03-19T15:14:49","Actor":"atilacamurca","Number":"1696","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1696","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1696)"},{"Id":"583173233","IsPullRequest":false,"CreatedAt":"2020-03-17T17:20:44","Actor":"kossa","Number":"1697","RawContent":null,"Title":"Doc got empty page","State":"closed","Body":"Hello,\r\n\r\nI try to run : `npm run docs` after cloning and npm install command\r\n\r\nConsole :\r\n![image](https://user-images.githubusercontent.com/1175584/76883229-15d90900-687c-11ea-88e7-7ffbdd9db559.png)\r\n\r\nBrowser :\r\n![image](https://user-images.githubusercontent.com/1175584/76883027-c7c40580-687b-11ea-87a0-77705e94de50.png)\r\n ","Url":"https://github.com/vuejs/vuex/issues/1697","RelatedDescription":"Closed issue \"Doc got empty page\" (#1697)"},{"Id":"581694787","IsPullRequest":false,"CreatedAt":"2020-03-15T14:25:10","Actor":"h311x","Number":"1695","RawContent":null,"Title":"Add useStoreModule","State":"open","Body":"### What problem does this feature solve?\r\nWhile I was looking through the examples of the 4.0 alpha version, I thought that when you have a large store it can become a bit annoying to declare getters and actions locally in every component you need. So I think it would be nice to have a some sort of a helper function that returns only (hopefully typed) store module you want to use. \r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst myModule = useStoreModule(\"module namespace\")\r\n\r\nconsole.log(myModule.state) // returns state of a module etc.\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1695","RelatedDescription":"Open issue \"Add useStoreModule\" (#1695)"},{"Id":"574213968","IsPullRequest":true,"CreatedAt":"2020-03-11T10:05:11","Actor":"elevatebart","Number":"1687","RawContent":null,"Title":"docs: make obvious where to import store from","State":"closed","Body":"As we browse through the modules page, it is unclear where the `store` is imported from.\r\n\r\nSince it is a one liner, I thought it would clarify to have the import explicitly here.\r\n\r\nTell me what you think.","Url":"https://github.com/vuejs/vuex/pull/1687","RelatedDescription":"Closed or merged PR \"docs: make obvious where to import store from\" (#1687)"},{"Id":"579102344","IsPullRequest":false,"CreatedAt":"2020-03-11T08:54:30","Actor":"enjkvbej","Number":"1694","RawContent":null,"Title":"How to update item of deep array in mutation","State":"closed","Body":"````\r\nstate = {\r\n  list: [\r\n      {\r\n          config: {\r\n              children: []\r\n          },\r\n      },\r\n  ]\r\n}\r\n\r\nmutation:\r\nconst copyRow = cloneDeep(state.list[0]) // lodash cloneDeep\r\ncopyRow.config.children.push({xxx: xxx})\r\nstate.list.splice(0, 1, copyRow)\r\n````\r\nexpect: add item in chlidren\r\nerror: [vuex] do not mutate vuex store state outside mutation handlers.\r\nPlease help me! Thanks!","Url":"https://github.com/vuejs/vuex/issues/1694","RelatedDescription":"Closed issue \"How to update item of deep array in mutation\" (#1694)"},{"Id":"579099587","IsPullRequest":false,"CreatedAt":"2020-03-11T08:49:34","Actor":"enjkvbej","Number":"1693","RawContent":null,"Title":"How to update item of a deep array in mutation","State":"closed","Body":"````\r\nstate = {\r\n  list: [\r\n      {\r\n          config: {\r\n              children: []\r\n          },\r\n      },\r\n  ]\r\n}\r\n\r\nmutation:\r\nconst copyRow = cloneDeep(state.list[0]) // lodash cloneDeep\r\ncopyRow.config.children.push({xxx: xxx})\r\nstate.list.splice(0, 1, copyRow)\r\n````\r\nexpect: add item in chlidren\r\nerror: [vuex] do not mutate vuex store state outside mutation handlers.\r\nPlease help me! Thanks!","Url":"https://github.com/vuejs/vuex/issues/1693","RelatedDescription":"Closed issue \"How to update item of a deep array in mutation\" (#1693)"},{"Id":"577861744","IsPullRequest":true,"CreatedAt":"2020-03-09T12:18:09","Actor":"kiaking","Number":"1692","RawContent":null,"Title":"build: add vue as a peer dependency (#1681)","State":"closed","Body":"Issue: #1681 \r\n\r\nThis PR adds Vue as a peer dependency. It should help using Vuex with Yarn 2 too.","Url":"https://github.com/vuejs/vuex/pull/1692","RelatedDescription":"Closed or merged PR \"build: add vue as a peer dependency (#1681)\" (#1692)"},{"Id":"574939504","IsPullRequest":false,"CreatedAt":"2020-03-09T11:57:54","Actor":"rodolphocastro","Number":"1689","RawContent":null,"Title":"ModuleTree<S, R>","State":"closed","Body":"### What problem does this feature solve?\r\nThis interface might help when dealing with nested modules on stores using Typescript.\r\n\r\nCurrently the `Module<S, R>` interface exposes a single `ModuleTree<R>´ which allows us to create one level of nested modules. \r\n\r\nExposing a `ModuleTree<R>` or a `ModuleTree<S, R>` would be inline with the current `GetterTree<S, R>` and other Trees and allow us to deeper nest our Modules.\r\n\r\nI ran into this issue when attempting to create a nested module within a nested module using Typescript. The \"parent\" modules holds state for some supported features on the application and its children require to check those features in order to validate their `actions`. The root state (or parent of the parent, in this case) simply holds environment and version information.\r\n\r\n### What does the proposed API look like?\r\nI belive that a new interface `ModuleTree<S,R>` might solve the issue:\r\n\r\n```ts\r\nexport interface ModuleTree<S, R> {\r\n  [key: string]: Module<S, R>;\r\n}\r\n```\r\n\r\nWhich could be added to the Current `Module<S, R>` interface as an `or`:\r\n\r\n```ts\r\nexport interface Module<S, R> {\r\n  namespaced?: boolean;\r\n  state?: S | (() => S);\r\n  getters?: GetterTree<S, R>;\r\n  actions?: ActionTree<S, R>;\r\n  mutations?: MutationTree<S>;\r\n  modules?: ModuleTree<R> | ModuleTree<S, R>;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1689","RelatedDescription":"Closed issue \"ModuleTree<S, R>\" (#1689)"},{"Id":"574743323","IsPullRequest":true,"CreatedAt":"2020-03-05T09:00:02","Actor":"logicaltrojan","Number":"1688","RawContent":null,"Title":"Typo Fix : 돌연 변이 -> 변이","State":"closed","Body":"mutations can be translate to '변이' in Korean, but it makes completely non sense as '돌연변이'.\r\nThe '돌연 변이' is used as 'mutants'(in biological meaning).","Url":"https://github.com/vuejs/vuex/pull/1688","RelatedDescription":"Closed or merged PR \"Typo Fix : 돌연 변이 -> 변이\" (#1688)"},{"Id":"575792250","IsPullRequest":false,"CreatedAt":"2020-03-04T21:30:45","Actor":"DQvsRA","Number":"1691","RawContent":null,"Title":"Why getters functions executed even if they do not called","State":"closed","Body":"Strange behaviour all registered getter are called when Vuex initialized, even before first call of the getter it's executed automatically. Is it ok? I don't think so.\r\n```\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n  },\r\n  getters: {\r\n    helloGetter (store) {\r\n      console.log('What?!')\r\n    }\r\n  }\r\n})\r\n\r\nnew Vue({\r\n  store,\r\n  render: h => h(<div>App</div>)\r\n}).$mount('#app')\r\n```","Url":"https://github.com/vuejs/vuex/issues/1691","RelatedDescription":"Closed issue \"Why getters functions executed even if they do not called\" (#1691)"},{"Id":"573354462","IsPullRequest":false,"CreatedAt":"2020-02-29T17:41:17","Actor":"zl7261","Number":"1686","RawContent":null,"Title":"How to typescript vuex getter function?","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[ https://github.com/zl7261/vuex_study]( https://github.com/zl7261/vuex_study)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe vuex getters functions can return an anonymous function that can operate state of vuex .\r\nbut how to typescript annotation function param type\r\nif I call vuex getters like this code style \r\n\r\n``` javascript\r\nconst getters = {\r\n    getStateValue(state) {\r\n        return (value) => {\r\n            console.log(value)\r\n            return state[value]\r\n        }\r\n    }\r\n}\r\n```\r\n```javascript \r\nthis.$store.getters.getStateValue('testMsg')\r\n```\r\nActually, 'textMsg' is type of the Inner anonymous function param,\r\nbut if I call the getters method like this, the IDE think state is String type.\r\n\r\n\r\n\r\n### What is expected?\r\nCan be typescript\r\n\r\n### What is actually happening?\r\nI don't know how to use type annotation in this case.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1686","RelatedDescription":"Open issue \"How to typescript vuex getter function?\" (#1686)"},{"Id":"569116559","IsPullRequest":false,"CreatedAt":"2020-02-26T00:53:31","Actor":"davidmeirlevy","Number":"1684","RawContent":null,"Title":"`createNamespacedHelpers` return mappers that need `this`","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/davidmeirlevy/9hbqjmg2/34/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nget a mapper:\r\n`const { mapActions } = createNamespacedHelpers(MODULE_NAME)`\r\n\r\nmap some action:\r\n`const {action} = mapActions(['action'])`\r\n\r\nrun this action directly, without adding it to a component methods:\r\n`action()`\r\n\r\n### What is expected?\r\nthe action should be dispacthed\r\n\r\n### What is actually happening?\r\nThis line breaks because we didn't ran this function from a vue component context:\r\n`var dispatch = this.$store.dispatch;`\r\n\r\n---\r\nwhen we want to use the mappers from the `setup()` function of the composition-api, the component's `this` shouldn't be relevant, so you should probably find another way to map actions without expecting being executed as a vue component's method.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1684","RelatedDescription":"Closed issue \"`createNamespacedHelpers` return mappers that need `this`\" (#1684)"},{"Id":"569448568","IsPullRequest":true,"CreatedAt":"2020-02-25T16:56:03","Actor":"davidmeirlevy","Number":"1685","RawContent":null,"Title":"#1684 - wrap namespaced helpers with store ahead","State":"closed","Body":"related to #1684 ","Url":"https://github.com/vuejs/vuex/pull/1685","RelatedDescription":"Closed or merged PR \"#1684 - wrap namespaced helpers with store ahead\" (#1685)"},{"Id":"567702944","IsPullRequest":false,"CreatedAt":"2020-02-19T17:04:20","Actor":"blacksonic","Number":"1682","RawContent":null,"Title":"Vuex breaks with Vue 3.x","State":"closed","Body":"I've tried to run a Vue 3 application with Vuex, but when using it as a plugin I get the following error:\r\n\r\n```\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n```\r\n\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\n```javascript\r\nvar version = Number(Vue.version.split('.')[0]);\r\n```\r\n\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.","Url":"https://github.com/vuejs/vuex/issues/1682","RelatedDescription":"Closed issue \"Vuex breaks with Vue 3.x\" (#1682)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-04-12T05:30:48.5166662Z","RunDurationInMilliseconds":2104}