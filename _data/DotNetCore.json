{"Data":{"Blog":{"FeedItems":[{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":40,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null},{"Title":".NET Core is the Future of .NET ","PublishedOn":"2019-05-06T22:22:54+00:00","CommentsCount":98,"FacebookCount":0,"Summary":"We introduced .NET Core 1.0 on November 2014. The goal with .NET Core was to take the learning from our experience building, shipping and servicing .NET Framework over the previous 12 years and build...","Href":"https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/","RawContent":null},{"Title":"Announcing ML.NET 1.0","PublishedOn":"2019-05-06T18:51:26+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"We are excited to announce the release of ML.NET 1.0 today.  ML.NET is a free, cross-platform and open source machine learning framework designed to bring the power of machine learning (ML) into .NET...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9341532248","Type":"PullRequestEvent","CreatedAt":"2019-03-29T14:44:24","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Merged pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9644381537","Type":"PullRequestEvent","CreatedAt":"2019-05-17T04:59:27","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24431","RelatedDescription":null,"RelatedBody":"Remove the struct wrappings over Task in the AsyncMethodBuilders by moving the implementations to static helper members on AsyncMethodBuilderCore.\r\n\r\nShrink `AsyncValueTaskMethodBuilder` to a single pointer size.\r\n\r\nRemove `bool _useBuilder` field from `AsyncValueTaskMethodBuilder<TResult>` as we can check if `m_task` is set instead.\r\n\r\n/cc @stephentoub "},{"Id":"9644381381","Type":"PullRequestEvent","CreatedAt":"2019-05-17T04:59:25","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24431","RelatedDescription":"Closed pull request \"Shrink AsyncValueTaskMethodBuilder\" (#24431) at dotnet/coreclr","RelatedBody":"Remove the struct wrappings over Task in the AsyncMethodBuilders by moving the implementations to static helper members on AsyncMethodBuilderCore.\r\n\r\nShrink `AsyncValueTaskMethodBuilder` to a single pointer size.\r\n\r\nRemove `bool _useBuilder` field from `AsyncValueTaskMethodBuilder<TResult>` as we can check if `m_task` is set instead.\r\n\r\n/cc @stephentoub "},{"Id":"9644292315","Type":"PullRequestEvent","CreatedAt":"2019-05-17T04:30:07","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24625","RelatedDescription":"Opened pull request \"Stop compiling fragile NGen support into the runtime\" (#24625) at dotnet/coreclr","RelatedBody":""},{"Id":"9644115872","Type":"IssuesEvent","CreatedAt":"2019-05-17T03:34:25","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24564","RelatedDescription":"Closed issue \"Debug.Fail is crashing the application in linux\" (#24564) at dotnet/coreclr","RelatedBody":"```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.203\r\n Commit:    e5bab63eca\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.203/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.4\r\n  Commit:  f95848e524\r\n\r\n.NET Core SDKs installed:\r\n  2.2.203 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nI am running an application that is published in release mode. still the Debug.Fail() is getting hit and it causes the application exit right away, even though the Debug.Fail() is in a try-catch module but it causes the application to exit immediately. even though the application is published and environment set to production and configuration is released still the problem exists, I saw the same error back to 2016-2018, but look like it's still not fixed \r\n\r\n\r\n```\r\npublic static IWebHost SeedConfigData(this IWebHost host)\r\n        {\r\n            using (var scope = host.Services.CreateScope())\r\n            {\r\n                var serviceProvider = scope.ServiceProvider;\r\n\r\n                try\r\n                {\r\n                    Task.Run(async () =>\r\n                    {\r\n                        var dataseed = serviceProvider.GetService<DbSeederConfigData>();\r\n                        await dataseed.ApplySeeds();\r\n                    }).Wait();\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    Debug.Fail(e.Message, e.StackTrace);\r\n                    var logger = serviceProvider.GetRequiredService<ILogger<DbSeederConfigData>>();\r\n                    logger.LogError(e, \"An error occurred seeding the DB.\");\r\n                }\r\n            }\r\n            return host;\r\n        }\r\n```"},{"Id":"9644105632","Type":"PullRequestEvent","CreatedAt":"2019-05-17T03:31:20","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24624","RelatedDescription":"Opened pull request \"Delete unnecessary locale arguments\" (#24624) at dotnet/coreclr","RelatedBody":"Everything in the runtime should use Invariant culture. It is not necessary to pass the locale arguments around."},{"Id":"9644077631","Type":"PullRequestEvent","CreatedAt":"2019-05-17T03:23:05","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24597","RelatedDescription":"Merged pull request \"Add support for invariant casing in PAL\" (#24597) at dotnet/coreclr","RelatedBody":"unicodedata.cpp based on UnicodeData.txt v11.0.\r\n\r\nFixes #20616."},{"Id":"9644077618","Type":"IssuesEvent","CreatedAt":"2019-05-17T03:23:05","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20616","RelatedDescription":"Closed issue \"System.OutOfMemoryException at System.Type.GetType when assembly contains interface with non-ascii letter in name\" (#20616) at dotnet/coreclr","RelatedBody":"Hello.\r\nI encountered an interesting behavior in the .net core on CentOs.\r\n\r\nIf my assembly contains any interface with a cyrillic letter in name, System.Type.GetType throwns OutOfMemoryException for any types from this assembly. \r\nMoreover, under Windows everything works without errors.  And under CentOs an error occurs.\r\n\r\nCode:\r\n```csharp\r\nusing System;\r\n\r\nnamespace UnicodeProblem\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            TryLoad($\"{nameof(UnicodeProblem)}.{nameof(IGoodClass)}, {nameof(UnicodeProblem)}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\");\r\n            TryLoad($\"{nameof(UnicodeProblem)}.{nameof(IBadСlass)}, {nameof(UnicodeProblem)}, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\");\r\n            Console.ReadKey();\r\n        }\r\n\r\n        static void TryLoad(string name)\r\n        {\r\n            Console.WriteLine();\r\n            Console.WriteLine(\"Try load '{0}'...\", name);\r\n            try\r\n            {\r\n                var type = Type.GetType(name, throwOnError: true, ignoreCase: true);\r\n                Console.WriteLine(\"Success for {0}\", type.AssemblyQualifiedName);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex);\r\n            }\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 'C' letter is cyrillic!\r\n    /// </summary>\r\n    interface IBadСlass\r\n    {\r\n        string Foo { get; set; }\r\n        string Bar { get; set; }\r\n    }\r\n\r\n    /// <summary>\r\n    /// No cyrillic letters!\r\n    /// </summary>\r\n    interface IGoodClass\r\n    {\r\n        string Foo { get; set; }\r\n        string Bar { get; set; }\r\n    }   \r\n}\r\n\r\n```\r\nMy csproj:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <RuntimeIdentifiers>win7-x64;win81-x64;linux-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nYou can see results below.\r\n\r\nFrom Windows:\r\n```bash\r\nTry load 'UnicodeProblem.IGoodClass, UnicodeProblem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'...\r\nSuccess for UnicodeProblem.IGoodClass, UnicodeProblem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\r\n\r\nTry load 'UnicodeProblem.IBadСlass, UnicodeProblem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'...\r\nSuccess for UnicodeProblem.IBadСlass, UnicodeProblem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\r\n```\r\n\r\nFrom CentOs:\r\n```bash\r\nTry load 'UnicodeProblem.IGoodClass, UnicodeProblem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'...\r\nSystem.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\r\n   at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMarkHandle stackMark, IntPtr pPrivHostBinder, Boolean loadTypeFromPartialName, ObjectHandleOnStack type, ObjectHandleOnStack keepalive)\r\n   at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean loadTypeFromPartialName)\r\n   at System.RuntimeType.GetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)\r\n   at System.Type.GetType(String typeName, Boolean throwOnError, Boolean ignoreCase)\r\n   at UnicodeProblem.Program.TryLoad(String name) in E:\\github\\UnicodeProblem\\UnicodeProblem\\Program.cs:line 21\r\n\r\nTry load 'UnicodeProblem.IBadСlass, UnicodeProblem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'...\r\nSystem.TypeLoadException: Could not load type 'UnicodeProblem.IBadСlass' from assembly 'UnicodeProblem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n   at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMarkHandle stackMark, IntPtr pPrivHostBinder, Boolean loadTypeFromPartialName, ObjectHandleOnStack type, ObjectHandleOnStack keepalive)\r\n   at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean loadTypeFromPartialName)\r\n   at System.RuntimeType.GetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)\r\n   at System.Type.GetType(String typeName, Boolean throwOnError, Boolean ignoreCase)\r\n   at UnicodeProblem.Program.TryLoad(String name) in E:\\github\\UnicodeProblem\\UnicodeProblem\\Program.cs:line 21\r\n```\r\n\r\nOf course, I'm not going to use Cyrillic characters in the names. But it is very interesting to me why OutOfMemoryException occurs exactly? \r\nWill this not lead to problems in other cases?"},{"Id":"9644053811","Type":"PullRequestEvent","CreatedAt":"2019-05-17T03:16:02","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24618","RelatedDescription":"Merged pull request \"Add runtime counter for TP work items produced\" (#24618) at dotnet/coreclr","RelatedBody":"Part of #20372. \r\n\r\nThis adds a runtime counter for threadpool completed work items."},{"Id":"9644050591","Type":"PullRequestEvent","CreatedAt":"2019-05-17T03:15:07","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24612","RelatedDescription":"Merged pull request \"Correcting documentation for span and memory slice\" (#24612) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/35063\r\n\r\nWe only throw exceptions when the end index of sliced\\AsSpan\\Ctor query is greater than length. when the index = length, we just return an empty span "},{"Id":"9644014902","Type":"PullRequestEvent","CreatedAt":"2019-05-17T03:04:00","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24613","RelatedDescription":"Merged pull request \"GCC compilation fixes\" (#24613) at dotnet/coreclr","RelatedBody":"@am11  @janvorli @jkotas "},{"Id":"9644011138","Type":"PullRequestEvent","CreatedAt":"2019-05-17T03:02:50","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24617","RelatedDescription":"Merged pull request \"Fix parameter names in ToUtf16\" (#24617) at dotnet/coreclr","RelatedBody":"Some parameter names in the `Utf8.ToUtf16` method are out of sync between the implementation and the reference assembly.\r\n\r\nhttps://github.com/dotnet/corefx/blob/02b383221ee03fed74968b7c68a45d626a761339/src/System.Runtime/ref/System.Runtime.cs#L7865-L7866\r\n\r\nThis PR addresses the issue by changing the implementation names to match the reference names."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9644190409","Type":"PullRequestEvent","CreatedAt":"2019-05-17T03:57:09","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11371","RelatedDescription":"Opened pull request \"Increase the time out\" (#11371) at dotnet/cli","RelatedBody":"A normal run could take 2000ms, since all tests run in parallel.\r\nIt is very likely to go over the existing limit due to not enough resource\r\n"},{"Id":"9643485434","Type":"PullRequestEvent","CreatedAt":"2019-05-17T00:24:52","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11370","RelatedDescription":"Opened pull request \"Remove stale, unused xlf files\" (#11370) at dotnet/cli","RelatedBody":"There were ancient \"neutral\" xlf files with no language, and some left over from a rename of LocalizableStrings to CommonLocalizableStrings.\r\n"},{"Id":"9643406543","Type":"PullRequestEvent","CreatedAt":"2019-05-17T00:01:30","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11369","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#11369) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9643318022","Type":"IssuesEvent","CreatedAt":"2019-05-16T23:35:28","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10664","RelatedDescription":"Closed issue \"dotnet-install.sh and dotnet-install.ps1 do not work as advertised with respect to printing a repeatable command line (`-DryRun`)\" (#10664) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nNote: Assumes the presence presence of [`dotnet-script.ps1`](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.ps1) (Windows) and [`dotnet-script.sh`](https://github.com/dotnet/cli/blob/master/scripts/obtain/dotnet-install.sh) (Unix) in the current dir.\r\n\r\nOn Unix:\r\n\r\n```sh\r\n./dotnet-install.sh -dryrun -runtime dotnet\r\n```\r\n\r\nOn Windows:\r\n\r\n```powershell\r\n./dotnet-install.ps1 -dryrun -runtime dotnet\r\n```\r\n\r\n## Expected  behavior\r\n\r\nBoth platforms (except for the filename extension):\r\n\r\n```none\r\ndotnet-install: Repeatable invocation: ./dotnet-install.ps1 -Runtime dotnet -Version 2.1.7\r\n```\r\n\r\nThat is:\r\n\r\n* The implied `latest` `-Version` should be reflected in an _explicit, resolved_ `-Version` argument.\r\n\r\n* All explicitly specified parameters should appear, except for `-dryrun`, with `-Version` _resolved_, if an _abstract_ value such as `latest` or `coherent` was specified.\r\n\r\n* Aside from `-Version`, no _omitted_ parameters should appear.\r\n\r\n## Actual behavior\r\n\r\nUnix:\r\n\r\n```none\r\n# ...\r\ndotnet-install: Repeatable invocation: ./dotnet-install.sh --version 2.1.7 --channel LTS --install-dir <auto>\r\n```\r\n\r\nThat is:\r\n\r\n* the `-runtime` argument is lost.\r\n\r\n* parameters that were at their default are now needlessly hard-coded; as an side `<auto>` used _unquoted_ will break the invocation.\r\n\r\nWindows:\r\n\r\n```none\r\n#...\r\ndotnet-install: Repeatable invocation: .\\.\\dotnet-install.ps1 -dryrun -runtime dotnet\r\n```\r\n\r\nThat is:\r\n\r\n* the `.\\` is unexpectedly doubled (because the script blindly prepends `.\\`\r\n\r\n* otherwise, the input command line is blindly echoed, which means that:\r\n  * `-dryrun` is needlessly present\r\n  * no version resolution is performed.\r\n\r\n## Environment data\r\n\r\nUsing the aforementioned scripts directly from this repo's master branch, as of 27 Jan 2019.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9641056177","Type":"IssuesEvent","CreatedAt":"2019-05-16T16:54:35","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1063","RelatedDescription":"Closed issue \"Create shims for new netstandard2.1 assemblies\" (#1063) at dotnet/standard","RelatedBody":"We need to create Shims for the assemblies added to netstandard2.1 that weren't in netstandard2.0 - This means (as far as I know):\r\n\r\n- System.Memory\r\n- System.Threading.Tasks.Extensions\r\n- System.Reflection.DispatchProxy\r\n- System.Reflection.Emit\r\n- System.Reflection.Emit.ILGeneration\r\n- System.Reflection.Emit.Lightweight\r\n- System.Numerics.Vectors\r\n- System.Buffers\r\n\r\nCC @ericstj @terrajobst "},{"Id":"9638059184","Type":"IssuesEvent","CreatedAt":"2019-05-16T10:11:59","Actor":"KexyBiscuit","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1194","RelatedDescription":"Opened issue \"ValueTask<> is missing in latest NetStandard?\" (#1194) at dotnet/standard","RelatedBody":"```\r\nerror CS0012: The type 'ValueTask<>' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nMight be related to #1180?\r\n\r\n```\r\n<TargetFramework>netstandard2.1</TargetFramework><NetStandardImplicitPackageVersion>2.1.0-prerelease.19265.2</NetStandardImplicitPackageVersion>\r\n```"},{"Id":"9634515322","Type":"PullRequestEvent","CreatedAt":"2019-05-15T21:27:48","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1183","RelatedDescription":"Merged pull request \"Seal types that cannot be inherited\" (#1183) at dotnet/standard","RelatedBody":"These changes are related to #1176 and address the same problem.\r\n\r\nFixes #1171."},{"Id":"9634515310","Type":"IssuesEvent","CreatedAt":"2019-05-15T21:27:48","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1171","RelatedDescription":"Closed issue \"BaseNumberConverter should be effectively sealed\" (#1171) at dotnet/standard","RelatedBody":"See https://github.com/dotnet/corefx/pull/37278\r\n\r\nBaseNumberConverter shouldn't be derivable.  On desktop it's a compile error.  Since netstandard.dll doesn't include internal members it permits compile, but fails at runtime for most frameworks since internal abstract members are not overridden.\r\n\r\n/cc @Anipik "},{"Id":"9634003544","Type":"IssuesEvent","CreatedAt":"2019-05-15T20:07:06","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1193","RelatedDescription":"Opened issue \"Fix APICompat issues with netstandard2.0 System.Memory\" (#1193) at dotnet/standard","RelatedBody":"After adding a shim for `System.Memory` to netstandard2.1, we uncovered an incompatibility with netstandard2.0:\r\n\r\nhttps://github.com/dotnet/standard/blob/d3413ee9ec761bdf067114a498b9da3ebf0149df/src/apicompat/baselines/ApiCompatBaseline.netstandard2.0.txt#L72-L74\r\n\r\nIndeed, these members exist in CoreFx's ref, but are missing in Standard:  https://github.com/dotnet/corefx/blob/1f9b84a0804e868c7e0f37a3c10fbaf7c735ae14/src/System.Memory/ref/System.Memory.cs#L471\r\n\r\n@terrajobst we should add these missing members to the surface area for `netstandard2.1`"},{"Id":"9633720903","Type":"PullRequestEvent","CreatedAt":"2019-05-15T19:22:34","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1180","RelatedDescription":"Merged pull request \"Add shims to netstandard2.1 for types that used to have OOB packages\" (#1180) at dotnet/standard","RelatedBody":"Resolves https://github.com/dotnet/corefx/issues/36719 & https://github.com/dotnet/standard/issues/1063. These TypeForward files were generated with `GenApi`, using the `netstandard2.0` assets from the packages I added to `netstandard.depproj`. \r\n\r\nStill to do:\r\n- Add a DARC subscription from CoreFx -> Standard\r\n- Add a placeholder file for `netstandard2.1` to the `System.Reflection.Emit*` packages in CoreFx - will be done by https://github.com/dotnet/corefx/pull/37532\r\n\r\n@ericstj @terrajobst PTAL\r\n\r\nCC @bartonjs "},{"Id":"9630428879","Type":"PullRequestEvent","CreatedAt":"2019-05-15T12:04:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1192","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1192) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19264.13\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9644056309","Type":"IssuesEvent","CreatedAt":"2019-05-17T03:16:47","Actor":"windsOne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/37742","RelatedDescription":"Opened issue \"HttpWebRequest set host no need port;how can set\" (#37742) at dotnet/corefx","RelatedBody":"![image](https://user-images.githubusercontent.com/14890297/57900847-19cf7f80-7895-11e9-8adc-0874b208829a.png)\r\n![image](https://user-images.githubusercontent.com/14890297/57900860-26ec6e80-7895-11e9-8b9d-8503ca0e8791.png)\r\n\r\nWhat should I do to avoid the port being added?"},{"Id":"9644050581","Type":"IssuesEvent","CreatedAt":"2019-05-17T03:15:07","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/35063","RelatedDescription":"Closed issue \"Span<T>'s Slice method do not throw if Length property is supplied as start parameter\" (#35063) at dotnet/corefx","RelatedBody":"From [MS Docs page on Span\\<T\\>.Slice(int) method](https://docs.microsoft.com/en-us/dotnet/api/system.span-1.slice?view=netcore-2.2#System_Span_1_Slice_System_Int32_): `ArgumentOutOfRangeException` is thrown if `index`(probably `start`?) is less than zero or greater than or **equal** to Length.\r\n\r\nHowever, span.Slice(span.Length) does not seem to throw; The example code below executes with no problem.\r\n```cs\r\n\"asd\".ToCharArray().AsSpan().Slice(3)\r\n```\r\n\r\nIt appears to be an incorrect document rather than a problem with the implementation, as the [documentation for ReadOnlySpan\\<T\\>.Slice(int)](https://docs.microsoft.com/en-us/dotnet/api/system.readonlyspan-1.slice?view=netcore-2.2#System_ReadOnlySpan_1_Slice_System_Int32_) says that `ArgumentOutOfRangeException` is thrown if `start` is greater than the number of items in the read-only span.\r\n\r\nIs this behaviour expected? I also have found that XML documentations on these methods ([Span.Slice](https://github.com/dotnet/coreclr/blob/4dc930ea7b1aa429eb30f2ee0b460d5edf5a244f/src/System.Private.CoreLib/shared/System/Span.Fast.cs#L344), [ReadOnlySpan.Slice](https://github.com/dotnet/coreclr/blob/4dc930ea7b1aa429eb30f2ee0b460d5edf5a244f/src/System.Private.CoreLib/shared/System/ReadOnlySpan.Fast.cs#L265)) says so as well.\r\n\r\n```cs\r\n/// <exception cref=\"System.ArgumentOutOfRangeException\">\r\n/// Thrown when the specified <paramref name=\"start\"/> or end index is not in range (&lt;0 or &gt;=Length).\r\n/// </exception>\r\n```\r\n\r\n`<0 or >=Length` seems to imply that it should throw if I pass Length as the parameter."},{"Id":"9644014417","Type":"PullRequestEvent","CreatedAt":"2019-05-17T03:03:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/37741","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#37741) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9643996076","Type":"PullRequestEvent","CreatedAt":"2019-05-17T02:58:26","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35781","RelatedDescription":"Opened pull request \"Liveshare client rebase rebase\" (#35781) at dotnet/roslyn","RelatedBody":"Feature branch.\r\nCopy the client side handlers from liveshare to external access.\r\n\r\nNote that everything in the external access project is just a straight copy of the liveshare client side implementation, with very minor changes where necessary to get them working inside roslyn.  The client side will be removed as soon as possible (once the content type issue with liveshare and razor is resolved).  These have been working for over a year already.\r\n\r\nAlso made a couple fixes to goto def and code actions on the server side to fix issues with older liveshare implementations.\r\n\r\nTODO - Pull in fix for gotodef, find references once liveshare removes dependencies."},{"Id":"9643900034","Type":"PullRequestEvent","CreatedAt":"2019-05-17T02:30:14","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35751","RelatedDescription":"Merged pull request \"Merge release/dev16.1-vs-deps to release/dev16.2-preview1-vs-deps\" (#35751) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.1-vs-deps into release/dev16.2-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-vs-deps-to-release/dev16.2-preview1-vs-deps\ngit reset --hard upstream/release/dev16.2-preview1-vs-deps\ngit merge upstream/release/dev16.1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-vs-deps-to-release/dev16.2-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9643899639","Type":"PullRequestEvent","CreatedAt":"2019-05-17T02:30:08","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35778","RelatedDescription":"Merged pull request \"Merge master to features/lspSupport\" (#35778) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9643793769","Type":"PullRequestEvent","CreatedAt":"2019-05-17T02:00:10","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35754","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#35754) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9643580028","Type":"PullRequestEvent","CreatedAt":"2019-05-17T00:54:31","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35780","RelatedDescription":"Opened pull request \"Elide an emit optimization that produces bad code near a stackalloc.\" (#35780) at dotnet/roslyn","RelatedBody":"Fixes #35764\r\nAlso fix the type of a bound node (argument to a ctor) so it agrees with the corresponding parameter.\r\n\r\n@jcouv @jaredpar Should this be patched on some other branch?\r\n"},{"Id":"9643533497","Type":"PullRequestEvent","CreatedAt":"2019-05-17T00:39:33","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35779","RelatedDescription":"Opened pull request \"Go to base - adding to UI\" (#35779) at dotnet/roslyn","RelatedBody":"Fixes #20383\r\nAdds https://github.com/dotnet/roslyn/pull/35704 to the UI"},{"Id":"9643506786","Type":"PullRequestEvent","CreatedAt":"2019-05-17T00:31:09","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35704","RelatedDescription":"Merged pull request \"Go to base\" (#35704) at dotnet/roslyn","RelatedBody":"Implementation of #20383\r\n\r\nThere is a need for more PRs to add the feature to the context menu: one for Roslyn and another for VS. Will send them separately after merging this."},{"Id":"9643457742","Type":"PullRequestEvent","CreatedAt":"2019-05-17T00:16:25","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35777","RelatedDescription":"Closed pull request \"Merge release/dev16.2-preview1-vs-deps to master-vs-deps\" (#35777) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.2-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.2-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9643404296","Type":"PullRequestEvent","CreatedAt":"2019-05-17T00:00:54","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35778","RelatedDescription":"Opened pull request \"Merge master to features/lspSupport\" (#35778) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9644281658","Type":"PullRequestEvent","CreatedAt":"2019-05-17T04:26:35","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7430","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7430) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9644279463","Type":"PullRequestEvent","CreatedAt":"2019-05-17T04:25:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7429","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7429) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh"},{"Id":"9641449224","Type":"PullRequestEvent","CreatedAt":"2019-05-16T17:55:46","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7429","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7429) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9641244086","Type":"PullRequestEvent","CreatedAt":"2019-05-16T17:23:30","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7428","RelatedDescription":"Opened pull request \"CPAOT support for large version bubble, take #2\" (#7428) at dotnet/corert","RelatedBody":"As I haven't found out how to reopen my original PR after reverting it, I have prepared a new one. In the first commit I have pushed the original change rebased to the preparatory change moving CanInline\r\nto CompilationModuleGroup. In the second commit I added logic for clean separation of input assembly set from the version bubble assembly set.\r\n\r\nEarlier in CPAOT development, we used to use CompilationModuleGroup.ContainsType / ContainsMethodBody for checking whether a given typesystem element belongs to either of these sets. To facilitate the separation I have added two new methods on CompilationModuleGroup, VersionsWithType and VersionsWithMethodBody. I audited all calls to ContainsMethodBody & ContainsType in the CPAOT codebase and I modified those querying the version bubble to call VersionsWithType/MethodBody instead.\r\n\r\nThanks\r\n\r\nTomas\r\n"},{"Id":"9639632858","Type":"PullRequestEvent","CreatedAt":"2019-05-16T13:56:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7427","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7427) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks"},{"Id":"9636532985","Type":"PullRequestEvent","CreatedAt":"2019-05-16T06:19:06","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7427","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7427) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9634749090","Type":"PullRequestEvent","CreatedAt":"2019-05-15T22:10:40","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7426","RelatedDescription":"Merged pull request \"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets\" (#7426) at dotnet/corert","RelatedBody":"It is used by DumpNativeResources task in Microsoft.NETCore.Native.targets\r\n\r\nFixes #7425"},{"Id":"9634749068","Type":"IssuesEvent","CreatedAt":"2019-05-15T22:10:40","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7425","RelatedDescription":"Closed issue \"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"\" (#7425) at dotnet/corert","RelatedBody":"When I set `/p:NativeCompilationDuringPublish=false ` as described in [the documentation](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#disabling-native-compilation) and [recommended](https://github.com/dotnet/corert/issues/258#issuecomment-492331206), I get this error:\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r ubuntu.16.04-x64 -c Release /p:NativeCompilationDuringPublish=false\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-02/build/Microsoft.NETCore.Native.targets(301,45): error MSB4022: The result \"\" of evaluating the value \"$(IlcBuildTasksPath)\" of the \"AssemblyFile\" attribute in element <UsingTask> is not valid. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nAs a work-a-round I'm going to try a variation of [another way to disable the ILCompiler](https://github.com/dotnet/corert/issues/258#issuecomment-492331624)."},{"Id":"9632239965","Type":"PullRequestEvent","CreatedAt":"2019-05-15T15:46:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7426","RelatedDescription":"Opened pull request \"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets\" (#7426) at dotnet/corert","RelatedBody":"It is used by DumpNativeResources task in Microsoft.NETCore.Native.targets\r\n\r\nFixes #7425"},{"Id":"9632236174","Type":"PullRequestEvent","CreatedAt":"2019-05-15T15:45:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7424","RelatedDescription":"Merged pull request \"Update dependencies\" (#7424) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9643225507","Type":"PullRequestEvent","CreatedAt":"2019-05-16T23:10:13","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3237","RelatedDescription":"Merged pull request \"Update stage0\" (#3237) at dotnet/sdk","RelatedBody":""},{"Id":"9641559667","Type":"PullRequestEvent","CreatedAt":"2019-05-16T18:12:47","Actor":"zivkan","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3243","RelatedDescription":"Opened pull request \"Insert NuGet 5.2.0-preview2.6020 into master\" (#3243) at dotnet/sdk","RelatedBody":""},{"Id":"9641320499","Type":"PullRequestEvent","CreatedAt":"2019-05-16T17:35:38","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3242","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3242) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.1.8xx branch"},{"Id":"9641319942","Type":"PullRequestEvent","CreatedAt":"2019-05-16T17:35:33","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3241","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3241) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.2.4xx branch"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"445259720","IsPullRequest":true,"CreatedAt":"2019-05-17T04:30:07","Actor":"jkotas","Number":"24625","RawContent":null,"Title":"Stop compiling fragile NGen support into the runtime","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24625","RelatedDescription":"Open PR \"Stop compiling fragile NGen support into the runtime\" (#24625)"},{"Id":"445249029","IsPullRequest":true,"CreatedAt":"2019-05-17T03:31:20","Actor":"jkotas","Number":"24624","RawContent":null,"Title":"Delete unnecessary locale arguments","State":"open","Body":"Everything in the runtime should use Invariant culture. It is not necessary to pass the locale arguments around.","Url":"https://github.com/dotnet/coreclr/pull/24624","RelatedDescription":"Open PR \"Delete unnecessary locale arguments\" (#24624)"},{"Id":"444705501","IsPullRequest":true,"CreatedAt":"2019-05-17T03:23:05","Actor":"MichalStrehovsky","Number":"24597","RawContent":null,"Title":"Add support for invariant casing in PAL","State":"closed","Body":"unicodedata.cpp based on UnicodeData.txt v11.0.\r\n\r\nFixes #20616.","Url":"https://github.com/dotnet/coreclr/pull/24597","RelatedDescription":"Closed or merged PR \"Add support for invariant casing in PAL\" (#24597)"},{"Id":"445163254","IsPullRequest":true,"CreatedAt":"2019-05-17T03:16:02","Actor":"sywhang","Number":"24618","RawContent":null,"Title":"Add runtime counter for TP work items produced","State":"closed","Body":"Part of #20372. \r\n\r\nThis adds a runtime counter for threadpool completed work items.","Url":"https://github.com/dotnet/coreclr/pull/24618","RelatedDescription":"Closed or merged PR \"Add runtime counter for TP work items produced\" (#24618)"},{"Id":"445091437","IsPullRequest":true,"CreatedAt":"2019-05-17T03:15:06","Actor":"Anipik","Number":"24612","RawContent":null,"Title":"Correcting documentation for span and memory slice","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/35063\r\n\r\nWe only throw exceptions when the end index of sliced\\AsSpan\\Ctor query is greater than length. when the index = length, we just return an empty span ","Url":"https://github.com/dotnet/coreclr/pull/24612","RelatedDescription":"Closed or merged PR \"Correcting documentation for span and memory slice\" (#24612)"},{"Id":"445100613","IsPullRequest":true,"CreatedAt":"2019-05-17T03:03:59","Actor":"franksinankaya","Number":"24613","RawContent":null,"Title":"GCC compilation fixes","State":"closed","Body":"@am11  @janvorli @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/24613","RelatedDescription":"Closed or merged PR \"GCC compilation fixes\" (#24613)"},{"Id":"445152172","IsPullRequest":true,"CreatedAt":"2019-05-17T03:02:49","Actor":"GrabYourPitchforks","Number":"24617","RawContent":null,"Title":"Fix parameter names in ToUtf16","State":"closed","Body":"Some parameter names in the `Utf8.ToUtf16` method are out of sync between the implementation and the reference assembly.\r\n\r\nhttps://github.com/dotnet/corefx/blob/02b383221ee03fed74968b7c68a45d626a761339/src/System.Runtime/ref/System.Runtime.cs#L7865-L7866\r\n\r\nThis PR addresses the issue by changing the implementation names to match the reference names.","Url":"https://github.com/dotnet/coreclr/pull/24617","RelatedDescription":"Closed or merged PR \"Fix parameter names in ToUtf16\" (#24617)"},{"Id":"445220115","IsPullRequest":true,"CreatedAt":"2019-05-17T01:05:24","Actor":"mikem8361","Number":"24623","RawContent":null,"Title":"Fix createdump on alpine. The heap pages are not include.","State":"open","Body":"Issue: https://github.com/dotnet/coreclr/issues/24599\r\n\r\nChange the check to add the \"heap\" memory regions from /proc/<pid>/maps from exactly RW to if any RWX bits are set.","Url":"https://github.com/dotnet/coreclr/pull/24623","RelatedDescription":"Open PR \"Fix createdump on alpine. The heap pages are not include.\" (#24623)"},{"Id":"445189800","IsPullRequest":false,"CreatedAt":"2019-05-16T22:42:52","Actor":"sharwell","Number":"24622","RawContent":null,"Title":"SemaphoreSlim.WaitAsync(CancellationToken) allocates an unnecessary CancellationTokenSource","State":"open","Body":"`SemaphoreSlim.WaitAsync(CancellationToken)` chains to `SemaphoreSlim.WaitAsync(int, CancellationToken)` and always uses `Timeout.Infinite`.\r\n\r\nhttps://github.com/dotnet/coreclr/blob/b4c2b142c700e8ec58783138aca2340ac05b24d5/src/System.Private.CoreLib/shared/System/Threading/SemaphoreSlim.cs#L507-L510\r\n\r\nThe callee eventually calls `WaitUntilCountOrTimeoutAsync`, where a `CancellationTokenSource` is used to support the combination of a timeout and the cancellation token:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/b4c2b142c700e8ec58783138aca2340ac05b24d5/src/System.Private.CoreLib/shared/System/Threading/SemaphoreSlim.cs#L719-L729\r\n\r\nFor the specific case of `Timeout.Infinite`, the `CancellationTokenSource` is unnecessary, and the method could be written to avoid this allocation.\r\n\r\n:link: This was observed while reviewing https://developercommunity.visualstudio.com/content/problem/569307/roslyncodeanalysisservice32-is-topped-out-at-3gb-m.html, but did not play a substantial role in the final outcome.","Url":"https://github.com/dotnet/coreclr/issues/24622","RelatedDescription":"Open issue \"SemaphoreSlim.WaitAsync(CancellationToken) allocates an unnecessary CancellationTokenSource\" (#24622)"},{"Id":"445186832","IsPullRequest":true,"CreatedAt":"2019-05-16T22:31:05","Actor":"fadimounir","Number":"24621","RawContent":null,"Title":"Changes to make inlined pinvoke codegen look more like the fragile NI codegen, for better performance.","State":"open","Body":"These changes are *only* for System.Private.CoreLib, and any other assembly within the same bubble. The assumption here is that assemblies in this bubble will always ship alongside a CoreCLR runtime, so it's ok to have fragile NI codegen for these scenarios since we'll always have compatible runtime bits.\r\n\r\n- Added a JIT interface method to check if two modules are in the same bubble (mostly plumbing to reach the algorithm in jitinterface.cpp)\r\n- Minor fixes to R2RDump, and adding support for new fixup types.\r\n","Url":"https://github.com/dotnet/coreclr/pull/24621","RelatedDescription":"Open PR \"Changes to make inlined pinvoke codegen look more like the fragile NI codegen, for better performance.\" (#24621)"},{"Id":"445174849","IsPullRequest":true,"CreatedAt":"2019-05-16T21:49:15","Actor":"sandreenko","Number":"24620","RawContent":null,"Title":"add ReadyToRun ADO extra testing.","State":"open","Body":"Contributes to #24358.\r\n\r\nWIll be run each Saturday and Sunday.","Url":"https://github.com/dotnet/coreclr/pull/24620","RelatedDescription":"Open PR \"add ReadyToRun ADO extra testing.\" (#24620)"},{"Id":"445166305","IsPullRequest":true,"CreatedAt":"2019-05-16T21:23:19","Actor":"elinor-fung","Number":"24619","RawContent":null,"Title":"[WIP] Switch NuGet package build to use Arcade instead of BuildTools","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24619","RelatedDescription":"Open PR \"[WIP] Switch NuGet package build to use Arcade instead of BuildTools\" (#24619)"},{"Id":"445130621","IsPullRequest":true,"CreatedAt":"2019-05-16T19:51:11","Actor":"BruceForstall","Number":"24616","RawContent":null,"Title":"Remove Jenkins BUILD_URL environment variable","State":"open","Body":"If AzDO provides an equivalent functionality, we could convert to\r\nuse that instead of simply removing this reference.","Url":"https://github.com/dotnet/coreclr/pull/24616","RelatedDescription":"Open PR \"Remove Jenkins BUILD_URL environment variable\" (#24616)"},{"Id":"445109437","IsPullRequest":false,"CreatedAt":"2019-05-16T18:56:00","Actor":"VSadov","Number":"24615","RawContent":null,"Title":"Consider making `GC.GetTotalAllocatedBytes` monotonic","State":"open","Body":"The non-precise value may go backwards when threads die. That could be unexpected.\r\n\r\nPerhaps we should remember the high watermark of reported value and not go below that. Assuming that there will be more allocations that will soon take us above the watermark anyways. \r\n\r\nThat way we can both avoid systemic error of overreporting unspent bytes, and not puzzle users with decreasing results.","Url":"https://github.com/dotnet/coreclr/issues/24615","RelatedDescription":"Open issue \"Consider making `GC.GetTotalAllocatedBytes` monotonic\" (#24615)"},{"Id":"445018419","IsPullRequest":true,"CreatedAt":"2019-05-16T18:55:43","Actor":"MichalStrehovsky","Number":"24608","RawContent":null,"Title":"Delete iswxdigit test","State":"closed","Body":"Fixes #24601.","Url":"https://github.com/dotnet/coreclr/pull/24608","RelatedDescription":"Closed or merged PR \"Delete iswxdigit test\" (#24608)"},{"Id":"444714273","IsPullRequest":false,"CreatedAt":"2019-05-16T18:55:42","Actor":"VincentBu","Number":"24601","RawContent":null,"Title":"[x64] Test failed: c_runtime.iswxdigit.test1","State":"closed","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/checked_centos7.1/11033/\r\n\r\n**Failed tests:**\r\nc_runtime.iswxdigit.test1\r\n\r\n**Log:**\r\n```\r\nRunning tests...\r\n\r\nTesting for 64 Bit Platforms \r\nTesting for 64 Bit Platforms \r\niswxdigit failed to find 0xff10 to be a hex digit!\r\n\r\n\r\nFAILED: c_runtime/iswxdigit/test1/paltest_iswxdigit_test1. Exit code: 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24601","RelatedDescription":"Closed issue \"[x64] Test failed: c_runtime.iswxdigit.test1\" (#24601)"},{"Id":"445103052","IsPullRequest":true,"CreatedAt":"2019-05-16T18:39:49","Actor":"tarekgh","Number":"24614","RawContent":null,"Title":"Ensure using single Utc object in TimeZoneInfo","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/37173\r\n\r\nCurrently if calling GetSystemTimeZones, will return a list which in include Utc object created from the enumeration.  But when calling FindSystemTimeZoneById(\"UTC\") will return the cached Utc object which is different than the one returned from the enumeration. This in general could be not a problem but it is better to ensure returned the same object from both APIs. The reason is in our internal code, we use some reference equality for the perf reason. Ensure the usage of Utc object will make it more reliable.\r\n\r\nAlso the issue is reported on https://stackoverflow.com/questions/55845466/why-do-timezoneinfo-findsystemtimezonebyidutc-and-timezoneinfo-getsystemtime","Url":"https://github.com/dotnet/coreclr/pull/24614","RelatedDescription":"Open PR \"Ensure using single Utc object in TimeZoneInfo\" (#24614)"},{"Id":"444930685","IsPullRequest":true,"CreatedAt":"2019-05-16T17:09:31","Actor":"dotnet-maestro[bot]","Number":"24605","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190515.11\r\n- **Date Produced**: 5/16/2019 7:07 AM\r\n- **Commit**: d2d36e7b1e0081effa2bb220fb88238392fdc389\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27715-11\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#24605)"},{"Id":"445059299","IsPullRequest":true,"CreatedAt":"2019-05-16T16:49:47","Actor":"janvorli","Number":"24611","RawContent":null,"Title":"Add regression test for #24524","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24611","RelatedDescription":"Open PR \"Add regression test for #24524\" (#24611)"},{"Id":"445058712","IsPullRequest":true,"CreatedAt":"2019-05-16T16:48:26","Actor":"stephentoub","Number":"24610","RawContent":null,"Title":"Implement AppDomain.Monitoring*MemorySize","State":"open","Body":"Tools like Benchmark.NET use this API to get total allocated memory.  Any reason not to make it work by just calling GC.GetTotalAllocatedBytes?\r\n\r\ncc: @jkotas, @Maoni0, @VSadov, @luhenry ","Url":"https://github.com/dotnet/coreclr/pull/24610","RelatedDescription":"Open PR \"Implement AppDomain.Monitoring*MemorySize\" (#24610)"},{"Id":"444717468","IsPullRequest":false,"CreatedAt":"2019-05-16T16:38:09","Actor":"VincentBu","Number":"24602","RawContent":null,"Title":"[x64] Test failed: MonoTests.System.Configuration.ConfigurationManagerTest.OpenExeConfiguration1_UserLevel_PerUserRoamingAndLocal","State":"closed","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_windows_nt_corefx_jitstressregs3/846/\r\n\r\n**Failed tests:**\r\nMonoTests.System.Configuration.ConfigurationManagerTest.OpenExeConfiguration1_UserLevel_PerUserRoamingAndLocal\r\n\r\n**Log:**\r\n```\r\nMonoTests.System.Configuration.ConfigurationManagerTest.OpenExeConfiguration1_UserLevel_PerUserRoamingAndLocal [FAIL]\r\n        System.Configuration.ConfigurationErrorsException : An error occurred loading a configuration file: The process cannot access the file 'C:\\Users\\dotnet-bot\\AppData\\Local\\Microsoft_Corporation\\xunit.console_StrongName_vmuqnj1rm2vzmtjlxpznjgrpuvgx0hav\\2.5.1.0\\user.config' because it is being used by another process. (C:\\Users\\dotnet-bot\\AppData\\Local\\Microsoft_Corporation\\xunit.console_StrongName_vmuqnj1rm2vzmtjlxpznjgrpuvgx0hav\\2.5.1.0\\user.config)\r\n        ---- System.IO.IOException : The process cannot access the file 'C:\\Users\\dotnet-bot\\AppData\\Local\\Microsoft_Corporation\\xunit.console_StrongName_vmuqnj1rm2vzmtjlxpznjgrpuvgx0hav\\2.5.1.0\\user.config' because it is being used by another process.\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ConfigurationSchemaErrors.cs(76,0): at System.Configuration.ConfigurationSchemaErrors.ThrowIfErrors(Boolean ignoreLocal)\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\BaseConfigurationRecord.cs(3660,0): at System.Configuration.BaseConfigurationRecord.ThrowIfParseErrors(ConfigurationSchemaErrors schemaErrors)\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\Configuration.cs(77,0): at System.Configuration.Configuration..ctor(String locationSubPath, Type typeConfigHost, Object[] hostInitConfigurationParams)\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ClientConfigurationHost.cs(489,0): at System.Configuration.ClientConfigurationHost.OpenExeConfiguration(ConfigurationFileMap fileMap, Boolean isMachine, ConfigurationUserLevel userLevel, String exePath)\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ConfigurationManager.cs(221,0): at System.Configuration.ConfigurationManager.OpenExeConfigurationImpl(ConfigurationFileMap fileMap, Boolean isMachine, ConfigurationUserLevel userLevel, String exePath, Boolean preLoad)\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\tests\\Mono\\ConfigurationManagerTest.cs(74,0): at MonoTests.System.Configuration.ConfigurationManagerTest.OpenExeConfiguration1_UserLevel_PerUserRoamingAndLocal()\r\n          ----- Inner Stack Trace -----\r\n             at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)\r\n             at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n             at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\Internal\\InternalConfigHost.cs(228,0): at System.Configuration.Internal.InternalConfigHost.StaticOpenStreamForRead(String streamName)\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ImplicitMachineConfigHost.cs(64,0): at System.Configuration.ImplicitMachineConfigHost.OpenStreamForRead(String streamName)\r\n          D:\\j\\workspace\\x64_checked_w---c4f69af3\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\BaseConfigurationRecord.cs(552,0): at System.Configuration.BaseConfigurationRecord.InitConfigFromFile()\r\n    Finished:    System.Configuration.ConfigurationManager.Tests\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.Configuration.ConfigurationManager.Tests  Total: 632, Errors: 0, Failed: 1, Skipped: 0, Time: 10.744s\r\n exit code 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24602","RelatedDescription":"Closed issue \"[x64] Test failed: MonoTests.System.Configuration.ConfigurationManagerTest.OpenExeConfiguration1_UserLevel_PerUserRoamingAndLocal\" (#24602)"},{"Id":"445049509","IsPullRequest":true,"CreatedAt":"2019-05-16T16:26:27","Actor":"janvorli","Number":"24609","RawContent":null,"Title":"Propagate module override recursively in generic signatures","State":"open","Body":"Signatures of generic types that contain multiple levels of generics\r\ncurrently apply module override only on the level where it was defined.\r\nThis complicates cases when we copy a signature as-is from one module\r\nand want to apply module override to it since we store it in another\r\nmodule. We would need to parse the whole signature and insert overrides\r\nat all levels.\r\nThis change modifies runtime so that the module override is propagated\r\nrecursively through a generic signature hierarchy. A related change\r\nwas necessary on the crossgen side.\r\n\r\nIt fixes failure in IEnumerable_Generic_Enumerator_Reset_ModifiedDuringEnumeration_ThrowsInvalidOperationException corefx test when crossgen-ed with large version bubble enabled.","Url":"https://github.com/dotnet/coreclr/pull/24609","RelatedDescription":"Open PR \"Propagate module override recursively in generic signatures\" (#24609)"},{"Id":"445017122","IsPullRequest":true,"CreatedAt":"2019-05-16T15:20:07","Actor":"kouvel","Number":"24607","RawContent":null,"Title":"Add some perf events/data for tiered compilation","State":"open","Body":"New events:\r\n- `Settings` - Sent when TC is enabled\r\n  - `Flags` - Currently indicates whether QuickJit and QuickJitForLoops are enabled\r\n- `Pause` - Sent when TC is paused (due to a new method being called for the first time)\r\n- `Resume` - Sent when TC resumes\r\n  - `NewMethodCount` - Number of methods called for the first time while tiering was paused\r\n- `BackgroundJitStart` - Sent when starting to JIT methods in the background\r\n  - `PendingMethodCount` - Number of methods currently scheduled for background JIT\r\n- `BackgroundJitStop` - Sent when background jitting stops\r\n  - `PendingMethodCount` - Same as above. When 0, background jitting has completed.\r\n  - `JittedMethodCount` - Number of methods jitted in the background since the previous `BackgroundJitStart` event on the same thread\r\n\r\nMiscellaneous:\r\n- Updated method JIT events to include the optimization tier\r\n- Added a couple more cases where tiered compilation is disabled for methods that have JIT optimization disabled for some reason\r\n- Renamed `Duration` field of the new version of the `ContentionEnd` to `DurationNs` to indicate the units of time\r\n\r\nPerfView PR: https://github.com/microsoft/perfview/pull/939\r\nPerfCollect PR: https://github.com/dotnet/corefx-tools/pull/103\r\nFixes https://github.com/dotnet/coreclr/issues/23221","Url":"https://github.com/dotnet/coreclr/pull/24607","RelatedDescription":"Open PR \"Add some perf events/data for tiered compilation\" (#24607)"},{"Id":"444702385","IsPullRequest":true,"CreatedAt":"2019-05-16T14:19:31","Actor":"fadimounir","Number":"24596","RawContent":null,"Title":"Suppress crossgen warnings on failures to load types/methods from IBC data","State":"closed","Body":"It's not unusual to see these types of warnings with incremental IBC.\r\nThese warnings will move under the crossgen verbose mode.\r\n\r\nSuppresses warnings reported in #24566","Url":"https://github.com/dotnet/coreclr/pull/24596","RelatedDescription":"Closed or merged PR \"Suppress crossgen warnings on failures to load types/methods from IBC data\" (#24596)"},{"Id":"444928706","IsPullRequest":true,"CreatedAt":"2019-05-16T12:31:59","Actor":"dotnet-maestro[bot]","Number":"24604","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190515.6\r\n- **Date Produced**: 5/16/2019 8:58 AM\r\n- **Commit**: fb97a8b5043dc4f92e437e3b21fb33e7493f1b3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Bcl.AsyncInterfaces** -> 1.0.0-preview6.19265.6\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19265.6\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview6.19265.6\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24604","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/corefx\" (#24604)"},{"Id":"444724215","IsPullRequest":true,"CreatedAt":"2019-05-16T02:25:34","Actor":"echesakovMSFT","Number":"24603","RawContent":null,"Title":"Revert \"Unconditionally capture output of xUnit tests\"","State":"closed","Body":"Reverts dotnet/coreclr#24554\r\n\r\nxUnit fails with \r\n```\r\nC:\\dotnetbuild\\work\\8fdbecbd-d5a8-4db7-a6bd-5682a705719a\\Work\\c79ddab0-4d69-49b9-a642-a2968a5fa756\\Exec>C:\\dotnetbuild\\work\\8fdbecbd-d5a8-4db7-a6bd-5682a705719a\\Payload\\CoreRun.exe C:\\dotnetbuild\\work\\8fdbecbd-d5a8-4db7-a6bd-5682a705719a\\Payload\\xunit.console.dll JIT\\Regression\\JIT.Regression.XUnitWrapper.dll -parallel collections -nocolor -noshadow -xml testResults.xml -trait TestGroup=JIT.Regression.CLR-x86-JIT.V1-M09-M11 \r\n\r\nMicrosoft.DotNet.XUnitConsoleRunner v2.5.0 (32-bit .NET Core 3.0.0-dev.19266.1)\r\n  Discovering: JIT.Regression.XUnitWrapper\r\n  Discovered:  JIT.Regression.XUnitWrapper\r\n  Starting:    JIT.Regression.XUnitWrapper\r\n  Finished:    JIT.Regression.XUnitWrapper\r\n=== TEST EXECUTION SUMMARY ===\r\n   JIT.Regression.XUnitWrapper  Total: 410, Errors: 0, Failed: 0, Skipped: 0, Time: 453.873s\r\n\r\nerror: '\r\n', hexadecimal value 0x0B, is an invalid character\r\n```","Url":"https://github.com/dotnet/coreclr/pull/24603","RelatedDescription":"Closed or merged PR \"Revert \"Unconditionally capture output of xUnit tests\"\" (#24603)"},{"Id":"444711177","IsPullRequest":true,"CreatedAt":"2019-05-16T01:21:11","Actor":"sandreenko","Number":"24600","RawContent":null,"Title":"[WIP] Delete returntype","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24600","RelatedDescription":"Open PR \"[WIP] Delete returntype\" (#24600)"},{"Id":"444709477","IsPullRequest":false,"CreatedAt":"2019-05-16T01:12:35","Actor":"mikem8361","Number":"24599","RawContent":null,"Title":"createdump on alpine Linux doesn't generate correct dump","State":"open","Body":"Seems to be missing some of the GC heap data/info even for with heap type dumps.","Url":"https://github.com/dotnet/coreclr/issues/24599","RelatedDescription":"Open issue \"createdump on alpine Linux doesn't generate correct dump\" (#24599)"},{"Id":"444707021","IsPullRequest":true,"CreatedAt":"2019-05-16T00:58:54","Actor":"sywhang","Number":"24598","RawContent":null,"Title":"Remove undefined reference to GetCurrentProcessId and DebugBreak in PAL ASSERTE","State":"open","Body":"Fixes what caused https://github.com/dotnet/coreclr/issues/20833. In the debug string that we were using inside PAL _ASSERTE, we were trying to call DebugBreak and GetCurrentProcessId which aren't defined in non-Windows environments. ","Url":"https://github.com/dotnet/coreclr/pull/24598","RelatedDescription":"Open PR \"Remove undefined reference to GetCurrentProcessId and DebugBreak in PAL ASSERTE\" (#24598)"},{"Id":"444684418","IsPullRequest":true,"CreatedAt":"2019-05-15T23:10:54","Actor":"dotnet-maestro-bot","Number":"24595","RawContent":null,"Title":"Update BuildTools to preview1-04015-03 (release/2.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/24595","RelatedDescription":"Open PR \"Update BuildTools to preview1-04015-03 (release/2.2)\" (#24595)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"445253878","IsPullRequest":true,"CreatedAt":"2019-05-17T03:57:09","Actor":"wli3","Number":"11371","RawContent":null,"Title":"Increase the time out","State":"open","Body":"A normal run could take 2000ms, since all tests run in parallel.\r\nIt is very likely to go over the existing limit due to not enough resource\r\n","Url":"https://github.com/dotnet/cli/pull/11371","RelatedDescription":"Open PR \"Increase the time out\" (#11371)"},{"Id":"445212455","IsPullRequest":true,"CreatedAt":"2019-05-17T00:24:51","Actor":"nguerrera","Number":"11370","RawContent":null,"Title":"Remove stale, unused xlf files","State":"open","Body":"There were ancient \"neutral\" xlf files with no language, and some left over from a rename of LocalizableStrings to CommonLocalizableStrings.\r\n","Url":"https://github.com/dotnet/cli/pull/11370","RelatedDescription":"Open PR \"Remove stale, unused xlf files\" (#11370)"},{"Id":"445207601","IsPullRequest":true,"CreatedAt":"2019-05-17T00:01:29","Actor":"dotnet-bot","Number":"11369","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11369","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11369)"},{"Id":"444717144","IsPullRequest":true,"CreatedAt":"2019-05-16T23:35:09","Actor":"johnbeisner","Number":"11359","RawContent":null,"Title":"Updates to the dotnet installation scripts.","State":"closed","Body":"Addresses:\r\nhttps://github.com/dotnet/cli/issues/10663\r\n\"-Runtime aspnetcore\" fails because the 'latest.version' file at blob storage is missing the commit sha.\r\nhttps://github.com/dotnet/cli/issues/10664\r\nWe should be printing an accurate and usable \"repeatable command\".\r\n\r\nTrivial:\r\nMirroring some of the non-similar output; mirroring some comments.","Url":"https://github.com/dotnet/cli/pull/11359","RelatedDescription":"Closed or merged PR \"Updates to the dotnet installation scripts.\" (#11359)"},{"Id":"445195589","IsPullRequest":true,"CreatedAt":"2019-05-16T23:07:19","Actor":"peterhuene","Number":"11368","RawContent":null,"Title":"Merge release/2.2.2xx to release/2.2.3xx","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11368","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/2.2.3xx\" (#11368)"},{"Id":"445193802","IsPullRequest":true,"CreatedAt":"2019-05-16T22:59:38","Actor":"peterhuene","Number":"11367","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.1.7xx","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11367","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.1.7xx\" (#11367)"},{"Id":"444692577","IsPullRequest":true,"CreatedAt":"2019-05-16T22:47:07","Actor":"dotnet-bot","Number":"11355","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11355","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11355)"},{"Id":"444692561","IsPullRequest":true,"CreatedAt":"2019-05-16T22:46:46","Actor":"dotnet-bot","Number":"11354","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11354","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#11354)"},{"Id":"445058069","IsPullRequest":true,"CreatedAt":"2019-05-16T18:30:57","Actor":"peterhuene","Number":"11362","RawContent":null,"Title":"Update Roslyn to 3.2.0-beta1-19266-05.","State":"closed","Body":"This commit updates Roslyn to `3.2.0-beta1-19266-05`.\r\n","Url":"https://github.com/dotnet/cli/pull/11362","RelatedDescription":"Closed or merged PR \"Update Roslyn to 3.2.0-beta1-19266-05.\" (#11362)"},{"Id":"445057265","IsPullRequest":true,"CreatedAt":"2019-05-16T18:30:53","Actor":"peterhuene","Number":"11361","RawContent":null,"Title":"Update Roslyn to 3.2.0-beta1-19266-05.","State":"closed","Body":"This commit updates Roslyn to `3.2.0-beta1-19266-05`.\r\n","Url":"https://github.com/dotnet/cli/pull/11361","RelatedDescription":"Closed or merged PR \"Update Roslyn to 3.2.0-beta1-19266-05.\" (#11361)"},{"Id":"445091867","IsPullRequest":true,"CreatedAt":"2019-05-16T18:11:23","Actor":"zivkan","Number":"11366","RawContent":null,"Title":"Insert NuGet 5.2.0-preview2.6020 into master","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11366","RelatedDescription":"Open PR \"Insert NuGet 5.2.0-preview2.6020 into master\" (#11366)"},{"Id":"445077527","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:43","Actor":"nugetlurker","Number":"11365","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into cli","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into cli release/2.1.8xx branch","Url":"https://github.com/dotnet/cli/pull/11365","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into cli\" (#11365)"},{"Id":"445077503","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:40","Actor":"nugetlurker","Number":"11364","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into cli","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into cli release/2.2.4xx branch","Url":"https://github.com/dotnet/cli/pull/11364","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into cli\" (#11364)"},{"Id":"445077082","IsPullRequest":true,"CreatedAt":"2019-05-16T17:34:36","Actor":"tdykstra","Number":"11363","RawContent":null,"Title":"Remove 'please' from message text","State":"open","Body":"Fixes #11336 :\r\n\r\n>Per the MS Style guide\r\n>\r\n>Avoid please except in situations where the customer is asked to do something inconvenient or the application or site is to blame for the situation.\r\n>\r\n>A search yields 864 lines with please. In almost every case, please should be removed.\r\n\r\ncc @Rick-Anderson @livarcocc @peterhuene ","Url":"https://github.com/dotnet/cli/pull/11363","RelatedDescription":"Open PR \"Remove 'please' from message text\" (#11363)"},{"Id":"444917460","IsPullRequest":true,"CreatedAt":"2019-05-16T16:34:45","Actor":"dotnet-maestro[bot]","Number":"11360","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190515.6\r\n- **Date Produced**: 5/16/2019 2:37 AM\r\n- **Commit**: 260d55d2a1b5fe6961b1b7454d8ebf971181b177\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19265.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11360","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11360)"},{"Id":"444710505","IsPullRequest":true,"CreatedAt":"2019-05-16T14:38:24","Actor":"peterhuene","Number":"11358","RawContent":null,"Title":"Merge release/2.2.3xx to release/2.2.4xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11358","RelatedDescription":"Closed or merged PR \"Merge release/2.2.3xx to release/2.2.4xx\" (#11358)"},{"Id":"444702817","IsPullRequest":true,"CreatedAt":"2019-05-16T03:57:53","Actor":"livarcocc","Number":"11357","RawContent":null,"Title":"Update Roslyn to 3.1.0-beta4-19265-02","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11357","RelatedDescription":"Closed or merged PR \"Update Roslyn to 3.1.0-beta4-19265-02\" (#11357)"},{"Id":"444702553","IsPullRequest":true,"CreatedAt":"2019-05-16T01:18:21","Actor":"livarcocc","Number":"11356","RawContent":null,"Title":"Update Roslyn to 3.1.0-beta4-19265-02","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11356","RelatedDescription":"Closed or merged PR \"Update Roslyn to 3.1.0-beta4-19265-02\" (#11356)"},{"Id":"444691112","IsPullRequest":true,"CreatedAt":"2019-05-16T01:13:44","Actor":"peterhuene","Number":"11352","RawContent":null,"Title":"Merge release/2.2.2xx to release/2.2.3xx","State":"closed","Body":"I missed the outstanding 2.1.6xx -> 2.2.2xx merge PR, so I need one more merge into 2.2.3xx.","Url":"https://github.com/dotnet/cli/pull/11352","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/2.2.3xx\" (#11352)"},{"Id":"444692541","IsPullRequest":true,"CreatedAt":"2019-05-16T01:11:20","Actor":"peterhuene","Number":"11353","RawContent":null,"Title":"Merge release/2.1.7xx to release/2.1.8xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11353","RelatedDescription":"Closed or merged PR \"Merge release/2.1.7xx to release/2.1.8xx\" (#11353)"},{"Id":"444619598","IsPullRequest":true,"CreatedAt":"2019-05-15T23:12:34","Actor":"peterhuene","Number":"11349","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.1.7xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11349","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.1.7xx\" (#11349)"},{"Id":"444621968","IsPullRequest":true,"CreatedAt":"2019-05-15T23:12:10","Actor":"peterhuene","Number":"11350","RawContent":null,"Title":"Merge release/2.2.2xx to release/2.2.3xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11350","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/2.2.3xx\" (#11350)"},{"Id":"444652194","IsPullRequest":false,"CreatedAt":"2019-05-15T21:25:04","Actor":"dsplaisted","Number":"11351","RawContent":null,"Title":"\"dotnet run\" for project targeting .NET Framework fails with unhelpful error on Linux","State":"open","Body":"Trying to `dotnet run` a project targeting .NET Framework fails with the following error on Linux (and probably Mac):\r\n\r\n```\r\nSystem.ComponentModel.Win32Exception (8): Exec format error\r\n   at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n```\r\n\r\nWe should fail with a more graceful error.","Url":"https://github.com/dotnet/cli/issues/11351","RelatedDescription":"Open issue \"\"dotnet run\" for project targeting .NET Framework fails with unhelpful error on Linux\" (#11351)"},{"Id":"444177516","IsPullRequest":true,"CreatedAt":"2019-05-15T21:01:25","Actor":"dotnet-bot","Number":"11344","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11344","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#11344)"},{"Id":"444556580","IsPullRequest":true,"CreatedAt":"2019-05-15T20:17:36","Actor":"wli3","Number":"11348","RawContent":null,"Title":"Update LocalOptionDescription","State":"closed","Body":"Fix https://github.com/dotnet/cli/issues/11306","Url":"https://github.com/dotnet/cli/pull/11348","RelatedDescription":"Closed or merged PR \"Update LocalOptionDescription\" (#11348)"},{"Id":"444399018","IsPullRequest":true,"CreatedAt":"2019-05-15T18:03:14","Actor":"dotnet-bot","Number":"11345","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11345","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11345)"},{"Id":"444404684","IsPullRequest":true,"CreatedAt":"2019-05-15T17:15:16","Actor":"dotnet-maestro[bot]","Number":"11347","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190514.1\r\n- **Date Produced**: 5/14/2019 12:43 PM\r\n- **Commit**: 5ec7cffdd20dc55fc5ff298ba9fd073c9b0296ac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19264.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11347","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11347)"},{"Id":"444126479","IsPullRequest":true,"CreatedAt":"2019-05-15T17:12:33","Actor":"dotnet-maestro-bot","Number":"11342","RawContent":null,"Title":"Update aspnet, coresetup to rtm-35537, 2.1.0, respectively (release/2.2.2xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11342","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to rtm-35537, 2.1.0, respectively (release/2.2.2xx)\" (#11342)"},{"Id":"444400992","IsPullRequest":true,"CreatedAt":"2019-05-15T13:02:17","Actor":"dotnet-maestro[bot]","Number":"11346","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190514.1\r\n- **Date Produced**: 5/14/2019 3:53 PM\r\n- **Commit**: 51ab900ef7b7f954e284347c913299711514101d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19264.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11346","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11346)"},{"Id":"444177493","IsPullRequest":true,"CreatedAt":"2019-05-15T04:53:26","Actor":"dotnet-bot","Number":"11343","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11343","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#11343)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"444869749","IsPullRequest":false,"CreatedAt":"2019-05-16T10:11:58","Actor":"KexyBiscuit","Number":"1194","RawContent":null,"Title":"Is ValueTask<> missing in latest NetStandard?","State":"open","Body":"```\r\nerror CS0012: The type 'ValueTask<>' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nMight be related to #1180?\r\n\r\n```\r\n> dotnet --version\r\n3.0.100-preview6-011910\r\n```\r\n\r\n```\r\n<TargetFramework>netstandard2.1</TargetFramework>\r\n<NetStandardImplicitPackageVersion>2.1.0-prerelease.19265.2</NetStandardImplicitPackageVersion>\r\n```","Url":"https://github.com/dotnet/standard/issues/1194","RelatedDescription":"Open issue \"Is ValueTask<> missing in latest NetStandard?\" (#1194)"},{"Id":"442461759","IsPullRequest":true,"CreatedAt":"2019-05-15T21:27:47","Actor":"terrajobst","Number":"1183","RawContent":null,"Title":"Seal types that cannot be inherited","State":"closed","Body":"These changes are related to #1176 and address the same problem.\r\n\r\nFixes #1171.","Url":"https://github.com/dotnet/standard/pull/1183","RelatedDescription":"Closed or merged PR \"Seal types that cannot be inherited\" (#1183)"},{"Id":"438892784","IsPullRequest":false,"CreatedAt":"2019-05-15T21:27:47","Actor":"ericstj","Number":"1171","RawContent":null,"Title":"BaseNumberConverter should be effectively sealed","State":"closed","Body":"See https://github.com/dotnet/corefx/pull/37278\r\n\r\nBaseNumberConverter shouldn't be derivable.  On desktop it's a compile error.  Since netstandard.dll doesn't include internal members it permits compile, but fails at runtime for most frameworks since internal abstract members are not overridden.\r\n\r\n/cc @Anipik ","Url":"https://github.com/dotnet/standard/issues/1171","RelatedDescription":"Closed issue \"BaseNumberConverter should be effectively sealed\" (#1171)"},{"Id":"444621714","IsPullRequest":false,"CreatedAt":"2019-05-15T20:07:05","Actor":"wtgodbe","Number":"1193","RawContent":null,"Title":"Fix APICompat issues with netstandard2.0 System.Memory","State":"open","Body":"After adding a shim for `System.Memory` to netstandard2.1, we uncovered an incompatibility with netstandard2.0:\r\n\r\nhttps://github.com/dotnet/standard/blob/d3413ee9ec761bdf067114a498b9da3ebf0149df/src/apicompat/baselines/ApiCompatBaseline.netstandard2.0.txt#L72-L74\r\n\r\nIndeed, these members exist in CoreFx's ref, but are missing in Standard:  https://github.com/dotnet/corefx/blob/1f9b84a0804e868c7e0f37a3c10fbaf7c735ae14/src/System.Memory/ref/System.Memory.cs#L471\r\n\r\n@terrajobst we should add these missing members to the surface area for `netstandard2.1`","Url":"https://github.com/dotnet/standard/issues/1193","RelatedDescription":"Open issue \"Fix APICompat issues with netstandard2.0 System.Memory\" (#1193)"},{"Id":"441943870","IsPullRequest":true,"CreatedAt":"2019-05-15T19:22:33","Actor":"wtgodbe","Number":"1180","RawContent":null,"Title":"Add shims to netstandard2.1 for types that used to have OOB packages","State":"closed","Body":"Resolves https://github.com/dotnet/corefx/issues/36719 & https://github.com/dotnet/standard/issues/1063. These TypeForward files were generated with `GenApi`, using the `netstandard2.0` assets from the packages I added to `netstandard.depproj`. \r\n\r\nStill to do:\r\n- Add a DARC subscription from CoreFx -> Standard\r\n- Add a placeholder file for `netstandard2.1` to the `System.Reflection.Emit*` packages in CoreFx - will be done by https://github.com/dotnet/corefx/pull/37532\r\n\r\n@ericstj @terrajobst PTAL\r\n\r\nCC @bartonjs ","Url":"https://github.com/dotnet/standard/pull/1180","RelatedDescription":"Closed or merged PR \"Add shims to netstandard2.1 for types that used to have OOB packages\" (#1180)"},{"Id":"444399962","IsPullRequest":true,"CreatedAt":"2019-05-15T12:04:11","Actor":"dotnet-maestro[bot]","Number":"1192","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1192","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1192)"},{"Id":"442864446","IsPullRequest":true,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1185","RawContent":null,"Title":"Fail CI build if APICompat baseline files would change","State":"closed","Body":"Currently, if a change in Arcade would cause changes in the APICompat baseline files, the baseline files are rewritten without throwing an error. If somebody makes such a change without checking in the changes to the APICompat baselines, the CI should fail. This change achieves that. Resolves https://github.com/dotnet/standard/issues/1184.\r\n\r\n@ericstj @terrajobst PTAL","Url":"https://github.com/dotnet/standard/pull/1185","RelatedDescription":"Closed or merged PR \"Fail CI build if APICompat baseline files would change\" (#1185)"},{"Id":"442475952","IsPullRequest":false,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1184","RawContent":null,"Title":"Fail CI when APICompat Baseline files change","State":"closed","Body":"Right now, when a change to Standard causes a change to the APICompat baseline(s), the build succeeds, and the baseline files are re-written with the change. In CI, we should fail the build on changes to the APICompat baseline files (rather than silently rewriting them).\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1184","RelatedDescription":"Closed issue \"Fail CI when APICompat Baseline files change\" (#1184)"},{"Id":"443876288","IsPullRequest":true,"CreatedAt":"2019-05-14T12:39:27","Actor":"dotnet-maestro[bot]","Number":"1191","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19263.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1191","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1191)"},{"Id":"443629557","IsPullRequest":true,"CreatedAt":"2019-05-14T00:00:25","Actor":"JohnTortugo","Number":"1189","RawContent":null,"Title":"Update azure-pipelines.yml","State":"closed","Body":"Related to: https://github.com/dotnet/core-eng/issues/6291","Url":"https://github.com/dotnet/standard/pull/1189","RelatedDescription":"Closed or merged PR \"Update azure-pipelines.yml\" (#1189)"},{"Id":"443632814","IsPullRequest":false,"CreatedAt":"2019-05-13T22:41:56","Actor":"yangsong2828","Number":"1190","RawContent":null,"Title":"HttpModule with Microsoft.AspNetCore.Http","State":"open","Body":"We have multiple projects depend on one common IIS module, say Logging module.\r\nHowever, we can't move all projects to asp.net core at one shot. But we want to move one at a time.\r\nIf I port it to middleware, it can't be used by legacy IIS projects any more.\r\nSo what is your recommendation to move those common piece to asp .net core? Thanks.","Url":"https://github.com/dotnet/standard/issues/1190","RelatedDescription":"Open issue \"HttpModule with Microsoft.AspNetCore.Http\" (#1190)"},{"Id":"443361033","IsPullRequest":true,"CreatedAt":"2019-05-13T12:19:21","Actor":"dotnet-maestro[bot]","Number":"1188","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:58 PM\r\n- **Commit**: 30682cda0dd7ca1765463749dd91ec3cfec75eb9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19262.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1188","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1188)"},{"Id":"443096722","IsPullRequest":true,"CreatedAt":"2019-05-12T12:18:57","Actor":"dotnet-maestro[bot]","Number":"1187","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 1:13 PM\r\n- **Commit**: 136dfbfa8a6173dadc107bf7393bdeaceecb4d3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19261.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1187","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1187)"},{"Id":"442986105","IsPullRequest":true,"CreatedAt":"2019-05-11T12:28:56","Actor":"dotnet-maestro[bot]","Number":"1186","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19260.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1186","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1186)"},{"Id":"439143422","IsPullRequest":true,"CreatedAt":"2019-05-10T20:25:17","Actor":"dotnet-maestro[bot]","Number":"1172","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190430.6\r\n- **Date Produced**: 4/30/2019 10:17 PM\r\n- **Commit**: ac8d88df02d246d3147338fcfb03b1b93dc84b53\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19230.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19230.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19230.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19230.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19230.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190501.6\r\n- **Date Produced**: 5/2/2019 7:15 AM\r\n- **Commit**: ea9b2530a1559dd6426730aba52fca1924db2b65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19251.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19251.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19251.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19251.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19251.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190502.2\r\n- **Date Produced**: 5/2/2019 7:00 PM\r\n- **Commit**: ed63a7faf2d119829dd971be91bb46b6ebaa1dd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19252.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19252.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19252.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19252.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19252.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190503.8\r\n- **Date Produced**: 5/4/2019 2:00 AM\r\n- **Commit**: 4cacf7aa7b2cd8bdd042e721e6ad73d809dd5678\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19253.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19253.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19253.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19253.8\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19253.8\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190504.1\r\n- **Date Produced**: 5/4/2019 12:58 PM\r\n- **Commit**: 1b8589bbf53b9a5e819460798eff59830f39a3be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19254.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19254.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190505.2\r\n- **Date Produced**: 5/5/2019 2:25 PM\r\n- **Commit**: 6a34948f7bdbc3ceb2fb16441b49f7748a462646\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19255.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19255.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190506.1\r\n- **Date Produced**: 5/6/2019 5:27 PM\r\n- **Commit**: 917ed3ac79350e4072c724deb48404ee7d76ebef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19256.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19256.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19256.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19256.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19256.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190506.4\r\n- **Date Produced**: 5/6/2019 9:02 PM\r\n- **Commit**: fe003f91e82195c5657c79ffa8d2831c9f07c9dc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19256.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19256.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19256.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19256.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19256.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190506.12\r\n- **Date Produced**: 5/7/2019 5:12 AM\r\n- **Commit**: c31fac9f6899094226cb5cd77c85b8f60ecafa3d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19256.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19256.12\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190507.7\r\n- **Date Produced**: 5/8/2019 12:49 AM\r\n- **Commit**: bda52d7619f9420de46f2c39ffc972864bbcab63\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19257.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19257.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190508.5\r\n- **Date Produced**: 5/8/2019 10:17 PM\r\n- **Commit**: 9005cee9510d23535c09bd9b6be7c426e526c067\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19258.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19258.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190509.9\r\n- **Date Produced**: 5/10/2019 12:31 AM\r\n- **Commit**: 155080ecb738e189db75f8f2461ebad75d955aa7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19259.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1172","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1172)"},{"Id":"439794677","IsPullRequest":true,"CreatedAt":"2019-05-09T21:46:08","Actor":"terrajobst","Number":"1175","RawContent":null,"Title":"Add bulk operations to Collection<T>","State":"closed","Body":"These APIs were [recently merged](https://github.com/dotnet/corefx/pull/35772) into CoreFx.\r\n\r\nThis fixes #1091.","Url":"https://github.com/dotnet/standard/pull/1175","RelatedDescription":"Closed or merged PR \"Add bulk operations to Collection<T>\" (#1175)"},{"Id":"442425601","IsPullRequest":true,"CreatedAt":"2019-05-09T21:41:45","Actor":"joperezr","Number":"1182","RawContent":null,"Title":"Fix official build which is failing when trying to publish the packages to BAR","State":"closed","Body":"cc: @wtgodbe \r\n\r\nOfficial builds are failing when trying to publish packages to BAR because the AssetsManifest file isn't being generated any longer. This was caused because of a breaking change in Arcade. These changes will fix this issue.","Url":"https://github.com/dotnet/standard/pull/1182","RelatedDescription":"Closed or merged PR \"Fix official build which is failing when trying to publish the packages to BAR\" (#1182)"},{"Id":"439815886","IsPullRequest":true,"CreatedAt":"2019-05-09T20:13:26","Actor":"terrajobst","Number":"1176","RawContent":null,"Title":"Prevent non-framework code from extending BaseNumberConverter","State":"closed","Body":"This fixes #1171.\r\n\r\nPlease note that this is technically an API breaking change (we shipped `BaseNumberConverter` in .NET Standard 2.0 with a protected constructor, which was mistake). But there is no way to derive and instantiate this class. An exception will get thrown if you try to instantiate the derived class. \r\n\r\nFor more details, see https://github.com/dotnet/corefx/pull/37278.\r\n\r\n/cc @ericstj ","Url":"https://github.com/dotnet/standard/pull/1176","RelatedDescription":"Closed or merged PR \"Prevent non-framework code from extending BaseNumberConverter\" (#1176)"},{"Id":"442368786","IsPullRequest":true,"CreatedAt":"2019-05-09T19:01:19","Actor":"joperezr","Number":"1181","RawContent":null,"Title":"Move WithCancellation/ConfigureAwait extension methods to TaskAsyncEnumerableExtensions","State":"closed","Body":"cc: @stephentoub @terrajobst \r\n\r\nResponding to changes made by https://github.com/dotnet/corefx/pull/37367 where the extnsion methods where moved to a new type. This is the first time I make a change like this so please do let me know if I missed anything.","Url":"https://github.com/dotnet/standard/pull/1181","RelatedDescription":"Closed or merged PR \"Move WithCancellation/ConfigureAwait extension methods to TaskAsyncEnumerableExtensions\" (#1181)"},{"Id":"439351218","IsPullRequest":true,"CreatedAt":"2019-05-08T17:55:44","Actor":"wtgodbe","Number":"1173","RawContent":null,"Title":"Update to the 3.0 SDK","State":"closed","Body":"CC @ViktorHofer @ericstj. This also contains a maestro update of Arcade dependencies.","Url":"https://github.com/dotnet/standard/pull/1173","RelatedDescription":"Closed or merged PR \"Update to the 3.0 SDK\" (#1173)"},{"Id":"441500740","IsPullRequest":false,"CreatedAt":"2019-05-08T00:36:05","Actor":"PHuhn","Number":"1179","RawContent":null,"Title":"System.ComponentModel.Annotations V4.5.0 attributes in .Net Standard library not working in .Net framework","State":"open","Body":"Thanks for creating .Net Standard...\r\n\r\nI am attempting to migrate my .Net Framework libraries to .Net Standard, so my libraries will be available in .Net Framework and .Net Core. One of the libraries is using DataAnnotations as follows:\r\n```\r\npublic partial class LogData\r\n{\r\n    [Key, Column(Order = 1)]\r\n    [Required(ErrorMessage = \"Id is required.\")]\r\n    public long Id { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Date is required.\")]\r\n    public DateTime Date { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Application is required.\"), MaxLength(30, ErrorMessage = \"'Application' must be 30 or less characters.\")]\r\n    public string Application { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Method is required.\"), MaxLength(255, ErrorMessage = \"'Method' must be 255 or less characters.\")]\r\n    public string Method { get; set; }\r\n\r\n    [Required(ErrorMessage = \"LogLevel is required.\")]\r\n    [Range(typeof(byte), \"0\", \"4\", ErrorMessage = \"'LogLevel' must be between 0 and 4\")]\r\n    public byte LogLevel { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Level is required.\"), MaxLength(8, ErrorMessage = \"'Level' must be 8 or less characters.\")]\r\n    public string Level { get; set; }\r\n\r\n    [Required(ErrorMessage = \"UserAccount is required.\"), MaxLength(255, ErrorMessage = \"'UserAccount' must be 255 or less characters.\")]\r\n    public string UserAccount { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Message is required.\"), MaxLength(4000, ErrorMessage = \"'Message' must be 4000 or less characters.\")]\r\n    public string Message { get; set; }\r\n\r\n    [MaxLength(4000, ErrorMessage = \"'Exception' must be 4000 or less characters.\")]\r\n    public string Exception { get; set; }\r\n}\r\n```\r\nThe migration **up** method in the .Net Core console applications is as follows:\r\n```\r\nmigrationBuilder.CreateTable(\r\n    name: \"Logs\",\r\n    columns: table => new\r\n    {\r\n        Id = table.Column<long>(nullable: false)\r\n            .Annotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn),\r\n        Date = table.Column<DateTime>(nullable: false),\r\n        Application = table.Column<string>(maxLength: 30, nullable: false),\r\n        Method = table.Column<string>(maxLength: 255, nullable: false),\r\n        LogLevel = table.Column<byte>(nullable: false),\r\n        Level = table.Column<string>(maxLength: 8, nullable: false),\r\n        UserAccount = table.Column<string>(maxLength: 255, nullable: false),\r\n        Message = table.Column<string>(maxLength: 4000, nullable: false),\r\n        Exception = table.Column<string>(maxLength: 4000, nullable: true)\r\n    },\r\n    constraints: table =>\r\n    {\r\n        table.PrimaryKey(\"PK_Logs\", x => x.Id);\r\n    });\r\n```\r\nThis as I would expect it to be.\r\n\r\nThe migration **up** method in the .Net Framework console applications is as follows:\r\n```\r\nCreateTable(\r\n    \"dbo.Logs\",\r\n    c => new\r\n        {\r\n            Id = c.Long(nullable: false, identity: true),\r\n            Date = c.DateTime(nullable: false),\r\n            Application = c.String(),\r\n            Method = c.String(),\r\n            LogLevel = c.Byte(nullable: false),\r\n            Level = c.String(),\r\n            UserAccount = c.String(),\r\n            Message = c.String(),\r\n            Exception = c.String(),\r\n        })\r\n    .PrimaryKey(t => t.Id);\r\n```\r\nThis is lacking the various length constraints.  Is this the intended output?\r\n\r\nI have attached a test solution. It has three projects as follows:\r\n*\tNSG.LogData (.NetStandard library containing annotated-data class),\r\n*\tNSG.ConsoleCore (.Net Core console project, that includes NSG.LogData library, and creates a code-first database),\r\n*\tNSG.ConsoleNet (.Net Framework console project, that includes NSG.LogData library, and creates a code-first database).\r\n\r\nPackage installation for NSG.ConsoleCore:\r\n\r\n\tInstall-Package Microsoft.EntityFrameworkCore.SqlServer\r\n\tInstall-Package Microsoft.EntityFrameworkCore.Tools\r\n\r\nMigration command for NSG.ConsoleCore:\r\n\r\n\tEntityFrameworkCore\\Add-Migration -name InitialCreate -Project NSG.ConsoleCore -StartupProject NSG.ConsoleCore\r\n\r\nMigration command for NSG.ConsoleNet:\r\n\r\n\tEntityFramework\\Add-Migration -name InitialCreate -Project NSG.ConsoleNet -StartupProject NSG.ConsoleNet\r\n\r\n\r\n\r\n\r\n[NSG.DataAnnotations.zip](https://github.com/dotnet/standard/files/3154973/NSG.DataAnnotations.zip)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1179","RelatedDescription":"Open issue \"System.ComponentModel.Annotations V4.5.0 attributes in .Net Standard library not working in .Net framework\" (#1179)"},{"Id":"440265255","IsPullRequest":false,"CreatedAt":"2019-05-04T00:25:58","Actor":"bartonjs","Number":"1178","RawContent":null,"Title":"Consider asymmetric key import/export API for NS2.1","State":"open","Body":"https://github.com/dotnet/corefx/issues/20414 significantly helps .NET applications work with asymmetric keys \"the Linux way\", as well as other generally useful in hybrid environments scenarios.\r\n\r\nTypes to diff against corefx/3.0:\r\n* System.Security.Cryptography.AsymmetricAlgorithm\r\n* System.Security.Cryptography.RSA\r\n* System.Security.Cryptography.ECDsa\r\n* System.Security.Cryptography.ECDiffieHellman\r\n\r\n(and potentially the deriving types, for their `override`s)","Url":"https://github.com/dotnet/standard/issues/1178","RelatedDescription":"Open issue \"Consider asymmetric key import/export API for NS2.1\" (#1178)"},{"Id":"439822079","IsPullRequest":true,"CreatedAt":"2019-05-03T16:58:36","Actor":"mmitche","Number":"1177","RawContent":null,"Title":"Move to Azure DevOps for public CI","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1177","RelatedDescription":"Closed or merged PR \"Move to Azure DevOps for public CI\" (#1177)"},{"Id":"439780558","IsPullRequest":false,"CreatedAt":"2019-05-02T23:09:49","Actor":"yangsong2828","Number":"1174","RawContent":null,"Title":"Support on System.Web.HttpRequest APIs","State":"closed","Body":"System.Web.HttpRequest APIs are not supported in .net standard. So I take the alternative is to use what's in Microsoft.AspNetCore.Http.Abstractions. But inside it, it doesn't have APIs such as \"Brower\", \"UserAgent\" etc. So what's the reason they are not supported?","Url":"https://github.com/dotnet/standard/issues/1174","RelatedDescription":"Closed issue \"Support on System.Web.HttpRequest APIs\" (#1174)"},{"Id":"438281734","IsPullRequest":true,"CreatedAt":"2019-04-30T12:14:14","Actor":"dotnet-maestro[bot]","Number":"1170","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190426.3\r\n- **Date Produced**: 4/26/2019 5:53 PM\r\n- **Commit**: 7bec23ce3da545d97f53f99abce457a2e252aa58\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19226.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19226.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19226.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19226.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19226.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190429.8\r\n- **Date Produced**: 4/30/2019 5:30 AM\r\n- **Commit**: a7a250e9c13147134543c35fef2fb81f19592edf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19229.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19229.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19229.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19229.8\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19229.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1170","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1170)"},{"Id":"437640571","IsPullRequest":true,"CreatedAt":"2019-04-26T12:09:00","Actor":"dotnet-maestro[bot]","Number":"1169","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190425.5\r\n- **Date Produced**: 4/25/2019 6:25 PM\r\n- **Commit**: d37270268a65592cae630f1b979b70f74d4614dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19225.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19225.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19225.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19225.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19225.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1169","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1169)"},{"Id":"437162539","IsPullRequest":true,"CreatedAt":"2019-04-25T12:14:10","Actor":"dotnet-maestro[bot]","Number":"1168","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190424.9\r\n- **Date Produced**: 4/25/2019 12:59 AM\r\n- **Commit**: e02c88fca482f1141a9bb310c97be20b0ebd0465\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19224.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19224.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19224.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19224.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19224.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1168","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1168)"},{"Id":"436223894","IsPullRequest":false,"CreatedAt":"2019-04-25T05:53:17","Actor":"ststeiger","Number":"1166","RawContent":null,"Title":"Referenced NetStandard-project does not get local-copied in .NET Core application ","State":"closed","Body":"I've created a project called \r\n`System.ServiceProcess`\r\nas netstandard 2.0 library. \r\n\r\nI've referenced project `System.ServiceProcess` in project `LdapService`. \r\nThe two projects are in the same solution. \r\n\r\nLdapService references project `System.ServiceProcess`. \r\nLdapService also references project `IniParser`. \r\nIniParser is a netstandard 2.0 library. \r\n\r\nIniParser gets localcopied to LdapService. \r\nSystem.ServiceProcess does not. \r\n\r\nI added <RestoreProjectStyle>PackageReference</RestoreProjectStyle> which once helped in a .NET Framework 4.6.1 project. \r\nBut that doesn't work .\r\nI tried setting localCopy to true, also no effect. \r\n\r\nIt looks like it's wrongly identifying System.ServiceProcess as a SharedFramework-DLL, and thus ignores local-copying. \r\n\r\nBUG.\r\n\r\nVersion Information:\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.5\r\nVisualStudio.15.Release/15.9.5+28307.280\r\nNetCore 2.1\r\n```\r\n\r\nIf I rename the project to System.ServiceProcess**1**, then it works as expected.","Url":"https://github.com/dotnet/standard/issues/1166","RelatedDescription":"Closed issue \"Referenced NetStandard-project does not get local-copied in .NET Core application \" (#1166)"},{"Id":"436657831","IsPullRequest":true,"CreatedAt":"2019-04-24T12:24:23","Actor":"dotnet-maestro[bot]","Number":"1167","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190423.2\r\n- **Date Produced**: 4/24/2019 12:38 AM\r\n- **Commit**: e3919d0c158716ef4685c8e057cc58640af1af83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19223.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19223.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19223.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19223.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19223.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1167","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1167)"},{"Id":"436150323","IsPullRequest":true,"CreatedAt":"2019-04-23T12:23:39","Actor":"dotnet-maestro[bot]","Number":"1165","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190422.2\r\n- **Date Produced**: 4/22/2019 10:01 PM\r\n- **Commit**: 851e36df83d3361e4bd8a70a2a8a89f762469f9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19222.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19222.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1165","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1165)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"445246099","IsPullRequest":false,"CreatedAt":"2019-05-17T03:16:47","Actor":"windsOne","Number":"37742","RawContent":null,"Title":"HttpWebRequest set host no need port;how can set","State":"open","Body":"\r\n![image](https://user-images.githubusercontent.com/14890297/57901109-22748580-7896-11e9-81d6-e2dfbd985622.png)\r\n\r\n![image](https://user-images.githubusercontent.com/14890297/57900979-995d4e80-7895-11e9-9f07-571478cc2912.png)\r\n\r\n\r\nWhat should I do to avoid the port being added?","Url":"https://github.com/dotnet/corefx/issues/37742","RelatedDescription":"Open issue \"HttpWebRequest set host no need port;how can set\" (#37742)"},{"Id":"445243778","IsPullRequest":true,"CreatedAt":"2019-05-17T03:03:51","Actor":"Dotnet-GitSync-Bot","Number":"37741","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corefx/pull/37741","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#37741)"},{"Id":"445236126","IsPullRequest":false,"CreatedAt":"2019-05-17T02:25:52","Actor":"ianjirka","Number":"37740","RawContent":null,"Title":"[Preview5] JsonSerializer cannot convert boolean to string","State":"open","Body":"It converts to a string using newtonsoft.  Workaround is easy, filing a bug as FYI.\r\n\r\n```\r\nSystem.Text.Json.JsonReaderException: The JSON value from [RecaptchaVerificationResponse].success could not be converted to System.String.\r\n   at System.Text.Json.ThrowHelper.ThrowJsonReaderException_DeserializeUnableToConvertValue(Type propertyType, Utf8JsonReader& reader, ReadStack& state)\r\n...\r\n```\r\n\r\n```csharp\r\npublic class RecaptchaVerificationResponse\r\n    {\r\n        public string success {get;set;}\r\n        public DateTime challenge_ts {get;set;}\r\n        public string hostname {get;set;}\r\n        [JsonProperty(\"error-codes\")]\r\n        public string[] error_codes {get;set;}\r\n    }\r\n```\r\n\r\n```json\r\n{\"success\": true,\"challenge_ts\": \"2019-05-17T02:23:27Z\",\"hostname\": \"testkey.google.com\"}\r\n```","Url":"https://github.com/dotnet/corefx/issues/37740","RelatedDescription":"Open issue \"[Preview5] JsonSerializer cannot convert boolean to string\" (#37740)"},{"Id":"445228542","IsPullRequest":false,"CreatedAt":"2019-05-17T01:50:43","Actor":"ViktorHofer","Number":"37739","RawContent":null,"Title":"System.Diagnostics.Tests.ProcessTests.ProcessNameMatchesScriptName fails on netcoreapp-Linux-Release-x64-RedHat.6.Amd64.Open consistently","State":"open","Body":"@tmds you added the test that fails on RedHat6. It seems the process name is stripped after 15 characters. I will disable the test meanwhile for RH6.\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=191758&view=ms.vss-test-web.build-test-results-tab&runId=4626326&resultId=358982\r\n\r\n```\r\nAssert.Equal() Failure\\n ↓ (pos 15)\\nExpected: ProcessNameMatchesScriptName_163_84763abe\\nActual: ProcessNameMatc\\n ↑ (pos 15)\r\n\r\n   at System.Diagnostics.Tests.ProcessTests.ProcessNameMatchesScriptName() in /__w/1/s/src/System.Diagnostics.Process/tests/ProcessTests.Unix.cs:line 174\r\n```\r\n\r\ncc @stephentoub ","Url":"https://github.com/dotnet/corefx/issues/37739","RelatedDescription":"Open issue \"System.Diagnostics.Tests.ProcessTests.ProcessNameMatchesScriptName fails on netcoreapp-Linux-Release-x64-RedHat.6.Amd64.Open consistently\" (#37739)"},{"Id":"445218092","IsPullRequest":false,"CreatedAt":"2019-05-17T00:53:44","Actor":"itn3000","Number":"37738","RawContent":null,"Title":"conflicting ValueTask definition between netstandard2.1 and nuget package","State":"open","Body":"# Overview\r\n\r\nbuild error in netstandard2.1 when using nuget package using [System.Threading.Tasks.Extensions](https://www.nuget.org/packages/System.Threading.Tasks.Extensions/).\r\n\r\n# Environment\r\n\r\n* windows8.1-x64(ja)\r\n* dotnet sdk 3.0pre5\r\n\r\n# Steps to reproduce\r\n\r\n1. create project with `dotnet new classlib -f netstandard2.1`\r\n2. add [System.Threading.Channels-4.6.0-pre5](https://www.nuget.org/packages/System.Threading.Channels/4.6.0-preview5.19224.8)\r\n3. add method using `ValueTask<T>`\r\n4. build project\r\n\r\nmethod code is following\r\n```csharp\r\nusing System.Threading.Tasks;\r\n\r\nclass Class1\r\n{\r\n    ValueTask<int> X()\r\n    {\r\n        return new ValueTask<int>(1);\r\n    }\r\n}\r\n```\r\n\r\n# Expected result\r\n\r\nsuccess to build project\r\n\r\n# Actual result\r\n\r\nerror occured with following message(sorry for Japanese, but point of error was output)\r\n\r\n```\r\n.NET Core 向け Microsoft (R) Build Engine バージョン 16.0.462+g62fb89029d\r\nCopyright (C) Microsoft Corporation.All rights reserved.\r\n\r\n  G:\\src\\gitrepos\\dotnet-sandbox\\ivaluetasksourcerror\\ivaluetasksourcerror.csproj の復元が 27.28 ms で完了しました。\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: プレビュー版の .NET Core を使用しています。https://aka.ms/dotnet-core-preview をご覧ください [G:\\src\\gitrepos\\dotnet-sandbox\\ivaluetasksourcerror\\ivaluetasksourcerror.csproj]\r\nClass1.cs(5,11): error CS0433: 型 'ValueTask<TResult>' が 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' と 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' の両方に存在します。 [G:\\src\\gitrepos\\dotnet-sandbox\\ivaluetasksourcerror\\ivaluetasksourcerror.csproj]\r\n\r\nビルドに失敗しました。\r\n\r\nClass1.cs(5,11): error CS0433: 型 'ValueTask<TResult>' が 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' と 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' の両方に存在します。 [G:\\src\\gitrepos\\dotnet-sandbox\\ivaluetasksourcerror\\ivaluetasksourcerror.csproj]\r\n    0 個の警告\r\n    1 エラー\r\n\r\n経過時間 00:00:01.21\r\n```\r\n\r\nCurrently, the package which has problem I found is only System.Threading.Tasks.Channels, but another package may have same problem because System.Threading.Tasks.Extension is used widely.","Url":"https://github.com/dotnet/corefx/issues/37738","RelatedDescription":"Open issue \"conflicting ValueTask definition between netstandard2.1 and nuget package\" (#37738)"},{"Id":"445182072","IsPullRequest":true,"CreatedAt":"2019-05-17T00:32:40","Actor":"gregkalapos","Number":"37732","RawContent":null,"Title":"Fix minor typo NanoSeconds -> nanoseconds","State":"closed","Body":"As discussed with @danmosemsft [here](https://github.com/dotnet/corefx/pull/37637#discussion_r284052545) -  changing `NanoSecond` to `Nanosecond` (which should be the correct spelling). ","Url":"https://github.com/dotnet/corefx/pull/37732","RelatedDescription":"Closed or merged PR \"Fix minor typo NanoSeconds -> nanoseconds\" (#37732)"},{"Id":"445168763","IsPullRequest":true,"CreatedAt":"2019-05-17T00:31:48","Actor":"stephentoub","Number":"37731","RawContent":null,"Title":"Fix ListenerWithFilter test","State":"closed","Body":"It's searching the output to ensure the id doesn't get written out, so it can't match other IDs that are written out.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/37617\r\ncc: @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/37731","RelatedDescription":"Closed or merged PR \"Fix ListenerWithFilter test\" (#37731)"},{"Id":"445212843","IsPullRequest":true,"CreatedAt":"2019-05-17T00:26:49","Actor":"safern","Number":"37737","RawContent":null,"Title":"Generate System.Runtime ref assembly against implementation","State":"open","Body":"We're about to add Nullable Annotations from Corelib's implementation into System.Runtime reference assembly. In order to make the diff easier when adding those annotations and reducing noise I generated the reference assembly again against the implementation.\r\n\r\nSome things that stand out are: \r\n\r\n1. With my change nested ValueTuples now use the `(T1, ..., TN)` syntax. I.e: Before a nested ValueTuple would look like: `(T1, System.ValueTuple<T2, T3>)`. After my change now they will be emitted as follows: `(T1, (T2, T3))`.\r\n2. There were some overrides we weren't exposing in the reference assembly.\r\n3. One obsolete attribute we were missing on an API marked as Obsolete in Full Framework and in NETStandard.\r\n4. Some baselined readonly structs.\r\n5. Cleaned up the baseline as well.\r\n6. Some references were not using the full type name.\r\n7. Some ordering differences.\r\n\r\ncc: @stephentoub @danmosemsft @ericstj @tannergooding @ahsonkhan @terrajobst ","Url":"https://github.com/dotnet/corefx/pull/37737","RelatedDescription":"Open PR \"Generate System.Runtime ref assembly against implementation\" (#37737)"},{"Id":"445207010","IsPullRequest":true,"CreatedAt":"2019-05-16T23:58:36","Actor":"krwq","Number":"37736","RawContent":null,"Title":"Fix threading issue when reading and writing from SslStream at the same time","State":"open","Body":"Fixes #36426 - note, this is not scoped to Alpine - issue repros on any Linux with latest (1.1.1) OpenSSL installed.\r\nThere were also occasional process crashes I've observed disappearing after fixing this (didn't get a chance to capture stack trace as it happened fairly rarely and I initially thought it was due to bad setup/unrelated)\r\n\r\nDetails:\r\nSSL_read, SSL_write, SSL_get_error are advertised as they are not designed to work in multithreaded scenarios when working on the same SSL connection: https://www.openssl.org/docs/faq.html#PROG1\r\n\r\nfor HTTP 1 scenarios this is rather unusual to read and write at the same time but for HTTP 2 this is common.\r\n\r\nNote: multiple reads OR writes (but not reads and writes) at the same time can still cause some issues around BIO_read/BIO_write (BIO_* use separate queues for reads and writes) - I have not addressed them because multiple reads at the same time do not seem to be useful in any scenarios (user will essentially get random bytes since you can't reason about the order).\r\n\r\nThis is marked as draft because of the pending investigation:\r\n- measure perf difference with and without the fix (mostly interested in typical HTTP scenario)\r\n- investigate why issue does not repro for TLS 1.2 and lower (possibly it does but is not observable or just mere luck)\r\n\r\ncc: @wfurt @stephentoub","Url":"https://github.com/dotnet/corefx/pull/37736","RelatedDescription":"Open PR \"Fix threading issue when reading and writing from SslStream at the same time\" (#37736)"},{"Id":"445206062","IsPullRequest":false,"CreatedAt":"2019-05-16T23:54:11","Actor":"buyaa-n","Number":"37735","RawContent":null,"Title":"Deserialize invalid string should throw but it is parsing to default value","State":"open","Body":"Deserialize invalid string should throw but it is parsing to default value. (MyEnum.Alpha in this case)\r\n```csharp\r\n[Fact] \r\npublic static void DeserializeInvalidString()\r\n{\r\n    string json = \"{ \\\"Value\\\" : \\\"Three\\\" }\";\r\n    JsonReaderException e = Assert.Throws<JsonReaderException>(() =>\r\n    {\r\n        Bucket b = JsonSerializer.Parse<Bucket>(json);\r\n    });\r\n}\r\n\r\npublic static void DeserializeInvalidValue()\r\n{\r\n    string json = \"{ \\\"Value\\\" : \\\"3\\\" }\";\r\n    JsonReaderException e = Assert.Throws<JsonReaderException>(() =>\r\n    {\r\n        Bucket b = JsonSerializer.Parse<Bucket>(json);\r\n    });\r\n}\r\n\r\npublic class Bucket\r\n{\r\n    public MyEnum Value;\r\n}\r\n\r\npublic enum MyEnum\r\n{\r\n    Alpha,\r\n    Beta,\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/37735","RelatedDescription":"Open issue \"Deserialize invalid string should throw but it is parsing to default value\" (#37735)"},{"Id":"445203452","IsPullRequest":true,"CreatedAt":"2019-05-16T23:42:06","Actor":"wtgodbe","Number":"37734","RawContent":null,"Title":"Fix IPv6Address parsing","State":"open","Body":"Ports 4006e521ac364a330f1c8b418ab651845f32367d & https://github.com/dotnet/corefx/commit/6fdf8be2b60145d65819395ad020c162246f983f. \r\n\r\n@karelz @davidsh @wfurt PTAL, especially at the changes to src/System.Private.Uri/src/System/IPv6AddressHelper.cs","Url":"https://github.com/dotnet/corefx/pull/37734","RelatedDescription":"Open PR \"Fix IPv6Address parsing\" (#37734)"},{"Id":"445194844","IsPullRequest":true,"CreatedAt":"2019-05-16T23:03:53","Actor":"wtgodbe","Number":"37733","RawContent":null,"Title":"Fix Loop in System.Private.Uri","State":"open","Body":"Ports https://github.com/dotnet/corefx/commit/6da61ff4d24c7875087cb6afe93140ba0e3a6532 to master\r\n\r\nCC @karelz @davidsh ","Url":"https://github.com/dotnet/corefx/pull/37733","RelatedDescription":"Open PR \"Fix Loop in System.Private.Uri\" (#37733)"},{"Id":"445094810","IsPullRequest":true,"CreatedAt":"2019-05-16T22:53:45","Actor":"stephentoub","Number":"37719","RawContent":null,"Title":"Add [EnumeratorCancellation] to Microsoft.Bcl.AsyncInterfaces","State":"closed","Body":"Thanks to @jcouv for spotting this recently added attribute is missing from the Microsoft.Bcl.AsyncInterfaces package.\r\ncc: @Petermarcu, @joperezr ","Url":"https://github.com/dotnet/corefx/pull/37719","RelatedDescription":"Closed or merged PR \"Add [EnumeratorCancellation] to Microsoft.Bcl.AsyncInterfaces\" (#37719)"},{"Id":"445162635","IsPullRequest":true,"CreatedAt":"2019-05-16T21:13:29","Actor":"ericstj","Number":"37730","RawContent":null,"Title":"Remove some dependencies from source build","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/37730","RelatedDescription":"Open PR \"Remove some dependencies from source build\" (#37730)"},{"Id":"445159905","IsPullRequest":false,"CreatedAt":"2019-05-16T21:05:57","Actor":"laceous","Number":"37729","RawContent":null,"Title":"Digest Auth SocketsHttpHandler issue","State":"open","Body":"This is possibly related to #37607, but that one was more focused on WinHttpHandler/Azure.\r\n\r\nThe following code fails on:\r\n* .NET Core 2.2\r\n* .NET Core 3 preview 5\r\n\r\nHowever, it works on:\r\n* .NET Framework 4.8\r\n* .NET Core 2.2 when specifying System.Net.Http.UseSocketsHttpHandler = false\r\n\r\n```c#\r\n//AppContext.SetSwitch(\"System.Net.Http.UseSocketsHttpHandler\", false);\r\nHttpClientHandler handler = new HttpClientHandler\r\n{\r\n    Credentials = new NetworkCredential(\"guest\", \"guest\")\r\n};\r\nHttpClient client = new HttpClient(handler, true);\r\nstring body = await client.GetStringAsync(\"https://jigsaw.w3.org/HTTP/Digest/\");\r\nConsole.WriteLine(body);\r\n```\r\n\r\nAuth headers:\r\n```\r\n.NET Core 2.2\r\nWWW-Authenticate: Digest realm=\"test\", domain=\"/HTTP/Digest\", nonce=\"b39ee3f395e54f1d445a02d2bc9794ba\"\r\nAuthorization: Digest username=\"guest\", realm=\"test\", nonce=\"b39ee3f395e54f1d445a02d2bc9794ba\", uri=\"/HTTP/Digest/\", response=\"5a6f6714f56af6793d7c41e936170778\", algorithm=MD5, qop=auth, nc=00000001, cnonce=\"y07z26S1V1UrZR79\"\r\nFail\r\n\r\n.NET Core 2.2 (UseSocketsHttpHandler=false)\r\nWWW-Authenticate: Digest realm=\"test\", domain=\"/HTTP/Digest\", nonce=\"242183759da18f88dfe72b0b9d9c7476\"\r\nAuthorization: Digest username=\"guest\",realm=\"test\",nonce=\"242183759da18f88dfe72b0b9d9c7476\",uri=\"/HTTP/Digest/\",response=\"1a5869a78de62a6df46f96ec1c998326\"\r\nSuccess\r\n\r\n.NET Framework 4.8\r\nWWW-Authenticate: Digest realm=\"test\", domain=\"/HTTP/Digest\", nonce=\"4cb1feefb5095bb1e22001d3ba3743d5\"\r\nAuthorization: Digest username=\"guest\",realm=\"test\",nonce=\"4cb1feefb5095bb1e22001d3ba3743d5\",uri=\"/HTTP/Digest/\",response=\"394d4a0d8620dbb3b564cf5d44db890c\"\r\nSuccess\r\n```\r\n\r\nTests were run on Windows 10\r\n\r\nIt's possible there's a purposeful change here (e.g. security) but it seems strange that there's a change in behavior here for such an old algorithm like Digest.","Url":"https://github.com/dotnet/corefx/issues/37729","RelatedDescription":"Open issue \"Digest Auth SocketsHttpHandler issue\" (#37729)"},{"Id":"445157936","IsPullRequest":true,"CreatedAt":"2019-05-16T21:00:42","Actor":"ViktorHofer","Number":"37728","RawContent":null,"Title":"Enable rolling builds and add arm64 in outerloop","State":"open","Body":"... and enable RedHat6 on PRs.\r\n\r\ncc @wtgodbe ","Url":"https://github.com/dotnet/corefx/pull/37728","RelatedDescription":"Open PR \"Enable rolling builds and add arm64 in outerloop\" (#37728)"},{"Id":"445153137","IsPullRequest":false,"CreatedAt":"2019-05-16T20:48:57","Actor":"buyaa-n","Number":"37727","RawContent":null,"Title":"Deserialization of negative enum, enum class, flag enum test failing ","State":"open","Body":"Serialization test for negative enum is working but failing for deserialization\r\n```csharp\r\npublic enum NegativeEnum\r\n{\r\n    Negative = -1,\r\n    Zero = 0,\r\n    Positive = 1\r\n}\r\n\r\npublic class NegativeEnumClass\r\n{\r\n    public NegativeEnum Value1 { get; set; }\r\n    public NegativeEnum Value2 { get; set; }\r\n}\r\n\r\n[Fact]\r\npublic static void DeserializeNegativeEnum()\r\n{\r\n    string json = @\"{\r\n  \"\"Value1\"\": \"\"Negative\"\",\r\n  \"\"Value2\"\": -2147483648\r\n}\";\r\n    NegativeEnumClass negativeEnumClass = JsonSerializer.Parse<NegativeEnumClass>(json);\r\n    Assert.Equal(NegativeEnum.Negative, negativeEnumClass.Value1);\r\n    Assert.Equal((NegativeEnum)int.MinValue, negativeEnumClass.Value2);\r\n}\r\n\r\n[Fact]\r\npublic static void DeserializeNegativeFlagsEnum()\r\n{\r\n    string json = @\"{\r\n  \"\"Value1\"\": \"\"NegativeFour,NegativeTwo\"\",\r\n  \"\"Value2\"\": \"\"NegativeFour,Four\"\"\r\n}\";\r\n    NegativeFlagsEnumClass negativeEnumClass = JsonSerializer.Parse<NegativeFlagsEnumClass>(json);\r\n    Assert.Equal(NegativeFlagsEnum.NegativeFour | NegativeFlagsEnum.NegativeTwo, negativeEnumClass.Value1);\r\n    Assert.Equal(NegativeFlagsEnum.NegativeFour | NegativeFlagsEnum.Four, negativeEnumClass.Value2);\r\n}\r\n\r\n[Fact]\r\npublic static void DeserializeEnumClass()\r\n{\r\n    string json = @\"{\r\n  \"\"StoreColor\"\": \"\"Red\"\",\r\n  \"\"NullableStoreColor1\"\": \"\"White\"\",\r\n  \"\"NullableStoreColor2\"\": null\r\n}\";\r\n    EnumClass enumClass = JsonSerializer.Parse<EnumClass>(json);\r\n    Assert.Equal(StoreColor.Red, enumClass.StoreColor);\r\n    Assert.Equal(StoreColor.White, enumClass.NullableStoreColor1);\r\n    Assert.Equal(null, enumClass.NullableStoreColor2);\r\n}\r\n\r\n[Fact]\r\npublic static void DeserializeFlagEnum()\r\n{\r\n    string json = @\"{\r\n  \"\"StoreColor\"\": \"\"Red, White\"\",\r\n  \"\"NullableStoreColor1\"\": 0,\r\n  \"\"NullableStoreColor2\"\": \"\"black, Red, White\"\"\r\n}\";\r\n    EnumClass enumClass = JsonSerializer.Parse<EnumClass>(json);\r\n    Assert.Equal(StoreColor.Red | StoreColor.White, enumClass.StoreColor);\r\n    Assert.Equal((StoreColor)0, enumClass.NullableStoreColor1);\r\n    Assert.Equal(StoreColor.Red | StoreColor.White | StoreColor.Black, enumClass.NullableStoreColor2);\r\n}\r\n\r\n[Fact]\r\npublic static void DeserializeEmptyStringIntoNullable()\r\n{\r\n    string json = @\"{\r\n  \"\"StoreColor\"\": \"\"Red\"\",\r\n  \"\"NullableStoreColor1\"\": \"\"White\"\",\r\n  \"\"NullableStoreColor2\"\": \"\"\"\"\r\n}\";\r\n    EnumClass c = JsonSerializer.Parse<EnumClass>(json);\r\n    Assert.Null(c.NullableStoreColor2);\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/37727","RelatedDescription":"Open issue \"Deserialization of negative enum, enum class, flag enum test failing \" (#37727)"},{"Id":"445146612","IsPullRequest":false,"CreatedAt":"2019-05-16T20:32:16","Actor":"buyaa-n","Number":"37726","RawContent":null,"Title":"Deserialization of named Enum test failing","State":"open","Body":"Serialization of named Enum tests passed but not for Deserialization. Sample test:\r\n```csharp\r\npublic enum NamedEnum\r\n{\r\n    [EnumMember(Value = \"@first\")]\r\n    First,\r\n\r\n    [EnumMember(Value = \"@second\")]\r\n    Second,\r\n    Third\r\n}\r\n\r\n[Fact]\r\npublic static void DeserializeNameEnumTest()\r\n{\r\n    string json = @\"{\r\n  \"\"Enum\"\": \"\"@first\"\"\r\n}\";\r\n\r\n    EnumContainer<NamedEnum> c = JsonSerializer.Parse<EnumContainer<NamedEnum>>(json);\r\n    Assert.Equal(NamedEnum.First, c.Enum);\r\n\r\n    json = @\"{\r\n  \"\"Enum\"\": \"\"Third\"\"\r\n}\";\r\n\r\n    c = JsonSerializer.Parse<EnumContainer<NamedEnum>>(json);\r\n    Assert.Equal(NamedEnum.Third, c.Enum);\r\n}\r\n\r\npublic enum EnumMemberWithDiffrentCases\r\n{\r\n    [EnumMember(Value = \"first_value\")]\r\n    First,\r\n    [EnumMember(Value = \"second_value\")]\r\n    first\r\n}\r\n\r\n[Fact]\r\npublic static void DeserializeEnumMemberWithDifferentCasing_ByEnumMemberValue_First()\r\n{\r\n    var e = JsonSerializer.Parse<EnumMemberWithDiffrentCases>(@\"\"\"first_value\"\"\");\r\n    Assert.Equal(EnumMemberWithDiffrentCases.First, e);\r\n}\r\n\r\n[Fact]\r\npublic static void DeserializeEnumMemberWithDifferentCasing_ByEnumMemberValue_Second()\r\n{\r\n    var e = JsonSerializer.Parse<EnumMemberWithDiffrentCases>(@\"\"\"second_value\"\"\");\r\n    Assert.Equal(EnumMemberWithDiffrentCases.first, e);\r\n}\r\n```\r\n<message>\r\n<![CDATA[\r\nSystem.Text.Json.JsonReaderException : The JSON value from [System.Text.Json.Serialization.Tests.EnumTests+EnumContainer`1[[System.Text.Json.Serialization.Tests.EnumTests+NamedEnum, System.Text.Json.Tests, Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]]].Enum could not be converted to System.Text.Json.Serialization.Tests.EnumTests+NamedEnum.\r\n]]>\r\n</message>\r\n<stack-trace>\r\n<![CDATA[\r\nat System.Text.Json.ThrowHelper.ThrowJsonReaderException_DeserializeUnableToConvertValue(Type propertyType, Utf8JsonReader& reader, ReadStack& state) in D:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\ThrowHelper.Serialization.cs:line 22\r\n at System.Text.Json.Serialization.JsonPropertyInfoNotNullable`3.Read(JsonTokenType tokenType, JsonSerializerOptions options, ReadStack& state, Utf8JsonReader& reader) in D:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonPropertyInfoNotNullable.cs:line 62\r\n at System.Text.Json.Serialization.JsonSerializer.HandleValue(JsonTokenType tokenType, JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& state) in D:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.HandleValue.cs:line 28\r\n at System.Text.Json.Serialization.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& state) in D:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.cs:line 32\r\n at System.Text.Json.Serialization.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader) in D:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.Helpers.cs:line 22\r\n at System.Text.Json.Serialization.JsonSerializer.ParseCore(String json, Type returnType, JsonSerializerOptions options) in D:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.String.cs:line 74\r\n at System.Text.Json.Serialization.JsonSerializer.Parse[TValue](String json, JsonSerializerOptions options) in D:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.String.cs:line 31\r\n at System.Text.Json.Serialization.Tests.EnumTests.DeserializeNameEnumTest() in D:\\dotnet\\corefx\\src\\System.Text.Json\\tests\\Serialization\\EnumTests.cs:line 289\r\n]]>\r\n</stack-trace>","Url":"https://github.com/dotnet/corefx/issues/37726","RelatedDescription":"Open issue \"Deserialization of named Enum test failing\" (#37726)"},{"Id":"445066536","IsPullRequest":true,"CreatedAt":"2019-05-16T20:27:57","Actor":"Anipik","Number":"37715","RawContent":null,"Title":"Executing tests in a Serial order to avoid some Failure","State":"closed","Body":"Related Issue https://github.com/dotnet/corefx/issues/15066\r\n\r\nBefore Change (12 threads)\r\n```\r\n System.Configuration.ConfigurationManager.Tests  Total: 632, Errors: 0, Failed: 0, Skipped: 0, Time: 0.872s\r\n```\r\nAfter change (1 thread)\r\n```\r\nSystem.Configuration.ConfigurationManager.Tests  Total: 632, Errors: 0, Failed: 0, Skipped: 0, Time: 2.055s\r\n```","Url":"https://github.com/dotnet/corefx/pull/37715","RelatedDescription":"Closed or merged PR \"Executing tests in a Serial order to avoid some Failure\" (#37715)"},{"Id":"445137789","IsPullRequest":false,"CreatedAt":"2019-05-16T20:10:02","Actor":"buyaa-n","Number":"37725","RawContent":null,"Title":"Serialization/deserialization with camel case option not working for enum type","State":"open","Body":"Sample test:\r\n```csharp\r\npublic enum CamelCaseEnum\r\n{\r\n    This,\r\n    Is,\r\n    CamelCase\r\n}\r\n[Fact]\r\npublic static void Serialize_CamelCaseFromAttribute()\r\n{\r\n    string json = JsonSerializer.ToString(CamelCaseEnum.CamelCase, new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase });\r\n    Assert.Equal(@\"\"\"camelCase\"\"\", json);\r\n}\r\n\r\n[Fact]\r\npublic static void Deserialize_CamelCaseFromAttribute()\r\n{\r\n    CamelCaseEnum e = JsonSerializer.Parse<CamelCaseEnum>(@\"\"\"camelCase\"\"\", new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase });\r\n    Assert.Equal(CamelCaseEnum.CamelCase, e);\r\n}\r\n\r\n[Fact]\r\npublic static void NamedEnumCommaCaseInsensitiveTest()\r\n{\r\n    EnumContainer<NamedEnumWithComma> c2 = JsonSerializer.Parse<EnumContainer<NamedEnumWithComma>>(@\"{\"\"Enum\"\":\"\",THIRD\"\"}\");\r\n    Assert.Equal(NamedEnumWithComma.Third, c2.Enum);\r\n}\r\npublic enum NamedEnumWithComma\r\n{\r\n    [EnumMember(Value = \"@first\")]\r\n    First,\r\n\r\n    [EnumMember(Value = \"@second\")]\r\n    Second,\r\n\r\n    [EnumMember(Value = \",third\")]\r\n    Third,\r\n\r\n    [EnumMember(Value = \",\")]\r\n    JustComma\r\n}\r\n[Fact]\r\npublic static void CamelCaseTextFlagEnumDeserialization()\r\n{\r\n    string json = @\"{\r\n  \"\"Enum\"\": \"\"first, second\"\"\r\n}\";\r\n    EnumContainer<FlagsTestEnum> c = JsonSerializer.Parse<EnumContainer<FlagsTestEnum>>(json, new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase });\r\n    Assert.Equal(FlagsTestEnum.First | FlagsTestEnum.Second, c.Enum);\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/37725","RelatedDescription":"Open issue \"Serialization/deserialization with camel case option not working for enum type\" (#37725)"},{"Id":"445122252","IsPullRequest":true,"CreatedAt":"2019-05-16T19:29:08","Actor":"Cojacfar","Number":"37724","RawContent":null,"Title":"PrintingServices.Unix.cs thread safety, Issue #24268","State":"open","Body":"Added locking to all writes to the Hashtable, as Hashtable supports multiple concurrent readers. Issue #24268\r\n\r\nThe getter is now this:\r\n```\r\nget\r\n            {\r\n                LoadPrinters();\r\n                PrinterSettings.StringCollection list = new PrinterSettings.StringCollection(Array.Empty<string>());\r\n                lock (installed_printers.SyncRoot)\r\n                {\r\n\r\n                    foreach (object key in installed_printers.Keys)\r\n                    {\r\n                        list.Add(key.ToString());\r\n                    }\r\n                    return list;\r\n                }\r\n            } ","Url":"https://github.com/dotnet/corefx/pull/37724","RelatedDescription":"Open PR \"PrintingServices.Unix.cs thread safety, Issue #24268\" (#37724)"},{"Id":"445114763","IsPullRequest":true,"CreatedAt":"2019-05-16T19:09:25","Actor":"wtgodbe","Number":"37723","RawContent":null,"Title":"Try using GetCurrentDomain rather than GetComputerDomain in Process test","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/37723","RelatedDescription":"Open PR \"Try using GetCurrentDomain rather than GetComputerDomain in Process test\" (#37723)"},{"Id":"445114717","IsPullRequest":false,"CreatedAt":"2019-05-16T19:09:19","Actor":"Wildenhaus","Number":"37722","RawContent":null,"Title":"Utf8JsonReader has ambiguous documentation for Get/TryGet methods","State":"open","Body":"As of 3.0-preview5, the current documentation for the Get*/TryGet* helper methods have ambiguous documentation that does not accurately reflect their behavior.\r\n\r\nhttps://github.com/dotnet/corefx/blob/d06ce9d2116cb4bda528822e63d32ce3735ea653/src/System.Text.Json/src/System/Text/Json/Reader/Utf8JsonReader.TryGet.cs#L413-L432\r\n\r\nThe summary states that the method will read the _next_ token and parse it. However, the current implementation parses the current token, not the next one in the document. This ambiguous language exists in the documentation for all Get*/TryGet* methods, and is made more confusing by the `Read()` function's documentation, which also states that it reads the next token in the document.\r\n\r\nGiven the current implementation, it may be helpful to fix the documentation to reflect the true behavior of these methods as well as implement additional methods that do in fact parse the next token instead of the current one. I am porting some Json.NET code and have wrapped all of these methods inside of extension methods to avoid having to call `Read()` before I parse each property value.","Url":"https://github.com/dotnet/corefx/issues/37722","RelatedDescription":"Open issue \"Utf8JsonReader has ambiguous documentation for Get/TryGet methods\" (#37722)"},{"Id":"445105017","IsPullRequest":true,"CreatedAt":"2019-05-16T18:45:01","Actor":"tarekgh","Number":"37721","RawContent":null,"Title":"Add Utc test to ensure creating only one instance","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/37721","RelatedDescription":"Open PR \"Add Utc test to ensure creating only one instance\" (#37721)"},{"Id":"445103330","IsPullRequest":false,"CreatedAt":"2019-05-16T18:40:29","Actor":"fitdev","Number":"37720","RawContent":null,"Title":"JsonElement.TryGetInt32 throws System.InvalidOperationException on nulls","State":"open","Body":"Presumably all the `JsonElement.TryGet...`s throw `System.InvalidOperationException` when encountering nulls, i.e. `{\"year\":null}` (and possibly in other cases as well). This is somewhat misleading, as Try APIs should not throw, but instead return false with the out variable initialized to its default value (0 for int) whenever error is encountered.","Url":"https://github.com/dotnet/corefx/issues/37720","RelatedDescription":"Open issue \"JsonElement.TryGetInt32 throws System.InvalidOperationException on nulls\" (#37720)"},{"Id":"445094264","IsPullRequest":true,"CreatedAt":"2019-05-16T18:17:29","Actor":"JeremyKuhne","Number":"37718","RawContent":null,"Title":"Add readonly modifiers to SequenceReader.","State":"open","Body":"Clearly marking where we don't mutate faciliates passing stack allocated spans and allows composing additional helpers that also want to describe that they don't mutate.\r\n\r\nAlso expand on a rewind test.","Url":"https://github.com/dotnet/corefx/pull/37718","RelatedDescription":"Open PR \"Add readonly modifiers to SequenceReader.\" (#37718)"},{"Id":"445093704","IsPullRequest":true,"CreatedAt":"2019-05-16T18:16:05","Actor":"wtgodbe","Number":"37717","RawContent":null,"Title":"Test GetComputerDomain - DO NOT MERGE","State":"open","Body":"`GetComputerDomain()` is throwing a `System.Security.Authentication.AuthenticationException` in https://github.com/dotnet/corefx/issues/37082 - testing that method in isolation to see if it repros across different platforms. Don't merge this.","Url":"https://github.com/dotnet/corefx/pull/37717","RelatedDescription":"Open PR \"Test GetComputerDomain - DO NOT MERGE\" (#37717)"},{"Id":"445085485","IsPullRequest":true,"CreatedAt":"2019-05-16T17:59:05","Actor":"Dotnet-GitSync-Bot","Number":"37716","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corefx/pull/37716","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#37716)"},{"Id":"445062770","IsPullRequest":true,"CreatedAt":"2019-05-16T16:57:57","Actor":"dotnet-maestro-bot","Number":"37714","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @mmitche\n* @wtgodbe\n* @dotnet-bot\n* @rmkerr\n* @davidsh\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/37714","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#37714)"},{"Id":"445050948","IsPullRequest":true,"CreatedAt":"2019-05-16T16:29:55","Actor":"watfordgnf","Number":"37713","RawContent":null,"Title":"Throw ArgumentException in JsonSerializer if ReadCommentHandling is Allow #37634","State":"open","Body":"This adds a check to JsonSerializer.Parse and JsonSerializer.ReadAsync which throws an ArgumentException if ReadCommentHandling is Allow. This fixes #37634 which describes the confusing case where Allow was supported if the JSON was simple enough to not use JsonDocument.TryParse internally during deserialization. The current implementation mimics that of JsonDocument, however, the check could instead be moved to JsonSerializerOptions.ReadCommentHandling's setter.","Url":"https://github.com/dotnet/corefx/pull/37713","RelatedDescription":"Open PR \"Throw ArgumentException in JsonSerializer if ReadCommentHandling is Allow #37634\" (#37713)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"445242672","IsPullRequest":true,"CreatedAt":"2019-05-17T02:58:25","Actor":"dibarbet","Number":"35781","RawContent":null,"Title":"Copy liveshare client into external access","State":"open","Body":"Feature branch.\r\nCopy the client side handlers from liveshare to external access.\r\n\r\nNote that everything in the external access project is just a straight copy of the liveshare client side implementation, with very minor changes where necessary to get them working inside roslyn.  The client side will be removed as soon as possible (once the content type issue with liveshare and razor is resolved).  These have been working for over a year already.\r\n\r\nAlso made a couple fixes to goto def and code actions on the server side to fix issues with older liveshare implementations.\r\n\r\nTODO - Pull in fix for gotodef, find references once liveshare removes dependencies.","Url":"https://github.com/dotnet/roslyn/pull/35781","RelatedDescription":"Open PR \"Copy liveshare client into external access\" (#35781)"},{"Id":"445207439","IsPullRequest":true,"CreatedAt":"2019-05-17T02:30:07","Actor":"dotnet-bot","Number":"35778","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35778","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#35778)"},{"Id":"444744969","IsPullRequest":true,"CreatedAt":"2019-05-17T02:00:10","Actor":"dotnet-bot","Number":"35754","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35754","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#35754)"},{"Id":"445218238","IsPullRequest":true,"CreatedAt":"2019-05-17T00:54:31","Actor":"gafter","Number":"35780","RawContent":null,"Title":"Elide an emit optimization that produces bad code near a stackalloc.","State":"open","Body":"Fixes #35764\r\nAlso fix the type of a bound node (argument to a ctor) so it agrees with the corresponding parameter.\r\n\r\n@jcouv @jaredpar Should this be patched on some other branch?\r\n","Url":"https://github.com/dotnet/roslyn/pull/35780","RelatedDescription":"Open PR \"Elide an emit optimization that produces bad code near a stackalloc.\" (#35780)"},{"Id":"445215421","IsPullRequest":true,"CreatedAt":"2019-05-17T00:39:32","Actor":"ivanbasov","Number":"35779","RawContent":null,"Title":"Go to base - adding to UI","State":"open","Body":"Fixes #20383\r\nAdds https://github.com/dotnet/roslyn/pull/35704 to the UI","Url":"https://github.com/dotnet/roslyn/pull/35779","RelatedDescription":"Open PR \"Go to base - adding to UI\" (#35779)"},{"Id":"445207367","IsPullRequest":true,"CreatedAt":"2019-05-17T00:16:25","Actor":"dotnet-bot","Number":"35777","RawContent":null,"Title":"Merge release/dev16.2-preview1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.2-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35777","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview1-vs-deps to master-vs-deps\" (#35777)"},{"Id":"444915129","IsPullRequest":true,"CreatedAt":"2019-05-16T23:56:34","Actor":"dotnet-bot","Number":"35761","RawContent":null,"Title":"Merge release/dev16.2-preview1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.2-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35761","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview1-vs-deps to master-vs-deps\" (#35761)"},{"Id":"445200290","IsPullRequest":false,"CreatedAt":"2019-05-16T23:27:08","Actor":"chborl","Number":"35776","RawContent":null,"Title":"\"Create and initialize field or property\" from constructor parameter should remove naming styles from parameter before creating field/property name","State":"open","Body":"**Steps to Reproduce**:\r\n\r\n1.  In Tools|Options create a naming rule for parameters to begin with `param_` and another naming rule for fields to begin with `field_`\r\n2. In IDE, enter this code\r\n```csharp\r\nclass C\r\n    {\r\n        public C(int param_v)\r\n        {\r\n        }\r\n    }\r\n```\r\n3. Place cursor on `param_v` and Ctrl+.\r\n\r\n**Expected Behavior**:\r\nShould offer to \"Create and initialize field `field_v`\"\r\n\r\n**Actual Behavior**:\r\nOffers to \"Create and initialize field `field_param_v`\r\n![image](https://user-images.githubusercontent.com/25776963/57893225-f1914380-77f6-11e9-851f-41aae34993a2.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/35776","RelatedDescription":"Open issue \"\"Create and initialize field or property\" from constructor parameter should remove naming styles from parameter before creating field/property name\" (#35776)"},{"Id":"445195211","IsPullRequest":false,"CreatedAt":"2019-05-16T23:05:32","Actor":"chborl","Number":"35775","RawContent":null,"Title":"Add parameters to constructor should respect naming style in new parameter name","State":"open","Body":"**Steps to Reproduce**:\r\n\r\n1. In tools | Options, add a naming rule to require `_` as a prefix for parameters\r\n2. Enter this code in IDE:\r\n```csharp\r\n class C\r\n    {\r\n        private int v;\r\n        public C()\r\n        {\r\n        }\r\n    }\r\n```\r\n3. Select the `v` in `private int v;` and Ctrl+.\r\n\r\n**Expected Behavior**:\r\nWhen selecting `Add Parameter to C()` it should offer to add 'int _v' as the parameter\r\n\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/25776963/57892455-c9ecac00-77f3-11e9-8fe6-7ea1ec056167.png)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35775","RelatedDescription":"Open issue \"Add parameters to constructor should respect naming style in new parameter name\" (#35775)"},{"Id":"445183561","IsPullRequest":false,"CreatedAt":"2019-05-16T23:03:55","Actor":"NTaylorMullen","Number":"35774","RawContent":null,"Title":"RegisterOperationAction is not triggering for nested await/invocations","State":"closed","Body":"**Version Used**: \r\nI'm assuming you need the dotnet CLI info since the analyzer is running from that C# version\r\n\r\ndotnet --info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\GitHub\\AspNetCore\\.dotnet\\x64\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27706-03\r\n  Commit:  66f7e1a107\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [C:\\GitHub\\AspNetCore\\.dotnet\\x64\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\GitHub\\AspNetCore\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\GitHub\\AspNetCore\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\GitHub\\AspNetCore\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27706-03 [C:\\GitHub\\AspNetCore\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\GitHub\\AspNetCore\\.dotnet\\x64\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. `git clone https://github.com/aspnet/AspNetCore.git` (and go into the directory)\r\n2. `git checkout nimullen/operationactionbug`\r\n2.5. If you want to use the same dotnet CLI as in this bug you can do `. activate` at the root of `AspNetCore`\r\n3. `cd src/Mvc`\r\n4. Run `./build.cmd`\r\n5. `cd Mvc.Analyzers\\src`\r\n6. `dotnet pack`\r\n7. Put the package in a local package source somewhere\r\n8. Restore this app with that package source in scope: [AnalyzerTest.zip](https://github.com/dotnet/roslyn/files/3189193/AnalyzerTest.zip)\r\n9. Run `dotnet build --no-incremental` on the project, wait for the debug dialog to pop up and attach.\r\n10. Add a breakpoint inside of the:\r\n```\r\ncontext.RegisterOperationAction(context =>\r\n{\r\n    Debugger.Launch();\r\n}, OperationKind.Await, OperationKind.Invocation);\r\n```\r\n11. Hit F5\r\n\r\n\r\n**Expected Behavior**:\r\n`RegisterOperationAction` callback gets called for all of the awaits/invocations in `ExampleClass.g.cs`\r\n\r\n**Actual Behavior**:\r\n`RegisterOperationAction` callback never gets called","Url":"https://github.com/dotnet/roslyn/issues/35774","RelatedDescription":"Closed issue \"RegisterOperationAction is not triggering for nested await/invocations\" (#35774)"},{"Id":"445183532","IsPullRequest":false,"CreatedAt":"2019-05-16T22:19:03","Actor":"cston","Number":"35773","RawContent":null,"Title":"Track nullability of deeply-nested struct members","State":"open","Body":"Consider tracking nullability of `struct` members at arbitrary depth.\r\n\r\n```C#\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        (((((string x5, string y5) x4, string y4) x3,\r\n            string y3) x2, string y2) x1, string y1) t = default;\r\n\r\n        t.x1.x2.x3.x4.x5.ToString(); // warning on x5?\r\n    }\r\n}\r\n```\r\nSee https://github.com/dotnet/roslyn/pull/35720#discussion_r284911184","Url":"https://github.com/dotnet/roslyn/issues/35773","RelatedDescription":"Open issue \"Track nullability of deeply-nested struct members\" (#35773)"},{"Id":"445171570","IsPullRequest":true,"CreatedAt":"2019-05-16T21:38:55","Actor":"gafter","Number":"35772","RawContent":null,"Title":"When building a decision dag, recognize special CLR behavior of arrays.","State":"open","Body":"Fixes #35661","Url":"https://github.com/dotnet/roslyn/pull/35772","RelatedDescription":"Open PR \"When building a decision dag, recognize special CLR behavior of arrays.\" (#35772)"},{"Id":"445165385","IsPullRequest":false,"CreatedAt":"2019-05-16T21:20:46","Actor":"ryzngard","Number":"35771","RawContent":null,"Title":"Generate all overrides for Object when generating new class","State":"open","Body":"`ToString`, `Equals`, and `GetHashCode`\r\n\r\nEither a quick action, or setting to have these generated with `add class` ","Url":"https://github.com/dotnet/roslyn/issues/35771","RelatedDescription":"Open issue \"Generate all overrides for Object when generating new class\" (#35771)"},{"Id":"445140963","IsPullRequest":false,"CreatedAt":"2019-05-16T20:18:07","Actor":"NTaylorMullen","Number":"35770","RawContent":null,"Title":"Suppport local functions, anonymous methods and lambdas in Analyzers RegisterSymbolStartAction(..., SymbolKind.Method)","State":"open","Body":"Was just playing around with Analyzers and found that when I do:\r\n\r\n```C#\r\ncontext.RegisterSymbolStartAction(context =>\r\n{\r\n    var method = (IMethodSymbol)context.Symbol;\r\n\r\n    Console.WriteLine(method.Name);\r\n\r\n}, SymbolKind.Method);\r\n```\r\n\r\nIt never gets called for local functions, anonymous methods or lambdas. Given that those three types eventually get represented with an `IMethodSymbol` it'd be great if they were hooked up similarly to method declarations within the `RegisterSymbolStartAction`.\r\n\r\nI'm attempting to locate method-like bodies (method declarations, local functions, anonymous methods and lambdas), if they're not async, look for async invocations inside of them, if an await XYZ exist, log a specialized error on the parent method signature. I can do this today by going bottom up, looking for awaits and then seeing if they're contained in a non-async method; however, I'd rather not visit every expression/await statement in the project.","Url":"https://github.com/dotnet/roslyn/issues/35770","RelatedDescription":"Open issue \"Suppport local functions, anonymous methods and lambdas in Analyzers RegisterSymbolStartAction(..., SymbolKind.Method)\" (#35770)"},{"Id":"445075972","IsPullRequest":false,"CreatedAt":"2019-05-16T17:31:43","Actor":"AlekseyTs","Number":"35769","RawContent":null,"Title":"Use of reabstraction of default interface methods on Mono causes System.TypeLoadException: VTable setup of type failed","State":"open","Body":"The underlying Mono issue is tracked by https://github.com/mono/mono/issues/14495","Url":"https://github.com/dotnet/roslyn/issues/35769","RelatedDescription":"Open issue \"Use of reabstraction of default interface methods on Mono causes System.TypeLoadException: VTable setup of type failed\" (#35769)"},{"Id":"445066740","IsPullRequest":false,"CreatedAt":"2019-05-16T17:07:37","Actor":"JranZu","Number":"35768","RawContent":null,"Title":"IDE0060 shown on unimplemented methods","State":"open","Body":"Starting with VS 2019 I am seeing IDE0060 for methods that contain only new NotImplementedException().  These place holder methods should not show this message.","Url":"https://github.com/dotnet/roslyn/issues/35768","RelatedDescription":"Open issue \"IDE0060 shown on unimplemented methods\" (#35768)"},{"Id":"445066024","IsPullRequest":false,"CreatedAt":"2019-05-16T17:05:46","Actor":"JranZu","Number":"35767","RawContent":null,"Title":"IDE0051 on private json constructors","State":"open","Body":"After moving to VS 2019 I started seeing IDE0051 showing up on all of my private JSON constructors.  This should not be shown or there should be an easy way to disable this.","Url":"https://github.com/dotnet/roslyn/issues/35767","RelatedDescription":"Open issue \"IDE0051 on private json constructors\" (#35767)"},{"Id":"445059848","IsPullRequest":false,"CreatedAt":"2019-05-16T16:51:04","Actor":"abhijitparkhi1983","Number":"35766","RawContent":null,"Title":"How to use MSBuildWorkspace on Ubuntu","State":"open","Body":"**Version Used:**\r\n.NET CLI version 2.8.2\r\n\r\n**Steps to Reproduce:**\r\n\r\n1. I am trying to Analyze each document of a .csproj. For this purpose, i am using various API's provided by Roslyn Compiler.\r\n2. I already had an application developed in .NET Framework which utilizes the MSBuildWorkspace class for loading the .csproj files and then their respective .cs files using the following code:\r\n```\r\nusing (var workspace = MSBuildWorkspace.Create())\r\n{\r\n      Project currentProject = workspace.OpenProjectAsync(projectPath).Result;\r\n       workspace.LoadMetadataForReferencedProjects = true;\r\n       if (currentProject.HasDocuments)\r\n       {\r\n           foreach(Document document in currentProject.Documents)\r\n           {\r\n                  var name = document.Name;\r\n            }\r\n        }\r\n}\r\n\r\n```\r\n\r\n3. The above code works well on a Windows machine for both .NET Framework based .csproj's and .NET Core based .csrpoj's input projects.\r\n\r\n4. I had a new requirement for supporting the same application on Ubuntu 16.4 environment. As per my research on different forums related to Roslyn, writing the above .NET Framework based code using .NET Core can help in running the application on Ubuntu as well . But obviously, .NET Core does not support MSBuildWorkspace out of the box is what the research suggested.\r\n\r\n5. How can i use **MSBuildWorkspace**  on Ubuntu OR What is the alternative for using **MSBuildWorkspace** ?","Url":"https://github.com/dotnet/roslyn/issues/35766","RelatedDescription":"Open issue \"How to use MSBuildWorkspace on Ubuntu\" (#35766)"},{"Id":"445047912","IsPullRequest":true,"CreatedAt":"2019-05-16T16:22:55","Actor":"cston","Number":"35765","RawContent":null,"Title":"Track nullability of struct properties that are not auto-properties","State":"open","Body":"Fixes #29619","Url":"https://github.com/dotnet/roslyn/pull/35765","RelatedDescription":"Open PR \"Track nullability of struct properties that are not auto-properties\" (#35765)"},{"Id":"445042986","IsPullRequest":false,"CreatedAt":"2019-05-16T16:11:42","Actor":"jkotas","Number":"35764","RawContent":null,"Title":"Invalid IL generated for stackalloc assigned to Span","State":"open","Body":"3.2.0-beta1-19253-08\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Compile System.Private.CoreLib\r\n\r\n**Expected Behavior**:\r\n\r\nValid IL generated for `Environment.GetEnvironmentVariableCore` method\r\n\r\n**Actual Behavior**:\r\n\r\nInvalid IL generated for `Environment.GetEnvironmentVariableCore` method\r\n\r\nThe ECMA spec requires that IL stack is empty, apart from the size item, for localloc instruction.\r\n\r\nDetails in https://github.com/dotnet/coreclr/pull/24369#issuecomment-493130547","Url":"https://github.com/dotnet/roslyn/issues/35764","RelatedDescription":"Open issue \"Invalid IL generated for stackalloc assigned to Span\" (#35764)"},{"Id":"444960993","IsPullRequest":false,"CreatedAt":"2019-05-16T13:46:46","Actor":"maurei","Number":"35763","RawContent":null,"Title":"Aspnetcore allowing HashSet<T> -> IList casting ","State":"closed","Body":"**Version**\r\nRoslyn compiler 2.0\r\n\r\n**Current behaviour**\r\nCasting a `HashSet<T>` to `IList` fails at runtime, but is allowed by the compiler.\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\n\t\t\t\t\t\r\npublic class Program\r\n{\r\n\tpublic class C {}\r\n\r\n\tpublic static void Main()\r\n\t{\r\n\t\tvar hs = new HashSet<C>();\r\n\t\tvar list = (IList)(hs);\r\n\t}\r\n}\r\n```\r\n\r\n[See fiddle](https://dotnetfiddle.net/XSKbn7)\r\n\r\n**Expected behaviour**\r\nShouldn't compile\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35763","RelatedDescription":"Closed issue \"Aspnetcore allowing HashSet<T> -> IList casting \" (#35763)"},{"Id":"444956126","IsPullRequest":true,"CreatedAt":"2019-05-16T13:27:49","Actor":"mavasani","Number":"35762","RawContent":null,"Title":"Extract out the AnalyzerConfigDocument related changes from #35691","State":"open","Body":"This PR extracts out the AnalyzerConfigDocument related changes in the Workspaces/VS layer out of https://github.com/dotnet/roslyn/pull/35691. I have cherry-picked the first 4 and last 4 commits from that PR.","Url":"https://github.com/dotnet/roslyn/pull/35762","RelatedDescription":"Open PR \"Extract out the AnalyzerConfigDocument related changes from #35691\" (#35762)"},{"Id":"444904860","IsPullRequest":false,"CreatedAt":"2019-05-16T11:34:47","Actor":"GeertvanHorrik","Number":"35760","RawContent":null,"Title":"MSBuild throws 'Cannot modify an evaluated object'","State":"open","Body":"For the original ticket, see See https://github.com/microsoft/msbuild/issues/4376\r\n\r\n**Version Used**: \r\n\r\n16\r\n\r\n**Steps to Reproduce**:\r\n\r\nThis happens when running dotnet-format combined with msbuild-sdk-extras.\r\n\r\nFor example, run it on https://github.com/wildgums/orc.controls\r\n\r\n**Expected behavior**\r\n\r\nThe project should be loaded successfully (it can build, load, etc, but when running dotnet format, it fails.\r\n\r\n**Actual behavior**\r\n\r\nThe project should be loaded successfully (it can build, load, etc, but when running dotnet format, it fails.\r\n\r\nI've been investigating the source code, and found that it's correctly splitting multi-targeted builds, but then needs to re-check for the target version which it doesn't.\r\n\r\n![image](https://user-images.githubusercontent.com/1246444/57850842-44f79780-77df-11e9-9c97-7dc351546a13.png)\r\n\r\nSo it's trying to remove a property that's been added while re-evaluating the project. Then the code should check for the value again (it might have been set by the re-evaluation).\r\n\r\nI think the fix is to re-check for the property existence just before removing the property.","Url":"https://github.com/dotnet/roslyn/issues/35760","RelatedDescription":"Open issue \"MSBuild throws 'Cannot modify an evaluated object'\" (#35760)"},{"Id":"444892655","IsPullRequest":true,"CreatedAt":"2019-05-16T11:04:35","Actor":"filipw","Number":"35759","RawContent":null,"Title":"include exception type in CommonObjectFormatter for scripting/interactive","State":"open","Body":"At the moment the exception formatter swallows the exception type (doesn't show it anywhere in the formatted exception output). \r\n\r\nThis works reasonably well for most BCL exceptions, where the exception messages are mostly quite informative. However, for some of BCL types as well as tons of custom/3rd party code exceptions, where exception messages are often not of great quality, this is not ideal. The proposed change includes the exception type in the formatted exception output.\r\n\r\nAs a result, instead of\r\n\r\n```\r\n> string s = null;\r\n> \"foo\".IndexOf(s)\r\nValue cannot be null.\r\nParameter name: value\r\n  + string.IndexOf(string, int, int, System.StringComparison)\r\n  + string.IndexOf(string)\r\n```\r\n\r\nWe now get:\r\n\r\n```\r\n> string s = null;\r\n> \"foo\".IndexOf(s)\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: value\r\n  + string.IndexOf(string, int, int, System.StringComparison)\r\n  + string.IndexOf(string)\r\n```\r\n\r\nHere is an example with a custom exception. Instead of\r\n\r\n```\r\n>  var processor = new ItemProcessor();\r\n> processor.Process(item);\r\nError occurred\r\n  + ProcessingEngine.ItemProcessor.Process(object)\r\n```\r\n\r\nWe now get:\r\n\r\n```\r\n> var processor = new ItemProcessor();\r\n> processor.Process(item)\r\nProcessingEngine.StateValidationException: Error occurred\r\n  + ProcessingEngine.ItemProcessor.Process(object)\r\n```","Url":"https://github.com/dotnet/roslyn/pull/35759","RelatedDescription":"Open PR \"include exception type in CommonObjectFormatter for scripting/interactive\" (#35759)"},{"Id":"444882883","IsPullRequest":false,"CreatedAt":"2019-05-16T10:41:51","Actor":"HSyr","Number":"35758","RawContent":null,"Title":"Null-Conditional Operator used to call Dispose() causes CA2213","State":"open","Body":"Although `Dispose `is called (using Null-Conditional Operator) on `MemoryStream` I got warning _CA2213: Disposable fields should be disposed_ after running Code Analysis.\r\n\r\n```c#\r\npublic class DisposableTest : IDisposable\r\n{\r\n  public MemoryStream memoryStream = new MemoryStream();\r\n\r\n  public void Dispose ()\r\n  {\r\n    Dispose( true );\r\n    GC.SuppressFinalize( this );\r\n  }\r\n\r\n  protected virtual void Dispose ( bool disposing )\r\n  {\r\n    if ( disposing )\r\n      // Warning CA2213  'DisposableTest' contains field 'DisposableTest.memoryStream' that\r\n      // is of IDisposable type: 'MemoryStream'. Change the Dispose method on\r\n      // 'DisposableTest' to call Dispose or Close on this field.\r\n      memoryStream?.Dispose();\r\n  }\r\n}\r\n```\r\n\r\nVersion: Visual Studio Community 16.0.4","Url":"https://github.com/dotnet/roslyn/issues/35758","RelatedDescription":"Open issue \"Null-Conditional Operator used to call Dispose() causes CA2213\" (#35758)"},{"Id":"444764629","IsPullRequest":false,"CreatedAt":"2019-05-16T05:45:52","Actor":"JamesNK","Number":"35757","RawContent":null,"Title":"Unexpected nullability warning","State":"open","Body":"**Version Used**: \r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-011895\r\n Commit:    11245081d3\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-011895\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27715-03\r\n  Commit:  b0ecbd95b5\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile source code here - https://github.com/grpc/grpc-dotnet/blob/aa81c68bff297bfc9ec70367950b37e3791b4779/src/Grpc.NetCore.HttpClient/GrpcClientFactory.cs#L98-L112\r\n\r\n**Expected Behavior**:\r\n\r\nNo null related warning.\r\n\r\n**Actual Behavior**:\r\n\r\nReturning `LazyInitializer.EnsureInitialized`'s result from this property generates a CS8600 warning.","Url":"https://github.com/dotnet/roslyn/issues/35757","RelatedDescription":"Open issue \"Unexpected nullability warning\" (#35757)"},{"Id":"444744900","IsPullRequest":true,"CreatedAt":"2019-05-16T05:30:18","Actor":"dotnet-bot","Number":"35752","RawContent":null,"Title":"Merge release/dev16.2-preview1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.2-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35752","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview1-vs-deps to master-vs-deps\" (#35752)"},{"Id":"444744949","IsPullRequest":true,"CreatedAt":"2019-05-16T05:30:13","Actor":"dotnet-bot","Number":"35753","RawContent":null,"Title":"Merge release/dev16.2-preview1 to release/dev16.2-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview1 into release/dev16.2-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview1-to-release/dev16.2-preview1-vs-deps\ngit reset --hard upstream/release/dev16.2-preview1-vs-deps\ngit merge upstream/release/dev16.2-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview1-to-release/dev16.2-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35753","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview1 to release/dev16.2-preview1-vs-deps\" (#35753)"},{"Id":"444744992","IsPullRequest":true,"CreatedAt":"2019-05-16T05:30:06","Actor":"dotnet-bot","Number":"35755","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35755","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#35755)"},{"Id":"444753006","IsPullRequest":true,"CreatedAt":"2019-05-16T04:50:00","Actor":"AlekseyTs","Number":"35756","RawContent":null,"Title":" Support re-abstraction of interface members in derived interfaces","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35756","RelatedDescription":"Open PR \" Support re-abstraction of interface members in derived interfaces\" (#35756)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"445259095","IsPullRequest":true,"CreatedAt":"2019-05-17T04:26:35","Actor":"Dotnet-GitSync-Bot","Number":"7430","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @Anipik","Url":"https://github.com/dotnet/corert/pull/7430","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx,coreclr\" (#7430)"},{"Id":"445085554","IsPullRequest":true,"CreatedAt":"2019-05-17T04:25:54","Actor":"Dotnet-GitSync-Bot","Number":"7429","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7429","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7429)"},{"Id":"445072772","IsPullRequest":true,"CreatedAt":"2019-05-16T17:23:29","Actor":"trylek","Number":"7428","RawContent":null,"Title":"CPAOT support for large version bubble, take #2","State":"open","Body":"As I haven't found out how to reopen my original PR after reverting it, I have prepared a new one. In the first commit I have pushed the original change rebased to the preparatory change moving CanInline\r\nto CompilationModuleGroup. In the second commit I added logic for clean separation of input assembly set from the version bubble assembly set.\r\n\r\nEarlier in CPAOT development, we used to use CompilationModuleGroup.ContainsType / ContainsMethodBody for checking whether a given typesystem element belongs to either of these sets. To facilitate the separation I have added two new methods on CompilationModuleGroup, VersionsWithType and VersionsWithMethodBody. I audited all calls to ContainsMethodBody & ContainsType in the CPAOT codebase and I modified those querying the version bubble to call VersionsWithType/MethodBody instead.\r\n\r\nThanks\r\n\r\nTomas\r\n","Url":"https://github.com/dotnet/corert/pull/7428","RelatedDescription":"Open PR \"CPAOT support for large version bubble, take #2\" (#7428)"},{"Id":"444773127","IsPullRequest":true,"CreatedAt":"2019-05-16T13:56:26","Actor":"Dotnet-GitSync-Bot","Number":"7427","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7427","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7427)"},{"Id":"444513464","IsPullRequest":true,"CreatedAt":"2019-05-15T22:10:39","Actor":"jkotas","Number":"7426","RawContent":null,"Title":"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets","State":"closed","Body":"It is used by DumpNativeResources task in Microsoft.NETCore.Native.targets\r\n\r\nFixes #7425","Url":"https://github.com/dotnet/corert/pull/7426","RelatedDescription":"Closed or merged PR \"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets\" (#7426)"},{"Id":"444383256","IsPullRequest":false,"CreatedAt":"2019-05-15T22:10:39","Actor":"ctaggart","Number":"7425","RawContent":null,"Title":"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"","State":"closed","Body":"When I set `/p:NativeCompilationDuringPublish=false ` as described in [the documentation](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#disabling-native-compilation) and [recommended](https://github.com/dotnet/corert/issues/258#issuecomment-492331206), I get this error:\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r ubuntu.16.04-x64 -c Release /p:NativeCompilationDuringPublish=false\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-02/build/Microsoft.NETCore.Native.targets(301,45): error MSB4022: The result \"\" of evaluating the value \"$(IlcBuildTasksPath)\" of the \"AssemblyFile\" attribute in element <UsingTask> is not valid. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nAs a work-a-round I'm going to try a variation of [another way to disable the ILCompiler](https://github.com/dotnet/corert/issues/258#issuecomment-492331624).","Url":"https://github.com/dotnet/corert/issues/7425","RelatedDescription":"Closed issue \"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"\" (#7425)"},{"Id":"444137558","IsPullRequest":true,"CreatedAt":"2019-05-15T15:45:52","Actor":"jkotas","Number":"7424","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7424","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7424)"},{"Id":"444029647","IsPullRequest":true,"CreatedAt":"2019-05-14T21:13:10","Actor":"Dotnet-GitSync-Bot","Number":"7423","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @cshung @sywhang @tannergooding","Url":"https://github.com/dotnet/corert/pull/7423","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7423)"},{"Id":"441935856","IsPullRequest":true,"CreatedAt":"2019-05-14T20:38:16","Actor":"trylek","Number":"7410","RawContent":null,"Title":"SuperIlc support for the issues.targets file","State":"closed","Body":"This change implements a new option --issues-path that can be used\r\nto specify the path to explicit CoreCLR test exclusion XML file.\r\nThis is useful when running CoreCLR test suites so that we filter\r\nout tests known to be failing or hanging and thus reduce noise in\r\nour CPAOT results.\r\n\r\nAs the issues.targets is technically an msbuild project file, I have\r\nleveraged MSBuild interface libraries to evaluate the conditional\r\nexpressions in the file much like we do in .NET Native when evaluating\r\nthe bugdata.ProjectN.xml file. For now I have set many of the project\r\nproperties to arbitrary values, that's up to further cleanup once\r\nwe start expanding our targeting matrix.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7410","RelatedDescription":"Closed or merged PR \"SuperIlc support for the issues.targets file\" (#7410)"},{"Id":"443016643","IsPullRequest":true,"CreatedAt":"2019-05-14T17:01:52","Actor":"trylek","Number":"7415","RawContent":null,"Title":"Move CanInline to CompilationModuleGroup","State":"closed","Body":"As a preparatory change towards adding support for large version\r\nbubble to CPAOT I'm proposing to move CanInline from Compilation to\r\nCompilationModuleGroup in accordance with Simon's and Michal's\r\nfeedback - this refactoring will make it much easier to decouple\r\nthe set of assemblies being compiled from the set of assemblies\r\nwe can inline against (in large version bubble mode anything\r\ncan be inlined).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7415","RelatedDescription":"Closed or merged PR \"Move CanInline to CompilationModuleGroup\" (#7415)"},{"Id":"443994361","IsPullRequest":false,"CreatedAt":"2019-05-14T16:25:03","Actor":"ctaggart","Number":"7422","RawContent":null,"Title":"RhpETWLogLiveCom error on Debian 9 build","State":"closed","Body":"I got `dotnet publish -r win-x64`  working on Windows for my project, but when I try to build from `mcr.microsoft.com/dotnet/core/sdk:2.2.203-stretch` docker image, I get an error about `RhpETWLogLiveCom` missing.\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 54.08 ms for /src/Shirley/Shirley.fsproj.\r\n  Shirley -> /src/Shirley/bin/release/netcoreapp2.2/linux-x64/Shirley.dll\r\n  /usr/bin/clang-3.9\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(ReadOnlySpan`1<char>)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(System.ReadOnlySpan`1<Char>) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32,Encoding)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32, System.Text.Encoding) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[],int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[], Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[])` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[]) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `[S.P.CoreLib]System.Activator.CreateInstanceIntrinsic<__Canon>()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.__Canon System.Activator.CreateInstanceIntrinsic() [/src/Shirley/Shirley.fsproj]\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWShouldWalkCom':\r\n  (__managedcode+0x613573): undefined reference to `RhpETWShouldWalkCom'\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWLogLiveCom':\r\n  (__managedcode+0x61359b): undefined reference to `RhpETWLogLiveCom'\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/src/Shirley/Shirley.fsproj]\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.2/linux-x64/native/Shirley.o\" -o \"bin/release/netcoreapp2.2/linux-x64/native/Shirley\" /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libbootstrapper.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libRuntime.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.CoreLib.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.TypeLoader.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Globalization.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.IO.Compression.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Net.Security.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt\" exited with code 1. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nBased on https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md, I installed clang with:\r\n```\r\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\r\necho \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" | tee -a /etc/apt/sources.list\r\napt-get update\r\napt-get install cmake clang-3.9 libicu-dev uuid-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev -y\r\n```\r\n\r\nThe CoreRT version is:\r\n```\r\n      \"Microsoft.DotNet.ILCompiler\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.0-alpha-*, )\",\r\n        \"resolved\": \"1.0.0-alpha-27714-01\",\r\n        \"contentHash\": \"Xa2TzZJKoyhMJF7rx+/WjXYOYfQEprdr6CGptdQ0ix4kVI2icYJQnbm+TALQHfb9okW0X3ebNrlPxXhJW461Qw==\"\r\n      },\r\n```\r\n\r\nI noticed this import here and noticed it hasn't been changed in a while.\r\nhttps://github.com/dotnet/corert/blame/master/src/System.Private.CoreLib/src/System/Runtime/RuntimeImports.cs#L724-L729\r\n\r\nAm I missing a dependency?\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7422","RelatedDescription":"Closed issue \"RhpETWLogLiveCom error on Debian 9 build\" (#7422)"},{"Id":"443767461","IsPullRequest":false,"CreatedAt":"2019-05-14T08:04:14","Actor":"mariopasquali","Number":"7421","RawContent":null,"Title":"Compiling ARM on x64","State":"open","Body":"Hi all,\r\n\r\nIt is a few weeks I am trying to set up an environment for compiling a Linux-ARM executable on a x64 machine, without much luck for now.  \r\n\r\nI have set up multiple machines including Debian 9, Ubuntu 16, Ubuntu 18, all 64-bits, even tried with 32-bits versions.  I am currently working on a Ubuntu 16 x64.  Probably an obvious question, but could someone confirm this is supported for compiling an ARM32 output?\r\n\r\nThere are a few possible typos in the following document that are possibly confusing:\r\nhttps://github.com/dotnet/corert/blob/master/Documentation/cross-building.md\r\n\r\n- `\"In addition, to cross compile CoreCLR\"` should it be CoreRT?\r\n- `\"Cross compiling CoreCLR\"` should it be CoreRT?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/\"` should it be corert?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/arm ./build.sh\"` should it be corert?\r\n\r\nAnother aspect that I didn't get right is the section \"Using CoreRT for cross compiling under arm on x86 host\".  Is this the section applying to my case where I whish building an output for ARM32 on x86?  If yes, then when would the previous section \"Cross compiling CoreCLR\" apply?\r\n\r\nA few more remarks on the section \"Using CoreRT for cross compiling under arm on x86 host\":\r\n- The steps for \"Build CoreFX\" seems outdated.  Should probably by updated with https://github.com/dotnet/corefx/blob/master/Documentation/building/cross-building.md.  \r\n- `\"./build.sh x86 debug verbose cross crosstarget skiptests\"` There is no parameter crosstarget in build.sh as far as I can see.  Is this outdated?  I am running into various issues when trying to run this step without \"crosstarget\" parameter, like file not found of ConstrainedCallSupportHelpers.S, `\"GetUnwindProcInfo is not supported on this arch yet.\"`, etc.\r\n- Regarding step 4, it would be helpful to give examples of the variables.  What is supposed to be ${WORKING_DIR}?  The output of the application that should be compiled?\r\n\r\nThank you,\r\nMario ","Url":"https://github.com/dotnet/corert/issues/7421","RelatedDescription":"Open issue \"Compiling ARM on x64\" (#7421)"},{"Id":"442385927","IsPullRequest":true,"CreatedAt":"2019-05-14T05:35:48","Actor":"Dotnet-GitSync-Bot","Number":"7412","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7412","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7412)"},{"Id":"443568119","IsPullRequest":true,"CreatedAt":"2019-05-14T03:14:10","Actor":"jkotas","Number":"7418","RawContent":null,"Title":"Opt-in more Windows PInvokes into direct calls","State":"closed","Body":"Fixes intermittent infinited recursion inside lazy PInvoke resolver","Url":"https://github.com/dotnet/corert/pull/7418","RelatedDescription":"Closed or merged PR \"Opt-in more Windows PInvokes into direct calls\" (#7418)"},{"Id":"443634094","IsPullRequest":true,"CreatedAt":"2019-05-14T03:13:57","Actor":"JohnTortugo","Number":"7419","RawContent":null,"Title":"Update xplat-job.yml","State":"closed","Body":"Relates to: https://github.com/dotnet/core-eng/issues/6291\r\n\r\n/cc @MattGal ","Url":"https://github.com/dotnet/corert/pull/7419","RelatedDescription":"Closed or merged PR \"Update xplat-job.yml\" (#7419)"},{"Id":"443662831","IsPullRequest":true,"CreatedAt":"2019-05-14T03:02:47","Actor":"MichalStrehovsky","Number":"7420","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7420","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#7420)"},{"Id":"441964184","IsPullRequest":true,"CreatedAt":"2019-05-13T19:45:58","Actor":"nattress","Number":"7411","RawContent":null,"Title":"Add SuperIlc compile-nuget command","State":"closed","Body":"Add support for compiling assemblies from Nuget packages with Crossgen / CPAOT to validate them on real-world code. The compile-nuget command takes a list of Nuget packages and for each package creates an empty console app, adds the package to the app, publishes, and then runs Crossgen / CPAOT. This initial command does not run the app and is meant for gathering data on noisiness of compile logs, ensuring compilation regressions don't happen, tracking ready-to-run binary sizes, etc.\r\n\r\nTop100Nuget.txt is provided as an example, and contains the 100 most popular Nuget packages on nuget.org as of this commit.","Url":"https://github.com/dotnet/corert/pull/7411","RelatedDescription":"Closed or merged PR \"Add SuperIlc compile-nuget command\" (#7411)"},{"Id":"443059474","IsPullRequest":true,"CreatedAt":"2019-05-13T17:38:45","Actor":"Suchiman","Number":"7416","RawContent":null,"Title":"Port GC changes from coreclr - 8","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7389\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/1e11b32ca720f886adfa0cc2a6a46829feba78d0):**\r\n- https://github.com/dotnet/coreclr/commit/0ee3b5e64a98dc71aefed2304fe4bcf7f66ca9f5 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d23a2bc131eae32c473e39fcb3b640af1a95d244 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/dda6b6136e21901842758970d831f31687913a35 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/e7725a6ff986879f8ff2fd9e09ab636545ba7bca (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3a24095610ecaba62495740bf8319ad467af4997 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3bd82d1935806a87d668f4ea102de37077996005 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8b8231291ded137c49632ef808bbbdc9a500507b (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0372174871c1e27f483c9877c2c5181720be8722 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/df214e67d3cbccb42d2733f4cbe8097a378a731a (skipped)\r\n- https://github.com/dotnet/coreclr/commit/8415a8933844c9d92c435f6ac268612a9563eb3a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/5e82b75a22e9f1ee379beab45c2ddc6146132aab (gc only port)\r\n\r\n**Points of interest**:\r\nhttps://github.com/dotnet/coreclr/commit/d23a2bc131eae32c473e39fcb3b640af1a95d244 made some changes to volatile on the runtime side that i've only partially applied\r\nI've skipped the patch for `Add CGroup CFS CPU limit support` because cgroups support is missing","Url":"https://github.com/dotnet/corert/pull/7416","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 8\" (#7416)"},{"Id":"443513642","IsPullRequest":false,"CreatedAt":"2019-05-13T17:21:02","Actor":"ctaggart","Number":"7417","RawContent":null,"Title":"Please provide a .vsconfig","State":"open","Body":"Please provide a .vsconfig with the minimal required Visual Studio 2019 dependencies needed to build. For an example, see:\r\n\r\nhttps://github.com/microsoft/visualfsharp/blob/master/.vsconfig\r\n\r\nRight now the experience is:\r\n```\r\nPS C:\\Users\\taggac\\github\\corert> .\\build.cmd\r\nChecking pre-requisites...\r\n\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.1.0-pre.3.0\r\n** Copyright (c) 2019 Microsoft Corporation\r\n**********************************************************************\r\nCould not find Visual C++ under C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\. Visual C++ is a pre-requisite to build this repository.\r\nSee: https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md\r\n```\r\n\r\nI'd like to be able to open a solution and have Visual Studio prompt to install all the dependencies via Visual Studio Installer.","Url":"https://github.com/dotnet/corert/issues/7417","RelatedDescription":"Open issue \"Please provide a .vsconfig\" (#7417)"},{"Id":"442915094","IsPullRequest":true,"CreatedAt":"2019-05-11T21:57:05","Actor":"nattress","Number":"7414","RawContent":null,"Title":"Clean publish test output folders before run","State":"closed","Body":"Incremental build was hiding failures in our local enlistments that only CI would catch due to it always starting with a fresh enlistment.","Url":"https://github.com/dotnet/corert/pull/7414","RelatedDescription":"Closed or merged PR \"Clean publish test output folders before run\" (#7414)"},{"Id":"442866699","IsPullRequest":true,"CreatedAt":"2019-05-10T21:13:18","Actor":"trylek","Number":"7413","RawContent":null,"Title":"Revert \"Initial CPAOT support for large version bubble\"","State":"closed","Body":"Reverts dotnet/corert#7403","Url":"https://github.com/dotnet/corert/pull/7413","RelatedDescription":"Closed or merged PR \"Revert \"Initial CPAOT support for large version bubble\"\" (#7413)"},{"Id":"440872069","IsPullRequest":true,"CreatedAt":"2019-05-09T21:14:25","Actor":"trylek","Number":"7403","RawContent":null,"Title":"Initial CPAOT support for large version bubble","State":"closed","Body":"This change modifies the existing --inputbubble CPAOT option\r\nto work the same as Crossgen /largeversionbubble i.e. the main module\r\nand all reference assemblies are considered to belong to the same\r\nversion bubble.\r\n\r\nThe gist of the change deals with encoding module overrides in\r\nsignatures. I have implemented a new R2R header table\r\nManifestMetadataTableNode and added logic for composing and emitting\r\nthe extra AssemblyRef list.\r\n\r\nOne challenging bit was that we need to emit all the signatures before\r\nemitting the ManifestMetadataTableNode because only the emission\r\nof the signatures shakes out all the required AssemblyRef's. I have\r\nadded a simple loop to ImportSectionsTableNode / ImportSectionNode\r\nthat traverses and emits all registered import cell signatures.\r\n\r\nAfter I managed to make the basic signature emission work with module\r\noverride, I continued hitting issues with the two entrypoint tables.\r\nFor the (non-generic) method entrypoint table we need to filter out\r\nmethods outside of the current input module because the larger\r\ncompilation group representing the larger version bubble ends up\r\nexpanding the dependency graph to framework methods.\r\n\r\nWhile these \"external\" methods are not compiled into the output\r\nexecutable (except when they are occasionally inlined into a local\r\nmethod), we were still trying to emit them into the entrypoint\r\ntable and we were crashing compilation because we couldn't find\r\nsome of the necessary tokens.\r\n\r\nFor instance entrypoints, I didn't find any manner of encoding\r\na module override for their signatures in the native hashtable so\r\nfor now I added filtering that we're only storing those instance\r\nentrypoints that have the current input module as the reference\r\nmodule. One can theoretically imagine that a module may contain\r\narbitrary generic instantiations spanning other modules when\r\nlarger bubbles are on.\r\n\r\nWhile working on the change I also realized that the current way\r\nof basing signature contexts on input modules in CorInfoImpl.ReadyToRun\r\nwas incorrect - when a method gets inlined, we still need the original\r\nsignature context because that's what defines the ambient module\r\nused in the CoreCLR signature parser.\r\n\r\nI have deleted the field and instead I added a new method\r\nGetSignatureContext which currently returns\r\nReadyToRunCoregenNodeFactory.InputModuleContext. Once we start\r\nimplementing \"single-file\" (i.e. compiling multiple MSIL modules\r\ninto a single PE), we'll change this to something more fine-grained,\r\nmost likely based on some lookup on MethodBeingCompiled.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7403","RelatedDescription":"Closed or merged PR \"Initial CPAOT support for large version bubble\" (#7403)"},{"Id":"441809686","IsPullRequest":false,"CreatedAt":"2019-05-08T20:23:21","Actor":"danwalmsley","Number":"7408","RawContent":null,"Title":"UWP .net Native Internal Compiler Error.","State":"closed","Body":"Sorry if this is the wrong place for .net native and UWP compile errors.\r\n\r\nI have a UWP app, and we have been using debug mode during develop. We are trying to build in release mode with .net native toolchain (this is quite important for us to get the high performance.)\r\n\r\nHowever we get an internal compiler error:\r\n```\r\n8>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\AppxPackage\\Microsoft.AppXPackage.Targets(3164,5): warning : APPX4001: Build property AppxBundlePlatforms is not explicitly set and is calculated based on currently building architecture. Use 'Create App Package' wizard or edit project file to set it.\r\n8>  Processing application code\r\n8>  Computing application closure and generating interop code\r\n8>    Loading 121 modules...\r\n8>    Generating code...\r\n8>    Interop code generated.\r\n8>  Generating serialization code\r\n8>  Compiling interop code\r\n8>  Generating System.Reflection.DispatchProxy proxy code.\r\n8>  Cleaning up unreferenced code\r\n8>  Generating native code\r\n8>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.3\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x64.microsoft.net.native.compiler\\2.2.3\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\dev\\repos\\ILMD\\ILMD.App\\ILMD.App\\ILMD.App.UWP\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\ILMD.App.UWP.rsp\"' returned exit code 1\r\n========== Build: 7 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```\r\n\r\n\r\nI ran using msbuild and versbose and nutc_driver.exe gives internal compiler error but no more useful information.\r\n\r\n   I would be willing to send my source code for testing privately.\r\n\r\nThanks in advance\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7408","RelatedDescription":"Closed issue \"UWP .net Native Internal Compiler Error.\" (#7408)"},{"Id":"441867767","IsPullRequest":true,"CreatedAt":"2019-05-08T18:24:16","Actor":"MichalStrehovsky","Number":"7409","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7409","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7409)"},{"Id":"441270623","IsPullRequest":true,"CreatedAt":"2019-05-08T09:12:19","Actor":"MichalStrehovsky","Number":"7405","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7405","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#7405)"},{"Id":"441376921","IsPullRequest":true,"CreatedAt":"2019-05-08T01:12:00","Actor":"jkotas","Number":"7406","RawContent":null,"Title":"Port https://github.com/dotnet/coreclr/pull/24387 to CoreRT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7406","RelatedDescription":"Closed or merged PR \"Port https://github.com/dotnet/coreclr/pull/24387 to CoreRT\" (#7406)"},{"Id":"441426037","IsPullRequest":false,"CreatedAt":"2019-05-07T20:14:25","Actor":"Fabi","Number":"7407","RawContent":null,"Title":"Tls callbacks","State":"open","Body":"Hey!\r\n\r\nI know that I can create native exports etc, but my question is if it's possible to use own tls callbacks in the current state?","Url":"https://github.com/dotnet/corert/issues/7407","RelatedDescription":"Open issue \"Tls callbacks\" (#7407)"},{"Id":"441010437","IsPullRequest":true,"CreatedAt":"2019-05-07T04:17:53","Actor":"Dotnet-GitSync-Bot","Number":"7404","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Anipik","Url":"https://github.com/dotnet/corert/pull/7404","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7404)"},{"Id":"440801223","IsPullRequest":true,"CreatedAt":"2019-05-06T17:53:33","Actor":"Dotnet-GitSync-Bot","Number":"7402","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7402","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7402)"},{"Id":"440731576","IsPullRequest":false,"CreatedAt":"2019-05-06T15:15:36","Actor":"vadash","Number":"7401","RawContent":null,"Title":"Q: .managed section in PE file. Can someone extract source code from it ?","State":"closed","Body":"and what does it contain ? \r\n![die_SlSWWwH5nM](https://user-images.githubusercontent.com/1397582/57232467-52659280-7025-11e9-948e-ed7f4d55c1fe.png)\r\nThanks for amazing CoreRT\r\n","Url":"https://github.com/dotnet/corert/issues/7401","RelatedDescription":"Closed issue \"Q: .managed section in PE file. Can someone extract source code from it ?\" (#7401)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"444685384","IsPullRequest":true,"CreatedAt":"2019-05-16T23:10:13","Actor":"sbomer","Number":"3237","RawContent":null,"Title":"Update stage0","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3237","RelatedDescription":"Closed or merged PR \"Update stage0\" (#3237)"},{"Id":"445092425","IsPullRequest":true,"CreatedAt":"2019-05-16T18:12:47","Actor":"zivkan","Number":"3243","RawContent":null,"Title":"Insert NuGet 5.2.0-preview2.6020 into master","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3243","RelatedDescription":"Open PR \"Insert NuGet 5.2.0-preview2.6020 into master\" (#3243)"},{"Id":"445077491","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:38","Actor":"nugetlurker","Number":"3242","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3242","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3242)"},{"Id":"445077453","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:32","Actor":"nugetlurker","Number":"3241","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3241","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3241)"},{"Id":"444694510","IsPullRequest":true,"CreatedAt":"2019-05-15T23:56:30","Actor":"MSLukeWest","Number":"3240","RawContent":null,"Title":"Setting IsKeyOutput metadata on AppHost file in PublishItemsOutputGroup","State":"open","Body":"Updating the publishing targets to set the IsKeyOutput metadata on the apphost file (exe).  The key output is used when creating shortcuts using Installer Projects.\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3240","RelatedDescription":"Open PR \"Setting IsKeyOutput metadata on AppHost file in PublishItemsOutputGroup\" (#3240)"},{"Id":"444692644","IsPullRequest":true,"CreatedAt":"2019-05-15T23:47:44","Actor":"dotnet-bot","Number":"3239","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3239","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#3239)"},{"Id":"444692635","IsPullRequest":true,"CreatedAt":"2019-05-15T23:47:41","Actor":"dotnet-bot","Number":"3238","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3238","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#3238)"},{"Id":"444669751","IsPullRequest":false,"CreatedAt":"2019-05-15T22:16:18","Actor":"shhsu","Number":"3236","RawContent":null,"Title":"Question: why does publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)","State":"open","Body":"Hi dotnet:\r\n\r\nI am wondering why publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)\r\nhttps://github.com/dotnet/sdk/blob/77677cd4cd4d033e2a30e33f2e7dc49d7f3c8095/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L354\r\n\r\nBackground:\r\nI created a VSTS pipeline that calls msbuild to build/sign/publish my application (publish to file). However, I am finding that a bunch of binaries in my publish directory is not signed.\r\n\r\nAfter some investigations I have found out that all bits in my $(OutDir) are signed, but the files got copied to publish directory are not from $(OutDir), instead they are from `obj\\Release\\` directory. After looking at the target file I finally found the line that indicates this behavior.\r\n\r\nI have yet to find a good around for this issue. I was wondering why is the reason for this behavior and if there is a workaround for this.\r\n\r\nthanks\r\nPeter","Url":"https://github.com/dotnet/sdk/issues/3236","RelatedDescription":"Open issue \"Question: why does publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)\" (#3236)"},{"Id":"442001391","IsPullRequest":true,"CreatedAt":"2019-05-15T21:23:26","Actor":"fadimounir","Number":"3219","RawContent":null,"Title":"Enable ARM/ARM64 crossgen compilation on arm/arm64 hosted machines","State":"closed","Body":"Also fixing a path issue with native PDB creation on Linux: creating file under the R2R subdir","Url":"https://github.com/dotnet/sdk/pull/3219","RelatedDescription":"Closed or merged PR \"Enable ARM/ARM64 crossgen compilation on arm/arm64 hosted machines\" (#3219)"},{"Id":"444061058","IsPullRequest":true,"CreatedAt":"2019-05-15T21:16:56","Actor":"kouvel","Number":"3232","RawContent":null,"Title":"Make QuickJitForLoops configurable","State":"closed","Body":"- Enabling this option may improve startup time, may be useful in some scenarios\r\n- Enabling this option opens up the possibility that long-running hot loops remain for too long in code that is not optimized. Methods containing such hot loops may be attributed with `AggressiveOptimizationAttribute` to work around the issue on a case-by-case basis.","Url":"https://github.com/dotnet/sdk/pull/3232","RelatedDescription":"Closed or merged PR \"Make QuickJitForLoops configurable\" (#3232)"},{"Id":"444575344","IsPullRequest":true,"CreatedAt":"2019-05-15T18:11:45","Actor":"livarcocc","Number":"3235","RawContent":null,"Title":"Update branding to 2.2.4xx","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3235","RelatedDescription":"Open PR \"Update branding to 2.2.4xx\" (#3235)"},{"Id":"444575055","IsPullRequest":true,"CreatedAt":"2019-05-15T18:11:04","Actor":"livarcocc","Number":"3234","RawContent":null,"Title":"Update branding to 2.1.8xx","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3234","RelatedDescription":"Open PR \"Update branding to 2.1.8xx\" (#3234)"},{"Id":"444400167","IsPullRequest":true,"CreatedAt":"2019-05-15T12:04:41","Actor":"dotnet-maestro[bot]","Number":"3233","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19266.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3233","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3233)"},{"Id":"443611004","IsPullRequest":true,"CreatedAt":"2019-05-14T18:10:31","Actor":"dsplaisted","Number":"3228","RawContent":null,"Title":"Add ability to use test config file to list tests to skip","State":"closed","Body":"Add support for passing a `-testConfigFile` parameter when running tests.  This allows individual tests to be skipped without having to modify the test source code.  This will be helpful to allow tests to be run on other repos, such as with https://github.com/dotnet/core-sdk/pull/1454.\r\n\r\nThe test config file looks like this\r\n\r\n```xml\r\n<Tests>\r\n  <Method Name=\"Microsoft.NET.Clean.Tests.GivenThatWeWantToCleanAHelloWorldProject.It_can_clean_and_build_without_using_rebuild\"\r\n          Skip=\"true\"\r\n          Issue=\"https://github.com/dotnet/sdk/issues/1234\"\r\n          Reason=\"Reason for skip\"/>\r\n</Tests>\r\n```\r\n\r\nThe `Issue` and `Reason` attributes aren't currently used, they are merely informational to help us keep such a list up-to-date.","Url":"https://github.com/dotnet/sdk/pull/3228","RelatedDescription":"Closed or merged PR \"Add ability to use test config file to list tests to skip\" (#3228)"},{"Id":"444047284","IsPullRequest":true,"CreatedAt":"2019-05-14T17:54:22","Actor":"sbomer","Number":"3231","RawContent":null,"Title":"Flow IsTrimmable from FrameworkReference to RuntimePack","State":"open","Body":"Follow-up to https://github.com/dotnet/core-sdk/pull/1992/files. The next step is to flow the metadata from `RuntimePack` to the resolved files.\r\n\r\nThis flows `IsTrimmable` metadata from `FrameworkReference` and `KnownFrameworkReference` (`FrameworkReference` has priority) to the `RuntimePack` ItemGroup produced by `ResolveFrameworkReferences`. The metadata will ultimately influence the default linker behavior.\r\n\r\n@dsplaisted @nguerrera PTAL.","Url":"https://github.com/dotnet/sdk/pull/3231","RelatedDescription":"Open PR \"Flow IsTrimmable from FrameworkReference to RuntimePack\" (#3231)"},{"Id":"443876478","IsPullRequest":true,"CreatedAt":"2019-05-14T14:10:53","Actor":"dotnet-maestro[bot]","Number":"3230","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19263.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3230","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3230)"},{"Id":"443634084","IsPullRequest":true,"CreatedAt":"2019-05-14T04:43:11","Actor":"JohnTortugo","Number":"3229","RawContent":null,"Title":"Update .vsts-ci.yml","State":"closed","Body":"Relates to: https://github.com/dotnet/core-eng/issues/6291\r\n\r\n/cc @mattgal","Url":"https://github.com/dotnet/sdk/pull/3229","RelatedDescription":"Closed or merged PR \"Update .vsts-ci.yml\" (#3229)"},{"Id":"442475750","IsPullRequest":true,"CreatedAt":"2019-05-14T01:08:18","Actor":"dsplaisted","Number":"3221","RawContent":null,"Title":"Add support for transitive framework references","State":"closed","Body":"Fixes dotnet/cli#10666","Url":"https://github.com/dotnet/sdk/pull/3221","RelatedDescription":"Closed or merged PR \"Add support for transitive framework references\" (#3221)"},{"Id":"443361175","IsPullRequest":true,"CreatedAt":"2019-05-13T13:35:29","Actor":"dotnet-maestro[bot]","Number":"3227","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:58 PM\r\n- **Commit**: 30682cda0dd7ca1765463749dd91ec3cfec75eb9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19262.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3227","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3227)"},{"Id":"443096756","IsPullRequest":true,"CreatedAt":"2019-05-12T13:49:50","Actor":"dotnet-maestro[bot]","Number":"3226","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 1:13 PM\r\n- **Commit**: 136dfbfa8a6173dadc107bf7393bdeaceecb4d3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19261.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3226)"},{"Id":"442986145","IsPullRequest":true,"CreatedAt":"2019-05-11T13:34:45","Actor":"dotnet-maestro[bot]","Number":"3225","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19260.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3225)"},{"Id":"442909757","IsPullRequest":true,"CreatedAt":"2019-05-10T22:01:18","Actor":"wli3","Number":"3224","RawContent":null,"Title":"WIP test ci Add hello world winforms and wpf tests","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3224","RelatedDescription":"Open PR \"WIP test ci Add hello world winforms and wpf tests\" (#3224)"},{"Id":"442888741","IsPullRequest":false,"CreatedAt":"2019-05-10T20:47:19","Actor":"wli3","Number":"3223","RawContent":null,"Title":"Add performance test for WPF and Winform","State":"open","Body":"- [ ] Add hello world test for WPF and Winform for netcore and full framework, make sure infrastructure supports that.\r\n- [ ] Add large realistic project","Url":"https://github.com/dotnet/sdk/issues/3223","RelatedDescription":"Open issue \"Add performance test for WPF and Winform\" (#3223)"},{"Id":"442684448","IsPullRequest":true,"CreatedAt":"2019-05-10T13:50:37","Actor":"dotnet-maestro[bot]","Number":"3222","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190509.9\r\n- **Date Produced**: 5/10/2019 12:31 AM\r\n- **Commit**: 155080ecb738e189db75f8f2461ebad75d955aa7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19259.9\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19259.9\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3222","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3222)"},{"Id":"441924321","IsPullRequest":true,"CreatedAt":"2019-05-09T20:34:43","Actor":"nugetlurker","Number":"3218","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.6013 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.6013 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3218","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.6013 into sdk\" (#3218)"},{"Id":"441924290","IsPullRequest":true,"CreatedAt":"2019-05-09T19:27:43","Actor":"nugetlurker","Number":"3217","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.6013 into sdk","State":"closed","Body":"Insert NuGet Build 5.1.0-rtm.6013 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3217","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.1.0-rtm.6013 into sdk\" (#3217)"},{"Id":"442353906","IsPullRequest":false,"CreatedAt":"2019-05-09T18:09:57","Actor":"jdavidbambrick","Number":"3220","RawContent":null,"Title":"Internal Error: new deps file generation logic did not produce the same result as the old logic.","State":"closed","Body":"Added an new publishing profile - a new folder, under the existing one ... and go this error asking me to post it back to git hub... so here ya go...\r\n\r\n[netcoreapp3.0.zip](https://github.com/dotnet/sdk/files/3163329/netcoreapp3.0.zip)\r\n","Url":"https://github.com/dotnet/sdk/issues/3220","RelatedDescription":"Closed issue \"Internal Error: new deps file generation logic did not produce the same result as the old logic.\" (#3220)"},{"Id":"441753051","IsPullRequest":true,"CreatedAt":"2019-05-08T22:34:12","Actor":"dsplaisted","Number":"3214","RawContent":null,"Title":"Don't require NuGetPackageId metadata for classic projects","State":"closed","Body":"- Don't require NuGetPackageId metadata for classic projects\r\n- Allow SDK-style projects to opt out of requirement for NuGetPackageId metadata by setting `RequirePackageIdMetadata` to false\r\n\r\nRelated: https://github.com/dotnet/core-sdk/issues/1904\r\n\r\nIn this PR, I've opted to keep the error by default for SDK-style projects, with a property to opt-out.  This is because I think it should be rare that SDK-style projects directly reference a DLL from a NuGet package, and the error could help catch issues where we should be setting the metadata but aren't, and hence would not handle conflict resolution correctly.\r\n\r\nOn the other hand, perhaps the error has served its purpose by now, and we should instead just remove it entirely.\r\n\r\nThoughts? @nguerrera @ericstj ","Url":"https://github.com/dotnet/sdk/pull/3214","RelatedDescription":"Closed or merged PR \"Don't require NuGetPackageId metadata for classic projects\" (#3214)"},{"Id":"441891063","IsPullRequest":false,"CreatedAt":"2019-05-08T20:51:54","Actor":"genifycom","Number":"3216","RawContent":null,"Title":"Razor Component onClick with arguments","State":"closed","Body":"In the sample FetchData.razor how does one call the onclick event with an object.\r\n\r\ne.g.\r\n\r\n  <tbody>\r\n        @foreach (var forecast in forecasts)\r\n        {\r\n            <tr>\r\n                <td onclick=\"@EditForecast(forecast)\">@forecast.Date.ToShortDateString()</td>\r\n                <td>@forecast.TemperatureC</td>\r\n                <td>@forecast.TemperatureF</td>\r\n                <td>@forecast.Summary</td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n...\r\n\r\n@functions {\r\n  private void EditForecast(WeatherForecast forecast)\r\n  {\r\n    //Do something with forecast\r\n  }\r\n}","Url":"https://github.com/dotnet/sdk/issues/3216","RelatedDescription":"Closed issue \"Razor Component onClick with arguments\" (#3216)"},{"Id":"441889479","IsPullRequest":false,"CreatedAt":"2019-05-08T20:51:45","Actor":"genifycom","Number":"3215","RawContent":null,"Title":"Razor Component write to console.log","State":"closed","Body":"Is there or will there be a way to write to the Browser console log from a Razor component running on the server?\r\n\r\nThanks","Url":"https://github.com/dotnet/sdk/issues/3215","RelatedDescription":"Closed issue \"Razor Component write to console.log\" (#3215)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1129054452357271553","CreatedAt":"2019-05-16T16:02:12+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the .NET, C#, and F# teams https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":16,"FavoriteCount":4,"RawContent":null},{"Id":"1129053721206304769","CreatedAt":"2019-05-16T15:59:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1128765757175631872","CreatedAt":"2019-05-15T20:55:02+00:00","UserScreenname":"dotnet","Text":"We just blogged about all the performance works we did in .NET Core 3.0 https://t.co/2JGXxF7ejn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":303,"FavoriteCount":147,"RawContent":null},{"Id":"1128672633665384449","CreatedAt":"2019-05-15T14:45:00+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he's implementing functions in his compiler. https://t.co/SYndeEbdMY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":5,"RawContent":null},{"Id":"1128343453970993152","CreatedAt":"2019-05-14T16:56:57+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1128339508414410757","CreatedAt":"2019-05-14T16:41:16+00:00","UserScreenname":"dotnet","Text":"ML .NET  CLI: Learn how to automatically generate an ML .NET  machine learning model and C# related code with this… https://t.co/i8zHrBa1UM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":125,"FavoriteCount":50,"RawContent":null},{"Id":"1126254867708727296","CreatedAt":"2019-05-08T22:37:39+00:00","UserScreenname":"dotnet","Text":"Introducing the new https://t.co/YEWOJxOW2B.SqlClient #DOTNET #dotnetcore #build2019\nhttps://t.co/JhNYQ1GDni https://t.co/44c9wGLwsC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":139,"FavoriteCount":70,"RawContent":null},{"Id":"1126254256850231296","CreatedAt":"2019-05-08T22:35:14+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework 6.3 Preview with .NET Core Support #dotnetcore #entityframework #DOTNET… https://t.co/9jFIJBJRB4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":43,"RawContent":null},{"Id":"1125533180725907458","CreatedAt":"2019-05-06T22:49:56+00:00","UserScreenname":"dotnet","Text":".NET Core is the Future of .NET #dotnetcore #build2019\nhttps://t.co/43Zpcfa4Px https://t.co/496vlRtRSJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":222,"FavoriteCount":109,"RawContent":null},{"Id":"1125481613435949057","CreatedAt":"2019-05-06T19:25:01+00:00","UserScreenname":"dotnet","Text":"Announcing ML .NET 1.0 #machinelearning #dotnet https://t.co/bZa9t3UnNq #build2019 https://t.co/noiQ59ZcnO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":212,"FavoriteCount":133,"RawContent":null}]}},"RunOn":"2019-05-17T05:30:32.5045167Z","RunDurationInMilliseconds":9316}