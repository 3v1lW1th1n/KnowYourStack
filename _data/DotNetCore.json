{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core 2.1 June Update","PublishedOn":"2018-06-22T21:08:25+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We released .NET Core 2.1.1. This update includes .NET Core SDK 2.1.301, ASP.NET Core 2.1.1 and .NET Core 2.1.1. See .NET Core 2.1.1 release notes for complete details on the release. Quality Updates...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/","RawContent":null},{"Title":".NET Core 2.0 will reach End of Life on October 1, 2018","PublishedOn":"2018-06-20T19:12:38+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Last Updated: 6/22/2018 .NET Core 2.0 was released on August 14, 2017. As a non-LTS release, it is supported for 3 months after the next release. .NET Core 2.1 was released on May 30th, 2018. As a...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/","RawContent":null},{"Title":"The RyuJIT transition is complete!","PublishedOn":"2018-06-19T22:53:27+00:00","CommentsCount":26,"FacebookCount":0,"Summary":"RyuJIT is the code name for the .NET just-in-time compiler, one of the foundational components of the .NET runtime. In contrast, the Roslyn C# compiler compiles C# code to IL byte code. The RyuJIT...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/19/the-ryujit-transition-is-complete/","RawContent":null},{"Title":"Staying up-to-date with .NET Container Images","PublishedOn":"2018-06-18T18:59:03+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"This post describes the container images that we produce and update for you, that you can use with Docker, Kubernetes and other systems. When you are using .NET and Docker together, you are probably...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/","RawContent":null},{"Title":"Using .NET and Docker Together – DockerCon 2018 Update","PublishedOn":"2018-06-14T00:15:31+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"I posted about Using .NET and Docker Together last year. With DockerCon 2018 being this week, it seemed like a great time to give you an update.  Since my last post, we&#8217;ve enabled a set of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/using-net-and-docker-together-dockercon-2018-update/","RawContent":null},{"Title":".NET Framework June 2018 Security and Quality Rollup","PublishedOn":"2018-06-13T19:29:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the June 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework May 2018 Security and Quality Rollup for the latest security updates. Quality and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3621!","PublishedOn":"2018-06-06T21:19:43+00:00","CommentsCount":38,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.8 Early Access build 3621 for your feedback. This is one of the in-development builds of the next version of the .NET Framework. The changes in this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/","RawContent":null},{"Title":"Announcing ML.NET 0.2","PublishedOn":"2018-06-06T04:36:25+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Last month at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework. We would like to thank the community for the engagement so far in helping us shape ML.NET....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/05/announcing-ml-net-0-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":71,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "},{"Id":"7719029569","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil\" (#70) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7877130535","Type":"PullRequestEvent","CreatedAt":"2018-06-26T05:30:26","Actor":"tgiphil","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18645","RelatedDescription":"Opened pull request \"Changed internal value to readonly to all the primitive types\" (#18645) at dotnet/coreclr","RelatedBody":"See https://github.com/dotnet/coreclr/pull/18138#issuecomment-400034140 for more information.\r\n\r\n"},{"Id":"7877054791","Type":"PullRequestEvent","CreatedAt":"2018-06-26T05:01:18","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18644","RelatedDescription":"Opened pull request \"Delete slack link, standardize on gitter\" (#18644) at dotnet/coreclr","RelatedBody":"Contributes to https://github.com/dotnet/coreclr/issues/18643"},{"Id":"7876919255","Type":"IssuesEvent","CreatedAt":"2018-06-26T04:04:37","Actor":"riverar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18643","RelatedDescription":"Opened issue \"Community Slack engagement story needs work\" (#18643) at dotnet/coreclr","RelatedBody":"*[I'm writing this in story form as I believe it's important you look at this through the proper lens]*\r\n\r\n# Story time\r\nSo, put on your new user hat. 🤠 \r\n\r\nYou want to engage with the CoreCLR community and figure out why you can't debug CoreCLR. You hit the engagement documentation (https://github.com/dotnet/coreclr/blob/master/Documentation/workflow/IssuesFeedbackEngagement.md).\r\n\r\nYou notice the CoreCLR repository documentation reels you in with a \"chat with the community\" heading and a badge that shows there's 6,517 registered users on Slack. Wow! Sounds great! You click this badge.\r\n\r\nNow you're whisked away to some random blog (tattoocoder) where it indicates 7,091 users. Hm okay whatever. I'm daring, I'll type my email into this random blog widget.\r\n\r\nYou continue through Slack's awful user flow where it notifies you that you're joining the .NET Slack. Great! But hosted at... aspnetcore.slack.com. You don't care about aspnet. But you continue anyway.\r\n\r\nYou join the slack and get plopped into the #general channel with no further guidance. You go through the Slack tutorial for the 100th time and remember there are channels. You join the CoreCLR channel and there's only 286 people. You begin to question if everything you did was for nothing and retry the steps again but with the Gitter badge... \r\n\r\nAnd end scene. 🦑 \r\n\r\n# Suggestions\r\n\r\n* Make it clear the Slack is or isn't official (it's not clear)\r\n* Set some expectations -- do core maintainers hang out in here? should I use Slack over Gitter for certain scenarios?\r\n* Rename the Slack name/URLs to make sense (https://get.slack.help/hc/en-us/articles/201663443-Change-your-workspace-or-org-name-and-URL)\r\n* Welcome users with a map ([perhaps with custom code](https://api.slack.com/best-practices/blueprints/new-user-notification) or a [simple bot](https://greetbot.io/))\r\n\r\n# Dog Tax\r\n\r\n![image](https://user-images.githubusercontent.com/475132/41888633-5501900a-78bb-11e8-803a-b66bd988117d.png)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7877088164","Type":"PullRequestEvent","CreatedAt":"2018-06-26T05:14:29","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9554","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to release/2.1.4xx\" (#9554) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-release/2.1.4xx\ngit reset --hard upstream/release/2.1.4xx\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-release/2.1.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7877066052","Type":"PullRequestEvent","CreatedAt":"2018-06-26T05:05:48","Actor":"halex2005","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9555","RelatedDescription":"Opened pull request \"Add nunit project and item templates to bundle\" (#9555) at dotnet/cli","RelatedBody":"Changes according to https://github.com/nunit/dotnet-new-nunit/issues/13#issuecomment-400116922"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7871154179","Type":"IssuesEvent","CreatedAt":"2018-06-25T06:42:38","Actor":"ramsubbaraoc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/781","RelatedDescription":"Closed issue \"How to read configuration files using .net standard libraries\" (#781) at dotnet/standard","RelatedBody":"I want to my use the same .net standard library for .NET Core and .NET Framework applications. Different type of config files are supported for .NET Core. If i have to read the config files irrespective of if it is web.config/app.config/appsetting.json using .net standard library what is the class that i have to use. \r\n"},{"Id":"7867803687","Type":"IssuesEvent","CreatedAt":"2018-06-23T13:37:18","Actor":"bujie","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/782","RelatedDescription":"Opened issue \"dotnet 2.1.300 in  centos 7     The SSL connection could not be established, see inner exception\" (#782) at dotnet/standard","RelatedBody":"Error: One or more errors occurred. (The SSL connection could not be established, see inner exception.)\r\nCode:\r\n            var http = new System.Net.Http.HttpClient();\r\n            http.DefaultRequestHeaders.Add(\"user-agent\", \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.143 Safari/537.36\");\r\n            http.GetStringAsync(\"https://www.23us.net/90/90325/23873102.html\");\r\n\r\nNormal in Centos7, most of them will produce this error\r\nEverything works fine under Windows"},{"Id":"7863206549","Type":"IssuesEvent","CreatedAt":"2018-06-22T09:51:56","Actor":"ramsubbaraoc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/781","RelatedDescription":"Opened issue \"How to read configuration files using .net standard libraries\" (#781) at dotnet/standard","RelatedBody":"I want to my use the same .net standard library for .NET Core and .NET Framework applications. Different type of config files are supported for .NET Core. If i have to read the config files irrespective of if it is web.config/app.config/appsetting.json using .net standard library what is the class that i have to use. \r\n"},{"Id":"7860997872","Type":"IssuesEvent","CreatedAt":"2018-06-21T22:01:18","Actor":"pomeara","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/780","RelatedDescription":"Closed issue \".net core and .net standard projects\" (#780) at dotnet/standard","RelatedBody":"I've been working on a .NET Core project which uses a .NET Standard back-end and from what I can tell this is mainly due to the OAuth only being implemented in .NET Standard.  I was wanting a pure .NET Core solution, however am now considering that it's probably less painful to just have all back end DLLs as .NET Standard libraries as I started to split the back end up into different layers (repos, domain, etc) and found that the OAuth restriction was causing a painful issue with what could reference what) - thoughts?"},{"Id":"7859387848","Type":"IssuesEvent","CreatedAt":"2018-06-21T16:26:40","Actor":"pmarangoni","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/777","RelatedDescription":"Closed issue \"Problem upgrading NETStandard.Library from 2.0.1 to 2.0.3\" (#777) at dotnet/standard","RelatedBody":"- ASP.NET MVC project\r\n- Using NuGet, I see there is a new version of NETStandardLibrary so I elect to upgrade it\r\n- After upgrading to 2.0.3, I can no longer build the solution. I get this error:\r\nThis project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them. For more information (blah, blah, blah)… The missing file is ..\\packages\\NETStandard.Library.2.0.1\\build\\NETStandard.Library.targets\r\n\r\nThe only way to proceed is to revert back to 2.0.1."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7877099182","Type":"PullRequestEvent","CreatedAt":"2018-06-26T05:18:39","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30663","RelatedDescription":"Opened pull request \"build stub assemblies on FreeBSD from *UnknownUnix*\" (#30663) at dotnet/corefx","RelatedBody":"With this change ` ./build.sh  -skiptests   -OS=FreeBSD` can complete and source-build does not break on missing assemblies. \r\n\r\nNetworkAddressChange.UnknownUnix.cs was failing to build without adding required API. "},{"Id":"7877095019","Type":"PullRequestEvent","CreatedAt":"2018-06-26T05:17:02","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30662","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx, CoreSetup, ProjectNTfs, ProjectNTfsTestILC to preview1-26626-01, preview1-26625-03, preview1-26625-02, beta-26626-00, beta-26626-00, respectively (master)\" (#30662) at dotnet/corefx","RelatedBody":""},{"Id":"7877073025","Type":"PullRequestEvent","CreatedAt":"2018-06-26T05:08:31","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30661","RelatedDescription":"Opened pull request \"Delete slack link, standardize on gitter\" (#30661) at dotnet/corefx","RelatedBody":"Contributes to https://github.com/dotnet/coreclr/issues/18643"},{"Id":"7876895227","Type":"PullRequestEvent","CreatedAt":"2018-06-26T03:55:08","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30570","RelatedDescription":"Merged pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup, ProjectNTfs, ProjectNTfsTestILC to preview1-02921-01, preview1-26624-03, preview1-26624-03, preview1-26624-01, beta-26622-00, beta-26622-00, respectively (master)\" (#30570) at dotnet/corefx","RelatedBody":""},{"Id":"7876875947","Type":"PullRequestEvent","CreatedAt":"2018-06-26T03:47:33","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30660","RelatedDescription":"Opened pull request \"Simplify built-in types across corefx tests\" (#30660) at dotnet/corefx","RelatedBody":"Ran the tool in https://github.com/dotnet/corefx/pull/30656#issuecomment-400110492 against corefx's tests."},{"Id":"7876675974","Type":"IssuesEvent","CreatedAt":"2018-06-26T02:32:09","Actor":"bricelam","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/30659","RelatedDescription":"Closed issue \"Native library dependencies can't be in different NuGet packages\" (#30659) at dotnet/corefx","RelatedBody":"I was trying to package up some native libraries to redistribute on NuGet (similar to the runtime.* packages). It looks like they all need to be in the same NuGet package to make it work.\r\n\r\nI had hoped to create two packages: one for zlib and one for libxml2 (which depends on zlib), and use PInvoke to call into libxml2, but because of the way `LoadLibraryEx` is invoked, it will only look for dependencies as siblings to libxml2.dll or in the app directory.\r\n\r\nThe workaround, of course, is to create one package containing the closure of native libraries. This isn't ideal, however since two NuGet package may end up containing different versions of a common dependency (like zlib)."},{"Id":"7876647210","Type":"IssuesEvent","CreatedAt":"2018-06-26T02:21:46","Actor":"bricelam","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/30659","RelatedDescription":"Opened issue \"Native library dependencies can't be in different NuGet packages\" (#30659) at dotnet/corefx","RelatedBody":"I was trying to package up some native libraries to redistribute on NuGet (similar to the runtime.* packages). It looks like they all need to be in the same NuGet package to make it work.\r\n\r\nI had hoped to create two packages: one for zlib and one for libxml2 (which depends on zlib), and use PInvoke to call into libxml2, but because of the way `LoadLibraryEx` is invoked, it will only look for dependencies as siblings to libxml2.dll or in the app directory.\r\n\r\nThe workaround, of course, is to create one package containing the closure of native libraries. This isn't ideal, however since two NuGet package may end up containing different versions of a common dependency (like zlib)."},{"Id":"7876249645","Type":"PullRequestEvent","CreatedAt":"2018-06-25T23:54:42","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30656","RelatedDescription":"Merged pull request \"Simplify built-in types across corefx\" (#30656) at dotnet/corefx","RelatedBody":"Automated replace across all of corefx project src of framework type to C# built-in type, e.g. \"Int32\" => \"int\".\r\n\r\ncc: @danmosemsft, @jkotas "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7876731561","Type":"PullRequestEvent","CreatedAt":"2018-06-26T02:52:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6014","RelatedDescription":"Merged pull request \"Add cumulative error checking to CoreFX tests\" (#6014) at dotnet/corert","RelatedBody":"The check was being done on Unix, but not on Windows.\r\nThis fixes the issues @jkotas pointed out in #6007. Also fixes #5901 ."},{"Id":"7876731553","Type":"IssuesEvent","CreatedAt":"2018-06-26T02:52:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5901","RelatedDescription":"Closed issue \"C# Exceptions in CoreFX Jenkins CI jobs do not report crashes correctly\" (#5901) at dotnet/corert","RelatedBody":"https://ci.dot.net/job/dotnet_corert/job/master/job/debug_windows_nt_corefx_prtest/115/console - a file was not found, but the test runs reported success.\r\n\r\nLocally, this produces the correct exit code, but that's not reflected in Jenkins."},{"Id":"7876604386","Type":"IssuesEvent","CreatedAt":"2018-06-26T02:05:51","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6016","RelatedDescription":"Opened issue \"Access Violation in System.Tests.ArrayTests\" (#6016) at dotnet/corert","RelatedBody":"`Sort_Array_Array_NonGeneric` fails with an Access Violation.\r\nStack trace below:\r\n```\r\nKERNELBASE!RaiseFailFastException + 0x74\r\nxunit_console_netcore!S_P_CoreLib_Interop_mincore__PInvoke_RaiseFailFastException + 0x56\r\nxunit_console_netcore!S_P_CoreLib_Interop_mincore__RaiseFailFastException + 0x102\r\nxunit_console_netcore!S_P_CoreLib_System_RuntimeExceptionHelpers__FailFast_1 + 0x1a9\r\nxunit_console_netcore!S_P_CoreLib_System_RuntimeExceptionHelpers__FailFast + 0x27\r\nxunit_console_netcore!S_P_CoreLib_System_Diagnostics_Debug__ShowDialog + 0xb0\r\nxunit_console_netcore!S_P_CoreLib_System_Action_4<System___Canon__System___Canon__System___Canon__System___Canon>__InvokeOpenStaticThunk + 0x4d\r\nxunit_console_netcore!S_P_CoreLib_System_Diagnostics_Debug__Assert_1 + 0xca\r\nxunit_console_netcore!S_P_CoreLib_System_Diagnostics_Debug__Assert + 0x45\r\nxunit_console_netcore!S_P_CoreLib_System_Collections_Generic_ArraySortHelper_2<System___Canon__System___Canon>__SwapIfGreaterWithItems + 0x71\r\nxunit_console_netcore!S_P_CoreLib_System_Collections_Generic_ArraySortHelper_2<System___Canon__System___Canon>__IntroSort + 0x115\r\nxunit_console_netcore!S_P_CoreLib_System_Collections_Generic_ArraySortHelper_2<System___Canon__System___Canon>__IntrospectiveSort + 0x133\r\nxunit_console_netcore!S_P_CoreLib_System_Collections_Generic_ArraySortHelper_2<System___Canon__System___Canon>__Sort + 0x12c\r\nxunit_console_netcore!S_P_CoreLib_System_Array__Sort_15<System___Canon__System___Canon> + 0x1f1\r\nxunit_console_netcore!S_P_CoreLib_System_Array__SortImpl + 0x138\r\nxunit_console_netcore!S_P_CoreLib_System_Array__Sort_6 + 0x2a4\r\nxunit_console_netcore!System_Runtime_Tests_System_Tests_ArrayTests__Sort_Array_Array_NonGeneric + 0x289\r\n```\r\n\r\nThe failed assert is this\r\nhttps://github.com/dotnet/corert/blob/8e3635626e4b7068d1aaf234b49b5e920721ca67/src/System.Private.CoreLib/shared/System/Collections/Generic/ArraySortHelper.cs#L429\r\n"},{"Id":"7876545495","Type":"IssuesEvent","CreatedAt":"2018-06-26T01:43:57","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6015","RelatedDescription":"Opened issue \"Access Violation in System.Tests.TupleTests\" (#6015) at dotnet/corert","RelatedBody":"System.Tests.TupleTests.CompareTo and System.Tests.TupleTests.Equals_GetHashCode return a null address during interface dispatch. \r\nThese were regressed because of a silent failure in CoreFX CI (fixed by #6014) \r\n\r\nShared stack trace (cut down for brevity)\r\n```\r\nxunit_console_netcore!S_P_CoreLib_System_Tuple_1<Int16>__System_Collections_IStructuralComparable_CompareTo + 0x11c\r\nxunit_console_netcore!System_Runtime_Tests_System_Tests_TupleTests_TupleTestDriver_10___c__DisplayClass20_0<Int16__Int32__Int64__System___Canon__Char__Single__Double__S_P_CoreLib_System_DateTime__System___Canon__S_P_CoreLib_System_TimeSpan>___IStructuralComparable_NullComparer_ThrowsNullReferenceException_b__0 + 0x43\r\nxunit_console_netcore!xunit_assert_Xunit_Assert__RecordException_0 + 0x4b\r\nxunit_console_netcore!xunit_assert_Xunit_Assert__Throws_0<System___Canon> + 0x5f\r\nxunit_console_netcore!System_Runtime_Tests_System_Tests_TupleTests_TupleTestDriver_10<Int16__Int32__Int64__System___Canon__Char__Single__Double__S_P_CoreLib_System_DateTime__System___Canon__S_P_CoreLib_System_TimeSpan>__IStructuralComparable_NullComparer_ThrowsNullReferenceException + 0xa1\r\nxunit_console_netcore!System_Runtime_Tests_System_Tests_TupleTests_TupleTestDriver_10<Int16__Int32__Int64__System___Canon__Char__Single__Double__S_P_CoreLib_System_DateTime__System___Canon__S_P_CoreLib_System_TimeSpan>__CompareTo + 0xff\r\nxunit_console_netcore!System_Runtime_Tests_System_Tests_TupleTests__CompareTo + 0x127\r\n[...]\r\n```"},{"Id":"7875330554","Type":"IssuesEvent","CreatedAt":"2018-06-25T20:04:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6011","RelatedDescription":"Closed issue \" LNK1181  error with Hello World exmaple  \" (#6011) at dotnet/corert","RelatedBody":"I have .net-core 2.1 installed and I have VS2017 15.7.4\r\n\r\nthis is the error I got\r\n\r\n```\r\n\r\nH:\\project\\corertTest\\HelloWorld>dotnet publish -r win-x64 -c release\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for H:\\project\\corertTest\\HelloWorld\\HelloWorld.csproj...\r\n  Restore completed in 917.17 ms for H:\\project\\corertTest\\HelloWorld\\HelloWorld.csproj.\r\n  HelloWorld -> H:\\project\\corertTest\\HelloWorld\\bin\\release\\netcoreapp2.1\\win-x64\\HelloWorld.dll\r\nLINK : fatal error LNK1181:  [H:\\project\\corertTest\\HelloWorld\\HelloWorld.csproj]\r\nC:\\Users\\h6hfhrht\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-26623-01\\build\\Microsoft.NETCore.Native.targets(234,5): error MSB3073: The command \"link  @\"obj\\release\\netcoreapp2.1\\win-x64\\native\\link.rsp\"\" exited with code 1181. [H:\\project\\corertTest\\HelloWorld\\HelloWorld.csproj]\r\n```\r\n\r\nI followed everything on README.MD in [Building a Hello World console app with CoreRT](https://github.com/dotnet/corert/tree/master/samples/HelloWorld) \r\n\r\nany ieda what is causing this error?\r\n\r\n\r\nFolder:\r\n![image](https://user-images.githubusercontent.com/29968862/41843335-dbb2ea0c-789f-11e8-8fb8-652bdf5e9e72.png)\r\n\r\nNuget.config:\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/41843355-eda279f8-789f-11e8-948f-3f7c60cb4b51.png)\r\n"},{"Id":"7875098232","Type":"PullRequestEvent","CreatedAt":"2018-06-25T19:14:51","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6007","RelatedDescription":"Closed pull request \"CI Test\" (#6007) at dotnet/corert","RelatedBody":""},{"Id":"7875017220","Type":"PullRequestEvent","CreatedAt":"2018-06-25T18:58:10","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6014","RelatedDescription":"Opened pull request \"Add cumulative error checking to CoreFX tests\" (#6014) at dotnet/corert","RelatedBody":"The check was being done on Unix, but not on Windows.\r\nThis fixes the issues @jkotas pointed out in #6007. Also fixes #5901 ."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1010269960948465665","CreatedAt":"2018-06-22T21:15:03+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 End of Life Extended to October 1, 2018 https://t.co/KQAlfqjfGv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":49,"FavoriteCount":51,"RawContent":null},{"Id":"1010268594725269504","CreatedAt":"2018-06-22T21:09:37+00:00","UserScreenname":"dotnet","Text":".NET Core 2.1 June Update https://t.co/GJkOJkg0zJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":131,"FavoriteCount":82,"RawContent":null},{"Id":"1010144767924154368","CreatedAt":"2018-06-22T12:57:34+00:00","UserScreenname":"dotnet","Text":"It's #fsharp Friday on Fritz and Friends with our friend @csharpfritz  -- tune in today and learn about… https://t.co/tBMBYu7qnC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"1009783192751099904","CreatedAt":"2018-06-21T13:00:48+00:00","UserScreenname":"dotnet","Text":"These two are always great to learn from separately, and today they're working together.  You won't want to miss… https://t.co/DhpOULOjfn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":3,"RawContent":null},{"Id":"1009514602428710912","CreatedAt":"2018-06-20T19:13:31+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 will reach End of Life on September 1, 2018 https://t.co/5PoTWEAQgt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":266,"FavoriteCount":300,"RawContent":null},{"Id":"1009477602791133186","CreatedAt":"2018-06-20T16:46:30+00:00","UserScreenname":"dotnet","Text":"Call for papers now open for #dotnetconf virtual event in September! Present to our worldwide community. No travel… https://t.co/KraqcAKxAo","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":350,"FavoriteCount":251,"RawContent":null},{"Id":"1009207915775811584","CreatedAt":"2018-06-19T22:54:51+00:00","UserScreenname":"dotnet","Text":"The RyuJIT transition is complete! https://t.co/JhkSV0Aybh","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":322,"FavoriteCount":171,"RawContent":null},{"Id":"1008787534451638272","CreatedAt":"2018-06-18T19:04:25+00:00","UserScreenname":"dotnet","Text":"Staying up-to-date with .NET Container Images https://t.co/09vnrG5uqh /cc @aspnet @Docker @DockerCon","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":221,"FavoriteCount":117,"RawContent":null},{"Id":"1008746685697150976","CreatedAt":"2018-06-18T16:22:06+00:00","UserScreenname":"dotnet","Text":"Building distributed applications with Orleans https://t.co/GgWRQHcdPP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":68,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2018-06-26T05:30:33.5365072Z","RunDurationInMilliseconds":7195}