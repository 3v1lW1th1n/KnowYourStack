{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel.Â Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing compatibility version in MVC","PublishedOn":"2018-02-27T22:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Ryan Nowak In 2.1 we&#8217;re adding a feature to address a long-standing problem for maintaining MVC &#8211; how do we make improvements to framework code without making it...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/introducing-compatibility-version-in-mvc/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Getting started with SignalR","PublishedOn":"2018-02-27T21:57:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since 2013, ASP.NET developers have been using SignalR to build real-time web applications. Now, with ASP.NET Core 2.1 Preview 1, we&#8217;re bringing SignalR over to ASP.NET Core so you can build...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Using ASP.NET Core Previews on Azure App Service","PublishedOn":"2018-02-27T19:18:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are 3 options to get ASP.NET Core 2.1 Preview applications running on Azure App Service: Installing the Preview1 site extension Deploying your app self-contained Using Web Apps for Containers...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7341705885","Type":"IssuesEvent","CreatedAt":"2018-03-07T03:35:08","Actor":"byzheng","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2931","RelatedDescription":"Opened issue \".Net Core 2.1 for Proxy\" (#2931) at aspnet/Home","RelatedBody":"I am trying to use Proxy package (https://github.com/aspnet/Proxy), but get error about `AddProxy` is not defined. See details from here: https://stackoverflow.com/questions/42000362/creating-a-proxy-to-another-web-api-with-asp-net-core\r\n\r\nThen I tried to compile the package from source codes. Add get an error about \r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tThe current .NET SDK does not support targeting .NET Core 2.1.  Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.\tMicrosoft.AspNetCore.Proxy.Samples\tC:\\Program Files\\dotnet\\sdk\\2.1.4\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets\t135\t\r\n```\r\n\r\n\r\n\r\n"},{"Id":"7341453762","Type":"IssuesEvent","CreatedAt":"2018-03-07T02:09:38","Actor":"kumpera","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2930","RelatedDescription":"Opened issue \"WebSockets failure when proxying v8 debugger protocol \" (#2930) at aspnet/Home","RelatedBody":"Hello everyone,\r\n\r\nI'm using asp.net to proxy the v8 debugger protocol. It uses WebSockets.\r\n\r\nI'm running into this exception that makes little sense to me. What could be causing it?\r\n```\r\nSystem.Net.WebSockets.WebSocketException: TODO, RESX: net_WebSockets_InvalidState; (Aborted,Open, CloseReceived)\r\n   at System.Net.WebSockets.WebSocketValidate.ThrowIfInvalidState(WebSocketState currentState, Boolean isDisposed, WebSocketState[] validStates)\r\n   at System.Net.WebSockets.ManagedWebSocket.SendAsync(ArraySegment`1 buffer, WebSocketMessageType messageType, Boolean endOfMessage, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at WsProxy.WsProxy.<Send>d__8.MoveNext() in /Users/kumpera/src/wasm/ws-proxy/WsProxy.cs:line 101\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at WsProxy.WsProxy.<SendEventInternal>d__17.MoveNext() in /Users/kumpera/src/wasm/ws-proxy/WsProxy.cs:line 187\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at WsProxy.WsProxy.<OnEvent>d__9.MoveNext() in /Users/kumpera/src/wasm/ws-proxy/WsProxy.cs:line 107\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```"},{"Id":"7341213295","Type":"IssuesEvent","CreatedAt":"2018-03-07T00:52:55","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2443","RelatedDescription":"Closed issue \"StaticFileContext.ValidateMethod wrongly named\" (#2443) at aspnet/Home","RelatedBody":"_From @vanillajonathan on Saturday, October 7, 2017 8:34:32 AM_\r\n\r\nThe `ValidateMethod` in the `StaticFileContext` should probably be named `IsValidMethod`.\r\n\r\n_Copied from original issue: aspnet/StaticFiles#217_"},{"Id":"7341086507","Type":"IssuesEvent","CreatedAt":"2018-03-07T00:12:50","Actor":"Legends","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2929","RelatedDescription":"Closed issue \"ASP.NET Core 1.1 - Look for an app in the store ???\" (#2929) at aspnet/Home","RelatedBody":"I want to run an ASP.NET Core MVC Project, but I get the following:\r\n\r\n![image](https://user-images.githubusercontent.com/966368/37056038-86d97370-2183-11e8-8086-5560d3743dcb.png)\r\n\r\n**Startup.cs**\r\n  ```\r\napp.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n```\r\n\r\n**Controller:**\r\n\r\n```\r\n public IActionResult Testing()\r\n        {\r\n            return View(\"Testing\", new DummyObject() { Age = 23, Name = \"Ben\" });\r\n        }\r\n```\r\n\r\n**And why is it hitting the index action and not the testing action ????** \r\n\r\nUpgrading doesn't work too...\r\n\r\n![image](https://user-images.githubusercontent.com/966368/37057533-fb48d440-2187-11e8-895f-8446b5e2027a.png)\r\n\r\n\r\n**Woooow ASP.NET Core, I am impressed...**\r\n\r\n\r\n**Task Manager is your friend .....**\r\n\r\n\r\n**Close, reopen, Upgrade packages ---> Task Manager is my friend again....**\r\n\r\nI wouldn't be annoyed if VS2017 would be freeware...."},{"Id":"7340051116","Type":"IssuesEvent","CreatedAt":"2018-03-06T20:16:03","Actor":"Legends","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2929","RelatedDescription":"Opened issue \"Look for an app in the store ???\" (#2929) at aspnet/Home","RelatedBody":"\r\nI want to run an ASP.NET Core MVC Project, but I get the following:\r\n\r\n![image](https://user-images.githubusercontent.com/966368/37056038-86d97370-2183-11e8-8086-5560d3743dcb.png)\r\n"},{"Id":"7340011222","Type":"IssuesEvent","CreatedAt":"2018-03-06T20:07:48","Actor":"tarekgh","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2928","RelatedDescription":"Opened issue \"Where is System.Web.Http?\" (#2928) at aspnet/Home","RelatedBody":"_From @shaulbehr on March 6, 2018 10:19_\n\nHi,\r\nI'm trying to convert an ASP.NET project from .NET Framework 4.7.1 to .NET Core 2.1 (preview).\r\nMy methodology was to rename the folder from `MyAspProj` to `MyAspProj.Old`, then in the solution I created a new .NET Core ASP.NET project called `MyAspProj`, then copied over all the files from `MyAspProj.Old`. I added a reference to `Microsoft.AspNetCore.All`, which I hoped would bring through all the necessary types. but alas, everywhere that I have references to objects from the `System.Web.Http` namespace, my code is broken, with no obvious contenders to redirect the references.\r\nFor example, `HttpConfiguration`, which is used for Owin configuration.\r\nAnd, while we're there, the Owin package itself is targeting .NET Framework. Is there a successor that targets .NET Core?\n\n_Copied from original issue: dotnet/corefx#27764_"},{"Id":"7339657973","Type":"IssuesEvent","CreatedAt":"2018-03-06T18:58:58","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2927","RelatedDescription":"Opened issue \"CORS Headers don't display in response\" (#2927) at aspnet/Home","RelatedBody":"_From @izundo-viennv on February 28, 2018 18:45_\n\nI created a project using ASP.NET CORE 2.0, I configured Cors middleware, but when I run my project I haven't seen any CORS header in the response. This is my `Startup.cs` file, \r\n\r\n```csharp\r\npublic class Startup {\r\n        public Startup(IConfiguration configuration) {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services) {\r\n            services.AddDbContext<AppDbContext>(options =>\r\n                options.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n\r\n            services.AddIdentity<User, Role>()\r\n                .AddEntityFrameworkStores<AppDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddCors(options =>\r\n                options.AddPolicy(\"AllowSpecificOrigins\", builder =>\r\n                    builder.WithOrigins(Configuration[\"Cors:AllowedOrigins\"])\r\n                    .AllowAnyMethod()\r\n                    .AllowAnyHeader()\r\n                )\r\n            );\r\n\r\n            services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\r\n                .AddJwtBearer(options => {\r\n\r\n                    options.RequireHttpsMetadata = false;\r\n                    options.SaveToken = true;\r\n                    options.TokenValidationParameters = new TokenValidationParameters {\r\n                        ValidateIssuer = true,\r\n                        ValidateAudience = true,\r\n                        ValidateLifetime = true,\r\n                        ValidateIssuerSigningKey = true,\r\n                        ValidIssuer = Configuration[\"Auth:Jwt:Issuer\"],\r\n                        ValidAudience = Configuration[\"Auth:Jwt:Issuer\"],\r\n                        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"Auth:Jwt:Key\"])),\r\n                        ClockSkew = TimeSpan.Zero\r\n                    };\r\n                });\r\n\r\n            services.AddSession(options => {\r\n                options.Cookie.SameSite = SameSiteMode.None;\r\n            });\r\n\r\n            services.AddMvc();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env) {\r\n            if (env.IsDevelopment()) {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n            app.UseCors(\"AllowSpecificOrigins\");\r\n            app.UseAuthentication();\r\n            app.UseMvc();\r\n        }\r\n    }\r\n```\n\n_Copied from original issue: aspnet/CORS#144_"},{"Id":"7339505656","Type":"IssuesEvent","CreatedAt":"2018-03-06T18:29:53","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2926","RelatedDescription":"Closed issue \"appsettings.json intellisense support missing\" (#2926) at aspnet/Home","RelatedBody":"I am using VS2017 and created an ASP.NET Core 2.0 project, but I have no intellisense support in the appsettings.json file?\r\n\r\nAny planned support for this?"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7341403941","Type":"IssuesEvent","CreatedAt":"2018-03-07T01:54:05","Actor":"joshlrogers","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1550","RelatedDescription":"Opened issue \"JSON Serializing is different between JSONHubProtocol and Redis Hub\" (#1550) at aspnet/SignalR","RelatedBody":"The JSON serializer in the Redis Hub doesn't camelCase the properties of a serialized object where the JSONHubProtocol does if using the Default Hub.  This results in breaking changes based on the default settings between the two hubs when doing initial implementation using DefaultHub then switching to Redis."},{"Id":"7341336603","Type":"PullRequestEvent","CreatedAt":"2018-03-07T01:31:57","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1492","RelatedDescription":"Merged pull request \"Restrict HubProtocol on Server + HubOptions<THub>\" (#1492) at aspnet/SignalR","RelatedBody":"Adding the ability to restrict the HubProtocol on the server\r\nIssue: https://github.com/aspnet/SignalR/issues/854"},{"Id":"7341260765","Type":"IssuesEvent","CreatedAt":"2018-03-07T01:07:22","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1548","RelatedDescription":"Opened issue \"Consider adding a \"Close\" frame type to Hub Protocol\" (#1548) at aspnet/SignalR","RelatedBody":"Right now, there is no way for the server (or client, for that matter) to communicate **why** it is closing the connection. If it's due to an error, the server has no way to communicate this error back to the client. We can communicate errors in invocations by sending Completion messages, but there's no way to send connection-level errors in the protocol.\r\n\r\nWe should consider adding a Close frame that can optional carry an error payload of some kind."},{"Id":"7341108770","Type":"IssuesEvent","CreatedAt":"2018-03-07T00:19:49","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1546","RelatedDescription":"Opened issue \"Cache method result type reflection\" (#1546) at aspnet/SignalR","RelatedBody":"Each request reflection is being used on the method result type to determine whether result should be streamed or not. Reflection should be cached once per method and reused.\r\n\r\nhttps://github.com/aspnet/SignalR/blob/0eb2b96c45964be461394e73b960dd634fca405f/src/Microsoft.AspNetCore.SignalR.Core/Internal/DefaultHubDispatcher.cs#L309-L322\r\n\r\nhttps://github.com/aspnet/SignalR/blob/0eb2b96c45964be461394e73b960dd634fca405f/src/Microsoft.AspNetCore.SignalR.Core/Internal/DefaultHubDispatcher.cs#L373-L426"},{"Id":"7341075317","Type":"IssuesEvent","CreatedAt":"2018-03-07T00:09:19","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1545","RelatedDescription":"Opened issue \"Add better logic around deserializing headers\" (#1545) at aspnet/SignalR","RelatedBody":"Currently when deserializing messages we grab the header value and check if there are any headers to write. This causes an allocation per send that we could easily avoid\r\nhttps://github.com/aspnet/SignalR/blob/0eb2b96c45964be461394e73b960dd634fca405f/src/Microsoft.AspNetCore.SignalR.Common/Internal/Protocol/HubInvocationMessage.cs#L16\r\n\r\n![dict](https://user-images.githubusercontent.com/7574801/37066103-ab192ef4-2158-11e8-8218-3233d8cead80.PNG)\r\n"},{"Id":"7341050414","Type":"IssuesEvent","CreatedAt":"2018-03-07T00:01:32","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1530","RelatedDescription":"Closed issue \"Incorrect dependencies in browser version of signalr-protocol-msgpack 1.0.0-preview1-final\" (#1530) at aspnet/SignalR","RelatedBody":"Trying to bundle it using webpack produces:\r\n>ERROR in ./node_modules/@aspnet/signalr-protocol-msgpack/dist/browser/signalr-protocol-msgpack.js\r\n>Module not found : error : Can't resolve '    ode_modulesmsgpack5index.js' in 'D:\\Programs\\node_modules\\\\@aspnet\\signalr-protocol-msgpack\\dist\\browser'\r\n     @ ./node_modules/@aspnet/signalr-protocol-msgpack/dist/browser/signalr-protocol-msgpack.js 6:138-270\r\n     @ dll vendor\r\nERROR in ./node_modules/@aspnet/signalr-protocol-msgpack/dist/browser/signalr-protocol-msgpack.js\r\nModule not found : error : Can't resolve '../../node_modules/msgpack5/index.js' in 'D:\\Programs\\node_modules\\\\@aspnet\\signalr-protocol-msgpack\\dist\\browser'\r\n     @ ./node_modules/@aspnet/signalr-protocol-msgpack/dist/browser/signalr-protocol-msgpack.js 6:89-136\r\n     @ dll vendor\r\n\r\nwebpack 3.10.0\r\nnode 8.9.3"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7341405574","Type":"PullRequestEvent","CreatedAt":"2018-03-07T01:54:37","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7447","RelatedDescription":"Opened pull request \"Add wireframe for ConfigureApplicationPart\" (#7447) at aspnet/Mvc","RelatedBody":""},{"Id":"7341370234","Type":"PullRequestEvent","CreatedAt":"2018-03-07T01:42:54","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7444","RelatedDescription":"Merged pull request \"Ignore constructors when discovering actions\" (#7444) at aspnet/Mvc","RelatedBody":""},{"Id":"7340497005","Type":"IssuesEvent","CreatedAt":"2018-03-06T21:46:55","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7344","RelatedDescription":"Closed issue \"ApiController should not return errors as application/problem+json\" (#7344) at aspnet/Mvc","RelatedBody":"https://github.com/aspnet/Mvc/blob/dev/src/Microsoft.AspNetCore.Mvc.Core/Internal/ApiBehaviorOptionsSetup.cs#L39\r\n\r\nWe missed this during cleanup. We're not using problem anywhere in MVC's code, so this is wrong. Put another way... we don't assume that you want to use problem, and we don't wire it up for you. "},{"Id":"7340495817","Type":"PullRequestEvent","CreatedAt":"2018-03-06T21:46:41","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7440","RelatedDescription":"Merged pull request \"Remove problem+json Content-Type\" (#7440) at aspnet/Mvc","RelatedBody":"Addresses #7344 \r\n"},{"Id":"7339533699","Type":"PullRequestEvent","CreatedAt":"2018-03-06T18:35:18","Actor":"ryanbrandenburg","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7446","RelatedDescription":"Opened pull request \"Remove IErrorDescriptionFactory\" (#7446) at aspnet/Mvc","RelatedBody":"Fixes #7414. This PR does change the shape of what we return in this case to (from what my code archaeology says) what it had been before the addition of these classes. If we want to keep the current JSON shape I'll make the class internal instead."},{"Id":"7339473212","Type":"IssuesEvent","CreatedAt":"2018-03-06T18:23:48","Actor":"nefcanto","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7445","RelatedDescription":"Opened issue \"Custom conventions mess with multipart/form-data for uploading files\" (#7445) at aspnet/Mvc","RelatedBody":"I'm trying to reduce boilerplate codes as much as possible. Instead of writing `[FromBody]` everywhere, I wrote a custom model binding convention to always bind from body for complex types:\r\n\r\n```\r\n    public class ReferenceTypeBodyJsonBindingConvention : IActionModelConvention\r\n    {\r\n        public void Apply(ActionModel action)\r\n        {\r\n            if (action == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(action));\r\n            }\r\n            foreach (var parameter in action.Parameters)\r\n            {\r\n                if (!parameter.ParameterInfo.ParameterType.IsValueType && parameter.ParameterInfo.ParameterType.FullName != typeof(string).FullName)\r\n                {\r\n                    parameter.BindingInfo = parameter.BindingInfo ?? new BindingInfo();\r\n                    parameter.BindingInfo.BindingSource = BindingSource.Body;\r\n                }\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nAs soon as I add this convention, uploading files result in *415 Unsupported Media Type* error:\r\n\r\n```\r\nservices.AddMvc(options =>\r\n{\r\n      options.Conventions.Add(new ReferenceTypeBodyJsonBindingConvention());\r\n})\r\n```\r\n\r\nI don't understand it. And no breakpoint of my code gets hit after enabling this convention.\r\n\r\nI'm not sure 100% but I think it's a bug. Since my convention has many if parts, and if it's the culprit, then it should be hit at least.\r\n\r\nCan you guide me in this regards?"},{"Id":"7339463759","Type":"PullRequestEvent","CreatedAt":"2018-03-06T18:21:56","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7444","RelatedDescription":"Opened pull request \"Ignore constructors when discovering actions\" (#7444) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7340986447","Type":"IssuesEvent","CreatedAt":"2018-03-06T23:42:45","Actor":"Eilon","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1667","RelatedDescription":"Opened issue \"Authentication workflow problem when email confirmation is required.\" (#1667) at aspnet/Identity","RelatedBody":"_From @Eilon on October 24, 2017 21:48_\n\n_From @Bartmax on October 21, 2015 8:23_\n\n**TL;DR:**\nUser using external login provider and application with email confirmation required will be able to login the first time (on user creation) without confirming email and he/she won't be able to log in again.\n\n---\n\nWhen a visitor enter the page and hit login, then choosing an external provider, it's then redirected to username/email confirmation.\n\ntyping an email creates and account and log the user in. (user should be required to confirm email)\nThere's no email sending code in the ExternalLogin workflow.\n\nif user logout and then try to login again, it's again presenting him the Associate account.\n\nIf he types in the same email address it says it's already taken.\nIf he types a new email address, it says Invalid login (already associated).\n\nIf he chooses to forgot password, then it's presented with a forgot password confirmation but not email sent because it's not confirmed.\n\nProblems summary:\n1. There's no way a user can log in (for a second time) in this scenario.\n2. The user can use the system without email confirmation as long as he/she stays logged in when account was created.\n3. No email confirmation is sent on this workflow.\n4. Forgot password does **not** help.\n\n\n_Copied from original issue: aspnet/Templates#242_\n\n_Copied from original issue: aspnet/templating#108_"},{"Id":"7340983282","Type":"IssuesEvent","CreatedAt":"2018-03-06T23:41:50","Actor":"Eilon","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1666","RelatedDescription":"Opened issue \"Cannot link external logins in 1.0.0/1.0.1 Individual auth templates\" (#1666) at aspnet/Identity","RelatedBody":"_From @Eilon on October 24, 2017 21:42_\n\n_From @HaoK on October 27, 2016 18:41_\n\nRepro:\n- New Individual Auth App\n- Add 2 external auth providers (i.e. facebook/twitter/google)\n- Register a local user and password\n- Manage -> Add External Login -> First Facebook/twitter/google will work\n- Second will result in access failed.\n\nOriginal issue: https://github.com/aspnet/Identity/issues/1005\n\nThis has been mitgated somewhat in 1.1 by https://github.com/aspnet/Security/pull/980\n\nA potential fix is to add the equivalent signout code to ManageController's LinkLogin + LinkLoginCallback(when add login was successful).  I verified that this enables things.\n\nSimilar to: https://github.com/aspnet/Templates/commit/306fbc6b62c01a55c77399688ae57e11f3f6f359\n\n\n_Copied from original issue: aspnet/Templates#686_\n\n_Copied from original issue: aspnet/templating#103_"},{"Id":"7340968047","Type":"IssuesEvent","CreatedAt":"2018-03-06T23:37:20","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/682","RelatedDescription":"Closed issue \"Interop with 4.5 (doc/sample story)\" (#682) at aspnet/Identity","RelatedBody":"Need to clean up a few things still:\n- Add initial EF6 migration\n- Add code to do property updating of normalized columns as part of SaveChanges\n"},{"Id":"7340964755","Type":"IssuesEvent","CreatedAt":"2018-03-06T23:36:23","Actor":"Eilon","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1665","RelatedDescription":"Opened issue \"Web App with Individual Auth uses Web Helper instead of TagHelper\" (#1665) at aspnet/Identity","RelatedBody":"_From @mlorbetske on September 22, 2017 18:18_\n\n_From @phenning on July 6, 2017 17:26_\n\nIn the Individual Auth template for Core Web Application, there is exactly one Web Helper, at line 38 in Views/Accout/Login.cshtml.\r\n\r\nThis should be changed to a TagHelper.\r\n\r\n```\r\n                        <div class=\"checkbox\">\r\n                            <label asp-for=\"RememberMe\">\r\n                                <input asp-for=\"RememberMe\" />\r\n                                @Html.DisplayNameFor(m => m.RememberMe)\r\n                            </label>\r\n                        </div>\r\n```\r\n\n\n_Copied from original issue: dotnet/templating#1024_\n\n_Copied from original issue: aspnet/templating#25_"},{"Id":"7340916412","Type":"PullRequestEvent","CreatedAt":"2018-03-06T23:22:59","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1664","RelatedDescription":"Opened pull request \"Skip Flaky tests\" (#1664) at aspnet/Identity","RelatedBody":"These tests all fail intermittently due to #1630. Un-skip them when that issue is resolved."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7340970747","Type":"IssuesEvent","CreatedAt":"2018-03-06T23:38:08","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2352","RelatedDescription":"Closed issue \"-13 EACES error during container startup\" (#2352) at aspnet/KestrelHttpServer","RelatedBody":"I'm developing a personal [project](http://github.com/mvsouza/SouzaCIQuoting), and I'm trying to deploy the staging environment on Heroku. Although I pushed the image to Heroku, the container fails on the startup.\r\n\r\nThe Heroku log showed the stack trace:\r\n\r\n2018-02-28T01:29:42.704675+00:00 heroku[web.1]: Starting process with command `dotnet SCIQuoting.Webapi.dll`\r\n2018-02-28T01:29:47.463506+00:00 app[web.1]: \u001b[40m\u001b[1m\u001b[33mwarn\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]\r\n2018-02-28T01:29:47.463530+00:00 app[web.1]:       No XML encryptor configured. Key {d578adde-8b09-4342-8fa0-877f0f1db0cf} may be persisted to storage in unencrypted form.\r\n2018-02-28T01:29:47.471581+00:00 app[web.1]: \u001b[40m\u001b[1m\u001b[33mwarn\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]\r\n2018-02-28T01:29:47.471586+00:00 app[web.1]:       No XML encryptor configured. Key {d578adde-8b09-4342-8fa0-877f0f1db0cf} may be persisted to storage in unencrypted form.\r\n2018-02-28T01:29:48.902911+00:00 app[web.1]: \u001b[41m\u001b[1m\u001b[37mcrit\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.Server.Kestrel[0]\r\n2018-02-28T01:29:48.902943+00:00 app[web.1]:       Unable to start Kestrel.\r\n2018-02-28T01:29:48.902952+00:00 app[web.1]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -13 EACCES permission denied\r\n2018-02-28T01:29:48.902953+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n2018-02-28T01:29:48.902955+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.Bind(IPEndPoint endPoint)\r\n2018-02-28T01:29:48.902958+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n2018-02-28T01:29:48.902959+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n2018-02-28T01:29:48.902963+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n2018-02-28T01:29:48.902965+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.902967+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.902969+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.902970+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.ListenerPrimary.<StartAsync>d__15.MoveNext()\r\n2018-02-28T01:29:48.902972+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.902982+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.902984+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.902986+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:29:48.902987+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:49.034619+00:00 heroku[web.1]: Process exited with status 134\r\n2018-02-28T01:29:48.902989+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.902991+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:29:48.902993+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.902994+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.902996+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.902998+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n2018-02-28T01:29:48.902999+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.903001+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.903003+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.903004+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__5.MoveNext()\r\n2018-02-28T01:29:48.903006+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.903007+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.903009+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.903011+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAddressAsync>d__7.MoveNext()\r\n2018-02-28T01:29:48.903012+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.903014+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.903016+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.903017+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n2018-02-28T01:29:48.903019+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.903020+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.903022+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.903023+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n2018-02-28T01:29:48.903025+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.903026+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.903028+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.903030+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__21`1.MoveNext()\r\n2018-02-28T01:29:48.905651+00:00 app[web.1]: \u001b[41m\u001b[1m\u001b[37mcrit\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.Server.Kestrel[0]\r\n2018-02-28T01:29:48.905653+00:00 app[web.1]:       Unable to start Kestrel.\r\n2018-02-28T01:29:48.905654+00:00 app[web.1]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -13 EACCES permission denied\r\n2018-02-28T01:29:48.905656+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n2018-02-28T01:29:48.905657+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.Bind(IPEndPoint endPoint)\r\n2018-02-28T01:29:48.905661+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n2018-02-28T01:29:48.905662+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n2018-02-28T01:29:48.905664+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n2018-02-28T01:29:48.905665+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905666+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905667+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.905668+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.ListenerPrimary.<StartAsync>d__15.MoveNext()\r\n2018-02-28T01:29:48.905669+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905670+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905672+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.905674+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:29:48.905675+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905677+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905679+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:29:48.905680+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905682+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905683+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.905685+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n2018-02-28T01:29:48.905687+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905688+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905690+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.905692+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__5.MoveNext()\r\n2018-02-28T01:29:48.905693+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905698+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905700+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.905702+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAddressAsync>d__7.MoveNext()\r\n2018-02-28T01:29:48.905704+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905705+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905707+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.905708+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n2018-02-28T01:29:48.905710+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905711+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905712+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.905713+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n2018-02-28T01:29:48.905714+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.905715+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.905717+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.905718+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__21`1.MoveNext()\r\n2018-02-28T01:29:48.957869+00:00 app[web.1]: \r\n2018-02-28T01:29:48.968833+00:00 app[web.1]: Unhandled Exception: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -13 EACCES permission denied\r\n2018-02-28T01:29:48.968837+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n2018-02-28T01:29:48.968838+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.Bind(IPEndPoint endPoint)\r\n2018-02-28T01:29:48.968840+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n2018-02-28T01:29:48.968842+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n2018-02-28T01:29:48.968844+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n2018-02-28T01:29:48.968846+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968848+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968850+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968851+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.ListenerPrimary.<StartAsync>d__15.MoveNext()\r\n2018-02-28T01:29:48.968853+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968854+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968856+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968858+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:29:48.968860+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968861+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968870+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:29:48.968872+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968873+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968875+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968876+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n2018-02-28T01:29:48.968878+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968879+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968881+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968882+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__5.MoveNext()\r\n2018-02-28T01:29:48.968884+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968886+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968887+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968889+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAddressAsync>d__7.MoveNext()\r\n2018-02-28T01:29:48.968891+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968892+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968894+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968896+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n2018-02-28T01:29:48.968897+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968899+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968900+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968902+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n2018-02-28T01:29:48.968903+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968905+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968907+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968909+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__21`1.MoveNext()\r\n2018-02-28T01:29:48.968910+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968912+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968914+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968923+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext()\r\n2018-02-28T01:29:48.968924+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968926+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968928+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968929+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__5.MoveNext()\r\n2018-02-28T01:29:48.968931+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968932+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968934+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968935+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n2018-02-28T01:29:48.968937+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:29:48.968938+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:29:48.968940+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:29:48.968941+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n2018-02-28T01:29:48.968943+00:00 app[web.1]:    at SCIQuoting.Webapi.Program.Main(String[] args) in /src/src/SCIQuoting.Webapi/Program.cs:line 18\r\n2018-02-28T01:29:48.983323+00:00 app[web.1]: Aborted\r\n2018-02-28T01:29:49.058932+00:00 heroku[web.1]: State changed from starting to crashed\r\n2018-02-28T01:29:49.061569+00:00 heroku[web.1]: State changed from crashed to starting\r\n2018-02-28T01:29:57.395164+00:00 heroku[web.1]: Starting process with command `dotnet SCIQuoting.Webapi.dll`\r\n2018-02-28T01:30:01.136525+00:00 app[web.1]: \u001b[40m\u001b[1m\u001b[33mwarn\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]\r\n2018-02-28T01:30:01.136555+00:00 app[web.1]:       No XML encryptor configured. Key {58eb56a8-4685-4a01-8618-20db8ff4f794} may be persisted to storage in unencrypted form.\r\n2018-02-28T01:30:01.140767+00:00 app[web.1]: \u001b[40m\u001b[1m\u001b[33mwarn\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]\r\n2018-02-28T01:30:01.140770+00:00 app[web.1]:       No XML encryptor configured. Key {58eb56a8-4685-4a01-8618-20db8ff4f794} may be persisted to storage in unencrypted form.\r\n2018-02-28T01:30:03.930170+00:00 app[web.1]: \u001b[41m\u001b[1m\u001b[37mcrit\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.Server.Kestrel[0]\r\n2018-02-28T01:30:03.930225+00:00 app[web.1]:       Unable to start Kestrel.\r\n2018-02-28T01:30:03.930227+00:00 app[web.1]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -13 EACCES permission denied\r\n2018-02-28T01:30:03.930229+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n2018-02-28T01:30:03.930231+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.Bind(IPEndPoint endPoint)\r\n2018-02-28T01:30:03.930233+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n2018-02-28T01:30:03.930234+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n2018-02-28T01:30:03.930324+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n2018-02-28T01:30:03.930325+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930327+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930334+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.930336+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.ListenerPrimary.<StartAsync>d__15.MoveNext()\r\n2018-02-28T01:30:03.930338+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930340+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930341+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.930343+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:30:03.930345+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930346+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930348+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:30:03.930350+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930352+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930354+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.930356+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n2018-02-28T01:30:03.930358+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930359+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930361+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.930363+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__5.MoveNext()\r\n2018-02-28T01:30:03.930365+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930366+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930368+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.930370+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAddressAsync>d__7.MoveNext()\r\n2018-02-28T01:30:03.930372+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930374+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930375+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.930377+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n2018-02-28T01:30:03.930379+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930380+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930382+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.930383+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n2018-02-28T01:30:03.930385+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.930387+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.930388+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.930390+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__21`1.MoveNext()\r\n2018-02-28T01:30:03.942827+00:00 app[web.1]: \u001b[41m\u001b[1m\u001b[37mcrit\u001b[39m\u001b[22m\u001b[49m: Microsoft.AspNetCore.Server.Kestrel[0]\r\n2018-02-28T01:30:03.942831+00:00 app[web.1]:       Unable to start Kestrel.\r\n2018-02-28T01:30:03.942833+00:00 app[web.1]: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -13 EACCES permission denied\r\n2018-02-28T01:30:03.942840+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n2018-02-28T01:30:03.942841+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.Bind(IPEndPoint endPoint)\r\n2018-02-28T01:30:03.942843+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n2018-02-28T01:30:03.942845+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n2018-02-28T01:30:03.942854+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n2018-02-28T01:30:03.942856+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.942858+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.942859+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.942861+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.ListenerPrimary.<StartAsync>d__15.MoveNext()\r\n2018-02-28T01:30:03.942863+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.942865+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.942867+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.942868+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:30:03.942870+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.942872+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.942874+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:30:03.942876+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.942877+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.942879+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.942881+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n2018-02-28T01:30:03.942882+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.942884+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.943056+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.943059+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__5.MoveNext()\r\n2018-02-28T01:30:03.943061+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.943063+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.943065+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.943072+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAddressAsync>d__7.MoveNext()\r\n2018-02-28T01:30:03.943074+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.943076+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.943077+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.943084+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n2018-02-28T01:30:03.943086+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.943088+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.943089+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.943091+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n2018-02-28T01:30:03.943092+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:03.943097+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:03.943098+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:03.943100+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__21`1.MoveNext()\r\n2018-02-28T01:30:04.168278+00:00 app[web.1]: \r\n2018-02-28T01:30:04.200190+00:00 app[web.1]: Unhandled Exception: Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -13 EACCES permission denied\r\n2018-02-28T01:30:04.200205+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n2018-02-28T01:30:04.200207+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.Bind(IPEndPoint endPoint)\r\n2018-02-28T01:30:04.200209+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n2018-02-28T01:30:04.200211+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n2018-02-28T01:30:04.200213+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n2018-02-28T01:30:04.200215+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200216+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200218+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200220+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.ListenerPrimary.<StartAsync>d__15.MoveNext()\r\n2018-02-28T01:30:04.200221+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200223+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200225+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200227+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:30:04.200228+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200230+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200232+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n2018-02-28T01:30:04.200233+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200235+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200237+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200239+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass21_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n2018-02-28T01:30:04.200240+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200242+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200244+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200245+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__5.MoveNext()\r\n2018-02-28T01:30:04.200247+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200249+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200250+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200252+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAddressAsync>d__7.MoveNext()\r\n2018-02-28T01:30:04.200253+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200255+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200257+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200258+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n2018-02-28T01:30:04.200260+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200262+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200263+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200265+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n2018-02-28T01:30:04.200266+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200268+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200270+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200272+00:00 app[web.1]:    at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__21`1.MoveNext()\r\n2018-02-28T01:30:04.200273+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200275+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200277+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200285+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext()\r\n2018-02-28T01:30:04.200287+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200289+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200291+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200292+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__5.MoveNext()\r\n2018-02-28T01:30:04.200294+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200296+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200297+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200299+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n2018-02-28T01:30:04.200301+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200302+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200304+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200306+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n2018-02-28T01:30:04.200307+00:00 app[web.1]:    at SCIQuoting.Webapi.Program.Main(String[] args) in /src/src/SCIQuoting.Webapi/Program.cs:line 18\r\n2018-02-28T01:30:04.225966+00:00 app[web.1]: Aborted\r\n2018-02-28T01:30:04.309014+00:00 heroku[web.1]: Process exited with status 134\r\n2018-02-28T01:30:04.323612+00:00 heroku[web.1]: State changed from starting to crashed\r\nDisconnected from log stream. There may be events happening that you do not see here! Attempting to reconnect...\r\n2018-02-28T01:30:04.200296+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200297+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200299+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n2018-02-28T01:30:04.200302+00:00 app[web.1]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n2018-02-28T01:30:04.200304+00:00 app[web.1]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2018-02-28T01:30:04.200301+00:00 app[web.1]: --- End of stack trace from previous location where exception was thrown ---\r\n2018-02-28T01:30:04.200306+00:00 app[web.1]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n2018-02-28T01:30:04.200307+00:00 app[web.1]:    at SCIQuoting.Webapi.Program.Main(String[] args) in /src/src/SCIQuoting.Webapi/Program.cs:line 18\r\n2018-02-28T01:30:04.225966+00:00 app[web.1]: Aborted"},{"Id":"7340958477","Type":"IssuesEvent","CreatedAt":"2018-03-06T23:34:32","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2365","RelatedDescription":"Closed issue \"SlabMemoryPool page size\" (#2365) at aspnet/KestrelHttpServer","RelatedBody":"SlabMemoryPool is using PageSize.\r\n\r\n```C#\r\nprivate static readonly int _pageSize = Environment.SystemPageSize;\r\nprivate const int _blockCount = 32;\r\n```\r\n\r\nSuppose page size is large, e.g. 2MB. Now our application is using 2MB buffers and a slab is 64MB.\r\nPerhaps it is desired to still use 4KB buffers and have a slab of 2MB?\r\n\r\nCC @davidfowl @benaadams "}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7340737635","Type":"IssuesEvent","CreatedAt":"2018-03-06T22:38:24","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2139","RelatedDescription":"Opened issue \"TagHelperDescriptor serializer doesn't roundtrip 'Kind'\" (#2139) at aspnet/Razor","RelatedBody":"The 'Kind' property doesn't get roundtripped. Which means that view component tag helpers and blazor components might not work when using the CLI toolset.\r\n\r\nI think the problem is here: https://github.com/aspnet/Razor/blob/dev/src/Microsoft.VisualStudio.LanguageServices.Razor/TagHelperDescriptorJsonConverter.cs#L86 - since Kind is read  only I don't think it is serialized by the default serializer."},{"Id":"7340139619","Type":"PullRequestEvent","CreatedAt":"2018-03-06T20:34:29","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2138","RelatedDescription":"Opened pull request \"Ignore this PR. This is just for testing travis.\" (#2138) at aspnet/Razor","RelatedBody":""},{"Id":"7340067518","Type":"PullRequestEvent","CreatedAt":"2018-03-06T20:19:28","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2137","RelatedDescription":"Opened pull request \"[Design] Add host project system for VS4Mac.\" (#2137) at aspnet/Razor","RelatedBody":"- Tied into VS4Macs ProjectExtensions in order to bootstrap our Razor world.\r\n- We currently watch all DotNet projects with the expectation that they're the only ones that can potentially turn into Razor compatible projects.\r\n- Added a fallback Razor project host which is used for pre-Razor SDK Razor versions (< 2.1).\r\n- Added a default Razor project host which consumes all MSBuild data from the users packages and sets up the Razor world accordingly.\r\n- Had to modify some existing contracts to work better with new expectations. one of these was the VS4Mac specific Workspace accessor; essentially we needed to be able to lookup a workspace from a solution.\r\n- Some of our previous expectations about addins were wrong (not being able to directly reference your libraries). To avoid using reflection to bootstrap our types I tried out directly referencing our libraries and all worked fine.\r\n\r\n#2081"},{"Id":"7339827580","Type":"PullRequestEvent","CreatedAt":"2018-03-06T19:31:48","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2136","RelatedDescription":"Opened pull request \"Bring forward VS15.7 project system changes\" (#2136) at aspnet/Razor","RelatedBody":"- Also massaged pieces that were removed in 15.7 back into this merge commit (taghelper resolution, build monitoring etc.)\r\n- Left comments on key pieces."},{"Id":"7339645639","Type":"PullRequestEvent","CreatedAt":"2018-03-06T18:56:39","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2135","RelatedDescription":"Merged pull request \"Remove AppVeyor file until reliability improves\" (#2135) at aspnet/Razor","RelatedBody":"We're removing the AppVeyor file at least until the reliability for our scenarios improves."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7307968614","Type":"IssuesEvent","CreatedAt":"2018-02-28T06:01:18","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file."},{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"},{"Id":"7271114444","Type":"IssuesEvent","CreatedAt":"2018-02-20T18:33:27","Actor":"abpiskunov","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/347","RelatedDescription":"Closed issue \"File nesting in Solution Explorer is inconsistent and incorrect\" (#347) at aspnet/Tooling","RelatedBody":"The Solution Explorer for ASP.NET 5 MVC projects has several major problems - one of them is file nesting. The below issues affect Visual Studio 2015 Update 1 with ASP.NET 5 Release Candidate 1.\n#### tl;dr\n- Please fix nesting rules for `.less`, `.scss` and `.sass`, so those files are nested under `.html`.\n- Please fix incorrect nesting that sometimes appear after renaming/moving/copying files and folders.\n- Please provide an option to disable all file nesting, and eventually, options to configure nesting rules.\n- Please fix other critical Solution Explorer issues - this is just one of them, and there are many more.\n#### File nesting is inconsistent when nesting files under `.html`.\n\nThe `.less` and `.scss` files should be nested under `.html`. Those files compile to `.css` just like `.ts` compile to `.js` and they are just as much part of the view component. \n![less-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942660/6452782c-a838-11e5-9a44-d7ab6a2e5fc9.png)\n![scss-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942664/66bbd3a6-a838-11e5-8e3c-f1c369d5e1de.png)\nIn fact, if we only have a `.css` file in there, then it _is_ nested as expected, so clearly `.less` and `.scss` should also be nested:\n![css-is-nested-as-expected](https://cloud.githubusercontent.com/assets/6388663/11942670/6be4bdd4-a838-11e5-99b1-1dcc43238459.png)\n\nWhile the above is clearly a bug, and a very annoying one at that, the rules for other file types are less obvious, but should maybe also be considered... maybe `.json` should also be nested under `.html`?\nIt probably contains either settings, string resources, or data for that view component, so it seems resonable to me, although I consider this far less important than getting the style sheet nesting fixed.\n![json-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11939884/4a1bb224-a825-11e5-9ff6-631b4e8fed39.png)\n\nThose nesting rules have been inconsistent ever since they were introduced in ASP.NET 5, and **it really needs to be fixed**. Sure, everything compiles just fine, but I'm getting really pissed off looking at this mess in my Solution Explorer every day. Inconsistencies like this makes the whole concept of nesting seem like an annoyance more than a help, as it raises the obvious question \"if only some files are nested, then why nest anything at all - that's just an extra click to get to the .ts file\". Which brings me to...\n#### File nesting can be annoying\n\nWhile the fundamental idea of file nesting is not nessesarily bad, it can be _very_ annoying at times, which is why, as a _minimum_, **I want an option to disable all file nesting** - and ideally, options to configure the nesting rules.\n\nConsider this folder structure, where the folder already represents a container for the component:\n![file-nesting-is-annoying](https://cloud.githubusercontent.com/assets/6388663/11940913/ff28392a-a82b-11e5-86b4-571bc70d21bb.png)\nHere the file nesting provides no benefit at all, and actually just introduces a _really_ annoying extra click to get to the `.ts` file. A possible fix for this might be to only nest files if the folder name is different from the name of the `.html` file, but this might also be wrong - for example, a folder named `tabs` representing some fancy `tabs` component might actually contain multiple elements that work together, e.g. `tabs.html/js`, `tab-pane.html/js` and `tab-button.html/js`, and in this case we _do_ want nesting for all three of those. Therefore, I strongly believe an option to simply disable all nesting is the best option here - and it is very much needed, because despite this example, we do have projects in which the nesting provides absolutely no value and represents a major annoyance.\n\nOne could also argue that the `.html` file should actually be nested under the `.js` file.\nConsider an Angular 2 application, where the `.ts` file represents the actual Component, annotated with metadata specifying either the path to the `.html` file representing its view, or if the view is small, a string representing the markup of the view. Same for styles, where the metadata in the `.ts` file specifies either the path to the `.css` file, or a string representing the style rules. Here, both the view and the style sheet is clearly dependencies of the `.ts` file, so it would make sense to nest them below that...\n##### An alternative idea\n\nAlternatively, you could consider a completely different approach to nesting, where the part of the file name the files have in common, is used to show a \"virtual folder\" containing all the files - then file nesting could be used only for things like transpiler generated files. The image below is a concept I mocked up to illustrate this idea:\n![virtual-folder-concept](https://cloud.githubusercontent.com/assets/6388663/11942319/042b84ea-a836-11e5-80f1-b5941cfbdfa7.png)\nHere, all the files have the \"foo\" part of their name in common, and is therefore nested under a \"foo\" node in Solution Explorer. However, in the file system, the actual files are all located in the components folder, so in the code the path would be `app/components/foo.js` - nice an clean, works for any file type, and makes no assumptions about whether `.html` or `.js` is more important.\n\nGoing further with this idea, the IDE could also be smart, so when selecting this \"virtual folder\", it could maybe somehow open all the `foo.*` files in a split view (ignoring transpilation output of course), thus providing a quick way to see all the component code at once. Just a thought...\n### File nesting is broken\n\nNot only is file nesting inconsistent, and sometimes annoying, but it is also broken.\nHere are two cases of incorrect behavior I managed to reproduce - unfortunately, this does not seem to fail consistently, so it can be hard to reproduce - but it does happen often enough to be annoying.\n![file-nested-on-drag-copy](https://cloud.githubusercontent.com/assets/6388663/11943207/4749c9e8-a83c-11e5-9f15-304cb16e8419.png)\n![nesting-broken-when-folder-is-renamed](https://cloud.githubusercontent.com/assets/6388663/11943211/4c807074-a83c-11e5-8e71-4bed0bd4353c.png)\n\nPlease take those Solution Explorer issues seriously - I've provided feedback about multiple critical issues several several months ago, and thus far _nothing_ has improved. Solution Explorer still hangs or crashes the whole IDE when a large number of files is modified/moved/copied/renamed, it still has annoying, inconsistent and buggy file nesting, and it still constantly gets out of sync with the file system, crashing first the project system and eventually the whole IDE. I'm more that a little concerned about seeing a release candidate label on something this buggy and unpolished - if this is indeed what you intend to release, then we intend to find another IDE for our frontend development.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7340008772","Type":"IssuesEvent","CreatedAt":"2018-03-06T20:07:16","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Opened issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292) at aspnet/Announcements","RelatedBody":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349"},{"Id":"7215731126","Type":"IssuesEvent","CreatedAt":"2018-02-08T09:18:22","Actor":"SteveSandersonMS","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Opened issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289) at aspnet/Announcements","RelatedBody":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"971084152693866496","CreatedAt":"2018-03-06T18:04:38+00:00","UserScreenname":"aspnet","Text":"We are live at https://t.co/4Ioo9jNSN2 ! Join us!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"971075755168841728","CreatedAt":"2018-03-06T17:31:16+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup starts at 10 AM  Pacific / 1800 GMT. Ryan Nowak will be showing Web API 2.1 fâ¦ https://t.co/OW0zeYZPyq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":7,"RawContent":null},{"Id":"970812132399890432","CreatedAt":"2018-03-06T00:03:43+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is a feature deep dive on Web API improvements in 2.1 with Ryan Nowak.\n\nTuesdâ¦ https://t.co/eKElaXNIR3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":11,"RawContent":null},{"Id":"969671939106025473","CreatedAt":"2018-03-02T20:33:00+00:00","UserScreenname":"aspnet","Text":"Jon the Azure AD team for their first Office Hours call on March 8. https://t.co/kVYF9JWzeZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":54,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Raâ¦ https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":9,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.â¦ https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answeâ¦ https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of tâ¦ https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlandoâ¦ https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2018-03-07T05:30:10.2903544Z","RunDurationInMilliseconds":8887}