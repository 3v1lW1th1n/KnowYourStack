{"Data":{"Vue":{"Events":[{"Id":"6916880510","Type":"IssuesEvent","CreatedAt":"2017-11-29T05:29:56","Actor":"deanilvincent","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7149","RelatedDescription":"Opened issue \"@ for event handler doesn't work in cshtml razor page\" (#7149) at vuejs/vue","RelatedBody":"### Version\r\n2.5.9\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/zausd38u/](https://jsfiddle.net/zausd38u/)\r\n\r\n### Steps to reproduce\r\nSince I'm using the latest version of Vue.JS that supports short hand code for events, I'm trying to use @click instead of v-on:click inside the razor .cshtml file. I'm developing an app and the backend is ASP.Net Core.\r\n\r\n\r\n\r\n### What is expected?\r\nThe expected result should be a working:\r\n@click\r\n\r\n### What is actually happening?\r\nAfter encoding the @click=\"submitTest\",\r\n\r\nVisual Studio says, \"The name 'click' does not exist in the current context. Cannot resolve symbol 'click'\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6916666008","Type":"IssuesEvent","CreatedAt":"2017-11-29T03:58:30","Actor":"fnlctrl","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/7148","RelatedDescription":"Closed issue \"为 firefox57 开发的使用 vuejs 的插件，没通过安全审核\" (#7148) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\n我的 firefox 的 CSP 内容如下：\r\n\r\n  \"content_security_policy\": \"script-src 'self' 'unsafe-eval' https://api.coinmarketcap.com https://deals99.com; object-src 'self'\"\r\n\r\n\r\nmozilla 给我发的邮件内容如下：\r\n\r\n----------------------------------------\r\nHello,\r\n\r\n\r\nYour add-on Cryptocurrency Price Tracker - Bitcoin, Ethereum has been reviewed and one or more of of its versions have been disabled due to critical issues discovered.\r\n\r\nDetails:\r\nThis version did not pass the review because of the following issues:\r\n\r\n1) The use of &#39;unsafe-eval&#39; is not allowed in the manifest.json&#39;s CSP as it can cause major security issues.\r\n\r\n2) Your custom CSP allows remote-script injection which is not allowed.\r\n\r\nPlease fix them and submit again. Thank you.\r\n\r\n\r\n是因为我的 CSP 里声明了使用 unsafe-eval 导致的，请问这该怎么解决？\r\n\r\n### What does the proposed API look like?\r\nVue.dont_use_eval();\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6913659307","Type":"IssuesEvent","CreatedAt":"2017-11-28T15:53:47","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1911","RelatedDescription":"Reopened issue \"Regular links not working in IE11\" (#1911) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1 (tested with vuejs 2.5.9)\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6b7k58wh/](https://jsfiddle.net/6b7k58wh/)\r\n\r\n### Steps to reproduce\r\n* Use Internet Explorer 11 (Tested with version 11.1176.10586.0 update version 1.0.47)\r\n* Navigate with a router link to a page that contains a regular link (\"<a href...\" )\r\n* Click on the regular link\r\n\r\n\r\n\r\n### What is expected?\r\nThat i am navigated to the correct page. This is working correctly in chrome and firefox.\r\n\r\n### What is actually happening?\r\nThe URL is changing but the page content stays the same. (see video on Youtube)\r\n\r\n---\r\nThis was working up to vue-router 2.7.0 (with vuejs 2.4.2).\r\n\r\nI tested with chrome and ie11:\r\nhttps://www.youtube.com/watch?v=2E8uKJbrCSM\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6913166593","Type":"IssuesEvent","CreatedAt":"2017-11-28T14:31:01","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1911","RelatedDescription":"Closed issue \"Regular links not working in IE11\" (#1911) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1 (tested with vuejs 2.5.9)\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6b7k58wh/](https://jsfiddle.net/6b7k58wh/)\r\n\r\n### Steps to reproduce\r\n* Use Internet Explorer 11 (Tested with version 11.1176.10586.0 update version 1.0.47)\r\n* Navigate with a router link to a page that contains a regular link (\"<a href...\" )\r\n* Click on the regular link\r\n\r\n\r\n\r\n### What is expected?\r\nThat i am navigated to the correct page. This is working correctly in chrome and firefox.\r\n\r\n### What is actually happening?\r\nThe URL is changing but the page content stays the same. (see video on Youtube)\r\n\r\n---\r\nThis was working up to vue-router 2.7.0 (with vuejs 2.4.2).\r\n\r\nI tested with chrome and ie11:\r\nhttps://www.youtube.com/watch?v=2E8uKJbrCSM\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6912178874","Type":"IssuesEvent","CreatedAt":"2017-11-28T11:00:46","Actor":"samhammer","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1911","RelatedDescription":"Opened issue \"Regular links not working in IE11\" (#1911) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6b7k58wh/](https://jsfiddle.net/6b7k58wh/)\r\n\r\n### Steps to reproduce\r\n* Use Internet Explorer 11 (Tested with version 11.1176.10586.0 update version 1.0.47)\r\n* Navigate with a router link to a page that contains a regular link (\"<a href...\" )\r\n* Click on the regular link\r\n\r\n\r\n\r\n### What is expected?\r\nThat i am navigated to the correct page. This is working correctly in chrome and firefox.\r\n\r\n### What is actually happening?\r\nThe URL is changing but the page content stays the same. (see video on Youtube)\r\n\r\n---\r\nI tested with chrome and ie11:\r\nhttps://www.youtube.com/watch?v=2E8uKJbrCSM\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6914920330","Type":"PullRequestEvent","CreatedAt":"2017-11-28T19:53:08","Actor":"Alex-Sokolov","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1072","RelatedDescription":"Opened pull request \"[RU] Translation update\" (#1072) at vuejs/vuex","RelatedBody":"Typos fixes"},{"Id":"6914259686","Type":"IssuesEvent","CreatedAt":"2017-11-28T17:39:49","Actor":"vue-issue-bot","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1071","RelatedDescription":"Closed issue \"Vuex: Computed Property Returns Undefined - asyc Axios\" (#1071) at vuejs/vuex","RelatedBody":"Hey\r\n\r\nI have async axios calls to my DB that I am dispatching with an action when the site loads.\r\n(I've tried dispatching in beforeEnter() on my Vue-router, beforeCreated(), and Created() on my Form.Vue)\r\n\r\nI have a computed property return the info using a getter.\r\n\r\nThe problem I am experiencing is the data is getting there after the page has finished loading and returns Undefined - nothing renders on the page. \r\n\r\nIf I check my Vue DevTools, all the data is in the correct places in the State.\r\n\r\nHow can I get the data to finish loading before the page?\r\n\r\n\r\n//ACTIONS\r\n```\r\nasync loadInputs({ state, getters, commit, dispatch }) {    \r\n  if ( !state.loading ) {\r\n    commit( 'setLoading', true )\r\n    const inputListsPromise = axios.get('/companyInputLists')\r\n    const inputsPromise = axios.get('/companyInputs')\r\n\r\n    const [inputLists, inputs] = await Promise.all([inputListsPromise, inputsPromise])\r\n    commit( 'setLoading', false )\r\n    commit('loadInputs' , [inputLists, inputs])\r\n  }\r\n},\r\n\r\n\r\n\r\nset ({commit}, value) {\r\n  commit('updateValue', value)\r\n},\r\n```\r\n\r\n//MUTATORS\r\n```\r\nsetLoading(state, value) {\r\n\tstate.loading = value\r\n},\r\n\r\nloadInputs(state, data){\r\n\tstate.layout = {}\r\n\tstate.data = {}\r\n\tdata[0].data.map(list => {\r\n\t\tlist['inputs'] = []\r\n\t\tstate.layout[list.order] = list\r\n\r\n\t\tdata[1].data.map(input => {\r\n\t\t\tif(input.list_id == list.id){\r\n\t\t\t\tstate.layout[list.order].inputs.push(input)\r\n\t\t\t\tstate.data[input.label] = ''\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n},\r\n\r\nupdateValue(state, value) {\r\n\tstate.data[value.type] = value.value\r\n},\r\n```\r\n\r\n//FORM.VUE\r\n```\r\n      <draggable class=\"dragArea layout row wrap justify-center\" :options=\"{group:'lists'}\">\r\n        <v-flex v-for=\"list in lists\" v-bind:key=\"list.index\" :class=\"[list.label, flexBoxSize(list.size)]\">\r\n          <v-subheader v-text=\"list.label\"></v-subheader>\r\n\r\n          <draggable class=\"dragArea layout row wrap\" :options=\"{group:'inputs'}\">\r\n            <v-flex v-for=\"item in list.inputs\" v-bind:key=\"item.index\" :class=\"[item.label, flexBoxSize(item.size)]\">\r\n\r\n              <textfield v-if=\"item.type_id == 1\" formType=\"clientForm\" :label=\"item.label\" :required=\"item.required\"></textfield>\r\n              <email v-if=\"item.type_id == 2\" formType=\"clientForm\" :label=\"item.label\"  :required=\"item.required\"></email>\r\n              <phone v-if=\"item.type_id == 3\" formType=\"clientForm\" :label=\"item.label\"  :required=\"item.required\"></phone>\r\n              <calendar v-if=\"item.type_id == 4\" formType=\"clientForm\" :label=\"item.label\"  :required=\"item.required\"></calendar>\r\n\r\n\t    </v-flex>\r\n          </draggable>\r\n\r\n        </v-flex>\r\n      </draggable>\r\n\r\n<script>\r\nexport default {\r\n  components: {\r\n    draggable,\r\n  },\r\n\r\n  beforeCreate(){\r\n    this.$store.dispatch('clientForm/loadInputs')\r\n  },\r\n\r\n  computed: {\r\n    lists: {\r\n      get() {\r\n        return this.$store.getters['clientForm/get'].layout\r\n      },\r\n      set(value) {\r\n        this.$store.commit('clientForm/updateInputList', value)\r\n      }\r\n    }\r\n  },\r\n```"},{"Id":"6914259616","Type":"IssuesEvent","CreatedAt":"2017-11-28T17:39:49","Actor":"dark9911","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1071","RelatedDescription":"Opened issue \"Vuex: Computed Property Returns Undefined - asyc Axios\" (#1071) at vuejs/vuex","RelatedBody":"Hey\r\n\r\nI have async axios calls to my DB that I am dispatching with an action when the site loads.\r\n(I've tried dispatching in beforeEnter() on my Vue-router, beforeCreated(), and Created() on my Form.Vue)\r\n\r\nI have a computed property return the info using a getter.\r\n\r\nThe problem I am experiencing is the data is getting there after the page has finished loading and returns Undefined - nothing renders on the page. \r\n\r\nIf I check my Vue DevTools, all the data is in the correct places in the State.\r\n\r\nHow can I get the data to finish loading before the page?\r\n\r\n\r\n//ACTIONS\r\n```\r\nasync loadInputs({ state, getters, commit, dispatch }) {    \r\n  if ( !state.loading ) {\r\n    commit( 'setLoading', true )\r\n    const inputListsPromise = axios.get('/companyInputLists')\r\n    const inputsPromise = axios.get('/companyInputs')\r\n\r\n    const [inputLists, inputs] = await Promise.all([inputListsPromise, inputsPromise])\r\n    commit( 'setLoading', false )\r\n    commit('loadInputs' , [inputLists, inputs])\r\n  }\r\n},\r\n\r\n\r\n\r\nset ({commit}, value) {\r\n  commit('updateValue', value)\r\n},\r\n```\r\n\r\n//MUTATORS\r\n```\r\nsetLoading(state, value) {\r\n\tstate.loading = value\r\n},\r\n\r\nloadInputs(state, data){\r\n\tstate.layout = {}\r\n\tstate.data = {}\r\n\tdata[0].data.map(list => {\r\n\t\tlist['inputs'] = []\r\n\t\tstate.layout[list.order] = list\r\n\r\n\t\tdata[1].data.map(input => {\r\n\t\t\tif(input.list_id == list.id){\r\n\t\t\t\tstate.layout[list.order].inputs.push(input)\r\n\t\t\t\tstate.data[input.label] = ''\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n},\r\n\r\nupdateValue(state, value) {\r\n\tstate.data[value.type] = value.value\r\n},\r\n```\r\n\r\n//FORM.VUE\r\n```\r\n      <draggable class=\"dragArea layout row wrap justify-center\" :options=\"{group:'lists'}\">\r\n        <v-flex v-for=\"list in lists\" v-bind:key=\"list.index\" :class=\"[list.label, flexBoxSize(list.size)]\">\r\n          <v-subheader v-text=\"list.label\"></v-subheader>\r\n\r\n          <draggable class=\"dragArea layout row wrap\" :options=\"{group:'inputs'}\">\r\n            <v-flex v-for=\"item in list.inputs\" v-bind:key=\"item.index\" :class=\"[item.label, flexBoxSize(item.size)]\">\r\n\r\n              <textfield v-if=\"item.type_id == 1\" formType=\"clientForm\" :label=\"item.label\" :required=\"item.required\"></textfield>\r\n              <email v-if=\"item.type_id == 2\" formType=\"clientForm\" :label=\"item.label\"  :required=\"item.required\"></email>\r\n              <phone v-if=\"item.type_id == 3\" formType=\"clientForm\" :label=\"item.label\"  :required=\"item.required\"></phone>\r\n              <calendar v-if=\"item.type_id == 4\" formType=\"clientForm\" :label=\"item.label\"  :required=\"item.required\"></calendar>\r\n\r\n\t    </v-flex>\r\n          </draggable>\r\n\r\n        </v-flex>\r\n      </draggable>\r\n\r\n<script>\r\nexport default {\r\n  components: {\r\n    draggable,\r\n  },\r\n\r\n  beforeCreate(){\r\n    this.$store.dispatch('clientForm/loadInputs')\r\n  },\r\n\r\n  computed: {\r\n    lists: {\r\n      get() {\r\n        return this.$store.getters['clientForm/get'].layout\r\n      },\r\n      set(value) {\r\n        this.$store.commit('clientForm/updateInputList', value)\r\n      }\r\n    }\r\n  },\r\n```"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-11-29T05:30:36.7031674Z","RunDurationInMilliseconds":2469}