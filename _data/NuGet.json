{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11671180399","Type":"PullRequestEvent","CreatedAt":"2020-03-04T02:20:04","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7858","RelatedDescription":"Opened pull request \"[ECR] Enable the active update of SQL certificates without restarting.\" (#7858) at NuGet/NuGetGallery","RelatedBody":"In order to enable the on-line active update of SQL certificates, we should not inject the SQL connection string to build the \"SqlConnectionFactory\".\r\nTest locally and verify the behavior."},{"Id":"11640202229","Type":"PullRequestEvent","CreatedAt":"2020-02-28T22:14:47","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7856","RelatedDescription":"Merged pull request \"Initialize cookie compliance service during startup\" (#7856) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2980\r\n\r\nThis adds about 23 seconds to start-up time. "},{"Id":"11638426841","Type":"IssuesEvent","CreatedAt":"2020-02-28T18:09:41","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7857","RelatedDescription":"Closed issue \"[ECR] Investigate on-line SQL ECR for services/Jobs\" (#7857) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11638316063","Type":"IssuesEvent","CreatedAt":"2020-02-28T17:55:06","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7857","RelatedDescription":"Opened issue \"[ECR] Investigate on-line SQL ECR for services/Jobs\" (#7857) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11631273407","Type":"PullRequestEvent","CreatedAt":"2020-02-28T00:50:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7856","RelatedDescription":"Opened pull request \"Initialize cookie compliance service during startup\" (#7856) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2980\r\n\r\nThis adds about 23 seconds to start-up time. "},{"Id":"11629988288","Type":"IssuesEvent","CreatedAt":"2020-02-27T21:25:54","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7855","RelatedDescription":"Opened issue \"[A11y]Status.NuGet.Org must not use meta refresh\" (#7855) at NuGet/NuGetGallery","RelatedBody":"@ryuyu commented on [Thu Feb 27 2020](https://github.com/NuGet/Engineering/issues/3018)\n\nCurrently, the status page uses a <meta> tag to cause the page to refresh.\r\n\r\nThis is not a11y compliant.\r\nThe page should be updated to use a javascript refresh instead.\n\n"},{"Id":"11616862107","Type":"IssuesEvent","CreatedAt":"2020-02-26T16:21:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7849","RelatedDescription":"Closed issue \"[2020-02-18] Deployment\" (#7849) at NuGet/NuGetGallery","RelatedBody":"### NuGetGallery\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=578473\r\n\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\n### Azure Search Service\r\n\r\nChanges:\r\n- Use managed identity for KeyVault access: https://github.com/NuGet/Engineering/issues/2972\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=579684\r\n\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\n### CDNRedirect service\r\n\r\nChanges:\r\n- Use KeyVault integrated certificate: https://github.com/NuGet/Engineering/issues/2995\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=580913\r\n\r\n- [x] DEV\r\n- [x] PROD\r\n\r\n### Licenses service\r\n\r\nChanges:\r\n- Use KeyVault integrated certificate: https://github.com/NuGet/Engineering/issues/2995\r\n\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=580910\r\n\r\n- [x] DEV\r\n- [x] PROD"},{"Id":"11610145333","Type":"IssuesEvent","CreatedAt":"2020-02-26T02:05:58","Actor":"rafaels-dev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7854","RelatedDescription":"Closed issue \"Error on VS 2012 during temporary deactivation os TLS 1.0\" (#7854) at NuGet/NuGetGallery","RelatedBody":"I'm using VS 2012 and during the [TLS 1.0 deactivation](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/), my NuGet Package Manager got an issue.\r\n\r\nI can't search os install packages.\r\n![image](https://user-images.githubusercontent.com/5066597/75301330-4a2b4d80-5819-11ea-873d-85d36c3082d4.png)\r\n\r\nMy VS 2012 About:\r\n```\r\nMicrosoft Visual Studio Professional 2012\r\nVersion 11.0.61219.00 Update 5\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nMicrosoft Visual Studio Tools for Applications 2012   04938-004-0033001-02768\r\nMicrosoft Visual Studio Tools for Applications 2012\r\n\r\nTeam Explorer for Visual Studio 2012   04938-004-0033001-02768\r\nMicrosoft Team Explorer for Visual Studio 2012\r\n\r\nVisual Basic 2012   04938-004-0033001-02768\r\nMicrosoft Visual Basic 2012\r\n\r\nVisual C# 2012   04938-004-0033001-02768\r\nMicrosoft Visual C# 2012\r\n\r\nVisual C++ 2012   04938-004-0033001-02768\r\nMicrosoft Visual C++ 2012\r\n\r\nVisual F# 2012   04938-004-0033001-02768\r\nMicrosoft Visual F# 2012\r\n\r\nVisual Studio 2012 Code Analysis Spell Checker   04938-004-0033001-02768\r\nMicrosoft® Visual Studio® 2012 Code Analysis Spell Checker\r\n\r\nPortions of International CorrectSpell™ spelling correction system © 1993 by Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nThe American Heritage® Dictionary of the English Language, Third Edition Copyright © 1992 Houghton Mifflin Company. Electronic version licensed from Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nASP.NET and Web Tools   2012.3.41009\r\nMicrosoft Web Developer Tools contains the following components:\r\nSupport for creating and opening ASP.NET web projects\r\nBrowser Link: A communication channel between Visual Studio and browsers\r\nEditor extensions for HTML, CSS, and JavaScript\r\nPage Inspector: Inspection tool for ASP.NET web projects\r\nScaffolding: A framework for building and running code generators\r\nServer Explorer extensions for Windows Azure Web Sites\r\nWeb publishing: Extensions for publishing ASP.NET web projects to hosting providers, on-premises servers, or Windows Azure\r\n\r\nGit Source Control Provider   1.0.0.0\r\n\r\n\r\nNuGet Package Manager   2.8.60318.667\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.0\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   11.1.20627.00\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Reporting   \r\nFor more information please visit http://www.telerik.com/reporting. Copyright © 2005–2020 Telerik Corp.\r\n\r\nWeb Essentials   3.8\r\nAdds many useful features to Visual Studio for web developers.\r\n```"},{"Id":"11609736510","Type":"IssuesEvent","CreatedAt":"2020-02-26T00:57:24","Actor":"rafaels-dev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7854","RelatedDescription":"Opened issue \"Error on VS 2012 during temporary deactivation os TLS 1.0\" (#7854) at NuGet/NuGetGallery","RelatedBody":"I'm using VS 2012 and during the [TLS 1.0 deactivation](https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/), my NuGet Package Manager got an issue.\r\n\r\nI can't search os install packages.\r\n![image](https://user-images.githubusercontent.com/5066597/75301330-4a2b4d80-5819-11ea-873d-85d36c3082d4.png)\r\n\r\nMy VS 2012 About:\r\n```\r\nMicrosoft Visual Studio Professional 2012\r\nVersion 11.0.61219.00 Update 5\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nInstalled Version: Professional\r\n\r\nMicrosoft Visual Studio Tools for Applications 2012   04938-004-0033001-02768\r\nMicrosoft Visual Studio Tools for Applications 2012\r\n\r\nTeam Explorer for Visual Studio 2012   04938-004-0033001-02768\r\nMicrosoft Team Explorer for Visual Studio 2012\r\n\r\nVisual Basic 2012   04938-004-0033001-02768\r\nMicrosoft Visual Basic 2012\r\n\r\nVisual C# 2012   04938-004-0033001-02768\r\nMicrosoft Visual C# 2012\r\n\r\nVisual C++ 2012   04938-004-0033001-02768\r\nMicrosoft Visual C++ 2012\r\n\r\nVisual F# 2012   04938-004-0033001-02768\r\nMicrosoft Visual F# 2012\r\n\r\nVisual Studio 2012 Code Analysis Spell Checker   04938-004-0033001-02768\r\nMicrosoft® Visual Studio® 2012 Code Analysis Spell Checker\r\n\r\nPortions of International CorrectSpell™ spelling correction system © 1993 by Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nThe American Heritage® Dictionary of the English Language, Third Edition Copyright © 1992 Houghton Mifflin Company. Electronic version licensed from Lernout & Hauspie Speech Products N.V. All rights reserved.\r\n\r\nASP.NET and Web Tools   2012.3.41009\r\nMicrosoft Web Developer Tools contains the following components:\r\nSupport for creating and opening ASP.NET web projects\r\nBrowser Link: A communication channel between Visual Studio and browsers\r\nEditor extensions for HTML, CSS, and JavaScript\r\nPage Inspector: Inspection tool for ASP.NET web projects\r\nScaffolding: A framework for building and running code generators\r\nServer Explorer extensions for Windows Azure Web Sites\r\nWeb publishing: Extensions for publishing ASP.NET web projects to hosting providers, on-premises servers, or Windows Azure\r\n\r\nGit Source Control Provider   1.0.0.0\r\n\r\n\r\nNuGet Package Manager   2.8.60318.667\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.0\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   11.1.20627.00\r\nMicrosoft SQL Server Data Tools\r\n\r\nTelerik Reporting   \r\nFor more information please visit http://www.telerik.com/reporting. Copyright © 2005–2020 Telerik Corp.\r\n\r\nWeb Essentials   3.8\r\nAdds many useful features to Visual Studio for web developers.\r\n```"},{"Id":"11607150819","Type":"IssuesEvent","CreatedAt":"2020-02-25T19:21:31","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7853","RelatedDescription":"Opened issue \"\"Contact owners\" link should not appear on a package details page when there are no owners\" (#7853) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nA package details page for a package without any owners still shows the \"Contact owners\" link on the right. It is unclear what will happen when the message is sent.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Find a package with no owners ([example](https://www.nuget.org/packages/bar/))\r\n2. Look at its package details page\r\n3. See the \"Contact owners\" link on the right\r\n\r\n### Expected behavior\r\nNo \"Contact owners\" link.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/102933/75279548-a1510400-57c0-11ea-8acd-a6d230eb3f83.png)\r\n"},{"Id":"11599455192","Type":"IssuesEvent","CreatedAt":"2020-02-25T02:18:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/4973","RelatedDescription":"Closed issue \"Gallery accepts packages containing floating version ranges in dependencies\" (#4973) at NuGet/NuGetGallery","RelatedBody":"The following packages have floating versions in their dependency version ranges:\r\n\r\nID | Version\r\n-- | --\r\nScissorhands.Helpers | 1.0.0-alpha-17\r\nScissorhands.Helpers | 1.0.0-alpha-16\r\nPInvokeCompiler | 1.0.0-rc1\r\nJWT | 2.3.1\r\n\r\nThese should be rejected on upload and V3 registrations should strip the floating-ness, as client does:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/bdd8626c0e5c6ee0b505ea8a1274c5fe941fb6d1/src/NuGet.Core/NuGet.Protocol/DependencyInfo/RegistrationUtility.cs#L26\r\n\r\n/cc @emgarten "},{"Id":"11599448801","Type":"IssuesEvent","CreatedAt":"2020-02-25T02:17:25","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7836","RelatedDescription":"Closed issue \"Remove the SemVer 2.0.0 warning from nuget.org\" (#7836) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\n\r\nWhen the SemVer 2.0.0 changes were introduced to the V2 and V3 protocol, they are intended to mitigate the impact of SemVer 2.0.0 packages breaking old clients, e.g. suppose a very popular package released a SemVer 2.0.0 version. In such a case a 2.x customer would fail to restore a package because the version parsing would explode. So we make SemVer 2.0.0 packages \"opt-in\". \r\n\r\nThis protocol change meant that SemVer 2.0.0 packages were hidden in most of our APIs for clients that predate NuGet version 4.3. 4.3 is when the SemVer 2.0.0 protocol was implemented. At that same time we put a warning banner on nuget.org.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/73881689-a223f500-4815-11ea-8717-653f6302cc65.png)\r\nhttps://www.nuget.org/packages/NuGet.Versioning/5.5.0-preview.2.6382\r\n\r\nA similar warning is also visible during UI upload and during package push. And during pack (NU5105).\r\n\r\nSince 4.3 was shipped so long ago, most clients now support the SemVer 2.0.0 protocol and this warning is more noisy than helpful.\r\n\r\nRange | Percent | Note\r\n-- | -- | --\r\n≥ 4.3 | ~96.4% | Supports SemVer 2.0.0 protocol\r\n≥ 3.0 && < 4.3 | ~3.6% | Partial SemVer 2.0.0 but not SemVer 2.0.0 protocol `*`\r\n< 3.0 | ~0.0% | Does not support SemVer 2.0.0\r\n\r\n`*` =\r\n- Anything before 4.3 will not see SemVer 2.0.0 in search or in the PM UI.\r\n- 3.5.0 and on supported SemVer 2.0.0 restore in packages.config so people can hand edit to work-around.\r\n- PackageReference always supported SemVer 2.0.0 from what I can tell so people could hard-code a SemVer 2.0.0 package in their .csproj and still restore.\r\n- V3 feeds always return SemVer 2.0.0 packages from flat container so packages can be found prior to SemVer 2.0.0. protocol support\r\n\r\n### Describe the solution you'd like\r\n\r\nRemove these warnings entirely.\r\n\r\n### Additional details\r\n\r\nPrompted by https://twitter.com/SimonCropp/status/1169447145939685376, https://github.com/NuGet/NuGetGallery/pull/7772, and https://github.com/NuGet/Home/issues/5201.\r\n\r\n/cc @nkolev92 @SimonCropp @agr @karann-msft \r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11671562645","Type":"IssuesEvent","CreatedAt":"2020-03-04T03:37:32","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9131","RelatedDescription":"Closed issue \"Use XNode.EqualityComparer to compare XDocument instead of string comparison\" (#9131) at NuGet/Home","RelatedBody":"Details about Problem - Use XNode.EqualityComparer to compare XDocument instead of string comparison for better usage of .NET API [src](https://github.com/NuGet/NuGet.Client/blob/01b8ddaf018b17e493646583b432a867dd8065f0/src/NuGet.Core/NuGet.Commands/RestoreCommand/Utility/BuildAssetsUtils.cs#L339)\r\n\r\n"},{"Id":"11670918755","Type":"IssuesEvent","CreatedAt":"2020-03-04T01:27:02","Actor":"liesauer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9209","RelatedDescription":"Closed issue \"nuget push does not accept absolute path of a package\" (#9209) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version: 2.8.7.0\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. upload a package with full path.\r\n\r\n2. nuget can not find the package because it always combine with current directory no matter it is an absolute path or a relative path.\r\n\r\n```\r\ncd /home/AnotherWorkSpace\r\nnuget push /path/to/project/package.1.0.0.nupkg -Source \"NuGet\"\r\n```\r\n\r\nand say\r\n```\r\nDirectory '/home/AnotherWorkSpace/path/to/project/package.1.0.0.nupkg' not found.\r\n```\r\ncombine with current directory when specifing a absolute path is not right!\r\n"},{"Id":"11670085973","Type":"IssuesEvent","CreatedAt":"2020-03-03T22:58:05","Actor":"VonOgre","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9255","RelatedDescription":"Opened issue \"NuGet.Versioning NuGetVersion.TryParseStrict() always returns true\" (#9255) at NuGet/Home","RelatedBody":"## Details about Problem\r\nIt seems that NuGetVersion.TryParseStrict() doesn't actually ever return false, which isn't ideal for a \"Try\" method. The implementation actually does check if it can parse to a SemanticVersion, but always returns true anyways...\r\nhttps://github.com/NuGet/NuGet.Client/blob/bf9523d7b66f749f8709c8f082944db6a60f9153/src/NuGet.Core/NuGet.Versioning/NuGetVersionFactory.cs#L105-L115\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuGet.Versioning v5.4.0\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nvar isValid1 = NuGetVersion.TryParseStrict(\"NotAVersion\", out var parsed1);\r\n// isValid1 == true, parsed == null\r\n\r\nvar isValid2 = NuGetVersion.TryParseStrict(\"\", out var parsed2);\r\n// isValid2 == true, parsed == null\r\n\r\nvar isValid3 = NuGetVersion.TryParseStrict(\"1.0.0\", out var parsed3);\r\n// isValid2 == true, parsed != null\r\n\r\n\r\n"},{"Id":"11670054761","Type":"IssuesEvent","CreatedAt":"2020-03-03T22:53:41","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9254","RelatedDescription":"Closed issue \"XPlat Signing: New manual testing plan\" (#9254) at NuGet/Home","RelatedBody":"We need to write up new guidance for our test team on what needs to be done to manually test cross-platform verification. We need to get a hold of the old test plan and adapt it to target the areas that we think are most vulnerable."},{"Id":"11670048269","Type":"IssuesEvent","CreatedAt":"2020-03-03T22:52:47","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9254","RelatedDescription":"Opened issue \"XPlat Signing: New manual testing plan\" (#9254) at NuGet/Home","RelatedBody":"We need to write up new guidance for our test team on what needs to be done to manually test cross-platform verification. We need to get a hold of the old test plan and adapt it to target the areas that we think are most vulnerable."},{"Id":"11669767613","Type":"IssuesEvent","CreatedAt":"2020-03-03T22:15:32","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9253","RelatedDescription":"Opened issue \"net5: How will our insertions work?\" (#9253) at NuGet/Home","RelatedBody":"We need to make sure we understand any extra work that might be needed for our insertions into net5. I believe we are already doing these insertions, but in light of #9252, we might need to update documentation about expected test branches and such. This issue is mostly about making sure we understand everything and documenting anything we need to document."},{"Id":"11669746553","Type":"IssuesEvent","CreatedAt":"2020-03-03T22:12:58","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9252","RelatedDescription":"Opened issue \"net5: Set up CI to run tests on both netcore3 and net5\" (#9252) at NuGet/Home","RelatedBody":"In order to properly support net5 and make sure all our relevant code works on that platform, we should start testing on net5 going forward -- but since we're already testing on netcore3, and we need to keep supporting that one, that means we'll need to run the tests once on each of the two platforms going forward. Unfortunate, but I think necessary."},{"Id":"11668416915","Type":"IssuesEvent","CreatedAt":"2020-03-03T19:36:15","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9160","RelatedDescription":"Closed issue \"Code Analysis spec work\" (#9160) at NuGet/Home","RelatedBody":""},{"Id":"11667717629","Type":"IssuesEvent","CreatedAt":"2020-03-03T18:15:31","Actor":"gitfool","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9251","RelatedDescription":"Opened issue \"Add source name to `dotnet nuget list source`\" (#9251) at NuGet/Home","RelatedBody":"@rrelyea I'm playing with the preview of 3.1.200 SDK and `dotnet nuget list source`:\r\n```\r\n$ cat NuGet.config\r\n﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <disabledPackageSources>\r\n    <clear />\r\n  </disabledPackageSources>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  </packageSources>\r\n</configuration>\r\n\r\n$ dotnet nuget list source --configfile NuGet.config\r\nRegistered Sources:\r\n  1.  nuget.org [Enabled]\r\n      https://api.nuget.org/v3/index.json\r\n\r\n$ dotnet nuget list source --format detailed --configfile NuGet.config\r\nRegistered Sources:\r\n  1.  nuget.org [Enabled]\r\n      https://api.nuget.org/v3/index.json\r\n\r\n$ dotnet nuget list source --format short --configfile NuGet.config\r\nE https://api.nuget.org/v3/index.json\r\n```\r\nMy immediate impression is that the short format should also include the source name, in this case `nuget.org`; i.e. I would expect the short format to be succinct but complete:\r\n```\r\n$ dotnet nuget list source --format short --configfile NuGet.config\r\nE nuget.org https://api.nuget.org/v3/index.json\r\n```\r\nThis is backed up by the following experience:\r\n```\r\n$ dotnet nuget add source https://ci.appveyor.com/nuget/gitversion-8nigugxjftrw --configfile NuGet.config\r\nPackage source with Name: Package source {0}1 added successfully.\r\n\r\n$ dotnet nuget list source --configfile NuGet.config\r\nRegistered Sources:\r\n  1.  nuget.org [Enabled]\r\n      https://api.nuget.org/v3/index.json\r\n  2.  Package source {0}1 [Enabled]\r\n      https://ci.appveyor.com/nuget/gitversion-8nigugxjftrw\r\n\r\n$ cat NuGet.config\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <disabledPackageSources>\r\n    <clear />\r\n  </disabledPackageSources>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"Package source {0}1\" value=\"https://ci.appveyor.com/nuget/gitversion-8nigugxjftrw\" />\r\n  </packageSources>\r\n</configuration>\r\n\r\n$ dotnet nuget remove source https://ci.appveyor.com/nuget/gitversion-8nigugxjftrw --configfile NuGet.config\r\nerror: Unable to find any package source(s) matching name: https://ci.appveyor.com/nuget/gitversion-8nigugxjftrw.\r\n...\r\n\r\n$ dotnet nuget remove source \"Package source {0}1\" --configfile NuGet.config\r\nPackage source with Name: Package source {0}1 removed successfully.\r\n\r\n$ dotnet nuget add source https://ci.appveyor.com/nuget/gitversion-8nigugxjftrw --name gitversion --configfile NuGet.config\r\nPackage source with Name: gitversion added successfully.\r\n\r\n$ dotnet nuget disable source gitversion --configfile NuGet.config\r\nPackage source with Name: gitversion disabled successfully.\r\n\r\n$ dotnet nuget enable source gitversion --configfile NuGet.config\r\nPackage source with Name: gitversion enabled successfully.\r\n\r\n$ dotnet nuget update source gitversion --username user --password pass --store-password-in-clear-text --configfile NuGet.config\r\nPackage source \"gitversion\" was successfully updated.\r\n```\r\nI think the source name is important enough to always be specified, first to avoid the weird default source name, but also because it's required for _all_ other `dotnet nuget ... source` commands, which are source name centric, as shown above.\r\n\r\nFWIW, I'm currently writing a [Cake](https://github.com/cake-build/cake) tool \"wrapper\" for these `dotnet nuget ... source` commands and a common pattern is to manipulate NuGet sources depending on whether or not a source already exists. A short (single-line) format is better suited to tooling, and given the source name is essential to any such manipulation, I'd argue that it should be included here."},{"Id":"11667126306","Type":"PullRequestEvent","CreatedAt":"2020-03-03T17:10:29","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/9246","RelatedDescription":"Merged pull request \"Update ClientDevProcess.md\" (#9246) at NuGet/Home","RelatedBody":"just setting the status to implemented :)"},{"Id":"11664655886","Type":"IssuesEvent","CreatedAt":"2020-03-03T13:16:36","Actor":"StarWars999123","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9214","RelatedDescription":"Closed issue \"GeneratePackagePath Property is not kept during package update\" (#9214) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n\r\nNuGet version (x.x.x.xxx): - \r\n\r\nVS version: 16.4.5\r\n\r\nOS version: 1903 (Build 18362.628)\r\n\r\nWorked before? If so, with which NuGet version: no\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Install a nuget package to a new .net core format project.\r\n2. Add the GeneratePathProperty for the package\r\n3. Update the installed package\r\n--> The GeneratePathProperty (#4837) gets removed. It should be kept during an update, as it can only be configured manually in the .csproj files. Its very timeconsuming, when the package gets updated regularly.\r\n\r\n### Sample Project\r\nHere an example of the used package format with .NET 4.7.2:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net472</TargetFramework>\r\n    <IsPackable>false</IsPackable>\r\n    <LangVersion>latest</LangVersion>\r\n    <RootNamespace>BingoApp</RootNamespace>\r\n    <AssemblyName>BingoApp</AssemblyName>\r\n  </PropertyGroup>\r\n<ItemGroup>\r\n    <PackageReference Include=\"NUnit3TestAdapter\" Version=\"3.15.1\" GeneratePackagePath=\"True\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n"},{"Id":"11664325667","Type":"IssuesEvent","CreatedAt":"2020-03-03T12:39:05","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9250","RelatedDescription":"Opened issue \"[Test Failure] Only “Browse” tab can’t show the embedded icon of the package from DevOps feed\" (#9250) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.6.0.6479\r\nVS Version: Master\\29902.03\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tCreate a Console App (.NET Core 3.1) in VS and open the PM UI of the solution.\r\n2.\tAdd the DevOps feed into the Settings->NuGet Package Manager->Package Sources.\r\n3.  Select the new added DevOps feed in the Package source dropdown box in the PM UI and install the package [**classlib.net48 -version 1.0.5** (don’t have the backlash problem in bug 9225), **dotnet.icon -version 1.0.0** (embedded icon)]\r\n4.  Check all the tabs in PM UI. \r\n## Expected\r\nThe embedded icon should show correctly in all the tabs of PM UI.\r\n## Actual\r\nOnly “Browse” tab can’t show the embedded icon of the package from DevOps feed as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/75776381-df38c400-5d8e-11ea-93ce-c4cda3a6d87e.png)\r\n\r\n## Note\r\nIt doesn't repro for the nuget.org feed.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-03-04T05:30:45.0945871Z","RunDurationInMilliseconds":1883}