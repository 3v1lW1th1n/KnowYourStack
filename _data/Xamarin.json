{"Data":{"Blog":{"FeedItems":[{"Title":"Microsoft Connect 2017(); Xamarin Video Round-Up","PublishedOn":"2017-11-21T21:06:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Connect(); is always an exciting day for developers, with three days of exciting announcements, demos, and technical sessions. From the announcement of the General Availability of Visual...","Href":"https://blog.xamarin.com/microsoft-connect-2017-xamarin-video-round/","RawContent":null},{"Title":"Hello NuGet, a New Home for Xamarin Components","PublishedOn":"2017-11-20T22:19:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In 2013, we launched the Xamarin Component Store as a central location to find a rich ecosystem of UI controls and plugins for Xamarin developers targeting iOS and Android. Since then, the broader...","Href":"https://blog.xamarin.com/hello-nuget-new-home-xamarin-components/","RawContent":null},{"Title":"Xamarin Docs Now Available in Japanese and German","PublishedOn":"2017-11-20T18:12:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"日本語 &#124; Deutsch Earlier this year we published Spanish, Chinese, and Portuguese translations of our most useful documentation. I&#8217;m excited to announce that we&#8217;ve now added Japanese and...","Href":"https://blog.xamarin.com/xamarin-docs-now-available-japanese-german/","RawContent":null},{"Title":"Podcast: Connect(); 2017 Xamarin and App Center Recap","PublishedOn":"2017-11-17T22:08:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, I am joined by App Center program manager James White. We sit down and cover all of the amazing announcements from this years Connect(); 2017 event. Sit back,...","Href":"https://blog.xamarin.com/podcast-connect-2017-xamarin-app-center-recap/","RawContent":null},{"Title":"Xamarin Announcements from Microsoft Connect(); 2017","PublishedOn":"2017-11-15T16:42:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2017, we shared some very exciting updates related to Visual Studio and Xamarin. We invite you to join us tomorrow and Thursday to see even more during the remainder of...","Href":"https://blog.xamarin.com/xamarin-announcements-microsoft-connect-2017/","RawContent":null},{"Title":"Visual Studio App Center: The Next Generation of Xamarin Test Cloud","PublishedOn":"2017-11-15T13:08:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today at Microsoft Connect(); we announced the launch of Visual Studio App Center, the next generation of Xamarin Test Cloud. App Center brings the power of Xamarin Test Cloud combined with ability to...","Href":"https://blog.xamarin.com/visual-studio-app-center-next-generation-xamarin-test-cloud/","RawContent":null},{"Title":"Microsoft Connect(); 2017 Sessions for Xamarin Developers","PublishedOn":"2017-11-15T12:18:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Connect(); 2017 is underway, and there will be a ton of great content for mobile developers over the next three days. To help ensure you catch it all,  we’ve compiled a list of the sessions...","Href":"https://blog.xamarin.com/microsoft-connect-2017-sessions-xamarin-developers/","RawContent":null},{"Title":"Webinar Recording | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-11-14T19:49:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join David Antognoli in this pre-recorded webinar and see how to take your Unity games to the next level with powerful cloud services. He walks through how to connect your apps to Microsoft Azure,...","Href":"https://blog.xamarin.com/webinar-recording-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Adding Sound to a Xamarin.Forms App","PublishedOn":"2017-11-13T20:15:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Audio has many uses in mobile applications. Sounds can be essential to your app; they may notify users of important events or make your app accessible to visually-impaired users. We can also use sound...","Href":"https://blog.xamarin.com/adding-sound-xamarin-forms-app/","RawContent":null},{"Title":".NET Standard Comes to Xamarin.Forms Project Templates!","PublishedOn":"2017-11-10T19:06:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Standard is a formal specification of the .NET APIs that allow you to share even more code across the platforms you target. Xamarin developers are able to use .NET Standard libraries for sharing...","Href":"https://blog.xamarin.com/net-standard-comes-xamarin-forms-project-templates/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6894465776","Type":"PullRequestEvent","CreatedAt":"2017-11-23T10:06:17","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1048","RelatedDescription":"Opened pull request \"[Xamarin.ProjectTools] Check StdOut for SIGSEGV.\" (#1048) at xamarin/xamarin-android","RelatedBody":"We should check StdOut for SIGSEGV as well as StdError,\r\njust in case mono prints it there instead."},{"Id":"6894429932","Type":"PullRequestEvent","CreatedAt":"2017-11-23T09:58:19","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1046","RelatedDescription":"Merged pull request \"[xabuild] check if MSBuildSDKsPath exists\" (#1046) at xamarin/xamarin-android","RelatedBody":"This is a minor fix, but it is possible the system running `xabuild.exe`\r\nwill not have .NET Core installed. So we shouldn't set this environment\r\nvariable if the directory does not exist."},{"Id":"6891674570","Type":"PullRequestEvent","CreatedAt":"2017-11-22T17:53:10","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1043","RelatedDescription":"Merged pull request \"Bump mono\" (#1043) at xamarin/xamarin-android","RelatedBody":"Need fix for https://bugzilla.xamarin.com/show_bug.cgi?id=60625"},{"Id":"6891438604","Type":"PullRequestEvent","CreatedAt":"2017-11-22T17:02:47","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1047","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] New APT0000 msbuild errors are being reported from aapt output parsing\" (#1047) at xamarin/xamarin-android","RelatedBody":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems?id=528572\r\n\r\nThe current RegEx was capturing output which was not and error\r\nor warning. It turns out that aapt is not very consistent with\r\nits error messaging. Sometimes they use `error`, sometimes then\r\nuse `Error` or `ERROR`. Or in the worse case, they don't flag it\r\nas anything.\r\n\r\nThis commit adds a few more tests to AndroidRegExTests as well\r\nas alters the logic in `Aapt` a bit as well. This logic will\r\nonly log as an error if we have an error `level` or we have\r\na `file` and `line`. This seems to be fairly consistent when\r\nlooking at the `aapt` source code.\r\n\r\nWe also added a few extra `Known` errors which the regex might not\r\npick. This is because they do not contain a `level` or a `file`\r\nand `line` number."},{"Id":"6890717318","Type":"PullRequestEvent","CreatedAt":"2017-11-22T14:53:43","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1046","RelatedDescription":"Opened pull request \"[xabuild] check if MSBuildSDKsPath exists\" (#1046) at xamarin/xamarin-android","RelatedBody":"This is a minor fix, but it is possible the system running `xabuild.exe`\r\nwill not have .NET Core installed. So we shouldn't set this environment\r\nvariable if the directory does not exist."},{"Id":"6886590718","Type":"PullRequestEvent","CreatedAt":"2017-11-21T20:02:31","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1045","RelatedDescription":"Opened pull request \"Api level 27 enumification\" (#1045) at xamarin/xamarin-android","RelatedBody":""},{"Id":"6885618877","Type":"PullRequestEvent","CreatedAt":"2017-11-21T16:37:49","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1044","RelatedDescription":"Opened pull request \"Remove DroidDoc dependencies from enumification helpers.\" (#1044) at xamarin/xamarin-android","RelatedBody":"api-*.xml.in can be generated dynamically (up to [*1]) but enumification\r\nhelper tools still depended on DroidDoc, meaning that we cannot remove\r\npackage download dependencies. This fixes the situation by eliminating\r\nthe dependencies. Especially it is easier to just parse api-*.xml.in to\r\nextract int consts from Java API.\r\n\r\n... thought so? It turnd out to not be that easy.\r\n\r\nUnlike DroidDoc, api-*.xml.in does not contain \"api-since\" information,\r\nso we need to parse ALL the API XML. And they cannot be **precise**\r\nbecause we only have a subset of the API definitions. For example,\r\n\"since API Level 1\" now becomes \"since API Level 10\" because we don't\r\nhave api-1.xml.in (not even api-4.xml.in). So they will become non-precise.\r\n\r\n(A slightly better possibility to \"fix\" this is to parse\r\n`android-sdk-whatever/platform-tools/api/api-versions.xml`, but it won't\r\ncontain \"already vanished\" constants so it will be incomplete either.\r\nI didn't bother to do \"better\" so far. We don't need that for enumification.)\r\n\r\nTherefore, there is a lot of changes in `map.csv` to reflect those\r\n\"insignificant\" changes to remap \"API since\" column (e.g. from \"1\" to \"10\").\r\n\r\nRegeneration from api-LEVEL.xml.in instead of DroidDoc has some other\r\nside effects; some consts are back to the list so that we don't have to\r\nmanually copy existing mapped consts that could not be generated from\r\nthe latest DroidDocs (due to disappearance) anymore. Instead we have to\r\nremove manually-mapped constants (either from the sources or `map.csv`).\r\nTherefore, a handful of heading lines in `map.csv` were removed, and\r\nsome definitions in `enum-conversion-mappings.xml` are back.\r\n\r\n[*1] https://github.com/xamarin/xamarin-android/pull/1038"},{"Id":"6885039980","Type":"PullRequestEvent","CreatedAt":"2017-11-21T14:59:00","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1043","RelatedDescription":"Opened pull request \"Bump mono\" (#1043) at xamarin/xamarin-android","RelatedBody":"Need fix for https://bugzilla.xamarin.com/show_bug.cgi?id=60625"},{"Id":"6884256047","Type":"PullRequestEvent","CreatedAt":"2017-11-21T12:21:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1042","RelatedDescription":"Merged pull request \"[android-toolchain] update emulator to 26.1.4.0\" (#1042) at xamarin/xamarin-android","RelatedBody":"Context:\r\nhttps://developer.android.com/studio/releases/emulator.html#26-1-3\r\n\r\nGoogle has added support for `hypervisor.framework` on Mac instead of\r\nusing HAXM. It appears all we need to do to enable this is use a newer\r\nversion of the emulator. Thanks to @JonDouglas for the info about this.\r\n\r\nTo check that `hypervisor.framework` is enabled, run `make\r\nrun-apk-tests V=1`, and you should see the following output when the emulator starts:\r\n\r\n`emulator: CPU Acceleration status: Hypervisor.Framework OS X Version 10.12`\r\n\r\nOn my machine, I also had to uninstall HAXM, which you can either do by\r\nrunning the silent uninstaller or the following command:\r\n\r\n`sudo kextunload -b com.intel.kext.intelhaxm`"},{"Id":"6880362504","Type":"PullRequestEvent","CreatedAt":"2017-11-20T18:19:52","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1042","RelatedDescription":"Opened pull request \"[android-toolchain] update emulator to 26.1.4.0\" (#1042) at xamarin/xamarin-android","RelatedBody":"Context:\r\nhttps://developer.android.com/studio/releases/emulator.html#26-1-3\r\n\r\nGoogle has added support for `hypervisor.framework` on Mac instead of\r\nusing HAXM. It appears all we need to do to enable this is use a newer\r\nversion of the emulator. Thanks to @JonDouglas for the info about this.\r\n\r\nTo check that `hypervisor.framework` is enabled, run `make\r\nrun-apk-tests V=1`, and you should see the following output when the emulator starts:\r\n\r\n`emulator: CPU Acceleration status: Hypervisor.Framework OS X Version 10.12`\r\n\r\nOn my machine, I also had to uninstall HAXM, which you can either do by\r\nrunning the silent uninstaller or the following command:\r\n\r\n`sudo kextunload -b com.intel.kext.intelhaxm`"},{"Id":"6879687205","Type":"PullRequestEvent","CreatedAt":"2017-11-20T16:06:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1034","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Make log searching more efficient.\" (#1034) at xamarin/xamarin-android","RelatedBody":"The current implementation of LastBuildOutput loads the entire\r\nlogfile into memory for searching. This causes OutOfMemory problems\r\non windows, especially now that we are running multiple tests at\r\nthe same time.\r\n\r\nThis commit switches the LastBuildOutput over to be an\r\n`IEnumerable<string>`. The idea is that we will stream through\r\nthe buildlog one line at a time to search for the strings we\r\nwant to check. This might not be as quick, but it should be\r\nmore efficient."},{"Id":"6872901138","Type":"PullRequestEvent","CreatedAt":"2017-11-18T02:40:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/980","RelatedDescription":"Merged pull request \"Add API Level 27.\" (#980) at xamarin/xamarin-android","RelatedBody":"I cannot check if it builds by myself because I never get working build locally. `make clean` should never fail but it never got fixed. And asking to run `git clean -xdf` for developers is a huge no-go."},{"Id":"6872014405","Type":"PullRequestEvent","CreatedAt":"2017-11-17T20:57:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1040","RelatedDescription":"Merged pull request \"[tests] set $(AndroidSdkDirectory) for JI tests\" (#1040) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/java.interop/pull/211\r\n\r\nFor Windows to set `ANDROID_SDK_PATH` for the Java.Interop unit tests,\r\nwe need to pass `$(AndroidSdkDirectory)` through.\r\n\r\nOtherwise a few tests get skipped in\r\nXamarin.Android.Tools.Bytecode-Tests.dll."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6897111371","Type":"PullRequestEvent","CreatedAt":"2017-11-23T23:02:57","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1303","RelatedDescription":"Merged pull request \"Create renderer with context\" (#1303) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFor previewer compatibility reasons, we were not able to make the new overload of `CreateRenderer` public. However, we also marked the old overload `Obsolete` with instructions to use the new overload, which is not accessible. This means that\r\n\r\n1. Our obsolete message instructions are wrong\r\n2. Third party controls with custom renderers can't work correctly with embedding in multi-activity applications \r\n3. People with \"treat warnings as errors\" turned on will have to disable the warning for the old overload\r\n\r\nEventually we will be making the new overload public, but until then we need to provide some way of accessing the correct overload. Thus, `CreateRendererWithContext`.\r\n\r\n### Bugs Fixed ###\r\n\r\n- [60815 – New CreateRenderer overload not public](https://bugzilla.xamarin.com/show_bug.cgi?id=60815)\r\n- [60797 – New version of Platform.CreateRenderer() is internal](https://bugzilla.xamarin.com/show_bug.cgi?id=60797)\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - public static IVisualElementRenderer CreateRendererWithContext(VisualElement element, Context context)\r\n\r\n"},{"Id":"6895952693","Type":"PullRequestEvent","CreatedAt":"2017-11-23T15:43:06","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1305","RelatedDescription":"Closed pull request \"Small refactor on UWP's MasterDetailControl.cs - identation fix\" (#1305) at xamarin/Xamarin.Forms","RelatedBody":"Just a couple identation fixes on the MasterDetailControl.cs file.\r\n\r\n### Behavioral Changes ###\r\n\r\nNone"},{"Id":"6895612945","Type":"PullRequestEvent","CreatedAt":"2017-11-23T14:30:20","Actor":"carlosfza","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1305","RelatedDescription":"Opened pull request \"Small refactor on UWP's MasterDetailControl.cs - identation fix\" (#1305) at xamarin/Xamarin.Forms","RelatedBody":"Just a couple identation fixes on the MasterDetailControl.cs file.\r\n\r\n### Behavioral Changes ###\r\n\r\nNone"},{"Id":"6894070414","Type":"PullRequestEvent","CreatedAt":"2017-11-23T08:29:50","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1289","RelatedDescription":"Closed pull request \"Update Platform Create Renderer\" (#1289) at xamarin/Xamarin.Forms","RelatedBody":"\r\n\r\n### Description of Change ###\r\n\r\nPlatform.CreateRenderer(VisualElement element) is marked as obsolete but the replacing method Platform.IVisualElementRenderer CreateRenderer(VisualElement element, Context context) marked as internal so the user can not use it.\r\n\r\n### Bugs Fixed ###\r\n\r\n- \r\n\r\n### API Changes ###\r\nChanged:\r\n - internal static internal static IVisualElementRenderer CreateRenderer(VisualElement element, Context context) => public static IVisualElementRenderer CreateRenderer(VisualElement element, Context context)\r\n\r\n### Behavioral Changes ###\r\n\r\nI don't think there will be any behavioral changes. Just changing the access modifier so the obsolete method can be replaced with the new one.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x ] Rebased on top of master at time of PR\r\n- [x ] Changes adhere to coding standard\r\n- [ x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6896636012","Type":"PullRequestEvent","CreatedAt":"2017-11-23T19:08:41","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3038","RelatedDescription":"Opened pull request \"[coreimage] Fix the pointer used in CIVector(nfloat[]) until the native call completes\" (#3038) at xamarin/xamarin-macios","RelatedBody":"However there's a small window between the time we get a pointer\nand the call to the native selector where the memory is not fixed.\nDuring this time the GC can move the memory resulting in hard to\ndiagnose crashes.\n\nNote: `initWithValues:count:` copies the provided memory so what\nhappens afterward is not an issue."},{"Id":"6896510427","Type":"PullRequestEvent","CreatedAt":"2017-11-23T18:16:04","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3033","RelatedDescription":"Merged pull request \"[tests] Improve how test failures show up in the html report for Xamarin.Mac tests.\" (#3033) at xamarin/xamarin-macios","RelatedBody":"* Add support to GuiUnit for passing command-line arguments to the test runnner.\n* Ask the test runner to create an xml test results file.\n* Parse the xml file in xharness, get the list of failed tests and show them in the html report."},{"Id":"6896497940","Type":"PullRequestEvent","CreatedAt":"2017-11-23T18:11:35","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3037","RelatedDescription":"Opened pull request \"Bump maccore to get fix for providing the right wrench link to VSTS.\" (#3037) at xamarin/xamarin-macios","RelatedBody":"commit xamarin/maccore@bb3ebb634f8807e1f6b85726fa573276f8ab2c0e\nAuthor: Rolf Bjarne Kvinge <rolf@xamarin.com>\nDate:   Thu Nov 23 19:06:51 2017 +0100\n\n    [tests/external/device-builds] Use BUILD_WORK_HOST instead of BUILD_HOST so that we calculate the right wrench url."},{"Id":"6896327140","Type":"PullRequestEvent","CreatedAt":"2017-11-23T17:14:36","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3036","RelatedDescription":"Opened pull request \"[AppKit] Add [NullAllowed] to NSWorkspace.SharedWorkspace.OpenFile, fixes bug 60821.\" (#3036) at xamarin/xamarin-macios","RelatedBody":"https://bugzilla.xamarin.com/show_bug.cgi?id=60821\r\n\r\nAccording to header definitions, `appName` is allowed to be null.\r\n\r\n```objc\r\n- (BOOL)openFile:(NSString *)fullPath withApplication:(nullable NSString *)appName;\r\n- (BOOL)openFile:(NSString *)fullPath withApplication:(nullable NSString *)appName andDeactivate:(BOOL)flag;\r\n```"},{"Id":"6896228253","Type":"PullRequestEvent","CreatedAt":"2017-11-23T16:47:32","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3035","RelatedDescription":"Opened pull request \"[xharness] Don't keep files open when not needed anymore.\" (#3035) at xamarin/xamarin-macios","RelatedBody":"Dispose logs (so that the corresponding files are closed) when we're done with\nthem, and also don't open a file log by default (usually we just want a\nfilename to pass to somebody else), but instead open the file if needed.\n\nThis should decrease the number of open file descriptors in xharness, which\nsometimes become a problem when running many tests."},{"Id":"6896198344","Type":"PullRequestEvent","CreatedAt":"2017-11-23T16:39:45","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3034","RelatedDescription":"Opened pull request \"[xharness] Define XAMMAC for XM/Modern and XAMMAC_4_5 for XM/Full, just like we do when building the BCL.\" (#3034) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/maccore/issues/587, because the failing test ignores an assert when XAMMAC is defined: https://github.com/mono/mono/blob/1c4d741a020da74f250f5c4764b5a87a0a139a76/mcs/class/corlib/Test/System/TimeZoneInfoTest.cs#L127-L130"},{"Id":"6896135855","Type":"PullRequestEvent","CreatedAt":"2017-11-23T16:24:17","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3033","RelatedDescription":"Opened pull request \"[tests] Improve how test failures show up in the html report for Xamarin.Mac tests.\" (#3033) at xamarin/xamarin-macios","RelatedBody":"* Add support to GuiUnit for passing command-line arguments to the test runnner.\n* Ask the test runner to create an xml test results file.\n* Parse the xml file in xharness, get the list of failed tests and show them in the html report."},{"Id":"6896106353","Type":"PullRequestEvent","CreatedAt":"2017-11-23T16:17:14","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3032","RelatedDescription":"Merged pull request \"[tests] Fix copying test files in System.IO.Compression[.FileSystem] tests.\" (#3032) at xamarin/xamarin-macios","RelatedBody":"The app path depends on the assembly name, which mean we must take the\nassembly name into account when calculating the app path where to copy\nresource files for these two tests.\n\nFixes the following tests:\n\n* System.IO.Compression\n\n    * ZipDeleteEntryCheckEntries (MonoTests.System.IO.Compression.ZipArchiveTests.ZipDeleteEntryCheckEntries)\n    * ZipEnumerateEntriesCreateMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipEnumerateEntriesCreateMode)\n    * ZipEnumerateEntriesModifiedTime (MonoTests.System.IO.Compression.ZipArchiveTests.ZipEnumerateEntriesModifiedTime)\n    * ZipEnumerateEntriesReadMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipEnumerateEntriesReadMode)\n    * ZipEnumerateEntriesUpdateMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipEnumerateEntriesUpdateMode)\n    * ZipGetArchiveEntryStreamLengthPositionReadMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipGetArchiveEntryStreamLengthPositionReadMode)\n    * ZipGetArchiveEntryStreamLengthPositionUpdateMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipGetArchiveEntryStreamLengthPositionUpdateMode)\n    * ZipGetEntryCreateMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipGetEntryCreateMode)\n    * ZipGetEntryDeleteReadMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipGetEntryDeleteReadMode)\n    * ZipGetEntryDeleteUpdateMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipGetEntryDeleteUpdateMode)\n    * ZipGetEntryOpen (MonoTests.System.IO.Compression.ZipArchiveTests.ZipGetEntryOpen)\n    * ZipGetEntryReadMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipGetEntryReadMode)\n    * ZipGetEntryUpdateMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipGetEntryUpdateMode)\n    * ZipOpenAndReopenEntry (MonoTests.System.IO.Compression.ZipArchiveTests.ZipOpenAndReopenEntry)\n    * ZipOpenCloseAndReopenEntry (MonoTests.System.IO.Compression.ZipArchiveTests.ZipOpenCloseAndReopenEntry)\n    * ZipReadNonSeekableStream (MonoTests.System.IO.Compression.ZipArchiveTests.ZipReadNonSeekableStream)\n    * ZipWriteEntriesUpdateMode (MonoTests.System.IO.Compression.ZipArchiveTests.ZipWriteEntriesUpdateMode)\n    * ZipWriteEntriesUpdateModeNonZeroPosition (MonoTests.System.IO.Compression.ZipArchiveTests.ZipWriteEntriesUpdateModeNonZeroPosition)\n    * ZipWriteNonSeekableStream (MonoTests.System.IO.Compression.ZipArchiveTests.ZipWriteNonSeekableStream)\n\n* System.IO.Compression.FileSystem\n\n    * ZipCreateFromDirectory (MonoTests.System.IO.Compression.FileSystem.ZipArchiveTests.ZipCreateFromDirectory)\n    * ZipCreateFromDirectoryIncludeBase (MonoTests.System.IO.Compression.FileSystem.ZipArchiveTests.ZipCreateFromDirectoryIncludeBase)\n    * ZipCreateFromEntryChangeTimestamp (MonoTests.System.IO.Compression.FileSystem.ZipArchiveTests.ZipCreateFromEntryChangeTimestamp)\n    * ZipExtractToDirectory (MonoTests.System.IO.Compression.FileSystem.ZipArchiveTests.ZipExtractToDirectory)"},{"Id":"6896103283","Type":"PullRequestEvent","CreatedAt":"2017-11-23T16:16:30","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3029","RelatedDescription":"Merged pull request \"[mtouch][mmp] Allow the use of major-only version numbers in arguments. Fixes #60280\" (#3029) at xamarin/xamarin-macios","RelatedBody":"The parsing done by `System.Version` does not accept a major-only string,\ne.g. providing \"11\" would throw an exception.\n\nSince people generally refer version as iOS 11 (and not iOS 11.0) this\nis, at best, a nuisance. Xcode toolchain accept \"11\" as a valid string.\n\nThe first part of message was updated to show both the option name and\nthe (user provided) value.\n\nThe 2nd part remain the text of the .net exception message, i.e. what\n`Version.Parse` tells you when it validates the string. Seeing the input\nvalue should make it more obvious for other, incorrect version strings.\n\nreference:\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60280"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"933741185478332416","CreatedAt":"2017-11-23T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @lobrien  shows you how to add augmented reality to your #Xamarin apps with #ARKit in #iOS11:… https://t.co/HII0XqDMRj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":24,"RawContent":null},{"Id":"933432266495275008","CreatedAt":"2017-11-22T20:29:29+00:00","UserScreenname":"xamarinhq","Text":"Details on moving from Xamarin components to #NuGet as we sunset the #Xamarin Component Store: https://t.co/tYuAmSeKee","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":80,"FavoriteCount":44,"RawContent":null},{"Id":"933379799699116033","CreatedAt":"2017-11-22T17:01:00+00:00","UserScreenname":"xamarinhq","Text":"#XamarinForms Program Manager @davidortinau shares his tips for beating the learning curve: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":23,"RawContent":null},{"Id":"933081334129614849","CreatedAt":"2017-11-21T21:15:00+00:00","UserScreenname":"xamarinhq","Text":"There was SO MUCH awesome content at #MSFTConnect last week! Whether you just couldn't get to it all, want to share… https://t.co/FJk5D8lEjH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":44,"RawContent":null},{"Id":"933017919218470912","CreatedAt":"2017-11-21T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/gIjmTghxVn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":16,"RawContent":null},{"Id":"932725992052985856","CreatedAt":"2017-11-20T21:43:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to make your #XamarinForms apps adaptive based on screen size, device type, and orientation: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":76,"FavoriteCount":33,"RawContent":null},{"Id":"932706478242320385","CreatedAt":"2017-11-20T20:25:27+00:00","UserScreenname":"xamarinhq","Text":"We’ve added Japanese and German translations of our \"Getting Started\" and \"Deployment\" documentation: https://t.co/ycX8AbvL2z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":13,"RawContent":null},{"Id":"932651214269018113","CreatedAt":"2017-11-20T16:45:51+00:00","UserScreenname":"xamarinhq","Text":"Join @JamesMontemagno and @maestersid on the @XamarinPodcast as they discuss the exciting announcements from… https://t.co/IV7GarsYVW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":12,"RawContent":null},{"Id":"932414942225010688","CreatedAt":"2017-11-20T01:07:00+00:00","UserScreenname":"xamarinhq","Text":"Ready to go mobile? @XamarinU offers 30-day free trials! Learn more: https://t.co/bVpjALvmoy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":17,"RawContent":null},{"Id":"932048027908526080","CreatedAt":"2017-11-19T00:49:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/FDIv3uFKZF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":88,"FavoriteCount":48,"RawContent":null},{"Id":"931551005816311809","CreatedAt":"2017-11-17T15:54:01+00:00","UserScreenname":"xamarinhq","Text":"Day 3 of #MSFTConnect starts NOW! Get FREE live, online training from @XamarinU, streaming all day—join us:… https://t.co/SDurZQlgnh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"931327778301063168","CreatedAt":"2017-11-17T01:07:00+00:00","UserScreenname":"xamarinhq","Text":"Thanks for joining us for Day 2 of #MSFTConnect! Tune in tomorrow for live online training from @XamarinU.","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":11,"FavoriteCount":2,"RawContent":null},{"Id":"931308149457506305","CreatedAt":"2017-11-16T23:49:00+00:00","UserScreenname":"xamarinhq","Text":"It's the last talk of the day at #MSFTConnect! Join Donovan Brown &amp; Jessica Deen for \"#DevOps for Any Language and… https://t.co/BYNjySPV9Y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"931293552717582336","CreatedAt":"2017-11-16T22:51:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @JamesMontemagno takes the stage with \"#Xamarin: The Future of App Development\" at #MSFTConnect at 3 pm P… https://t.co/pLEDlA2VAK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"931279207916650496","CreatedAt":"2017-11-16T21:54:00+00:00","UserScreenname":"xamarinhq","Text":"Don't touch that browser! You've got a choice coming up—\"#CICD #DevOps Pipeline for Mobile Apps and Services\" with… https://t.co/v6YuQuwoS6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":11,"RawContent":null},{"Id":"931263355259621376","CreatedAt":"2017-11-16T20:51:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss this—join us at 1 pm PT / 4 pm ET on the #MSFTConnect live stream to learn how to \"Ship Five… https://t.co/cXLM0ODYH4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"931236175414784003","CreatedAt":"2017-11-16T19:03:00+00:00","UserScreenname":"xamarinhq","Text":"Can't watch #MSFTConnect live? Check out these #Xamarin-focused on demand videos from the event: https://t.co/6pOPUzJTMN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":8,"RawContent":null},{"Id":"931225857670156288","CreatedAt":"2017-11-16T18:22:00+00:00","UserScreenname":"xamarinhq","Text":"See \"What's New in #XamarinForms\" with @davidortinau in this on demand video from #MSFTConnect: https://t.co/hSAuXQjcYf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"931205440263938048","CreatedAt":"2017-11-16T17:00:52+00:00","UserScreenname":"xamarinhq","Text":"Don't miss \"A Day in the Life of a Modern #dotNET Developer\" with Scott Hunter, featuring live Q&amp;A, next up at 12 p… https://t.co/age6LgkvjS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"931189619772805121","CreatedAt":"2017-11-16T15:58:00+00:00","UserScreenname":"xamarinhq","Text":"Day 2 of #MSFTConnect is about to start! Don't know which sessions you should prioritize? Here's our guide to the b… https://t.co/DRguluF5x4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2017-11-24T05:30:41.0364671Z","RunDurationInMilliseconds":4094}