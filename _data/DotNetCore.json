{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."},{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7320071615","Type":"PullRequestEvent","CreatedAt":"2018-03-02T04:47:05","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16704","RelatedDescription":"Opened pull request \"Fix Use of EventPipeConfiguration After it has Been Freed on Shutdown\" (#16704) at dotnet/coreclr","RelatedBody":"Fixes #16388."},{"Id":"7320026961","Type":"PullRequestEvent","CreatedAt":"2018-03-02T04:27:01","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16702","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview2-26302-01, preview2-26228-08, respectively (master)\" (#16702) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7319688885","Type":"PullRequestEvent","CreatedAt":"2018-03-02T02:15:10","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16703","RelatedDescription":"Opened pull request \"Generalize runtest.sh test exclusion files\" (#16703) at dotnet/coreclr","RelatedBody":"Allow leading '#' as a comment character for all testsUnsupported and\r\ntestsFailing files.\r\n\r\nGeneralize testsFailingOnArm64.txt to testsFailing.$ARCH.txt\r\n\r\nGeneralize testsUnsupportedOnARM32.txt to testsUnsupported.$ARCH.txt"},{"Id":"7319649859","Type":"PullRequestEvent","CreatedAt":"2018-03-02T02:01:35","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16702","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to preview2-26302-01, preview2-26228-08, respectively (master)\" (#16702) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7319580976","Type":"IssuesEvent","CreatedAt":"2018-03-02T01:37:42","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/12492","RelatedDescription":"Closed issue \"Several jit64 tests fail in Helix on ARM\" (#12492) at dotnet/coreclr","RelatedBody":"https://mc.dot.net/#/product/netcore/master/source/official~2Fcoreclr~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20170626.03/workItem/JIT.jit64.XUnitWrapper\r\n\r\nMost error messages are non-descriptive:\r\n\r\n> Expected: 100\\r\\nActual: -532462766\r\n\r\nSame error code as in https://github.com/dotnet/coreclr/issues/12488, so maybe related.\r\n\r\n@russellhadley can you route this to the right person?"},{"Id":"7319503476","Type":"IssuesEvent","CreatedAt":"2018-03-02T01:11:24","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/6854","RelatedDescription":"Closed issue \"[ARM/Linux] Miss casting void * value in IntPtr::ToInt64()\" (#6854) at dotnet/coreclr","RelatedBody":"This issue is related to `System.Diagnostics.Tests.ProcessModuleTests.TestModuleProperties` TC in CoreFX.\nTest details:\n\n```\n   System.Diagnostics.Tests.ProcessModuleTests.TestModuleProperties [STARTING]\n   System.Diagnostics.Tests.ProcessModuleTests.TestModuleProperties [FAIL]\n      Assert+WrapperXunitException : File path: /home/jyoung/git/dotnet/corefx_upstream/src/System.Diagnostics.Process/tests/ProcessModuleTests.cs. Line: 25\n      ---- Assert.InRange() Failure\n      Range:  (0 - 9223372036854775807)\n      Actual: -1403310080\n      Stack Trace:\n            at Assert.WrapException(Exception e, String callerFilePath, Int32 callerLineNumber)\n            at Assert.InRange[T](T actual, T low, T high, String path, Int32 line)\n            at System.Diagnostics.Tests.ProcessModuleTests.TestModuleProperties()\n         ----- Inner Stack Trace -----\n            at Assert.InRange[T](T actual, T low, T high, String path, Int32 line)\n```\n\nIn 32bit machine, the address can use the all 32bit including the signed bit(the 31th bit).\nBut this value currently is interpreted in negative value while converting long to void \\* because the signed bit is true.\n\nHere is the example code:\n\n```\n            long val = 2891657216;                                              \n            unsafe {                                                               \n                IntPtr val2 = new IntPtr((void *)val);                          \n                Console.WriteLine(\"val {0} val2.ToInt64 {1}\", val, val2.ToInt64());\n            }  \n```\n\nAnd results:\n\n```\nval 2891657216 val2.ToInt64 -1403310080\n```\n\n2891657216 = AC5B3000\n-1403310080 = FFFFFFFFAC5B3000\n\nJust because the long value uses the signed bit in 32bit machine, it doesn't mean that the value is a negative. So ToInt64() function should return the original value without changing.\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7320161128","Type":"PullRequestEvent","CreatedAt":"2018-03-02T05:27:29","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8695","RelatedDescription":"Merged pull request \"Pass any as rid during ingest bundled DotnetTool\" (#8695) at dotnet/cli","RelatedBody":"https://github.com/dotnet/cli/pull/8677/files"},{"Id":"7320133007","Type":"PullRequestEvent","CreatedAt":"2018-03-02T05:14:53","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8715","RelatedDescription":"Closed pull request \"WIP test CI\" (#8715) at dotnet/cli","RelatedBody":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"},{"Id":"7319860802","Type":"PullRequestEvent","CreatedAt":"2018-03-02T03:17:43","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8715","RelatedDescription":"Opened pull request \"WIP test CI\" (#8715) at dotnet/cli","RelatedBody":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"},{"Id":"7319553019","Type":"IssuesEvent","CreatedAt":"2018-03-02T01:28:27","Actor":"rakeshsinghranchi","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8714","RelatedDescription":"Opened issue \"dotnet store command fails when --output path has whitespace \" (#8714) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Create manifest csproj file as below : ( packages.csproj)\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Moq\" Version=\"4.7.63\" />\r\n  </ItemGroup>\r\n</Project>\r\n2. Run command : \r\ndotnet store --manifest packages.csproj --runtime win10-x64 --framework netcoreapp2.1 --framework-version 2.1.0-preview1-26216-03 --output \"C:\\**Program Files**\\dotnet\\store\"\r\n\r\n## Expected  behavior\r\ndotnet store command executes successfully and provisions the nuget packages under c:\\program files\\dotnet\\\r\n\r\n## Actual behavior\r\ndotnet store command fails to execute : \r\nC:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ComposeStore.targets(269,5): error MSB3191: Unable to create directory \"C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.1\\\". Access to the path 'C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.1\\' is denied. [C:\\Users\\raksingh\\packages.csproj]\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.300-preview1-008174)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview1-008174\r\n Commit SHA-1 hash:  b8df89a54f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26216-03\r\n  Build    : f2c3216183d20416568a4bbf5bb7d153e826f153\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7319082367","Type":"PullRequestEvent","CreatedAt":"2018-03-01T23:02:51","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8702","RelatedDescription":"Merged pull request \"Update Microsoft.DotNet.Archive version\" (#8702) at dotnet/cli","RelatedBody":"Apparently we pick up the version of Microsoft.DotNet.Archive from the sdk so I'm updating the version here to the latest one with the null ref fix. Let me know if this is the correct branch.\r\n"},{"Id":"7319075650","Type":"PullRequestEvent","CreatedAt":"2018-03-01T23:01:11","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8687","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to master\" (#8687) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7314708657","Type":"IssuesEvent","CreatedAt":"2018-03-01T08:29:09","Actor":"abdullahsalem","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/662","RelatedDescription":"Opened issue \"Standardizing XLIFF\" (#662) at dotnet/standard","RelatedBody":"I share @valdisiljuconoks this interest: https://github.com/Microsoft/XLIFF2-Object-Model/issues/28, and I think it's a good direction to support this standardized file format for a localization process.\r\n"},{"Id":"7312130000","Type":"PullRequestEvent","CreatedAt":"2018-02-28T19:57:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/661","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02528-05 (master)\" (#661) at dotnet/standard","RelatedBody":""},{"Id":"7312017249","Type":"IssuesEvent","CreatedAt":"2018-02-28T19:36:13","Actor":"mwilton","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/660","RelatedDescription":"Opened issue \"TimeZoneInfo for Samoa Standard Time doesn't match online documentation\" (#660) at dotnet/standard","RelatedBody":"Here are the properties of the Samoa Standard Time TimeZoneInfo object (+13):\r\n![image](https://user-images.githubusercontent.com/7872394/36808900-502351dc-1c7b-11e8-89ea-b0d9addaa71a.png)\r\n\r\nAnd here is Microsoft's online documentation (-11):\r\n![image](https://user-images.githubusercontent.com/7872394/36808960-75af3d62-1c7b-11e8-9e79-60ee13c891c5.png)\r\n\r\nWhich comes from:\r\nhttps://msdn.microsoft.com/en-us/library/ms912053(v=winembedded.10).aspx\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7320018472","Type":"PullRequestEvent","CreatedAt":"2018-03-02T04:23:04","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27624","RelatedDescription":"Merged pull request \"Correct ToBoolean_String_ReturnsExpected test data for non english\" (#27624) at dotnet/corefx","RelatedBody":"Correct `ToBoolean_String_ReturnsExpected` test data for non english culture."},{"Id":"7319987643","Type":"PullRequestEvent","CreatedAt":"2018-03-02T04:09:16","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27633","RelatedDescription":"Merged pull request \"Add GetPosition overload to ReadOnlySequence\" (#27633) at dotnet/corefx","RelatedBody":"Resolves https://github.com/dotnet/corefx/issues/27403\r\n\r\ncc @pakrym, @davidfowl, @halter73, @KrzysztofCwalina "},{"Id":"7319987638","Type":"IssuesEvent","CreatedAt":"2018-03-02T04:09:16","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/27403","RelatedDescription":"Closed issue \"Add GetPosition overload to ReadOnlySequence that only takes an int/long\" (#27403) at dotnet/corefx","RelatedBody":"Today GetPosition requires a relative offset but there are scenarios where you just want to get the position from the start. Today that looks like:\r\n\r\n```C#\r\n// Get position 100\r\nvar position = sequence.GetPosition(sequence.Start, 100);\r\n```\r\n\r\n## Proposal\r\n\r\nAdd GetPosition that takes an int/long that assumes sequence.Start is the origin:\r\n\r\n```C#\r\nvar position = sequence.GetPosition(100);\r\n```\r\n\r\n/cc @pakrym @KrzysztofCwalina @ahsonkhan @terrajobst @halter73 \r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7320108869","Type":"IssuesEvent","CreatedAt":"2018-03-02T05:03:36","Actor":"mazhou-msft","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25187","RelatedDescription":"Opened issue \"Allow 'ref readonly struct' for 'readonly ref struct'\" (#25187) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisual Studio 2017 27428.0.d15.7\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a C# project for netcoreapp2.1\r\n2. Write a declaration of a ref struct:\r\n```C#\r\npublic readonly ref struct S { }\r\n```\r\n\r\n**Expected Behavior**:\r\nThe order of 'ref' and 'readonly' should not matter; I can either use 'readonly ref struct' or 'ref readonly struct' to declare readonly ref-like types.\r\n\r\n**Actual Behavior**:\r\n'ref readonly struct' is not allowed. looks like `ref struct` is a compound keyword like `partial class`."},{"Id":"7319879027","Type":"PullRequestEvent","CreatedAt":"2018-03-02T03:24:59","Actor":"davidwrighton","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25186","RelatedDescription":"Opened pull request \"Enable building targeting arm64 platform\" (#25186) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\n\r\nCustomer is developing a UWP application targeted at Arm64. \r\n\r\n### Bugs this fixes\r\n\r\nhttps://github.com/dotnet/roslyn/issues/25182\r\n\r\n### Workarounds, if any\r\n\r\nUpdate build scripts to use anycpu, or update them to edit the bits that indicate that a binary is arm64.\r\n\r\n### Risk\r\n\r\nLow, the changes are isolated to use of a new possible switch value.\r\n\r\n### Performance impact\r\n\r\nLow to zero perf impact in non-arm64 scenarios. Changes are all conditional to using /platform:arm64. In arm64 scenarios this workaround is generally fairly quick, except for when determinism is enabled, in which case it will cause an extra pass of SHA1 to be run over the binary.\r\n\r\n### Is this a regression from a previous update?\r\n\r\nNo\r\n### Root cause analysis\r\n\r\nThis is a new capability needed for new platform support in Windows.\r\n\r\n### How was the bug found?\r\n\r\nNew platform.\r\n\r\n### Test documentation updated?\r\nNo, not necessary.\r\n"},{"Id":"7319749702","Type":"IssuesEvent","CreatedAt":"2018-03-02T02:36:18","Actor":"davidwrighton","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25185","RelatedDescription":"Opened issue \"Remove workaround for using Arm64 without updating System.Reflection.Metadata\" (#25185) at dotnet/roslyn","RelatedBody":"The implementation of the actual Arm64 header detail hass been moved to System.Reflection.Metadata: #25182 but we aren't using it yet due to not updating SRM.\r\n\r\nRemove it from Roslyn once it's available thru the version of SRM we use.\r\n"},{"Id":"7319741889","Type":"PullRequestEvent","CreatedAt":"2018-03-02T02:33:32","Actor":"Shyam-Gupta","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25156","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#25156) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7319677996","Type":"PullRequestEvent","CreatedAt":"2018-03-02T02:11:28","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22611","RelatedDescription":null,"RelatedBody":"Refactors the Native PDB writer to mirror the implementation in Microsoft.DiaSymReader. This way it's easier to keep them in sync. Ideally we would remove the code and add a reference to Microsoft.DiaSymReader, but that would require significant setup authoring work across dotnet cli and VS. It can still be done in future, for example, as a part of a bigger change like moving to netstandard2.0.\r\n\r\nFixes a couple of corner cases where the compiler previously crashed instead of reporting a diagnostic.\r\nAlso resolves https://github.com/dotnet/roslyn/issues/10637"},{"Id":"7319677923","Type":"PullRequestEvent","CreatedAt":"2018-03-02T02:11:26","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22611","RelatedDescription":"Closed pull request \"Refactor Windows PDB writer\" (#22611) at dotnet/roslyn","RelatedBody":"Refactors the Native PDB writer to mirror the implementation in Microsoft.DiaSymReader. This way it's easier to keep them in sync. Ideally we would remove the code and add a reference to Microsoft.DiaSymReader, but that would require significant setup authoring work across dotnet cli and VS. It can still be done in future, for example, as a part of a bigger change like moving to netstandard2.0.\r\n\r\nFixes a couple of corner cases where the compiler previously crashed instead of reporting a diagnostic.\r\nAlso resolves https://github.com/dotnet/roslyn/issues/10637"},{"Id":"7319670505","Type":"IssuesEvent","CreatedAt":"2018-03-02T02:08:47","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25184","RelatedDescription":"Opened issue \"Stop building with Windows PDBs on dev machines\" (#25184) at dotnet/roslyn","RelatedBody":"Once .NET Framework 4.7.2 is GA and xUnit has a flag that enables Portable PDBs in stack traces."},{"Id":"7319660778","Type":"IssuesEvent","CreatedAt":"2018-03-02T02:05:15","Actor":"controlflow","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25183","RelatedDescription":"Opened issue \"Confusing error message when trying to create delegate from method group of ref extension method with closed 'this' argument\" (#25183) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\nmaster branch @ march 2\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nstatic class C {\r\n  static int M(in this int x) => 1;\r\n  static void Main() {\r\n    System.Func<int> f = 1.M;\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\n> CS1113: Extension method 'C.M(int)' defined on value type 'int' cannot be used to create delegates\r\n\r\n**Actual Behavior**:\r\n\r\n> CS0123: No overload for 'M' matches delegate 'Func<int>'"},{"Id":"7319593794","Type":"PullRequestEvent","CreatedAt":"2018-03-02T01:42:10","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25169","RelatedDescription":"Merged pull request \"Implement a generic topological sort algorithm\" (#25169) at dotnet/roslyn","RelatedBody":"The implementation of pattern-matching will require nodes of the decision dag be generated and processed iteratively using a worklist-based algorithm, as a recursive implementation would overflow the compiler's execution stack for a large switch statement. To facilitate those algorithms, the nodes of the dag will have to be topologically sorted. There are topological sort algorithms in a few places in Roslyn, but they all use Tarjan's recursive algorithm. That works for things like the class inheritance hierarchy or the dependencies between projects because those graphs are of moderate size. However, a large switch statement in C# would produce a decision dag large enough that a recursive algorithm would overflow the execution stack of the compiler. This PR implements a generic topological sort algorithm that is not recursive. It needs to be generic because it will be used both in the production of the decision dag (in which it works with abstract representations of the decision state) and in processing the decision dag itself.\r\n\r\n@cston Can you review this, please?\r\n@dotnet/roslyn-compiler Which of you have your college algorithms class still fresh in your mind?\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7320025965","Type":"PullRequestEvent","CreatedAt":"2018-03-02T04:26:32","Actor":"ahsonkhan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5479","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5479) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7319132746","Type":"PullRequestEvent","CreatedAt":"2018-03-01T23:15:31","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5479","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5479) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7319050003","Type":"PullRequestEvent","CreatedAt":"2018-03-01T22:55:01","Actor":"marek-safar","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5474","RelatedDescription":"Closed pull request \"Move portable string construction code to separate file for easier reuse by Mono\" (#5474) at dotnet/corert","RelatedBody":""},{"Id":"7319048668","Type":"PullRequestEvent","CreatedAt":"2018-03-01T22:54:42","Actor":"marek-safar","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5478","RelatedDescription":"Opened pull request \"Move CoreRT specific String class bits to its own file\" (#5478) at dotnet/corert","RelatedBody":""},{"Id":"7319009759","Type":"PullRequestEvent","CreatedAt":"2018-03-01T22:45:16","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5477","RelatedDescription":"Closed pull request \"Mirror changes from dotnet/coreclr\" (#5477) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7318994310","Type":"PullRequestEvent","CreatedAt":"2018-03-01T22:41:36","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5477","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5477) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7319493536","Type":"PullRequestEvent","CreatedAt":"2018-03-02T01:08:10","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2016","RelatedDescription":"Opened pull request \"Port fix for mismatched NuGet versions to release/2.1.1xx.\" (#2016) at dotnet/sdk","RelatedBody":"This commit ports the fix for the mismatched NuGet version numbers used by the\r\nSDK.\r\n\r\nSee https://github.com/dotnet/sdk/pull/1831 for the change into master."},{"Id":"7318954286","Type":"IssuesEvent","CreatedAt":"2018-03-01T22:32:07","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2015","RelatedDescription":"Closed issue \"VB project gives target error, not compiler error\" (#2015) at dotnet/sdk","RelatedBody":"When building a Visual Basic application via the CLI in 2.1.300-Preview2, compiler errors are not reported to the user. \r\n\r\n## Steps to reproduce\r\n\r\n* Create a VB console ap\r\n* Create an error in the application. Mine was (the Program.cs)\r\n\r\n```VB\r\nOption Explicit On\r\nOption Infer On\r\n\r\nImports System\r\n\r\nModule Program\r\n    Sub Main(args As String())\r\n        Dim a As New A\r\n        Dim b As New B\r\n        a.Foo(42)\r\n        b.Foo(42)\r\n        Dim x = (3,4)\r\n        Dim y = (3,4)\r\n        Console.WriteLine(x = y)\r\n    End Sub\r\nEnd Module\r\n```\r\n\r\nBuild via CLI. \r\n\r\n## Expected Result\r\n\r\nErrors about my code. This is the result if I target netcoreapp2.0 and use SDK 2.1.3:\r\n\r\n```\r\n$ dotnet build\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj...\r\n  Generating MSBuild file /Users/kathleen/projects/vbconsoletest/obj/vbconsoletest.vbproj.nuget.g.props.\r\n  Generating MSBuild file /Users/kathleen/projects/vbconsoletest/obj/vbconsoletest.vbproj.nuget.g.targets.\r\n  Restore completed in 146.16 ms for /Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj.\r\n/Users/kathleen/projects/vbconsoletest/Program.vb(15,27): error BC30452: Operator '=' is not defined for types '(Integer, Integer)' and '(Integer, Integer)'. [/Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj]\r\n\r\nBuild FAILED.\r\n\r\n/Users/kathleen/projects/vbconsoletest/Program.vb(15,27): error BC30452: Operator '=' is not defined for types '(Integer, Integer)' and '(Integer, Integer)'. [/Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.35\r\n```\r\n\r\n## Actual Result\r\n\r\nErrors from the target. \r\n\r\n```\r\n$ dotnet build\r\nMicrosoft (R) Build Engine version 15.6.82.30579 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 40.03 ms for /Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj.\r\n/usr/local/share/dotnet/sdk/2.1.300-preview2-008260/Roslyn/Microsoft.VisualBasic.Core.targets(73,5): error MSB6006: \"vbc.dll\" exited with code 1.[/Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/local/share/dotnet/sdk/2.1.300-preview2-008260/Roslyn/Microsoft.VisualBasic.Core.targets(73,5): error MSB6006: \"vbc.dll\" exited with code 1.[/Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.30\r\n```\r\n\r\n## info\r\n\r\n```\r\n.NET Command Line Tools (2.1.300-preview2-008260)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview2-008260\r\n Commit SHA-1 hash:  4f2e060ef3\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.13-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.300-preview2-008260/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-26131-06\r\n  Build    : b13a0d5c331f374afd35ded57b9a4b4ab128864c\r\n```"},{"Id":"7318793514","Type":"IssuesEvent","CreatedAt":"2018-03-01T21:57:40","Actor":"KathleenDollard","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2015","RelatedDescription":"Opened issue \"VB project gives target error, not compiler error\" (#2015) at dotnet/sdk","RelatedBody":"When building a Visual Basic application via the CLI in 2.1.300-Preview2, compiler errors are not reported to the user. \r\n\r\n## Steps to reproduce\r\n\r\n* Create a VB console ap\r\n* Create an error in the application. Mine was (the Program.cs\r\n\r\n```VB\r\nOption Explicit On\r\nOption Infer On\r\n\r\nImports System\r\n\r\nModule Program\r\n    Sub Main(args As String())\r\n        Dim a As New A\r\n        Dim b As New B\r\n        a.Foo(42)\r\n        b.Foo(42)\r\n        Dim x = (3,4)\r\n        Dim y = (3,4)\r\n        Console.WriteLine(x = y)\r\n    End Sub\r\nEnd Module\r\n```\r\n\r\nBuild via CLI. \r\n\r\n## Expected Result\r\n\r\nErrors about my code. This is the result if I target netcoreapp2.0 and use SDK 2.1.3:\r\n\r\n```\r\n$ dotnet build\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj...\r\n  Generating MSBuild file /Users/kathleen/projects/vbconsoletest/obj/vbconsoletest.vbproj.nuget.g.props.\r\n  Generating MSBuild file /Users/kathleen/projects/vbconsoletest/obj/vbconsoletest.vbproj.nuget.g.targets.\r\n  Restore completed in 146.16 ms for /Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj.\r\n/Users/kathleen/projects/vbconsoletest/Program.vb(15,27): error BC30452: Operator '=' is not defined for types '(Integer, Integer)' and '(Integer, Integer)'. [/Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj]\r\n\r\nBuild FAILED.\r\n\r\n/Users/kathleen/projects/vbconsoletest/Program.vb(15,27): error BC30452: Operator '=' is not defined for types '(Integer, Integer)' and '(Integer, Integer)'. [/Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.35\r\n## Actual Result\r\n\r\nErrors from the target. \r\n\r\n```\r\n$ dotnet build\r\nMicrosoft (R) Build Engine version 15.6.82.30579 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 40.03 ms for /Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj.\r\n/usr/local/share/dotnet/sdk/2.1.300-preview2-008260/Roslyn/Microsoft.VisualBasic.Core.targets(73,5): error MSB6006: \"vbc.dll\" exited with code 1.[/Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/local/share/dotnet/sdk/2.1.300-preview2-008260/Roslyn/Microsoft.VisualBasic.Core.targets(73,5): error MSB6006: \"vbc.dll\" exited with code 1.[/Users/kathleen/projects/vbconsoletest/vbconsoletest.vbproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.30\r\n```\r\n\r\n## info\r\n\r\n```\r\n.NET Command Line Tools (2.1.300-preview2-008260)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview2-008260\r\n Commit SHA-1 hash:  4f2e060ef3\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.13-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.300-preview2-008260/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-26131-06\r\n  Build    : b13a0d5c331f374afd35ded57b9a4b4ab128864c\r\n```"},{"Id":"7318620804","Type":"IssuesEvent","CreatedAt":"2018-03-01T21:22:14","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2009","RelatedDescription":"Closed issue \"Create packages with multiple RuntimeIdentifiers cross-platform build\" (#2009) at dotnet/sdk","RelatedBody":"Using `<TargetFrameworks>` results in multiple builds and is properly supported by NuGet pack (`lib/<tfm>`) and Visual Studio.\r\n\r\nHowever, `<RuntimeIdentifiers>` doesn't seem to have much impact except for package consumption.\r\nI was expecting to also be able to create such NuGet packages, with `runtimes/<runtime>/lib/<tfm>` folders.\r\n\r\nFor the use case, I would like to develop a library that support this kind of combination of TFM/Runtime identifiers:\r\n- monoandroid50 (no runtime identifier)\r\n- net461 (windows)\r\n- net461 (unix)\r\n- net461 (macos)\r\n- xamarinios10\r\n- uap10.0\r\n\r\nNote that runtime identifiers are different for each TFM.\r\n\r\nIs the only choice to develop custom cross-targeting targets myself, or will it be supported in nuget/dotnet/vs at some point?"},{"Id":"7318456549","Type":"PullRequestEvent","CreatedAt":"2018-03-01T20:47:27","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2012","RelatedDescription":"Merged pull request \"Merge release/2.1 to release/2.1.1xx\" (#2012) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into release/2.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-release/2.1.1xx\ngit reset --hard upstream/release/2.1.1xx\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-release/2.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7318450752","Type":"PullRequestEvent","CreatedAt":"2018-03-01T20:46:13","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2011","RelatedDescription":"Merged pull request \"Merge release/2.0.0 to release/2.1\" (#2011) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7317876863","Type":"IssuesEvent","CreatedAt":"2018-03-01T18:50:39","Actor":"natemcmaster","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2014","RelatedDescription":"Opened issue \"Add obsolete warning for DotNetCliToolReference packages that are now built-in commands\" (#2014) at dotnet/sdk","RelatedBody":"A few ASP.NET Core packages that used to be installed via DotNetCliToolReference will be built-in commands for the CLI.  When invoking \"dotnet watch\" now, it will use the built-in version, not the one delivered via DotNetCliToolReference, so DotNetCliToolReference should be removed.\r\ncref https://github.com/aspnet/Announcements/issues/290.\r\n\r\n\r\nSince we don't have a property way to issue obsolete messages about packages (NuGet/Home#2867), can we add a target that runs before Restore that issues an obsolete warning for the following packages\r\n\r\n```xml\r\n<ItemGroup>\r\n   <DotNetCliToolReference Include=\"Microsoft.DotNet.Watcher.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.Caching.SqlConfig.Tools\" Version=\"(all versions)\" />\r\n</ItemGroup>\r\n```\r\n\r\nProposed text:\r\n\r\n> warning SDK0000: the DotNetCliToolReference to Microsoft.DotNet.Watcher.Tools is obsolete. This tool is now bundled in the CLI. The DotNetCliToolReference can be removed.\r\n\r\n"},{"Id":"7317613116","Type":"PullRequestEvent","CreatedAt":"2018-03-01T17:57:57","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2013","RelatedDescription":"Opened pull request \"Merge release/2.1.1xx to release/2.1.2xx\" (#2013) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.1xx into release/2.1.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.1xx-to-release/2.1.2xx\ngit reset --hard upstream/release/2.1.2xx\ngit merge upstream/release/2.1.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.1xx-to-release/2.1.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7317612956","Type":"PullRequestEvent","CreatedAt":"2018-03-01T17:57:56","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2012","RelatedDescription":"Opened pull request \"Merge release/2.1 to release/2.1.1xx\" (#2012) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into release/2.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-release/2.1.1xx\ngit reset --hard upstream/release/2.1.1xx\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-release/2.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7317612756","Type":"PullRequestEvent","CreatedAt":"2018-03-01T17:57:53","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2011","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/2.1\" (#2011) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"968893314832285697","CreatedAt":"2018-02-28T16:59:02+00:00","UserScreenname":"dotnet","Text":"And by \"check out\" @terrajobst really means: please subscribe :-) https://t.co/O2IOMK3aAU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":9,"RawContent":null},{"Id":"968549530395336704","CreatedAt":"2018-02-27T18:12:57+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0-preview1 now available https://t.co/jAZAQmZq7Q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":104,"RawContent":null},{"Id":"968549278879592449","CreatedAt":"2018-02-27T18:11:57+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core 2.1 Preview 1 https://t.co/myZTqqSPuJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":89,"FavoriteCount":69,"RawContent":null},{"Id":"968549057403604992","CreatedAt":"2018-02-27T18:11:04+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 2.1 Preview 1 https://t.co/YMrTQJHDhU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":510,"FavoriteCount":397,"RawContent":null}]}},"RunOn":"2018-03-02T05:30:20.9701549Z","RunDurationInMilliseconds":8004}