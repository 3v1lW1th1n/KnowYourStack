{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel.Â Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing compatibility version in MVC","PublishedOn":"2018-02-27T22:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Ryan Nowak In 2.1 we&#8217;re adding a feature to address a long-standing problem for maintaining MVC &#8211; how do we make improvements to framework code without making it...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/introducing-compatibility-version-in-mvc/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Getting started with SignalR","PublishedOn":"2018-02-27T21:57:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since 2013, ASP.NET developers have been using SignalR to build real-time web applications. Now, with ASP.NET Core 2.1 Preview 1, we&#8217;re bringing SignalR over to ASP.NET Core so you can build...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Using ASP.NET Core Previews on Azure App Service","PublishedOn":"2018-02-27T19:18:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are 3 options to get ASP.NET Core 2.1 Preview applications running on Azure App Service: Installing the Preview1 site extension Deploying your app self-contained Using Web Apps for Containers...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for using HTTPS","PublishedOn":"2018-02-27T18:01:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Securing web apps with HTTPS is more important than ever before. Browser enforcement of HTTPS is becoming increasingly strict. Sites that don&#8217;t use HTTPS are increasingly labeled as insecure....","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-https-improvements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1 now available","PublishedOn":"2018-02-27T18:00:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the first preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. We&#8217;ve been working hard on this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-02-12T17:36:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released stable packages for ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/12/announcing-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7319686942","Type":"IssuesEvent","CreatedAt":"2018-03-02T02:14:31","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2915","RelatedDescription":"Closed issue \"ActivatorUtilities.CreateInstance no selecting the longest matching constructor\" (#2915) at aspnet/Home","RelatedBody":"Consider:\r\n```        \r\n        public CookiePolicyMiddleware(RequestDelegate next, IOptions<CookiePolicyOptions> options)\r\n        {\r\n            Options = options.Value;\r\n            _next = next;\r\n            _logger = NullLogger.Instance;\r\n        }\r\n        \r\n        public CookiePolicyMiddleware(RequestDelegate next, IOptions<CookiePolicyOptions> options, ILoggerFactory factory)\r\n        {\r\n            Options = options.Value;\r\n            _next = next ?? throw new ArgumentNullException(nameof(next));\r\n            _logger = factory.CreateLogger<CookiePolicyMiddleware>();\r\n        }\r\n```\r\nThis class is activated by UseMiddleware which calls Activator.CreateInstance.\r\nhttps://github.com/aspnet/HttpAbstractions/blob/9119433ab778d7adf04c4601917809f2f4582a93/src/Microsoft.AspNetCore.Http.Abstractions/Extensions/UseMiddlewareExtensions.cs#L92\r\n\r\nThe shorter constructor is being used by default and logging doesn't work. Either constructor works if I comment out the other.\r\n\r\nOur breaking change policy requires adding new constructors when adding new parameters."},{"Id":"7319340696","Type":"IssuesEvent","CreatedAt":"2018-03-02T00:18:16","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2915","RelatedDescription":"Opened issue \"ActivatorUtilities.CreateInstance no selecting the longest matching constructor\" (#2915) at aspnet/Home","RelatedBody":"Consider:\r\n```        \r\n        public CookiePolicyMiddleware(RequestDelegate next, IOptions<CookiePolicyOptions> options)\r\n        {\r\n            Options = options.Value;\r\n            _next = next;\r\n            _logger = NullLogger.Instance;\r\n        }\r\n        \r\n        public CookiePolicyMiddleware(RequestDelegate next, IOptions<CookiePolicyOptions> options, ILoggerFactory factory)\r\n        {\r\n            Options = options.Value;\r\n            _next = next ?? throw new ArgumentNullException(nameof(next));\r\n            _logger = factory.CreateLogger<CookiePolicyMiddleware>();\r\n        }\r\n```\r\nThis class is activated by UseMiddleware which calls Activator.CreateInstance.\r\nhttps://github.com/aspnet/HttpAbstractions/blob/9119433ab778d7adf04c4601917809f2f4582a93/src/Microsoft.AspNetCore.Http.Abstractions/Extensions/UseMiddlewareExtensions.cs#L92\r\n\r\nThe shorter one is being used by default and logging doesn't work. Either constructor works if I comment out the other.\r\n\r\nOur breaking change policy requires adding new constructors when adding new parameters."},{"Id":"7318864124","Type":"IssuesEvent","CreatedAt":"2018-03-01T22:12:37","Actor":"ajcvickers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2914","RelatedDescription":"Closed issue \"Method not found: 'Void Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder..ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'.\" (#2914) at aspnet/Home","RelatedBody":"This is my issue (Method not found) When i issue this command on my terminal\r\n\r\n\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using '/home/oladotun/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.\r\ninfo: Microsoft.EntityFrameworkCore.Infrastructure[10403]\r\n      Entity Framework Core 2.1.0-preview1-28290 initialized 'AppDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None\r\nSystem.MissingMethodException: Method not found: 'Void Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder..ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'.\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.MySqlCommandBuilder..ctor(IDiagnosticsLogger`1 logger, IRelationalTypeMapper typeMapper)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.MySqlCommandBuilderFactory.CreateCore(IDiagnosticsLogger`1 logger, IRelationalTypeMapper relationalTypeMapper)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(String sql)\r\n   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists()\r\n   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.Migrate(String targetMigration)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.UpdateDatabase(String targetMigration, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.Execute(Action action)\r\nMethod not found: 'Void Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder..ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'.\r\n\r\nTired google, but it seems no one has encountered this issue before"},{"Id":"7318823644","Type":"IssuesEvent","CreatedAt":"2018-03-01T22:03:57","Actor":"b06sd","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2914","RelatedDescription":"Opened issue \"Method not found: 'Void Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder..ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'.\" (#2914) at aspnet/Home","RelatedBody":"This is my issue (Method not found) When i issue this command on my terminal\r\n\r\n\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using '/home/oladotun/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.\r\ninfo: Microsoft.EntityFrameworkCore.Infrastructure[10403]\r\n      Entity Framework Core 2.1.0-preview1-28290 initialized 'AppDbContext' using provider 'Pomelo.EntityFrameworkCore.MySql' with options: None\r\nSystem.MissingMethodException: Method not found: 'Void Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder..ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'.\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.MySqlCommandBuilder..ctor(IDiagnosticsLogger`1 logger, IRelationalTypeMapper typeMapper)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.MySqlCommandBuilderFactory.CreateCore(IDiagnosticsLogger`1 logger, IRelationalTypeMapper relationalTypeMapper)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(String sql)\r\n   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists()\r\n   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.Migrate(String targetMigration)\r\n   at Microsoft.EntityFrameworkCore.Design.Internal.MigrationsOperations.UpdateDatabase(String targetMigration, String contextType)\r\n   at Microsoft.EntityFrameworkCore.Design.OperationExecutor.OperationBase.Execute(Action action)\r\nMethod not found: 'Void Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder..ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)'.\r\n\r\nTired google, but it seems no one has encountered this issue before"},{"Id":"7317746218","Type":"IssuesEvent","CreatedAt":"2018-03-01T18:24:43","Actor":"madrianr","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2913","RelatedDescription":"Opened issue \"ASP.NET Core Windows Authentication except specific paths\" (#2913) at aspnet/Home","RelatedBody":"in our ASP.NET Core solution we use Windows Authentication but for one path we need anonymous Access because it is the path for the WOPI Access from Office Online Server like api/wopi/files/{id}\r\n\r\nis there a possibility to except specific paths in ASP.NET CORE with Windows Authentication?\r\n\r\nrobert\r\n"},{"Id":"7317447265","Type":"IssuesEvent","CreatedAt":"2018-03-01T17:27:16","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2909","RelatedDescription":"Closed issue \"Setting ASPNETCORE_ENVIRONMENT from cmd\" (#2909) at aspnet/Home","RelatedBody":"Hello!\r\n\r\nI need to change ASPNETCORE_ENVIRONMENT from cmd (by running bat file).\r\nI have bat file like this:\r\n```\r\n...\r\nSETX ASPNETCORE_ENVIRONMENT \"tests\"\r\nSET ASPNETCORE_ENVIRONMENT \"tests\"\r\ndotnet ef database drop -v --force --startup-project ../startProjectWebApi/\r\ndotnet ef database update -v --startup-project ../startProjectWebApi/\r\n...\r\n```\r\nI assume that it will:\r\n\r\n-  change ASPNETCORE_ENVIRONMENT\r\n-  recreate DB for tests (ConnectionString depends on ASPNETCORE_ENVIRONMENT and getting from appsettings.tests.json from startProjectWebApi)\r\n-  run tests\r\n\r\nBut instead it recreate wrong DB specified for example in appsettings.dev.json.\r\nI can see right ASPNETCORE_ENVIRONMENT  only after restart script/cmd.\r\n\r\nHow can I get real ASPNETCORE_ENVIRONMENT in same session of script after setting it?\r\n\r\nThanx.\r\n"},{"Id":"7313282687","Type":"IssuesEvent","CreatedAt":"2018-03-01T00:18:34","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2775","RelatedDescription":"Closed issue \"Broken symlinks return HTTP 500 instead of HTTP 404\" (#2775) at aspnet/Home","RelatedBody":"Repro:\r\n```\r\ndotnet new mvc\r\nln -s doesnotexists.txt wwwroot/test.txt\r\ndotnet run\r\n```\r\nhttp://localhost:5000/test.txt\r\n\r\n**Expected**\r\nHTTP 404. This file does not exist\r\n\r\n**Actual**\r\nHTTP 500\r\n```\r\nFileNotFoundException: Could not find file '/private/tmp/symlink/wwwroot/test.txt'.\r\nInterop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, string path, bool isDirectory, Func<ErrorInfo, ErrorInfo> errorRewriter)\r\nMicrosoft.Win32.SafeHandles.SafeFileHandle.Open(string path, OpenFlags flags, int mode)\r\nSystem.IO.FileStream..ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, FileOptions options)\r\nMicrosoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream()\r\n```\r\n\r\n**details**\r\nmacOS\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.1.0-preview1-28042\" />\r\n```\r\n"},{"Id":"7313065334","Type":"IssuesEvent","CreatedAt":"2018-02-28T23:15:33","Actor":"ajaybhargavb","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2876","RelatedDescription":"Closed issue \"[JsonPatch]: PathHelpers.NormalizePath should allow spaces and \\\\ characters\" (#2876) at aspnet/Home","RelatedBody":"Consider\r\n```\r\npublic class Person\r\n{\r\n    [JsonProperty(\"Person Name\")]\r\n    public string Name { get; set; }\r\n}\r\n```\r\n\r\nA patch can be sucessfully applied to this property as \r\n```C#\r\nvar doc = new JsonPatchDocument\r\n{\r\n    Operations = \r\n    {\r\n        new Operation(\"add\", \"/Person Name\", null, \"New Name\"),\r\n    },\r\n};\r\n\r\ndoc.ApplyTo(person); // This works correctly.\r\ndoc.Add(\"Person Name\", \"New Name\") fails\r\n```\r\n\r\nSame deal with back slashes. The invalid char check in that method is kinda unncecessary."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7317488438","Type":"PullRequestEvent","CreatedAt":"2018-03-01T17:34:30","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1517","RelatedDescription":"Merged pull request \"Added test for removal of key\" (#1517) at aspnet/SignalR","RelatedBody":"Added test for removal of map key in this.methods in HubConnection. This is a follow up to #1513\r\n\r\n@davidfowl You don't seem to want to poke around with the internals of the HubConnection to much in the tests (And the things that changed where private's as well) so I tested it this way.\r\n\r\nBreaks if you would remove my addition of cource.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7319338196","Type":"PullRequestEvent","CreatedAt":"2018-03-02T00:17:25","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7427","RelatedDescription":"Opened pull request \"[Design]: ConfigureApplicationPartManager\" (#7427) at aspnet/Mvc","RelatedBody":""},{"Id":"7318874709","Type":"IssuesEvent","CreatedAt":"2018-03-01T22:14:38","Actor":"rjamesnw","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7426","RelatedDescription":"Opened issue \"Support attribute on tag helper string properties for selections.\" (#7426) at aspnet/Mvc","RelatedBody":"It seems only enum support for selections exists for Tag Helpers.  There are cases with custom tags where I'd like to give some selections but NOT limit to them.  I think it would be a great idea to have an attribute  - i.e. [HtmlAttributeSelections(\"1\", \"2\", \"3\", etc...)] for strings, or [HtmlAttributeSelections(1, 2, 3, etc...)] for numbers, and so on;  Not sure how \"smart\" the tooling can get there, but just a thought. ;)  I looked for other issues on this but I didn't find any."},{"Id":"7318066591","Type":"IssuesEvent","CreatedAt":"2018-03-01T19:28:09","Actor":"khanusman","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7425","RelatedDescription":"Opened issue \"Web Api not returning error message\" (#7425) at aspnet/Mvc","RelatedBody":"POST action is returning 400 bad error. However, its not returning the error message. I am overriding OnActionExecuting method on ActionFilterAttribute class and I do see ModelState populated and validation errors are also visible in watch, please see the snap,\r\n\r\n![image](https://user-images.githubusercontent.com/5824941/36865027-5836a13a-1d5c-11e8-9651-6a423d937913.png)\r\n\r\nI have POST action implemented like this. Its simply returning updated object from the database.\r\n\r\n    [HttpPost]\r\n    [ODataRoute()]\r\n    public async Task<IActionResult> Post([FromBody]ComponentDTO baseComponent)\r\n        {\r\n        Component component = _mapper.Map<Component>(baseComponent);\r\n\r\n        var result = await _repo.AddDocumentIntoCollectionAsync(component);\r\n        return Created(result);\r\n        }\r\n\r\nAny idea, what i maybe doing wrong ?\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7319357506","Type":"PullRequestEvent","CreatedAt":"2018-03-02T00:23:25","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1655","RelatedDescription":"Opened pull request \"[Design] Use RefreshSignInAsync\" (#1655) at aspnet/Identity","RelatedBody":"Addresses #1616 "},{"Id":"7318864301","Type":"IssuesEvent","CreatedAt":"2018-03-01T22:12:40","Actor":"brgrz","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1654","RelatedDescription":"Opened issue \"Core Identity and the User.Identity.Name problem\" (#1654) at aspnet/Identity","RelatedBody":"After spending a couple of hours debugging the issue when the User.Identity.Name property was null (even when all the required claims were present on the ClaimsPrincipal) I discovered the following blog post which I was able to follow and solve the issue.\r\n\r\nhttps://cerkit.com/2017/07/25/asp-net-core-jwt-tokens-and-user-identity-name-property/\r\n\r\nIs there a specific reason why this isn't included by default in ASP.NET Core project templates?\r\n\r\nSeems really counter intuitive because when working with Identity and Claims you are bound to run into this issue."},{"Id":"7318283470","Type":"IssuesEvent","CreatedAt":"2018-03-01T20:11:00","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1645","RelatedDescription":"Closed issue \"Default provided claims in System.IdentityModel is missing new claims from JWT\" (#1645) at aspnet/Identity","RelatedBody":"The claims provided in System.IdentityModel.JwtRegisteredClaimNames are only a few of those currently provided by IANA\r\n\r\nHere is the current full list for JWT claims:\r\nhttps://www.iana.org/assignments/jwt/jwt.xhtml\r\n\r\nMy question is if, when and how are you going to introduce new claims to ASP.NET Core or IdentityModel in general?"},{"Id":"7318266376","Type":"IssuesEvent","CreatedAt":"2018-03-01T20:07:28","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1651","RelatedDescription":"Closed issue \"aspnet/identity issue\" (#1651) at aspnet/Identity","RelatedBody":"Hello I am following a tutorial on udemy and instructor was explaining the identity. He added the same in the tutorial and i am getting some error when i am trying to add this. Can someone help me out ? I am attaching all the relevant information i can about my project and error.\r\n\r\nScreenshot of error which i am getting in browser.\r\n![image](https://user-images.githubusercontent.com/6859459/36627616-32dc497a-196b-11e8-8262-ab0d6aba4201.png)\r\n\r\nScreenshot of my startup.cs file\r\n![image](https://user-images.githubusercontent.com/6859459/36627622-5fd374da-196b-11e8-99c4-bdece26f4443.png)\r\n\r\nScreenshot of my Application User File:\r\n![image](https://user-images.githubusercontent.com/6859459/36627628-7c346170-196b-11e8-85f2-77618d8d3751.png)\r\n\r\ncan anyone help me out if i am missing any file or missing lines of code  ?"},{"Id":"7305424221","Type":"IssuesEvent","CreatedAt":"2018-02-27T18:46:05","Actor":"fe-c","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1653","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Identity.EntityFrameworkCore nuget reference\" (#1653) at aspnet/Identity","RelatedBody":"Microsoft.AspNetCore.Identity.EntityFrameworkCore (v2.0.1)  uses Microsoft.EntityFrameworkCore.SqlServer (e.g. SqlServerValueGenerationStrategy atribute), but last not refernced by nuget packet of Microsoft.AspNetCore.Identity.EntityFrameworkCore."},{"Id":"7302454876","Type":"IssuesEvent","CreatedAt":"2018-02-27T09:46:03","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1652","RelatedDescription":"Closed issue \"Don't work reference for Microsoft.AspNet.Identity.AspNetCoreCompat\" (#1652) at aspnet/Identity","RelatedBody":"Don't work reference for open source code of package Microsoft.AspNet.Identity.AspNetCoreCompat: https://github.com/aspnet/Identity/tree/dev/src/Microsoft.AspNet.Identity.AspNetCoreCompat\r\n\r\nPlease repair it or specefy new path."},{"Id":"7301743668","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:57:25","Actor":"Testdrivebusiness","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1652","RelatedDescription":"Opened issue \"Don't work reference for Microsoft.AspNet.Identity.AspNetCoreCompat\" (#1652) at aspnet/Identity","RelatedBody":"Don't work reference for open source code of package Microsoft.AspNet.Identity.AspNetCoreCompat: https://github.com/aspnet/Identity/tree/dev/src/Microsoft.AspNet.Identity.AspNetCoreCompat\r\n\r\nPlease repair it or specefy new path."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7320123643","Type":"PullRequestEvent","CreatedAt":"2018-03-02T05:10:43","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2355","RelatedDescription":"Opened pull request \"Limit which features Transport is checked for\" (#2355) at aspnet/KestrelHttpServer","RelatedBody":"e.g. currently its checked for `IServiceProvidersFeature` when hosting is setting up `RequestServices`\r\n\r\n/cc @davidfowl "},{"Id":"7319753052","Type":"PullRequestEvent","CreatedAt":"2018-03-02T02:37:31","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2354","RelatedDescription":"Opened pull request \"Add benchmark using InMemoryTransport\" (#2354) at aspnet/KestrelHttpServer","RelatedBody":"Results from my dev machine:\r\n\r\nMethod |     Mean |     Error |    StdDev |      Op/s | Allocated |\r\n------------------- |---------:|----------:|----------:|----------:|----------:|\r\nPlaintext | 9.734 us | 0.5443 us | 0.8147 us | 102,729.6 |     232 B |\r\nPlaintextPipelined | 6.002 us | 0.0678 us | 0.1015 us | 166,607.3 |      21 B |\r\n\r\nFor comparison, here are the `RequestParsing` benchmarks on the same machine:\r\n\r\nMethod |       Mean |     Error |    StdDev |        Op/s | Scaled | ScaledSD |  Gen 0 | Allocated |\r\n----------------------------------------- |-----------:|----------:|----------:|------------:|-------:|---------:|-------:|----------:|\r\nPlaintextTechEmpower | 1,380.3 ns |  8.413 ns |  12.59 ns |   724,481.9 |   1.00 |     0.00 | 0.0010 |     344 B |\r\nPipelinedPlaintextTechEmpower | 1,137.2 ns | 33.750 ns |  50.52 ns |   879,351.3 |   0.82 |     0.04 | 0.0013 |     344 B |\r\n"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7318946966","Type":"IssuesEvent","CreatedAt":"2018-03-01T22:30:26","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2018","RelatedDescription":"Closed issue \"Flaky test: Dispatcher_ProcessSimultaneousConnections_HitsKeepAliveTimeout\" (#2018) at aspnet/Razor","RelatedBody":"I set `Dispatcher_ProcessSimultaneousConnections_HitsKeepAliveTimeout` to ignore for now because it [fails](http://aspnetci/viewLog.html?buildId=399383&tab=buildResultsDiv&buildTypeId=Lite_MvcTest#testNameId-5931557005942489049) sometimes. It should be investigated and re-enabled once fixed."},{"Id":"7318670300","Type":"IssuesEvent","CreatedAt":"2018-03-01T21:32:18","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2111","RelatedDescription":"Closed issue \"Perf: Optimize build server incremental build time\" (#2111) at aspnet/Razor","RelatedBody":""},{"Id":"7318643884","Type":"PullRequestEvent","CreatedAt":"2018-03-01T21:26:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2103","RelatedDescription":"Merged pull request \"Perf: Cache assembly references in build server DiscoverCommand\" (#2103) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/issues/2111\r\nThis is an effort to reduce the perf impact of `MetadataReference.CreateFromFile()`. This is mostly inspired from Roslyn.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/1579269/36569731-c71dd862-17e3-11e8-8766-74e6caa571ff.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/1579269/36569755-df63fc62-17e3-11e8-9f06-e93fbda5005f.png)\r\n\r\nUpdate: Latest perf data https://github.com/aspnet/Razor/pull/2103#issuecomment-368134121\r\n"},{"Id":"7318076013","Type":"PullRequestEvent","CreatedAt":"2018-03-01T19:29:57","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2126","RelatedDescription":"Opened pull request \"Fix flaky dispatcher test\" (#2126) at aspnet/Razor","RelatedBody":"#2018 \r\n\r\nThe problem here was there was nothing ensuring Compilations are fully completed and written to the response before we send the client disconnect. Although I couldn't reproduce the exact failure from the CI, I am fairly certain this is the issue. I was able to make it fail by adding a delay in the compile task (which shouldn't happen).\r\nThe fix was to add a callback that would trigger when a compilation is fully completed and then wait on it before disconnecting."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7307968614","Type":"IssuesEvent","CreatedAt":"2018-02-28T06:01:18","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file."},{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"},{"Id":"7271114444","Type":"IssuesEvent","CreatedAt":"2018-02-20T18:33:27","Actor":"abpiskunov","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/347","RelatedDescription":"Closed issue \"File nesting in Solution Explorer is inconsistent and incorrect\" (#347) at aspnet/Tooling","RelatedBody":"The Solution Explorer for ASP.NET 5 MVC projects has several major problems - one of them is file nesting. The below issues affect Visual Studio 2015 Update 1 with ASP.NET 5 Release Candidate 1.\n#### tl;dr\n- Please fix nesting rules for `.less`, `.scss` and `.sass`, so those files are nested under `.html`.\n- Please fix incorrect nesting that sometimes appear after renaming/moving/copying files and folders.\n- Please provide an option to disable all file nesting, and eventually, options to configure nesting rules.\n- Please fix other critical Solution Explorer issues - this is just one of them, and there are many more.\n#### File nesting is inconsistent when nesting files under `.html`.\n\nThe `.less` and `.scss` files should be nested under `.html`. Those files compile to `.css` just like `.ts` compile to `.js` and they are just as much part of the view component. \n![less-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942660/6452782c-a838-11e5-9a44-d7ab6a2e5fc9.png)\n![scss-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11942664/66bbd3a6-a838-11e5-8e3c-f1c369d5e1de.png)\nIn fact, if we only have a `.css` file in there, then it _is_ nested as expected, so clearly `.less` and `.scss` should also be nested:\n![css-is-nested-as-expected](https://cloud.githubusercontent.com/assets/6388663/11942670/6be4bdd4-a838-11e5-99b1-1dcc43238459.png)\n\nWhile the above is clearly a bug, and a very annoying one at that, the rules for other file types are less obvious, but should maybe also be considered... maybe `.json` should also be nested under `.html`?\nIt probably contains either settings, string resources, or data for that view component, so it seems resonable to me, although I consider this far less important than getting the style sheet nesting fixed.\n![json-not-nested-under-html](https://cloud.githubusercontent.com/assets/6388663/11939884/4a1bb224-a825-11e5-9ff6-631b4e8fed39.png)\n\nThose nesting rules have been inconsistent ever since they were introduced in ASP.NET 5, and **it really needs to be fixed**. Sure, everything compiles just fine, but I'm getting really pissed off looking at this mess in my Solution Explorer every day. Inconsistencies like this makes the whole concept of nesting seem like an annoyance more than a help, as it raises the obvious question \"if only some files are nested, then why nest anything at all - that's just an extra click to get to the .ts file\". Which brings me to...\n#### File nesting can be annoying\n\nWhile the fundamental idea of file nesting is not nessesarily bad, it can be _very_ annoying at times, which is why, as a _minimum_, **I want an option to disable all file nesting** - and ideally, options to configure the nesting rules.\n\nConsider this folder structure, where the folder already represents a container for the component:\n![file-nesting-is-annoying](https://cloud.githubusercontent.com/assets/6388663/11940913/ff28392a-a82b-11e5-86b4-571bc70d21bb.png)\nHere the file nesting provides no benefit at all, and actually just introduces a _really_ annoying extra click to get to the `.ts` file. A possible fix for this might be to only nest files if the folder name is different from the name of the `.html` file, but this might also be wrong - for example, a folder named `tabs` representing some fancy `tabs` component might actually contain multiple elements that work together, e.g. `tabs.html/js`, `tab-pane.html/js` and `tab-button.html/js`, and in this case we _do_ want nesting for all three of those. Therefore, I strongly believe an option to simply disable all nesting is the best option here - and it is very much needed, because despite this example, we do have projects in which the nesting provides absolutely no value and represents a major annoyance.\n\nOne could also argue that the `.html` file should actually be nested under the `.js` file.\nConsider an Angular 2 application, where the `.ts` file represents the actual Component, annotated with metadata specifying either the path to the `.html` file representing its view, or if the view is small, a string representing the markup of the view. Same for styles, where the metadata in the `.ts` file specifies either the path to the `.css` file, or a string representing the style rules. Here, both the view and the style sheet is clearly dependencies of the `.ts` file, so it would make sense to nest them below that...\n##### An alternative idea\n\nAlternatively, you could consider a completely different approach to nesting, where the part of the file name the files have in common, is used to show a \"virtual folder\" containing all the files - then file nesting could be used only for things like transpiler generated files. The image below is a concept I mocked up to illustrate this idea:\n![virtual-folder-concept](https://cloud.githubusercontent.com/assets/6388663/11942319/042b84ea-a836-11e5-80f1-b5941cfbdfa7.png)\nHere, all the files have the \"foo\" part of their name in common, and is therefore nested under a \"foo\" node in Solution Explorer. However, in the file system, the actual files are all located in the components folder, so in the code the path would be `app/components/foo.js` - nice an clean, works for any file type, and makes no assumptions about whether `.html` or `.js` is more important.\n\nGoing further with this idea, the IDE could also be smart, so when selecting this \"virtual folder\", it could maybe somehow open all the `foo.*` files in a split view (ignoring transpilation output of course), thus providing a quick way to see all the component code at once. Just a thought...\n### File nesting is broken\n\nNot only is file nesting inconsistent, and sometimes annoying, but it is also broken.\nHere are two cases of incorrect behavior I managed to reproduce - unfortunately, this does not seem to fail consistently, so it can be hard to reproduce - but it does happen often enough to be annoying.\n![file-nested-on-drag-copy](https://cloud.githubusercontent.com/assets/6388663/11943207/4749c9e8-a83c-11e5-9f15-304cb16e8419.png)\n![nesting-broken-when-folder-is-renamed](https://cloud.githubusercontent.com/assets/6388663/11943211/4c807074-a83c-11e5-8e71-4bed0bd4353c.png)\n\nPlease take those Solution Explorer issues seriously - I've provided feedback about multiple critical issues several several months ago, and thus far _nothing_ has improved. Solution Explorer still hangs or crashes the whole IDE when a large number of files is modified/moved/copied/renamed, it still has annoying, inconsistent and buggy file nesting, and it still constantly gets out of sync with the file system, crashing first the project system and eventually the whole IDE. I'm more that a little concerned about seeing a release candidate label on something this buggy and unpolished - if this is indeed what you intend to release, then we intend to find another IDE for our frontend development.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7215731126","Type":"IssuesEvent","CreatedAt":"2018-02-08T09:18:22","Actor":"SteveSandersonMS","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Opened issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289) at aspnet/Announcements","RelatedBody":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":70,"FavoriteCount":53,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Raâ¦ https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":9,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.â¦ https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answeâ¦ https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of tâ¦ https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlandoâ¦ https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":15,"RawContent":null},{"Id":"961596291968102400","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onliâ¦ https://t.co/dvU3elJX8R","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"961390822993399809","CreatedAt":"2018-02-08T00:06:48+00:00","UserScreenname":"aspnet","Text":"Did you miss this week's #ASPNET Community Standup (with the latest news on Blazor, starring @danroth27 andâ¦ https://t.co/tfeqgnhClX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"961390078932148224","CreatedAt":"2018-02-08T00:03:51+00:00","UserScreenname":"aspnet","Text":"Sure, after you've left a PR on the #ASPNET docs...\n\nhttps://t.co/Dau0ZgAUbe\n\n;) https://t.co/s8UGKAhK0e","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"961382608818130944","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit tâ¦ https://t.co/7ecMOR53sw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":0,"RawContent":null}]}},"RunOn":"2018-03-02T05:30:10.6519546Z","RunDurationInMilliseconds":8772}