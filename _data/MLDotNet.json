{"Data":{"GitHub":{"Issues":[{"Id":"463549805","IsPullRequest":true,"CreatedAt":"2019-07-03T05:22:25","Actor":"daholste","Number":"3958","RawContent":null,"Title":"[AutoML] Bump ML.NET package version to latest 1.2.0","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3958","RelatedDescription":"Open PR \"[AutoML] Bump ML.NET package version to latest 1.2.0\" (#3958)"},{"Id":"463017863","IsPullRequest":true,"CreatedAt":"2019-07-03T03:22:10","Actor":"sayanshaw24","Number":"3948","RawContent":null,"Title":"Reformatted Regression samples to width 85","State":"closed","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3948","RelatedDescription":"Closed or merged PR \"Reformatted Regression samples to width 85\" (#3948)"},{"Id":"462988564","IsPullRequest":true,"CreatedAt":"2019-07-03T02:34:05","Actor":"sierralee51","Number":"3946","RawContent":null,"Title":"Reformatting BinaryClassification samples to width 85","State":"closed","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3946","RelatedDescription":"Closed or merged PR \"Reformatting BinaryClassification samples to width 85\" (#3946)"},{"Id":"462901961","IsPullRequest":true,"CreatedAt":"2019-07-03T00:20:37","Actor":"sierralee51","Number":"3942","RawContent":null,"Title":"Reformatting MulticlassClassification samples to width 85","State":"closed","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478\r\n*There are a couple exceptions to the 85 char. limit that have been approved by Natalie","Url":"https://github.com/dotnet/machinelearning/pull/3942","RelatedDescription":"Closed or merged PR \"Reformatting MulticlassClassification samples to width 85\" (#3942)"},{"Id":"462943876","IsPullRequest":true,"CreatedAt":"2019-07-03T00:11:51","Actor":"RadicalRayan","Number":"3943","RawContent":null,"Title":"Reformatting Conversion, FeatureSelection and Image Analytics of Transform to Width 85","State":"closed","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3943","RelatedDescription":"Closed or merged PR \"Reformatting Conversion, FeatureSelection and Image Analytics of Transform to Width 85\" (#3943)"},{"Id":"462992630","IsPullRequest":true,"CreatedAt":"2019-07-03T00:04:59","Actor":"RadicalRayan","Number":"3947","RawContent":null,"Title":"Reformatting Test, Projection and TimeSeries of Transform to Width 85","State":"closed","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3947","RelatedDescription":"Closed or merged PR \"Reformatting Test, Projection and TimeSeries of Transform to Width 85\" (#3947)"},{"Id":"463055787","IsPullRequest":true,"CreatedAt":"2019-07-02T23:56:06","Actor":"RadicalRayan","Number":"3950","RawContent":null,"Title":"Reformatting Featurization of Transform and Misc files in Transform to Width 85","State":"closed","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478\r\n*Misc. refers to those files found in the Transform directory but not in another subdirectory","Url":"https://github.com/dotnet/machinelearning/pull/3950","RelatedDescription":"Closed or merged PR \"Reformatting Featurization of Transform and Misc files in Transform to Width 85\" (#3950)"},{"Id":"463371044","IsPullRequest":true,"CreatedAt":"2019-07-02T22:35:12","Actor":"daholste","Number":"3954","RawContent":null,"Title":"[AutoML] CLI: Regenerate templated CS files","State":"closed","Body":"Regenerate all templated CS files from checked-in TT files. (I unknowingly upgraded CS files to be FXCop / StyleCop compliant in https://github.com/dotnet/machinelearning/pull/3823 . This was unnecessary. I did not modify TT files. I'm reverting my FXCop / StyleCop change to the generated files by regenerating them from the checked-in TT files.)","Url":"https://github.com/dotnet/machinelearning/pull/3954","RelatedDescription":"Closed or merged PR \"[AutoML] CLI: Regenerate templated CS files\" (#3954)"},{"Id":"463429776","IsPullRequest":true,"CreatedAt":"2019-07-02T20:50:59","Actor":"codemzs","Number":"3957","RawContent":null,"Title":"Increment version for application compatibility.","State":"open","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3957","RelatedDescription":"Open PR \"Increment version for application compatibility.\" (#3957)"},{"Id":"463414699","IsPullRequest":true,"CreatedAt":"2019-07-02T20:46:20","Actor":"codemzs","Number":"3956","RawContent":null,"Title":"Increment build version to 1.3 for release and 0.15 for preview.","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3956","RelatedDescription":"Closed or merged PR \"Increment build version to 1.3 for release and 0.15 for preview.\" (#3956)"},{"Id":"463399692","IsPullRequest":true,"CreatedAt":"2019-07-02T19:33:59","Actor":"Shrutiagarwal2107","Number":"3955","RawContent":null,"Title":"Update .gitattributes","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3955","RelatedDescription":"Open PR \"Update .gitattributes\" (#3955)"},{"Id":"463370443","IsPullRequest":true,"CreatedAt":"2019-07-02T18:20:12","Actor":"daholste","Number":"3953","RawContent":null,"Title":"[AutoML] Regenerate CLI templated files","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3953","RelatedDescription":"Closed or merged PR \"[AutoML] Regenerate CLI templated files\" (#3953)"},{"Id":"463262045","IsPullRequest":false,"CreatedAt":"2019-07-02T14:28:32","Actor":"eerhardt","Number":"3952","RawContent":null,"Title":"Remove Static API code","State":"open","Body":"Since we are closing Static API issues with \"no development is being done on static API\" (ex. https://github.com/dotnet/machinelearning/issues/1153#issuecomment-507014868), we should just remove the Static API code from the repo. If we need it again in the future, we can get it out of source control history. But there is no reason to build and maintain this code anymore.","Url":"https://github.com/dotnet/machinelearning/issues/3952","RelatedDescription":"Open issue \"Remove Static API code\" (#3952)"},{"Id":"463028013","IsPullRequest":true,"CreatedAt":"2019-07-02T13:57:06","Actor":"sierralee51","Number":"3949","RawContent":null,"Title":"Reformatting misc. samples to width 85","State":"closed","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478\r\n\r\n*Misc. meaning files not in a specific folder","Url":"https://github.com/dotnet/machinelearning/pull/3949","RelatedDescription":"Closed or merged PR \"Reformatting misc. samples to width 85\" (#3949)"},{"Id":"462874548","IsPullRequest":true,"CreatedAt":"2019-07-02T13:45:48","Actor":"sayanshaw24","Number":"3941","RawContent":null,"Title":"Reformatted Recommendation samples to width 85","State":"closed","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3941","RelatedDescription":"Closed or merged PR \"Reformatted Recommendation samples to width 85\" (#3941)"},{"Id":"463132839","IsPullRequest":true,"CreatedAt":"2019-07-02T09:52:37","Actor":"codemzs","Number":"3951","RawContent":null,"Title":"Release notes for 1.2.0 release.","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3951","RelatedDescription":"Open PR \"Release notes for 1.2.0 release.\" (#3951)"},{"Id":"462472431","IsPullRequest":false,"CreatedAt":"2019-07-02T03:54:49","Actor":"jiaguoxinzhi","Number":"3935","RawContent":null,"Title":"ML.NET Features column 'Feature' not found 如何将预训数据模型 转化为 预测数据模型","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**:Win10\r\n- **.NET Version (eg., dotnet --info)**: .net core 3.0 preview-6\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nhttps://social.msdn.microsoft.com/Forums/en-US/a9a45553-d26f-4964-9b84-81a6f1806754/mlnet-features-column-feature-not-found?forum=2212\r\n- **What happened?**\r\nhttps://social.msdn.microsoft.com/Forums/en-US/a9a45553-d26f-4964-9b84-81a6f1806754/mlnet-features-column-feature-not-found?forum=2212\r\n- **What did you expect?**\r\nML.NET Features column 'Feature' not found 如何将预训数据模型 转化为 预测数据模型\r\n\r\n怎么使用单独的数据准备和模型管道进行预测 On ML.NET, how to use eparate data preparation and model pipelines Predict(forcast)\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\nclass Program\r\n    {\r\n\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n\r\n\r\n            HousingData[] housingData = new HousingData[]\r\n            {\r\n                new HousingData\r\n                {\r\n                    Size = 600f,\r\n                    HistoricalPrices = new float[] { 100000f ,125000f ,122000f },\r\n                    CurrentPrice = 170000f\r\n                },\r\n                new HousingData\r\n                {\r\n                    Size = 1000f,\r\n                    HistoricalPrices = new float[] { 200000f, 250000f, 230000f },\r\n                    CurrentPrice = 225000f\r\n                },\r\n                new HousingData\r\n                {\r\n                    Size = 1000f,\r\n                    HistoricalPrices = new float[] { 126000f, 130000f, 200000f },\r\n                    CurrentPrice = 195000f\r\n                }\r\n            };\r\n\r\n            // Create MLContext\r\n            MLContext mlContext = new MLContext();\r\n\r\n            // Load Data\r\n            IDataView data = mlContext.Data.LoadFromEnumerable<HousingData>(housingData);\r\n\r\n            //使用单独的数据准备和模型管道\r\n            {\r\n                // Define data preparation estimator\r\n                IEstimator<ITransformer> dataPrepEstimator =\r\n                    mlContext.Transforms.Concatenate(\"Features\", new string[] { \"Size\", \"HistoricalPrices\" })\r\n                        .Append(mlContext.Transforms.NormalizeMinMax(\"Features\"))\r\n                        ;\r\n                // Create data preparation transformer\r\n                ITransformer dataPrepTransformer = dataPrepEstimator.Fit(data);\r\n                // Pre-process data using data prep operations\r\n                IDataView transformedData = dataPrepTransformer.Transform(data);\r\n \r\n                // Define StochasticDualCoordinateAscent regression algorithm estimator\r\n                var sdcaEstimator = mlContext.Regression.Trainers.Sdca();//labelColumnName: \"Label\", featureColumnName: \"Features\"\r\n\r\n                //Console.WriteLine(\"正在训练\");\r\n                // Train regression model\r\n                RegressionPredictionTransformer<LinearRegressionModelParameters> trainedModel = sdcaEstimator.Fit(transformedData);\r\n\r\n                // Save Data Prep transformer\r\n                mlContext.Model.Save(dataPrepTransformer, data.Schema, \"data_preparation_pipeline.zip\");\r\n\r\n                // Save Trained Model\r\n                mlContext.Model.Save(trainedModel, transformedData.Schema, \"model11.zip\");\r\n                //Console.WriteLine(\"保存完成\");\r\n\r\n                // Define data preparation and trained model schemas\r\n                DataViewSchema dataPrepPipelineSchema, modelSchema;\r\n\r\n                // Load data preparation pipeline and trained model\r\n                ITransformer dataPrepPipeline = mlContext.Model.Load(\"data_preparation_pipeline.zip\", out dataPrepPipelineSchema);\r\n                ITransformer predictionPipeline = mlContext.Model.Load(\"model11.zip\", out modelSchema);\r\n\r\n                // Create PredictionEngines\r\n                PredictionEngine<HousingData, HousingPrediction> predictionEngine = mlContext.Model.CreatePredictionEngine<HousingData, HousingPrediction>(predictionPipeline);\r\n                // Input Data\r\n                HousingData inputData = new HousingData\r\n                {\r\n                    Size = 900f,\r\n                    HistoricalPrices = new float[] { 155000f, 190000f, 220000f }\r\n                };\r\n\r\n                // Get Prediction\r\n                HousingPrediction prediction = predictionEngine.Predict(inputData);\r\n                Console.WriteLine($\"Size={inputData.Size} and HistoricalPrices= {inputData.HistoricalPrices} Predict-> PredictedPrice={prediction.PredictedPrice}\");\r\n            }\r\n\r\n\r\n\r\n            while (true)\r\n            {\r\n                Console.Write(\"按任意键退出！\");\r\n                Console.ReadKey();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n-error log:ML.NET Features column 'Feature' not found\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3935","RelatedDescription":"Closed issue \"ML.NET Features column 'Feature' not found 如何将预训数据模型 转化为 预测数据模型\" (#3935)"},{"Id":"462971092","IsPullRequest":true,"CreatedAt":"2019-07-02T01:07:12","Actor":"codemzs","Number":"3945","RawContent":null,"Title":"Rename forecasting API argument to a better name.","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3945","RelatedDescription":"Closed or merged PR \"Rename forecasting API argument to a better name.\" (#3945)"},{"Id":"461800555","IsPullRequest":true,"CreatedAt":"2019-07-02T00:13:10","Actor":"sayanshaw24","Number":"3930","RawContent":null,"Title":"Reformatted Ranking samples to width 85","State":"closed","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\n\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3930","RelatedDescription":"Closed or merged PR \"Reformatted Ranking samples to width 85\" (#3930)"},{"Id":"462951609","IsPullRequest":true,"CreatedAt":"2019-07-01T23:36:17","Actor":"codemzs","Number":"3944","RawContent":null,"Title":"Fix typo in time series forecasting API.","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3944","RelatedDescription":"Closed or merged PR \"Fix typo in time series forecasting API.\" (#3944)"},{"Id":"462685942","IsPullRequest":true,"CreatedAt":"2019-07-01T22:43:54","Actor":"codemzs","Number":"3936","RawContent":null,"Title":"Internalize tensorflow API and sanity check APIs from Microsoft.ML.Tensorflow nuget","State":"closed","Body":"fixes #3863\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3936","RelatedDescription":"Closed or merged PR \"Internalize tensorflow API and sanity check APIs from Microsoft.ML.Tensorflow nuget\" (#3936)"},{"Id":"462842449","IsPullRequest":true,"CreatedAt":"2019-07-01T19:31:10","Actor":"sayanshaw24","Number":"3939","RawContent":null,"Title":"Reformatted Recommendation samples to width 85","State":"closed","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\n\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3939","RelatedDescription":"Closed or merged PR \"Reformatted Recommendation samples to width 85\" (#3939)"},{"Id":"462853710","IsPullRequest":true,"CreatedAt":"2019-07-01T18:37:15","Actor":"pkumar07","Number":"3940","RawContent":null,"Title":"Add AVX and FMA intrinsics in Factorization Machine","State":"open","Body":"Added AVX and FMA C# intrinsics in Microsoft.ML.StandardTrainers for Factorization Machine algorithm  which currently implements C++ SSE code as suggested in #3000 and #3785\r\n\r\n@wschin @eerhardt ","Url":"https://github.com/dotnet/machinelearning/pull/3940","RelatedDescription":"Open PR \"Add AVX and FMA intrinsics in Factorization Machine\" (#3940)"},{"Id":"462836656","IsPullRequest":false,"CreatedAt":"2019-07-01T17:52:39","Actor":"cookt","Number":"3938","RawContent":null,"Title":"MathJax Formatting in Section Scoring Function","State":"open","Body":"The details on the scoring function for this trainer are unreadable as it appear the mathjax is not escaped properly\n\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 67778f5f-ee9e-25b6-c869-fc6e6d24453b\n* Version Independent ID: 53f718e9-ebcc-70ea-29af-1f626700c6e1\n* Content: [SdcaMaximumEntropyMulticlassTrainer Class (Microsoft.ML.Trainers)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.sdcamaximumentropymulticlasstrainer?view=ml-dotnet#feedback)\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers/SdcaMaximumEntropyMulticlassTrainer.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers/SdcaMaximumEntropyMulticlassTrainer.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3938","RelatedDescription":"Open issue \"MathJax Formatting in Section Scoring Function\" (#3938)"},{"Id":"462716808","IsPullRequest":true,"CreatedAt":"2019-07-01T13:33:59","Actor":"sayanshaw24","Number":"3937","RawContent":null,"Title":"Reformatted Recommendation samples to width 85","State":"closed","Body":"Guidelines followed:\r\n\r\n85 characters per line\r\nUse 4 spaces for indentation\r\nDot, open parentheses, and function/variable name on same line\r\nMath operations on same line\r\nDon't indent comments\r\nDon't break links\r\nDon't break a comment if it represents a print output\r\nAdd an extra line after a break if it does not already exist\r\nBreak before \"$\"\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3937","RelatedDescription":"Closed or merged PR \"Reformatted Recommendation samples to width 85\" (#3937)"},{"Id":"462389276","IsPullRequest":false,"CreatedAt":"2019-06-30T10:11:31","Actor":"Lelelo1","Number":"3934","RawContent":null,"Title":"Requisites of the data set used in recommendation task with matrixfactorization trainer?","State":"open","Body":"I have a question regarding the data used in recommendation task with matrixfactorization.\r\nHere the data used in the examples consists of `userId` and `productId`.\r\n\r\nCan I use recommendation task when the users in my data all have purchased 1 unique product each - so they are mapped `1 - 1`, `2 - 2`, `3 - 3` - (userId - productId)? Or do it have to be mapped differently - like in the examples where one user might have bought the same product as someone else? And one user have bought N products: `1 - 2`, `2 - 2` ,`3 - (3, 1, 4, 5, 1)` (user 1  bought product 2 which also user 2 bought. user 4 bought 5 products in total)?\r\n\r\nWill I get unreliable and unusefull recommendation score with my original data setup?","Url":"https://github.com/dotnet/machinelearning/issues/3934","RelatedDescription":"Open issue \"Requisites of the data set used in recommendation task with matrixfactorization trainer?\" (#3934)"},{"Id":"462171983","IsPullRequest":false,"CreatedAt":"2019-06-28T19:11:47","Actor":"rtanase","Number":"3933","RawContent":null,"Title":"OneVsAllClassifier fits two trainers for binary classification task","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n- **What happened?**\r\n- **What did you expect?**\r\nI expected OneVsAll to identify there are only two classes and train a single learner.\r\n\r\n### Source code / logs\r\n\r\nInternally the OneVersusAllTrainer will always instantiate as many binary classifiers as the number of classes. This is inefficient for binary classification, as just a single trainer is needed. I understand that I can just use an out of the box binary classification for this, but it will simplify the usage.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3933","RelatedDescription":"Open issue \"OneVsAllClassifier fits two trainers for binary classification task\" (#3933)"},{"Id":"461887867","IsPullRequest":false,"CreatedAt":"2019-06-28T06:57:19","Actor":"i-newton","Number":"3932","RawContent":null,"Title":"cannot use fasterrcnn onnx model in c# ap","State":"open","Body":"steps:\r\ndownload https://github.com/onnx/models/tree/master/faster_rcnn\r\ntry to run model in .net\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Microsoft.ML;\r\nusing AlexNet.DataStructures;\r\nusing Microsoft.ML.Transforms.Image;\r\n\r\nnamespace SomeNet\r\n{\r\n    public class ImageClassifier\r\n    {\r\n        private readonly string dataLocation;\r\n        private readonly string labelsLocation;\r\n        private readonly string imagesLocation;\r\n        private readonly string modelLocation;\r\n        private readonly MLContext mLContext;\r\n\r\n        public ImageClassifier(string dataLocation, string imagesLocation, string labelsLocation, string modelLocation)\r\n        {\r\n            this.dataLocation = dataLocation;\r\n            this.labelsLocation = labelsLocation;\r\n            this.imagesLocation = imagesLocation;\r\n            this.modelLocation = modelLocation;\r\n            mLContext = new MLContext();\r\n        }\r\n\r\n        public struct ImageSettings\r\n        {\r\n            public const int imageHeight = 224;\r\n            public const int imageWidth = 224;\r\n        }\r\n\r\n        public struct OnnxModelSettings\r\n        {\r\n            public const string ModelInput = \"image\";\r\n        }\r\n\r\n        public void Score()\r\n        {\r\n            var model = LoadModel(dataLocation, imagesLocation, modelLocation);\r\n\r\n            var predictions = PredictData(dataLocation, imagesLocation, labelsLocation, model).ToArray(); \r\n        }\r\n\r\n        private PredictionEngine<ImageData, ImagePrediction> LoadModel(string dataLocation, string imagesLocation, string modelLocation)\r\n        {\r\n            var data = mLContext.Data.LoadFromTextFile<ImageData>(dataLocation, hasHeader: false);\r\n\r\n            var pipeline = mLContext.Transforms.LoadImages(outputColumnName: \"loadedimage\", imageFolder: imagesLocation, inputColumnName: nameof(ImageData.ImagePath))\r\n                .Append(mLContext.Transforms.ResizeImages(outputColumnName: \"resizedimage\",inputColumnName:\"loadedimage\", imageWidth: ImageSettings.imageWidth, imageHeight: ImageSettings.imageHeight))\r\n                .Append(mLContext.Transforms.ExtractPixels(outputColumnName: \"image\", inputColumnName:\"resizedimage\", orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder.ABGR))\r\n                .Append(mLContext.Transforms.ApplyOnnxModel(modelFile: modelLocation, outputColumnNames: new[] { \"6379\", \"6381\", \"6383\" }, inputColumnNames: new[] { \"image\"}));\r\n            var model = pipeline.Fit(data);\r\n\r\n            var predictionEngine = mLContext.Model.CreatePredictionEngine<ImageData, ImagePrediction>(model, ignoreMissingColumns:false);\r\n\r\n            return predictionEngine;\r\n        }\r\n\r\n        protected IEnumerable<ImageData> PredictData(string imageLocation, string imageFolder, string labelsLocation, PredictionEngine<ImageData, ImagePrediction> model)\r\n        {\r\n            var labels = labelsLocation;\r\n            var p = model.Predict(new ImageData{\r\n                ImagePath = \"/home/snake/aspose/anton.perhunov/AlexNet/AlexNet/assets/Data/html.jpg\"\r\n            });\r\n            var im =  new ImageData{\r\n                ImagePath = imageFolder + \"/e5725c32f8be4da8b6a27375fc7669ae_html.jpg\"\r\n            };\r\n            yield return im;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nwhen inference any image you will get\r\nUnhandled Exception: System.ArgumentException: Length of memory (150528) must match product of dimensions (3).\r\nat System.Numerics.Tensors.DenseTensor1..ctor(Memory1 memory, ReadOnlySpan1 dimensions, Boolean reverseStride) at Microsoft.ML.Transforms.Onnx.OnnxUtils.CreateNamedOnnxValue[T](String name, ReadOnlySpan1 data, List1 shape) at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.NamedOnnxValueGetterVec1.GetNamedOnnxValue()\r\nat Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.UpdateCacheIfNeeded(Int64 position, INamedOnnxValueGetter[] srcNamedOnnxValueGetters, String[] activeOutputColNames, OutputCache outputCache)\r\nat Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.<>c__DisplayClass13_01.<MakeGetter>b__0(VBuffer1& dst)\r\nat Microsoft.ML.Data.TypedCursorable1.TypedRowBase.<>c__DisplayClass8_01.b__0(TRow row)\r\nat Microsoft.ML.Data.TypedCursorable1.TypedRowBase.FillValues(TRow row) at Microsoft.ML.PredictionEngineBase2.Predict(TSrc example)\r\n\r\nit seems that .net api does not support dynamic input sizes(-1 in dimension), it just treat them as 1, model supports inputs with (3, -1,-1), however onnx value size become (3,1,1).","Url":"https://github.com/dotnet/machinelearning/issues/3932","RelatedDescription":"Open issue \"cannot use fasterrcnn onnx model in c# ap\" (#3932)"},{"Id":"461821356","IsPullRequest":false,"CreatedAt":"2019-06-28T02:39:16","Actor":"magicdict","Number":"3931","RawContent":null,"Title":"An unhandled exception of type 'System.InvalidOperationException' occurred in Microsoft.ML.Data.dll: 'Incompatible features column type: 'Vector<Single, 12>' vs 'Vector<Single, 13>''","State":"closed","Body":"Training And Save isOK\r\n```csharp\r\npublic static void BinaryClassify(List<TrainRecord> training_dataset,\r\n                                      string labelColumnName = nameof(TrainRecord.rebuy_same_item))\r\n    {\r\n        var mlContext = new MLContext(seed: 2019);\r\n        var trainingDataView = mlContext.Data.LoadFromEnumerable<TrainRecord>(training_dataset);\r\n        //特征项目\r\n        var CreateFeature = mlContext.Transforms.Concatenate(\"Features\", nameof(TrainRecord.featur_rebuy_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_store_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_cate_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_price_mean),\r\n                                                                               nameof(TrainRecord.featur_price_sdv),\r\n                                                                               nameof(TrainRecord.featur_price_var),\r\n\r\n                                                                               nameof(TrainRecord.featur_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_cate_cnt),\r\n                                                                               nameof(TrainRecord.featur_store_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_cate_share),\r\n                                                                               nameof(TrainRecord.featur_cate_share_country),\r\n\r\n                                                                               \"feature_country_id\"\r\n                                                                               );\r\n        var dataProcessPipeline = mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"feature_country_id\", inputColumnName: nameof(TrainRecord.buyer_country_id)).Append(CreateFeature);\r\n\r\n        var DataTransformer = dataProcessPipeline.Fit(trainingDataView);\r\n        trainingDataView = DataTransformer.Transform(trainingDataView);\r\n\r\n        DataOperationsCatalog.TrainTestData dataSplit = mlContext.Data.TrainTestSplit(trainingDataView, testFraction: 0.2);\r\n        IDataView trainData = dataSplit.TrainSet;\r\n        IDataView testData = dataSplit.TestSet;\r\n        var LightGBMEstimator = mlContext.BinaryClassification.Trainers.LightGbm(numberOfIterations: 2000,\r\n                                                                                 learningRate: 0.1,\r\n                                                                                 labelColumnName: labelColumnName);\r\n        Console.WriteLine();\r\n        Console.WriteLine(\"开始训练 - \" + labelColumnName + \"（LightGBM二元分类） learningRate:\" + 0.1 + \" numberOfIterations:\" + 2000);\r\n        var LightGBMTransformer = LightGBMEstimator.Fit(trainData);\r\n        testData = LightGBMTransformer.Transform(testData);\r\n        var metrics = mlContext.BinaryClassification.Evaluate(testData, labelColumnName: labelColumnName);\r\n        ConsoleHelper.PrintBinaryClassificationMetrics(\"Database Example\", metrics);\r\n        mlContext.Model.Save(LightGBMTransformer, trainData.Schema, ModelPath + labelColumnName + \".zip\");\r\n        Console.WriteLine(\"模型保存路径:\" + ModelPath + labelColumnName + \".zip\");\r\n        Console.WriteLine(\"结束训练:Accuracy \" + metrics.Accuracy);\r\n        Console.WriteLine();\r\n    }\r\n```\r\n\r\nBut ,when I load the model, exception happened：\r\n\r\n```csharp\r\npublic static void Predict(List<TrainRecord> test_dataset, string labelColumnName = nameof(TrainRecord.rebuy_same_item))\r\n    {\r\n        var mlContext = new MLContext(seed: 2019);\r\n        DataViewSchema Schema;\r\n        var LightGBMTransformer = mlContext.Model.Load(ModelPath + labelColumnName + \".zip\", out Schema);\r\n        var trainingDataView = mlContext.Data.LoadFromEnumerable<TrainRecord>(test_dataset);\r\n\r\n        //特征项目\r\n        var CreateFeature = mlContext.Transforms.Concatenate(\"Features\", nameof(TrainRecord.featur_rebuy_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_store_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_cate_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_price_mean),\r\n                                                                               nameof(TrainRecord.featur_price_sdv),\r\n                                                                               nameof(TrainRecord.featur_price_var),\r\n\r\n                                                                               nameof(TrainRecord.featur_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_cate_cnt),\r\n                                                                               nameof(TrainRecord.featur_store_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_cate_share),\r\n                                                                               nameof(TrainRecord.featur_cate_share_country),\r\n\r\n                                                                               \"feature_country_id\"\r\n                                                                               );\r\n\r\n        //OneHotEncoding 字段如果直接转的话，在做整体CreateEnumerable的时候会发生错误！！\r\n        var dataProcessPipeline = mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"feature_country_id\", inputColumnName: nameof(TrainRecord.buyer_country_id)).Append(CreateFeature);\r\n        var DataTransformer = dataProcessPipeline.Fit(trainingDataView);\r\n        trainingDataView = DataTransformer.Transform(trainingDataView);\r\n\r\n        var predictions = LightGBMTransformer.Transform(trainingDataView);\r\n        IEnumerable<BuyerPrediction> predictedResults = mlContext.Data.CreateEnumerable<BuyerPrediction>(predictions, reuseRowObject: false);\r\n        foreach (var item in predictedResults)\r\n        {\r\n            Console.WriteLine(item.buyer_admin_id + \",\" + item.Prediction + \",\" + item.Probability);\r\n        }\r\n    }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3931","RelatedDescription":"Closed issue \"An unhandled exception of type 'System.InvalidOperationException' occurred in Microsoft.ML.Data.dll: 'Incompatible features column type: 'Vector<Single, 12>' vs 'Vector<Single, 13>''\" (#3931)"},{"Id":"461783729","IsPullRequest":true,"CreatedAt":"2019-06-27T22:58:04","Actor":"harishsk","Number":"3929","RawContent":null,"Title":"Updated the redistributed version of Tensorflow to 1.14","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3929","RelatedDescription":"Open PR \"Updated the redistributed version of Tensorflow to 1.14\" (#3929)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-03T05:30:38.7660565Z","RunDurationInMilliseconds":851}