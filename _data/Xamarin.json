{"Data":{"Blog":{"FeedItems":[{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio 2017","PublishedOn":"2018-04-11T18:30:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 previews are now available, featuring significant improvements to the XAML experience for mobile developers. The Xamarin.Forms XAML editing experience is now powered by...","Href":"https://blog.xamarin.com/new-xamarin-forms-xaml-intellisense-visual-studio-2017/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2017 Version 15.7 Preview 3","PublishedOn":"2018-04-09T21:32:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 Preview 3 was released today (April 9, 2018) and includes many improvements for mobile developers in Visual Studio. This release sports a brand new IntelliSense...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-7-preview-3/","RawContent":null},{"Title":"Right-To-Left Localization in Xamarin.Forms","PublishedOn":"2018-04-06T20:05:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re making apps that support right-to-left languages, we have great news for you: Xamarin.Forms 3.0 makes it easier than ever to flip layouts to match language direction! We&#8217;ll use...","Href":"https://blog.xamarin.com/right-to-left-localization-xamarin-forms/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 3 – Mono","PublishedOn":"2018-04-04T18:38:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the third post of four in the Debugging Xamarin Open Source Frameworks series, debugging Mono. Part 1 covers building Xamarin.Forms from the source and debugging that code, Part 2 covers...","Href":"https://blog.xamarin.com/debugging-xamarin-mono/","RawContent":null},{"Title":"Find Local Xamarin and .NET Developer Events This April","PublishedOn":"2018-04-02T18:42:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Spring into action this April by finding a Xamarin or .NET user group hosting Xamarin (and related technology) events near you! Get the latest news on exciting releases, tooling, and updates all month...","Href":"https://blog.xamarin.com/xamarin-developer-community-events-april/","RawContent":null},{"Title":"Update to Xamarin.Forms 3.0 Pre-Release Available Today!","PublishedOn":"2018-03-30T19:02:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that the latest update to the Xamarin.Forms 3.0 Pre-release is now available! Help us make this our best Xamarin.Forms release ever by updating today and giving it a...","Href":"https://blog.xamarin.com/update-to-xamarin-forms-3-0-pre-release-available-today/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 2 – Xamarin.iOS","PublishedOn":"2018-03-28T19:17:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the second part in a four-part series. In the first post, we covered building Xamarin.Forms from the source and then stepping into and debugging that code. In this post, we&#8217;ll explore...","Href":"https://blog.xamarin.com/debugging-xamarin-ios/","RawContent":null},{"Title":"New Xamarin.Android and Xamarin.iOS Project Templates Now Available","PublishedOn":"2018-03-26T18:31:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Whether you&#8217;re new or a seasoned Xamarin developer, project templates are an important part of the app building journey. They should be easy to find and set you up for success from the start. As...","Href":"https://blog.xamarin.com/new-xamarin-android-ios-templates/","RawContent":null},{"Title":"Performing Geospatial Calculations with Azure CosmosDB","PublishedOn":"2018-03-23T15:56:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure CosmosDB is a multi-model, globally distributed database, as well as a geospatial calculation powerhouse. It can calculate the distance between two points, determine whether a road runs through...","Href":"https://blog.xamarin.com/performing-geospatial-calculations-azure-cosmosdb/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7530901969","Type":"IssuesEvent","CreatedAt":"2018-04-14T21:53:42","Actor":"Sebastian1989101","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1559","RelatedDescription":"Opened issue \"Using color resource in AndroidManifest.xml leads into build error\" (#1559) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Creating `colors.xml` under `Resources\\values` with the used color resource. \r\n2. Use it within the `AndroidManifest.xml` as shown here: \r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.SoftwareNotion.MyApp\" android:installLocation=\"auto\" android:versionCode=\"18104\" android:versionName=\"1.6.0\">\r\n\t<uses-sdk android:minSdkVersion=\"19\" android:targetSdkVersion=\"27\" />\r\n\t<permission android:protectionLevel=\"signature\" android:name=\"${applicationId}.permission.C2D_MESSAGE\" />\r\n\t<uses-permission android:name=\"${applicationId}.permission.C2D_MESSAGE\" />\r\n\t<application android:label=\"My App\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:theme=\"@style/AppTheme\" android:appCategory=\"productivity\" android:largeHeap=\"true\">\r\n\t\t<meta-data android:name=\"android.max_aspect\" android:value=\"2.1\" />\r\n\t\t<meta-data android:name=\"com.google.firebase.messaging.default_notification_icon\" android:resource=\"@drawable/ic_stat_ic_notification\" />\r\n\t\t<meta-data android:name=\"com.google.firebase.messaging.default_notification_color\" android:resource=\"@color/colorPrimaryDark\" />\r\n\t\t<activity android:name=\"com.google.android.gms.ads.AdActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\" android:theme=\"@android:style/Theme.Translucent\" />\r\n\t</application>\r\n\t<uses-permission android:name=\"com.android.vending.BILLING\" />\r\n\t<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n\t<uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n</manifest>\r\n```\r\n\r\nThe line `<meta-data android:name=\"com.google.firebase.messaging.default_notification_color\" android:resource=\"@color/colorPrimaryDark\" />` is causing the problem. \r\n\r\nThis is how my `colors.xml` within `Resources\\values` looks like: \r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <!--Syles-->\r\n    <color name=\"colorPrimary\">#bd8846</color>\r\n    <color name=\"colorPrimaryDark\">#784627</color>\r\n    <color name=\"colorAccent\">#efbb79</color>\r\n    <color name=\"colorActive\">#dc8701</color>\r\n    <color name=\"colorInactive\">#cccccc</color>\r\n\r\n    <!-- White to Black -->\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"light_gray\">#EFF2F5</color>\r\n    <color name=\"med_gray\">#C7D2DC</color>\r\n    <color name=\"gray\">#5C7082</color>\r\n    <color name=\"dark_gray\">#FF2B343D</color>\r\n    <color name=\"black\">#0D131A</color>\r\n</resources>\r\n```\r\n\r\nAlso I can use the colors within my `styles.xml` without any problem. \r\n\r\n### Expected Behavior \r\nShould work.\r\n\r\n### Actual Behavior\r\nCausing the exception `No resource found that matches the given name (at 'resource' with value '@color/colorprimarydark').` when compiling. \r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.6.6\r\nVisualStudio.15.Release/15.6.6+27428.2037\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA851\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA851\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.4\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.4\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nDotfuscator Community Edition   5.32.1.6167-6ce295ebd\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitHub.VisualStudio   2.2.0.10\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.2.2    Build 109.0.20171006.122324\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.4\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.4\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.4\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOffice Developer Tools for Visual Studio 2017 ENU   15.0.27326.00\r\nMicrosoft Office Developer Tools for Visual Studio 2017 ENU\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResXManager   1.15.1006.0\r\nManage localization of all ResX-Based resources in one place. Shows all resources of a solution and let's you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Linux Development   1.0.8\r\nVisual C++ for Linux Development\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Unity   3.6.0.5\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWebJobs Tools v1.0.0   15.0.30923.0\r\nWebJobs Tools v1.0.0\r\n\r\nWorkflow Manager Tools 1.0   1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n\r\nXamarin   4.9.0.753 (f0f46392f)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.96 (a702a9ceb)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.9.1.24 (f62de47)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7528875705","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:54:10","Actor":"RowanHarris","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1558","RelatedDescription":"Opened issue \"Large Object Stack leaking memory\" (#1558) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run the simple project \r\n2. Watch the android logcat and look for the garbage collections which show the large object used size\r\n3. If the size is not increasing, increase the size of the \"Size\" variable in MainActivity.cs, the larger your device physical memory the larger the size required to cause the LOS to start growing with each allocation.\r\n\r\n[TestMemory.zip](https://github.com/xamarin/xamarin-android/files/1909654/TestMemory.zip)\r\n\r\n### Expected Behavior\r\nThe LOS size should not increase when memory is allocated then released.\r\n\r\n### Actual Behavior\r\nThe LOS can keep growing, reporting the amount of memory used in the LOS is larger than the actual physical memory of the device.\r\n\r\nHere is a more detailed description of the issue.\r\n\r\nWe have been having issues of the large object stack increasing in size and not releasing memory eventually causing out of memory exceptions. The less memory the device has the more likely it is to happen.\r\n\r\nThe large object stack also can report that its size is larger than the real physical RAM size. \r\n\r\nIn our real application it is very complex with thousands of memory objects of all sizes, the issue can happen with 5MB allocations when there are lots of other objects in the LOS.\r\n\r\nHowever to make this repeatable I have narrowed it down to a very simple application. I created a new project and added just a hand full of lines of code to get this to repeat. Because the app is very simple the allocations needed to be much larger than in our app but the end result is the same.\r\n\r\nwhile (true)\r\n{\r\n    activityManager.GetMemoryInfo(tmp);\r\n    Log.Info(\"GetProcessMemoryInfo\", \"Size:\" + size \r\n        + \" GetTotMem:\" + GC.GetTotalMemory(false) / 1000000f \r\n        + \" avail:\" + tmp.AvailMem / 1000000f + \" total:\" + tmp.TotalMem / 1000000f);\r\n\r\n    var bff = new byte[size * 1000000];\r\n\r\n    Thread.Sleep(2000);\r\n}\r\n\r\nI just add a thread that every 2 seconds does an allocation of memory, that is then ready for the garbage collector to dispose of it. The 2 seconds can be extended to 30 seconds but the result is the same the speed of the allocation seems to have no effect.\r\n\r\nI then check the memory statistics and print them to the android log.\r\n\r\nI print out the GC.GetTotalMemory(false) result as well as the total memory and free memory returned from activityManager.GetMemoryInfo\r\n\r\nEvery device has an allocation size that this issue starts to happen. The more physical memory the larger the allocations need to be to start the LOS growing. With a device with 1GB of RAM the allocation size tends to be around 100MB to cause the climb. On a device with 2GB It was around 300MB. On a device with 4GB, it was around 700MB. Basically I just start with a low value and keep increasing until the LOS starts to grow every allocation call. So far every device I have tested has shown the problem.\r\n\r\nEach call to allocated memory can increase the LOS size, even if I force a CG.Collect() the garbage before the allocation the LOS size keeps growing. However the free memory reported by   GetMemoryInfo does not reduce, so the free memory is not effected by this strange very large LOS. Just the LOS keeps thinking that it is growing. It can grow to be more than the physical memory size which is not possible.\r\n\r\nAfter some time the app can Crash with out of memory exception however it never tried to kill any of the running applications like usually happens when the system is running out of memory, that is because OS thinks there is still plenty of free memory.\r\n\r\nYes the memory allocations are very high and not normal, however this is just to make it repeatable, very similar behavior was observed for smaller allocations in a complex application. So for a simple application the allocations needed to be much larger.\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.6.6\r\nVisualStudio.15.Release/15.6.6+27428.2037\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA125\r\nMicrosoft Visual C++ 2017\r\n\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET and Web Tools 2017\r\n\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJetBrains ReSharper Ultimate 2017.3.5    Build 111.0.20180323.160610\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27428.2015\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Linux Development   1.0.8\r\nVisual C++ for Linux Development\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.753 (f0f46392f)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.96 (a702a9ceb)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.9.1.24 (f62de47)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n[log 1GB device, 120MB alloc.txt](https://github.com/xamarin/xamarin-android/files/1909689/log.1GB.device.120MB.alloc.txt)\r\n\r\nIn this log each allocation at the beginning increases the GetTotMem variable, but the free memory does not change.\r\n\r\n04-13 17:38:06.892: I/GetProcessMemoryInfo(9371): Size:120 GetTotMem:4.260584 avail:534.0979 total:925.1758\r\n04-13 17:38:08.902: I/GetProcessMemoryInfo(9371): Size:120 GetTotMem:124.3471 avail:517.4641 total:925.1758\r\n04-13 17:38:10.902: I/GetProcessMemoryInfo(9371): Size:120 GetTotMem:244.3472 avail:517.5911 total:925.1758\r\n04-13 17:38:12.972: I/GetProcessMemoryInfo(9371): Size:120 GetTotMem:364.4317 avail:517.4231 total:925.1758\r\n04-13 17:38:15.062: I/GetProcessMemoryInfo(9371): Size:120 GetTotMem:484.4317 avail:517.4231 total:925.1758\r\n\r\nAt the end of the log the last mem tag shows\r\nGetTotMem:1324.432 avail:517.0709 total:925.1758\r\nso mono thinks there is 1324.432 MB in use, but the total physical memory is 925.1758 and the available memory is still reported as 517 which is the same as before the first allocation.\r\n\r\nthe last GC event shows that mono thinks the LOST used size is 1054695K which is more than the physical memory size.\r\n04-13 17:41:20.282: D/Mono(9371): GC_MAJOR: (LOS overflow) time 13.59ms, stw 16.49ms los size: 1055716K in use: 1054695K\r\n\r\n<!--\r\n\r\n\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7527856411","Type":"IssuesEvent","CreatedAt":"2018-04-13T18:34:16","Actor":"kjeremy","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1557","RelatedDescription":"Opened issue \"Android solution is hanging on project load\" (#1557) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open a solution containing an Android Project in VS2017\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe project should load.\r\n\r\n### Actual Behavior\r\nIt locks up until the process is killed.  We seem to get stuck trying to read some intermediate files?\r\n\r\n> ntdll.dll!_NtWaitForSingleObject@12\u001e()\r\n> KernelBase.dll!WaitForSingleObjectEx()\r\n> mscorlib.ni.dll!78f4a84d()\r\n> [Frames below may be incorrect and/or missing, native debugger attempting to walk managed call stack]\r\n> mscorlib.ni.dll!78f4a838()\r\n> [Managed to Native Transition]\r\n> mscorlib.dll!System.IO.File.FillAttributeInfo(string path = \"C:\\\\projects\\\\EugsClient\\\\EugsClient\\\\EugsClient.Droid\\\\obj\\\\Debug\\\\lp\\\\74\\\\jl\\\\res\\\\layout\\\\preference_widget_seekbar.xml\", ref Microsoft.Win32.Win32Native.WIN32_FILE_ATTRIBUTE_DATA data = {Microsoft.Win32.Win32Native.WIN32_FILE_ATTRIBUTE_DATA}, bool tryagain, bool returnErrorOnNotFound = true) Line 1427\r\n> \tat f:\\dd\\ndp\\clr\\src\\BCL\\system\\io\\file.cs(1427)\r\n> mscorlib.dll!System.IO.File.InternalExists(string path) Line 461\r\n> \tat f:\\dd\\ndp\\clr\\src\\BCL\\system\\io\\file.cs(461)\r\n> mscorlib.dll!System.IO.File.InternalExistsHelper(string path, bool checkHost) Line 445\r\n> \tat f:\\dd\\ndp\\clr\\src\\BCL\\system\\io\\file.cs(445)\r\n> Xamarin.Android.Build.Tasks.dll!Xamarin.Android.Tasks.MonoAndroidHelper.SetWriteable(string source = \"C:\\\\projects\\\\EugsClient\\\\EugsClient\\\\EugsClient.Droid\\\\obj\\\\Debug\\\\lp\\\\74\\\\jl\\\\res\\\\layout\\\\preference_widget_seekbar.xml\")\r\n> Xamarin.Android.Build.Tasks.dll!Xamarin.Android.Tasks.MonoAndroidHelper.SetDirectoryWriteable(string directory)\r\n> Xamarin.Android.Build.Tasks.dll!Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute()\r\n> Microsoft.Build.dll!Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n> Microsoft.Build.dll!Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost = {Microsoft.Build.BackEnd.TaskExecutionHost}, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext = {Microsoft.Build.BackEnd.Logging.TaskLoggingContext}, Microsoft.Build.BackEnd.TaskHost taskHost = {Microsoft.Build.BackEnd.TaskHost}, Microsoft.Build.BackEnd.ItemBucket bucket = {Microsoft.Build.BackEnd.ItemBucket}, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask = ExecuteTaskAndGatherOutputs)\r\n> mscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<System.__Canon>.Start<Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26>(ref Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26 stateMachine) Line 471\r\n> \tat f:\\dd\\ndp\\clr\\src\\BCL\\system\\runtime\\compilerservices\\AsyncMethodBuilder.cs(471)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.6.6\r\nVisualStudio.15.Release/15.6.6+27428.2037\r\nMicrosoft .NET Framework\r\nVersion 4.7.02558\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA214\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10402.2\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET and Web Tools 2017\r\n\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.3.5    Build 111.0.20180323.160610\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.753 (f0f46392f)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.96 (a702a9ceb)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.9.1.24 (f62de47)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7527847496","Type":"IssuesEvent","CreatedAt":"2018-04-13T18:32:18","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1556","RelatedDescription":"Opened issue \"Re-installation attempts after upgrading result in app startup failure with fastdev enabled\" (#1556) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nSet up a side by side installation if on windows, or download multiple XA versions on macOS. Using the first major version of XA (say 15.6.x):\r\n1. `msbuild /t:Install *.csproj`\r\n2. Launch the application\r\n\r\nAt this point the app should launch successfully. Now switch XA versions and execute the same commands on the \"unclean\" project:\r\n\r\n3. `msbuild /t:Install *.csproj`\r\n4. Launch the application\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nMy app starts up without any issues after upgrading XA and re-installing an already built version of it.\r\n\r\n### Actual Behavior\r\nI do not believe this is a regression, however an unchanged debug attempt after upgrading XA versions results in a failure to find `libmonosgen-2.0.so`:\r\n\r\n```\r\n04-13 14:22:50.707  7225  7225 W monodroid: Creating public update directory: `/data/user/0/KitKat.KitKat/files/.__override__`\r\n04-13 14:22:50.707  7225  7225 W monodroid: Using override path: /data/user/0/KitKat.KitKat/files/.__override__\r\n04-13 14:22:50.707  7225  7225 W monodroid: Using override path: /storage/emulated/0/Android/data/KitKat.KitKat/files/.__override__\r\n04-13 14:22:50.707  7225  7225 W monodroid: Trying to load sgen from: /data/user/0/KitKat.KitKat/files/.__override__/libmonosgen-2.0.so\r\n04-13 14:22:50.707  7225  7225 W monodroid: Trying to load sgen from: /storage/emulated/0/Android/data/KitKat.KitKat/files/.__override__/libmonosgen-2.0.so\r\n04-13 14:22:50.707  7225  7225 W monodroid: Trying to load sgen from: /storage/emulated/0/../legacy/Android/data/KitKat.KitKat/files/.__override__/libmonosgen-2.0.so\r\n04-13 14:22:50.707  7225  7225 W monodroid: Trying to load sgen from: /data/app/KitKat.KitKat-px2plmRPMPy-nUK-DN870A==/lib/arm64/libmonosgen-2.0.so\r\n04-13 14:22:50.707  7225  7225 W monodroid: Trying to load sgen from: /data/user/0/KitKat.KitKat/files/.__override__/links/libmonosgen-2.0.so\r\n04-13 14:22:50.707  7225  7225 W monodroid: Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n04-13 14:22:50.707  7225  7225 F monodroid: cannot find libmonosgen-2.0.so in override_dir: /data/user/0/KitKat.KitKat/files/.__override__, app_libdir: /data/app/KitKat.KitKat-px2plmRPMPy-nUK-DN870A==/lib/arm64 nor in previously printed locations.\r\n04-13 14:22:50.707  7225  7225 F monodroid: Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n04-13 14:22:50.707  7225  7225 F monodroid: Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n04-13 14:22:50.720  1136  2492 I ActivityManager: Process KitKat.KitKat (pid 7225) has died: fore TOP\r\n```\r\n\r\n### Version Information\r\nPixel 2 v8.1\r\nhttps://gist.github.com/pjcollins/8a140c4ede58ba95de59406f0de0067a\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nInitial build:  https://gist.github.com/pjcollins/1b6ac8601251c500de3baf79d5fd275b\r\nUpgrade build: https://gist.github.com/pjcollins/c2117de60876a2bfde48b14dbbd6ac35\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7527780552","Type":"IssuesEvent","CreatedAt":"2018-04-13T18:18:20","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1555","RelatedDescription":"Opened issue \"Subsequent unchanged installation fails if app manually uninstalled between deployment attempts\" (#1555) at xamarin/xamarin-android","RelatedBody":"It's possible this is by design, but it can lead to some confusing behaviors when the user enters this state.\r\n\r\n### Steps to Reproduce\r\n\r\n1. `msbuild /t:Install *.csproj`\r\n2. Manually uninstall the app from device, or run `adb uninstall $(package)`\r\n3. `msbuild /t:Install *.csproj`\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThis is likely a bit of a corner case but it may make sense to make sure the application exists on device during an installation attempt, as if outputs are unchanged the application will not be installed even if it has been removed.\r\n\r\n### Actual Behavior\r\nSubsequent unchanged debug or deployment attempts fail from command line and the IDE if I manually uninstall the app in between attempts. \r\n### Version Information\r\nhttps://gist.github.com/pjcollins/cddc3ac8a53b58c2bbcdbb56bf8b951a\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nSecondary installation - https://gist.github.com/pjcollins/ecc46729d9c5ef5ee56410420623d1cd\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7530872628","Type":"IssuesEvent","CreatedAt":"2018-04-14T21:32:00","Actor":"tekto","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2465","RelatedDescription":"Opened issue \"App crashes when clicking \"undo\" on iPad Shortcut Bar\" (#2465) at xamarin/Xamarin.Forms","RelatedBody":"\r\nApp crashes when clicking \"undo\" on iPad Shortcut Bar\r\n\r\niPads have a shortcut bar which opens when focussing a Picker. By tapping \"paste\" (Yes, this is enabled, but without any effect) and then tap on \"undo\" the UIApplication.Main throws an exception and the app crashes:\r\n\r\nObjective-C exception thrown.  Name: NSRangeException Reason: *** -[NSBigMutableString substringWithRange:]: Range {1, 2} out of bounds; string length 1\r\nNative stack trace:\r\n\t0   CoreFoundation                      0x00000001152f71e6 __exceptionPreprocess + 294\r\n\t1   libobjc.A.dylib                     0x0000000116015031 objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x000000011536c975 +[NSException raise:format:] + 197\r\n\t3   Foundation                          0x000000010ae98e72 -[NSString substringWithRange:] + 131\r\n\t4   UIKit                               0x0000000108768b1e -[NSTextStorage(UIKitUndoExtensions) _undoRedoAttributedSubstringFromRange:] + 136\r\n\t5   UIKit                               0x0000000108768f7d -[_UITextUndoOperationReplace undoRedo] + 319\r\n\t6   Foundation                          0x000000010af46695 -[_NSUndoStack popAndInvoke] + 280\r\n\t7   Foundation                          0x000000010af46424 -[NSUndoManager undoNestedGroup] + 433\r\n\t8   UIKit                               0x0000000108753e40 -[UIKeyboardAssistantBar executeAction:] + 338\r\n\t9   UIKit                               0x000000010791b448 -[UIApplication sendAction:to:from:forEvent:] + 83\r\n\t10  UIKit                               0x00000001083200d9 __45-[_UIButtonBarTargetAction _invoke:forEvent:]_block_invoke + 154\r\n\t11  UIKit                               0x0000000107fdbf01 ___UIGroupedBarCreateButtonBar_block_invoke + 138\r\n\t12  UIKit                               0x0000000108320008 -[_UIButtonBarTargetAction _invoke:forEvent:] + 144\r\n\t13  UIKit                               0x000000010791b448 -[UIApplication sendAction:to:from:forEvent:] + 83\r\n\t14  UIKit                               0x0000000107a96804 -[UIControl sendAction:to:forEvent:] + 67\r\n\t15  UIKit                               0x0000000107a96b21 -[UIControl _sendActionsForEvents:withEvent:] + 450\r\n\t16  UIKit                               0x0000000107a95a69 -[UIControl touchesEnded:withEvent:] + 580\r\n\t17  UIKit                               0x000000010799011f -[UIWindow _sendTouchesForEvent:] + 2729\r\n\t18  UIKit                               0x0000000107991821 -[UIWindow sendEvent:] + 4086\r\n\t19  UIKit                               0x0000000107935370 -[UIApplication sendEvent:] + 352\r\n\t20  UIKit                               0x000000010827657f __dispatchPreprocessedEventFromEventQueue + 2796\r\n\t21  UIKit                               0x0000000108279194 __handleEventQueueInternal + 5949\r\n\t22  CoreFoundation                      0x0000000115299bb1 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n\t23  CoreFoundation                      0x000000011527e4af __CFRunLoopDoSources0 + 271\r\n\t24  CoreFoundation                      0x000000011527da6f __CFRunLoopRun + 1263\r\n\t25  CoreFoundation                      0x000000011527d30b CFRunLoopRunSpecific + 635\r\n\t26  GraphicsServices                    0x0000000118a35a73 GSEventRunModal + 62\r\n\t27  UIKit                               0x000000010791a0b7 UIApplicationMain + 159\r\n\t28  ???                                 0x0000000134710ca8 0x0 + 5174791336\r\n\t29  ???                                 0x00000001347108e3 0x0 + 5174790371\r\n\r\n### Steps to Reproduce\r\n\r\nSet the MainPage tho a simple Picker:\r\n\r\npublic class Rollator : ContentPage\r\n    {\r\n\t\tpublic Rollator()\r\n        {\r\n            Content = new StackLayout\r\n            {\r\n                Orientation = StackOrientation.Vertical,\r\n                Children = {\r\n                    new Label { Text = \"Hello ContentPage\" },\r\n                    new Picker\r\n                    {\r\n                        Items = \r\n                        {\r\n                            \"A\",\r\n                            \"B\"\r\n                        }\r\n                    },\r\n                    new Entry { Text = \"Here is everything fine.\" }\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n1. Copy anything in your clipboard\r\n2. Open the Picker\r\n3. Tap on Paste\r\n4. Tap on Undo\r\n\r\n### Expected Behavior\r\n\r\nNone of this\r\n\r\n### Actual Behavior\r\n\r\nCrash\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.280555\r\n- Last known good version: n/a\r\n- IDE: VS for Mac\r\n- Platform Target Frameworks: \r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n- Nuget Packages:\r\n- Affected Devices: iPads\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/904896/38772627-f049612c-403b-11e8-918f-6d38efd685b1.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n"},{"Id":"7530212326","Type":"IssuesEvent","CreatedAt":"2018-04-14T14:33:00","Actor":"paradisehuman","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1464","RelatedDescription":"Closed issue \"Throwing \"NullReferenceException\" in pop NavigationPage at MasterDetailPage in iOS\" (#1464) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI'm using push notification. I track which notification pressed and navigate to the correct page.\r\nHere is my code : \r\n ```csharp\r\n public MainPageMasterDetail(string type,string data)\r\n        {\r\n            var dependencyInjection = App.DependencyInjection();\r\n            _masterPage = new MasterPage { BindingContext = new MasterPageViewModel() };\r\n            Master = _masterPage;\r\n            var mainNavigation = new NavigationPage(new MainPage\r\n            {\r\n                BindingContext = dependencyInjection.Resolve<MainPageViewModel>(),\r\n                Title = Taxi.Resources.Common.ResourceManager.GetString(\"BetaVersion\",\r\n                    new CultureInfo(Application.Current.Properties[\"Culture\"].ToString()))\r\n            });\r\n                switch (type)\r\n                {\r\n                    case nameof(NotificationTypes.SubmitRequestByWorker):\r\n                    {\r\n                        mainNavigation.PushAsync(new TripArchivePage\r\n                        {\r\n                            BindingContext = new TripArchivePageViewModel()\r\n                        });\r\n                        var model = App.DependencyInjection().Resolve<RequestDetailPageViewModel>();\r\n                        model.RequestId = data;\r\n                        mainNavigation.PushAsync(new RequestDetailPage { BindingContext = model });\r\n                        break;\r\n                        }\r\n                    case nameof(NotificationTypes.SendChat):\r\n                    {\r\n                        mainNavigation.PushAsync(new TripArchivePage\r\n                            {\r\n                                BindingContext = new TripArchivePageViewModel()\r\n                            });\r\n                            var requestDetailPageModel = App.DependencyInjection().Resolve<RequestDetailPageViewModel>();\r\n                            requestDetailPageModel.RequestId = data;\r\n                            mainNavigation.PushAsync(new RequestDetailPage { BindingContext = requestDetailPageModel });\r\n                            var chatModel = App.DependencyInjection().Resolve<ChatPageViewModel>();\r\n                            chatModel.RequestId = data;\r\n                            mainNavigation.PushAsync(new ChatPage\r\n                            {\r\n                                BindingContext = chatModel\r\n                            });\r\n                        break;\r\n                    }\r\n                }\r\n            if (Device.RuntimePlatform == Device.Android)\r\n                mainNavigation.BarBackgroundColor = Color.FromHex(\"9649cb\");\r\n                Detail = mainNavigation;\r\n                if (Device.RuntimePlatform == Device.iOS)\r\n                Master.Icon = \"Hamburger.png\";\r\n            _masterPage.FirstListView.ItemSelected += OnItemSelected;\r\n\r\n            _masterPage.SecondListView.ItemSelected += OnItemSelected;\r\n        }\r\n```\r\nEverything is working fine on Android but in iOS for example when I going to chatPage and going back by navigation back button , first pop ,every thing is working as expected , second pop,every thing is working as expected until it reaches to root page and when trying to pop the root page , I got this error in iOS : \r\n\r\n> System.NullReferenceException: Object reference not set to an instance of an object\r\n\r\nHere is my StackTrace:\r\n\r\n> 1-MainPage+<>c__DisplayClass36_0+<<-ctor>b__2>d.MoveNext () C:\\Visual Studio Projects\\Eela\\Eela.Taxi\\Eela.Taxi\\Pages\\MainPage.cs:468\r\n> \r\n> 2-ExceptionDispatchInfo.Throw () /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152\r\n> \r\n> 3-AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1018\r\n> \r\n> 4-UIKitSynchronizationContext+<Post>c__AnonStorey0.<>m__0 () /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIKitSynchronizationContext.cs:24\r\n> \r\n> 5-NSAsyncActionDispatcher.Apply () /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/Foundation/NSAction.cs:163\r\n> \r\n> 6-(wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n> \r\n> 7-UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:79\r\n> \r\n> 8-UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:63\r\n> \r\n> 9-Application.Main (System.String[] args) C:\\Visual Studio Projects\\Eela\\Eela.Taxi\\Eela.Taxi.iOS\\Main.cs:17\r\n\r\n \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Navigation page in master detail page and initial the Detail property in constructor with it\r\n2. Push a page in navigation at master detail page constructor.\r\n3. Pop the pages by back button until it reaches to root page.\r\n\r\n### Expected Behavior\r\nPop the pages to root page\r\n### Actual Behavior\r\nWhen pop the pages until reaches to root, it throws this exception : \r\n\r\n> System.NullReferenceException: Object reference not set to an instance of an object\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.121934\r\n- Last known good version:-\r\n- IDE: Visual Studio 2017 15.5.2\r\n- Platform Target Frameworks: .netstandatd 2.0\r\n  - iOS:  11.2\r\n  - Android: 7.1 \r\n  - UWP:  -\r\n- Android Support Library Version: 26.1.0.1\r\n- Nuget Packages:-\r\n- Affected Devices:\r\niPhone 5s , Android emulator\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7530758640","Type":"PullRequestEvent","CreatedAt":"2018-04-14T20:13:16","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3927","RelatedDescription":"Merged pull request \"[msbuild] Use a response file in 'MmpTaskBase'\" (#3927) at xamarin/xamarin-macios","RelatedBody":"- Fixes #3698: [msbuild] Use response file for mmp's msbuild task\n(https://github.com/xamarin/xamarin-macios/issues/3698)\n- Update Common/Driver to log arguments for all verbosity levels except quiet.\n  This makes it so mmp's /verbose when used in a response file prints the provided arguments.\n- No test yet because of lack of Xamarin.Mac msbuild task test infrastructure.\n  See: https://github.com/xamarin/xamarin-macios/issues/3926"},{"Id":"7530758633","Type":"IssuesEvent","CreatedAt":"2018-04-14T20:13:16","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3698","RelatedDescription":"Closed issue \"[msbuild] Use response file for mmp's msbuild task\" (#3698) at xamarin/xamarin-macios","RelatedBody":"Similar to https://bugzilla.xamarin.com/show_bug.cgi?id=56501 we should use response files for mmp. As of https://github.com/xamarin/xamarin-macios/commit/e8d16c925bb74636366b00b5c6603514c94af763 mtouch and mmp now support response files.\r\n\r\nThe mtouch msbuild task is now writing all the arguments in a response file and is using it. https://github.com/xamarin/xamarin-macios/pull/3635"},{"Id":"7530443197","Type":"IssuesEvent","CreatedAt":"2018-04-14T16:51:48","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3868","RelatedDescription":"Closed issue \"StackOverflow in NSApplication.NextEvent\" (#3868) at xamarin/xamarin-macios","RelatedBody":"See code https://github.com/xamarin/xamarin-macios/blob/ce05cbf9bf62f88d1e92b2568ebaea3dca3ff191/src/appkit.cs#L531-L532\r\n\r\nThe wrapped code calls itself, resulting in a stack overflow.\r\n\r\nThis regressed here: ce05cbf9bf62f88d1e92b2568ebaea3dca3ff191 (CC @dalexsoto)\r\n\r\nRef: https://xamarinhq.slack.com/archives/C8RGY7DMX/p1522846009000324\r\n"},{"Id":"7529701699","Type":"IssuesEvent","CreatedAt":"2018-04-14T08:25:24","Actor":"marek-safar","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3929","RelatedDescription":"Closed issue \"Resources are always considered as 'newer than output'\" (#3929) at xamarin/xamarin-macios","RelatedBody":"The step for me is to build any ios project with resources. If you then build it a second time it complains that the input file is newer than the output file for all resources, so we copy them all instead of doing a no-op.\r\n\r\nI uploaded a 200mb log file here: https://xamarinhq.slack.com/files/U03CFBR1A/FA4T824L8/output\r\n\r\nMy repro project was the ios designer's `MTDesigner.sln`. In this project the issue shows up everywhewre, but you can look for `FillTexture.png` as one example when searching the logs"},{"Id":"7528895428","Type":"PullRequestEvent","CreatedAt":"2018-04-13T23:01:35","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3938","RelatedDescription":"Merged pull request \"Bump mono to get fix for xamarin/maccore#673.\" (#3938) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@c6a8c0e38af [System.Net.Http] Use '*' as the host instead of '+' in the tests. Fixes xamarin/maccore#673.\n* mono/mono@c2e1021ed00 [2017-12][TermInfo] support new file format terminfo2 introduced with ncurses6.1 (#8203)\n* mono/mono@29bbcfb0222 [sdks] Add ANDROID_BUILD_TOOLS_DIR to differentiate it from ANDROID_BUILD_TOOLS_VERSION (#8193)\n* mono/mono@2cc6bede971 [sdks] Fix typo (#8189)\n* mono/mono@16cad3ccd47 [sdks] Add support for building llvm unless the USE_PREBUILT_LLVM Make.config var is set. (#8017) (#8151)\n* mono/mono@8605da46f5c [System] Don't use http://www.mono-project.com for test (#8147)\n* mono/mono@d194b8fd4df [2017-12] [Facades] Add System.Drawing.Common on mobile only (#8130)\n* mono/mono@a7496807837 [sdks] Fix arguments passed to llvm on Linux (#8108)\n\nDiff: https://github.com/mono/mono/compare/b4e428d7c410dba6973d84ec13532debb5535d78...c6a8c0e38afab1ef175598d3533c237e4fcca847"},{"Id":"7528313436","Type":"PullRequestEvent","CreatedAt":"2018-04-13T20:17:20","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3857","RelatedDescription":"Merged pull request \"Avoid calling clean-llvm during make reset.Fixes #3841.\" (#3857) at xamarin/xamarin-macios","RelatedBody":"Avoid calling clean-llvm during make reset.\r\nFixes #3841."},{"Id":"7528313414","Type":"IssuesEvent","CreatedAt":"2018-04-13T20:17:19","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3841","RelatedDescription":"Closed issue \"make reset-versions fails on fresh clone\" (#3841) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a fresh clone of xamarin-macios\r\n2. Run `make reset-versions`\r\n3. Wait for make to finish cloning LLVM, then watch it fail.\r\n\r\n### Expected Behavior\r\n\r\n`make` should keep cloning the other dependencies.\r\n\r\n### Actual Behavior\r\n\r\n`make` fails (see error log below). I think this is due to a dependency error between the LLVM and Mono submodules.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 2f7490c4-93db-429d-9511-4b9317c93fbc\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nEditorConfig 1.2\r\nEto.Forms Support Addin 2.4.0.0\r\nAddinMaker 1.4.2\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Build Logs\r\n\r\n```\r\n*** git submodule update --init --recursive --force -- ./external/llvm\r\ncd /Volumes/Sources/xamarin-macios && git submodule update --init --recursive --force -- ./external/llvm\r\nSubmodule path 'external/llvm': checked out 'bdb3a116dbf4a77ef5f6f70d7f845bdaca2b24ca'\r\necho \"DISABLE_ANDROID=1\" > ../external/mono/sdks/Make.config\r\n/bin/sh: ../external/mono/sdks/Make.config: No such file or directory\r\nmake[1]: *** [../external/mono/sdks/Make.config] Error 1\r\nmake: *** [reset-llvm] Error 2\r\n```"},{"Id":"7528306077","Type":"PullRequestEvent","CreatedAt":"2018-04-13T20:15:37","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3940","RelatedDescription":"Merged pull request \"[xcode9.4][msbuild] Catch ArgumentException if IBToolTask fails to load plist o…\" (#3940) at xamarin/xamarin-macios","RelatedBody":"…utput\r\n\r\nFixes the stack trace spew in https://devdiv.visualstudio.com/DevDiv/_workitems/edit/595179"},{"Id":"7527805073","Type":"PullRequestEvent","CreatedAt":"2018-04-13T18:23:19","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3940","RelatedDescription":"Opened pull request \"[xcode9.4][msbuild] Catch ArgumentException if IBToolTask fails to load plist o…\" (#3940) at xamarin/xamarin-macios","RelatedBody":"…utput\r\n\r\nFixes the stack trace spew in https://devdiv.visualstudio.com/DevDiv/_workitems/edit/595179"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"985296899346456576","CreatedAt":"2018-04-14T23:21:01+00:00","UserScreenname":"xamarinhq","Text":"Try out the #Xamarin Android Device Manager Preview, a tool for creating, editing, and controlling Android virtual… https://t.co/POMrs2vlnD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null},{"Id":"984843662428459008","CreatedAt":"2018-04-13T17:20:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/1JLVLvKR0M","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":21,"RawContent":null},{"Id":"984821292938465285","CreatedAt":"2018-04-13T15:51:07+00:00","UserScreenname":"xamarinhq","Text":"Start shipping better apps, faster with this curated list of #VSAppCenter resources: https://t.co/jU0cnONnM8 https://t.co/KTX4gcGjqZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"984463408073408513","CreatedAt":"2018-04-12T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/tX03cw88GD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":14,"RawContent":null},{"Id":"984140279061020672","CreatedAt":"2018-04-11T18:45:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with new #XamarinForms #XAML IntelliSense functionality in #VisualStudio 2017: https://t.co/EPKoitU5bA https://t.co/JnlquxCZN9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":37,"RawContent":null},{"Id":"983738884319334400","CreatedAt":"2018-04-10T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build Xamarin.iOS from the source code in the second part of our four-part series on debugging… https://t.co/uVkITyoInQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":11,"RawContent":null},{"Id":"983374729166934016","CreatedAt":"2018-04-09T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/O4ILyulYAJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":26,"RawContent":null},{"Id":"983104477468266496","CreatedAt":"2018-04-08T22:09:07+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your Xamarin apps with Azure CosmosDB: https://t.co/acrN8gdJdS https://t.co/7dgtdHbqn9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":14,"RawContent":null},{"Id":"982728475831390208","CreatedAt":"2018-04-07T21:15:01+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/FGw0WVLZMU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":20,"RawContent":null},{"Id":"982351517544996870","CreatedAt":"2018-04-06T20:17:07+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/0hyFj6caS2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":27,"RawContent":null},{"Id":"982287570737315842","CreatedAt":"2018-04-06T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/jQc7aGUfzQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"981917376756232193","CreatedAt":"2018-04-05T15:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"981605676123344896","CreatedAt":"2018-04-04T18:53:25+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/eB7EyBcngh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":14,"RawContent":null},{"Id":"981383112331493377","CreatedAt":"2018-04-04T04:09:01+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/xM3dAE2jRZ https://t.co/pKafHtrM4C","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":27,"RawContent":null},{"Id":"981202163941761024","CreatedAt":"2018-04-03T16:10:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to merge multiple resource dictionaries in the most recent stable release of #XamarinForms for even great… https://t.co/Kg5Dh5x1pO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":22,"RawContent":null},{"Id":"980881805221007371","CreatedAt":"2018-04-02T18:57:00+00:00","UserScreenname":"xamarinhq","Text":"Jump into #Xamarin with an event near you this April: https://t.co/Tg8HHIbUDA https://t.co/OJW7RynVmV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"980838018474020864","CreatedAt":"2018-04-02T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/gY8s2v6cYg","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":18,"RawContent":null},{"Id":"980547128639541254","CreatedAt":"2018-04-01T20:47:07+00:00","UserScreenname":"xamarinhq","Text":"Check out the new, feature-packed release of #UrhoSharp 1.8: https://t.co/ZxSIstdhNE https://t.co/y4p0bmVENZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":19,"RawContent":null}]}},"RunOn":"2018-04-15T05:30:41.8816435Z","RunDurationInMilliseconds":4059}