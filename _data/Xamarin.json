{"Data":{"Blog":{"FeedItems":[{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\n\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null},{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T19:56:18+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post What&#8217;s New for Xamarin Developers in Visual Studio 2019 appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-visual-studio-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in April","PublishedOn":"2019-04-01T19:05:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Xamarin and .NET Developer Events in April appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-and-net-developer-events-in-april/","RawContent":null},{"Title":"GlideX For Fast Images on Android","PublishedOn":"2019-03-28T16:01:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post GlideX For Fast Images on Android appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/glidex-fast-images-android/","RawContent":null},{"Title":"Introducing the Xamarin.iOS Interpreter","PublishedOn":"2019-03-26T16:41:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The post Introducing the Xamarin.iOS Interpreter appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/introducing-xamarin-ios-interpreter/","RawContent":null},{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T20:00:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://devblogs.microsoft.com/xamarin/join-the-xamarin-visual-challenge/","RawContent":null},{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T19:59:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Get Your Apps Ready for Apple&#8217;s New Watch Processor Architecture appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/apple-new-processor-architecture/","RawContent":null},{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-essentials-detect-shake-browser-customization/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9427637355","Type":"PullRequestEvent","CreatedAt":"2019-04-11T21:46:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2968","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] De-pluralize @(AndroidAotProfile)\" (#2968) at xamarin/xamarin-android","RelatedBody":"MSBuild naming convention is for item groups to be *singular*, not\r\nplural, names.  For example, `@(Compile)`, `@(Reference)`, etc.\r\n\r\nRename `@(AndroidAotProfiles)` to `@(AndroidAotProfile)` to be\r\nconsistent with this convention."},{"Id":"9427556649","Type":"PullRequestEvent","CreatedAt":"2019-04-11T21:31:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2961","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Task] Add AOT profile for non-XForms apps\" (#2961) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2885\r\n\r\nRenamed current AOT profile to startup-xf.aotprofile and added\r\nstartup.aotprofile recorded with XA template app.\r\n\r\nThe profiles are conditionaly chosen based on the\r\n`Xamarin.Forms.Platform.Android` assembly presence in the\r\n`ResolvedAssemblies` item group.\r\n\r\nThe profiles comparison:\r\n\r\nXamarin.Android\r\n\r\n\tmono aotprofile-tool.exe -sd src/Xamarin.Android.Build.Tasks/startup.aotprofile\r\n\tModules:\r\n\t\t769F6DA9-D358-41F6-AAE0-15185488EDE0 mscorlib\r\n\t\tDB6641F2-ED44-48BA-BE32-AB097AF0DF88 Mono.Android\r\n\t\t5F0D8413-F33D-426F-B8D4-D918BB296011 System\r\n\t\tCBAC57F8-48B6-461E-B09A-3476B026C874 Java.Interop\r\n\t\tC8ACDD43-D1E3-4AA6-B954-E18E8C39972F System.Core\r\n\t\tEAB815AF-3864-4431-9EAD-D926BD93AE68 xatemplateaot\r\n\tSummary:\r\n\t\tModules:          6\r\n\t\tTypes:          210\r\n\t\tMethods:        873\r\n\r\nXamarin.Forms\r\n\r\n\tmono aotprofile-tool.exe -sd src/Xamarin.Android.Build.Tasks/startup-xf.aotprofile\r\n\tModules:\r\n\t\t41C38B0A-2032-45CE-8638-0299CED65330 mscorlib\r\n\t\t0326DF03-2158-4F7A-9A2B-B7A9419F021D Mono.Android\r\n\t\t8FB63BB4-1195-4173-A9ED-0EC341B07C32 System\r\n\t\t74C06E06-C1C7-4A4C-B64E-EAC7DBB08BBC Java.Interop\r\n\t\t11E2319F-6A26-461C-9C46-C972248BEE4B System.Core\r\n\t\t7999CC4B-D566-4ECA-8A72-469344172CA3 Xamarin.Forms.Platform.Android\r\n\t\tC5089213-328B-451D-BA87-D6585C120780 Xamarin.Forms.Performance.Integration.Droid\r\n\t\tD754F8AE-503C-41C8-B16F-647FC662507A Xamarin.Android.Support.v7.AppCompat\r\n\t\t929ECB6D-1171-4C66-8470-DD32AC608969 Xamarin.Android.Support.Fragment\r\n\t\tF841E23B-59A8-4AE2-9A84-D2FC1D891B4A Xamarin.Forms.Core\r\n\t\t945CCBF8-C2DB-468B-B3BD-D7ACA37B69AD Xamarin.Forms.Performance.Integration\r\n\t\tAF20FA19-F07E-4BD4-B5ED-104706EA660E Xamarin.Forms.Xaml\r\n\t\t629C84F8-0988-42EF-8BC5-872173A0A71F FormsViewGroup\r\n\t\t60398815-8E62-487E-A553-781F56A0849D Xamarin.Android.Support.Design\r\n\t\tF0C550D7-665A-40B5-A307-8E9B49976D87 Xamarin.Android.Support.Core.UI\r\n\t\t23A34485-DE75-440E-BA9D-E235F664E990 Xamarin.Android.Support.Compat\r\n\tSummary:\r\n\t\tModules:         16\r\n\t\tTypes:          907\r\n\t\tMethods:      4,230"},{"Id":"9426813611","Type":"PullRequestEvent","CreatedAt":"2019-04-11T19:31:38","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2954","RelatedDescription":"Merged pull request \"[tests] More network resilience for tests\" (#2954) at xamarin/xamarin-android","RelatedBody":"Context: 608d950a703ddb527258565c2a0705aa37f71789\r\nContext: 34dfc6d71d590183f0077b69bbd61964f8879b97\r\n\r\nSslTests notoriously fail for reasons not related to the subject of the test,\r\nthus creating false negatives when our bots flag the related builds/PRs as red\r\nwhile the failure can/should be ignored.\r\n\r\nWrap the tests in code which ignores the most common failures we can safely\r\nignore."},{"Id":"9426561654","Type":"PullRequestEvent","CreatedAt":"2019-04-11T18:51:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2962","RelatedDescription":"Closed pull request \"[build] Make MinGW build on mac generate less noise\" (#2962) at xamarin/xamarin-android","RelatedBody":"To test https://github.com/xamarin/xamarin-android/pull/2959"},{"Id":"9426560292","Type":"PullRequestEvent","CreatedAt":"2019-04-11T18:51:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2964","RelatedDescription":"Closed pull request \"[build d16-1] Make MinGW build on mac generate less noise\" (#2964) at xamarin/xamarin-android","RelatedBody":"For some reason the Windows cross-build on macOS using MinGW leaves behind a lot\r\nof temporary LTO (Link-Time Optimization) files, the result of passing the\r\n`-flto` flag to the compilers. The temporary files (`*.ltrans*`), around 280 of\r\nthem, are then included in our vsix packages, increasing their size while being\r\ncompletely useless for the end user.\r\n\r\nThis commit fixes the issue by turning off LTO for MinGW targets. The\r\noptimization is not really useful there and such fix is faster than tracking why\r\nMinGW on macOS (installed from Homebrew) is behaving the way it is."},{"Id":"9426555188","Type":"PullRequestEvent","CreatedAt":"2019-04-11T18:50:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2959","RelatedDescription":"Merged pull request \"[build] Make MinGW build on mac generate less noise\" (#2959) at xamarin/xamarin-android","RelatedBody":"For some reason the Windows cross-build on macOS using MinGW leaves behind a lot\r\nof temporary LTO (Link-Time Optimization) files, the result of passing the\r\n`-flto` flag to the compilers. The temporary files (`*.ltrans*`), around 280 of\r\nthem, are then included in our vsix packages, increasing their size while being\r\ncompletely useless for the end user.\r\n\r\nThis commit fixes the issue by turning off LTO for MinGW targets. The\r\noptimization is not really useful there and such fix is faster than tracking why\r\nMinGW on macOS (installed from Homebrew) is behaving the way it is."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9428673186","Type":"PullRequestEvent","CreatedAt":"2019-04-12T02:17:21","Actor":"paymicro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5896","RelatedDescription":"Opened pull request \"[Android, shell] fixes visibility of tabs after their changes\" (#5896) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4758\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n- run Shell control gallery\r\n- select page with tabs. ex: `GamesPage`\r\n- click `Hide tabs` > `Add tab` > `Remove tab`\r\n- tabs should be hidden\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9428553709","Type":"IssuesEvent","CreatedAt":"2019-04-12T01:43:56","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5849","RelatedDescription":"Closed issue \"[Feedback] Design Time Data set in a composite control does not propogate through to pages using the control\" (#5849) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>Steps to recreate\n\nCreate a new ContentView\nAdd Controls with Design Time Data\nAdd new control to a view / page\nSee that the data is not visible</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/520798/design-time-data-set-in-a-composite-control-does-n.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/842115\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[842737](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/842737)"},{"Id":"9428492127","Type":"IssuesEvent","CreatedAt":"2019-04-12T01:26:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5696","RelatedDescription":"Closed issue \"[shell, ios] ShellTabBarBackgroundColor not styling as expected\" (#5696) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI dont get the background of the tab changed like in android\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nwhen using this code :\r\n![andrrr](https://user-images.githubusercontent.com/15122204/55066509-3d88fd00-507e-11e9-8894-f5a9a6bb1c39.JPG)\r\n\r\nit 's supposed to change the background of the bottom bar to bleuviolet .\r\n\r\n### Actual Behavior\r\n it works in android  the bottom bar change color but in ios it doesn't.\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->12.1\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 -->8.1,7.1 \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:Ios devices\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\nhere is the actual result in android:\r\n![shellandroid](https://user-images.githubusercontent.com/15122204/55009690-4973b100-4fe3-11e9-9114-05f640a72b9c.JPG)\r\n\r\nbut here is the result in ios:\r\n![shellIos](https://user-images.githubusercontent.com/15122204/55009740-5c868100-4fe3-11e9-8944-ba97c4b6eba1.JPG)\r\n\r\n\r\n### Reproduction Link\r\nthis is a test project that i did for the shell\r\nhttps://github.com/SoniaCH/ShelltestApp/tree/master/ShelltestApp/ShelltestApp\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9428481251","Type":"IssuesEvent","CreatedAt":"2019-04-12T01:23:25","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5862","RelatedDescription":"Closed issue \"Xamarin Forms Title View not centered on non modal screens (With a back button)\" (#5862) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen creating a title view, centered label is off centered on non modal screens, with a back button.\r\n### Steps to Reproduce\r\n\r\nCreate a custom TitleView\r\n\r\n``` xml\r\n    <ContentView.Content>\r\n        <Grid HorizontalOptions=\"FillAndExpand\" Margin=\"0\">\r\n\r\n            <Grid.ColumnDefinitions>\r\n                <ColumnDefinition Width=\"*\" />\r\n                <ColumnDefinition Width=\"40\" />\r\n            </Grid.ColumnDefinitions>\r\n            <Label Text=\"{Binding Title}\" Grid.Row=\"0\" Grid.ColumnSpan=\"2\" Style=\"{StaticResource HeaderTitle}\" >\r\n                <Label.HorizontalOptions>\r\n                    <OnPlatform x:TypeArguments=\"LayoutOptions\">\r\n                        <On Platform=\"iOS\" Value=\"Center\" />\r\n                        <On Platform=\"Android\" Value=\"Start\" />\r\n                    </OnPlatform>\r\n                </Label.HorizontalOptions>\r\n            </Label>\r\n            <forms:SvgCachedImage x:Name=\"MainImage\" HeightRequest=\"30\" Grid.Row=\"0\" Grid.Column=\"1\"\r\n                                  Source=\"{Binding CurrentConnectionStatus, Converter={StaticResource BluetoothStatusConverter}}\"\r\n                                  HorizontalOptions=\"End\" />\r\n        </Grid>\r\n    </ContentView.Content>\r\n\r\n```\r\n\r\nThen set the TitleView to use the control\r\n\r\n``` c#\r\n            defaultTitleView = new DefaultTitleView();\r\n            NavigationPage.SetTitleView(this, defaultTitleView);\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe Title Should be centered on the screen\r\n\r\n### Actual Behavior\r\nIt  appears to be centered between the right of the Back button and the Right of the screen.  This is even more pronounced on Android where the back button is larger.\r\n\r\n<img width=\"747\" alt=\"Screenshot 2019-04-09 at 16 00 39\" src=\"https://user-images.githubusercontent.com/16338022/55811730-79da4580-5ae1-11e9-888c-c89aaa8c49dd.png\">\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.264807\r\n- Last known good version: n/a\r\n- IDE: Visual Studio (mac) v8.0\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.1\r\n  - Android: 8.1\r\n- Android Support Library Version: v7\r\n- Nuget Packages:\r\n- Affected Devices: iOS & Android Devices \r\n"},{"Id":"9428412999","Type":"IssuesEvent","CreatedAt":"2019-04-12T01:02:42","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5867","RelatedDescription":"Closed issue \"[Bug] When SwipeGesture is used with ListView, it doesn't work.\" (#5867) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI uploaded the Demo and hoped to help solve this bug.\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. [BugDemo](https://github.com/MackYang/UpLoad/blob/master/SwipeGesture.zip)\r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9426248378","Type":"PullRequestEvent","CreatedAt":"2019-04-11T18:03:34","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5892","RelatedDescription":"Opened pull request \"[d16-1] Bump mono for macOS Notary fix\" (#5892) at xamarin/xamarin-macios","RelatedBody":"New commits in mono/mono:\r\n\r\n* mono/mono@3f5ec6d95c3 [jit] Make dlmalloc use mono_valloc so it picks up the MAP_JIT flag on osx.\r\n* mono/mono@bf4e8d2ae19 [debugger-agent] Ignore thread_end event if thread is detached (#13937)\r\n* mono/mono@ca30169e751 Bump bockbuild to get GTK fix (#13912) (#13919)\r\n* mono/mono@7fb13615133 [MacSDK] Bump bockbuild for fix to #13804\r\n* mono/mono@f2361050566 [2018-08] [merp] Fix image size reported (#13886)\r\n\r\nDiff: https://github.com/mono/mono/compare/4b020ca06d46b2af6d9fc0d0b2cf454301f5014e..3f5ec6d95c30644878510d46cbcca5bdda153fc2"},{"Id":"9426098564","Type":"PullRequestEvent","CreatedAt":"2019-04-11T17:41:26","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5877","RelatedDescription":"Merged pull request \"[tests][mono-native] Adjust logic which is causing tests to fail on tvOS.\" (#5877) at xamarin/xamarin-macios","RelatedBody":"Fixes this when running on tvOS using dylibs:\r\n\r\n> [FAIL] Introspection.CheckSymbols : dlsym() not found mono_native_initialize()\r\n\r\nNow:\r\n\r\n* If on iOS, we'll always have the `mono_native_initialize` symbol, because the symbol is used in P/Invoke in a user assembly (the test assembly itself), and mtouch will make the AOT-compiled code use dlsym for P/Invokes in user assemblies (and when using dlsym we can't (native) strip away the symbol).\r\n* If on watchOS or tvOS, we'll have the symbol when we're loading `mono_native_initialize` from a dylib. If loading `mono_native_initialize` from a static library, we can (native) strip away the symbol because mtouch will make the AOT-compiled P/Invoke use a static reference to the native symbol, and thus the `mono_native_initialize` symbol will not be present in the executable."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":107,"FavoriteCount":46,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":142,"FavoriteCount":52,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":146,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":44,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":26,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":119,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":97,"FavoriteCount":42,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":41,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":150,"FavoriteCount":70,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":41,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2019-04-12T05:30:55.1176932Z","RunDurationInMilliseconds":2777}