{"Data":{"GitHub":{"Issues":[{"Id":"548551069","IsPullRequest":true,"CreatedAt":"2020-01-13T05:13:01","Actor":"hughbe","Number":"2691","RawContent":null,"Title":"Cleanup DISPATCH_ interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup DISPATCH_ interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2691)","Url":"https://github.com/dotnet/winforms/pull/2691","RelatedDescription":"Closed or merged PR \"Cleanup DISPATCH_ interop\" (#2691)"},{"Id":"548475053","IsPullRequest":true,"CreatedAt":"2020-01-13T05:07:13","Actor":"hughbe","Number":"2690","RawContent":null,"Title":"Cleanup TTM_ constants","State":"closed","Body":"## Proposed Changes\r\n- Cleanup TTM_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2690)","Url":"https://github.com/dotnet/winforms/pull/2690","RelatedDescription":"Closed or merged PR \"Cleanup TTM_ constants\" (#2690)"},{"Id":"548609879","IsPullRequest":true,"CreatedAt":"2020-01-13T04:51:28","Actor":"gpetrou","Number":"2695","RawContent":null,"Title":"Remove IsWindow from UnsafeNativeMethods.cs","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove IsWindow from UnsafeNativeMethods.cs.\r\n- Replace is usages with the Interop User32 methods.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2695)","Url":"https://github.com/dotnet/winforms/pull/2695","RelatedDescription":"Closed or merged PR \"Remove IsWindow from UnsafeNativeMethods.cs\" (#2695)"},{"Id":"548611527","IsPullRequest":true,"CreatedAt":"2020-01-13T04:49:29","Actor":"gpetrou","Number":"2696","RawContent":null,"Title":"Move GetUpdateRect to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move GetUpdateRect to Interop User32.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2696)","Url":"https://github.com/dotnet/winforms/pull/2696","RelatedDescription":"Closed or merged PR \"Move GetUpdateRect to Interop User32\" (#2696)"},{"Id":"548611960","IsPullRequest":true,"CreatedAt":"2020-01-13T04:46:37","Actor":"gpetrou","Number":"2697","RawContent":null,"Title":"Add MA enum in Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add MA enum in Interop User32.\r\n- Remove MA constants and replace their usages with the above enum.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2697)","Url":"https://github.com/dotnet/winforms/pull/2697","RelatedDescription":"Closed or merged PR \"Add MA enum in Interop User32\" (#2697)"},{"Id":"548309862","IsPullRequest":true,"CreatedAt":"2020-01-13T00:51:57","Actor":"hughbe","Number":"2684","RawContent":null,"Title":"Add IClassFixture<ThreadExceptionFixture> to all tests","State":"closed","Body":"## Proposed Changes\r\n- Add IClassFixture<ThreadExceptionFixture> to all tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2684)","Url":"https://github.com/dotnet/winforms/pull/2684","RelatedDescription":"Closed or merged PR \"Add IClassFixture<ThreadExceptionFixture> to all tests\" (#2684)"},{"Id":"547880230","IsPullRequest":true,"CreatedAt":"2020-01-13T00:31:20","Actor":"RussKie","Number":"2681","RawContent":null,"Title":"Update issue templates","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2681)","Url":"https://github.com/dotnet/winforms/pull/2681","RelatedDescription":"Closed or merged PR \"Update issue templates\" (#2681)"},{"Id":"548570604","IsPullRequest":true,"CreatedAt":"2020-01-12T13:43:11","Actor":"dotnet-maestro[bot]","Number":"2694","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200111.3\r\n- **Date Produced**: 1/11/2020 11:03 PM\r\n- **Commit**: afc21e51af60a4d2cb11a1081fb38b1e3a8df0a2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.20061.3\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha.1.20061.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2694)","Url":"https://github.com/dotnet/winforms/pull/2694","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#2694)"},{"Id":"548567609","IsPullRequest":true,"CreatedAt":"2020-01-12T13:16:52","Actor":"dotnet-maestro[bot]","Number":"2693","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200111.1\r\n- **Date Produced**: 1/11/2020 2:11 PM\r\n- **Commit**: b1f4549e88a136ed8ae657a39f8316b98b9bf80a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20061.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20061.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20061.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20061.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20061.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2693)","Url":"https://github.com/dotnet/winforms/pull/2693","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2693)"},{"Id":"548551082","IsPullRequest":true,"CreatedAt":"2020-01-12T10:33:06","Actor":"hughbe","Number":"2692","RawContent":null,"Title":"Cleanup Button interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup Button interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2692)","Url":"https://github.com/dotnet/winforms/pull/2692","RelatedDescription":"Open PR \"Cleanup Button interop\" (#2692)"},{"Id":"548380462","IsPullRequest":false,"CreatedAt":"2020-01-11T16:35:58","Actor":"theuserbl","Number":"2685","RawContent":null,"Title":"[minor bug] Label too big or on wrong position","State":"closed","Body":"The Label is too big or on an other position, then on .net Framework.\r\nIt overlaps partly the TextBox in the following program.\r\n\r\nHere a screenshot:\r\n\r\n![WinForms](https://user-images.githubusercontent.com/8337032/72198787-cb2db180-3432-11ea-9565-5670d86abced.png)\r\n\r\nThe program for PowerShell ( taken from https://www.script-example.com/Powershell-GUI )\r\n\r\n```\r\nAdd-Type -AssemblyName System.Windows.Forms\r\nAdd-Type -AssemblyName System.Drawing\r\n$window = New-Object System.Windows.Forms.Form\r\n$window.Width = 1000\r\n$window.Height = 800\r\n$Label = New-Object System.Windows.Forms.Label\r\n$Label.Location = New-Object System.Drawing.Size(10,10)\r\n$Label.Text = \"Text im Fenster\"\r\n$Label.AutoSize = $True\r\n$window.Controls.Add($Label)\r\n$windowTextBox = New-Object System.Windows.Forms.TextBox\r\n$windowTextBox.Location = New-Object System.Drawing.Size(10,30)\r\n$windowTextBox.Size = New-Object System.Drawing.Size(500,500)\r\n$window.Controls.Add($windowTextBox)\r\n \r\n  $windowButton = New-Object System.Windows.Forms.Button\r\n  $windowButton.Location = New-Object System.Drawing.Size(10,60)\r\n  $windowButton.Size = New-Object System.Drawing.Size(50,50)\r\n  $windowButton.Text = \"OK\"\r\n \r\n$window.Controls.Add($windowButton)\r\n\r\n[void]$window.ShowDialog()\r\n```\r\n\r\nand in C#\r\n\r\n```\r\nusing System.Windows.Forms;\r\nusing System.Drawing;\r\n\r\npublic class tst {\r\n  public static void Main() {\r\n    var window = new Form();\r\n    window.Width = 1000;\r\n    window.Height = 800;\r\n    var Label = new Label();\r\n    Label.Location = new Point(10,10);\r\n    Label.Text = \"Text im Fenster\";\r\n    Label.AutoSize = true;\r\n    window.Controls.Add(Label);\r\n    var windowTextBox = new TextBox();\r\n    windowTextBox.Location = new Point(10,30);\r\n    windowTextBox.Size = new Size(500,500);\r\n    window.Controls.Add(windowTextBox);\r\n \r\n    var windowButton = new Button();\r\n    windowButton.Location = new Point(10,60);\r\n    windowButton.Size = new Size(50,50);\r\n    windowButton.Text = \"OK\";\r\n \r\n    window.Controls.Add(windowButton);\r\n    Application.EnableVisualStyles();   // optional\r\n    window.ShowDialog();\r\n  }\r\n}\r\n```\r\n\r\nI have tested the program on .net Framework v4.0.30319 on Win8.1 with and without Visual Styles as program and as PowerShell Skript on Windows PowerShell 4.0 on one side. And on .net Core 3.1 with and without Visual Styles and on PowerShell 7.0.0-rc-1 on the other side.","Url":"https://github.com/dotnet/winforms/issues/2685","RelatedDescription":"Closed issue \"[minor bug] Label too big or on wrong position\" (#2685)"},{"Id":"548450919","IsPullRequest":false,"CreatedAt":"2020-01-11T16:35:33","Actor":"theuserbl","Number":"2689","RawContent":null,"Title":"[minor bug] wrong default selection color in RichTextBox","State":"open","Body":"\r\n![WinFormsz](https://user-images.githubusercontent.com/8337032/72207205-06fa6280-3497-11ea-8651-5fd5f28de234.png)\r\n\r\nOn the left side is with .net Framework v4.0.30319 on Win8.1 and on the right side is .net Core 3.1.\r\n\r\nAnd so, on the .net Framework selected text is in a ListBox and the RichTextBox white with blue background. But on .net Core 3.1 the selected RichTextBox text ist black.\r\n\r\nThe program was created with the designer of  Visual Studio 2017.\r\n\r\nBecause in my last bug-report at https://github.com/dotnet/winforms/issues/2685 weltkante said, that the default font changed from .net Framework to .net Core, I have set the font to the same, like in his posted link.","Url":"https://github.com/dotnet/winforms/issues/2689","RelatedDescription":"Open issue \"[minor bug] wrong default selection color in RichTextBox\" (#2689)"},{"Id":"548430292","IsPullRequest":true,"CreatedAt":"2020-01-11T13:44:54","Actor":"dotnet-maestro[bot]","Number":"2688","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200110.7\r\n- **Date Produced**: 1/11/2020 9:09 AM\r\n- **Commit**: ff03a08accc88651d6b4c34c23d502131b91b6c7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.20060.7\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha.1.20060.7 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2688)","Url":"https://github.com/dotnet/winforms/pull/2688","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#2688)"},{"Id":"548427339","IsPullRequest":true,"CreatedAt":"2020-01-11T13:16:49","Actor":"dotnet-maestro[bot]","Number":"2687","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200110.4\r\n- **Date Produced**: 1/10/2020 8:51 PM\r\n- **Commit**: 384a4bfab9ea05bff33790d21cb7e1d863e4e599\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20060.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20060.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20060.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20060.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20060.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2687)","Url":"https://github.com/dotnet/winforms/pull/2687","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2687)"},{"Id":"548411875","IsPullRequest":false,"CreatedAt":"2020-01-11T10:20:59","Actor":"hughbe","Number":"2686","RawContent":null,"Title":"ImageCollection_IListItem_SetWithHandle_GetReturnsExpected appears to be flakey","State":"open","Body":"https://dev.azure.com/dnceng/public/_test/analytics?definitionId=267&contextType=build\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=479537&view=ms.vss-test-web.build-test-results-tab\r\n\r\n> System.InvalidOperationException : Image cannot be added to the ImageList.\r\n   at System.Windows.Forms.ImageList.AddToHandle(Bitmap bitmap) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ImageList.cs:line 548\r\n   at System.Windows.Forms.ImageList.CreateHandle() in /_/src/System.Windows.Forms/src/System/Windows/Forms/ImageList.cs:line 617\r\n   at System.Windows.Forms.ImageList.get_Handle() in /_/src/System.Windows.Forms/src/System/Windows/Forms/ImageList.cs:line 218\r\n   at System.Windows.Forms.Tests.ImageCollectionTests.ImageCollection_IListItem_SetWithHandle_GetReturnsExpected(Color transparentColor, Image value) in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/ImageList.ImageCollectionTests.cs:line 1645\r\n","Url":"https://github.com/dotnet/winforms/issues/2686","RelatedDescription":"Open issue \"ImageCollection_IListItem_SetWithHandle_GetReturnsExpected appears to be flakey\" (#2686)"},{"Id":"548077117","IsPullRequest":true,"CreatedAt":"2020-01-10T13:43:18","Actor":"dotnet-maestro[bot]","Number":"2683","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200109.11\r\n- **Date Produced**: 1/10/2020 6:59 AM\r\n- **Commit**: d4f423e057fb1ba3ca92d99bc96905e0746b95f2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.20059.11\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha.1.20059.11 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2683)","Url":"https://github.com/dotnet/winforms/pull/2683","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#2683)"},{"Id":"548067479","IsPullRequest":true,"CreatedAt":"2020-01-10T13:16:50","Actor":"dotnet-maestro[bot]","Number":"2682","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200109.3\r\n- **Date Produced**: 1/9/2020 9:03 PM\r\n- **Commit**: 96a4497b2c38c6b7e19c39e4cb8fe5adac299fb4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20059.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20059.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20059.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20059.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20059.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2682)","Url":"https://github.com/dotnet/winforms/pull/2682","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2682)"},{"Id":"547376546","IsPullRequest":true,"CreatedAt":"2020-01-10T07:14:31","Actor":"hughbe","Number":"2668","RawContent":null,"Title":"Cleanup LBS_ styles","State":"closed","Body":"## Proposed Changes\r\n- Cleanup LBS_ styles\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2668)","Url":"https://github.com/dotnet/winforms/pull/2668","RelatedDescription":"Closed or merged PR \"Cleanup LBS_ styles\" (#2668)"},{"Id":"547401146","IsPullRequest":true,"CreatedAt":"2020-01-10T07:08:43","Actor":"hughbe","Number":"2670","RawContent":null,"Title":"Use BitOperations.PopCount instead of GetBitCount","State":"closed","Body":"Same functionality, `BitOperations` is faster\r\n\r\nVerification:\r\n```cs\r\nusing System;\r\nusing System.Numerics;\r\n\t\t\t\t\t\r\npublic class Program\r\n{\r\n\tpublic static void Main()\r\n\t{\r\n\t\tfor (uint i = 0; i < uint.MaxValue; i++)\r\n\t\t{\r\n            if ((i % 1000) == 0)\r\n            {\r\n                Console.WriteLine($\"{i}/{uint.MaxValue}\");\r\n                if (GetBitCount(i) != BitOperations.PopCount(i))\r\n                {\r\n                    throw new Exception();\r\n                }\r\n            }\r\n\t\t}\r\n\r\n        Console.WriteLine(\"Completed\");\r\n\t}\r\n\t\r\n\tpublic static int GetBitCount(uint x)\r\n\t{\r\n\t\tint count = 0;\r\n\t\twhile (x > 0)\r\n\t\t{\r\n\t\t\tx &= x - 1;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n}\r\n```\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2670)","Url":"https://github.com/dotnet/winforms/pull/2670","RelatedDescription":"Closed or merged PR \"Use BitOperations.PopCount instead of GetBitCount\" (#2670)"},{"Id":"547448077","IsPullRequest":true,"CreatedAt":"2020-01-10T07:01:50","Actor":"hughbe","Number":"2671","RawContent":null,"Title":"Extract nested classes from WinFormsUtils","State":"closed","Body":"## Proposed Changes\r\n- Extract nested classes from WinFormsUtils\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2671)","Url":"https://github.com/dotnet/winforms/pull/2671","RelatedDescription":"Closed or merged PR \"Extract nested classes from WinFormsUtils\" (#2671)"},{"Id":"547489852","IsPullRequest":true,"CreatedAt":"2020-01-10T06:38:20","Actor":"hughbe","Number":"2674","RawContent":null,"Title":"Cleanup TVM_ constants","State":"closed","Body":"## Proposed Changes\r\n- Cleanup TVM_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2674)","Url":"https://github.com/dotnet/winforms/pull/2674","RelatedDescription":"Closed or merged PR \"Cleanup TVM_ constants\" (#2674)"},{"Id":"547504835","IsPullRequest":true,"CreatedAt":"2020-01-10T05:18:45","Actor":"hughbe","Number":"2675","RawContent":null,"Title":"Cleanup EM_ constants","State":"closed","Body":"## Proposed Changes\r\n- Cleanup EM_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2675)","Url":"https://github.com/dotnet/winforms/pull/2675","RelatedDescription":"Closed or merged PR \"Cleanup EM_ constants\" (#2675)"},{"Id":"547733996","IsPullRequest":false,"CreatedAt":"2020-01-09T21:29:10","Actor":"TendyTree","Number":"2680","RawContent":null,"Title":"HashTable Refrences to control Unable to be Cleared in HelpProvider.CS/ Documentation error","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n**Framework 4.5**\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\nYes\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nI have a form with a single instance of a help provider. On this form I dynamical create and destroy buttons, which on creation I assign a it a SetHelpString and add it to a flow layout panel. On a deletion of a buttons I have no way to remove the control from the hash table reference on the help provider even with calling ResetShowHelp, leading to the hash table growing in memory, specifically _helpStrings( This could also affect the other hash tables as well)\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nCalling ResetShowHelp does not clear the control from all the hash tables, leading to the hash table growing in memory, specifically _helpStrings( This could also affect the other hash tables as well)\r\n**Expected behavior:**\r\nAccording to the .Net Docs\r\n\r\n`ResetShowHelp(Control) | Removes the Help associated with the specified control.` \r\n\r\nThis only remove the the control from the _showHelp Hashtable, shown in the code bellow. The expected out come would be that it to removes all references to that HelpProvider for that specific control\r\n\r\n\r\n**Minimal repro:**\r\nHelpProvider.cs\r\n\r\n        private readonly Hashtable _helpStrings = new Hashtable();\r\n        private readonly Hashtable _showHelp = new Hashtable();\r\n        private readonly Hashtable _boundControls = new Hashtable();\r\n        private readonly Hashtable _keywords = new Hashtable();\r\n        private readonly Hashtable _navigators = new Hashtable();\r\n\r\n\r\n\r\n        public virtual void ResetShowHelp(Control ctl)\r\n        {\r\n            if (ctl == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(ctl));\r\n            }\r\n\r\n            _showHelp.Remove(ctl);\r\n        }\r\n","Url":"https://github.com/dotnet/winforms/issues/2680","RelatedDescription":"Open issue \"HashTable Refrences to control Unable to be Cleared in HelpProvider.CS/ Documentation error\" (#2680)"},{"Id":"547658783","IsPullRequest":true,"CreatedAt":"2020-01-09T18:55:20","Actor":"weltkante","Number":"2679","RawContent":null,"Title":"[WIP] Improve PaddingConverter CreateInstance implementation","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2677\r\n\r\n## Proposed changes\r\n\r\n- The context argument may be null for callers other than the PropertyGrid, this should not lead to an exception, in particular since `GetCreateInstanceSupported` returns true for a null context. Also every other implementation of CreateInstance I could find in WinForms and System.Drawing supports a null context, so PaddingConverter is an outlier.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Callers which depend on an exception being thrown in a previously unsupported scenario will no longer see an exception\r\n\r\n### Before\r\n\r\n- `PaddingConverter.CreateInstance(null, properties)` throws an exception even though `PaddingConverter.GetCreateInstanceSupported(null)` returns true\r\n\r\n### After\r\n\r\n- `PaddingConverter.CreateInstance(null, properties)` creates an instance based on the given properties like any other TypeConverter defined in WinForms and System.Drawing\r\n\r\n## Test methodology\r\n\r\n- Tests have not been updated yet, this is WIP for discussion\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2679)","Url":"https://github.com/dotnet/winforms/pull/2679","RelatedDescription":"Open PR \"[WIP] Improve PaddingConverter CreateInstance implementation\" (#2679)"},{"Id":"547637997","IsPullRequest":true,"CreatedAt":"2020-01-09T18:11:07","Actor":"Logerfo","Number":"2678","RawContent":null,"Title":"Null Reference Types for System.Windows.Forms","State":"open","Body":"Fixes #1107.\r\nI'm not sure if `master` is the right target branch here...\r\n\r\n## Proposed changes\r\nAs suggested by @drewnoakes, I added the `<Nullable>enable</Nullable>` attribute to the `System.Windows.Forms.csproj` file and the `#nullable disable` directive to each and every `.cs` file, after their headers. I'm not sure if (or when) other projects in this solution should also be considered. (See #2676).\r\nThe goal is to remove the directive file by file, enabling the nullable reference types and fixing the resultant warnings gradually.\r\nIn case we need it, another suggestion from @drewnoakes is the usage of the `#nullable enable annotations` directive in cases where full compliance would be complex to achieve, but still being able to annotate the API surface.\r\nI chose to start with a very common file: `Control.cs`, which is already refactored in order to comply with NRT without warnings in this branch. This doesn't mean the file is not subject anymore: as more files get refactored, already refactored files might need to be revisited, since non-obvious nullable references might become obvious.\r\nSome (but not all) \"dammit\" operators (`!`) and suppressions hides possible null reference exceptions, which I didn't care to touch in order to maintain the current behavior. If it's of the maintainers interested to fix those, the work will be greater.\r\nIt comes to my mind that auto-generation codes also have to be refactored in order to avoid already warned generated codes. I don't know in which project the code generation codes are.\r\nI also think it's very important to keep this branch always up to date, periodically rebasing it and fixing merge conflicts as they are acknowledged.\r\nI encourage everyone to review this starter code in order to avoid replicating possible mistakes.\r\nI'd be glad to give write permission to my fork to anyone who want to help and doesn't have write permission to dotnet/winforms.\r\n\r\n## Customer Impact\r\n- Considering the idea of annotating the API surface, this will allow Windows Forms projects targeting .NET 5.0 to enjoy a complete NRT complied environment.\r\n- Considering the idea of annotating the whole codebase, this will allow contributors and collaborators to work with better quality codes.\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- There is a risk of deploying a nullable member which is not supposed to be one, since reverting it to `notnull` would be a breaking change.\r\n\r\n## Tests\r\n- Should we also refactor existing tests? Should we add more tests?\r\n\r\n---\r\ncc @RussKie @hughbe @sharwell\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2678)","Url":"https://github.com/dotnet/winforms/pull/2678","RelatedDescription":"Open PR \"Null Reference Types for System.Windows.Forms\" (#2678)"},{"Id":"547630149","IsPullRequest":false,"CreatedAt":"2020-01-09T17:53:13","Actor":"weltkante","Number":"2677","RawContent":null,"Title":"Improve Padding TypeConverter CreateInstance implementation","State":"open","Body":"As [noticed](https://github.com/dotnet/winforms/pull/2676#discussion_r364859043) in PR #2676 when changing method signatures to include nullable annotations the current implementation of the Padding TypeConverter `CreateInstance` override is very specifically coded for being called in context of a PropertyGrid.\r\n\r\nThe TypeConverter however is registered globally and available to anyone via the TypeDescriptor registration system, so it should follow [documented](https://docs.microsoft.com/de-de/dotnet/api/system.componentmodel.typeconverter.createinstance?view=netcore-3.1#System_ComponentModel_TypeConverter_CreateInstance_System_ComponentModel_ITypeDescriptorContext_System_Collections_IDictionary_) semantics, in particular:\r\n* the `context` argument may be null\r\n* expect properties of the `context` object being able to return null\r\n* do not return true from `GetCreateInstanceSupported` if you are always going to throw for the given context\r\n\r\nI think the intention of the current implementation is to check the previous value of `Padding.All` and if it differs update it instead of the individual properties.\r\n\r\nA correct implementation would be to gracefully fall back to the \"else\" branch of setting individual properties when either context is empty or no \"original\" Padding is available. Maybe mix in some more flexibility in what properties the caller can specify in the dictionary (so he can either specify \"All\" or the individual properties but doesn't have to specify both, e.g. by using TryGetValue or ContainsKey checks to probe for \"All\" first)\r\n\r\n(Will create a PR with what I think a better implementation can look like, details will be up for discussion then.)","Url":"https://github.com/dotnet/winforms/issues/2677","RelatedDescription":"Open issue \"Improve Padding TypeConverter CreateInstance implementation\" (#2677)"},{"Id":"547607197","IsPullRequest":true,"CreatedAt":"2020-01-09T17:05:30","Actor":"sharwell","Number":"2676","RawContent":null,"Title":"Enable nullable reference types for System.Windows.Forms.Primitives","State":"open","Body":"Recommended review strategy is commit-by-commit.\r\n\r\n* Commit 7bd4aaaf67a61ed429c6b3bc24ea95561406bceb contains the only known semantic changes\r\n* Internal APIs were annotated to the degree required to avoid compiler warnings\r\n* Public APIs were reviewed separately to add annotations according to potential use cases and available documentation\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2676)","Url":"https://github.com/dotnet/winforms/pull/2676","RelatedDescription":"Open PR \"Enable nullable reference types for System.Windows.Forms.Primitives\" (#2676)"},{"Id":"547479971","IsPullRequest":true,"CreatedAt":"2020-01-09T13:52:48","Actor":"dotnet-maestro[bot]","Number":"2673","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20200108.9\r\n- **Date Produced**: 1/9/2020 7:47 AM\r\n- **Commit**: 8019c079ce8174845107e13eb4ddf3582bb10cd0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.20058.9\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha.1.20058.9 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2673)","Url":"https://github.com/dotnet/winforms/pull/2673","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#2673)"},{"Id":"547464001","IsPullRequest":true,"CreatedAt":"2020-01-09T13:16:33","Actor":"dotnet-maestro[bot]","Number":"2672","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20200108.1\r\n- **Date Produced**: 1/8/2020 2:07 PM\r\n- **Commit**: 48bae09d7d8ec0e6879fe2b8d08872cd87f084ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20058.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20058.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20058.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20058.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20058.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2672)","Url":"https://github.com/dotnet/winforms/pull/2672","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2672)"},{"Id":"547393315","IsPullRequest":true,"CreatedAt":"2020-01-09T10:37:13","Actor":"hughbe","Number":"2669","RawContent":null,"Title":"Cleanup CBS_ and CBN_ constants","State":"open","Body":"## Proposed Changes\r\n- Cleanup CBS_ and CBN_ constants\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2669)","Url":"https://github.com/dotnet/winforms/pull/2669","RelatedDescription":"Open PR \"Cleanup CBS_ and CBN_ constants\" (#2669)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-01-13T05:30:58.9531087Z","RunDurationInMilliseconds":606}