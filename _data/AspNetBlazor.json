{"Data":{"GitHubIssues":{"Issues":[{"Id":"331340085","IsPullRequest":false,"CreatedAt":"2018-06-12T04:55:16","Actor":"chucker","Number":"976","RawContent":null,"Title":"Custom (non-root) path base (`UsePathBase`) when running stand-alone","State":"closed","Body":"I have a production URL of `http://someServer/someSubdirectory`, i.e. one that isn't the server root. As the getting started guide says, that's no problem â€” I simply change the  `<base href>` tag in my `index.html`.\r\n\r\nHowever, doing so breaks development: the resources will now be looked for in `http://localhost:4405/someSubdirectory`, and Blazor doesn't know to serve them that way. I need to revert the `href` to end with the root in order for local development to work.\r\n\r\nI've tried adjusting the `launchSettings.json`'s `applicationUrl` accordingly. I'm told launchSettings is only relevant to the development environment, not to production. However, doing so causes Kestrel to throw on launch: `A path base can only be configured using IApplicationBuilder.UsePathBase()`.\r\n\r\nI see that Blazor implicitly calls `UsePathBase` [in `Startup.cs` here](https://github.com/aspnet/Blazor/blob/8194eb7e5715e38ef1d108654fa764ded8a260b4/src/Microsoft.AspNetCore.Blazor.Cli/Server/Startup.cs#L48), but it's not actually clear to me where I'm passing an `app` object to Blazor at all. All I have is a `Program.cs` whose `Main` looks like this:\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var serviceProvider = new BrowserServiceProvider(services =>\r\n            {\r\n                // Add any custom services here\r\n            });\r\n\r\n            new BrowserRenderer(serviceProvider).AddComponent<App>(\"app\");\r\n        }\r\n\r\nIs it possible to pass a custom `IApplicationBuilder` here? Or is this currently not exposed?","Url":"https://github.com/aspnet/Blazor/issues/976","RelatedDescription":"Closed issue \"Custom (non-root) path base (`UsePathBase`) when running stand-alone\" (#976)"},{"Id":"331380025","IsPullRequest":false,"CreatedAt":"2018-06-11T23:01:22","Actor":"Scepheo","Number":"978","RawContent":null,"Title":"dotnet command with path parameter uses parent folder casing","State":"open","Body":"To reproduce (note the casing):\r\n\r\n1. `dotnet new blazor -o Repro`\r\n2. `dotnet build repro/Repro.csproj`\r\n\r\nThis fails with a whole bunch of errors about not being able to find the namespace `Repro.Shared`, because the build uses the path name specified in the dotnet build/run/publish command as the namespace name. This means that e.g. MainLayout.g.i.cs *defines* the namespace `repro.Shared`, but everything *uses* `Repro.Shared`.","Url":"https://github.com/aspnet/Blazor/issues/978","RelatedDescription":"Open issue \"dotnet command with path parameter uses parent folder casing\" (#978)"},{"Id":"331373149","IsPullRequest":true,"CreatedAt":"2018-06-11T22:29:57","Actor":"ericwj","Number":"977","RawContent":null,"Title":"Support the full range of all basic types. Deserialize byte[] from base64.","State":"open","Body":"","Url":"https://github.com/aspnet/Blazor/pull/977","RelatedDescription":"Open PR \"Support the full range of all basic types. Deserialize byte[] from base64.\" (#977)"},{"Id":"331337746","IsPullRequest":false,"CreatedAt":"2018-06-11T20:28:09","Actor":"DNF-SaS","Number":"975","RawContent":null,"Title":"Howto Embedded resources?","State":"open","Body":"I have two .resx-Files (Translations.resx and Translations.de.resx) in my project; both with Build Action \"Embedded resource\" and Custom Tool \"ResxFileGenerator\".\r\nNamespace is \"Testproject\".\r\nAfter compiling, only a resource named \"Testproject.Translations.resources\" containing the default content is present in the assembly.\r\nDoesn't blazor support .resx-Generation?\r\n","Url":"https://github.com/aspnet/Blazor/issues/975","RelatedDescription":"Open issue \"Howto Embedded resources?\" (#975)"},{"Id":"331330701","IsPullRequest":true,"CreatedAt":"2018-06-11T20:05:59","Actor":"vertonghenb","Number":"974","RawContent":null,"Title":"Add para [Parameter] Code Snippet","State":"open","Body":"Should complete the idea of #965\r\nAdds support for auto complete of para > tab > tab\r\n```csharp\r\n[Parameter] protected int MyParameter {get;set;}\r\n````\r\njust like prop > tab > tab\r\n```csharp\r\npublic int MyProperty { get; set; }\r\n````\r\n\r\nCode Snippet Category is Blazor.\r\nAdded in the existing VSIX.","Url":"https://github.com/aspnet/Blazor/pull/974","RelatedDescription":"Open PR \"Add para [Parameter] Code Snippet\" (#974)"},{"Id":"331301295","IsPullRequest":true,"CreatedAt":"2018-06-11T19:47:41","Actor":"vertonghenb","Number":"973","RawContent":null,"Title":"Add para [Parameter] Code Snippet","State":"closed","Body":"Should complete the idea of #965\r\nAdds support for auto complete of para > tab > tab\r\n```csharp\r\n[Parameter] protected int MyParameter {get;set;}\r\n````\r\njust like prop > tab > tab\r\n```csharp\r\npublic int MyProperty { get; set; }\r\n````\r\nA new VSIX project was created to separate the snippets from the templates. However I'm not sure if this is the way to go and or if we still need some build steps?","Url":"https://github.com/aspnet/Blazor/pull/973","RelatedDescription":"Closed or merged PR \"Add para [Parameter] Code Snippet\" (#973)"},{"Id":"331261033","IsPullRequest":false,"CreatedAt":"2018-06-11T16:29:29","Actor":"SteveSandersonMS","Number":"972","RawContent":null,"Title":"Linker enhancements","State":"open","Body":"Ways we'd like to improve it in the short term:\r\n\r\n* Update to the latest linker tooling. We've heard from the Mono team that they've made many improvements.\r\n* Add and document a simpler mechanism for customising the linker's behavior. The linker already accepts `.xml` config files to control in more detail which types/methods are strippable/retainable. We should make it easier to supply a custom config alongside (or instead of) the default one.\r\n","Url":"https://github.com/aspnet/Blazor/issues/972","RelatedDescription":"Open issue \"Linker enhancements\" (#972)"},{"Id":"331154200","IsPullRequest":false,"CreatedAt":"2018-06-11T15:08:02","Actor":"chrissainty","Number":"971","RawContent":null,"Title":"CLI command for changing base href tag","State":"closed","Body":"I don't think this is covered by another issue, apologies if it is. This might be one for a bit further down the line. But it would be good to be able to change the base tags href via a CLI command, similar to how Angulars CLI works. This will be really useful in CI pipelines or just in any scenario where prod requires a different base path to a development environment.","Url":"https://github.com/aspnet/Blazor/issues/971","RelatedDescription":"Closed issue \"CLI command for changing base href tag\" (#971)"},{"Id":"331137532","IsPullRequest":false,"CreatedAt":"2018-06-11T10:55:15","Actor":"carlosalcantara2668","Number":"970","RawContent":null,"Title":"REACTIVE CLIENT MODELS or DYNAMIC CUSTOMER MODELS TO VALIDATE","State":"closed","Body":"Suggestion of changes to validate in blazor, my suggestion is for the case of validations is to make the data model, validate the same or similar to the concept of reactive forms ANGULAR, so I suggest that everything is done through the model of data on the client's side, in conclusion that is the MODEL IN THE CUSTOMER INSTEAD OF THE FORM, because in summary THE MODEL IS THE FORM IN 95% OF THE CASES","Url":"https://github.com/aspnet/Blazor/issues/970","RelatedDescription":"Closed issue \"REACTIVE CLIENT MODELS or DYNAMIC CUSTOMER MODELS TO VALIDATE\" (#970)"},{"Id":"330746288","IsPullRequest":false,"CreatedAt":"2018-06-11T10:00:51","Actor":"andoband","Number":"960","RawContent":null,"Title":"Vue-like directives","State":"closed","Body":"I've grown to enjoy Vue's `v-if`, `v-show`, and `v-for` directives.  Maybe it's because I've gotten used to Vue, but it feels cleaner than the `@if` and `@foreach` blocks used by Razor and Blazor.  Specifically it's easier for me to visualize the document structure when the code expressions are inlined with the elements versus external to them.\r\n\r\nCould Blazor provide a similar syntax?\r\n\r\nFor example:\r\n\r\n**Razor/Blazor** (today)\r\n```\r\n@if (bar != null)\r\n{\r\n    <ul>\r\n        @foreach (var foo in bar) \r\n        {\r\n            <li>@foo.Name</li>\r\n        }\r\n    </ul>\r\n}\r\n```\r\n\r\n**Vue-like** (suggested)\r\n```\r\n<ul @if=\"bar != null\">\r\n    <li @foreach=\"var foo in bar\">@foo.Name</li>\r\n</ul>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/960","RelatedDescription":"Closed issue \"Vue-like directives\" (#960)"},{"Id":"330751303","IsPullRequest":false,"CreatedAt":"2018-06-11T09:58:03","Actor":"jskeet","Number":"961","RawContent":null,"Title":"Please clarify \"hosting from ASP.NET Core\" instructions","State":"closed","Body":"I suspect I will be able to get this working, but the [docs](https://blazor.net/docs/host-and-deploy/index.html) aren't as clear as they might be.\r\n\r\nI would like to host a blazor page - potentially multiple pages - as part of nodatime.org.\r\n\r\nAt the moment, I believe that means:\r\n\r\n- Creating a separate project rather than doing it all in one project (not clear from docs)\r\n- Adding a reference to that project from my main ASP.NET project (reasonably clear once the above point is sorted)\r\n- Adding a reference to `Microsoft.AspNetCore.Blazor.Server` (not mentioned in the docs; I only found this out by looking at samples)\r\n- Somehow tell the middleware to server the Blazor app for a particular route (haven't worked this part out yet)\r\n- Tell the Blazor app about its new \"App base path\". The instructions for that read: \"To set the Blazor app's base path, update the `<base>` tag in index.html on the `<head>` tag.\" It would be useful to mention that `index.html` is in `wwwroot` - for a while I was looking at Index.cshtml and the various views etc. I got there in the end, but it might just save other people from the same struggle, even though it was my own fault :)\r\n\r\nIn the longer term, like #953, I would love it to be simpler to host a blazor app as part of a larger site in a seamless manner, *ideally* without even having a separate project.\r\n","Url":"https://github.com/aspnet/Blazor/issues/961","RelatedDescription":"Closed issue \"Please clarify \"hosting from ASP.NET Core\" instructions\" (#961)"},{"Id":"330770564","IsPullRequest":false,"CreatedAt":"2018-06-11T09:43:33","Actor":"Paradoxon101","Number":"962","RawContent":null,"Title":"Handle FileResult from controller service","State":"closed","Body":"Currently there is no way to evaluate a FileResult in the browser or to save it via a download dialog.","Url":"https://github.com/aspnet/Blazor/issues/962","RelatedDescription":"Closed issue \"Handle FileResult from controller service\" (#962)"},{"Id":"330877206","IsPullRequest":false,"CreatedAt":"2018-06-11T09:39:40","Actor":"fanoI","Number":"964","RawContent":null,"Title":"What about media playing?","State":"closed","Body":"Silverlight was used a lot to do rich Media Player experiences in particular when there was the need of DRM. I imagine that if Blazor will support this it will have yet more success, doing this things with HTLM5+JS is really complex and indeed a lot of sites continue to use Flash for these type of things.\r\n\r\nSo what do you think?","Url":"https://github.com/aspnet/Blazor/issues/964","RelatedDescription":"Closed issue \"What about media playing?\" (#964)"},{"Id":"330892660","IsPullRequest":false,"CreatedAt":"2018-06-11T09:38:19","Actor":"vertonghenb","Number":"965","RawContent":null,"Title":"Add [Parameter] Code Snippet to VS Extensions","State":"closed","Body":"Rather an enhancement but it would be nice if it would be included by default in the Blazor VS Extensions\r\n\r\nJust like \r\n'prop >tab >tab'\r\nPublic TYPE Name {get;set}\r\n\r\npara > tab > tab\r\n[Parameter] protected TYPE Name {get;set;}\r\n\r\nThe script below can be added to the code snippets:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<CodeSnippets  xmlns=\"http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet\">\r\n\t<CodeSnippet Format=\"1.0.0\">\r\n\t\t<Header>\r\n\t\t\t<Title>para</Title>\r\n\t\t\t<Shortcut>para</Shortcut>\r\n\t\t\t<Description>Code snippet for an automatically implemented parameter for Blazor</Description>\r\n\t\t\t<Author>Vertonghen Benjamin</Author>\r\n\t\t\t<SnippetTypes>\r\n\t\t\t\t<SnippetType>Expansion</SnippetType>\r\n\t\t\t</SnippetTypes>\r\n\t\t</Header>\r\n\t\t<Snippet>\r\n\t\t\t<Declarations>\r\n\t\t\t\t<Literal>\r\n\t\t\t\t\t<ID>type</ID>\r\n\t\t\t\t\t<ToolTip>Parameter type</ToolTip>\r\n\t\t\t\t\t<Default>int</Default>\r\n\t\t\t\t</Literal>\r\n\t\t\t\t<Literal>\r\n\t\t\t\t\t<ID>property</ID>\r\n\t\t\t\t\t<ToolTip>Parameter name</ToolTip>\r\n\t\t\t\t\t<Default>MyParmeter</Default>\r\n\t\t\t\t</Literal>\r\n\t\t\t</Declarations>\r\n\t\t\t<Code Language=\"csharp\"><![CDATA[[Parameter] protected $type$ $property$ { get; set; }$end$]]>\r\n\t\t\t</Code>\r\n\t\t</Snippet>\r\n\t</CodeSnippet>\r\n</CodeSnippets>\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/965","RelatedDescription":"Closed issue \"Add [Parameter] Code Snippet to VS Extensions\" (#965)"},{"Id":"330905771","IsPullRequest":false,"CreatedAt":"2018-06-11T09:37:03","Actor":"ericwj","Number":"966","RawContent":null,"Title":"Built-in Json isn't compatible with the default serialization in ASP.NET","State":"closed","Body":"I found that JSON coming from an API controller that uses Entity Framework Core cannot handle the default serialization done by ASP.NET in a few cases.\r\n\r\n* `sbyte`, `ushort`, `uint` and `ulong` do not deserialize (ArgumentException)\r\n* `byte[]` content for e.g. `[Timestamp]` properties which are serialized as base64 do not deserialize\r\n* `decimals` outside the range of `double` cq `long` do not deserialize\r\n\r\nThe first needs a single line changed, the second needs 2 added lines, the third needs two if else statements added.\r\n\r\nWould you like me to submit a pull request to fix this?","Url":"https://github.com/aspnet/Blazor/issues/966","RelatedDescription":"Closed issue \"Built-in Json isn't compatible with the default serialization in ASP.NET\" (#966)"},{"Id":"331000091","IsPullRequest":false,"CreatedAt":"2018-06-11T09:34:17","Actor":"Andrzej-W","Number":"969","RawContent":null,"Title":"Instruction: How to correctly post code examples here?","State":"closed","Body":"As far as I know GitHub doesn't support Blazor syntax highlighting yet, but cshtml file is almost like HTML + C#. Please use the following GitHub syntax:\r\n```\r\n```html\r\n@page \"/counter\"\r\n<h1>Counter</h1>\r\n<p>Current count: @currentCount</p>\r\n<button class=\"btn btn-primary\" onclick=\"@IncrementCount\">Click me</button>\r\n```    write three backtick characters to end html section\r\n```c#\r\n@functions {\r\n    int currentCount = 0;\r\n    void IncrementCount()\r\n    {\r\n        currentCount++;\r\n    }\r\n}\r\n```    write three backtick characters to end c# section\r\n```\r\n\r\nFinal result is shown below. Code with syntax highlighting is much more readable for all of us.\r\n```html\r\n@page \"/counter\"\r\n<h1>Counter</h1>\r\n<p>Current count: @currentCount</p>\r\n<button class=\"btn btn-primary\" onclick=\"@IncrementCount\">Click me</button>\r\n```\r\n```c#\r\n@functions {\r\n    int currentCount = 0;\r\n    void IncrementCount()\r\n    {\r\n        currentCount++;\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Blazor/issues/969","RelatedDescription":"Closed issue \"Instruction: How to correctly post code examples here?\" (#969)"},{"Id":"330997032","IsPullRequest":false,"CreatedAt":"2018-06-10T22:26:49","Actor":"carlosalcantara2668","Number":"968","RawContent":null,"Title":"ERROR 'Router' cannot find any component with a route for ","State":"closed","Body":"I have a page (A) with a list of articles, this page calls another page (B)\r\nthe page (B) has a component that I want to use but it gives me the following error\r\n'Router' cannot find any component with a route for InvoicePage\r\n\r\nEJe\r\nPAGE (A)\r\n@using WebBlazorTi.Shared.Models;\r\n@using Microsoft.AspNetCore.Blazor.Components;\r\n@using Microsoft.AspNetCore.Blazor.Services;\r\n\r\n<div>\r\n\r\n    @if (Model != null)\r\n    {\r\n\r\n        <table class=\"table table-bordered table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <td>\r\n                        Factura\r\n                    </td>\r\n                    <td>\r\n                        Cuenta\r\n                    </td>\r\n                    <td>\r\n                        Descripcion\r\n                    </td>\r\n                    <td>\r\n                        Fecha\r\n                    </td>\r\n                    <td>\r\n                        NOta\r\n                    </td>\r\n                    <td>\r\n                        Facturado\r\n                    </td>\r\n                    <td>\r\n                        Pago\r\n                    </td>\r\n                    <td>\r\n                        Balance\r\n                    </td>\r\n                    <td>\r\n                        NCF\r\n                    </td>\r\n                    <td>\r\n                        SELECR\r\n                    </td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                @foreach (var item in Model)\r\n                {\r\n                    <tr>\r\n                        <td>\r\n                            @item.factura\r\n                        </td>\r\n                        <td>\r\n                            @item.cuenta\r\n                        </td>\r\n                        <td>\r\n                            @item.cliente_descripcion\r\n                        </td>\r\n                        <td>\r\n                            @item.fecha\r\n                        </td>\r\n                        <td>\r\n                            @item.nota\r\n                        </td>\r\n                        <td>\r\n                            @item.total_factura\r\n                        </td>\r\n                        <td>\r\n                            @item.total_aplicado\r\n                        </td>\r\n                        <td>\r\n                            @item.total_balance\r\n                        </td>\r\n                        <td>\r\n                            @item.hotelid\r\n                        </td>\r\n                        <td>\r\n                            <a class=\"nav-link active\" href=\"/facturadetallepage?hotelid=@item.hotelid.Trim()&id=@item.id.ToString().Trim()\">\r\n                                     EDIR\r\n                                </a>\r\n\r\n                            @*<input type=\"submit\" class=\"btn btn-danger\" onclick=\"@(() => buscarurl(item.hotelid,item.id))\" style=\"width:220px;\" value=\"Cancel\" />*@\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n</div>\r\n\r\n@functions {\r\n\r\n[Parameter] List<FacturaConsultaViewModel> Model { get; set; }\r\n\r\n[Inject]\r\nprotected IUriHelper UriHelper { get; set; }\r\n\r\n\r\nvoid buscarurl(string hotelid, int id)\r\n{\r\n\r\n    UriHelper.NavigateTo($\"/facturadetallepage/{hotelid}/{id}\");\r\n}\r\n\r\n}\r\nPAGE (B)\r\n@inject WebBlazorTi.Client.Services.FacturaService FacturaService\r\n@page \"/facturadetallepage/{hotelid}/{id}\"\r\n\r\n<h1></h1>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n        <div class=\"block\">\r\n            <FacturaEncabezado Model=\"@FacturaService.facturas\">\r\n                 \r\n            </FacturaEncabezado>\r\n        </div>\r\n    </div>\r\n  \r\n</div>\r\n\r\n@functions {\r\n\r\n    [Parameter]\r\n    private string Hotelid { get; set; }\r\n\r\n    [Parameter]\r\n    private int id { get; set; }\r\n\r\n \r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n\r\n     \r\n\r\n        await FacturaService.Buscar(Hotelid, id);\r\n\r\n        FacturaService.OnChange += StateHasChanged;\r\n    }\r\n\r\n}\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/968","RelatedDescription":"Closed issue \"ERROR 'Router' cannot find any component with a route for \" (#968)"},{"Id":"330908508","IsPullRequest":false,"CreatedAt":"2018-06-10T01:34:37","Actor":"andrewtheart","Number":"967","RawContent":null,"Title":"Unable to hit breakpoints in cshtml file - Blazor","State":"closed","Body":"I am unable to hit a breakpoint in the \"Blazor (ASP.NET Core Hosted)\" template.\r\n\r\nI set a breakpoint in FetchData.cshtml \r\n\r\n    @foreach (var forecast in forecasts)\r\n\r\nThe breakpoint is set successfully and symbols are loaded (debugger states that breakpoints will be hit). However, when I load /fetchdata, the breakpoint on this line is not hit.\r\n\r\nI am able to hit breakpoints in SampleDataController.cs, specifically the WeatherForecasts() method.\r\n\r\nAlso, markup changes in the CSHTML are not reflected when the page is reloaded.\r\n\r\nThis differs from my experience with  traditional ASP.NET 4.6.1 MVC web development in Visual Studio where both live mark changes and debugging in razor pages are supported.  \r\n\r\nI am using Visual Studio 2017 Preview Version 15.8.0 Preview 2 and have .NET Core 2.1.4 installed.\r\n\r\nAdmittedly, this may not be a bug ... perhaps it is not something that will ever be planned or something that is not supported at the current time. Out of curiosity, if it is the latter, is this something on the roadmap? ","Url":"https://github.com/aspnet/Blazor/issues/967","RelatedDescription":"Closed issue \"Unable to hit breakpoints in cshtml file - Blazor\" (#967)"},{"Id":"330854552","IsPullRequest":false,"CreatedAt":"2018-06-09T05:18:52","Actor":"doubletong","Number":"963","RawContent":null,"Title":"typing chinese in a textbox will lead to the app break out","State":"open","Body":"I created a Blazor app in **chrome**  but when I am typing chinese in an input ,the app will be force to quit ","Url":"https://github.com/aspnet/Blazor/issues/963","RelatedDescription":"Open issue \"typing chinese in a textbox will lead to the app break out\" (#963)"},{"Id":"330733137","IsPullRequest":false,"CreatedAt":"2018-06-08T16:59:47","Actor":"SteveSandersonMS","Number":"959","RawContent":null,"Title":"Out-of-process execution","State":"open","Body":"Blazor's architecture creates opportunities for other ways of hosting and running Blazor applications, including:\r\n\r\n* In Electron\r\n* In a Web Worker\r\n* With server-side .NET code\r\n\r\nFor all three of these, we need a method for serializing the .NET/JS interactions so they can be pushed over a pipe (IPC, postMessage, WebSocket, etc.).\r\n\r\nWe'll break down this issue further as the design progresses.","Url":"https://github.com/aspnet/Blazor/issues/959","RelatedDescription":"Open issue \"Out-of-process execution\" (#959)"},{"Id":"330731240","IsPullRequest":false,"CreatedAt":"2018-06-08T16:53:33","Actor":"SteveSandersonMS","Number":"958","RawContent":null,"Title":"Treat blocks of static HTML as atomic","State":"open","Body":"Compiler optimization. Depends on #167","Url":"https://github.com/aspnet/Blazor/issues/958","RelatedDescription":"Open issue \"Treat blocks of static HTML as atomic\" (#958)"},{"Id":"330671051","IsPullRequest":false,"CreatedAt":"2018-06-08T14:03:09","Actor":"dlr1","Number":"957","RawContent":null,"Title":"Setting and clearing data for DragDrop operations","State":"open","Body":"Can we get methods to SetData, ClearData on DataTransfer object for DragDrop?\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\r\nhttps://html.spec.whatwg.org/multipage/dnd.html#dom-datatransfer-setdata\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/dropEffect\r\ntake a look at the example (scroll down)","Url":"https://github.com/aspnet/Blazor/issues/957","RelatedDescription":"Open issue \"Setting and clearing data for DragDrop operations\" (#957)"},{"Id":"330630697","IsPullRequest":false,"CreatedAt":"2018-06-08T12:57:19","Actor":"DaveKP","Number":"956","RawContent":null,"Title":"Browser soft refresh?","State":"closed","Body":"Just curious if there is currently/is going to be a way for Blazor to hijack F5 to only refresh the current app page?\r\n\r\nBrowser back/forward work as I'd expect, but F5 seems to relaunch the whole application? Is it possible to restrict the full application reload to Ctrl+F5?","Url":"https://github.com/aspnet/Blazor/issues/956","RelatedDescription":"Closed issue \"Browser soft refresh?\" (#956)"},{"Id":"330518055","IsPullRequest":false,"CreatedAt":"2018-06-08T04:46:08","Actor":"TheFanatr","Number":"955","RawContent":null,"Title":"Crash on Attempted Set of <input /> Element \"bind\" Attribute","State":"open","Body":"# Attempting to set Blazor \"bind\" Attribute on <input /> Element Hangs and Crashes Visual Studio\r\n\r\n[![a brief video showcasing this bug](https://img.youtube.com/vi/L1egU_YDlH4/0.jpg)](https://youtu.be/L1egU_YDlH4) \r\n<strong>a brief video showcasing this bug</strong>\r\n\r\n## Explanation\r\nEssentially, in this specific case, in an `<input />` element, typing `bind=@` in at the end of the tag will cause Visual Studio 2017 to crash. I have the latest version of both it and the Blazor language services extension, at 15.7.3 and 0.5.0-preview1-10320 respectively. \r\n\r\n## Behaviour Reproduction\r\nThe following is the source code needed to reproduce the bug.\r\n\r\n### TestPage.cshtml\r\n```cshtml\r\n@page  \"/testpage\"\r\n\r\n<h1>Welcome to the Test Page!</h1>\r\n\r\n<h2>Sample 1: LocalBrowserTodo</h2>\r\n\r\n@if (TodoManager.Instance.Entries.Count > 0)\r\n{\r\n    <table style=\"width:100%\">\r\n        <thead>\r\n\r\n            <tr>\r\n\r\n                <th>Title</th>\r\n                <th>Content</th>\r\n                <th></th>\r\n                <th></th>\r\n\r\n            </tr>\r\n\r\n        </thead>\r\n\r\n        @foreach (TodoManager.TodoEntry entry in TodoManager.Instance.Entries)\r\n        {\r\n            <tr>\r\n\r\n                @if (!entry.IsEditing)\r\n                {\r\n                    <th>@entry.Title</th>\r\n                    <th>@entry.Content</th>\r\n\r\n                }\r\n                else\r\n                {\r\n                    <th><input value=@entry.Title/></th>\r\n                    <th><input value=@entry.Content/></th>\r\n\r\n                }\r\n                <th><button type=\"button\" onclick=@(() => entry.IsEditing = !entry.IsEditing)>@(entry.IsEditing ? \"Stop\" : \"\") Edit</button></th>\r\n                <th><button type=\"button\" onclick=@entry.Delete>Delete</button></th>\r\n\r\n            </tr>\r\n        }\r\n    </table>\r\n\r\n}\r\nelse\r\n{\r\n    <strong>Nothing to do!</strong>\r\n}\r\n\r\n<button type=\"button\" onclick=@AddRandomTodo>Add @(TodoManager.Instance.Entries.Count > 0 ? \"another\" : \"a\") random one!</button>\r\n<h4>Note that for now, the titles of the todo entries are just random double-precision values and the contents are just random integers.</h4>\r\n\r\n@functions\r\n{\r\nstatic Random Random { get; } = new Random { };\r\n\r\nvoid AddRandomTodo() => TodoManager.Instance.Entries.Add(new TodoManager.TodoEntry { Title = Random.NextDouble().ToString(), Content = Random.Next() });\r\n\r\n}\r\n```\r\n\r\n### TodoManager.cs\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace BlazorTestApp.Client\r\n{\r\n    class TodoManager\r\n    {\r\n        internal class TodoEntry\r\n        {\r\n            static int InstanceCount { get; set; } = 0;\r\n\r\n            internal int ID { get; } = InstanceCount++;\r\n\r\n            internal string Title { get; set; } = String.Empty;\r\n\r\n            internal object Content { get; set; } = String.Empty;\r\n\r\n            internal bool Completed { get; set; } = false;\r\n\r\n            internal bool IsEditing { get; set; } = false;\r\n\r\n            internal void Delete() => Instance.Entries.Remove(this);\r\n        }\r\n\r\n        internal List<TodoEntry> Entries { get; } = new List<TodoEntry> { };\r\n\r\n        internal TodoEntry this[int id] => Entries.Find(entry => entry.ID == id);\r\n\r\n        internal void Reset() => Entries.Clear();\r\n\r\n        internal static TodoManager Instance { get; } = new TodoManager { };\r\n    }\r\n}\r\n```\r\n\r\nPlease ignore any implementation oddities, as project was just made to mess around with Blazor.\r\n\r\n## Metadata\r\n### Event Viewer Logs\r\nThe following is what Event Viewer had to say about the issue.\r\n\r\n#### .NET Runtime\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.InvalidOperationException\r\n   at System.Linq.Enumerable.Single[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Generic.IEnumerable`1<System.__Canon>)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.GetAttributeContent(Microsoft.AspNetCore.Razor.Language.Intermediate.TagHelperPropertyIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.RewriteUsage(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode, Microsoft.AspNetCore.Razor.Language.Intermediate.TagHelperPropertyIntermediateNode)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.IntermediateNodePassBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument, Microsoft.AspNetCore.Razor.Language.Intermediate.DocumentIntermediateNode)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorOptimizationPhase.ExecuteCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(Microsoft.AspNetCore.Razor.Language.RazorCodeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.ProcessDesignTime(Microsoft.AspNetCore.Razor.Language.RazorProjectItem)\r\n   at Microsoft.VisualStudio.Editor.Razor.BackgroundParser+BackgroundThread.WorkerLoop()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```\r\n\r\n#### Application Error\r\n```\r\nFaulting application name: devenv.exe, version: 15.7.27703.2026, time stamp: 0x5b0f5e36\r\nFaulting module name: KERNELBASE.dll, version: 10.0.17134.1, time stamp: 0x149ab0fd\r\nException code: 0xe0434352\r\nFault offset: 0x0010d722\r\nFaulting process id: 0x6e54\r\nFaulting application start time: 0x01d3fecf3951769e\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\devenv.exe\r\nFaulting module path: C:\\WINDOWS\\System32\\KERNELBASE.dll\r\nReport Id: 0f1bbcfb-83a4-4b0c-acf2-7dc587d6ff06\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n\r\n### Installed Extensions List\r\nThe following is a list of all the extensions I have installed in my configuration of Visual Studio, in case it applies, but I suspect it will not.\r\n\r\n```json\r\n{\r\n  \"id\": \"3866550c-4a12-48e9-8f27-414aab12731f\",\r\n  \"name\": \"My Visual Studio extensions\",\r\n  \"description\": \"A collection of my Visual Studio extensions\",\r\n  \"version\": \"1.0\",\r\n  \"extensions\": [\r\n    {\r\n      \"name\": \"Azure Functions and Web Jobs Tools\",\r\n      \"vsixId\": \"Microsoft.VisualStudio.Web.AzureFunctions\"\r\n    },\r\n    {\r\n      \"name\": \"Razor Language Services\",\r\n      \"vsixId\": \"Microsoft.VisualStudio.RazorExtension\"\r\n    },\r\n    {\r\n      \"name\": \"Visual Studio IntelliCode - Preview\",\r\n      \"vsixId\": \"IntelliCode.VSIX.598224b2-b987-401b-8509-f568d0c0b946\"\r\n    },\r\n    {\r\n      \"name\": \"NP.XAMLIntellisenseExtensionForVS2017\",\r\n      \"vsixId\": \"NP.XAMLIntellisenseExtensionForVS2017.9c3d92c1-cbae-4738-a2f2-1e48eab3f15a\"\r\n    },\r\n    {\r\n      \"name\": \"Command Explorer\",\r\n      \"vsixId\": \"1a973c52-a674-48d8-a276-65ddab1ac598\"\r\n    },\r\n    {\r\n      \"name\": \"KnownMonikers Explorer\",\r\n      \"vsixId\": \"c38f3512-4653-4d97-a4c5-860a425209f5\"\r\n    },\r\n    {\r\n      \"name\": \"VS Live Share - Preview\",\r\n      \"vsixId\": \"Microsoft.VisualStudio.LiveShare\"\r\n    },\r\n    {\r\n      \"name\": \"Extensibility Tools\",\r\n      \"vsixId\": \"f8330d54-0469-43a7-8fc0-7f19febeb897\"\r\n    },\r\n    {\r\n      \"name\": \"Code Cracker for C#\",\r\n      \"vsixId\": \"CodeCracker.Vsix..5b99e64c-1418-4a06-990c-fd4cf01f4f63\"\r\n    },\r\n    {\r\n      \"name\": \"StatusInfo\",\r\n      \"vsixId\": \"72581eb6-4dcd-4b8f-9add-c4257d4fb9d7\"\r\n    },\r\n    {\r\n      \"name\": \"Stack Overflow Quick Launch Search Provider\",\r\n      \"vsixId\": \"63E411F1-E531-44E8-8689-16B34600CF25\"\r\n    },\r\n    {\r\n      \"name\": \"File Differ\",\r\n      \"vsixId\": \"ea5c68d6-cdae-4e79-bd46-2a39e95bb256\"\r\n    },\r\n    {\r\n      \"name\": \".ignore\",\r\n      \"vsixId\": \"7ac24965-ea21-4108-9cac-6e46394aaaef\"\r\n    },\r\n    {\r\n      \"name\": \"Add New File\",\r\n      \"vsixId\": \"2E78AA18-E864-4FBB-B8C8-6186FC865DB3\"\r\n    },\r\n    {\r\n      \"name\": \"Unit Test Boilerplate Generator\",\r\n      \"vsixId\": \"UnitTestBoilerplate.RandomEngy.ca0bb824-eb5a-41a8-ab39-3b81f03ba3fe\"\r\n    },\r\n    {\r\n      \"name\": \".NET Portability Analyzer\",\r\n      \"vsixId\": \"55d15546-28ca-40dc-af23-dfa503e9c5fe\"\r\n    },\r\n    {\r\n      \"name\": \"Markdown Editor\",\r\n      \"vsixId\": \"9ca64947-e9ca-4543-bfb8-6cce9be19fd6\"\r\n    },\r\n    {\r\n      \"name\": \"File Nesting\",\r\n      \"vsixId\": \"6c799bc4-0d4c-4172-98bc-5d464b612dca\"\r\n    },\r\n    {\r\n      \"name\": \"Select Next Occurrence\",\r\n      \"vsixId\": \"NextOccurrence.b213c4e9-b96f-4f9d-b1d6-fa8bc7e9da21\"\r\n    },\r\n    {\r\n      \"name\": \"File Icons\",\r\n      \"vsixId\": \"3a7b4930-a5fb-46ec-a9b8-9610c8f953b8\"\r\n    },\r\n    {\r\n      \"name\": \"Refactoring Essentials for Visual Studio 2017\",\r\n      \"vsixId\": \"RefactoringEssentials.Vsix.cd27e59b-5c56-4238-8931-c9bb745a7a7f\"\r\n    },\r\n    {\r\n      \"name\": \"Experimental Tools 2017\",\r\n      \"vsixId\": \"fe00c281-eed0-4c6e-901b-d8b845c82e35\"\r\n    },\r\n    {\r\n      \"name\": \"Open in Visual Studio Code\",\r\n      \"vsixId\": \"e99dde0e-e023-410d-bc5d-3f76db71e3f0\"\r\n    },\r\n    {\r\n      \"name\": \"Stack Trace Explorer\",\r\n      \"vsixId\": \"Terrajobst.StackTraceExplorer.4995ed73-eaa4-4c4c-98fc-1e90df4aea6f\"\r\n    },\r\n    {\r\n      \"name\": \"UnBlockDllExtension\",\r\n      \"vsixId\": \"aee1ca98-a39a-4986-ba81-a36603ff6e02\"\r\n    },\r\n    {\r\n      \"name\": \"BuildVision\",\r\n      \"vsixId\": \"837c3c3b-8382-4839-9c9a-807b758a929f\"\r\n    },\r\n    {\r\n      \"name\": \"Surround Selection\",\r\n      \"vsixId\": \"4c807d55-9263-4ce0-9c1a-bfef58e96b02\"\r\n    },\r\n    {\r\n      \"name\": \"Automatic Versions 1\",\r\n      \"vsixId\": \"7f3f0c54-770a-4980-b3a0-5d9c4db90169\"\r\n    },\r\n    {\r\n      \"name\": \"CodeMaid\",\r\n      \"vsixId\": \"4c82e17d-927e-42d2-8460-b473ac7df316\"\r\n    },\r\n    {\r\n      \"name\": \"ASP.NET Core Blazor Language Services\",\r\n      \"vsixId\": \"Microsoft.VisualStudio.BlazorExtension\"\r\n    },\r\n    {\r\n      \"name\": \"GitHub Extension for Visual Studio\",\r\n      \"vsixId\": \"c3d3dc68-c977-411f-b3e8-03b0dccf7dfc\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n\r\nI do have some more data I could upload, but posting download links is shady, so I am avoiding it.\r\n\r\nThanks.","Url":"https://github.com/aspnet/Blazor/issues/955","RelatedDescription":"Open issue \"Crash on Attempted Set of <input /> Element \"bind\" Attribute\" (#955)"},{"Id":"330509150","IsPullRequest":false,"CreatedAt":"2018-06-08T03:43:48","Actor":"chanan","Number":"954","RawContent":null,"Title":"Binding to events to a component that inherits from a c# class broke in 0.4.0","State":"open","Body":"The following worked in 0.3.0:\r\n\r\nDynamicElement is defined here: https://github.com/aspnet/Blazor/blob/stevesa/bootstrap-components-library/src/Microsoft.AspNetCore.Blazor.Bootstrap/DynamicElement.cs\r\n\r\n```\r\n<DynamicElement onclick=\"@onclick\" ...>...</DynamicElement>\r\n\r\n@functions {\r\n  [Parameter] private Action onclick { get; set; }\r\n}\r\n```\r\n\r\nin 0.4.0 an error on build:\r\n\r\n```\r\nArgument 1: cannot convert from 'System.MulticastDelegate' to 'string'\r\n```\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/954","RelatedDescription":"Open issue \"Binding to events to a component that inherits from a c# class broke in 0.4.0\" (#954)"},{"Id":"330479736","IsPullRequest":false,"CreatedAt":"2018-06-08T00:27:19","Actor":"ericwj","Number":"953","RawContent":null,"Title":"Is it possible to make part of a site use Blazor?","State":"open","Body":"Related to pre-rendering, I am having trouble integrating Blazor on a page in my app. Don't want to make the whole app use Blazor.\r\n\r\nOne problem is that Blazor has its own static file middleware hosting index.html. But it would be much better if I can render index.html myself with something like\r\n\r\n```\r\n@{\r\n    ViewData[\"BaseUrl\"] = \"/Blazor/App/Location/\";\r\n    ViewData[\"Title] = \"Whatever\";\r\n}\r\n<app></app>\r\n<script type=\"blazor-boot\"></script>\r\n```\r\nSuch that all my cool `<environment include...>` etc stuff in _Layout still works.\r\n\r\nAnother problem is that I cannot seem to get rid of `webpack:///webpack/bootstrap 5594f6dc856a30add6eb` which is overwriting parts of my bootstrap 4 stylesheet.\r\n\r\nPlus, it is fairly involved to make Blazor work at /Blazor/App/Location/ unless I'm doing it wrong, I've added something like pseudocode\r\n\r\n```\r\napp.MapWhen(\r\n    condition: path.StartsWithSegments(/Blazor/App/Location/) && StripThisPrefix,\r\n    config: subapp => subapp.UseStaticFiles().UseBlazor<Browser.Program>())\r\n```\r\nWhich is kind of involved. For one now I have StaticFiles middleware in three places.","Url":"https://github.com/aspnet/Blazor/issues/953","RelatedDescription":"Open issue \"Is it possible to make part of a site use Blazor?\" (#953)"},{"Id":"330471024","IsPullRequest":false,"CreatedAt":"2018-06-07T23:34:06","Actor":"JipingWang","Number":"952","RawContent":null,"Title":"Error: The \"RunCommand\" property is not defined","State":"open","Body":"Run a new project from the template getting error:\r\n\r\n> Unable to run your project. The \"RunCommand\" property is not defined.\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <OutputType>Exe</OutputType>\r\n    <LangVersion>7.3</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Browser\" Version=\"0.4.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Build\" Version=\"0.4.0\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Blazor040_2.Shared\\Blazor040_2.Shared.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/952","RelatedDescription":"Open issue \"Error: The \"RunCommand\" property is not defined\" (#952)"},{"Id":"330468674","IsPullRequest":false,"CreatedAt":"2018-06-07T23:20:52","Actor":"chucker","Number":"951","RawContent":null,"Title":"Starting in 0.4, button with C#-implemented onclick event handler will submit form","State":"open","Body":"For debug purposes, I have a `<button>` that triggers C# code to log some info, like so:\r\n\r\n```html\r\n    <form>\r\n\r\n    [.. plenty of other stuff ..]\r\n\r\n        <button onclick=\"@Test\">Test</button>\r\n    </form>\r\n```\r\n\r\n`Test()` is a method that simply iterates my current model state (where `ConfiguratorInput` is a class for binding purposes):\r\n\r\n```csharp\r\n    void Test()\r\n    {\r\n        foreach (var item in typeof(ConfiguratorInput).GetProperties())\r\n        {\r\n            Console.WriteLine($\"{item.Name}: {item.GetValue(Input)}\");\r\n        }\r\n    }\r\n```\r\n\r\nAs `Console.WriteLine()` outputs to the browser, this lets me inspect the state right inside the browser's Web Inspector.\r\n\r\nLikely due to the change in #937 where Blazor will no longer call `preventDefault()`, this now causes the browser to redirect to a different location, probably attempting to \"submit the form\".\r\n\r\nThis new default behavior makes sense, but an opt-in way to prevent it would be desirable, such as through setting a new property `e.Handled` to `true`.","Url":"https://github.com/aspnet/Blazor/issues/951","RelatedDescription":"Open issue \"Starting in 0.4, button with C#-implemented onclick event handler will submit form\" (#951)"},{"Id":"330444475","IsPullRequest":false,"CreatedAt":"2018-06-07T21:37:44","Actor":"boukenka","Number":"950","RawContent":null,"Title":"Wrong version number comment in release notes","State":"closed","Body":"There is a new release of Blazor, the 0.4.0. But I think there is an error in the release notes.\r\nIt is written: We are pleased to announce the release of Blazor 0.3.0. It should be 0.40.","Url":"https://github.com/aspnet/Blazor/issues/950","RelatedDescription":"Closed issue \"Wrong version number comment in release notes\" (#950)"},{"Id":"330395610","IsPullRequest":true,"CreatedAt":"2018-06-07T19:26:16","Actor":"rynowak","Number":"949","RawContent":null,"Title":"Fix #974","State":"closed","Body":"The root cause here was that we weren't setting the language version in\r\nMSBuild, which is only for the command line version.","Url":"https://github.com/aspnet/Blazor/pull/949","RelatedDescription":"Closed or merged PR \"Fix #974\" (#949)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-12T05:30:02.9135104Z","RunDurationInMilliseconds":1558}