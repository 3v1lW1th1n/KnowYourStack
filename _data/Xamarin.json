{"Data":{"Blog":{"FeedItems":[{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null},{"Title":"Previewing Files Inside Your Xamarin.iOS App","PublishedOn":"2018-07-25T18:21:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If your app interacts with files, such as email attachments or photos, allowing users to preview those files without leaving your app is a great way to enhance the user&#8217;s experience....","Href":"https://blog.xamarin.com/previewing-files-with-xamarin-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8147486786","Type":"PullRequestEvent","CreatedAt":"2018-08-22T00:01:25","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2092","RelatedDescription":"Opened pull request \"[build] Add error for spaces in Android NDK path\" (#2092) at xamarin/xamarin-android","RelatedBody":"Add an error early in the preparation targets to let contributors know that having spaces in the Android NDK path will cause an error later in the build.  For example, before this change, a build run under a user named \"Windows User\" would hit the following error:\r\n\r\n    'C:\\Users\\Windows' is not recognized as an internal or external\r\n    command, operable program or batch file.\r\n\r\n    C:\\source\\xamarin-android\\src\\sqlite-xamarin\\sqlite-xamarin.targets\r\n    (27,5): error MSB3073: The command \"\r\n        \"C:\\Users\\Windows User\\android-toolchain\\ndk\\ndk-build.cmd\"\r\n\r\n        SQLITE_SOURCE_DIR=\"C:\\source\\xamarin-android\\external\\sqlite\"\r\n\r\n        APP_ABI=\"armeabi-v7a x86\"\"\r\n    exited with code 1.\r\n\r\nAs a follow-up to the related conversation in https://github.com/xamarin/xamarin-android/pull/2075, I tried a few steps to resolve this issue.  Unfortunately, it turns out that the limitation goes beyond the `ndk-build.cmd` batch files.  Even if the build skipped those .cmd files and called `make.exe` directly, it would still fail because android-toolchain\\ndk\\build\\core\\build-local.mk and the other related `make` include files *also* assume the NDK path contains no spaces:\r\n\r\n    C:\\Users\\Windows User\\android-toolchain\\ndk\\build\\\\..\\build\\core\\\r\n    build-local.mk:48: User/android-toolchain/ndk/build//../build/core/\r\n    init.mk: No such file or directory\r\n\r\n    C:\\Users\\Windows User\\android-toolchain\\ndk\\build\\\\..\\build\\core\\\r\n    build-local.mk:199: /add-application.mk: No such file or directory\r\n\r\n    C:\\Users\\Windows User\\android-toolchain\\ndk\\build\\\\..\\build\\core\\\r\n    build-local.mk:213: /setup-imports.mk: No such file or directory\r\n\r\n    C:\\Users\\Windows User\\android-toolchain\\ndk\\build\\\\..\\build\\core\\\r\n    build-local.mk:213: /setup-imports.mk: No such file or directory\r\n\r\n    make: *** No rule to make target `/build-all.mk'.  Stop.\r\n\r\nIn fact, if you try to work around this issue with the .mk files by setting the working directory for `make.exe` to the NDK directory and using a relative rather than absolute path for build-local.mk, then the NDK outputs its own error explaining that spaces in the NDK path are not allowed:\r\n\r\n    Android NDK: Your Android application project path contains spaces:\r\n    'C:/Users User/android-toolchain'\r\n\r\n    build\\core\\build-local.mk:158: *** Android NDK: Aborting.    .  Stop.\r\n\r\n    Android NDK: The Android NDK build cannot work here. Please move\r\n    your project to a different location."},{"Id":"8147439086","Type":"IssuesEvent","CreatedAt":"2018-08-21T23:44:46","Actor":"Alihamzehzadeh","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2091","RelatedDescription":"Opened issue \"+989216398938\" (#2091) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8146742910","Type":"IssuesEvent","CreatedAt":"2018-08-21T20:46:23","Actor":"benventive","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2090","RelatedDescription":"Opened issue \"GeneratedOutputPath is wrong when using the new csproj format in an Android Binding\" (#2090) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open the provided solution\r\n2. Build\r\n3. Observe the resulting DLL with a tool like ILSpy\r\n\r\n[TestBinding.zip](https://github.com/xamarin/xamarin-android/files/2307964/TestBinding.zip)\r\n\r\n### Expected Behavior\r\nThe DLL contains all the generated code\r\n### Actual Behavior\r\nThe DLL only contains a ZIP (I assume that this is the AAR)\r\n### Version Information\r\nMicrosoft Visual Studio Professional 2017 Preview\r\nVersion 15.9.0 Preview 1.0\r\nVisualStudio.15.Preview/15.9.0-pre.1.0+28016.0\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Professional\r\n\r\nXamarin   4.12.1.40 (d15-9@5718a2094)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android SDK   9.1.0.12 (HEAD/f8e8e5ca4)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\n### More\r\nAdding `<GeneratedOutputPath>obj\\$(Configuration)\\$(TargetFramework)\\generated\\</GeneratedOutputPath>` to the project's PropertyGroup fixes the issue"},{"Id":"8146685122","Type":"PullRequestEvent","CreatedAt":"2018-08-21T20:35:04","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2089","RelatedDescription":"Opened pull request \"Convert libmonodroid to C++\" (#2089) at xamarin/xamarin-android","RelatedBody":"The purpose of this conversion is to start using a language that is stricter and\r\nyet more powerful than C. Stricter in type safety, in separation of private and\r\npublic function, in data encapsulation. Taking advantage of C++ *language* (as\r\nopposed to its standard library) features allows us to write better structured,\r\nsafer and less fragile code. C++ also allows us to implement safer memory\r\nmanagement (not part of this commit, see below).\r\n\r\nThis commit implements the basic, skeletal work on straightforward C to C++\r\nconversion:\r\n\r\n  * introduces classes to encompass a number of APIs that can be grouped\r\n    together\r\n\r\n  * fixes a number of issues with the old C code (void pointer arithmetic,\r\n    incorrect type casts, comparisons of integers with different signs or of\r\n    different sizes)\r\n\r\n  * introduces strict type checking in the Mono interface API (it used to use\r\n    `void*` pointers which could lead to confusion and hard to detect\r\n    runtime/build time errors, see below)\r\n\r\nMono API (found in the DylibMono class) was error prone, as signalled above,\r\nbecause it made the code similar to the following to build without any warning\r\nor error from the compilers:\r\n\r\n```c++\r\nvoid my_code (MonoDomain *domain) { }\r\n// ...\r\nMonoDomain *domain = get_domain ();\r\nmy_code (&domain);\r\n```\r\n\r\n`MonoDomain` (and other Mono types) were typedefed to be `void` which made the\r\nabove call \"valid\". A developer working with code wouldn't immediately know what\r\nwas the issue because of the typedef hiding the actual `MonoDomain` type. During\r\ntests code in monodroid-glue.cc which mistakenly passed a pointer to MonoDomain\r\npointer (a.k.a `void**`) to the Mono runtime caused the runtime to block while\r\nattempting to obtain a lock on the domain where the domain was non existent and,\r\nobviously, not initialized and the call couldn't succeed. Thus the idea to\r\nchange the typedefs to `struct XY` which introduces a unique type, making all\r\nmistakes of this kind (as well as invalid casts) obviously wrong and signalled\r\nby the compiler.\r\n\r\nThis commit does *not* implement much in the are of memory management because\r\nsuch changes would make porting code from master to the branch increasingly\r\ncomplex and error prone. For the same reason `monodroid-glue.cc` is not split up\r\ninto separate files (which is the plan) but merely introduces a handful of\r\nclasses in that file. After the commit is merged into master both of those\r\nchanges will be implemented to further take advantage of C++ capabilities."},{"Id":"8146342997","Type":"PullRequestEvent","CreatedAt":"2018-08-21T19:26:46","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2088","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix incremental builds for Xamarin.Forms projects\" (#2088) at xamarin/xamarin-android","RelatedBody":"@StephaneDelcroix noticed a build performance problem in Xamarin.Forms\r\nprojects:\r\n- Build\r\n- Build again with no changes\r\n- Slow targets such as `_UpdateAndroidResgen` and `_GenerateJavaStubs`\r\n  run again!\r\n\r\nThe cause appeared to be this:\r\n\r\n    Building target \"_UpdateAndroidResgen\" completely.\r\n    Input file \"obj/Debug/res/layout/tabbar.xml\" is newer than output file \"obj/Debug/R.cs.flag\".\r\n\r\nI modified the `CheckTimestamps` test to replicate this issue:\r\n- Added Xamarin.Forms NuGet packages\r\n- Added `Tabbar.axml` from the Xamarin.Forms template\r\n\r\nThis surfaced several problems with timestamps and Xamarin.Android\r\nbuilding incrementally...\r\n\r\n### Problem 1\r\n\r\nIn the `_GenerateJavaStubs` target, the `ConvertResourcesCases`\r\nMSBuild task is not supplied a `AndroidConversionFlagFile`. It uses\r\nthis file to compare timestamps and decide if XML files need fixed up\r\nor not.\r\n\r\nSupplying `$(_AndroidResgenFlagFile)` seemed to be the way to go here,\r\nsince `_UpdateAndroidResgen` runs right before this task. It also\r\nsolves the original problem from the `Tabbar.axml` file.\r\n\r\n### Problem 2\r\n\r\nTimestamps of Xamarin.Forms assemblies in `obj\\Debug\\linksrc` were out\r\nof date!\r\n\r\nI updated the `_CopyIntermediateAssemblies` target to update the\r\ntimestamps of all files within this directory. It did not appear to be\r\ndoing it correctly, and was only running `<Touch />` on a subset of\r\nassemblies.\r\n\r\n### Problem 3\r\n\r\nAfter fixing No. 2, the next problem I noticed were `*.pdb` and\r\n`*.mdb` files in `obj\\Debug\\linksrc` were out of date!\r\n\r\nThe problem here was a call to `<Touch />`:\r\n\r\n    <Touch Files=\"@(_DebugFilesCopiedToLinkerSrc)\" />\r\n\r\nThe `_DebugFilesCopiedToLinkerSrc` did not appear to contain any\r\nitems!\r\n\r\nI updated the `_CopyPdbFiles` and `_CopyMdbFiles` targets to use the\r\ncorrect item groups.\r\n\r\n### Problem 4\r\n\r\nLastly, after fixing the previous three issues, the timestamps of\r\noutput assemblies in `obj\\Release\\android\\assets` were not correct for\r\n`Release` builds.\r\n\r\nI had made a change for this in the past, which was making `Debug`\r\nbuilds work correctly:\r\n\r\nhttps://github.com/xamarin/xamarin-android/pull/2028\r\n\r\nAt the time I wrote #2028, since the test wasn't using Xamarin.Forms,\r\nI did not see the problem ocurring in `Release` mode. It *does* occur\r\nif you are using NuGet packages.\r\n\r\nI replicated what I changed in the `_LinkAssembliesNoShrink` target,\r\nand also renamed the item groups to be unique:\r\n- `_LinkAssembliesNoShrinkFiles`\r\n- `_LinkAssembliesShrinkFiles`\r\n\r\n### Other changes\r\n\r\nThe `CheckTimestamps` test also was verifying timestamps in\r\n`$(OutputPath)` such as `bin\\Debug`.\r\n\r\nIt appears the core MSBuild targets are leaving timestamps as-is in\r\nthe `CopyFilesToOutputDirectory` and `_CopyFilesMarkedCopyLocal`\r\ntargets. Assemblies from Xamarin.Forms NuGet are out of date here, but\r\nI don't think we should do anything, since the core MSBuild targets\r\nare doing this.\r\n\r\nFor now, I removed the checks for `$(OutputPath)` in this test, and\r\ncleaned up the test a bit."},{"Id":"8145795629","Type":"IssuesEvent","CreatedAt":"2018-08-21T17:42:04","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2085","RelatedDescription":"Closed issue \"XamarinShellPackage package did not load correctly after updating VS to 15.8 or 15.8.1 from 15.7\" (#2085) at xamarin/xamarin-android","RelatedBody":"This is Allen from APGC Xamarin support team. I am filing this issue for my customer and I finished remote session with him, the issue does exist and not only one customer is having the issue.\r\n\r\nMy customer's Windows version is Windows 8.1 with version 6.3. And the issue happened after updating VS2017 from 15.7 to 15.8.\r\n\r\nThe symptom is that the Xamarin components are totally broken, we cannot load the settings from Tools => Options => Xamarin. And each time we click on it, we will get something as below:\r\n\r\n\"XamarinShellPackage\" package did not load correctly. Find the detail information from: \"C:\\Users\\xxx\\AppData\\Roaming\\Microsoft\\VisualStudio\\15.0_xxxx\\ActivityLog.xml\".\r\n\r\nPlease find me for the ActivityLog.xml file if needed. However, customer has tried repair VS, clean install VS.\r\nAlso, I did lots of research, I helped to try disable all the VS extensions, clear the ComponentModelCache, none of the things works for this case.\r\n\r\nI found some information from the ActivityLog.xml file as below:\r\n\r\n```XML\r\n<entry>\r\n<record>543</record>\r\n<time>2018/08/18 23:03:56.718</time>\r\n<type>Error</type>\r\n<source>VisualStudio</source>\r\n<description>LegacySitePackage failed for package [XamarinShellPackage]Source: &apos;Microsoft.VisualStudio.Composition&apos; Description: Expected 1 export(s) with contract name &quot;Clide.IDevEnv&quot; but found 0 after applying applicable constraints.&#x000D;&#x000A;Microsoft.VisualStudio.Composition.CompositionFailedException: Expected 1 export(s) with contract name &quot;Clide.IDevEnv&quot; but found 0 after applying applicable constraints.&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExports(ImportDefinition importDefinition)&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExports[T,TMetadataView](String contractName, ImportCardinality cardinality)&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExport[T,TMetadataView](String contractName)&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExport[T](String contractName)&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExport[T]()&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExportedValue[T]()&#x000D;&#x000A; at Microsoft.VisualStudio.ComponentModelHost.ComponentModel.GetService[T]()&#x000D;&#x000A; at Clide.DevEnv.Get(IServiceProvider serviceProvider) in D:\\a\\1\\s\\src\\Clide.Interfaces\\DevEnv.cs:line 12&#x000D;&#x000A; at Xamarin.VisualStudio.TastyPackage.Initialize() in E:\\A_work\\53\\s\\src\\Core\\VisualStudio\\FlavorProject\\TastyPackage.cs:line 116&#x000D;&#x000A; at Xamarin.VisualStudio.Shell.XamarinShellPackage.Initialize() in E:\\A_work\\53\\s\\src\\Core\\VisualStudio.Shell\\XamarinShellPackage.cs:line 67&#x000D;&#x000A; at Microsoft.VisualStudio.Shell.Package.Microsoft.VisualStudio.Shell.Interop.IVsPackage.SetSite(IServiceProvider sp)</description>\r\n<guid>{2D510815-1C4E-4210-BD82-3D9D2C56C140}</guid>\r\n<hr>80131500</hr>\r\n<errorinfo></errorinfo>\r\n</entry>\r\n```\r\n\r\nPlease let me know whether you guys need anymore information from customer, I can also engage customer in here to follow up.\r\n\r\nPlease help to resolve the issue asap because this is critical for my customer. This issue totally blocked his development progress.\r\n\r\nThanks.\r\nAllen"},{"Id":"8145578023","Type":"PullRequestEvent","CreatedAt":"2018-08-21T16:59:47","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2087","RelatedDescription":"Opened pull request \"Revert \"[mono-sdks] Use for android toolchain\"\" (#2087) at xamarin/xamarin-android","RelatedBody":"This reverts commit fef45412d6b852afe654764bb38a2ad3ab5871c2.\r\n\r\nThis brings back the responsibility of setting up the Android toolchain back into XA. This follows a discussion I has with @jonpryor, and during which we concluded we didn't want Mono to be responsible for that."},{"Id":"8144958111","Type":"IssuesEvent","CreatedAt":"2018-08-21T15:14:23","Actor":"JohnRowseEnitial","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2086","RelatedDescription":"Opened issue \"ry/Catch not working as expected on initial load of activity\" (#2086) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nIf you successfully load/create an activity, any subsequent unhandled exception is confined only to that activity – you get a stopped working dialog, but the previous activity(s) remain functional. However if you put an unhandled exception in the create method of an activity, and handle the exception form the calling activity (from the StartActivity method, not only does it crash the called activity, but it crashes the calling activity. In the example, trying to load activity three, should remain on activity 2, as activity 2 is handling the load of activity 3 with a try/catch, however it returns to activity 1. The ‘crash’ button is just there to confirm the normal operation of an unhandled operation from a fully loaded activity.\r\n\r\nMoreover, the app should crash when the exception is unhandled (when the message 'unfortunately, appname has stopped' has displayed), however it does not.  It just 'crashes' the activity.  Any activity not affected by the unhandled activity (notwithstanding the above issue) remains alive.  This can cause its own set of unexpected behaviors.\r\n\r\n[ActiviyCrashTest.zip](https://github.com/xamarin/xamarin-android/files/2306882/ActiviyCrashTest.zip)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8143662217","Type":"PullRequestEvent","CreatedAt":"2018-08-21T11:38:54","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2084","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] shorten $(IntermediateOutputPath) for MAX_PATH\" (#2084) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1628\r\nFixes: http://work.devdiv.io/667203\r\n\r\nCustomers are reporting MAX_PATH (or PathTooLongException) related\r\nfailures when upgrading Visual Studio from 15.7 to 15.8. This appears\r\nto be due to the change of moving `$(IntermediateOutputPath)` from\r\n`obj\\Debug\\` to `obj\\\\Debug\\MonoAndroid81`.\r\n\r\nNote we have two things we can do here to improve this:\r\n- Rename `MonoAndroid81` to just `81`\r\n- Fix the double slash `\\\\`\r\n\r\nThere was also the comment of using `$(AndroidApiLevel)`, but it feels\r\na bit safer to use what we have currently and shorten it. In the long\r\nrun, we should revisit the current approach entirely.\r\n\r\nIt appears during MSBuild evaluation, the `$(PlatformName)` is empty\r\n(and not equal to `AnyCPU`). So we should just drop this extra\r\ndirectory entirely, since it is causing a double-slash `\\\\`.\r\n\r\nThe original goals of PR #1628 were to fix this scenario:\r\n- Build with `MonoAndroid81`\r\n- Build with `MonoAndroid90` or *something else*, something in `obj`\r\n  is completely broken and requires #deletebinobj\r\n\r\nWe should fix the above scenario properly down the road, and we won't\r\nneed an extra `81` folder at all."},{"Id":"8142001505","Type":"IssuesEvent","CreatedAt":"2018-08-21T05:42:20","Actor":"allenliu1030","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2085","RelatedDescription":"Opened issue \"XamarinShellPackage package did not load correctly after updating VS to 15.8 or 15.8.1 from 15.7\" (#2085) at xamarin/xamarin-android","RelatedBody":"This is Allen from APGC Xamarin support team. I am filing this issue for my customer and I finished remote session with him, the issue does exist and not only one customer is having the issue.\r\n\r\nMy customer's Windows version is Windows 8.1 with version 6.3. And the issue happened after updating VS2017 from 15.7 to 15.8.\r\n\r\nThe symptom is that the Xamarin components are totally broken, we cannot load the settings from Tools => Options => Xamarin. And each time we click on it, we will get something as below:\r\n\r\n\"XamarinShellPackage\" package did not load correctly. Find the detail information from: \"C:\\Users\\xxx\\AppData\\Roaming\\Microsoft\\VisualStudio\\15.0_xxxx\\ActivityLog.xml\".\r\n\r\nPlease find me for the ActivityLog.xml file if needed. However, customer has tried repair VS, clean install VS.\r\nAlso, I did lots of research, I helped to try disable all the VS extensions, clear the ComponentModelCache, none of the things works for this case.\r\n\r\nI found some information from the ActivityLog.xml file as below:\r\n\r\n```XML\r\n<entry>\r\n<record>543</record>\r\n<time>2018/08/18 23:03:56.718</time>\r\n<type>Error</type>\r\n<source>VisualStudio</source>\r\n<description>LegacySitePackage failed for package [XamarinShellPackage]Source: &apos;Microsoft.VisualStudio.Composition&apos; Description: Expected 1 export(s) with contract name &quot;Clide.IDevEnv&quot; but found 0 after applying applicable constraints.&#x000D;&#x000A;Microsoft.VisualStudio.Composition.CompositionFailedException: Expected 1 export(s) with contract name &quot;Clide.IDevEnv&quot; but found 0 after applying applicable constraints.&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExports(ImportDefinition importDefinition)&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExports[T,TMetadataView](String contractName, ImportCardinality cardinality)&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExport[T,TMetadataView](String contractName)&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExport[T](String contractName)&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExport[T]()&#x000D;&#x000A; at Microsoft.VisualStudio.Composition.ExportProvider.GetExportedValue[T]()&#x000D;&#x000A; at Microsoft.VisualStudio.ComponentModelHost.ComponentModel.GetService[T]()&#x000D;&#x000A; at Clide.DevEnv.Get(IServiceProvider serviceProvider) in D:\\a\\1\\s\\src\\Clide.Interfaces\\DevEnv.cs:line 12&#x000D;&#x000A; at Xamarin.VisualStudio.TastyPackage.Initialize() in E:\\A_work\\53\\s\\src\\Core\\VisualStudio\\FlavorProject\\TastyPackage.cs:line 116&#x000D;&#x000A; at Xamarin.VisualStudio.Shell.XamarinShellPackage.Initialize() in E:\\A_work\\53\\s\\src\\Core\\VisualStudio.Shell\\XamarinShellPackage.cs:line 67&#x000D;&#x000A; at Microsoft.VisualStudio.Shell.Package.Microsoft.VisualStudio.Shell.Interop.IVsPackage.SetSite(IServiceProvider sp)</description>\r\n<guid>{2D510815-1C4E-4210-BD82-3D9D2C56C140}</guid>\r\n<hr>80131500</hr>\r\n<errorinfo></errorinfo>\r\n</entry>\r\n```\r\n\r\nPlease let me know whether you guys need anymore information from customer, I can also engage customer in here to follow up.\r\n\r\nPlease help to resolve the issue asap because this is critical for my customer. This issue totally blocked his development progress.\r\n\r\nThanks.\r\nAllen"},{"Id":"8139141941","Type":"PullRequestEvent","CreatedAt":"2018-08-20T16:43:29","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2084","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] shorten $(IntermediateOutputPath) for MAX_PATH\" (#2084) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1628\r\nFixes: http://work.devdiv.io/667203\r\n\r\nCustomers are reporting MAX_PATH (or PathTooLongException) related\r\nfailures when upgrading Visual Studio from 15.7 to 15.8. This appears\r\nto be due to the change of moving `$(IntermediateOutputPath)` from\r\n`obj\\Debug\\` to `obj\\\\Debug\\MonoAndroid81`.\r\n\r\nNote we have two things we can do here to improve this:\r\n- Rename `MonoAndroid81` to just `81`\r\n- Fix the double slash `\\\\`\r\n\r\nThere was also the comment of using `$(AndroidApiLevel)`, but it feels\r\na bit safer to use what we have currently and shorten it. In the long\r\nrun, we should revisit the current approach entirely.\r\n\r\nIt appears during MSBuild evaluation, the `$(PlatformName)` is empty\r\n(and not equal to `AnyCPU`). So we should just drop this extra\r\ndirectory entirely, since it is causing a double-slash `\\\\`.\r\n\r\nThe original goals of PR #1628 were to fix this scenario:\r\n- Build with `MonoAndroid81`\r\n- Build with `MonoAndroid90` or *something else*, something in `obj`\r\n  is completely broken and requires #deletebinobj\r\n\r\nWe should fix the above scenario properly down the road, and we won't\r\nneed an extra `81` folder at all."},{"Id":"8138349898","Type":"IssuesEvent","CreatedAt":"2018-08-20T14:31:37","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2083","RelatedDescription":"Closed issue \"An Android layout file build failed, but in Android Studio it works fine.\" (#2083) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a blank Xamarin.Android project\r\n2. Create an `Android Layout` file under `layout` folder.\r\n3. Add the following content in this file:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:minWidth=\"25px\"\r\n    android:minHeight=\"25px\">\r\n  <Button\r\n      android:id=\"@+id/button1\"\r\n      android:text=\"Button\"\r\n      android:layout_width=\"wrap_content\"\r\n      android:layout_height=\"wrap_content\"\r\n      android:layout_centerHorizontal=\"true\"\r\n      android:layout_below=\"@id/textView1\" />\r\n  <TextView\r\n      android:id=\"@+id/textView1\"\r\n      android:layout_width=\"wrap_content\"\r\n      android:layout_height=\"wrap_content\"\r\n      android:layout_centerInParent=\"true\"\r\n      android:text=\"Hello World\" />\r\n</RelativeLayout>\r\n```\r\n4. Build this project.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nBuild success, without any error.\r\n\r\n### Actual Behavior\r\n**Build failed with the following erro:**\r\n\r\n```\r\n1>------ Rebuild All started: Project: SingleButton, Configuration: Debug Any CPU ------\r\n1>C:\\workspace\\XAndroid\\SingleButton\\SingleButton\\Properties\\AndroidManifest.xml : warning XA0101: @(Content) build action is not supported\r\n1>C:\\workspace\\XAndroid\\SingleButton\\SingleButton\\Resources\\layout\\layout1.axml(2): error APT0000: No resource found that matches the given name (at 'layout_below' with value '@id/textView1').\r\n========== Rebuild All: 0 succeeded, 1 failed, 0 skipped ==========\r\n```\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.1\r\nVisualStudio.15.Release/15.8.1+28010.2003\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA644\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-60000-00001-AA644\r\nMicrosoft Visual C++ 2017\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05074.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.4000.3\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.8.05023.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.4000.3\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.8.18201.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nDebugging Tools for Windows   10.0.17110.1002\r\nIntegrates the Windows Debugger functionality (http://go.microsoft.com/fwlink/?linkid=223405) in Visual Studio.\r\n\r\nDotfuscator Community Edition   5.36.0.7050-e77ce80a6\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nEMDKProfileManagerWizardVS   1.0\r\nEMDK for Xamarin\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitHub.VisualStudio   2.5.4.3349\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nGradleBindings.VisualStudio   1.0\r\nCreates Xamarin Android Binding projects from a gradle file.\r\n\r\nIncrediBuild Build Acceleration   1.5.0.3\r\nIncrediBuild effectively reduces compilation and development times by up to 90%.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.38 (5b3c069)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.4000.3\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.4000.3\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.3\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.4000.3\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.7-pre (8955b2a)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.20802.1 Commit Hash:97e1085d8b4b8e3e51c398e910177f87e86d135e\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.8.18201.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.8.18201.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.8.18201.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.8.18201.1\r\nProfiling support for Python projects.\r\n\r\nRedgate SQL Change Automation   3.0.18200.463\r\nExtend DevOps processes to your SQL Server databases and safely automate database deployments.\r\n\r\nVisit https://www.red-gate.com/sca/productpage for more information.\r\n\r\nCopyright (C) 2011 Red Gate Software Ltd. All rights reserved.\r\n\r\nThis software contains components from Component Owl.\r\nSQL Server is a registered trademark of Microsoft Corporation.\r\nVisual Studio is a registered trademark of Microsoft Corporation.\r\n\r\nSQL Change Automation contains code from the following open source software:\r\n\r\nNuGet https://www.nuget.org/\r\nSQL LocalDB Wrapper https://github.com/martincostello/sqllocaldb\r\nAutofac https://autofac.org/\r\nJson.NET https://json.net/\r\nMahApps.Metro http://mahapps.com/\r\nSemVer https://github.com/maxhauser/semver\r\nLog4Net http://logging.apache.org/log4net/\r\nStringTemplate https://github.com/antlr/stringtemplate4\r\nExtended WPF Toolkit https://wpftoolkit.codeplex.com/\r\nCode InfoBox VSX http://www.codeproject.com/Articles/55196/Code-InfoBox-Visual-Studio-Extension-VSX\r\nOctoPack https://github.com/OctopusDeploy/OctoPack\r\nSQLite https://sqlite.org/\r\n\r\nThis product contains icons from http://www.visualpharm.com distributed under a free backlink license.\r\n\r\nFor license details or other notices relating to the above software, please see NOTICE.TXT and EULA.rtf in the SQL Change Automation application folder.\r\n    \r\n\r\nRedgate SQL Prompt   9.2.5.6073\r\nWrite, format, and refactor SQL effortlessly\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSettingsWindow Extension   1.0\r\nSettingsWindow Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nSyntax Visualizer   1.0\r\nAn extension for visualizing Roslyn SyntaxTrees.\r\n\r\nTelerik Xamarin VSExtensions   2018.2.813.1\r\nProgress® Telerik® UI for Xamarin Visual Studio extensions\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27924.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.27825.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual C++ for Linux Development   1.0.9.27924\r\nVisual C++ for Linux Development\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Unity   3.8.0.3\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nVSDesign package for Spread Designer   11.45.20183.0\r\nVSDesign package for Spread Designer\r\n\r\nWindows Driver Kit   10.0.17110.1002\r\nHeaders, libraries, and tools needed to develop, debug, and test Windows drivers (msdn.microsoft.com/en-us/windows/hardware/gg487428.aspx)\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Live Reload   0.3.27 (remotes/origin/dev@207abf7)\r\nProvides live reload capabilities for Xamarin XAML.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n```\r\n1>------ Rebuild All started: Project: SingleButton, Configuration: Debug Any CPU ------\r\n1>C:\\workspace\\XAndroid\\SingleButton\\SingleButton\\Properties\\AndroidManifest.xml : warning XA0101: @(Content) build action is not supported\r\n1>C:\\workspace\\XAndroid\\SingleButton\\SingleButton\\Resources\\layout\\layout1.axml(2): error APT0000: No resource found that matches the given name (at 'layout_below' with value '@id/textView1').\r\n========== Rebuild All: 0 succeeded, 1 failed, 0 skipped ==========\r\n```\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8147282008","Type":"IssuesEvent","CreatedAt":"2018-08-21T22:53:30","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3621","RelatedDescription":"Closed issue \"Unable to post reply on Xamarin forums(not Xamarin.Forms)\" (#3621) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n### Description\r\nI have asked one question on xamarin forums & I got one reply too. But when I want to post some information in on the same thread I am getting exception on Chrome & Firefox browser. \r\n\r\nI am not able to continue on my thread. I was wondering where should I ask this question as xamarin forums isn't working for me. Than I realize that this place might be better.\r\nPlease solve that error as soon as possible.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Ask one question on xamarin forums\r\n2.  If you get reply, try to post some on the same thread\r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nhttps://forums.xamarin.com/discussion/136676/executing-services-apis-in-background-without-waiting-next-line-execution#latest\r\n\r\n![xamforum](https://user-images.githubusercontent.com/19743421/44391537-c02c6580-a54d-11e8-9e08-f60318b7f24f.png)\r\n\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8147241307","Type":"IssuesEvent","CreatedAt":"2018-08-21T22:41:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3502","RelatedDescription":"Closed issue \"Setting a view as the TitleView on a NavigationPage doesn't work on UWP\" (#3502) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nSetting `NavigationPage.TitleView` to different views on UWP has no effect. The navigation bar remains blank. On iOS and Android the feature works as intended.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample.\r\n2. Browse to the cross-platform TitleViewPage and cycle the TitleViews.\r\n\r\n### Expected Behavior\r\n\r\nA series of views are set as the `TitleView` on the `NavigationPage` (on UWP).\r\n\r\n### Actual Behavior\r\n\r\nThe navigation bar remains empty (on UWP).\r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\n- Last known good version: 3.2.0.637442-pre1\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP: 10.0.16299.0 (as created by the VS2017 template).  \r\n\r\n### Reproduction Link\r\n\r\n[NavigationPageTitleView.zip](https://github.com/xamarin/Xamarin.Forms/files/2266999/NavigationPageTitleView.zip)"},{"Id":"8146774710","Type":"IssuesEvent","CreatedAt":"2018-08-21T20:52:34","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3629","RelatedDescription":"Opened issue \"[Android] DrawingCacheEnabled and GetDrawingCache has been deprecated in API 28\" (#3629) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/74cb5c4a97dcb123eb471f6b1dffa1267d0305aa/Xamarin.Forms.ControlGallery.Android/ColorPicker.cs#L37\r\n\r\nare\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/74cb5c4a97dcb123eb471f6b1dffa1267d0305aa/Xamarin.Forms.ControlGallery.Android/ColorPicker.cs#L46\r\n\r\n### Steps to Reproduce\r\n\r\n1. Make sure to have the latest Stable release of vs for mac\r\n2. Compile Xamarin.Forms.SLN\r\n3. See errors\r\n\r\n### Expected Behavior\r\nSolution should compile\r\n\r\n### Actual Behavior\r\nCurrently doesn't compile\r\n\r\n### Version\r\nVisual Studio Enterprise 2017 for Mac\r\nVersion 7.6 (build 2190)\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n"},{"Id":"8146336645","Type":"IssuesEvent","CreatedAt":"2018-08-21T19:25:33","Actor":"adammeaney","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3628","RelatedDescription":"Opened issue \"Android: Primary ToolbarItems do not appear disabled\" (#3628) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nToolbar Items on Android do not appear disabled when they are an icon that is not in the overflow menu. There is no visual change between enabled and disabled.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the Control Gallery\r\n2. Navigate to the ToolbarItems Gallery page\r\n3. Observe the toolbar item with the menu icon. It is disabled, but still identical to the icon not disabled.\r\n\r\n### Expected Behavior\r\n\r\nIcon is greyed out.\r\n\r\n### Actual Behavior\r\n\r\nIcon does not change.\r\n\r\n### Basic Information\r\n\r\nAccording to this [Bugzilla report](https://bugzilla.xamarin.com/show_bug.cgi?id=25661), comment 12 shows a way to make an icon disabled. \r\n\r\nI find this solution sub-par, as each other platform demonstrates a disabled icon without having to have a second icon and an xml drawable. One linked image works well enough, and it should on all platforms.\r\n\r\nI have demonstrated it is simply fixed in my own code, inserting the following code in the UpdateMenuItemIcon method of the NavigationPageRenderer.\r\n\r\n```\r\n    if (!menuItem.IsEnabled)\r\n    {\r\n       iconDrawable.Mutate().SetColorFilter(AColor.Gray, PorterDuff.Mode.SrcIn);\r\n    }\r\n```\r\n\r\nIf given approval, I have no issue submitting a PR with this in it, or any other color than gray is fine as well.\r\n\r\n- Version with issue:\r\n- Last known good version: None\r\n- IDE: Visual Studio 2017 15.8.1\r\n- Platform Target Frameworks: All\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\niOS:\r\n\r\n![image](https://user-images.githubusercontent.com/6599983/44423963-22d13180-a54d-11e8-98c8-5c8f7cbf90af.png)\r\n\r\nAndroid:\r\n\r\n![image](https://user-images.githubusercontent.com/6599983/44424191-eeaa4080-a54d-11e8-828c-c24264234e91.png)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nExamine Control Gallery\r\n"},{"Id":"8146178596","Type":"IssuesEvent","CreatedAt":"2018-08-21T18:54:30","Actor":"PWaliaDev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3627","RelatedDescription":"Opened issue \"Back button on NavigationBar disappear on Android\" (#3627) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nBack button on Navigation Bar on Android gets disappear when bring application from background to foreground. To show back button application has to restart.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open page that have default back button on Navigation bar.\r\n2. Put the application in background.\r\n3. Bring application in foreground.\r\n4. Back button no longer is visible.\r\n\r\n### Expected Behavior\r\nBack button should always visible.\r\n\r\n### Actual Behavior\r\nBack button disappear.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks:\r\n  - Android: All versions\r\n- Affected Devices- Android\r\n"},{"Id":"8146007880","Type":"PullRequestEvent","CreatedAt":"2018-08-21T18:22:08","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3605","RelatedDescription":"Merged pull request \"[Core] When building SLN Forms.Core dll doesn't generate\" (#3605) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThe FixXFCoreAssembly task fails during a Design Time build which looks to mess up the metadata when doing an actual build. \r\n\r\n If it's a design time build then don't run ShameHat (this also fixes the errors that are permanent in the error list when opening a clean solution).  \r\nhttps://github.com/dotnet/project-system/blob/master/docs/design-time-builds.md#determining-whether-a-target-is-run-in-a-design-time-build\r\n\r\nWhen building Xamarin.Forms.SLN fresh the build fails because the Xamarin.Forms.Core.dll doesn't get produced.\r\n\r\nIf you manually build Xamarin.Forms.Core.csproj first then it produces the dll and everything works fine after that.\r\n\r\nIf you remove the *XFCorePostProcessor UsingTask* then everything compiles fine first go, but this Task shouldn't get in the way of producing \"Xamarin.Forms.Core.dll\". \r\n\r\nLooking at the build output it looks like msbuild makes the wrong determination about whether it should be running *Csc*\r\n\r\n```\r\n1>  Skipping target \"CoreCompile\" because all output files are up-to-date with respect to the input files.\r\n```\r\n\r\nI'll log a separate issue with Visual Studio \r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8145767214","Type":"IssuesEvent","CreatedAt":"2018-08-21T17:36:36","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3142","RelatedDescription":"Closed issue \"Regression Issue - Content set after an await is not visible #1760 NOT FIXED\" (#3142) at xamarin/Xamarin.Forms","RelatedBody":"### This is still not working with 3.1.0.583944\r\n\r\n### Description\r\nAndroid only, Master/Detail window opened from master, Content is blank if set after an await\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached app.  Label on the detail screen reads \"Before the await\", then changes to \"After the await\"\r\n2. Open the Master menu and choose the TestPage option.  This opens the same page as step 1.  The \"Before the await\" label is visible, then the view is blank.\r\n\r\n### Expected Behavior\r\nThe window should behave the same in both steps.\r\n\r\n### Actual Behavior\r\nThe second label is not displayed in the second step\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0 (and 2.4)\r\n- Last known good version: 2.3.4.270\r\n- IDE: VS2017\r\n- Affected Devices: Android\r\n\r\n### Reproduction Link\r\n[HeaderTest.zip](https://github.com/xamarin/Xamarin.Forms/files/2133118/HeaderTest.zip)\r\n"},{"Id":"8145559760","Type":"IssuesEvent","CreatedAt":"2018-08-21T16:56:19","Actor":"JohnHMP","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3626","RelatedDescription":"Opened issue \"ViewCellRenderer ignores the accessory (if any) when getting the width\" (#3626) at xamarin/Xamarin.Forms","RelatedBody":"https://github.com/xamarin/Xamarin.Forms/blob/a8eab7f46a394ee6e8f9824737684937bd0c7868/Xamarin.Forms.Platform.iOS/Cells/ViewCellRenderer.cs#L117\r\n\r\nIf an accessory is set then use size.Width - 20 (for example), otherwise use size.Width\r\n"},{"Id":"8145406711","Type":"IssuesEvent","CreatedAt":"2018-08-21T16:27:24","Actor":"ryebri","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3625","RelatedDescription":"Opened issue \"[GTK] Enhancement: Allow toolbar to be customized.\" (#3625) at xamarin/Xamarin.Forms","RelatedBody":"##Summary\r\nThe current implementation of the GTK Toolbar on the navigation pages does not allow for the toolbar to be disabled, or replaced with a custom toolbar.  An ideal solution would allow for resizing of the toolbar and adding custom elements.\r\n\r\n##API Changes\r\n\r\nIn order to facilitate replacing the toolbar, there would need to be a method to replace the NativeToolbarTracker in NavigationPageRenderer.cs.  To facilitate changing the size of the toolbar, the GtkToolbarConstants class would need to change from an internal to public class.  The ToolbarTracker class would need to have an ability to accept new GtkToolbarConstants.  \r\n\r\nAnother option for implementation would be to allow for the toolbar to be hidden and tie into the Xamarin Forms navigation stacks with a custom toolbar written using Xamarin Forms.\r\n\r\nToolbarTracker.Visible {get; set;}\r\n\r\n\r\n##Intended Use Case\r\nIntended use case is to provide a similar application experience across mobile and Linux platforms by having a similar toolbar layout in addition to similar page layouts.  Currently there is only one type of toolbar for the Xamarin.Forms.Platform.GTK library, which makes it challenging to customize without pulling the library, customizing it, and building it.  It would enhance the use case of using Xamarin Forms for Linux via GTK."},{"Id":"8145359704","Type":"PullRequestEvent","CreatedAt":"2018-08-21T16:18:46","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2896","RelatedDescription":"Merged pull request \"[UWP, WPF] Fixes rendering of the main page\" (#2896) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n- [WPF] Added check whether the page is loaded when set `MainPage`. Because need to load `FormsApplicationPage` for the correct `MainPage` set.\r\n- [UWP] Added support for null `MainPage` in the initialization of the application.\r\nScreencast: https://www.screencast.com/t/TXqChhQzqL\r\n\r\n### Bugs Fixed ###\r\n\r\n- Fixes #2704\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"8145359682","Type":"IssuesEvent","CreatedAt":"2018-08-21T16:18:46","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2704","RelatedDescription":"Closed issue \"[WPF] Page doesn't render\" (#2704) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nPage doesn't render if init navigation not in constructor\r\n\r\n### Steps to Reproduce\r\n1. Create Xamarin Forms app with Android and wpf projects.\r\n\r\n2 In Xamarin Forms app change method to this\r\npublic App()\r\n        {\r\n            InitializeComponent();\r\n            InitApp();     // used for DI        \r\n        }\r\n\r\nprotected override async void OnStart()\r\n        {\r\n            base.OnStart();\r\n            await  InitNavigation();\r\n            OnResume();\r\n        }\r\n\r\nprivate static Task InitNavigation()\r\n        {\r\n            var navigationService = IoC.Container.GetInstance<INavigationService>();\r\n            return navigationService.InitializeAsync(); // Navigate to page NavigateToAsync<MainViewModel>()\r\n        }\r\n\r\n3. Run on Android. The page is rendered.\r\n4. Run on WPF. The page is not rendered\r\n\r\n### Expected Behavior\r\nPage is rendered on wpf\r\n\r\n### Actual Behavior\r\nThe page can be rendered on WPF if run InitNavigation on Constructor\r\n\r\npublic App()\r\n        {\r\n            InitializeComponent();\r\n            InitApp();\r\n            InitNavigation();          \r\n        }\r\n\r\nprotected override async void OnStart()\r\n        {\r\n            base.OnStart();\r\n            OnResume();\r\n        }\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.469394-pre1, the same on previous\r\n- Last known good version:\r\n- IDE: VS2017 15.7.1\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8146960349","Type":"PullRequestEvent","CreatedAt":"2018-08-21T21:31:43","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4667","RelatedDescription":"Merged pull request \"[jenkins] Don't give VSTS a fake branch.\" (#4667) at xamarin/xamarin-macios","RelatedBody":"Something in VSTS changed, and now fake branch names don't work anymore.\n\nSo instead use real branch names (and for pull requests I've created a\n'pull-request' branch we can use)."},{"Id":"8146803568","Type":"IssuesEvent","CreatedAt":"2018-08-21T20:58:13","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4421","RelatedDescription":"Closed issue \"[Xcode10]Two Simulators are launching while deploying an iOS App with Xcode10-beta3\" (#4421) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Install Xamarin.iOS 11.99.1.44, Xcode10-beta3 (10L201y)\r\n2. Create an iOS app \r\n3. Build and deploy it on simulator eg: iPhoneX iOS 12.0\r\n\r\n### Expected Behavior\r\nApp builds, deploys and launch on iPhoneX iOS 12.0\r\n### Actual Behavior\r\nApp builds, deploys and launch on iPhoneX iOS 12.0. But a second simulator also opens iPhone4S 9.3.5\r\n### Environment\r\n\r\n```\r\nhttps://gist.github.com/GouriKumari/eeff3d2252cc2a2baddccacaeb14a76a\r\n```\r\n\r\n### Build Logs\r\n\r\nScreenshot: https://screencast.com/t/aH3UvYDYzI1V\r\n\r\n"},{"Id":"8146780501","Type":"IssuesEvent","CreatedAt":"2018-08-21T20:53:42","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4674","RelatedDescription":"Opened issue \"[Makefile] Incorrect 'HEAD' word used as branch for xcode10 pkg\" (#4674) at xamarin/xamarin-macios","RelatedBody":"Our packages from the xcode10 branch have an incorrect \"branch\" when looking at the version information from VSMac.\r\n\r\nSee:\r\n\r\n```\r\nXamarin.iOS\r\nVersion: 11.99.3.243 (Visual Studio Enterprise)\r\nHash: 347f472b0\r\nBranch: HEAD\r\nBuild date: 2018-08-21 04:53:44-0400\r\n```\r\n\r\nThis comes from that code: https://github.com/xamarin/xamarin-macios/blob/5995833903a99a310803cd64a505c5464e42c09e/Makefile#L54-L58"},{"Id":"8146561012","Type":"PullRequestEvent","CreatedAt":"2018-08-21T20:10:46","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4673","RelatedDescription":"Opened pull request \"[apidiff] Update XML references with 15.8 as the new base (master)\" (#4673) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8146429229","Type":"PullRequestEvent","CreatedAt":"2018-08-21T19:44:27","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4672","RelatedDescription":"Opened pull request \"[xtro] Fix xtro to report some missing API. Fix #4407\" (#4672) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8146065863","Type":"PullRequestEvent","CreatedAt":"2018-08-21T18:33:06","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4671","RelatedDescription":"Opened pull request \"[apidiff] Update XML references with 15.8 as the new base\" (#4671) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8146049829","Type":"PullRequestEvent","CreatedAt":"2018-08-21T18:30:05","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4668","RelatedDescription":"Merged pull request \"Bump maccore for d15-8 merge\" (#4668) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":107,"FavoriteCount":70,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":34,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":47,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":171,"FavoriteCount":85,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":46,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":57,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":261,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":24,"RawContent":null}]}},"RunOn":"2018-08-22T05:30:51.8147368Z","RunDurationInMilliseconds":4248}