{"Data":{"GitHub":{"Issues":[{"Id":"329261557","IsPullRequest":false,"CreatedAt":"2018-06-06T00:03:52","Actor":"Ivanidzo4ka","Number":"300","RawContent":null,"Title":"Result of OVA macro doesn't respect auto normalization.","State":"closed","Body":"```\r\nvar dataPath = GetDataPath(@\"iris.txt\");\r\nusing (var env = new TlcEnvironment(42))\r\n{\r\n    var subGraph = env.CreateExperiment();\r\n    var learnerInput = new ML.Trainers.StochasticDualCoordinateAscentBinaryClassifier\r\n    {\r\n        NumThreads = 1\r\n    };\r\n    var learnerOutput = subGraph.Add(learnerInput);\r\n\r\n    var experiment = env.CreateExperiment();\r\n    var importInput = new ML.Data.TextLoader(dataPath);\r\n    importInput.Arguments.Column = new ML.Data.TextLoaderColumn[]\r\n    {\r\n        new ML.Data.TextLoaderColumn { Name = \"Label\", Source = new[] { new ML.Data.TextLoaderRange(0) } },\r\n        new ML.Data.TextLoaderColumn { Name = \"Features\", Source = new[] { new ML.Data.TextLoaderRange(1,4) } }\r\n    };\r\n\r\n    var importOutput = experiment.Add(importInput);\r\n\r\n    var oneVersusAll = new ML.Models.OneVersusAll\r\n    {\r\n        TrainingData = importOutput.Data,\r\n        Nodes = subGraph,\r\n        UseProbabilities = true,\r\n    };\r\n    var ovaOutput = experiment.Add(oneVersusAll);\r\n    var scoreInput = new ML.Transforms.DatasetScorer\r\n    {\r\n        Data = importOutput.Data,\r\n        PredictorModel = ovaOutput.PredictorModel\r\n    };\r\n    var scoreOutput = experiment.Add(scoreInput);\r\n\r\n    var evalInput = new ML.Models.ClassificationEvaluator\r\n    {\r\n        Data = scoreOutput.ScoredData\r\n    };\r\n    var evalOutput = experiment.Add(evalInput);\r\n    experiment.Compile();\r\n    experiment.SetInput(importInput.InputFile, new SimpleFileHandle(env, dataPath, false, false));\r\n    experiment.Run();\r\n}\r\n```\r\n\r\nPredictor got trained on normalized features, but during prediction time it got non-normalized features. ","Url":"https://github.com/dotnet/machinelearning/issues/300","RelatedDescription":"Closed issue \"Result of OVA macro doesn't respect auto normalization.\" (#300)"},{"Id":"329620778","IsPullRequest":true,"CreatedAt":"2018-06-05T23:40:30","Actor":"Ivanidzo4ka","Number":"310","RawContent":null,"Title":"OVA should respect normalization in underlying learner","State":"closed","Body":"Address #300 ","Url":"https://github.com/dotnet/machinelearning/pull/310","RelatedDescription":"Closed or merged PR \"OVA should respect normalization in underlying learner\" (#310)"},{"Id":"329655997","IsPullRequest":true,"CreatedAt":"2018-06-05T23:08:57","Actor":"Ivanidzo4ka","Number":"316","RawContent":null,"Title":"Add Cluster evaluator","State":"open","Body":"Address #312 ","Url":"https://github.com/dotnet/machinelearning/pull/316","RelatedDescription":"Open PR \"Add Cluster evaluator\" (#316)"},{"Id":"329648904","IsPullRequest":false,"CreatedAt":"2018-06-05T22:34:50","Actor":"sfilipi","Number":"315","RawContent":null,"Title":"ExecuteGraphCommand.GetOutputToPath should not throw if the outputs are null ","State":"open","Body":"### System information\r\n\r\n- **.NET Version (eg., dotnet --info)**: 0.3.0-preview-26604-1\r\n\r\n### Issue\r\n\r\nConstruct an entry-points graph invoking the CV macro, and specifying the Warnings output of the CV macro, as the overall graph output. \r\n\r\nNotice that if the run produced no warnings, (warnings idv is null) ExecuteGraphCommand.GetOutputToPath throws. I think it should just warn and proceed to saving the rest of the output. \r\n\r\n\r\n### Source code / logs\r\n\r\nGraph used:\r\n\r\n                {\r\n\t\"Inputs\": {\r\n\t\t\"TrainFile\": \"..\\\\Sent140_Train.tsv\"\r\n\t},\r\n\t\"Outputs\": {\r\n\t\t\"PredictorModel0\": \"PredictorModel0.zip\",\r\n\t\t\"Warnings0\": \"Warnings0.csv\",\r\n\t\t\"OverallMetrics0\": \"OverallMetrics0.csv\",\r\n\t\t\"PerInstanceMetrics0\": \"PerInstanceMetrics0.csv\",\r\n\t\t\"ConfusionMatrix0\": \"ConfusionMatrix0.csv\"\r\n\t},\r\n\t\"Nodes\": [\r\n\t\t{\r\n\t\t\t\"Name\": \"Data.CustomTextLoader\",\r\n\t\t\t\"Inputs\": {\r\n\t\t\t\t\"InputFile\": \"$TrainFile\",\r\n\t\t\t\t\"CustomSchema\": \" sep=tab header+ col=SentimentText:TX:3  col=Sentiment:R4:1 \"\r\n\t\t\t},\r\n\t\t\t\"Outputs\": {\r\n\t\t\t\t\"Data\": \"$TrainDataView\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"Name\": \"Models.CrossValidator\",\r\n\t\t\t\"Inputs\": {\r\n\t\t\t\t\"Kind\": \"SignatureBinaryClassifierTrainer\",\r\n\t\t\t\t\"NumFolds\": 2,\r\n\t\t\t\t\"Data\": \"$TrainDataView\",\r\n\t\t\t\t\"Nodes\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Transforms.ColumnCopier\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"Column\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"Name\": \"Label\",\r\n\t\t\t\t\t\t\t\t\t\"Source\": \"Sentiment\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"Data\": \"$data0\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"OutputData\": \"$Copy_DataView_Output_1528237424459_579\",\r\n\t\t\t\t\t\t\t\"Model\": \"$Copy_TransformModel_Output_1528237424459_493\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Transforms.TextFeaturizer\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"Column\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"FeaturesText\",\r\n\t\t\t\t\t\t\t\t\"Source\": [\r\n\t\t\t\t\t\t\t\t\t\"SentimentText\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"Data\": \"$Copy_DataView_Output_1528237424459_579\",\r\n\t\t\t\t\t\t\t\"WordFeatureExtractor\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"NGram\",\r\n\t\t\t\t\t\t\t\t\"Settings\": {\r\n\t\t\t\t\t\t\t\t\t\"NgramLength\": 2,\r\n\t\t\t\t\t\t\t\t\t\"SkipLength\": 0,\r\n\t\t\t\t\t\t\t\t\t\"AllLengths\": true,\r\n\t\t\t\t\t\t\t\t\t\"MaxNumTerms\": [\r\n\t\t\t\t\t\t\t\t\t\t10000000\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\"Weighting\": \"Tf\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"CharFeatureExtractor\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"NGram\",\r\n\t\t\t\t\t\t\t\t\"Settings\": {\r\n\t\t\t\t\t\t\t\t\t\"NgramLength\": 3,\r\n\t\t\t\t\t\t\t\t\t\"SkipLength\": 0,\r\n\t\t\t\t\t\t\t\t\t\"AllLengths\": true,\r\n\t\t\t\t\t\t\t\t\t\"MaxNumTerms\": [\r\n\t\t\t\t\t\t\t\t\t\t10000000\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\"Weighting\": \"Tf\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"OutputData\": \"$Text_DataView_Output_1528237424462_956\",\r\n\t\t\t\t\t\t\t\"Model\": \"$Text_TransformModel_Output_1528237424462_164\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Transforms.ColumnConcatenator\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"Column\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"Name\": \"Features\",\r\n\t\t\t\t\t\t\t\t\t\"Source\": [\r\n\t\t\t\t\t\t\t\t\t\t\"FeaturesText\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"Data\": \"$Text_DataView_Output_1528237424462_956\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"OutputData\": \"$Concat_DataView_Output_1528237424464_228\",\r\n\t\t\t\t\t\t\t\"Model\": \"$Concat_TransformModel_Output_1528237424464_5\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Trainers.AveragedPerceptronBinaryClassifier\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"TrainingData\": \"$Concat_DataView_Output_1528237424464_228\",\r\n\t\t\t\t\t\t\t\"LossFunction\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"HingeLoss\",\r\n\t\t\t\t\t\t\t\t\"Settings\": {\r\n\t\t\t\t\t\t\t\t\t\"Margin\": 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"NumIterations\": 10,\r\n\t\t\t\t\t\t\t\"Calibrator\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"PlattCalibrator\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"PredictorModel\": \"$ap_PredictorModel_Output_1528237424465_314\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Transforms.ManyHeterogeneousModelCombiner\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"TransformModels\": [\r\n\t\t\t\t\t\t\t\t\"$Copy_TransformModel_Output_1528237424459_493\",\r\n\t\t\t\t\t\t\t\t\"$Text_TransformModel_Output_1528237424462_164\",\r\n\t\t\t\t\t\t\t\t\"$Concat_TransformModel_Output_1528237424464_5\"\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"PredictorModel\": \"$ap_PredictorModel_Output_1528237424465_314\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"PredictorModel\": \"$PredictorModel0\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\"Data\": \"$data0\"\r\n\t\t\t\t},\r\n\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\"PredictorModel\": \"$PredictorModel0\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"Outputs\": {\r\n\t\t\t\t\"PredictorModel\": \"$PredictorModel0\",\r\n\t\t\t\t\"Warnings\": \"$Warnings0\",\r\n\t\t\t\t\"OverallMetrics\": \"$OverallMetrics0\",\r\n\t\t\t\t\"PerInstanceMetrics\": \"$PerInstanceMetrics0\",\r\n\t\t\t\t\"ConfusionMatrix\": \"$ConfusionMatrix0\"\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}\r\n","Url":"https://github.com/dotnet/machinelearning/issues/315","RelatedDescription":"Open issue \"ExecuteGraphCommand.GetOutputToPath should not throw if the outputs are null \" (#315)"},{"Id":"329640135","IsPullRequest":false,"CreatedAt":"2018-06-05T21:58:03","Actor":"sfilipi","Number":"314","RawContent":null,"Title":"The transforms entry points don't contain function information ","State":"open","Body":"### System information\r\n\r\n- **.NET Version (eg., dotnet --info)**: 0.3.0-preview-26604-1\r\n\r\n### Issue\r\n\r\nThe transforms entry point should contain information about the way in which they manipulate the data: schema manipulation, featurizer, pre-processing etc. \r\n\r\nSystems interfacing with ML.NET through entry points might need to classify the transforms based on the function their perform over the dataset, and present them to their users in that fashion. ","Url":"https://github.com/dotnet/machinelearning/issues/314","RelatedDescription":"Open issue \"The transforms entry points don't contain function information \" (#314)"},{"Id":"329638918","IsPullRequest":false,"CreatedAt":"2018-06-05T21:53:30","Actor":"sfilipi","Number":"313","RawContent":null,"Title":"The trainer entry points don't contain sufficient information about the algorithm type (linear, tree etc)","State":"open","Body":"### System information\r\n\r\n- **.NET Version (eg., dotnet --info)**: 0.3.0-preview-26604-1\r\n\r\n### Issue\r\nThe trainer entry points don't contain any information about their algorithm type ( tree, linear)\r\nSystems interfacing with ML.NET in this fashion might need to present to their users the information classified based on this criteria. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/313","RelatedDescription":"Open issue \"The trainer entry points don't contain sufficient information about the algorithm type (linear, tree etc)\" (#313)"},{"Id":"329628280","IsPullRequest":false,"CreatedAt":"2018-06-05T21:16:59","Actor":"OliaG","Number":"312","RawContent":null,"Title":"Add API for Cluster Evaluator ","State":"open","Body":"We need a public API for Cluster Evaluator\r\n","Url":"https://github.com/dotnet/machinelearning/issues/312","RelatedDescription":"Open issue \"Add API for Cluster Evaluator \" (#312)"},{"Id":"329623049","IsPullRequest":false,"CreatedAt":"2018-06-05T21:00:35","Actor":"Ivanidzo4ka","Number":"311","RawContent":null,"Title":"Simplification of experiment methods","State":"open","Body":"Few things so far:\r\nA) We have this pattern in our code:\r\n```\r\nvar importInput = new ML.Data.TextLoader(dataPath);\r\n...\r\nexperiment.SetInput(importInput.InputFile, new SimpleFileHandle(env, dataPath, false, false));\r\n```\r\nAnd I'm not sure why I have to specify same file twice.\r\nB) We have this pattern everywhere in our code:\r\n```\r\nexperiment.Compile();\r\nexperiment.SetInput(importInput.InputFile, new SimpleFileHandle(env, dataPath, false, false));\r\nexperiment.Run();\r\n```\r\nCan we simplify this into one method instead of  3 different calls?","Url":"https://github.com/dotnet/machinelearning/issues/311","RelatedDescription":"Open issue \"Simplification of experiment methods\" (#311)"},{"Id":"329607195","IsPullRequest":false,"CreatedAt":"2018-06-05T20:11:42","Actor":"Amine-Smahi","Number":"309","RawContent":null,"Title":"TextLoader is not identified","State":"open","Body":"### System information\r\n.NET Command Line Tools (2.1.200)\r\n\r\nProduct Information:\r\n Version:            2.1.200\r\n Commit SHA-1 hash:  2edba8d7f1\r\n\r\nRuntime Environment:\r\n OS Name:     deepin\r\n OS Version:  15.5\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /home/amine-smahi/dotnet/sdk/2.1.200/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.7\r\n  Build    : 2d61d0b043915bc948ebf98836fefe9ba942be11\r\n\r\n\r\n### Issue\r\n\r\nWhen following all Getting started with ML.NET guides or using the samples , i get a missing reference message saying that TextLoader is missing are you missing assemblies\r\n\r\n### Source code / logs\r\nfor example \r\n`  var testData = new TextLoader<SentimentData>(_testDataPath, useHeader: true, separator: \"tab\"); `\r\n","Url":"https://github.com/dotnet/machinelearning/issues/309","RelatedDescription":"Open issue \"TextLoader is not identified\" (#309)"},{"Id":"329597486","IsPullRequest":false,"CreatedAt":"2018-06-05T19:40:55","Actor":"Ivanidzo4ka","Number":"308","RawContent":null,"Title":"CollectionDataSource fail with CrossValidator and TrainTestEvaluator","State":"open","Body":"System information\r\n.NET Version (eg., dotnet --info): 0.3.0-preview-26604-1\r\n```\r\nvar pipeline = new LearningPipeline();\r\nvar data = new List<IrisData>() {\r\n    new IrisData { SepalLength = 1f, SepalWidth = 1f ,PetalLength=0.3f, PetalWidth=5.1f, Label=1},\r\n    new IrisData { SepalLength = 1f, SepalWidth = 1f ,PetalLength=0.3f, PetalWidth=5.1f, Label=1},\r\n    new IrisData { SepalLength = 1.2f, SepalWidth = 0.5f ,PetalLength=0.3f, PetalWidth=5.1f, Label=0}\r\n};\r\nvar collection = CollectionDataSource.Create(data);\r\n\r\npipeline.Add(collection);\r\npipeline.Add(new ColumnConcatenator(outputColumn: \"Features\",\r\n    \"SepalLength\", \"SepalWidth\", \"PetalLength\", \"PetalWidth\"));\r\npipeline.Add(new StochasticDualCoordinateAscentClassifier());\r\nvar testCollection = CollectionDataSource.Create(data);\r\nvar tt = new TrainTestEvaluator().TrainTestEvaluate<IrisData, IrisPrediction>(pipeline, testCollection);\r\nvar cv = new CrossValidator() {  Kind = MacroUtilsTrainerKinds.SignatureMultiClassClassifierTrainer}.CrossValidate<IrisData, IrisPrediction>(pipeline);\r\n```\r\nMessage: System.ArgumentOutOfRangeException : Score column is missing\r\nParameter name: ScoreColumn\r\nLooks like test collection in both cases are empty during evaluation\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/308","RelatedDescription":"Open issue \"CollectionDataSource fail with CrossValidator and TrainTestEvaluator\" (#308)"},{"Id":"329596456","IsPullRequest":false,"CreatedAt":"2018-06-05T19:37:34","Actor":"Ivanidzo4ka","Number":"307","RawContent":null,"Title":"TrainTestEvaluator can't accept same collection for train and testing.","State":"open","Body":"System information\r\n.NET Version (eg., dotnet --info): 0.3.0-preview-26604-1\r\n```\r\nvar pipeline = new LearningPipeline();\r\nvar data = new List<IrisData>() {\r\n    new IrisData { SepalLength = 1f, SepalWidth = 1f ,PetalLength=0.3f, PetalWidth=5.1f, Label=1},\r\n    new IrisData { SepalLength = 1f, SepalWidth = 1f ,PetalLength=0.3f, PetalWidth=5.1f, Label=1},\r\n    new IrisData { SepalLength = 1.2f, SepalWidth = 0.5f ,PetalLength=0.3f, PetalWidth=5.1f, Label=0}\r\n};\r\nvar collection = CollectionDataSource.Create(data);\r\npipeline.Add(collection);\r\npipeline.Add(new ColumnConcatenator(outputColumn: \"Features\",\r\n    \"SepalLength\", \"SepalWidth\", \"PetalLength\", \"PetalWidth\"));\r\npipeline.Add(new StochasticDualCoordinateAscentClassifier());\r\nvar tt = new TrainTestEvaluator().TrainTestEvaluate<IrisData, IrisPrediction>(pipeline, collection);\r\n```\r\n\r\nMessage: System.InvalidOperationException : Port 'Var_c3b11d6c322a4a65ab0b8a5c7054c94c' is already set\r\n","Url":"https://github.com/dotnet/machinelearning/issues/307","RelatedDescription":"Open issue \"TrainTestEvaluator can't accept same collection for train and testing.\" (#307)"},{"Id":"329594842","IsPullRequest":false,"CreatedAt":"2018-06-05T19:32:27","Actor":"Ivanidzo4ka","Number":"306","RawContent":null,"Title":"CrossValidation doesn't autoinfer type of task.","State":"open","Body":"System information\r\n.NET Version (eg., dotnet --info): 0.3.0-preview-26604-1\r\n\r\n```string dataPath = GetDataPath(\"iris.txt\");\r\nvar pipeline = new LearningPipeline();\r\npipeline.Add(new TextLoader(dataPath).CreateFrom<IrisData>(useHeader: false));\r\npipeline.Add(new ColumnConcatenator(outputColumn: \"Features\",\r\n    \"SepalLength\", \"SepalWidth\", \"PetalLength\", \"PetalWidth\"));\r\npipeline.Add(new StochasticDualCoordinateAscentClassifier());\r\nvar cv = new CrossValidator() .CrossValidate<IrisData, IrisPrediction>(pipeline);\r\n```\r\nthis will fail with Score column is missing and I have to manually add kind to CrossValidator.\r\n```\r\nvar cv = new CrossValidator() { Kind = MacroUtilsTrainerKinds.SignatureMultiClassClassifierTrainer }.CrossValidate<IrisData, IrisPrediction>(pipeline);\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/306","RelatedDescription":"Open issue \"CrossValidation doesn't autoinfer type of task.\" (#306)"},{"Id":"329546783","IsPullRequest":true,"CreatedAt":"2018-06-05T17:31:37","Actor":"codemzs","Number":"304","RawContent":null,"Title":"update sample in README.MD with 0.2 features.","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/304","RelatedDescription":"Closed or merged PR \"update sample in README.MD with 0.2 features.\" (#304)"},{"Id":"329551913","IsPullRequest":false,"CreatedAt":"2018-06-05T17:23:09","Actor":"yaeldekel","Number":"305","RawContent":null,"Title":"CSharpApiGenerator doesn't assign default values to Optional<> type.","State":"open","Body":"The code generated for an argument that is defined as\r\nstring LabelColumn = \"Label\";\r\n\r\nis:\r\n            /// <summary>\r\n            /// Column to use for labels\r\n            /// </summary>\r\n            public string LabelColumn { get; set; } = \"Label\";\r\n\r\nbut the code generate for an argument that is defined as\r\npublic Optional<string> GroupColumn = Optional<string>.Implicit(\"GroupId\");\r\n\r\nis:\r\n\r\n            /// <summary>\r\n            /// Column to use for grouping\r\n            /// </summary>\r\n            public Microsoft.ML.Runtime.EntryPoints.Optional<string> GroupColumn { get; set; }\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/305","RelatedDescription":"Open issue \"CSharpApiGenerator doesn't assign default values to Optional<> type.\" (#305)"},{"Id":"329127300","IsPullRequest":false,"CreatedAt":"2018-06-05T17:17:22","Actor":"yaeldekel","Number":"292","RawContent":null,"Title":"Cross validation macro doesn't work with non-default label column name","State":"closed","Body":"If the label column is not called \"Label\" there is no way to pass the correct column name to the CV macro for it to pass to the evaluator.","Url":"https://github.com/dotnet/machinelearning/issues/292","RelatedDescription":"Closed issue \"Cross validation macro doesn't work with non-default label column name\" (#292)"},{"Id":"329124088","IsPullRequest":true,"CreatedAt":"2018-06-05T17:17:22","Actor":"yaeldekel","Number":"291","RawContent":null,"Title":"Get the cross validation macro to work with non-default column names","State":"closed","Body":"When the label/weight/group Id column has a non-default name, we need to know how to pass that name to the evaluator in the CV macro.\r\nFixes #292 .","Url":"https://github.com/dotnet/machinelearning/pull/291","RelatedDescription":"Closed or merged PR \"Get the cross validation macro to work with non-default column names\" (#291)"},{"Id":"329461592","IsPullRequest":true,"CreatedAt":"2018-06-05T14:10:19","Actor":"eerhardt","Number":"303","RawContent":null,"Title":"Update release notes link to use aka.ms. (#294)","State":"closed","Body":"Our release notes link is broken because the `Documentation` was renamed to `docs`. Fix this for the future to use a redirection link.\r\n\r\nPorting #294 to `release/preview`.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/303","RelatedDescription":"Closed or merged PR \"Update release notes link to use aka.ms. (#294)\" (#303)"},{"Id":"329351355","IsPullRequest":false,"CreatedAt":"2018-06-05T08:28:02","Actor":"linmajia","Number":"302","RawContent":null,"Title":"Shall we unify the file encodings of C# source files?","State":"open","Body":"C# source files have different file encodings. E.g. some have UTF-8 with BOM file encoding, while some have ASCII encoding.\r\n\r\n![image](https://user-images.githubusercontent.com/9329359/40964166-fa80640a-68dc-11e8-8ae7-00633e22bd56.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/302","RelatedDescription":"Open issue \"Shall we unify the file encodings of C# source files?\" (#302)"},{"Id":"329268980","IsPullRequest":true,"CreatedAt":"2018-06-05T08:13:06","Actor":"GalOshri","Number":"301","RawContent":null,"Title":"Add release notes for ML.NET 0.2","State":"closed","Body":"This adds release notes for ML.NET 0.2.","Url":"https://github.com/dotnet/machinelearning/pull/301","RelatedDescription":"Closed or merged PR \"Add release notes for ML.NET 0.2\" (#301)"},{"Id":"329150249","IsPullRequest":true,"CreatedAt":"2018-06-04T23:54:02","Actor":"eerhardt","Number":"294","RawContent":null,"Title":"Update release notes link to use aka.ms.","State":"closed","Body":"Our release notes link is broken because the `Documentation` was renamed to `docs`. Fix this for the future to use a redirection link.\r\n\r\nI will also port this change to the release branch so it gets updated in v0.2.","Url":"https://github.com/dotnet/machinelearning/pull/294","RelatedDescription":"Closed or merged PR \"Update release notes link to use aka.ms.\" (#294)"},{"Id":"329251277","IsPullRequest":false,"CreatedAt":"2018-06-04T23:29:52","Actor":"sfilipi","Number":"299","RawContent":null,"Title":"Macro outputs should not be required","State":"open","Body":"### System information\r\n\r\n- windows\r\n- version 0.3.0-preview-26604-1 \r\n\r\n### Issue\r\nThe CV macro outputs (and any graph outputs) should not be mandatory. \r\nCurrently the CV macro is not checking for presence of the metrics, before  adding the metrics node to the outputs, and throwing if they are missing. \r\n\r\nI don't think any output should be required, and especially some metrics like 'Confusion Matrix' don't make sense for every kinds of task. \r\n\r\nTo reproduce, compose an entry points graph with the CV  macro present, and don't specify outputs for it. Run this graph. \r\n### Source code / logs\r\n\r\n{System.InvalidOperationException: Invalid parameter 'ConfusionMatrix': parameter does not exist.\r\n   at Microsoft.ML.Runtime.EntryPoints.EntryPointNode.GetOutputVariableName(String paramName)\r\n   at Microsoft.ML.Runtime.EntryPoints.CrossValidationMacro.CrossValidate(IHostEnvironment env, Arguments input, EntryPointNode node)}\r\n","Url":"https://github.com/dotnet/machinelearning/issues/299","RelatedDescription":"Open issue \"Macro outputs should not be required\" (#299)"},{"Id":"329218478","IsPullRequest":true,"CreatedAt":"2018-06-04T22:55:35","Actor":"codemzs","Number":"297","RawContent":null,"Title":"Remove stale line of code from test.","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/297","RelatedDescription":"Closed or merged PR \"Remove stale line of code from test.\" (#297)"},{"Id":"329237995","IsPullRequest":false,"CreatedAt":"2018-06-04T22:23:18","Actor":"sfilipi","Number":"298","RawContent":null,"Title":"It would be helpful to have a ML.NET symbol package ","State":"open","Body":" For debugging, it would be great to publish symbol package. ","Url":"https://github.com/dotnet/machinelearning/issues/298","RelatedDescription":"Open issue \"It would be helpful to have a ML.NET symbol package \" (#298)"},{"Id":"329197694","IsPullRequest":true,"CreatedAt":"2018-06-04T20:36:23","Actor":"pkulikov","Number":"296","RawContent":null,"Title":"Fixed typo in the method summary","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/296","RelatedDescription":"Closed or merged PR \"Fixed typo in the method summary\" (#296)"},{"Id":"328686906","IsPullRequest":true,"CreatedAt":"2018-06-04T19:54:22","Actor":"rogancarr","Number":"289","RawContent":null,"Title":"ML.NET-242: FastTreeRanking per-iteration loss metrics are empty","State":"closed","Body":"When training a FastTreeRanker using the `testFrequency` parameter, it is expected that NDCG is printed every testFrequency iterations. However, instead of NDCG, only empty strings are printed.\r\n\r\nThe root cause was that the `MaxDCG` property of the dataset was never calculated, so the NDCG calculation is aborted, leaving an empty string as a result.\r\n\r\nThis PR fixes the problem by computing the `MaxDCG` for the dataset when the Tests are defined (so that if the tests are not defined, the `MaxDCG` will never be calculated). Here, the `truncationLevel` of the `MaxDCG` calculation is hardcoded to 10, which is a nice round number, and within the range of the `DiscountMap` (11).\r\n\r\nFixes #242","Url":"https://github.com/dotnet/machinelearning/pull/289","RelatedDescription":"Closed or merged PR \"ML.NET-242: FastTreeRanking per-iteration loss metrics are empty\" (#289)"},{"Id":"329172808","IsPullRequest":true,"CreatedAt":"2018-06-04T18:47:33","Actor":"sfilipi","Number":"295","RawContent":null,"Title":"Adding documentation about entry points, and entry points graphs: EntryPoints.md and GraphRunner.md","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/295","RelatedDescription":"Open PR \"Adding documentation about entry points, and entry points graphs: EntryPoints.md and GraphRunner.md\" (#295)"},{"Id":"329138747","IsPullRequest":true,"CreatedAt":"2018-06-04T16:56:59","Actor":"helgeu","Number":"293","RawContent":null,"Title":"Corrected norwegian bokmal stopwords and removed nynorsk words","State":"open","Body":"Went through:\r\nhttps://raw.githubusercontent.com/ecrmnn/norwegian-stop-words/master/dist/stop-words.txt\r\nhttps://raw.githubusercontent.com/crodas/TextRank/master/lib/TextRank/Stopword/norwegian-stopwords.txt\r\nhttps://raw.githubusercontent.com/Alir3z4/stop-words/master/norwegian.txt\r\nhttps://raw.githubusercontent.com/helgeu/machinelearning/master/src/Microsoft.ML.Transforms/Text/StopWords/Norwegian_Bokmal.txt\r\nhttp://snowball.tartarus.org/algorithms/norwegian/stop.txt\r\n\r\nto collect and correct the Norwegian stopwords.\r\n\r\nRemoved new norse (nynorsk) Version too.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/293","RelatedDescription":"Open PR \"Corrected norwegian bokmal stopwords and removed nynorsk words\" (#293)"},{"Id":"328663134","IsPullRequest":true,"CreatedAt":"2018-06-04T15:31:41","Actor":"yaeldekel","Number":"287","RawContent":null,"Title":"Fix a DllImport issue for frameworks that do not add the \".dll\" suffix automatically","State":"closed","Body":"In some cases, the \".dll\" suffix is not added, causing the DllImportAttribute to not find the dll on Linux machines.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/287","RelatedDescription":"Closed or merged PR \"Fix a DllImport issue for frameworks that do not add the \".dll\" suffix automatically\" (#287)"},{"Id":"328753546","IsPullRequest":false,"CreatedAt":"2018-06-02T15:37:51","Actor":"airduster","Number":"290","RawContent":null,"Title":"Installing ML.NET on target framework .NET Framework=4.7.2 (Latest) Fails via Nuget","State":"open","Body":"### System information\r\n\r\n- **OS Windows 7**:\r\n- **.NET 4.7.2 (Latest)**: \r\n- **Visual Studio 2015 (x64)**: \r\n\r\n### Issue\r\n\r\n- **What did you do:**\r\n\r\n Attempting to install Microsoft.ML package via Nuget on project that has .NET targetframework = 4.7.2 (latest)\r\n\r\n- **What happened?: '**\r\n\r\npackage install failed with the following message \r\n\r\nCould not install package 'Microsoft.ML 0.1.0'. You are trying to install this package into a project that targets '.NETFramework,Version=v4.7.2', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n\r\n\r\n- **What did you expect?:**\r\nThe documentation indicates this can be installed on netcore **or .NET Framework.** Am I doing something wrong? To Verify I manually downloaded the Microsoft.ML package from nuget and in \"Microsoft.ML.nuspec\" under target frameworks only netcore 2.0 is listed for v0.1.0 of ML.NET\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/290","RelatedDescription":"Open issue \"Installing ML.NET on target framework .NET Framework=4.7.2 (Latest) Fails via Nuget\" (#290)"},{"Id":"328677227","IsPullRequest":false,"CreatedAt":"2018-06-01T22:20:16","Actor":"jwood803","Number":"288","RawContent":null,"Title":"Splitting datasets to train and test sets?","State":"open","Body":"Is there a way to do this with the current release? \r\n\r\nI noticed there's a [`TrainTestSplitter`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.traintestdatasetsplitter?view=ml-dotnet), but there doesn't seem to be any documentation on how to use it and have been unsuccessful when I was messing with it. \r\n\r\nThanks!","Url":"https://github.com/dotnet/machinelearning/issues/288","RelatedDescription":"Open issue \"Splitting datasets to train and test sets?\" (#288)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-06T05:30:35.670971Z","RunDurationInMilliseconds":947}