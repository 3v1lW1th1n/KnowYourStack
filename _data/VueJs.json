{"Data":{"Vue-Issues":{"Issues":[{"Id":"400945318","IsPullRequest":false,"CreatedAt":"2019-01-19T03:32:32","Actor":"DominusVilicus","Number":"9342","RawContent":null,"Title":"[feature] Allow unary slot tag","State":"closed","Body":"### What problem does this feature solve?\r\nI'm not sure if this would go against the HTML5 spec, but I think vue should allow `<slot></slot>` to just be `<slot>` or `<slot/>`. Often, users don't want to put any content inside the slot, and it becomes inconvenient to add a closing tag when there's no content inside\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<slot>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9342","RelatedDescription":"Closed issue \"[feature] Allow unary slot tag\" (#9342)"},{"Id":"400898727","IsPullRequest":true,"CreatedAt":"2019-01-18T21:39:04","Actor":"bughit","Number":"9341","RawContent":null,"Title":"decode single quotes in html attributes","State":"open","Body":"pretty much everything in the ruby world, html escapes single quotes\r\nhttps://github.com/ruby/ruby/blob/trunk/lib/cgi/util.rb#L30\r\n\r\nso, for example, haml pre-processed vue templates will have single quotes escaped\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9341","RelatedDescription":"Open PR \"decode single quotes in html attributes\" (#9341)"},{"Id":"400789287","IsPullRequest":false,"CreatedAt":"2019-01-18T20:13:59","Actor":"frlinw","Number":"9340","RawContent":null,"Title":"v-if & event handler","State":"closed","Body":"### Version\r\n2.6.0-beta.1\r\n\r\n### Reproduction link\r\nhttps://codepen.io/frlinw/pen/OreZMz\r\n\r\n### Steps to reproduce\r\nClick on \"Click me\"\r\n\r\n### What is expected?\r\ndemo with v2.5.22 show the expected behavior: https://codepen.io/frlinw/pen/XoLYMR \r\n\r\nthe \"Dropdown\" component should not be able to handle a click event which is supposed to create it\r\n\r\n### What is actually happening?\r\nthe Dropdown is automatically closed because it handles the click event\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9340","RelatedDescription":"Closed issue \"v-if & event handler\" (#9340)"},{"Id":"399257720","IsPullRequest":true,"CreatedAt":"2019-01-18T16:20:07","Actor":"DominusVilicus","Number":"9324","RawContent":null,"Title":"[feature] allow template to be function in vue-server-renderer","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\n@yyx990803 I've found a solution to #9205 \r\n\r\nIt's a very simple addition, to the `vue-server-renderer` package that has tonnes of use-cases and actually makes the `vue-server-renderer` much easier to use, as it provides a template function to the bundle renderer template compiler.\r\n\r\nThis isn't a breaking change and doesn't really need any tests, as it is a user-provided function\r\n\r\nIt would be amazing if this could be added in **2.6**, so I could use it in my package\r\n\r\n### Use cases\r\n1. Allows head management within `single file components` (see #9205)\r\n2. Allows async functions within the `template` option\r\n3. Makes the `vue-server-renderer` templater much easier to use, and allows users to use javascript interpolations. For example: `<!--vue-ssr-outlet-->` becomes `${result}`\r\n\r\n#### Bonus\r\nI'm creating a serverside rendering templating engine for **Vue** that will use this feature. It includes:\r\n- A super simple head management system that exists entirely within the `<template>`, like native html\r\n- full server-side rendering with Webpack\r\n- CommonJS based, so users can easily implement it into koa/express projects\r\n- templating using slots\r\n- runtime compilation of Vue files (which are cached)\r\n\r\nThe package is aimed for users who want to start using Vue but want to keep express/koa routing which will make building serverside applications much easier for users, and will increase Vue adoption in the process","Url":"https://github.com/vuejs/vue/pull/9324","RelatedDescription":"Closed or merged PR \"[feature] allow template to be function in vue-server-renderer\" (#9324)"},{"Id":"400557725","IsPullRequest":false,"CreatedAt":"2019-01-18T03:44:17","Actor":"cluod","Number":"9339","RawContent":null,"Title":"ios10打开白屏，报错是unexpected token '*'","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[http://app.starluxe.cn/#/libeika?shareOriginChannel=libeika&utm_source=libeika](http://app.starluxe.cn/#/libeika?shareOriginChannel=libeika&utm_source=libeika)\r\n\r\n![image](https://user-images.githubusercontent.com/15325313/51363705-40aebc80-1b14-11e9-8eb7-bbc3e16116ee.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nios10打开白屏\r\n\r\n\r\n### What is expected?\r\n告知问题原因\r\n\r\n### What is actually happening?\r\nios10打开白屏\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9339","RelatedDescription":"Closed issue \"ios10打开白屏，报错是unexpected token '*'\" (#9339)"},{"Id":"400555677","IsPullRequest":false,"CreatedAt":"2019-01-18T03:18:39","Actor":"cluod","Number":"9338","RawContent":null,"Title":"ios10出现莫名其妙bug   vue-cli3搭建的项目","State":"closed","Body":"![image](https://user-images.githubusercontent.com/15325313/51363380-adc15280-1b12-11e9-9a0d-819a8bfbd61a.png)\r\n如题，，ios10系统出现上面bug，而且是打正式包出现这种问题，测试包是好的","Url":"https://github.com/vuejs/vue/issues/9338","RelatedDescription":"Closed issue \"ios10出现莫名其妙bug   vue-cli3搭建的项目\" (#9338)"},{"Id":"400367656","IsPullRequest":false,"CreatedAt":"2019-01-17T17:27:42","Actor":"Naaach","Number":"9337","RawContent":null,"Title":"alert and confirm as component without import","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[CodePen Link](https://codepen.io/Naaach/pen/maYLjj)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOnly run it.\r\n\r\n### What is expected?\r\na simple confirm element or nothing\r\n\r\n### What is actually happening?\r\na dialog whit a anonymous function on it\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9337","RelatedDescription":"Closed issue \"alert and confirm as component without import\" (#9337)"},{"Id":"400366460","IsPullRequest":false,"CreatedAt":"2019-01-17T16:46:52","Actor":"Naaach","Number":"9336","RawContent":null,"Title":"Alert, confirm fly component ","State":"closed","Body":"Hi, I just found an error when you call a componente called 'alert' or 'confirm' without import them.\r\n\r\nExample code: \r\nhttps://codepen.io/anon/pen/ZVNoLE\r\n\r\nit's run and show a dialog whit a func in it.\r\n","Url":"https://github.com/vuejs/vue/issues/9336","RelatedDescription":"Closed issue \"Alert, confirm fly component \" (#9336)"},{"Id":"400329738","IsPullRequest":false,"CreatedAt":"2019-01-17T15:33:47","Actor":"Jovaage","Number":"9334","RawContent":null,"Title":"Scoped slots without binding","State":"closed","Body":"### What problem does this feature solve?\r\nWhen you want to repeat a slot, it has to be scoped.\r\nWhen you use a scoped slot, something has to be bound.\r\nWhen something is bound, but never used, the eslint rule `vue/no-unused-vars` kicks in and raises an error or warning.\r\n\r\nYou can't both use a slot simply for repeatability and have the eslint rule active.\r\n\r\n### What does the proposed API look like?\r\nI don't know exactly how to solve this, but there should probably be a way to mark a slot as scoped, without having to bind anything, in both parent and child component.\r\n`<span slot-scope>`\r\n\r\nOr add a new type of behaviour to slots, that allow repetition without it being scoped.\r\n`<span slot-repeatable>`\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9334","RelatedDescription":"Closed issue \"Scoped slots without binding\" (#9334)"},{"Id":"400330510","IsPullRequest":true,"CreatedAt":"2019-01-17T15:30:48","Actor":"VanquisherMe","Number":"9335","RawContent":null,"Title":"webpack import in SSR ,there is -1(from chunks.css.map) in the client…","State":"open","Body":"…-manifest\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nI need to merge chunks，otherwise webpack import in SSR ,there is -1 in the client-manifest","Url":"https://github.com/vuejs/vue/pull/9335","RelatedDescription":"Open PR \"webpack import in SSR ,there is -1(from chunks.css.map) in the client…\" (#9335)"},{"Id":"400280865","IsPullRequest":false,"CreatedAt":"2019-01-17T14:19:52","Actor":"victornpb","Number":"9333","RawContent":null,"Title":"Render errors should return contextual information","State":"closed","Body":"### What problem does this feature solve?\r\nIf you have a complex template with many \"interpolations\" and you get an exception during render you only get the exception error message, no contextual information what so ever besides inside which component it happened.\r\n\r\n```\r\n[Vue warn]: Error in render: \"TypeError: Cannot read property 'length' of undefined\"\r\n\r\nfound in\r\n\r\n---> <Unification> at src/pages/Hello/Hello.vue\r\n       <VApp>\r\n         <App> at src/App.vue\r\n           <Root>\r\n```\r\n\r\nWhen I get this debugging, turns into basically guess work, I have to use CMD-F to find every place it mentions \".length\" and start to like isolate parts of the template, it is very frustrating when the template is hundreds of lines.\r\n\r\n![screen shot 2019-01-17 at 11 29 42 am](https://user-images.githubusercontent.com/3372598/51322126-bbf86b80-1a4b-11e9-9c5e-3055111605b6.png)\r\n\r\n### What does the proposed API look like?\r\nAt least show the actual interpolation/directive that caused it, maybe with part of the template.\r\n```\r\n[Vue warn]: Error in render: \"TypeError: Cannot read property 'length' of undefined\"\r\n\r\nfound in\r\n\r\n---> <Hello> at src/pages/Hello/Hello.vue:666:69\r\n       <VApp>\r\n         <App> at src/App.vue\r\n           <Root>\r\n               (...)\r\n              <span class=\"caption\">{{currentIndex 1}} / {{items.result.length}}</span>\r\n                                                           ^\r\n```\r\n\r\nor at least the expression string `{{items.result.length}}`\r\n\r\nline number would be great too.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9333","RelatedDescription":"Closed issue \"Render errors should return contextual information\" (#9333)"},{"Id":"400145547","IsPullRequest":false,"CreatedAt":"2019-01-17T07:45:33","Actor":"Sayid1","Number":"9332","RawContent":null,"Title":"Use DllPlugin and DllReferencePlugin Wrong when vue/cli3.0","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://github.com/Sayid1/dll-test](https://github.com/Sayid1/dll-test)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n### getting started with vue/cli 3.0\r\n\r\n## installation dependencies\r\n```\r\nyarn\r\n```\r\n\r\n## generate dll manifest\r\n```\r\nyarn dll\r\n```\r\n\r\n## start up\r\n```\r\nyarn serve\r\n```\r\n\r\n### What is expected?\r\nOpen the page normally\r\n\r\n### What is actually happening?\r\n```javascript\r\nUncaught SyntaxError: Unexpected token <\r\n\r\nUncaught ReferenceError: vender_87f3be8acd6aadd91537 is not defined\r\n    at eval (eval at dll-reference vender_87f3be8acd6aadd91537 (app.js:2106), <anonymous>:1:18)\r\n    at Object.dll-reference vender_87f3be8acd6aadd91537 (app.js:2106)\r\n    at __webpack_require__ (app.js:724)\r\n    at fn (app.js:101)\r\n    at eval (global.js from dll-reference vender_87f3be8acd6aadd91537?478a:1)\r\n    at Object../node_modules/webpack/buildin/global.js (app.js:1896)\r\n    at __webpack_require__ (app.js:724)\r\n    at fn (app.js:101)\r\n    at eval (punycode.js:521)\r\n    at Object../node_modules/node-libs-browser/node_modules/punycode/punycode.js (app.js:1685)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9332","RelatedDescription":"Closed issue \"Use DllPlugin and DllReferencePlugin Wrong when vue/cli3.0\" (#9332)"},{"Id":"400058603","IsPullRequest":true,"CreatedAt":"2019-01-17T00:28:02","Actor":"lbogdan","Number":"9331","RawContent":null,"Title":"fix(v-model): add value to $attrs if not defined in props (fix #9330)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nFixes #9330 , see that for details.","Url":"https://github.com/vuejs/vue/pull/9331","RelatedDescription":"Open PR \"fix(v-model): add value to $attrs if not defined in props (fix #9330)\" (#9331)"},{"Id":"399899059","IsPullRequest":false,"CreatedAt":"2019-01-16T16:46:33","Actor":"lbogdan","Number":"9330","RawContent":null,"Title":"v-model's value not in $attrs if value not defined as a prop","State":"open","Body":"**Note: this issue only refers to v-model for components, and is not considering v-model on DOM elements.** There was a discussion which included this unexpected behavior in #6216 , and also a PR #6327 that tried to fixed that, but those also included being able to pass-through `v-model` to DOM elements, which is not the case with this issue.\r\n\r\n### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/933003yx6w](https://codesandbox.io/s/933003yx6w)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse `v-model` on a component that doesn't have `value` defined in its `props`.\r\n\r\n### What is expected?\r\n`value` is added to component's instance `$attrs`\r\n\r\n### What is actually happening?\r\n`value` is not added to component's instance `$attrs`\r\n\r\n---\r\nBecause of that, when wrapping **a component** and passing through the props and event handlers using `v-bind=\"$attrs\" v-on=\"$listeners\"`, `v-model` will not be (completely) passed through, and will require explicitly defining `value` in wrapping component's `props` and passing it using `:value=\"value\"` to the wrapped component (see the linked sandbox).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9330","RelatedDescription":"Open issue \"v-model's value not in $attrs if value not defined as a prop\" (#9330)"},{"Id":"399879587","IsPullRequest":false,"CreatedAt":"2019-01-16T16:05:12","Actor":"bitencode","Number":"9329","RawContent":null,"Title":"Vue-Mobx integration broken with PR #7828","State":"open","Body":"### Version\r\n2.5.18\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k90k8kwn2r](https://codesandbox.io/s/k90k8kwn2r)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Use the `mobxjs/mobx-vue` package (or a custom integration with Mobx)\r\n* Everything worked fine on Vue 2.5.17 and is broken on 2.5.18 and above\r\n* See that TypeErrors are thrown\r\n\r\n### What is expected?\r\nVue would not attempt to to set the `__proto__` property of a Proxy.\r\n\r\n### What is actually happening?\r\nReactivity with Mobx is broken:\r\n\r\n[Vue warn]: Error in event handler for \"input\": \"TypeError: 'set' on proxy: trap returned falsish for property '__proto__'\"\r\n---\r\nWe attempted to upgrade Vue from 2.5.17 to latest version for our applications - thought it would be smooth because upgrade target was still 2.5.x, but ever version after 2.5.18 is broken with Mobx integration.\r\n\r\nWe have a custom integration with Mobx-state-tree, but some of the code is very similar to `mobxjs/mobx-vue` integration code.  We are not using that library, and I'm not a Vue internals expert,  but I _think_ I  tracked the problem down to this PR: https://github.com/vuejs/vue/pull/7828.  \r\n\r\nSince then I have searched around and found this issue reported to that package also: https://github.com/mobxjs/mobx-vue/issues/15#issuecomment-453570397.  @Nemikolh wrote the codesandbox example I referenced above and it appears to be the same conclusion.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9329","RelatedDescription":"Open issue \"Vue-Mobx integration broken with PR #7828\" (#9329)"},{"Id":"399774003","IsPullRequest":false,"CreatedAt":"2019-01-16T11:52:34","Actor":"mw76","Number":"9328","RawContent":null,"Title":"Allow nested transition to trigger upon removal","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/wx91uLft/](https://jsfiddle.net/wx91uLft/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Show/hide elements with the  \"Toggle\" button.\r\n- Show/hide elements with the  \"Toggle Ticked\" button. Shows a workaround.\r\n\r\n### What is expected?\r\nAll transitions should be triggered on leave, even for nested child elements.\r\n\r\n### What is actually happening?\r\nTransition classes don't get applied to nested child elements, when conditions for leaving transitions occur on the same tick.\r\n\r\nWorkaround: Delaying the parent transitions by one tick fixes the problem.\r\n\r\n---\r\nThis has been reported, but got closed due to the sample code did not use `appear` on the `<transition>` elements. (See issues [#7643](https://github.com/vuejs/vue/issues/7643) and [#9243](https://github.com/vuejs/vue/issues/9243))\r\n\r\nMy example is more detailed and also provides a workaround.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9328","RelatedDescription":"Open issue \"Allow nested transition to trigger upon removal\" (#9328)"},{"Id":"399713548","IsPullRequest":true,"CreatedAt":"2019-01-16T09:15:21","Actor":"MR-fisher","Number":"9327","RawContent":null,"Title":"fix #9284: Retrigger propsData getter before current watcher teardown","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nYou can test in this case [https://github.com/MR-fisher/vue-memory-leak-case](https://github.com/MR-fisher/vue-memory-leak-case).","Url":"https://github.com/vuejs/vue/pull/9327","RelatedDescription":"Open PR \"fix #9284: Retrigger propsData getter before current watcher teardown\" (#9327)"},{"Id":"399637039","IsPullRequest":false,"CreatedAt":"2019-01-16T03:54:01","Actor":"matamune94","Number":"9326","RawContent":null,"Title":"v-for in vue update all object in array although the key has been determined","State":"closed","Body":"this my function in methods:\r\n\r\n```\r\n    serverChange(data){\r\n      data.serverlist.forEach(obj => {\r\n        if(_.find(data.servers,{server_id: obj.value})){\r\n          obj.disabled = true\r\n        }else{\r\n          obj.disabled = false\r\n        }\r\n      });\r\n\r\n    },\r\n```\r\n\r\ni want update only  the key has been determined\r\nwhen i update a object in array , vue update all other object .\r\nI need a solution for this problem .","Url":"https://github.com/vuejs/vue/issues/9326","RelatedDescription":"Closed issue \"v-for in vue update all object in array although the key has been determined\" (#9326)"},{"Id":"399305161","IsPullRequest":false,"CreatedAt":"2019-01-15T11:35:17","Actor":"Vontus","Number":"9325","RawContent":null,"Title":"Modifier to propagate events to parent","State":"open","Body":"### What problem does this feature solve?\r\nCurrently, and as far as I know, if we want to propagate an event fired by a child component to the parent (the child's grandparent) we need to $emit the event again, and we need to pass all the arguments one more time. This can become a problem, for example, if the event has a variable number of arguments because we need to specify them manually or pass the whole array as a new argument.\r\n\r\nThe current way would be something like\r\n```\r\n@blur=\"$emit('blur')\"\r\n@create=\"$emit('create', arguments[0])\"\r\n@input=\"$emit('input', arguments[0], arguments[1])\"\r\n```\r\n\r\n### What does the proposed API look like?\r\n```\r\n@blur.propagate\r\n@create.propagate\r\n@input.propagate\r\n```\r\nAnd if we want to both handle the event and propagate it to the parent, we would use\r\n```\r\n@input.propagate=\"someFunction\"\r\n```\r\n----\r\nEDIT: Maybe since .propagate may be confused with the function .stopPropagation(), a better term could be simply .emit\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9325","RelatedDescription":"Open issue \"Modifier to propagate events to parent\" (#9325)"},{"Id":"399243994","IsPullRequest":false,"CreatedAt":"2019-01-15T09:21:25","Actor":"VanquisherMe","Number":"9322","RawContent":null,"Title":"vue 使用 jsx 怎么使用 <router-view /> ？","State":"closed","Body":"### What problem does this feature solve?\r\n业务统一由jsx 实现\r\n\r\n### What does the proposed API look like?\r\nthis.$router.view\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9322","RelatedDescription":"Closed issue \"vue 使用 jsx 怎么使用 <router-view /> ？\" (#9322)"},{"Id":"399248532","IsPullRequest":true,"CreatedAt":"2019-01-15T09:08:13","Actor":"DominusVilicus","Number":"9323","RawContent":null,"Title":"changed renderSync to render","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9323","RelatedDescription":"Closed or merged PR \"changed renderSync to render\" (#9323)"},{"Id":"399223623","IsPullRequest":false,"CreatedAt":"2019-01-15T08:16:48","Actor":"mheere","Number":"9321","RawContent":null,"Title":"Vue input component $emit event not consistent","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mheere/rfLo9gn7/21/](https://jsfiddle.net/mheere/rfLo9gn7/21/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle\r\n\r\n### What is expected?\r\nWhen entering more than 3 chars it should not allow any more editing of the text...\r\n\r\n### What is actually happening?\r\nFirst keydown it works (as in, it cuts off the text) but then it allows the text to grow more than 3 chars..\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9321","RelatedDescription":"Closed issue \"Vue input component $emit event not consistent\" (#9321)"},{"Id":"399102082","IsPullRequest":true,"CreatedAt":"2019-01-14T22:39:12","Actor":"trainiac","Number":"9319","RawContent":null,"Title":"Load async files before initial files","State":"closed","Body":"During SSR the async component chunks are included in renderScripts and script tags are generated in the returned HTML.  However, on page load, because the initial script is executed before the async scripts, the webpack bootstrap code is injecting the async script tags again in the head.\r\n\r\nThis change fixes that.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9319","RelatedDescription":"Closed or merged PR \"Load async files before initial files\" (#9319)"},{"Id":"399103570","IsPullRequest":false,"CreatedAt":"2019-01-14T22:34:51","Actor":"pkaminski","Number":"9320","RawContent":null,"Title":"Transition's @appear hook invoked even when appear not specified / falsy","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/jXdLGV](https://codepen.io/anon/pen/jXdLGV)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the repro and note that the rendered page says \"initial appear\".\r\n\r\n### What is expected?\r\nThe `@appear` hook should not be invoked and the page should just say \"initial\".\r\n\r\n### What is actually happening?\r\nThe `@appear` hook is invoked even though the `transition` doesn't have an `appear` attribute, and hence shouldn't be triggering on appear.  The same thing happens if you add `:appear =\"false\"` to the `transition`.\r\n\r\n---\r\nRan into this when building some custom transition components where `appear` should be user-controlled, but was being invoked all the time instead.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9320","RelatedDescription":"Open issue \"Transition's @appear hook invoked even when appear not specified / falsy\" (#9320)"},{"Id":"398768078","IsPullRequest":true,"CreatedAt":"2019-01-14T08:00:01","Actor":"GitHubzhangshuai","Number":"9317","RawContent":null,"Title":"ccccccMerge pull request #1 from vuejs/dev","State":"closed","Body":"aaaaa\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9317","RelatedDescription":"Closed or merged PR \"ccccccMerge pull request #1 from vuejs/dev\" (#9317)"},{"Id":"398779673","IsPullRequest":true,"CreatedAt":"2019-01-14T07:55:07","Actor":"chenym1992","Number":"9318","RawContent":null,"Title":"Merge pull request #1 from vuejs/dev","State":"closed","Body":"同步代码\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9318","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from vuejs/dev\" (#9318)"},{"Id":"398764920","IsPullRequest":true,"CreatedAt":"2019-01-14T06:45:41","Actor":"GitHubzhangshuai","Number":"9316","RawContent":null,"Title":"Merge pull request #1 from vuejs/dev","State":"closed","Body":"aaaaa\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9316","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from vuejs/dev\" (#9316)"},{"Id":"398764065","IsPullRequest":true,"CreatedAt":"2019-01-14T06:39:36","Actor":"GitHubzhangshuai","Number":"9315","RawContent":null,"Title":"Merge pull request #1 from vuejs/dev","State":"closed","Body":"aaaaa\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9315","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from vuejs/dev\" (#9315)"},{"Id":"398762462","IsPullRequest":true,"CreatedAt":"2019-01-14T06:35:58","Actor":"GitHubzhangshuai","Number":"9314","RawContent":null,"Title":"test","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9314","RelatedDescription":"Closed or merged PR \"test\" (#9314)"},{"Id":"398652037","IsPullRequest":false,"CreatedAt":"2019-01-13T12:20:58","Actor":"Kjir","Number":"9313","RawContent":null,"Title":"[SSR] Add option to output the server entry through webpack","State":"open","Body":"### What problem does this feature solve?\r\nThe guide for Server-Side rendering creates 2 webpack builds, one for the client and one for the server. Then you create a file that imports the outputs from those 2 builds and returns the responses to whatever framework you use (e.g. express). Let's call this file the server handler.\r\nThe issue with this approach is that you would need a third webpack build to process the server handler through webpack as well. You might want to do that for a few different reasons:\r\n 1. To have the same flow for all your files\r\n 2. Because you use typescript/babel/minification or other transformations\r\n 3. To use the same style of imports (i.e. ES modules)\r\n\r\n### What does the proposed API look like?\r\nI can think of a few possible solutions:\r\n\r\n#### 1. Define the name of the server handler to emit\r\n\r\nThere could be a configuration option for `VueSSRServerPlugin` that defines one additional entry to emit in the Webpack configuration. This would mean that there could be at most 2 entries, one is used for creating the JSON bundle, the other one to emit the server handler\r\n\r\n```javascript\r\n// webpack.config.js\r\nconst VueSSRServerPlugin = require('vue-server-renderer/server-plugin')\r\n\r\nmodule.exports = {\r\n  // Point entry to your app's server entry file\r\n  entry: {\r\n     main: '/path/to/server-entry.js',\r\n     handler: '/path/to/server-handler.js'\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      'client-manifest': '/path/to/dist/client/vue-ssr-client-manifest.json'\r\n    }\r\n  },\r\n  plugins: [\r\n    new VueSSRServerPlugin({ serverHandler: 'handler' })\r\n  ]\r\n}\r\n```\r\n\r\nThe handler would look something like this:\r\n```javascript\r\n// server-handler.js\r\nimport clientManifest from 'client-manifest';\r\n// This alias could be created by the VueSSRServerPlugin itself\r\nimport serverBundle from 'server-bundle';\r\nimport { createBundleRenderer } from 'vue-server-renderer';\r\n\r\nconst template = `[...]`;\r\n\r\nconst renderer = createBundleRenderer(serverBundle, {\r\n  template,\r\n  clientManifest,\r\n  runInNewContext: false\r\n});\r\n\r\nexport function handler(event, context) {\r\n  // use the renderer in here\r\n}\r\n```\r\n\r\nThe upside of this approach is that it should be relatively easy to accomplish this.\r\nAnother upside is that this would be backwards compatible.\r\nThe downside is that there would be quite a bit of configuration necessary to make it look nice — to avoid importing build outputs directly in code, which would add a dependency on our webpack configuration in the code.\r\n\r\n#### 2. Provide an alias that resolves to the renderer instead of emitting a JSON bundle\r\n\r\nAnother possible approach would be to change completely the way the VueSSRServerPlugin works to reduce the additional webpack configuration necessary. Here's how the webpack configuration would look like:\r\n\r\n```javascript\r\n// webpack.config.js\r\nconst VueSSRServerPlugin = require('vue-server-renderer/server-plugin')\r\n\r\nmodule.exports = {\r\n  // Point entry to your app's server entry file\r\n  entry: '/path/to/server-handler.js',\r\n  plugins: [\r\n    new VueSSRServerPlugin({\r\n      clientManifest: '/path/to/dist/client/vue-ssr-client-manifest.json',\r\n      serverEntry: '/path/to/server-entry.js',\r\n      template: '/path/to/template.html'\r\n    })\r\n  ]\r\n}\r\n```\r\n\r\nAnd here is how the server handler would look like:\r\n\r\n```javascript\r\n// alias defined by the plugin, returns the renderer\r\nimport renderer from 'vue-ssr-server-renderer'\r\n\r\nexport function handler(event, context) {\r\n  // use renderer here\r\n}\r\n```\r\n\r\nThe clear upside is the reduction of the boilerplate.\r\nThe first big downside is that this would not be backwards compatible. It could be implemented as a new, different plugin.\r\nThe second downside is that there might be other use cases I haven't considered. `createBundleRenderer` takes other arguments as well, and you might not want to instantiate it at the top level.\r\nA smaller downside is that some pieces are connected in webpack rather than in the code, making it unclear where the template is referenced from.\r\n\r\n#### 3. Use a loader to transform the server entry\r\n\r\nThis would be similar to the first proposal, but it would change the way `createBundleRenderer` works.\r\n\r\nStarting from the server handler this time, here is how the usage would look like:\r\n\r\n```javascript\r\nimport App from '/path/to/server-entry.js'\r\nimport clientManifest from 'client-manifest';\r\n// This function has the client manifest already pulled in by the plugin\r\nimport { createAppRenderer } from 'vue-server-renderer';\r\n\r\nconst template = `[...]`;\r\n\r\nconst renderer = createAppRenderer(app, {\r\n  clientManifest,\r\n  template,\r\n  runInNewContext: false\r\n});\r\n\r\nexport function handler(event, context) {\r\n  // use renderer here\r\n}\r\n```\r\n\r\nAnd the webpack configuration would be something like this:\r\n\r\n```javascript\r\n// webpack.config.js\r\n\r\nmodule.exports = {\r\n  // Point entry to your app's server entry file\r\n  entry: '/path/to/server-handler.js',\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /entry-server\\.js$/,\r\n        loader: 'vue-ssr-loader'\r\n      }\r\n    ]\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      'client-manifest': '/path/to/dist/client/vue-ssr-client-manifest.json'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis approach would have the upside of not requiring magic to happen on the webpack entries, making it possible to have multiple entrypoints.\r\nThe second upside would be to just configure a loader where appropriate, instead of adding a plugin.\r\nThe first downside is that we still have to include the client manifest from the build.\r\nThe second downside is that is could not be feasible with a webpack loader.\r\n\r\n#### So which one?\r\nI believe this problem needs a deeper reflection on the implications for all possible use cases, so someone with a better understanding of the usages of this plugin should trace the path to follow. Other ideas could be possible that would in the future also lead to simpler usages that hide the complexity from the users.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9313","RelatedDescription":"Open issue \"[SSR] Add option to output the server entry through webpack\" (#9313)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"400645992","IsPullRequest":false,"CreatedAt":"2019-01-18T09:43:00","Actor":"zpcalan","Number":"2585","RawContent":null,"Title":"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2585","RelatedDescription":"Closed issue \"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效\" (#2585)"},{"Id":"400532266","IsPullRequest":false,"CreatedAt":"2019-01-18T08:36:39","Actor":"igorveremsky","Number":"2584","RawContent":null,"Title":"router-view mounted lifehook?","State":"closed","Body":"### What problem does this feature solve?\r\nI use preloader at my spa and want to hide it only if page DOM ready, for not clone code to mounted lifehook of all my routes components will be good to have general mounted lifehook for `router-view` \r\n\r\n### What does the proposed API look like?\r\n```js\r\nRouter.viewMounted(() => {\r\n\t// do some on router view mounted\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2584","RelatedDescription":"Closed issue \"router-view mounted lifehook?\" (#2584)"},{"Id":"398942715","IsPullRequest":true,"CreatedAt":"2019-01-17T19:28:16","Actor":"tuxinghuan","Number":"2578","RawContent":null,"Title":"docs(zh):fix a mistake of style","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2578","RelatedDescription":"Closed or merged PR \"docs(zh):fix a mistake of style\" (#2578)"},{"Id":"400231452","IsPullRequest":true,"CreatedAt":"2019-01-17T11:58:02","Actor":"SetSplin","Number":"2583","RawContent":null,"Title":"fix(create-matcher): \"cannot assign to read only property path\"","State":"closed","Body":"In create-matcher.js in match function location was marked as constant. That course as error described here (https://github.com/vuejs/vue-router/issues/1381)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2583","RelatedDescription":"Closed or merged PR \"fix(create-matcher): \"cannot assign to read only property path\"\" (#2583)"},{"Id":"400009896","IsPullRequest":false,"CreatedAt":"2019-01-16T21:39:40","Actor":"trainiac","Number":"2582","RawContent":null,"Title":"Ability to set and reference redirectParams","State":"open","Body":"### What problem does this feature solve?\r\nIn order to issue a 301 redirect vs a 302 redirect in vue router there is no easy way to do that in userland.  Currently you have to write a custom redirect function and throw an error with the information that you need.\r\n\r\n```\r\n{ \r\n  path: '/old-path': \r\n  redirect() => {\r\n    const error = new Error('Permanent Redirect')\r\n    error.redirect = {\r\n      code: 301,\r\n      url: '/new-path',\r\n    }\r\n    throw error\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nIn your redirects you can define\r\n```js\r\n{ \r\n  path: '/old-path': \r\n  redirect: '/new-path', \r\n  redirectParams: { \r\n    responseCode: 301 \r\n  } \r\n}\r\n```\r\n\r\nAnd in a `beforeEach` handler you could reference the meta info\r\n```\r\nrouter.beforeEach((to, from, next) => {\r\n   to.redirectedFrom === '/old-path'\r\n   to.redirectParams.responseCode === 301\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2582","RelatedDescription":"Open issue \"Ability to set and reference redirectParams\" (#2582)"},{"Id":"399751623","IsPullRequest":false,"CreatedAt":"2019-01-16T13:04:21","Actor":"JeromeDeLeon","Number":"2581","RawContent":null,"Title":"Unknown element of vue router (e.g. router-link, router-view)","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/JeromeDeLeon/vue-router-bug](https://github.com/JeromeDeLeon/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Create a project using vue-cli choosing manual preset.\r\n* Enable the following features:\r\n   -  Babel\r\n   -  Router\r\n   -  Vuex\r\n   -  Use config files\r\n* Run the application in development\r\n\r\n### What is expected?\r\nShow the template of Home.vue\r\n\r\n### What is actually happening?\r\nThe app was just showing the \"Home | About\" and nothing else. In console (dev tools), there's an error showing unknown elements for router-link and router-view.\r\n\r\n---\r\nI just did nothing but follow the documentation when creating a project but did a side note of manually selecting the features.\r\nI tried again to create another project, but same result. Again, I tried, same result but there's no error in the console (dev tools)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2581","RelatedDescription":"Closed issue \"Unknown element of vue router (e.g. router-link, router-view)\" (#2581)"},{"Id":"399397648","IsPullRequest":false,"CreatedAt":"2019-01-15T18:41:38","Actor":"salomvary","Number":"2580","RawContent":null,"Title":"beforeRouteUpdate is not called on the first navigation when routing to the same component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/salomvary/qcfg8xm7/18/](https://jsfiddle.net/salomvary/qcfg8xm7/18/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open the linked JSFiddle link\r\n- Open the developer console\r\n- Click on \"Go to /foo/one\"\r\n- Look at the console logs\r\n\r\n### What is expected?\r\n'foo:beforeRouteUpdate'  to be logged on the first navigation.\r\n\r\n### What is actually happening?\r\n'foo:beforeRouteUpdate'  is not logged on the first navigation.\r\n\r\n---\r\nWorkaround: watching `$route` seems to work as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2580","RelatedDescription":"Closed issue \"beforeRouteUpdate is not called on the first navigation when routing to the same component\" (#2580)"},{"Id":"399242944","IsPullRequest":true,"CreatedAt":"2019-01-15T08:51:35","Actor":"CharlesOkwuagwu","Number":"2579","RawContent":null,"Title":"Change `url=\"/\"` to `url=\"index.html\"`","State":"open","Body":"When `publicPath` is set, for some reason `url=\"/\"` fails in the Rewrite.\r\n\r\n`url=\"index.html\"` works regardless of `publicPath` setting\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2579","RelatedDescription":"Open PR \"Change `url=\"/\"` to `url=\"index.html\"`\" (#2579)"},{"Id":"398212810","IsPullRequest":true,"CreatedAt":"2019-01-11T09:59:34","Actor":"tuxinghuan","Number":"2577","RawContent":null,"Title":"docs(zh): link to the correct website","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2577","RelatedDescription":"Closed or merged PR \"docs(zh): link to the correct website\" (#2577)"},{"Id":"398186851","IsPullRequest":true,"CreatedAt":"2019-01-11T09:23:49","Actor":"tuxinghuan","Number":"2576","RawContent":null,"Title":"fix: fix typo in examples","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\njust fix a typo","Url":"https://github.com/vuejs/vue-router/pull/2576","RelatedDescription":"Closed or merged PR \"fix: fix typo in examples\" (#2576)"},{"Id":"398124430","IsPullRequest":true,"CreatedAt":"2019-01-11T09:23:11","Actor":"Jinjiang","Number":"2575","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vue-router/compare/d97d902...4bf3ba5\r\n/ping @Justineo","Url":"https://github.com/vuejs/vue-router/pull/2575","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#2575)"},{"Id":"397551510","IsPullRequest":true,"CreatedAt":"2019-01-10T00:17:03","Actor":"Alex-Sokolov","Number":"2574","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/5ae633e900aea1e975f1ca94284924d0ef172e26#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2574","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2574)"},{"Id":"397398002","IsPullRequest":false,"CreatedAt":"2019-01-09T14:34:37","Actor":"joenil","Number":"2573","RawContent":null,"Title":"manually url navigation canceled messes up history","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l9omkjv939](https://codesandbox.io/s/l9omkjv939)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Let's say the page url now is `/?animal=dog`, and the `animal` field only accept `dot` or `cat`\r\n2. When a user manually change the `dog` to `duck`, or via back button, it triggered `next(false)` for prevent the url change inside `beforeRouteUpdate`\r\n3. Due to the `next(false)` or `next(error)` pushed a new location history, the previous record is `/?animal=duck` and current record is `/?animal=dog`\r\n4. Then we click the browser's back button, it turn to the step 2. and I can't go back to the earlier state!\r\n\r\n### What is expected?\r\nI don't know... how can I handle this scenario?\r\n\r\n### What is actually happening?\r\nCan't go back via back button after called next(false/error)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2573","RelatedDescription":"Open issue \"manually url navigation canceled messes up history\" (#2573)"},{"Id":"396735569","IsPullRequest":false,"CreatedAt":"2019-01-08T12:28:09","Actor":"zbjy","Number":"2572","RawContent":null,"Title":"跳转到新页面通过params传参，取不到参数值","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/pwjrx9r6lm](https://codesandbox.io/s/pwjrx9r6lm)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nconst {href} = this.$router.resolve({\r\n                        name: \"test\",\r\n                        params: {\r\n                            id:2\r\n                        }\r\n                    });\r\n                    window.open(href, '_blank');\r\n在新页面获取不到参数id的值\r\nlet params = this.$route.params;\r\n                alert(params.id)\r\n\r\n### What is expected?\r\n期望在新页面能取到通过params传递的参数值\r\n\r\n### What is actually happening?\r\n在新页面未能取到通过params传递的参数值\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2572","RelatedDescription":"Closed issue \"跳转到新页面通过params传参，取不到参数值\" (#2572)"},{"Id":"396691605","IsPullRequest":false,"CreatedAt":"2019-01-07T23:33:05","Actor":"jakob-e","Number":"2571","RawContent":null,"Title":"History state key as timestamp to detect back/forward navigation","State":"open","Body":"### What problem does this feature solve?\r\nUsing Date.now() as key will provide a unique and comparable* identifier in relation to history navigation allowing back/forward navigation to be detected and used to define transition directions (slide left/right) etc.... and maybe it could be the first step in having vue-router provide this information out of the box :-)\r\n\r\n*the current performance.now key does ensure increment upon re-enter.\r\n![image](https://user-images.githubusercontent.com/1699461/50818472-5f989c00-1327-11e9-907d-2eee36d7f354.png)\r\n\r\n\r\n\r\n\r\n*A quick detection example based on Date.now as key:* \r\n````\r\n//  direction   \r\n//  -1 = history.back\r\n//   0 = normal route\r\n//   1 = history.forward \r\nlet direction = 0;\r\n\r\n//   key value of the from route (0 = entering)\r\nlet fromKey = 0;\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    //  add state in case it's missing \r\n    if(!history.state) { history.replaceState({key: Date.now() }, to.name, location.href); }\r\n\r\n    //  get state key from history \r\n    const toKey = history.state.key;\r\n\r\n    //  if we are entering  or the from and to keys (time-stamps) are identical => normal route\r\n    //  if from is less than to to was created after from    => history.forward\r\n    //  if from is less than to to was created before from   => history.back \r\n    direction = !fromKey || fromKey === toKey ? 0 : fromKey < toKey ? 1 : -1;   \r\n    \r\n    //  call next\r\n    next();\r\n})\r\n\r\n\r\nrouter.afterEach((to, from) => {\r\n    //  use nextTick to await key to be generated \r\n    Vue.nextTick(vm => { \r\n\r\n        //  save key for next beforeEach \r\n        fromKey = history.state.key; \r\n    })\r\n})\r\n```` \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n### What does the proposed API look like?\r\nfunction genKey () {\r\n  return Date.now()\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2571","RelatedDescription":"Open issue \"History state key as timestamp to detect back/forward navigation\" (#2571)"},{"Id":"396409532","IsPullRequest":false,"CreatedAt":"2019-01-07T09:26:51","Actor":"fengerwoo","Number":"2570","RawContent":null,"Title":"什么时候可以官方支持一些默认的页面切换动画","State":"closed","Body":"什么时候可以官方支持一些默认的页面切换动画？自己实现的太麻烦了，只是写几个移动端的H5页面，有一个默认的页面切换动画就行","Url":"https://github.com/vuejs/vue-router/issues/2570","RelatedDescription":"Closed issue \"什么时候可以官方支持一些默认的页面切换动画\" (#2570)"},{"Id":"395321142","IsPullRequest":false,"CreatedAt":"2019-01-02T17:26:24","Actor":"trutherford2388","Number":"2569","RawContent":null,"Title":"beforeRouteLeave does not get called when navigating using a single component for multiple routes","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2569","RelatedDescription":"Closed issue \"beforeRouteLeave does not get called when navigating using a single component for multiple routes\" (#2569)"},{"Id":"395251128","IsPullRequest":true,"CreatedAt":"2019-01-02T13:57:21","Actor":"markyong","Number":"2568","RawContent":null,"Title":"docs(zh): navigation.md typo","State":"closed","Body":"The content of this page is '**注意：**如果目的',it is not bold,I updated it.","Url":"https://github.com/vuejs/vue-router/pull/2568","RelatedDescription":"Closed or merged PR \"docs(zh): navigation.md typo\" (#2568)"},{"Id":"395242779","IsPullRequest":false,"CreatedAt":"2019-01-02T13:54:46","Actor":"changk99","Number":"2566","RawContent":null,"Title":"why the redirect function executes twice","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/changli/38sft2x0/1/](https://jsfiddle.net/changli/38sft2x0/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、  click the home     \r\n2、  click the toAbout\r\n\r\n\r\n### What is expected?\r\n1、 the redirect function  will not be called  \r\n2 、the redirect function will  be called once\r\n\r\n### What is actually happening?\r\n1、 the redirect function  will  be called once  \r\n2、 the redirect function will  be called  twice\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2566","RelatedDescription":"Closed issue \"why the redirect function executes twice\" (#2566)"},{"Id":"395242880","IsPullRequest":true,"CreatedAt":"2019-01-02T13:24:27","Actor":"markyong","Number":"2567","RawContent":null,"Title":"docs(zh): naviagtion.md typo","State":"closed","Body":"The content of this page is '**注意：**',it is not bold.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2567","RelatedDescription":"Closed or merged PR \"docs(zh): naviagtion.md typo\" (#2567)"},{"Id":"395141258","IsPullRequest":false,"CreatedAt":"2019-01-02T10:36:51","Actor":"kmc059000","Number":"2565","RawContent":null,"Title":"Allow passing props:true instead of passing an object for named views","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/efq2Lzom/](https://jsfiddle.net/efq2Lzom/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm having unexpected behavior with nested named views where the named components are not all rendered. Also props are not being passed when using named views.\r\n\r\nIn the jsfiddle, links 3 and 4 do not behave as expected. \r\n\r\n### What is expected?\r\nProps are passed when using named views. Components for named views should be displayed.\r\n\r\n#### Link 3:\r\n\r\nThe top section should have content \"Top - 5\". The bottom section should display 5 on both rows.\r\n\r\n#### Link 4\r\nBoth the top and bottom sections should display \"5\".\r\n\r\n### What is actually happening?\r\nProps are not always passed to named components. Components for named views are not always displayed.\r\n\r\n#### Link 3\r\nThe top section should render the Top component. The prop for the nested view's component should have prop passed.\r\n\r\n#### Link 4\r\nThe prop from the route param should be passed to the named components.\r\n\r\n---\r\nI ran across this with a complex page layout. I have a toolbar at the top of my app (defined in the same component as the default <router-view>) and a number of routes that are nested 2-3 levels deep. I want to change the content of the toolbar based on the deepest level of route hierarchy.\r\n\r\nI created a `<router-view name=\"toolbar\">`, but I'm struggling to get content rendering and changing according to the deepest route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2565","RelatedDescription":"Closed issue \"Allow passing props:true instead of passing an object for named views\" (#2565)"},{"Id":"394983887","IsPullRequest":true,"CreatedAt":"2018-12-31T14:08:50","Actor":"franklee720","Number":"2564","RawContent":null,"Title":"2.8","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2564","RelatedDescription":"Closed or merged PR \"2.8\" (#2564)"},{"Id":"394971987","IsPullRequest":false,"CreatedAt":"2018-12-31T13:30:46","Actor":"Rolanddoda","Number":"2563","RawContent":null,"Title":"BeforeRouteEnter hook executes mounted hook","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/yqj0olnkk9](https://codesandbox.io/s/yqj0olnkk9)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the sandbox go to `/about` manually.\r\n\r\n### What is expected?\r\nThe mounted hook should not be executed.\r\n\r\n### What is actually happening?\r\nIf you open the console you can see that mounted hook gets executed.\r\n\r\n---\r\nI don't know if this is made by design, but since beforeRouteEnter runs before the component gets mount, the mounted hook should not be executed if from beforeRouteEnter hook you redirect to another path. It seems like a bug to me.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2563","RelatedDescription":"Closed issue \"BeforeRouteEnter hook executes mounted hook\" (#2563)"},{"Id":"394908953","IsPullRequest":false,"CreatedAt":"2018-12-30T23:15:31","Actor":"lamka02sk","Number":"2562","RawContent":null,"Title":"Q: Highlight parent by route name","State":"closed","Body":"Hello, I am trying to automatically highlight parent menu item defined with route name.\r\nMy ability to explain problem verbally is bad, so I attach my code for better understanding.\r\n\r\n**My routes:**\r\n```lang=\"javascript\"\r\n{\r\n      path: '/parent',\r\n      name: 'parent',\r\n      component: Parent,\r\n      children: [\r\n        {\r\n          path: '/child',\r\n          name: 'parent.child',\r\n          component: Child\r\n        }\r\n      ]\r\n}\r\n```\r\n**My router link in menu:**\r\n```lang=\"html\"\r\n<router-link :to=\"{ name: 'parent' }\">Parent</router-link>\r\n```\r\nIs it possible to highlight this menu item when the current route is `parent.child`? For example: `<router-link :to=\"{ name: 'parent*' }\">Parent</router-link>` does not work and item will not be highlighted at all.\r\n\r\nI would rather not write route paths because I will be adding localised routes later on and it will stop working for another languages. Thanks\r\n","Url":"https://github.com/vuejs/vue-router/issues/2562","RelatedDescription":"Closed issue \"Q: Highlight parent by route name\" (#2562)"},{"Id":"394536604","IsPullRequest":false,"CreatedAt":"2018-12-28T03:20:31","Actor":"yidazh","Number":"2561","RawContent":null,"Title":"beforeRouteEnter hook's cb is not called (same component across diffrent routes and keep-alive applied )","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9vctongd/1/](https://jsfiddle.net/9vctongd/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. open the JSFiddle provided, open the console\r\n2. click link GO TO FOO1\r\n3. click link GO TO BAR\r\n4. click link GO TO FOO2\r\n\r\n### What is expected?\r\nconsole prints:\r\n\r\nfoo enter\r\n\r\nfoo enter cb\r\n\r\nfoo enter\r\n\r\nfoo enter cb\r\n\r\n\r\n### What is actually happening?\r\nconsole prints:\r\n\r\nfoo enter\r\n\r\nfoo enter cb\r\n\r\nfoo enter\r\n\r\n\r\n---\r\nalso results in an infinite function call (function poll in base.js)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2561","RelatedDescription":"Open issue \"beforeRouteEnter hook's cb is not called (same component across diffrent routes and keep-alive applied )\" (#2561)"},{"Id":"394527380","IsPullRequest":false,"CreatedAt":"2018-12-28T02:03:42","Actor":"IsoftTech","Number":"2560","RawContent":null,"Title":"npm ERR! A complete log of this run can be found in:","State":"closed","Body":"Hello everyone here. am working on laravel & Vuejs project, it was working fine but suddenly developed a problem. The error started when i was installing vform. I've tried many solutions online but still not working. Your help is highly appreciated. here's the error:\r\nnpm ERR! This is an error with npm itself. Please report this error at:\r\nnpm ERR! https://npm.community\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR! C:\\Users\\Isoft\\AppData\\Roaming\\npm-cache_logs\\2018-12-28T01_28_24_979Z-debug.log","Url":"https://github.com/vuejs/vue-router/issues/2560","RelatedDescription":"Closed issue \"npm ERR! A complete log of this run can be found in:\" (#2560)"},{"Id":"394369623","IsPullRequest":false,"CreatedAt":"2018-12-27T11:24:28","Actor":"ruhook","Number":"2559","RawContent":null,"Title":"webapp，路由跳转延迟，","State":"closed","Body":"移动端路由跳转会有延迟。 不是click的问题。\r\n","Url":"https://github.com/vuejs/vue-router/issues/2559","RelatedDescription":"Closed issue \"webapp，路由跳转延迟，\" (#2559)"},{"Id":"394339413","IsPullRequest":false,"CreatedAt":"2018-12-27T09:30:36","Actor":"ggguang","Number":"2558","RawContent":null,"Title":"vue-router的入门教程起步与实际操作不符合","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/zh/guide/#javascript](https://router.vuejs.org/zh/guide/#javascript)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n使用 cli 创建项目\r\n\"vue\": \"^2.5.17\",\r\n\"vue-router\": \"^3.0.2\"\r\n修改 main.js 如下\r\n![main](https://user-images.githubusercontent.com/28919639/50473575-66a2de80-09f8-11e9-8d9c-7200ccd21750.jpg)\r\n```js\r\nimport Vue from 'vue'\r\n// import router from './routes/index.js'\r\nimport App from './App.vue'\r\n// import Foo from './components/Foo.vue'\r\n// import Bar from './components/Bar.vue'\r\n\r\nVue.config.productionTip = false\r\n\r\n// 0. 如果使用模块化机制编程，导入Vue和VueRouter，要调用 Vue.use(VueRouter)\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\n\r\n// 1. 定义 (路由) 组件。\r\n// 可以从其他文件 import 进来\r\nconst Foo = {template: '<div>foo</div>'}\r\nconst Bar = {template: '<div>bar</div>'}\r\n\r\n// 2. 定义路由\r\n// 每个路由应该映射一个组件。 其中\"component\" 可以是\r\n// 通过 Vue.extend() 创建的组件构造器，\r\n// 或者，只是一个组件配置对象。\r\n// 我们晚点再讨论嵌套路由。\r\nconst routes = [\r\n    {path: '/foo', component: Foo},\r\n    {path: '/bar', component: Bar}\r\n]\r\n\r\n// 3. 创建 router 实例，然后传 `routes` 配置\r\n// 你还可以传别的配置参数, 不过先这么简单着吧。\r\nconst router = new VueRouter({\r\n    routes // (缩写) 相当于 routes: routes\r\n})\r\n\r\n// router.start(App,\"router-view\")\r\n\r\nnew Vue({\r\n    router,\r\n    render: h => h(App),\r\n}).$mount('#app')\r\n```\r\n\r\nApp.vue 修改如下\r\n<img width=\"1027\" alt=\"app\" src=\"https://user-images.githubusercontent.com/28919639/50473583-6f93b000-09f8-11e9-95bd-889387c865cf.png\">\r\n```vue\r\n<template>\r\n  <div id=\"app\">\r\n    <img alt=\"Vue logo\" src=\"./assets/logo.png\">\r\n    <h1>Hello App!</h1>\r\n    <p>\r\n      <!-- 使用 router-link 组件来导航. -->\r\n      <!-- 通过传入 `to` 属性指定链接. -->\r\n      <!-- <router-link> 默认会被渲染成一个 `<a>` 标签 -->\r\n      <router-link to=\"/foo\">Go to Foo</router-link>\r\n      <router-link to=\"/bar\">Go to Bar</router-link>\r\n    </p>\r\n    <!-- 路由出口 -->\r\n    <!-- 路由匹配到的组件将渲染在这里 -->\r\n    <div><router-view></router-view></div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n\r\n```\r\n\r\n### What is expected?\r\n路由跳转到指定 foo and bar\r\n为什么不跳转呢。\r\n\r\n### What is actually happening?\r\n路由不跳转，只有修改成import引入foo和bar模块\r\n才正常跳转\r\ndebug:\r\n<img width=\"1438\" alt=\"debug\" src=\"https://user-images.githubusercontent.com/28919639/50473592-77535480-09f8-11e9-90a7-c47948f1ecb8.png\">\r\n这种debug如何查看。给教程链接也行\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2558","RelatedDescription":"Closed issue \"vue-router的入门教程起步与实际操作不符合\" (#2558)"},{"Id":"394337231","IsPullRequest":false,"CreatedAt":"2018-12-27T09:04:06","Actor":"ggguang","Number":"2557","RawContent":null,"Title":"vue-router的入门教程与实际操作不符合","State":"closed","Body":"你好。安装官方的文档学习 vue-router\r\nhttps://router.vuejs.org/zh/guide/#javascript\r\n代码如下：\r\ncli:v3\r\n\"vue\": \"^2.5.17\",\r\n\"vue-router\": \"^3.0.2\"\r\nmain.js: 只有把foo和bar使用import引入才能成功渲染。\r\n![main](https://user-images.githubusercontent.com/28919639/50473575-66a2de80-09f8-11e9-8d9c-7200ccd21750.jpg)\r\napp.vue:\r\n<img width=\"1027\" alt=\"app\" src=\"https://user-images.githubusercontent.com/28919639/50473583-6f93b000-09f8-11e9-95bd-889387c865cf.png\">\r\ndebug:\r\n<img width=\"1438\" alt=\"debug\" src=\"https://user-images.githubusercontent.com/28919639/50473592-77535480-09f8-11e9-90a7-c47948f1ecb8.png\">\r\n这种debug如何查看。给教程链接也行\r\n","Url":"https://github.com/vuejs/vue-router/issues/2557","RelatedDescription":"Closed issue \"vue-router的入门教程与实际操作不符合\" (#2557)"},{"Id":"394335466","IsPullRequest":false,"CreatedAt":"2018-12-27T08:56:23","Actor":"ggguang","Number":"2556","RawContent":null,"Title":"vue-router渲染疑问","State":"closed","Body":"你好。安装官方的文档学习 vue-router\r\nhttps://router.vuejs.org/zh/guide/#javascript\r\n代码如下：\r\ncli:v3\r\n\"vue\": \"^2.5.17\",\r\n\"vue-router\": \"^3.0.2\"\r\nmain.js: 只有把foo和bar使用import引入才能成功渲染。\r\n![main](https://user-images.githubusercontent.com/28919639/50473575-66a2de80-09f8-11e9-8d9c-7200ccd21750.jpg)\r\napp.vue:\r\n<img width=\"1027\" alt=\"app\" src=\"https://user-images.githubusercontent.com/28919639/50473583-6f93b000-09f8-11e9-95bd-889387c865cf.png\">\r\ndebug:\r\n<img width=\"1438\" alt=\"debug\" src=\"https://user-images.githubusercontent.com/28919639/50473592-77535480-09f8-11e9-90a7-c47948f1ecb8.png\">\r\n","Url":"https://github.com/vuejs/vue-router/issues/2556","RelatedDescription":"Closed issue \"vue-router渲染疑问\" (#2556)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-01-15T11:56:19","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Open issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"398365001","IsPullRequest":true,"CreatedAt":"2019-01-11T16:39:11","Actor":"fsblemos","Number":"1484","RawContent":null,"Title":"docs: complement preserveState information","State":"open","Body":"It is not very clear the purpose of `preserveState` option in the docs. \r\n\r\n[This comment](https://github.com/vuejs/vuex/issues/1130#issuecomment-356612119) clarified the behavior, so I included in a dedicated `preserveState` subsection.","Url":"https://github.com/vuejs/vuex/pull/1484","RelatedDescription":"Open PR \"docs: complement preserveState information\" (#1484)"},{"Id":"397755794","IsPullRequest":true,"CreatedAt":"2019-01-10T10:14:56","Actor":"lishihong","Number":"1483","RawContent":null,"Title":"Revert 1457 patch 1","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1483","RelatedDescription":"Closed or merged PR \"Revert 1457 patch 1\" (#1483)"},{"Id":"397745237","IsPullRequest":true,"CreatedAt":"2019-01-10T09:40:39","Actor":"lishihong","Number":"1482","RawContent":null,"Title":"Update index.js","State":"closed","Body":"test","Url":"https://github.com/vuejs/vuex/pull/1482","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1482)"},{"Id":"397545948","IsPullRequest":true,"CreatedAt":"2019-01-09T20:17:57","Actor":"periscuelo","Number":"1481","RawContent":null,"Title":"docs: Update to version 3.1.0 [pt-br]","State":"open","Body":"I made one update to be equal to english version explanation.\r\n@ktsn Can you review / merge it?\r\n\r\nThanks","Url":"https://github.com/vuejs/vuex/pull/1481","RelatedDescription":"Open PR \"docs: Update to version 3.1.0 [pt-br]\" (#1481)"},{"Id":"396165778","IsPullRequest":false,"CreatedAt":"2019-01-07T10:20:13","Actor":"SebastianS90","Number":"1480","RawContent":null,"Title":"Store getters do not re-evaluate on dynamic module registration","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ll6zjklq97](https://codesandbox.io/s/ll6zjklq97)\r\n\r\n### Steps to reproduce\r\n- Open the CodeSandbox\r\n- Click \"Register Module\"\r\n\r\n### What is expected?\r\nAll four values should switch to true\r\n\r\n### What is actually happening?\r\nOnly the values based on watchers from the component switch to true\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1480","RelatedDescription":"Closed issue \"Store getters do not re-evaluate on dynamic module registration\" (#1480)"},{"Id":"395304196","IsPullRequest":false,"CreatedAt":"2019-01-02T16:31:37","Actor":"brophdawg11","Number":"1479","RawContent":null,"Title":"registerModule causing unneccesary getter evaluations","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kkrn0zojqr](https://codesandbox.io/s/kkrn0zojqr)\r\n\r\n### Steps to reproduce\r\n* Open the code sandbox\r\n* Open the console\r\n* Reload the sandbox and note the log of \"Running Getter\"\r\n* Click `Register Module`\r\n* Note that \"Running Getter\" is logged again, even though state.foo hasn't changed\r\n\r\n### What is expected?\r\nJust like normal reactivity, I wouldn't expect the `foo` getter to re-run unless one of it's dependencies (`state.foo`) was changed.\r\n\r\n### What is actually happening?\r\nCalling `registerModule` causes getters to re-execute regardless\r\n\r\n---\r\nThis is more noticeable and more problematic if the getters return non-primitives, since they can then trigger re-renders down the component tree\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1479","RelatedDescription":"Open issue \"registerModule causing unneccesary getter evaluations\" (#1479)"},{"Id":"395119125","IsPullRequest":true,"CreatedAt":"2019-01-01T23:03:14","Actor":"haversnail","Number":"1478","RawContent":null,"Title":"Fix: add `devtools` to StoreOptions interface","State":"open","Body":"Updates `StoreOptions` type to include the [`devtools`](https://vuex.vuejs.org/api/#devtools) option, resolving TypeScript error when option is included in store constructor.","Url":"https://github.com/vuejs/vuex/pull/1478","RelatedDescription":"Open PR \"Fix: add `devtools` to StoreOptions interface\" (#1478)"},{"Id":"395077834","IsPullRequest":true,"CreatedAt":"2019-01-01T12:17:21","Actor":"hkthai","Number":"1477","RawContent":null,"Title":"docs & examples: rewrite state object to functions everywhere","State":"open","Body":"## Overview\r\nRewrite state, object to function everywhere.\r\n\r\n## Details\r\nTo avoid shared state on the server side, we should change our state from object to functions everywhere.\r\n\r\n## Related Pages\r\n[stack overflow](https://stackoverflow.com/questions/49557177/vuex-state-returned-as-function-or-object-literal)\r\n\r\n\r\nIf it is wrong, please close this pr:bow:","Url":"https://github.com/vuejs/vuex/pull/1477","RelatedDescription":"Open PR \"docs & examples: rewrite state object to functions everywhere\" (#1477)"},{"Id":"395016740","IsPullRequest":true,"CreatedAt":"2018-12-31T18:27:47","Actor":"angeliski","Number":"1476","RawContent":null,"Title":"docs: Removed english from translated guide [pt-br]","State":"open","Body":"Hi!\r\nI noticed a english paragraph forgotten  in the guide translated,\r\nthe pr is just to fix.","Url":"https://github.com/vuejs/vuex/pull/1476","RelatedDescription":"Open PR \"docs: Removed english from translated guide [pt-br]\" (#1476)"},{"Id":"394976929","IsPullRequest":false,"CreatedAt":"2018-12-31T14:48:24","Actor":"mbana","Number":"1475","RawContent":null,"Title":"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug](https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug)\r\n\r\n### Steps to reproduce\r\n```sh\r\ngit clone git@github.com:banaio/vue_js_samples.git\r\ncd vue_js_samples\r\ncd vuex_accessing_nested_property_bug\r\nyarn install\r\nyarn serve\r\nopen http://localhost:8080/\r\n```\r\n\r\n### What is expected?\r\nWe should see the message `{ \"level_3_field\": \"level_3_field_value\" }` twice, however it\r\nappears only once. Please see the screenshot.\r\n\r\n### What is actually happening?\r\nThe message `{ \"level_3_field\": \"level_3_field_value\" }` appears only once. As per this screenshot:\r\n\r\n![Image of broken](https://raw.githubusercontent.com/banaio/vue_js_samples/master/vuex_accessing_nested_property_bug/broken.png)\r\n\r\n---\r\n\r\nWhen `state`, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js), is defined as:\r\n\r\n```js\r\n  state: {\r\n    level_1: {\r\n      level_2: {\r\n        level_3: {\r\n          level_3_field: 'level_3_field_value',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  getters: {\r\n    level_1: (state) => state.level_1,\r\n  },\r\n```\r\n\r\nAnd used as, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue),\r\nthe `level_3_broken` does not work, but the `level_3_working` seems to work:\r\n\r\n```js\r\n  computed: {\r\n    ...mapGetters({\r\n      level_3_broken: 'level_1.level_2.level_3',\r\n    }),\r\n    level_3_working() {\r\n      return this.$store.getters['level_1']['level_2'].level_3;\r\n    },\r\n  },\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1475","RelatedDescription":"Closed issue \"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store\" (#1475)"},{"Id":"394070232","IsPullRequest":false,"CreatedAt":"2018-12-31T10:26:24","Actor":"devindwan","Number":"1474","RawContent":null,"Title":"Provide a way to re-compute a getter","State":"closed","Body":"### What problem does this feature solve?\r\nAs we all know `Vue` does not support `Map`(ES6) right now. However, this `Map` feature is useful and it can not be replaced by normal object totally. Maybe we can provide an approach  to manually re-compute a getter when the depended `Map object` has been changed. It's not quite elegant and break reactivity rule, but we can temporarily improve such reactivity support by this patch like function before Vue 3.0 is released.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst state = {\r\n  map: new Map()\r\n}\r\n\r\n// Some getters depend on the map object. Not a necessary use case, just for example.\r\nconst getters = {\r\n  keys: state => {\r\n    return state.map.keys()\r\n  },\r\n  values: state => {\r\n    return state.map.values()\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  SOME_MUTATION (state, value) {\r\n    state.map = value\r\n    // Try to re-compute relevant getters\r\n    recompute(['keys', 'values'])\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1474","RelatedDescription":"Closed issue \"Provide a way to re-compute a getter\" (#1474)"},{"Id":"392025334","IsPullRequest":false,"CreatedAt":"2018-12-18T07:15:58","Actor":"hqzh","Number":"1473","RawContent":null,"Title":"辅助函数连接多个store","State":"open","Body":"### What problem does this feature solve?\r\n有时我的组件需要连多个store,比如公共的和我自己的\r\n\r\n### What does the proposed API look like?\r\n```\r\nimport { createNamespacedHelpers } from \"vuex\";\r\n\r\nconst {\r\n    mapState,\r\n    mapGetters,\r\n    mapActions,\r\n    mapMutations\r\n         } = createNamespacedHelpers([\"myStore\",\"commonStore\"]);\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1473","RelatedDescription":"Open issue \"辅助函数连接多个store\" (#1473)"},{"Id":"391765521","IsPullRequest":true,"CreatedAt":"2018-12-17T15:33:35","Actor":"s-pace","Number":"1472","RawContent":null,"Title":"doc: Enabling DocSearch","State":"open","Body":"👋 vuex,\r\n\r\nI am [working on DocSearch](https://community.algolia.com/docsearch/), this PR will enable vuex to use the same search [experience as vuepress](https://vuepress.vuejs.org/theme/default-theme-config.html#algolia-search), [vuejs](https://vuejs.org/), [bootstrap](https://getbootstrap.com/docs/4.1/getting-started/introduction/) ...\r\n\r\nOur scraper will run every 24H to update your Algolia index. Feel free to [PR your configuration](https://github.com/algolia/docsearch-configs/blob/0b171ddf626dac501b2d9bf4a80e79613c874918/configs/vuex.json) if you need any update, the search is out of the box.\r\n\r\nLet us know if you need anything.","Url":"https://github.com/vuejs/vuex/pull/1472","RelatedDescription":"Open PR \"doc: Enabling DocSearch\" (#1472)"},{"Id":"390153226","IsPullRequest":false,"CreatedAt":"2018-12-12T10:11:47","Actor":"jdoubleu","Number":"1471","RawContent":null,"Title":"Destroy hook in plugin for hotReload","State":"open","Body":"### What problem does this feature solve?\r\nSo far it is only possible for a plugin to be registered through a single function. On the other hand it is not possible to hook into a plugins destroy/replacement.\r\nIn production mode there is no need for such hook, because it's not possible to remove a plugin (this might be reconsidered after https://github.com/vuejs/vuex/issues/467#issuecomment-266493888).\r\n\r\nBut given the [plugin example](https://vuex.vuejs.org/guide/plugins.html#committing-mutations-inside-plugins) which registers event handlers on the `socket` and taking [hot reloading](https://vuex.vuejs.org/guide/hot-reload.html) into account, the handlers are registered multiple times.\r\nThere is no way to unregister an event handler before the plugin gets replaced.\r\n\r\nI'm not sure if this is a general problem with a HMR system (like webpack's) or if its caused by the [`store.hotUpdate()`](https://vuex.vuejs.org/api/#hotupdate) function. I suspect, that even `store.subscribe()` gets called multiple times causing the code to be executed multiple times after some hot replacements.\r\n\r\n**Workaround**:\r\nStore event handlers in a local variable outside the plugin's context.\r\n\r\n### What does the proposed API look like?\r\nEither additional methods exposed by the plugin (similar to [this](https://github.com/vuejs/vuex/issues/467#issuecomment-270836284)):\r\n```\r\nconst myPlugin = {\r\n  init(store) {\r\n     registerAllEventListeners()\r\n\r\n     store.subscribe((mutation, state) => {\r\n        doSomething()\r\n     })\r\n  },\r\n  beforeDestroy(store) {\r\n     unregisterAllEventListeners()\r\n  }\r\n}\r\n```\r\n\r\nOr as a store instance method:\r\n```\r\nconst myPlugin = (store) => {\r\n   registerAllEventListeners()\r\n\r\n   store.subscribe((mutation, state) => {\r\n       doSomething()\r\n   })\r\n\r\n  store.subscribeBeforeDestroy(() => {\r\n     unregisterAllEventListeners()\r\n  }\r\n}\r\n```\r\n\r\nThe latter wouldn't introduce breaking changes of the plugin API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1471","RelatedDescription":"Open issue \"Destroy hook in plugin for hotReload\" (#1471)"},{"Id":"390120640","IsPullRequest":false,"CreatedAt":"2018-12-12T08:46:41","Actor":"oxiaojiano","Number":"1470","RawContent":null,"Title":"actions and mutations 异同","State":"open","Body":"### What problem does this feature solve?\r\n在文档上应该明确说明，actions和mutations都是用来改变state，mutations是只能是同步执行，在执行异步操作的时候在devtools中追踪不到state数据的变化，而actions是可以处理异步函数的数据的\r\n\r\n### What does the proposed API look like?\r\n改变一下描述文字\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1470","RelatedDescription":"Open issue \"actions and mutations 异同\" (#1470)"},{"Id":"388967040","IsPullRequest":false,"CreatedAt":"2018-12-08T22:49:51","Actor":"superbiche","Number":"1469","RawContent":null,"Title":"Access modules easily from store","State":"open","Body":"### What problem does this feature solve?\r\nI'd like to register dynamically a module that would have access to already registered modules - native module, with custom attributes - thus allowing these modules to leverage presenters and other utilities.\r\nCurrently I can do this with `store._modules.root._children` but the fact it takes two `_` makes me feel I'm doing something really dirty\r\n\r\n### What does the proposed API look like?\r\nSomething like `store.getModules = () => store._modules.root._children`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1469","RelatedDescription":"Open issue \"Access modules easily from store\" (#1469)"},{"Id":"388904450","IsPullRequest":true,"CreatedAt":"2018-12-08T09:24:41","Actor":"NataliaTepluhina","Number":"1468","RawContent":null,"Title":"docs: add a description of providing store to Vue instance","State":"open","Body":"_Note:_ This change was already introduced in #858 and it's still crucial for Vuex docs but since this PR exists for 1.5 years and has conflicts with a base branch, I'm opening a new one.\r\n\r\nAdded a short description of how to provide a store to Vue instance to have access to it from inside Vue components.\r\n\r\n**Update:** found docs on injecting store in the `State` doc. I still think they should be moved to `Getting started` part because it's just easier not to miss it in the entry doc.","Url":"https://github.com/vuejs/vuex/pull/1468","RelatedDescription":"Open PR \"docs: add a description of providing store to Vue instance\" (#1468)"},{"Id":"388672064","IsPullRequest":false,"CreatedAt":"2018-12-07T14:16:19","Actor":"xereda","Number":"1467","RawContent":null,"Title":"Vuex getters arguments","State":"open","Body":"### What problem does this feature solve?\r\nIs there a specific reason for a getter to get store context through separate arguments?\r\n\r\nI like how the actions receive the context of the store, that is, with only one argument, this being an object. With this, we have the possibility of using es6 destructuring to extract something specific.\r\n\r\nIf I just need to trigger a mutation (the most common behavior), I just to extract commit from context object. But, if I need to access a getter from a parent module, for example, I extract together with dispatch, the rootGetters.\r\n\r\nAlthough they are exceptional cases, I have some situations that I need, inside a getter, access a getter from another module (parent module). With this, I need to inform arguments that I will not use in the getter scope.\r\n\r\nAnalyze the following example:\r\n\r\n```js\r\nisLoading: (state, getters, rootState, rootGetters) => {\r\n  // getters and rootState not used\r\n  return state.isLoading || rootGetters.module.isLoading;\r\n};\r\n```\r\n\r\nSee that I have passed the getters and rootState arguments, even though, in this case, I do not need them.\r\n\r\nThe question I have is: Is there any specific reason why it has been treated differently from how it is handled in the vuex actions? Why does an vuex action get only one argument and vuex getter get 4 arguments?\r\n\r\nThanks in advance for the time spent by friends. Sorry for bad English.\r\n\r\n### What does the proposed API look like?\r\nJust document, through this issue, the difference between the behavior of getters and actions.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1467","RelatedDescription":"Open issue \"Vuex getters arguments\" (#1467)"},{"Id":"388670505","IsPullRequest":false,"CreatedAt":"2018-12-07T14:11:58","Actor":"xereda","Number":"1466","RawContent":null,"Title":"Vuex getters arguments","State":"closed","Body":"Is there a specific reason for a getter to get store context through separate arguments?\r\n\r\nI like how the actions receive the context of the store, that is, with only one argument, this being an object. With this, we have the possibility of using es6 destructuring to extract something specific.\r\n\r\nIf I just need to trigger a mutation (the most common behavior), I just to extract commit from context object. But, if I need to access a getter from a parent module, for example, I extract together with dispatch, the rootGetters.\r\n\r\nAlthough they are exceptional cases, I have some situations that I need, inside a getter, access a getter from another module (parent module). With this, I need to inform arguments that I will not use in the getter scope.\r\n\r\nAnalyze the following example:\r\n\r\n```javascript\r\nisLoading: (state, getters, rootState, rootGetters) => {\r\n  // getters and rootState not used\r\n  return state.isLoading || rootGetters.module.isLoading;\r\n};\r\n```\r\n\r\nSee that I have passed the getters and rootState arguments, even though, in this case, I do not need them.\r\n\r\nThe question I have is: Is there any specific reason why it has been treated differently from how it is handled in the vuex actions? Why does an vuex action get only one argument and vuex getter get 4 arguments?\r\n\r\nThanks in advance for the time spent by friends. Sorry for bad English.\r\n","Url":"https://github.com/vuejs/vuex/issues/1466","RelatedDescription":"Closed issue \"Vuex getters arguments\" (#1466)"},{"Id":"388075586","IsPullRequest":true,"CreatedAt":"2018-12-06T06:34:01","Actor":"Jinjiang","Number":"1465","RawContent":null,"Title":"docs: fixed links to vm.$watch","State":"open","Body":"In [\"API Reference\" > \"Vuex.Store Instance Methods\" > \"watch\"](https://vuex.vuejs.org/api/#watch) section of the `en` docs, there is a link of \"Vue's `vm.$watch` method\" but linked to `watch` options. It should be https://vuejs.org/v2/api/#vm-watch if I don't misunderstand it.\r\n\r\nI also fixed the `zh` docs. And the `ru` docs seems right. but other language docs seems not same to the latest `en` version. So I am not sure whether should be updated too.\r\n\r\nThanks.\r\n","Url":"https://github.com/vuejs/vuex/pull/1465","RelatedDescription":"Open PR \"docs: fixed links to vm.$watch\" (#1465)"},{"Id":"387770827","IsPullRequest":false,"CreatedAt":"2018-12-05T14:02:45","Actor":"alexeigs","Number":"1464","RawContent":null,"Title":"Using typescript, I cannot access imported store in router.ts","State":"closed","Body":"vue-cli 3.0 setup incl. Typescript\r\n\r\nI try to access a getter through the store property from inside my _router.ts_ which doesn't find anything and results in `undefined`. The imported `store` object doesn't work. Using the debugger, the reference to the store object at this point in time is something like `_store_index__WEBPACK_IMPORTED_MODULE_5__` instead (going down the tree, I can find my getters under `_store_index__WEBPACK_IMPORTED_MODULE_5__.default.getters`).\r\n\r\n_store.ts_\r\n```\r\nimport Vue from 'vue'\r\nimport Vuex, { StoreOptions } from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store: StoreOptions<RootState> = {\r\n    state: {\r\n        version: '1.0.0' // a simple property\r\n    },\r\n    modules: {\r\n        authModule\r\n    }\r\n}\r\n\r\nexport default new Vuex.Store<RootState>(store)\r\n\r\nexport interface RootState {\r\n    version: string\r\n}\r\n\r\n```\r\n\r\n_router.ts_\r\n```\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport store from '@/store/index'\r\n\r\nconst router = new Router({\r\n    mode: 'history',\r\n    base: process.env.BASE_URL,\r\n    routes: [{}]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    if (store.getters.authModule.isUserLoggedIn) {\r\n        // continue\r\n    }\r\n}\r\n\r\n```\r\n\r\nAny idea what's wrong and how I could access the getters instead?","Url":"https://github.com/vuejs/vuex/issues/1464","RelatedDescription":"Closed issue \"Using typescript, I cannot access imported store in router.ts\" (#1464)"},{"Id":"385345295","IsPullRequest":false,"CreatedAt":"2018-12-02T05:37:58","Actor":"guywithdoubts","Number":"1462","RawContent":null,"Title":"Separate instances of Vuex store clash each other when working across separate Vue instances","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9rLp5t4s/](https://jsfiddle.net/9rLp5t4s/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am currently learning/prototyping vue.js and vuex (using plain js, at the moment). I am trying to accomplish following:\r\n\r\n1)create multiple vue instances having their own vuex stores independent to each other. Right now, I am storing only ajax status/progress in vuex store and improve it gradually.\r\n2)vue instances can come from same vue definition (template, methods etc.), but need to work with different vuex store instances.\r\n3)vuex stores should not know about each other (no clashes) and should only work exclusively with their respective vue instance counter parts.\r\n\r\nI almost achieved the above as shown in fiddle:\r\n\r\nTheoritically, we can just create one class out of app.js and app2.js (identical code). But, just to test/troubleshoot things, I separated them.\r\n\r\nI am able to pull data and everything seems working fine.   If I refresh button in second instance the console log shows perfectly.  If I refresh button in first instance it clashes with the vuex store in second instance\r\n\r\n### What is expected?\r\nthe vue instance should not clash with other vuex stores not related to it\r\n\r\n### What is actually happening?\r\nfirst vue instance clashes with vuex store in second instance\r\n\r\n---\r\nmore information here: https://stackoverflow.com/questions/53522844/separate-instances-of-vuex-store-clash-each-other-when-working-across-separate-v\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1462","RelatedDescription":"Closed issue \"Separate instances of Vuex store clash each other when working across separate Vue instances\" (#1462)"},{"Id":"385338921","IsPullRequest":false,"CreatedAt":"2018-12-02T05:18:39","Actor":"farzadmf","Number":"1461","RawContent":null,"Title":"Actions not recognized when using ActionTree","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/farzadmf/vuex-action-tree-issue](https://github.com/farzadmf/vuex-action-tree-issue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere's no need to run anything, just open the repo in VSCode, and you will see the error. I've added comments to make it clear\r\n\r\n### What is expected?\r\nWhen I create an `ActionTree<...>`, I should be able to call my individual Actions on it\r\n\r\n### What is actually happening?\r\nWhen I type my actions to be of type `ActionTree<...>`, then when I call my action(s), I see the error of \"no compatible call signatures\"\r\n\r\n---\r\nI've created constants to be used as names for my actions (so that I don't use strings). At first, I though that is what's causing the problem; that's why I created the 'hello()' function to test, and it seems to me the constants are not an issue here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1461","RelatedDescription":"Closed issue \"Actions not recognized when using ActionTree\" (#1461)"},{"Id":"385534522","IsPullRequest":false,"CreatedAt":"2018-11-29T01:57:43","Actor":"leoyli","Number":"1463","RawContent":null,"Title":"silent and ignore any dispatch or commit during time-traveling in the dev mode","State":"open","Body":"### What problem does this feature solve?\r\nIMO, time-traveling (or traversing in the event sourcing record) should have no side-effects.  Often, I found it is annoying when I \"time-traveled\", there is a side-effect being performed due to the component life cycle or routing middleware try to do their \"regular\" task... this resulted in a polluted mutation records... Consider the fact that some component can be delayed rendered by `v-if=state` (so components may be mounted/unmounted during time-traveling), the same may also happen if the one uses `@vue/vuex-router-sync`, this feature is good to have.\r\n\r\n### What does the proposed API look like?\r\nWhen we click \"time travel to the state\" in the dev tool, Vuex internally have a mechanism to silent and ignore any dispatch or commit to be performed (or prevent state to be mutated during time-traveling).  This locking mechanism can be unlocked if we decide to either **revert** or **traverse** to the latest state (they are basically the same).  While I have little clue how we are going to implement this or should we have this, after discussed with my colleagues, I think it would be beneficial to open this discussion.\r\n\r\n** the reason I post this here is due to the fact that the devTool have to touch the vuex core if we want to have this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1463","RelatedDescription":"Open issue \"silent and ignore any dispatch or commit during time-traveling in the dev mode\" (#1463)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-01-19T05:31:15.749164Z","RunDurationInMilliseconds":4028}