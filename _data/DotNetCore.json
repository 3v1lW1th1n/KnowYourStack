{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Updated: January 25, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"},{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7247601057","Type":"PullRequestEvent","CreatedAt":"2018-02-15T04:14:08","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16395","RelatedDescription":"Opened pull request \"Updating the JIT to take EnableSSE3_4 into account when setting the supported instruction sets\" (#16395) at dotnet/coreclr","RelatedBody":"Resolves the error brought up here: https://github.com/dotnet/coreclr/pull/16378#issuecomment-365701347\r\n\r\nThis updates the `setSupportedISA` calls to take `JitConfig.EnableSSE3_4` into account. This also removes the `compCanUseSSE4` field in favor of more explicit `compSupports` calls.\r\n\r\nFYI. @fiigii, @CarolEidt, @AndyAyersMS "},{"Id":"7247600801","Type":"PullRequestEvent","CreatedAt":"2018-02-15T04:14:00","Actor":"dotnet-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16394","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert\" (#16394) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"7247285659","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:47:15","Actor":"tarekgh","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16334","RelatedDescription":"Merged pull request \"StringComparer Create(culture, CompareOptions) overload\" (#16334) at dotnet/coreclr","RelatedBody":"Related to https://github.com/dotnet/corefx/issues/395\r\nTests PR - https://github.com/dotnet/corefx/pull/27051"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7247217764","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:20:30","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8620","RelatedDescription":"Opened pull request \"Update FSharp Compiler\" (#8620) at dotnet/cli","RelatedBody":"Update F# compiler to align with VS 2017.6\r\n\r\nNot yet approved or merged into VS:\r\nDevdiv Issue: https://devdiv.visualstudio.com/DevDiv/_queries?id=566956&fullScreen=false&_a=edit\r\n\r\n\r\n/cc  @Pilchie, @brettfo, @livarcocc \r\n"},{"Id":"7247217579","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:20:26","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8619","RelatedDescription":"Opened pull request \"Merge release/2.1.1xx to release/2.1.2xx\" (#8619) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.1xx into release/2.1.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.1xx-to-release/2.1.2xx\ngit reset --hard upstream/release/2.1.2xx\ngit merge upstream/release/2.1.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.1xx-to-release/2.1.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7247033866","Type":"PullRequestEvent","CreatedAt":"2018-02-15T00:14:46","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8594","RelatedDescription":"Merged pull request \"Update fsharp\" (#8594) at dotnet/cli","RelatedBody":"Updates F# compiler to match VS 2017.6\r\n"},{"Id":"7247032876","Type":"PullRequestEvent","CreatedAt":"2018-02-15T00:14:26","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8616","RelatedDescription":"Merged pull request \"MSBuild 15.6.82\" (#8616) at dotnet/cli","RelatedBody":"@livarcocc this is the change shiproom approved today."},{"Id":"7247003845","Type":"IssuesEvent","CreatedAt":"2018-02-15T00:04:42","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8418","RelatedDescription":"Closed issue \"Requirement for CLI tool authors to list Microsoft.NETCore.Platforms in nuspec\" (#8418) at dotnet/cli","RelatedBody":"According to current design spec, global CLI tool authors must define the `<dependencies>` section in spec as follows:\r\n\r\n```xml\r\n      <dependencies>\r\n        <dependency id=\"Microsoft.NETCore.Platforms\" version=\"2.0.1\" />\r\n      </dependencies>\r\n```\r\n\r\nIs this really necessary? From my initial tests, portable .NET Core app tools restore just fine without this in the nuspec. \r\n\r\nIIUC this is only required for rid-specific tools, not portable ones. RID-restores require it because dotnet-install-tool is implemented as a dotnet-restore. Could dotnet-install-tool add Microsoft.NETCore.Platforms to the generated csproj it uses to call dotnet-restore?\r\n\r\ncc @wli3 @livarcocc \r\n\r\ncref https://github.com/aspnet/DotNetTools/issues/383\r\n"},{"Id":"7246989734","Type":"IssuesEvent","CreatedAt":"2018-02-15T00:00:20","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8618","RelatedDescription":"Opened issue \"Enable tools RID filtering availability\" (#8618) at dotnet/cli","RelatedBody":"https://github.com/dotnet/cli/issues/8617 first\r\n\r\n- [ ] Until https://github.com/NuGet/Home/issues/6559 is finished\r\n- [ ] Add `Microsoft.NETCore.Platforms` to temp project during restore"},{"Id":"7246984251","Type":"IssuesEvent","CreatedAt":"2018-02-14T23:58:38","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8617","RelatedDescription":"Opened issue \"Remove Microsoft.NETCore.Platforms dependency requirement for producer\" (#8617) at dotnet/cli","RelatedBody":"- [ ] Pass \"any\" as RID to nuget during restore of temp project, so there is no need for `Microsoft.NETCore.Platforms`. However that also blocked all RID specific scenarios\r\n- [ ] Remove implicit package reference during pack in SDK\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7246887352","Type":"PullRequestEvent","CreatedAt":"2018-02-14T23:28:50","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8600","RelatedDescription":"Merged pull request \"Fix README.md for 2.1.1xx\" (#8600) at dotnet/cli","RelatedBody":"It was still pointing to 15.5 downloads\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7247555987","Type":"PullRequestEvent","CreatedAt":"2018-02-15T03:51:47","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/651","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02515-01 (master)\" (#651) at dotnet/standard","RelatedBody":""},{"Id":"7246800202","Type":"PullRequestEvent","CreatedAt":"2018-02-14T23:04:16","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/648","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02513-01 (master)\" (#648) at dotnet/standard","RelatedBody":""},{"Id":"7238206586","Type":"IssuesEvent","CreatedAt":"2018-02-13T13:54:17","Actor":"Ruud-cb","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/650","RelatedDescription":"Opened issue \"Duplicate 'Compile' items were included. Resources\" (#650) at dotnet/standard","RelatedBody":"I am getting the known error that is listed on this page:\r\nhttps://github.com/dotnet/core/blob/master/release-notes/1.0/sdk/1.0-rc3-default-compile-items.md\r\n\r\nWhile it sounds obvious to delete all the Compile items, it simply doesn't work. When you remove them the Resources.resx and the Resources.Designer.cs become separate items and after that I am unable to refer to them from all my other 10 projects.\r\nAlso the fact that the above link is regarding **dot.net CORE** and not **STANDARD** gives me a strange feeling that things have been sorted out correctly.\r\n\r\nWhat else, other then disabeling EnableDefaultCompileItems, can I do?\r\n\r\nMy Language.csproj:\r\n\r\n```\r\n <ItemGroup>\r\n    <Compile Include=\"Resources\\Resources.de.Designer.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>Resources.de.resx</DependentUpon>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.Designer.cs\">\r\n      <DependentUpon>Resources.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.fr.Designer.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>Resources.fr.resx</DependentUpon>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.tr.Designer.cs\">\r\n      <DependentUpon>Resources.tr.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"Resources\\Resources.en.Designer.cs\">\r\n      <DependentUpon>Resources.en.resx</DependentUpon>\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n    </Compile>\r\n    <Compile Include=\"T4\\CreateLocolizedKeys.cs\">\r\n      <AutoGen>True</AutoGen>\r\n      <DesignTime>True</DesignTime>\r\n      <DependentUpon>CreateLocolizedKeys.tt</DependentUpon>\r\n    </Compile>\r\n  </ItemGroup>\r\n<ItemGroup>\r\n    <EmbeddedResource Include=\"Resources\\Resources.de.resx\">\r\n      <Generator>ResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.de.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.fr.resx\">\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.fr.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.tr.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.tr.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.en.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.en.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Resources</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n    <EmbeddedResource Include=\"Resources\\Resources.resx\">\r\n      <Generator>PublicResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resources.Designer.cs</LastGenOutput>\r\n      <CustomToolNamespace>Babywatcher.Language</CustomToolNamespace>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n```\r\n\r\nI am unknown what consequences this has to the rest, but the current workaround is by adding these 2 property groups:\r\n\r\n```\r\n  <PropertyGroup>\r\n    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>\r\n</PropertyGroup>\r\n  <PropertyGroup>\r\n    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>\r\n  </PropertyGroup>\r\n```"},{"Id":"7234553536","Type":"IssuesEvent","CreatedAt":"2018-02-12T21:00:10","Actor":"chadAtGA","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/649","RelatedDescription":"Opened issue \".net core console app reference .net standard class library with nuget pkg by file not project. \" (#649) at dotnet/standard","RelatedBody":"I created a simple .net core 2.0 console project and a simple .net standard 2.0 class library. I add a ref to the nuget package StackExchange.Redis and then use the redis in my class library. I build the release version of my standard 2.0 class library. Then I try and reference that dll by browsing not by project. I startup my console and it says that it cannot find the stackexchange redis dll. I have tried publishing it so all of the dlls are in the but it does not seem to make a difference. Calling ReturnInt no problems calling RetStringRetString it fails. I'm sure I'm missing something simple.\r\n\r\nHere is my class library\r\n\r\n public class Class1\r\n    {\r\n\t\tpublic int ReturnInt()\r\n\t\t{\r\n\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\r\n\t\tpublic string RetString()\r\n\t\t{\r\n\t\t\tStackExchange.Redis.ConnectionMultiplexer connectionMultiplexer = StackExchange.Redis.ConnectionMultiplexer.Connect(\"localhost\");\r\n\r\n\t\t\tif(connectionMultiplexer.IsConnected)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine(\"Connecte\");\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n    }"},{"Id":"7227994914","Type":"PullRequestEvent","CreatedAt":"2018-02-11T03:28:01","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/648","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02511-01 (master)\" (#648) at dotnet/standard","RelatedBody":""},{"Id":"7227937564","Type":"IssuesEvent","CreatedAt":"2018-02-11T02:43:52","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/647","RelatedDescription":"Closed issue \"[Feature-Request] N-bit sized int and floating point types\" (#647) at dotnet/standard","RelatedBody":"I propose we should be able to have N-bit sized int and floating point types.\r\nHere is how it could work:\r\n\r\nObviously we already have the following:\r\n- int 1 / uint 1 (bool)\r\n- uint 8 (byte)\r\n- int 8 (sbyte)\r\n- uint 16, 32 and 64 (ushort, uint and ulong)\r\n- int 16, 32 and 64 (short, int and long)\r\n- float 32 (single)\r\n- float 64 (double)\r\n\r\nBut what about the following:\r\n- (u)int 2 (2 bits)\r\n- (u)int 4 (4 bits)\r\n- (u)int 128 (128 bits)\r\n- (u)int 256 (256 bits)\r\n- (u)int 2^n (2^n bits)\r\n- (float 1 makes no sense but you could still add it)\r\n- float 2 (2 bits)\r\n- float 4 (4 bits)\r\n- float 8 (8 bits)\r\n- float 16 (16 bits)\r\n- float 128 (128 bits)\r\n- float 256 (256 bits)\r\n- float 2^n (2^n bits)\r\n\r\nThe classes could be called the following:\r\nFor integers: `intj` where j is a power of 2 for a j bit integer\r\nFor unsigned integers: `uintj` where j is a power of 2 for a j bit unsigned integer\r\nFor floats: `floatj` where j is a power of 2 for a j bit float\r\nAnd there could be special names for floats between `float8` and `float256` ranging from `quarter`, `half`, `single` (already in .NET), `double` (already in .NET), `quadruple`, `octuple`\r\n\r\nWhy do I need this in my beloved c#?\r\n1. Because it will give you more/less precise floats to use\r\n2. It will give you more integers to use\r\n3. There are no good floating point (bigger than double) libraries out there that do not just use System.Math which reduces it to double precision anyway\r\n\r\nWon't this ruin my IDE with millions of different type names?\r\n1. Not if you make a maximum for the types (say 1024) or make it so that the IDE can have the ability to only show you some (say up to 1024) then it will not give you millions of types suggested"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7247617943","Type":"IssuesEvent","CreatedAt":"2018-02-15T04:22:44","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/27155","RelatedDescription":"Opened issue \"Use shared IO helper code from CoreCLR\" (#27155) at dotnet/corefx","RelatedBody":"Common IO source code helpers were copied to CoreCLR some time ago. Now that we are mirroring, we should switch to using the mirrored code. There has been quite a bit of drift, so it might take some effort.\r\n\r\nsrc/Common/src/System/IO/PathInternal.Windows.cs -> src/Common/src/CoreLib/System/IO/PathInternal.Windows.cs\r\n\r\nhttps://github.com/dotnet/corefx/pull/27150#discussion_r168377623\r\n"},{"Id":"7247596956","Type":"PullRequestEvent","CreatedAt":"2018-02-15T04:12:04","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27153","RelatedDescription":"Opened pull request \"Current directory code duplicates Environment\" (#27153) at dotnet/corefx","RelatedBody":"Just call Environment.CurrentDirectory. Remove a number of P/Invokes\r\nthat are no longer in use."},{"Id":"7247550149","Type":"PullRequestEvent","CreatedAt":"2018-02-15T03:48:47","Actor":"brianrob","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27141","RelatedDescription":"Merged pull request \"Temporarily Disable EventSource ETW Tests and Revert TraceEvent Package Version\" (#27141) at dotnet/corefx","RelatedBody":"The upgrade to TraceEvent has broken the performance tests and there isn't a clean way to make the ETW tests run under this version of TraceEvent."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7247643242","Type":"PullRequestEvent","CreatedAt":"2018-02-15T04:35:32","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24867","RelatedDescription":"Opened pull request \"Remove elastic trivia so that single line lambdas stay single line local functions.\" (#24867) at dotnet/roslyn","RelatedBody":""},{"Id":"7247555003","Type":"PullRequestEvent","CreatedAt":"2018-02-15T03:51:18","Actor":"333fred","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24866","RelatedDescription":"Opened pull request \"[WIP] Add support for implicit labels\" (#24866) at dotnet/roslyn","RelatedBody":"This is an initial approach for adding the implicit labels that are generated for Do/While/ForTo/ForEach/Try statements, #23780. I took the approach of adding these labels as the first/last statements in the block that is contained by these statements, which mirrors the already-existing ILabeledOperations for the function exit label. Another option here is to add ContinueLabel/ExitLabel properties to the actual IOperation structures, but I favor this approach because it 1) is consistent with how the method exit label works and 2) requires no interface changes. Before going and updating baselines, I wanted to get general feedback on the approach from @dotnet/analyzer-ioperation @AlekseyTs. There's still a few bugs in this implementation I'm working on (it doesn't correctly handle scenarios where loop labels can be null, such as nested For Each with a combined Next statement).\r\n\r\nExample While Loop:\r\n```VB.NET\r\nClass Program\r\n    Private Shared Sub Main()\r\n        Dim number As Integer = 10\r\n        While number'BIND:\"While number\"\r\n        End While\r\n    End Sub\r\nEnd Class\r\n```\r\nOld Tree:\r\n```\r\nIWhileLoopOperation (ConditionIsTop: True, ConditionIsUntil: False) (LoopKind.While) (OperationKind.Loop, Type: null) (Syntax: 'While numbe ... End While')\r\n  Condition: \r\n    IConversionOperation (TryCast: False, Unchecked) (OperationKind.Conversion, Type: System.Boolean, IsImplicit) (Syntax: 'number')\r\n      Conversion: CommonConversion (Exists: True, IsIdentity: False, IsNumeric: False, IsReference: False, IsUserDefined: False) (MethodSymbol: null)\r\n      Operand: \r\n        ILocalReferenceOperation: number (OperationKind.LocalReference, Type: System.Int32) (Syntax: 'number')\r\n  Body: \r\n    IBlockOperation (0 statements) (OperationKind.Block, Type: null, IsImplicit) (Syntax: 'While numbe ... End While')\r\n  IgnoredCondition: \r\n    null\r\n```\r\nNew Tree:\r\n```\r\nIWhileLoopOperation (ConditionIsTop: True, ConditionIsUntil: False) (LoopKind.While) (OperationKind.Loop, Type: null) (Syntax: 'While numbe ... End While')\r\n  Condition: \r\n    IConversionOperation (TryCast: False, Unchecked) (OperationKind.Conversion, Type: System.Boolean, IsImplicit) (Syntax: 'number')\r\n      Conversion: CommonConversion (Exists: True, IsIdentity: False, IsNumeric: False, IsReference: False, IsUserDefined: False) (MethodSymbol: null)\r\n      Operand: \r\n        ILocalReferenceOperation: number (OperationKind.LocalReference, Type: System.Int32) (Syntax: 'number')\r\n  Body: \r\n    IBlockOperation (2 statements) (OperationKind.Block, Type: null, IsImplicit) (Syntax: 'While numbe ... End While')\r\n      ILabeledOperation (Label: continue) (OperationKind.Labeled, Type: null, IsImplicit) (Syntax: 'While number')\r\n        Statement: \r\n          null\r\n      ILabeledOperation (Label: exit) (OperationKind.Labeled, Type: null, IsImplicit) (Syntax: 'End While')\r\n        Statement: \r\n          null\r\n  IgnoredCondition: \r\n    null\r\n```\r\n\r\nExample For Loop:\r\n```VB.NET\r\nImports System\r\nClass C\r\n    Shared Sub Main()\r\n        Dim arr As String() = New String(1) {}\r\n        arr(0) = \"one\"\r\n        arr(1) = \"two\"\r\n        For Each s As String In arr'BIND:\"For Each s As String In arr\"\r\n            Console.WriteLine(s)\r\n        Next\r\n    End Sub\r\nEnd Class\r\n```\r\nOld Tree:\r\n```\r\nIForEachLoopOperation (LoopKind.ForEach) (OperationKind.Loop, Type: null) (Syntax: 'For Each s  ... Next')\r\n  Locals: Local_1: s As System.String\r\n  LoopControlVariable: \r\n    IVariableDeclaratorOperation (Symbol: s As System.String) (OperationKind.VariableDeclarator, Type: null) (Syntax: 's As String')\r\n      Initializer: \r\n        null\r\n  Collection: \r\n    IConversionOperation (TryCast: False, Unchecked) (OperationKind.Conversion, Type: System.Collections.IEnumerable, IsImplicit) (Syntax: 'arr')\r\n      Conversion: CommonConversion (Exists: True, IsIdentity: False, IsNumeric: False, IsReference: True, IsUserDefined: False) (MethodSymbol: null)\r\n      Operand: \r\n        ILocalReferenceOperation: arr (OperationKind.LocalReference, Type: System.String()) (Syntax: 'arr')\r\n  Body: \r\n    IBlockOperation (1 statements) (OperationKind.Block, Type: null, IsImplicit) (Syntax: 'For Each s  ... Next')\r\n      IExpressionStatementOperation (OperationKind.ExpressionStatement, Type: null) (Syntax: 'Console.WriteLine(s)')\r\n        Expression: \r\n          IInvocationOperation (Sub System.Console.WriteLine(value As System.String)) (OperationKind.Invocation, Type: System.Void) (Syntax: 'Console.WriteLine(s)')\r\n            Instance Receiver: \r\n              null\r\n            Arguments(1):\r\n                IArgumentOperation (ArgumentKind.Explicit, Matching Parameter: value) (OperationKind.Argument, Type: null) (Syntax: 's')\r\n                  ILocalReferenceOperation: s (OperationKind.LocalReference, Type: System.String) (Syntax: 's')\r\n                  InConversion: CommonConversion (Exists: True, IsIdentity: True, IsNumeric: False, IsReference: False, IsUserDefined: False) (MethodSymbol: null)\r\n                  OutConversion: CommonConversion (Exists: True, IsIdentity: True, IsNumeric: False, IsReference: False, IsUserDefined: False) (MethodSymbol: null)\r\n  NextVariables(0)\r\n```\r\nNew Tree:\r\n```\r\nIForEachLoopOperation (LoopKind.ForEach) (OperationKind.Loop, Type: null) (Syntax: 'For Each s  ... Next')\r\n  Locals: Local_1: s As System.String\r\n  LoopControlVariable: \r\n    IVariableDeclaratorOperation (Symbol: s As System.String) (OperationKind.VariableDeclarator, Type: null) (Syntax: 's As String')\r\n      Initializer: \r\n        null\r\n  Collection: \r\n    IConversionOperation (TryCast: False, Unchecked) (OperationKind.Conversion, Type: System.Collections.IEnumerable, IsImplicit) (Syntax: 'arr')\r\n      Conversion: CommonConversion (Exists: True, IsIdentity: False, IsNumeric: False, IsReference: True, IsUserDefined: False) (MethodSymbol: null)\r\n      Operand: \r\n        ILocalReferenceOperation: arr (OperationKind.LocalReference, Type: System.String()) (Syntax: 'arr')\r\n  Body: \r\n    IBlockOperation (3 statements) (OperationKind.Block, Type: null, IsImplicit) (Syntax: 'For Each s  ... Next')\r\n      ILabeledOperation (Label: continue) (OperationKind.Labeled, Type: null, IsImplicit) (Syntax: 'For Each s  ... ring In arr')\r\n        Statement: \r\n          null\r\n      IExpressionStatementOperation (OperationKind.ExpressionStatement, Type: null) (Syntax: 'Console.WriteLine(s)')\r\n        Expression: \r\n          IInvocationOperation (Sub System.Console.WriteLine(value As System.String)) (OperationKind.Invocation, Type: System.Void) (Syntax: 'Console.WriteLine(s)')\r\n            Instance Receiver: \r\n              null\r\n            Arguments(1):\r\n                IArgumentOperation (ArgumentKind.Explicit, Matching Parameter: value) (OperationKind.Argument, Type: null) (Syntax: 's')\r\n                  ILocalReferenceOperation: s (OperationKind.LocalReference, Type: System.String) (Syntax: 's')\r\n                  InConversion: CommonConversion (Exists: True, IsIdentity: True, IsNumeric: False, IsReference: False, IsUserDefined: False) (MethodSymbol: null)\r\n                  OutConversion: CommonConversion (Exists: True, IsIdentity: True, IsNumeric: False, IsReference: False, IsUserDefined: False) (MethodSymbol: null)\r\n      ILabeledOperation (Label: exit) (OperationKind.Labeled, Type: null, IsImplicit) (Syntax: 'Next')\r\n        Statement: \r\n          null\r\n  NextVariables(0)\r\n```"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7247570389","Type":"PullRequestEvent","CreatedAt":"2018-02-15T03:59:07","Actor":"ahsonkhan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5385","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5385) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7246737842","Type":"IssuesEvent","CreatedAt":"2018-02-14T22:48:26","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5388","RelatedDescription":"Opened issue \"Error building wasm toolchain on Windows\" (#5388) at dotnet/corert","RelatedBody":"Following the steps from https://github.com/dotnet/corert/blob/16aefe6/Documentation/how-to-build-WebAssembly.md, I am stuck at step 4,  `build.cmd clean wasm` throws:\r\n\r\n```cmd\r\n[ 75%] Linking CXX static library libPortableRuntime.bc\r\nERROR: Linking globals named 'g_rgWellKnownMethodNames': symbol multiply defined!\r\nTraceback (most recent call last):\r\n  File \"C:\\emsdk-portable-64bit\\emscripten\\1.37.33\\\\em++\", line 15, in <module>\r\n    python_selector.run(emcc, profile=True)\r\n  File \"C:\\emsdk-portable-64bit\\emscripten\\1.37.33\\tools\\python_selector.py\", line 43, in run\r\n    sys.exit(run_by_import(filename, main) if on_allowed_version() else run_by_subprocess(filename))\r\n  File \"C:\\emsdk-portable-64bit\\emscripten\\1.37.33\\tools\\python_selector.py\", line 13, in run_by_import\r\n    return getattr(importlib.import_module(os.path.basename(filename)), main)()\r\n  File \"C:\\emsdk-portable-64bit\\emscripten\\1.37.33\\emcc.py\", line 1459, in run\r\n    shared.Building.link(linker_inputs, specified_target)\r\n  File \"C:\\emsdk-portable-64bit\\emscripten\\1.37.33\\tools\\shared.py\", line 1844, in link\r\n    output = run_process([LLVM_LINK] + link_args + ['-o', target], stdout=PIPE).stdout\r\n  File \"C:\\emsdk-portable-64bit\\emscripten\\1.37.33\\tools\\shared.py\", line 131, in run_process\r\n    return run_base(cmd, universal_newlines=universal_newlines, check=check, *args, **kw)\r\n  File \"C:\\emsdk-portable-64bit\\emscripten\\1.37.33\\tools\\shared.py\", line 127, in run_base\r\n    result.check_returncode()\r\n```"},{"Id":"7244800046","Type":"PullRequestEvent","CreatedAt":"2018-02-14T16:08:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5386","RelatedDescription":"Merged pull request \"Typos\" (#5386) at dotnet/corert","RelatedBody":""},{"Id":"7244407409","Type":"PullRequestEvent","CreatedAt":"2018-02-14T15:03:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5387","RelatedDescription":"Merged pull request \"Fix MdArray::Set for pointer type arrays\" (#5387) at dotnet/corert","RelatedBody":"Ran the regression test I wrote for dotnet/coreclr#16381 and found CoreRT has a different bug around this."},{"Id":"7243034115","Type":"PullRequestEvent","CreatedAt":"2018-02-14T10:13:25","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5387","RelatedDescription":"Opened pull request \"Fix MdArray::Set for pointer type arrays\" (#5387) at dotnet/corert","RelatedBody":"Ran the regression test I wrote for dotnet/coreclr#16381 and found CoreRT has a different bug around this."},{"Id":"7242589482","Type":"PullRequestEvent","CreatedAt":"2018-02-14T08:29:58","Actor":"github-john-doe","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5386","RelatedDescription":"Opened pull request \"Typos\" (#5386) at dotnet/corert","RelatedBody":""},{"Id":"7242380487","Type":"PullRequestEvent","CreatedAt":"2018-02-14T07:23:48","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5385","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5385) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7242376611","Type":"PullRequestEvent","CreatedAt":"2018-02-14T07:22:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5384","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5384) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7240916164","Type":"PullRequestEvent","CreatedAt":"2018-02-13T22:39:35","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5384","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5384) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7236522754","Type":"IssuesEvent","CreatedAt":"2018-02-13T07:29:27","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5382","RelatedDescription":"Closed issue \"Enum.GetValues(Type) results in '{Type}[]' is missing metadata.\" (#5382) at dotnet/corert","RelatedBody":"Continuing my exploration of CoreRT, I'm currently stuck on the following exception:\r\n\r\n> An error occurred while loading the license file. 'Org.BouncyCastle.Security.DigestUtilities.DigestAlgorithm[]' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n>   at System.Enum.GetValues(Type) + 0x64\r\n>   at Org.BouncyCastle.Utilities.Enums.GetEnumValues(Type) + 0x2a\r\n>   at Org.BouncyCastle.Utilities.Enums.GetArbitraryValue(Type) + 0x9\r\n\r\nI have the following in `rd.xml` which doesn't seem to be sufficient:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">\r\n  <Application>\r\n    <Assembly Name=\"CoreCompat.BouncyCastle\">\r\n      <Type Name=\"Org.BouncyCastle.Security.DigestUtilities+DigestAlgorithm\" Browse=\"Required All\" Serialize=\"Required All\" Dynamic=\"Required All\" XmlSerializer=\"Required All\"/>\r\n    </Assembly>\r\n  </Application>\r\n</Directives>\r\n```\r\n\r\nThings I noticed, perhaps not relevant:\r\n- The exception message mentions `Org.BouncyCastle.Security.DigestUtilities.DigestAlgorithm[]`, so this seems to reference an array?\r\n- `Org.BouncyCastle.Security.DigestUtilities.DigestAlgorithm` is an enum, and a child type of `Org.BouncyCastle.Security.DigestUtilities`, so the proper way to reference this type seems to be `Org.BouncyCastle.Security.DigestUtilities+DigestAlgorithm` (i.e. using a `+` to denote a child type instead of a `.`).\r\n\r\nAny pointers on how to tackle this error would be welcome 😄 ."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7247217740","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:20:29","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1963","RelatedDescription":"Opened pull request \"Merge release/2.1 to master\" (#1963) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7247210628","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:17:46","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1962","RelatedDescription":"Opened pull request \"Update RepoToolset to 1.0.0-beta-62614-04\" (#1962) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256."},{"Id":"7247206873","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:16:20","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1961","RelatedDescription":"Closed pull request \"Update RepoToolset to 1.0.0-beta-62614-04\" (#1961) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256.\r\nIncludes support for perf tests."},{"Id":"7247206140","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:16:04","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1961","RelatedDescription":null,"RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256.\r\nIncludes support for perf tests."},{"Id":"7247193874","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:11:23","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1961","RelatedDescription":"Closed pull request \"Update RepoToolset to 1.0.0-beta-62614-04\" (#1961) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256.\r\nIncludes support for perf tests."},{"Id":"7247185317","Type":"PullRequestEvent","CreatedAt":"2018-02-15T01:08:08","Actor":"tmat","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1961","RelatedDescription":"Opened pull request \"Update RepoToolset to 1.0.0-beta-62614-04\" (#1961) at dotnet/sdk","RelatedBody":"Sets algorithm used to calculate source file checksums stored in PDB to SHA256.\r\nIncludes support for perf tests."},{"Id":"7246955220","Type":"IssuesEvent","CreatedAt":"2018-02-14T23:49:24","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1631","RelatedDescription":"Closed issue \"Release labels are missing for 2.0.0 (others?)\" (#1631) at dotnet/sdk","RelatedBody":"See https://github.com/dotnet/sdk/releases\r\n\r\nNote that it appears incomplete / out-of-date.\r\n\r\n/cc @livarcocc @nguerrera "},{"Id":"7246828729","Type":"IssuesEvent","CreatedAt":"2018-02-14T23:12:03","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1406","RelatedDescription":"Closed issue \"Microsoft.TargetingPack.NETFramework.v4.5.1 not covering System.Xml (contains System.XML.dll - case issue?)\" (#1406) at dotnet/sdk","RelatedBody":"Hi, I'm trying to cross-compile a NuGet package for netstandard1.6 and net451 on Linux (debian).\r\n\r\nI have this deal which has been working fine:\r\n\r\n```xml\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'net451' \">\r\n    <DefineConstants>$(DefineConstants);WINDOWS_IS_STILL_KINDA_COOL</DefineConstants>\r\n    <RuntimeIdentifier>win7-x64</RuntimeIdentifier>\r\n    <FrameworkPathOverride>$(NuGetPackageFolders)microsoft.targetingpack.netframework.v4.5.1\\1.0.1\\lib\\net451\\</FrameworkPathOverride>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'net451' \">\r\n    <PackageReference Include=\"Microsoft.TargetingPack.NETFramework.v4.5.1\" Version=\"1.0.1\" ExcludeAssets=\"All\" PrivateAssets=\"All\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.EventLog\" Version=\"1.0.2\" />\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"System.Runtime\" />\r\n    <Reference Include=\"System.ComponentModel\" />\r\n    <Reference Include=\"Microsoft.CSharp\" />\r\n    <Reference Include=\"System.Xml\" />\r\n  </ItemGroup>\r\n```\r\n\r\nHowever, I get this build warning:\r\n\r\n```\r\n/opt/dotnet/sdk/1.0.4/Microsoft.Common.CurrentVersion.targets(1964,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"System.Xml\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n```\r\n\r\nIt's only since I've then gone on to use `System.Xml` classes that I do now get compilation errors.\r\n\r\nSneaking a look inside `Microsoft.TargetingPack.NETFramework.v4.5.1`, I see there's a `System.XML.dll`, and not a `System.Xml.dll`.  Could that be the cause?  Anything else I can try?"},{"Id":"7246804799","Type":"PullRequestEvent","CreatedAt":"2018-02-14T23:05:29","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1955","RelatedDescription":"Closed pull request \"Merge release/2.1 into master\" (#1955) at dotnet/sdk","RelatedBody":"Merge release/2.1 into master"},{"Id":"7246793409","Type":"PullRequestEvent","CreatedAt":"2018-02-14T23:02:25","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1955","RelatedDescription":null,"RelatedBody":"Merge release/2.1 into master"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"963791622948388870","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/icP5AqPRuB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":29,"RawContent":null},{"Id":"963413986954895360","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"dotnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/l9RlPrj5Ep","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"963128572595519489","CreatedAt":"2018-02-12T19:12:00+00:00","UserScreenname":"dotnet","Text":"You can run your application anywhere with .NET Core – join @coolsch as he talks about .NET in 2018 at… https://t.co/0sSc3B7yOQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null},{"Id":"963083274636554240","CreatedAt":"2018-02-12T16:12:00+00:00","UserScreenname":"dotnet","Text":"Update your existing .NET application to take advantage of new features in Windows Forms and WPF with @csharpfritz… https://t.co/yjqbIthkKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":16,"RawContent":null},{"Id":"961657885137698816","CreatedAt":"2018-02-08T17:48:01+00:00","UserScreenname":"dotnet","Text":"Tomorrow is NOW! @DEVintersection Take a deep dive with the Microsoft’s AI team into machine learning, predictive a… https://t.co/5AcI4VRNyG","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":21,"FavoriteCount":15,"RawContent":null},{"Id":"961596291942961154","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"dotnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/kWer0gYtOp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":10,"RawContent":null},{"Id":"961382608914518016","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/dMJ5QcKEcp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null},{"Id":"960930092372381696","CreatedAt":"2018-02-06T17:36:01+00:00","UserScreenname":"dotnet","Text":"Register now for @DEVintersection for a workshop package and go home with an awesome piece of hardware Xbox One X,… https://t.co/PqoYqNI5Ga","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":25,"FavoriteCount":13,"RawContent":null},{"Id":"960633633370292224","CreatedAt":"2018-02-05T21:58:00+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Framework 4.7.2 Early Access build 3052! https://t.co/8lGEqT6FqM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":101,"FavoriteCount":81,"RawContent":null},{"Id":"959498964503425026","CreatedAt":"2018-02-02T18:49:14+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1 roadmap https://t.co/1QFI97S11f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":245,"FavoriteCount":191,"RawContent":null},{"Id":"959498759733301248","CreatedAt":"2018-02-02T18:48:25+00:00","UserScreenname":"dotnet","Text":"Entity Framework Core 2.1 Roadmap https://t.co/jyrJwFiQzJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":76,"RawContent":null},{"Id":"959492955391143939","CreatedAt":"2018-02-02T18:25:21+00:00","UserScreenname":"dotnet","Text":".NET Core 2.1 Roadmap https://t.co/v7JFqyVWWb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":211,"FavoriteCount":165,"RawContent":null},{"Id":"959125554988371969","CreatedAt":"2018-02-01T18:05:26+00:00","UserScreenname":"dotnet","Text":"#TBT: You've probably used LINQ for years, but have you ever wondered about the underlying pieces and how they fit… https://t.co/tuqqdA5nUG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":81,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2018-02-15T05:30:20.6337531Z","RunDurationInMilliseconds":8190}