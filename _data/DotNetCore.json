{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":23,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":19,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":46,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null},{"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","PublishedOn":"2017-08-25T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current blog post focuses on &#8220;Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance&#8220;. Just as a reminder, the four introductory blog posts of this series are (or... <a aria-label=\"read more about Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","RawContent":null},{"Title":"The week in .NET – Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!","PublishedOn":"2017-08-23T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previous posts: .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore Visual Studio extension of the week: Project File Tools The Project File Tools Visual Studio extension provides package name and version IntelliSense, tooltips for... <a aria-label=\"read more about The week in .NET &#8211; Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/","RawContent":null},{"Title":".NET Framework Update for AppContext","PublishedOn":"2017-08-18T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"A new update for .NET Framework is now available for the AppContext class. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10. The AppContext class was introduced in the... <a aria-label=\"read more about .NET Framework Update for AppContext\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","RawContent":null},{"Title":".NET Framework August 2017 Preview of Quality Rollup","PublishedOn":"2017-08-16T00:00:00","CommentsCount":3,"FacebookCount":0,"Summary":"The August 2017 Preview of Quality Rollup is now available. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Values added to System.Web.Cache expire immediately, with .NET Framework 4.7. [452228] Also reported at ASP.NET Forums #2123507 ASP.NET site running on Sitefinity broken, with .NET Framework 4.7. [457739] CLR CRWLock::StaticAcquireWriterLock() never returns if... <a aria-label=\"read more about .NET Framework August 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6470589367","Type":"PullRequestEvent","CreatedAt":"2017-08-17T09:24:13","Actor":"stefanov-stefan","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Opened pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6404144202","Type":"IssuesEvent","CreatedAt":"2017-08-07T01:09:52","Actor":"ghuntley","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/84","RelatedDescription":"Opened issue \"How can we embed images into the .NET foundation website?\" (#84) at dotnet/home","RelatedBody":"The CSP policy on https://dotnetfoundation.org/reactiveui is preventing embedding images. I'd prefer to _not to adjust CSP_ policy to add the reactiveui.net and instead have some way to pull-request images into this repository.\r\n\r\n![image](https://user-images.githubusercontent.com/127353/29008831-a28cfee4-7b60-11e7-81e4-46342b074d4b.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6541935607","Type":"IssuesEvent","CreatedAt":"2017-09-01T22:57:04","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/31","RelatedDescription":"Opened issue \"Issues with .NET Standard 2.0 with .NET Framework & NuGet\" (#31) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\nWe've designed .NET Standard & our tooling so that projects targeting .NET Framework 4.6.1 can consume NuGet packages & projects targeting .NET Standard 2.0 or earlier. Unfortunately, we've seen a few issues around that scenario. The purpose of this document is to summarize the issues, outline our plan on addressing them, and providing workarounds you can deploy with today's state of our tooling.\r\n\r\n## Symptoms and root cause\r\n\r\nThe [primary symptom](https:/github.com/dotnet/standard/issues/410) is that applications crash with a `FileLoadException` or a `FileNotFoundException`. Another symptom is warnings at build time regarding assembly versions. This is due to one or both of the following issues:\r\n\r\n1. Missing binding redirects\r\n2. Missing binaries that come from indirect NuGet packages\r\n\r\n### Missing binding redirects\r\n\r\n.NET Standard 1.x was based around contracts. Many of these contracts shipped with .NET Framework 4.5 and later. However, different versions of .NET Framework picked up different versions of these contracts, as by-design of contract versioning. As a side effect of marking .NET Framework 4.6.1 as implementing .NET Standard 2.0, some projects will now start picking up binaries built for .NET Standard 1.5 and 1.6 (as opposed to previously where .NET Framework 4.6.1 was considered as implementing .NET Standard 1.4). This results in mismatches of the assembly versions between what was shipped in .NET Framework and what was part of .NET Standard 1.5/1.6.\r\n\r\nThis can be addressed by binding redirects. As writing them by hand sucks, we added an [Automatic Binding Redirect Generation][abrg] feature in .NET Framework 4.5.1. This feature is opt-in. Unfortunately, it's not enabled based on target framework, but by which target framework was selected when the project was created (as the feature is turned on via an MSBuild property that is conditionally emitted by the template). In practice, this means it's mostly off you often upgrade existing projects, rather than creating new ones.\r\n\r\n[abrg]: https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/how-to-enable-and-disable-automatic-binding-redirection\r\n\r\n### Missing binaries\r\n\r\nThere are two primary flavors of NuGet: `packages.config` and `PackageReference`.\r\n\r\n* With `packages.config`, each project has a config file with a flattened graph of all the NuGet dependencies. The project file in turn has direct links to all the assets. The assets are selected at install time. None of this includes indirect NuGet references coming from referenced projects.\r\n\r\n* With `PackageReference` each project contains MSBuild `PackageReference` items. The project file contains no references to any assets as the assets are selected at build time. Package restore will compute the graph of all packages, including indirect NuGet references coming from referenced projects.\r\n\r\nThe default for .NET Framework projects is `packages.config`. This ensures more compatibility because `PackageReference` doesn't support all the features that `packages.config` did, for example, PowerShell install scripts and content.\r\n\r\nThe only supported mode for SDK-style projects (.NET Core/.NET Standard) is `PackageReference`. This means that a .NET Framework project referencing a .NET Standard project ends up crossing the streams between two different NuGet models. When the .NET Standard project references NuGet packages that the .NET Framework project doesn't reference, the application ends up missing all binaries coming from those packages.\r\n\r\nWhy has this worked before? Because with` packages.config`, all dependencies are copied to each project's output folder. MSBuild copies them up from there. With `PackageReference`, we don't copy the binaries because it relies on the consuming project to see its dependencies and extract the proper asset itself. This allows the consuming project to pick up the right assets for packages that use bait & switch (which many of the .NET packages must do).\r\n\r\n### Plan\r\n\r\nThe plan is to address these issues moving forward as follows:\r\n\r\n1. **Converge on `PackageReference` for all project types**, including .NET Framework. The short-term plan for (1) is to start blocking project-to-project references in Visual Studio 15.4 that will end up crossing the streams between `packages.config` and `PackageReference`. This block is UI only; you can still edit the reference by editing the project by hand. The error message will instruct you to switch the .NET Framework project to `PackageReference` if you want to reference a .NET Standard project. Referencing .NET Standard binaries or NuGet packages will not require this, it's only about project-to-project references. In later releases, we plan on providing a converter. The challenge is that `packages.config` has features we can't offer for `PackagReference` across the board, in particular PowerShell install scripts and content. We'll need good guidance and mitigations, if applicable.\r\n\r\n2. **Ensure binding redirects are on by default**. Short term, this means we need to fix our target files to make sure we turn on automatic binding redirect generation. However, binding redirects don't work well in all scenarios, when there is no application project (like unit tests or add-ins). We need to work on a plan to bring the regular “higher wins” binding policy without binding redirects. This needs a proposal and proper vetting, but it seems we've reached the point where this is necessary.\r\n\r\n## Workarounds\r\n\r\n### Regular .NET Framework projects\r\n\r\n1. Enable [automatic binding redirects][abrg] in the root .NET Framework application.\r\n2. Make sure your root application project doesn't use `packages.config` but uses `PackageReference` for NuGet packages\r\n    * If you currently don't have `packages.config`, simply add `<RestoreProjectStyle>PackageReference</RestoreProjectStyle>` to your project file\r\n    * If you currently do have a `packages.config`, convert the contents to packages references in the project file. The syntax is like this:\r\n        - `<PackageReference Include=\"package-id\" Version=\"package-version\" />`\r\n\r\n### ASP.NET web applications and web sites\r\n\r\n1. Web applications and web sites don't support automatic binding redirect generation. In order to resolve binding conflicts, you need to double click the warning in the error list and Visual Studio will add them to your `web.config` file.\r\n2. In web application projects, you should enable `PackageReference` like mentioned above. In web sites, you cannot use `PackageReference` as there is no project file. In that case, you need to install all NuGet packages into your web site that any of the direct or indirect project references depend on.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to [https://github.com/dotnet/standard/issues/481]"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6623068719","Type":"IssuesEvent","CreatedAt":"2017-09-22T04:34:16","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14134","RelatedDescription":"Opened issue \"[RyuJIT] Enable CORINFO_INTRINSIC_Round to generate ROUNDSS and ROUNDSD\" (#14134) at dotnet/coreclr","RelatedBody":"SSE4.1 added the `ROUNDSS` and `ROUNDSD` instructions. For machines which support them, we should support emitting them for calls to `Math.Round` and `MathF.Round`."},{"Id":"6623061157","Type":"PullRequestEvent","CreatedAt":"2017-09-22T04:30:17","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14053","RelatedDescription":"Merged pull request \"fix checkLclVarSemantics\" (#14053) at dotnet/coreclr","RelatedBody":"Fix checkLclVarSemantics logic to check consumed nodes writes and reads correctly.\r\n\r\nIt is the first part of #13910([RyuJit, JitStress] Set contained ignores lclVars stores)."},{"Id":"6623058019","Type":"PullRequestEvent","CreatedAt":"2017-09-22T04:28:32","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14133","RelatedDescription":"Opened pull request \"Fixing `FloatingPointUtils.round` to include the fix for #12137\" (#14133) at dotnet/coreclr","RelatedBody":"This was missed back in https://github.com/dotnet/coreclr/pull/12210\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6623135647","Type":"IssuesEvent","CreatedAt":"2017-09-22T05:09:39","Actor":"Vedant-Koditkar","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7701","RelatedDescription":"Opened issue \"list installed dotnet core sdk versions\" (#7701) at dotnet/cli","RelatedBody":"I do not see any way using cli tool you can list or see all installed versions on your machine. It will be really great if we have command something like this to list all the installed version on machine.\r\n\r\ndotnet --versions \r\n\r\n\r\n\r\n\r\n"},{"Id":"6623130689","Type":"IssuesEvent","CreatedAt":"2017-09-22T05:06:57","Actor":"Vedant-Koditkar","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7700","RelatedDescription":"Opened issue \"Set global dotnet sdk version\" (#7700) at dotnet/cli","RelatedBody":"I've got two different versions of dotnet core sdk's installed on my machine. Currently, It is using dotnet core 2.0 but I want set it to use 1.1.0. I didn't find any way to do this using dotnet cli. It would be great if we have this thing in cli."},{"Id":"6622701603","Type":"PullRequestEvent","CreatedAt":"2017-09-22T01:46:50","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7697","RelatedDescription":"Merged pull request \"Insert SDK 2.0.2-vspre-20170921-5\" (#7697) at dotnet/cli","RelatedBody":"Insert SDK 2.0.2-vspre-20170921-5\r\n\r\nThis includes https://github.com/dotnet/sdk/pull/1585, which syncs to the right NuGet version"},{"Id":"6622695314","Type":"IssuesEvent","CreatedAt":"2017-09-22T01:44:02","Actor":"AlgorithmsAreCool","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7699","RelatedDescription":"Opened issue \"dotnet sln add malfunctions on windows\" (#7699) at dotnet/cli","RelatedBody":"This one is pretty weird\r\n\r\n## Steps to reproduce\r\n```cmd\r\n\r\ncd R:\\Dev\\repro\r\ndotnet new library --name Fakeone\r\ndotnet new sln\r\n\r\nrem Works  (relative-relative)\r\ndotnet sln .\\repro.sln add .\\fakeone\\fakeone.csproj\r\n\r\nrem Broken (relative-absolute)\r\ndotnet sln .\\repro.sln add r:\\dev\\repro\\fakeone\\fakeone.csproj\r\n\r\nrem Broken (absolute-relative)\r\ndotnet sln r:\\dev\\repro\\repro.sln add .\\fakeone\\fakeone.csproj\r\n\r\nrem Works (absolute-absolute)\r\ndotnet sln r:\\dev\\repro\\repro.sln add r:\\dev\\repro\\fakeone\\fakeone.csproj\r\n\r\nrem Broken (absolute-absolute) (exactcase-lowercase)\r\ndotnet sln R:\\Dev\\repro\\repro.sln add r:\\dev\\repro\\fakeone\\fakeone.csproj\r\n\r\nrem Works (absolute-absolute) (exactcase-exactcase)\r\ndotnet sln R:\\Dev\\repro\\repro.sln add R:\\Dev\\repro\\fakeone\\fakeone.csproj\r\n```\r\n\r\n## Expected  behavior\r\nThe correct project is added to the sln file.\r\nThe console emits \r\n```\r\nProject `fakeone\\fakeone.csproj` added to the solution.`\r\n``` \r\n(note the relative path)\r\n\r\n## Actual behavior\r\n\r\nThe following is added to the sln\r\n```\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"R:Dev\", \"R:Dev\", \"{DFBCFAF7-6159-47BC-8F0C-F0F9A255D0AB}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"repro\", \"repro\", \"{0A52075C-A2F9-4A66-9E83-9E6BF7D3BECA}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Fakeone\", \"R:Dev\\repro\\Fakeone\\Fakeone.csproj\", \"{95E6B721-F2B2-4B57-AF4B-A59F0F4AB69D}\"\r\nEndProject\r\n```\r\n\r\nand the following is emitted \r\n```\r\nProject `R:\\Dev\\repro\\fakeone\\fakeone.csproj\\`\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.10586\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n"},{"Id":"6622467899","Type":"PullRequestEvent","CreatedAt":"2017-09-22T00:02:13","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7684","RelatedDescription":"Merged pull request \"Moving the pre-release runtime hack to the test targets\" (#7684) at dotnet/cli","RelatedBody":"Moving the pre-release runtime hack to the test targets, where it is needed.\r\n\r\n@dotnet/dotnet-cli \r\n"},{"Id":"6622326949","Type":"IssuesEvent","CreatedAt":"2017-09-21T23:05:54","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7680","RelatedDescription":"Closed issue \"dotnet x.dll get \"An assembly specified in the application dependencies manifest\"\" (#7680) at dotnet/cli","RelatedBody":"![_20170920105746](https://user-images.githubusercontent.com/12094247/30624948-d81c8bba-9df2-11e7-8753-d2510ea56b9a.png)\r\n\r\n\r\n## Environment and Description\r\n- pc B installed dotnet core 2.0 runtime win64, os is windows server 2008 r2 x64 with SP1\r\n- pc A use VS2017 write a asp.net core 2.0 project, and published to a dir, with `<PublishWithAspNetCoreTargetManifest>true</PublishWithAspNetCoreTargetManifest>`\r\n- on A use dotnet dir\\x.dll no error\r\n- copy dir to B, on B dotnet dir\\x.dll get above error\r\n- if turn `<PublishWithAspNetCoreTargetManifest>false</PublishWithAspNetCoreTargetManifest>`, it's worked, but I don't want this\r\n\r\n\r\n\r\n\r\n"},{"Id":"6622255186","Type":"PullRequestEvent","CreatedAt":"2017-09-21T22:40:52","Actor":"janvorli","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7694","RelatedDescription":"Merged pull request \"Fix issue and minor cleanup of the RHEL 6 support\" (#7694) at dotnet/cli","RelatedBody":"This change fixes extraction of the unprocessed args and also implements\r\nfew minor changes that @eerhardt has asked for, like renaming the new argument\r\nand changing usage of HostRid to Rid in build/BuildDefaults.props.\r\n"},{"Id":"6622239676","Type":"IssuesEvent","CreatedAt":"2017-09-21T22:35:43","Actor":"SteveL-MSFT","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7698","RelatedDescription":"Opened issue \"dotnet-install.sh fails if LD_LIBRARY_PATH doesn't exist\" (#7698) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n```bash\r\nunset LD_LIBRARY_PATH\r\ncurl -O https://raw.githubusercontent.com/dotnet/cli/master/scripts/obtain/dotnet-install.sh\r\nchmod +x ./dotnet-install.sh\r\n./dotnet-install.sh\r\n\r\n## Expected  behavior\r\ndotnet installed\r\n\r\n## Actual behavior\r\n./dotnet-install.sh: line 210: LD_LIBRARY_PATH: unbound variable\r\n\r\n## Workaround\r\n\r\nexport LD_LIBRARY_PATH=\r\n\r\nIt appears on Ubuntu 16.04, this env var doesn't exist.  Script should check if it exists before using.\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6622216686","Type":"PullRequestEvent","CreatedAt":"2017-09-21T22:28:13","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/pull/7684","RelatedDescription":null,"RelatedBody":"Moving the pre-release runtime hack to the test targets, where it is needed.\r\n\r\n@dotnet/dotnet-cli \r\n"},{"Id":"6622216620","Type":"PullRequestEvent","CreatedAt":"2017-09-21T22:28:12","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/7684","RelatedDescription":"Closed pull request \"Moving the pre-release runtime hack to the test targets\" (#7684) at dotnet/cli","RelatedBody":"Moving the pre-release runtime hack to the test targets, where it is needed.\r\n\r\n@dotnet/dotnet-cli \r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6621338567","Type":"IssuesEvent","CreatedAt":"2017-09-21T18:47:05","Actor":"daveh101","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/504","RelatedDescription":"Opened issue \"ASP.NET 4.7.1 - The type 'Enum' is defined in an assembly that is not referenced\" (#504) at dotnet/standard","RelatedBody":"This is likely a very similar issue to #391 & #489.\r\n\r\nThere is a big chance here that I am being an absolute idiot!! But, we are looking at migrating all of our code across to using .NET Standard 2.0 instead of PCL's - this is part of our work with UWP (#489).\r\n\r\nThe issue here is now when looking at one of our websites, I get the follow issue (see image)\r\n![capture](https://user-images.githubusercontent.com/18173195/30712771-0c9b5cfa-9f05-11e7-9bba-2220e9a506db.PNG)\r\n> CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n\r\nThere is an Enum that is in a .NET Standard 2.0 project that is being referenced `this.Links[i].Type` in the `aspx` file.\r\n\r\nThere is no problem with referencing this enum in the .cs file (or other items in the .NET Standard Projects).\r\n\r\nWhat do I need to do to make this work on an ASPX file.\r\n\r\nI have tried all the bits mentioned in the related issues, but none seem to help.\r\n\r\n@weshaggard - I assume this might be one for you again?\r\n"},{"Id":"6620581246","Type":"IssuesEvent","CreatedAt":"2017-09-21T15:59:41","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/503","RelatedDescription":"Opened issue \"Referencing NETStandard.Library 2.0.0 in net461-net47 project and only using ns1.4 (or lower) libs doesn't work\" (#503) at dotnet/standard","RelatedBody":"NETStandard.Library 2.0.0 package doesn't install netstandard1.x packages in net461-net47 projects.  This is because we expected the support package to always be present on net461 and later, but when that support was implemented we dialed it back to only turn on when a netstandard1.5 or later library was referenced.\r\n\r\nAs a result installing a netstandard1.0-1.4 library in a net461-47 project and referencing NETStandard.Library 2.0.0 package will have missing dependencies.\r\n\r\nOne workaround is to use the NETStandard.Library 1.6.1 package instead.  This still has the dependencies on the individual library packages to bring in the facades.\r\n\r\nAn alternative workaround is to set `ImplicitlyExpandNETStandardFacades=true` in the project file.  This will enable all the facades for ns2.0 assemblies.\r\n"},{"Id":"6620417732","Type":"IssuesEvent","CreatedAt":"2017-09-21T15:28:55","Actor":"Priya-John","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/502","RelatedDescription":"Opened issue \"System.Web.Security is not supported in .NetStandard2.0\" (#502) at dotnet/standard","RelatedBody":"is System.Web.Security not supported in .NetStandard2.0.. I am unable to reference that in my project 2017 @weshaggard  @ericstj "},{"Id":"6616962154","Type":"IssuesEvent","CreatedAt":"2017-09-20T22:27:32","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/500","RelatedDescription":"Closed issue \"When to start Standard 3.0?\" (#500) at dotnet/standard","RelatedBody":"(asked above)"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6623150786","Type":"PullRequestEvent","CreatedAt":"2017-09-22T05:17:20","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24207","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-25722-00, beta-25722-00, respectively (master)\" (#24207) at dotnet/corefx","RelatedBody":""},{"Id":"6622986120","Type":"IssuesEvent","CreatedAt":"2017-09-22T03:51:25","Actor":"kishoretvk","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24206","RelatedDescription":"Opened issue \"calls to sql server query from EfCore / Ado.net  timesout in 100seconds\" (#24206) at dotnet/corefx","RelatedBody":"HI, \r\nwhen we run queries from Efcore, with underlying ado.net for sql server ! queries take more than 100seconds, are retried after 100 seconds untill command timeout ot connection timeout. but they do not wiat untill the query executes. \r\n\r\ni've a sp which runs more than 2 minutes, and they sp is executed several times , before timeout happens \r\ni  configured command timeout as 600, it gets retried for 6 times. but not waiting until it gets ececuted. \r\n\r\nfinally error is trows i migrated to Efcocre 2.0 if this could be resolved but it does not happen. in Efcore 2.0 the timeout is 100 \r\n\r\ncan some  one help me  with this ?\r\n\r\n\r\ni have a data load of more than 10 million recoreds on wich i operate. \r\n\r\n"},{"Id":"6622970714","Type":"IssuesEvent","CreatedAt":"2017-09-22T03:44:04","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24200","RelatedDescription":"Closed issue \"Reference assemblies should not be loaded for execution\" (#24200) at dotnet/corefx","RelatedBody":"I am getting this build error after upgrading to .net core 2\r\n\r\n'Could not load file or assembly 'System.Data.Common, Version=4.1.0.0, Culture=neutral, PublicKeyToken= ***' or one of its dependencies. \r\nReference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context. (Exception from HRESULT: 0x80131058)'\t\r\n"},{"Id":"6622950907","Type":"IssuesEvent","CreatedAt":"2017-09-22T03:34:40","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24169","RelatedDescription":"Closed issue \".NET Core Version of System.Web.UI.HtmlTextWriter\" (#24169) at dotnet/corefx","RelatedBody":"Does such a thing exist? What is the alternative? I'm using this type to do XSL transforms like so:\r\n\r\n```c#\r\nprivate static Stream XslTransform(XDocument document, XmlReader xslReader)\r\n{\r\n    var xslTransform = new XslCompiledTransform();\r\n    var stringBuilder = new StringBuilder();\r\n\r\n    using (var stringWriter = new StringWriter(stringBuilder))\r\n    {\r\n        using (var htmlWriter = new HtmlTextWriter(stringWriter))\r\n        {\r\n            xslTransform.Load(xslReader);\r\n            xslTransform.Transform(document.CreateReader(), new XsltArgumentList(), htmlWriter);\r\n            htmlWriter.Flush();\r\n        }\r\n    }\r\n\r\n    return new MemoryStream(Encoding.UTF8.GetBytes(stringBuilder.ToString()));\r\n}\r\n```\r\n\r\n[EDIT] Add C# syntax highlighting by @karelz"},{"Id":"6622938718","Type":"IssuesEvent","CreatedAt":"2017-09-22T03:28:51","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24185","RelatedDescription":"Closed issue \"Codeformatter Tool\" (#24185) at dotnet/corefx","RelatedBody":"\"We also use the .NET Codeformatter Tool to ensure the code base maintains a consistent style over time, the tool automatically fixes the code base to conform to the guidelines outlined above.\"\r\n\r\nCan this be true if the codeformatter tool had it's last commit on Nov 11, 2016? (Some Issues over there are preventing the use of this tool, just check the issues there.)"},{"Id":"6622907610","Type":"PullRequestEvent","CreatedAt":"2017-09-22T03:14:59","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24173","RelatedDescription":"Merged pull request \"Provide an (at least temporary) non-global ManagedHandler opt-in mechanism\" (#24173) at dotnet/corefx","RelatedBody":"Right now the only way to opt-in to using ManagedHandler is via an environment variable.  That requires a process-wide setting which makes it impossible to create an individual HttpClient{Handler} that uses ManagedHandler; another thread could be instantiating one at the same time and would pick up the setting.  This is why we had to disable parallel execution of our System.Net.Http test suite.\r\n\r\nWe still haven't yet figured out the final model via which we'll enable usage of ManagedHandler.  For now, though, I'm adding a thread-local switch, to allow opting in a single HttpClientHandler construction.  This makes it possible to re-enable our test parallelism, which this PR also does (and in the process drops outerloop execution time by 3x on my machine), but it also enables us to make progress on https://github.com/dotnet/corefx/issues/23152, which is blocked by having a global-only setting.\r\n\r\ncc: @geoffkizer, @davidsh, @wfurt, @Priya91 "},{"Id":"6622840079","Type":"IssuesEvent","CreatedAt":"2017-09-22T02:45:40","Actor":"kzu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24205","RelatedDescription":"Opened issue \"Add StructuralComparer<T>\" (#24205) at dotnet/corefx","RelatedBody":"Quite a few APIs can take an `IEqualityComparer<T>` (most notably `HashSet<T>`, `Dictionary<T>` and `ConcurrentDictionary<T>` ) and having a structural comparer for those would be quite useful. In fact, the non-generic `StructuralComparisons.StructuralEqualityComparer` even already exists!\r\n\r\nSo how about adding the obvious dumb typed implementation on top of it? Pretty much:\r\n\r\n```\r\npublic class StructuralComparer<T> : IEqualityComparer<T>\r\n{\r\n    public static IEqualityComparer<T> Default { get; } = new StructuralComparer<T>();\r\n\r\n    public bool Equals(T x, T y) => StructuralComparisons.StructuralEqualityComparer.Equals(x, y);\r\n\r\n    public int GetHashCode(T obj) => StructuralComparisons.StructuralEqualityComparer.GetHashCode(obj);\r\n}\r\n```\r\n\r\nAnd that's all we need :)"},{"Id":"6622816880","Type":"IssuesEvent","CreatedAt":"2017-09-22T02:35:36","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/22380","RelatedDescription":"Closed issue \"Add String Span-based method for writing into String's buffer\" (#22380) at dotnet/corefx","RelatedBody":"Separated out of https://github.com/dotnet/corefx/issues/21281 for tracking purposes.\r\n\r\n- [x] Implement in System.Private.CoreLib in coreclr\r\n- [x] Implement in System.Private.CoreLib in corert (if string isn't yet \"shared\" between coreclr and corert)\r\n- [x] Expose from System.Runtime contract in corefx\r\n- [x] Add tests to System.Runtime tests in corefx\r\n\r\n```C#\r\nnamespace System\r\n{\r\n    public delegate void StringCreateAction<TState>(TState state, Span<char> destination);\r\n\r\n    public class String\r\n    {\r\n        public static string Create<TState>(int length, TState state, StringCreateAction action);\r\n        …\r\n    }\r\n}\r\n```\r\n\r\nMostly approved, but open issue around the delegate, its name, what namespace it lives in (or nested type within String), etc.  A custom delegate is needed as span can't be used as a generic type argument with one of the built-in action types."},{"Id":"6622816876","Type":"PullRequestEvent","CreatedAt":"2017-09-22T02:35:36","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/23872","RelatedDescription":"Merged pull request \"Expose/test String.Create span-based method\" (#23872) at dotnet/corefx","RelatedBody":"Depends on https://github.com/dotnet/coreclr/pull/13849 and https://github.com/dotnet/corert/pull/4467\r\nFixes https://github.com/dotnet/corefx/issues/22380"},{"Id":"6622800369","Type":"PullRequestEvent","CreatedAt":"2017-09-22T02:28:34","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24204","RelatedDescription":"Opened pull request \"Expose/test Guid.{Try}Parse{Exact} span-based methods\" (#24204) at dotnet/corefx","RelatedBody":"Just adds the methods to the refs and copies/updates the existing parsing tests to work with the new span-based methods.\r\n\r\ncc: @AlexGhiondea, @joperezr "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6622836414","Type":"PullRequestEvent","CreatedAt":"2017-09-22T02:44:06","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22284","RelatedDescription":"Opened pull request \"Create tests to cover test plans #19216 and #20127\" (#22284) at dotnet/roslyn","RelatedBody":"Will tag team when ready."},{"Id":"6622532578","Type":"IssuesEvent","CreatedAt":"2017-09-22T00:30:20","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22283","RelatedDescription":"Opened issue \"Tests for readonly references OHI\" (#22283) at dotnet/roslyn","RelatedBody":"Tests need to be added for hiding/overriding, and make sure that compiler differentiates between ref/ref-readonly/out/none."},{"Id":"6622523665","Type":"IssuesEvent","CreatedAt":"2017-09-22T00:26:21","Actor":"OmarTawfik","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22282","RelatedDescription":"Opened issue \"Operators returning a readonly reference in IL\" (#22282) at dotnet/roslyn","RelatedBody":"Related to test plan #19216\r\n\r\nIt appears that the current version accepts operators that return by ref (when read from IL).\r\nShould we be accepting ref-readonly returns as well?"},{"Id":"6622499873","Type":"PullRequestEvent","CreatedAt":"2017-09-22T00:15:55","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22281","RelatedDescription":"Opened pull request \"example only\" (#22281) at dotnet/roslyn","RelatedBody":"example only for @ToddGrun "},{"Id":"6622454702","Type":"IssuesEvent","CreatedAt":"2017-09-21T23:56:47","Actor":"mattscheffer","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22280","RelatedDescription":"Opened issue \"Add file banner doesn't work cross-language\" (#22280) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVsuml 26920.4001\r\n\r\nThe new feature add file banner doesn't allow you to use 'add file banner' for files of a different language than the original project.\r\n**Steps to Reproduce**:\r\n1. Create a new VB console app.\r\n2. Add 2 CSharp class files, and add appropriate references/packages to compile them\r\n3. Add a comment at the top of one of the CSharp class files like //test\r\n4. Go to the second CSharp class file and attempt to activate quick actions.\r\n\r\n**Expected Behavior**:\r\nThe quick action should be present to 'add file banner' from the first comment.\r\n**Actual Behavior**:\r\nThe option is missing.\r\n\r\nIt still works for vb if you add a second vb file and attempt the same thing.\r\n\r\nAlso, I don't know if this feature is planned or supposed to work, but it would be cool to allow you to add file banner across languages with conversions. So a comment \" 'test1 \" from a vb file could be added/converted to a CSharp one as //test1\r\n"},{"Id":"6622448613","Type":"PullRequestEvent","CreatedAt":"2017-09-21T23:54:11","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22275","RelatedDescription":"Merged pull request \"Not poisoning restricted types known to be stack only.\" (#22275) at dotnet/roslyn","RelatedBody":"Not poisoning restricted types known to be stack only. (as per ECMA 335)\r\n\r\n- TypedReference\r\n- ArgIterator\r\n- RuntimeArgumentHandle\r\n\r\nFixes:#22198\r\n\r\n===\r\nThere are technical reasons for which making RestrictedTypes ref structs is advantageous. In fact it is already done in some cases - see example: https://github.com/dotnet/corert/blob/f23fb52ce14fa680bcebc07eab9a20fa8780e47f/src/ILCompiler.TypeSystem/tests/CoreTestAssembly/Platform.cs#L71\r\n\r\nWe do not need to poison these types with Obsolete attribute when `ref struct` syntax is used. The stack-only semantics of these types is widely known and poisoning can only lead to compat troubles.\r\n"},{"Id":"6622448599","Type":"IssuesEvent","CreatedAt":"2017-09-21T23:54:11","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22198","RelatedDescription":"Closed issue \"We should not \"poison\" old-style stack-only structs such as TypedReference\" (#22198) at dotnet/roslyn","RelatedBody":"Types like TypedReference are semantically ref-structs and can be formally made ref-structs. \r\nThere are also technical advantages for them to be ref-structs - they can share implementation and JIT validation details with Span. \r\n\r\nHowever, making a struct `ref struct` implies \"poisoning\" and poisoning these type can be compat breaking if old compiler (like pre 7.2 C#) is used.\r\nSince the types existed for very long time, the probability of such break is high.\r\n\r\nOn the other hand, the safety concerns of those types are well understood and old compilers hard-code those types as special, so there is no danger in leaving them \"unpoisoned\"\r\n\r\n"},{"Id":"6622411657","Type":"IssuesEvent","CreatedAt":"2017-09-21T23:38:38","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22279","RelatedDescription":"Opened issue \"API review for IUsingStatement\" (#22279) at dotnet/roslyn","RelatedBody":"We should merge the `Declaration` and `Value` into a single field. The OperationKind of this field will tell the user whether it is a variable declaration or an expression.\r\n\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis/Operations/IUsingStatement.cs,afcaf33ff8626c1b"},{"Id":"6622400969","Type":"IssuesEvent","CreatedAt":"2017-09-21T23:34:21","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21737","RelatedDescription":"Closed issue \"Should we should represent C# + operation with string operands as `BinaryOperatorKind.Concatenate`\" (#21737) at dotnet/roslyn","RelatedBody":"We return Concatenate kind only for the VB Concatenate operator. Should we should represent C# + operation with string operands as `BinaryOperatorKind.Concatenate`?"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6623146672","Type":"PullRequestEvent","CreatedAt":"2017-09-22T05:15:18","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4592","RelatedDescription":"Opened pull request \"Fix strings for WebAssembly\" (#4592) at dotnet/corert","RelatedBody":"Changes that allow loading a printing a frozen string. Includes:\r\n* Implement ldnull and ldind\r\n* Fix brtrue and brfalse for pointers\r\n* Fix the polarity of ceq and friends\r\n* Change functions we can't compile into traps so that they don't break LLVM\r\n* Put call arguments in the right order\r\n* Miscellaneous stack canonicalization fixes (we'll have to revisit this in a more comprehensive way soon)\r\n* Minor diagnosability improvements"},{"Id":"6622847274","Type":"PullRequestEvent","CreatedAt":"2017-09-22T02:48:47","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4591","RelatedDescription":"Opened pull request \"Enable Server GC\" (#4591) at dotnet/corert","RelatedBody":"This change adds support for Server GC.\r\nTo enable the Server GC for an application, the RH_UseServerGC environment variable (which is already supported by the runtime) should be set to 1.\r\n"},{"Id":"6622498788","Type":"PullRequestEvent","CreatedAt":"2017-09-22T00:15:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4590","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#4590) at dotnet/corert","RelatedBody":""},{"Id":"6621758638","Type":"IssuesEvent","CreatedAt":"2017-09-21T20:27:16","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/4589","RelatedDescription":"Opened issue \"X86 runtime build fails\" (#4589) at dotnet/corert","RelatedBody":"There are a number of failures building for x86. This should be doable since the same sources get built for x86 as part of .NET Native. \r\n\r\n8>e:\\corert\\corert\\src\\native\\jitinterface\\JITCodeManager.h(96): error C2143: syntax error: missing ';' before '*' [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n     8>e:\\corert\\corert\\src\\native\\jitinterface\\JITCodeManager.h(96): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n     8>e:\\corert\\corert\\src\\native\\jitinterface\\JITCodeManager.h(173): error C3646: 'm_pRuntimeFunctionTable': unknown override specifier [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n     8>e:\\corert\\corert\\src\\native\\jitinterface\\JITCodeManager.h(173): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n     8>e:\\corert\\corert\\src\\native\\jitinterface\\JITCodeManager.h(229): error C3646: 'AllocRuntimeFunction': unknown override specifier [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n     8>e:\\corert\\corert\\src\\native\\jitinterface\\JITCodeManager.h(229): error C2059: syntax error: '(' [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n     8>e:\\corert\\corert\\src\\native\\jitinterface\\JITCodeManager.h(229): error C2238: unexpected token(s) preceding ';' [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n8>e:\\corert\\corert\\src\\native\\runtime\\coreclr\\gcinfotypes.h(326): fatal error C1083: Cannot open include file: 'bitvector.h': No such file or directory [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\jitinterface\\jitinterface.vcxproj]\r\n4>E:\\corert\\corert\\src\\Native\\Runtime\\thread.cpp(600): error C2664: 'UInt32 PalHijack(HANDLE,PalHijackCallback,void *)': cannot convert argument 2 from 'UInt32_BOOL (__cdecl *)(HANDLE,PAL_LIMITED_CONTEXT *,void *)' to 'PalHijackCallback' [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\Runtime\\Portable\\PortableRuntime.vcxproj]\r\n4>E:\\corert\\corert\\src\\Native\\Runtime\\windows\\PalRedhawkCommon.cpp(225): error C2373: 'PalGetProcessCpuCount': redefinition; different type modifiers [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\Runtime\\Portable\\PortableRuntime.vcxproj]\r\n         E:\\corert\\corert\\src\\Native\\Runtime\\PalRedhawk.h(694): note: see declaration of 'PalGetProcessCpuCount'\r\n     4>E:\\corert\\corert\\src\\Native\\Runtime\\windows\\PalRedhawkCommon.cpp(249): error C2373: 'PalReadFileContents': redefinition; different type modifiers [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\Runtime\\Portable\\PortableRuntime.vcxproj]\r\n         E:\\corert\\corert\\src\\Native\\Runtime\\PalRedhawk.h(696): note: see declaration of 'PalReadFileContents'\r\n     4>E:\\corert\\corert\\src\\Native\\Runtime\\windows\\PalRedhawkCommon.cpp(285): error C2373: 'PalGetMaximumStackBounds': redefinition; different type modifiers [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\Runtime\\Portable\\PortableRuntime.vcxproj]\r\n         E:\\corert\\corert\\src\\Native\\Runtime\\PalRedhawk.h(701): note: see declaration of 'PalGetMaximumStackBounds'\r\n         PalRedhawkMinWin.cpp\r\n     4>E:\\corert\\corert\\src\\Native\\Runtime\\windows\\PalRedhawkMinWin.cpp(115): error C2373: 'PalAttachThread': redefinition; different type modifiers [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\Runtime\\Portable\\PortableRuntime.vcxproj]\r\n         e:\\corert\\corert\\src\\native\\runtime\\PalRedhawk.h(822): note: see declaration of 'PalAttachThread'\r\n     4>E:\\corert\\corert\\src\\Native\\Runtime\\windows\\PalRedhawkMinWin.cpp(137): error C2373: 'PalDetachThread': redefinition; different type modifiers [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\Runtime\\Portable\\PortableRuntime.vcxproj]\r\n         e:\\corert\\corert\\src\\native\\runtime\\PalRedhawk.h(823): note: see declaration of 'PalDetachThread'\r\n     4>E:\\corert\\corert\\src\\Native\\Runtime\\windows\\PalRedhawkMinWin.cpp(192): error C2373: 'PalGetModuleFileName': redefinition; different type modifiers [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\Runtime\\Portable\\PortableRuntime.vcxproj]\r\n         e:\\corert\\corert\\src\\native\\runtime\\PalRedhawk.h(704): note: see declaration of 'PalGetModuleFileName'\r\n     4>E:\\corert\\corert\\src\\Native\\Runtime\\windows\\PalRedhawkMinWin.cpp(1811): error C2664: 'HANDLE CreateThread(LPSECURITY_ATTRIBUTES,SIZE_T,LPTHREAD_START_ROUTINE,LPVOID,DWORD,LPDWORD)': cannot convert argument 3 from 'DWORD (__cdecl *)(void *)' to 'LPTHREAD_START_ROUTINE' [E:\\corert\\corert\\bin\\obj\\Native\\Windows_NT.x86.Debug\\Runtime\\Portable\\PortableRuntime.vcxproj]\r\n         E:\\corert\\corert\\src\\Native\\Runtime\\windows\\PalRedhawkMinWin.cpp(1811): note: None of the functions with this name in scope match the target type"},{"Id":"6621302756","Type":"PullRequestEvent","CreatedAt":"2017-09-21T18:38:51","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4588","RelatedDescription":"Merged pull request \"Modernize RID detection in buildvars-setup.sh\" (#4588) at dotnet/corert","RelatedBody":""},{"Id":"6621252686","Type":"PullRequestEvent","CreatedAt":"2017-09-21T18:27:31","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4587","RelatedDescription":"Merged pull request \"[ARM/Linux] Fix build ARM - Xenial\" (#4587) at dotnet/corert","RelatedBody":"@jkotas please take a look\r\n\r\nCorrect creating of rootfs for Linux distributives besides trusty.\r\nProper URLs for repositories.\r\nStructure taken from CoreCLR.\r\n\r\nWithout this PR cross build for ARM Xenial failed with missing `crt1.o` and other files in `corert/cross/rootfs/arm/usr/lib/arm-linux-gnueabihf`.\r\ncc @BredPet @sergign60 @Dmitri-Botcharnikov "},{"Id":"6621046745","Type":"PullRequestEvent","CreatedAt":"2017-09-21T17:40:36","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4588","RelatedDescription":"Opened pull request \"Modernize RID detection in buildvars-setup.sh\" (#4588) at dotnet/corert","RelatedBody":""},{"Id":"6620900614","Type":"PullRequestEvent","CreatedAt":"2017-09-21T17:08:03","Actor":"alpencolt","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4587","RelatedDescription":"Opened pull request \"[ARM/Linux] Fix build ARM - Xenial\" (#4587) at dotnet/corert","RelatedBody":"@jkotas please take a look\r\n\r\nCorrect creating of rootfs for Linux distributives besides trusty.\r\nProper URLs for repositories.\r\nStructure taken from CoreCLR.\r\n\r\nWithout this PR cross build for ARM Xenial failed with missing `crt1.o` and other files in `corert/cross/rootfs/arm/usr/lib/arm-linux-gnueabihf`.\r\ncc @BredPet @sergign60 @Dmitri-Botcharnikov "},{"Id":"6620803832","Type":"PullRequestEvent","CreatedAt":"2017-09-21T16:45:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4586","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4586) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6620783864","Type":"PullRequestEvent","CreatedAt":"2017-09-21T16:41:16","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4586","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4586) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6620003546","Type":"PullRequestEvent","CreatedAt":"2017-09-21T14:14:16","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4585","RelatedDescription":"Merged pull request \"Fix incorrect arm ifdef\" (#4585) at dotnet/corert","RelatedBody":"Everywhere in the native code except for two places, we use\r\n`_TARGET_ARM_` as a define to identify compilation for ARM32.\r\nBut at those two places, we use `TARGET_ARM`. This is incorrect since\r\n`TARGET_ARM` is not defined anywhere for CoreRT builds.\r\nThis change replaces those two usages by the `_TARGET_ARM_`."},{"Id":"6618729353","Type":"PullRequestEvent","CreatedAt":"2017-09-21T09:19:27","Actor":"janvorli","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4585","RelatedDescription":"Opened pull request \"Fix incorrect arm ifdef\" (#4585) at dotnet/corert","RelatedBody":"Everywhere in the native code except for two places, we use\r\n`_TARGET_ARM_` as a define to identify compilation for ARM32.\r\nBut at those two places, we use `TARGET_ARM`. This is incorrect since\r\n`TARGET_ARM` is not defined anywhere for CoreRT builds.\r\nThis change replaces those two usages by the `_TARGET_ARM_`."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"911015945291919360","CreatedAt":"2017-09-21T23:55:01+00:00","UserScreenname":"dotnet","Text":"Last one! Happening now on .NET Fundamentals Track @ #dotNETConf: Learn how to use #FSharp to write front-end &amp; bac… https://t.co/OH8cMAcq4I","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"911005750410960896","CreatedAt":"2017-09-21T23:14:31+00:00","UserScreenname":"dotnet","Text":"PSA: .NET Framework September Update - known issues published https://t.co/1yk2xwnrvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"911000845860458498","CreatedAt":"2017-09-21T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Get started w/ #FSharp, .NET Core &amp; #VSCode. Watch… https://t.co/VRkwBvSNPU","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":17,"FavoriteCount":9,"RawContent":null},{"Id":"910988157197344768","CreatedAt":"2017-09-21T22:04:36+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 Accessibility and WPF Improvements https://t.co/eZLFQxhlLj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":38,"FavoriteCount":32,"RawContent":null},{"Id":"910985746386911237","CreatedAt":"2017-09-21T21:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Introducing Razor Pages - Join the session here:… https://t.co/NTQg6urmhQ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"910970647702065152","CreatedAt":"2017-09-21T20:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: The #CSharp async await workout - a hands-on coding dem… https://t.co/JDvyBkgvww","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":33,"FavoriteCount":15,"RawContent":null},{"Id":"910955546496335873","CreatedAt":"2017-09-21T19:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Solid Design Patterns for Mere Mortals - see some… https://t.co/iFgxAVURUP","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":33,"FavoriteCount":7,"RawContent":null},{"Id":"910940451754188801","CreatedAt":"2017-09-21T18:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: #CSharp Part 2 - What's New. Learn the structure and co… https://t.co/dSPE4e9EUE","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":31,"FavoriteCount":16,"RawContent":null},{"Id":"910925349013348352","CreatedAt":"2017-09-21T17:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: C# Part 1 - Introduction to C# - Join us:… https://t.co/af45Jelz1W","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":32,"FavoriteCount":21,"RawContent":null},{"Id":"910910262370344960","CreatedAt":"2017-09-21T16:55:05+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Part 2 of Getting Started w/ .NET - explore the type of… https://t.co/6KLTffFL0H","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":11,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2017-09-22T05:30:17.6684415Z","RunDurationInMilliseconds":7135}