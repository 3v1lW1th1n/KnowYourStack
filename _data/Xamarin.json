{"Data":{"Blog":{"FeedItems":[{"Title":"What’s New for Xamarin Developers in Visual Studio 2019 Preview 2","PublishedOn":"2019-01-23T20:22:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, Visual Studio 2019 Preview 2 was released and includes many improvements for mobile developers in Visual Studio. This release, we focused on key areas to make you more productive when authoring...","Href":"https://blog.xamarin.com/whats-new-for-xamarin-developers-in-visual-studio-2019-preview-2/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: New Year – New Pod!","PublishedOn":"2019-01-18T18:59:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. This episode includes a discussion of...","Href":"https://blog.xamarin.com/visual-studio-mobile-developer-podcast-new-year-new-pod/","RawContent":null},{"Title":"Introducing the .NET Community Standup Series","PublishedOn":"2019-01-17T16:57:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We love our amazing .NET community that is filled with amazing developers writing fantastic blogs, libraries, presentations, and pull requests every week. We are always looking for ways to highlight...","Href":"https://blog.xamarin.com/introducing-the-net-community-standup-series/","RawContent":null},{"Title":"Xamarin.Forms 3.5: A Little Bindable Love","PublishedOn":"2019-01-11T18:06:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Andrei Nitescu, a mobile developer since 2013 and frequent contributor to Xamarin.Forms. He shares about his experiences with other developers on his blog, and...","Href":"https://blog.xamarin.com/xamarin-forms-3-5-a-little-bindable-love/","RawContent":null},{"Title":"Hackathon Superweapon: F# and Fabulous","PublishedOn":"2019-01-10T20:27:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, I participated in Hack for the Sea, a weekend devoted to applying tech to marine conservation. One of our local challenges was a “cross-platform mobile app for reporting marine debris.” A...","Href":"https://blog.xamarin.com/hackathon-superweapon-f-and-fabulous/","RawContent":null},{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8948569699","Type":"PullRequestEvent","CreatedAt":"2019-01-25T03:02:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2626","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Install should skip Build when inside the IDE\" (#2626) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/wiki/IDE-Performance-Results\r\nContext: https://github.com/jonathanpeppers/HelloWorld\r\n\r\nWhen doing some performance measurements *inside* of Visual Studio, I\r\nnoticed we seem to have significant overhead in a build with no\r\nchanges.\r\n\r\nIn a \"Hello World\" Xamarin.Forms app:\r\n\r\n    Preparation Time: 00:03.9\r\n    Launch Time:      00:02.5\r\n\r\nWhere `Preparation Time` is everything MSBuild, and `Launch Time` is\r\nthe time it takes to start the Android application and attach the\r\ndebugger.\r\n\r\n`Preparation Time` is effectively:\r\n\r\n    msbuild Foo.Android.csproj /p:BuildingInsideVisualStudio=True /t:Build\r\n    msbuild Foo.Android.csproj /p:BuildingInsideVisualStudio=True /t:Install\r\n\r\nOne concern here is that `Install` depends on `SignAndroidPackage`,\r\nwhich depends on `Build`. We are doing a lot of MSBuild work here\r\ntwice, since MSBuild needs to run through certain targets twice and\r\ndecide they can be skipped. This work is \"not free\" and mostly\r\ninvolved MSBuild evaluating properties and time stamps on files.\r\n\r\nWhat I found we could do here is skip `Build` on the `Install` target\r\nwhen `$(BuildingInsideVisualStudio)` is `True`. Due to the dependency\r\nchain, this also affects `SignAndroidPackage`.\r\n\r\nThe minimal list of targets for `SignAndroidPackage` that still work:\r\n\r\n- `_CreatePropertiesCache`\r\n- `ResolveReferences`\r\n- `_CopyPackage`\r\n- `_Sign`\r\n\r\nInitial results from the IDE show:\r\n\r\n    Preparation Time: 00:02.06s\r\n\r\nThis is a ~2 second saving on the inner dev loop!\r\n\r\n## MSBuild Tests ##\r\n\r\nSince our MSBuild tests set `$(BuildingInsideVisualStudio)`, a lot of\r\nour tests might break. We might have to add an additional call to\r\n`Build` in each failing test.\r\n\r\nThe way I worked around this was to make the `CreateApkBuilder` method\r\nrun `Build,SignAndroidPackage` by default. Originally there were 248\r\ntest failures.\r\n\r\nI also did some other cleanup:\r\n\r\n- Added a `ProjectBuilder.RunTarget` method, so tests can more easily\r\n  run custom targets and not modify the `Target` property:\r\n  `builder.RunTarget (\"Foo\")`.\r\n- Added `ProjectBuilder.DesignTimeBuild`.\r\n- `Builder` now has a `BuildingInsideVisualStudio` property to toggle\r\n  the value as a command-line global property. We were putting this in\r\n  the `csproj`, which seems a bit different than what IDEs are\r\n  actually doing...\r\n\r\nAlso added a `BuildOutsideVisualStudio` test to verify the\r\n`SignAndroidPackage` target works by itself *outside* of IDEs."},{"Id":"8947717678","Type":"PullRequestEvent","CreatedAt":"2019-01-24T23:08:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2642","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Run ILRepack if `NuGet.ProjectModel` Exists\" (#2642) at xamarin/xamarin-android","RelatedBody":"We saw the following error in the latest versions of monodroid.\r\n\t/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1928,2): error : Could not load file or assembly 'NuGet.ProjectModel, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of its dependencies.\r\n\r\nAfter investingating it turns out that the\r\n`Xamarin.Android.Build.Tasks` project was being run\r\nmultiple times (as expected). However the\r\n`CopyFilesToOutputDirectory` target was being run\r\non the second build. This was also running the\r\ninternal target `_CopyFilesMarkedCopyLocal`.\r\n\r\nThe result of both of these targets was to copy\r\nover the old assembly over the ILRepacked version\r\nand copy over ALL the NuGet assemblies from the\r\nnuget packages cache.\r\n\r\nThis then turns into the above error at build time\r\nbecause the system has a different version of Nuget.\r\nThis was why we were using ILReapck in the first place.\r\n\r\nWe tried a number of different solutions. One was to update\r\nthe file in the intermediate directory which looked like\r\nit would solve the problem initially. However in that\r\ninstance the Nuget files were still copied over to the\r\n`$(OutputPath)` and might cause problems in the final\r\nrelease. There was also another problem with ILRepack.\r\nIf we fixed up the file in the `$(IntermediateOutputPath)`\r\nbefore `CopyFilesToOutputDirectory` we can end up with\r\nILRepack running again on the same assembly. This causes it\r\nto pull in ALL the Nuget stuff again and we end up with a\r\n5meg file rather than a 3meg one... Which was weird.\r\n\r\nSo the simplest solutiuon is to run ILRepack after\r\nthe `CopyFilesToOutputDirectory` target and only if\r\nthe `Nuget.ProjectModel` assembly exists in the `$(OutputPath)`.\r\nSince the `ILRepacker` target is the one that deletes\r\nthe Nuget assemblies we can be sure that if they exist\r\nwe need to fix up the main assembly.\r\nWhile this might mean that ILRepack runs twice in a build,\r\nit does mean we get consistent output."},{"Id":"8947111970","Type":"PullRequestEvent","CreatedAt":"2019-01-24T21:11:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2640","RelatedDescription":"Merged pull request \"[build] Small CMake reorganization\" (#2640) at xamarin/xamarin-android","RelatedBody":"Move some macros to a CMake module file so that they can be shared by all the\r\nnative code we build with CMake:\r\n\r\n  * Macros to check for compiler+linker flags\r\n  * Add a macro to set common compiler+linker flags"},{"Id":"8946497309","Type":"IssuesEvent","CreatedAt":"2019-01-24T19:22:29","Actor":"terrajobst","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2650","RelatedDescription":"Closed issue \"Add support for HttpClient.PatchAsync()\" (#2650) at xamarin/xamarin-android","RelatedBody":"_From @jacobmohl on January 23, 2019 14:50_\n\nIt would make sense to support the HTTP Verb PATCH in HttpClient. Which for now is only supported in .Net Core 2.1 and forward with HttpClient.PatchAsync().\n\n_Copied from original issue: dotnet/standard#1056_"},{"Id":"8946488317","Type":"IssuesEvent","CreatedAt":"2019-01-24T19:20:59","Actor":"terrajobst","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2651","RelatedDescription":"Opened issue \"Android implementation of HTTPClient throwing up java.io.IOException \" (#2651) at xamarin/xamarin-android","RelatedBody":"_From @UnreachableCode on January 17, 2019 16:54_\n\nI believe this relates to the bug detailed in Xamarin's old Bugzilla:\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=41100\r\n\r\nand is also similar to the issue discussed here:\r\nhttps://github.com/square/okhttp/issues/1517\r\n\r\nHere is the main stacktrace of my issue:\r\n\r\nLoginProvider+<LoginAsync>d__1.MoveNext () C:\\source\\repos\\{MyApp}\\{MyApp}\\{MyApp}\\Services\\LoginProvider.cs:35\r\njava.io.IOException: unexpected end of stream on Connection{testclarity.i-menzies.com:443, proxy=DIRECT@ hostAddress=62.244.173.166 cipherSuite=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 protocol=http/1.1} (recycle count=0)\r\ncom.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:210)\r\ncom.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:80)\r\ncom.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:905)\r\ncom.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:789)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:443)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:388)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:501)\r\ncom.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\r\ncom.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\r\nCaused by: java.io.EOFException: \\n not found: size=0 content=...\r\ncom.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:200)\r\ncom.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\r\n\r\nI have tried setting the connection closed header and setting chunked transfer encoding but neither of these fixes work. I would try to set the OkHTTP.setRetryOnConnectionFailure(true) but I don't think there is a way to do this in the referenced Java source.\n\n_Copied from original issue: dotnet/standard#1055_"},{"Id":"8946483420","Type":"IssuesEvent","CreatedAt":"2019-01-24T19:20:12","Actor":"terrajobst","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2650","RelatedDescription":"Opened issue \"Add support for HttpClient.PatchAsync()\" (#2650) at xamarin/xamarin-android","RelatedBody":"_From @jacobmohl on January 23, 2019 14:50_\n\nIt would make sense to support the HTTP Verb PATCH in HttpClient. Which for now is only supported in .Net Core 2.1 and forward with HttpClient.PatchAsync().\n\n_Copied from original issue: dotnet/standard#1056_"},{"Id":"8946450390","Type":"PullRequestEvent","CreatedAt":"2019-01-24T19:14:36","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2648","RelatedDescription":"Merged pull request \"Bump JI for less jnimarshalmethod-gen warnings\" (#2648) at xamarin/xamarin-android","RelatedBody":"Improves https://github.com/xamarin/xamarin-android/issues/2419"},{"Id":"8946447498","Type":"PullRequestEvent","CreatedAt":"2019-01-24T19:14:08","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2649","RelatedDescription":"Opened pull request \"Bump Java.Interop\" (#2649) at xamarin/xamarin-android","RelatedBody":"Bring fix/workaround for broken Android annotation files shipped with\r\n`platform-tools` v28.0.1 in the Android SDK.\r\n\r\nInclude `HtmlAgilityPack` in `external/Java.Interop.tpnitems`"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8948910950","Type":"IssuesEvent","CreatedAt":"2019-01-25T04:58:04","Actor":"tlaivo","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5058","RelatedDescription":"Opened issue \"[Android] Slider Value property does not work correctly with a specific min/max value\" (#5058) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nDefine an Android slider with the following property values:\r\nMinimum: 0\r\nMaximum: 999\r\nImplement a Step property with a value of 1.\r\nImplement a ValueChanged event handler. Whenever slider Value property gets updated, round it to the closest integer value based on Step property.\r\nSo the slider value range is 0, 1, 2, ... 997, 998, 999.\r\n\r\nWhen Value is set between 0 - 500 or to 999, everything works.\r\nWhen Value is set to greater than 500 and less than 999, a rounding bug in Xamarin SliderRenderer causes the value to round down until it reaches 500.\r\n\r\nProblem is caused by Value property implementation in SliderRenderer.cs:\r\ndouble Value\r\n{\r\n    get { return _min + (_max - _min) * (Control.Progress / 1000.0); }\r\n    set { Control.Progress = (int)((value - _min) / (_max - _min) * 1000.0); }\r\n}\r\nset sets Control.Progress based on given value. double value is changed to integer value (round may happen).\r\nget returns the value based on the value of Control.Progress.\r\nSo there happens a rounding error (double -> integer -> double), which causes get to return a wrong value and causes to invalid behaviour.\r\nWith the given Minimum and Maximum value, get returns always a value which is less than what was set (if value was set between 501 and 998).\r\n\r\nInstead of returning value based on Control.Progress, SliderRenderer should return the value based on an internal field. I have implemented the following workaround and it works.\r\n\r\nprivate double _value;\r\nprivate int _progress;\r\ndouble Value\r\n{\r\n    get\r\n    {\r\n        if (Control.Progress != _progress)\r\n        {\r\n            _value = _min + (_max - _min) * (Control.Progress / 1000.0);\r\n            _progress = Control.Progress;\r\n            return  _value;\r\n        }\r\n        else\r\n        {\r\n            return _value;\r\n        }\r\n    }\r\n    set\r\n    {\r\n        _value = value;\r\n        _progress = (int)((value - _min) / (_max - _min) * 1000.0);\r\n        Control.Progress = _progress;\r\n    }\r\n}\r\n\r\n### Steps to Reproduce\r\n\r\nPlease see the description for details.\r\n\r\n### Expected Behavior\r\n\r\nIt should be possible to set values between 501 - 998\r\n\r\n### Actual Behavior\r\n\r\nOnly values  0 - 500 and 999 can be set.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Version with issue: release-2.5.1-sr4, bug seems to exist also with latest release-3.4.0-sr1.2\r\n- Last known good version: -\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - iOS:  -\r\n  - Android: 8.1\r\n  - UWP:  -\r\n- Android Support Library Version: 27.0.2\r\n- Nuget Packages: -\r\n- Affected Devices: All Android devices\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8948082834","Type":"IssuesEvent","CreatedAt":"2019-01-25T00:43:31","Actor":"irongut","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5057","RelatedDescription":"Opened issue \"ContentPage BackgroundColor ignored in Forms 3.5.0.94564-pre3\" (#5057) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nContentPage BackgroundColor is ignored in Forms 3.5.0.94564-pre3 causing the colour of a Xamarin.Android activity to show through (MainActivity or a splash activity). This is happening on device and emulator.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Forms app.\r\n2. Upgrade Forms nuget to v3.5-pre3. \r\n3. Upgrade Android.Support nugets to 28.0.0.1. (probably not necessary)\r\n3. Set the BackgroundColor in MainPage.xaml to a non-white colour.\r\n4. Run the app.\r\n\r\n### Expected Behavior\r\n\r\nMainPage uses the background colour specified in its XAML.\r\n\r\n### Actual Behavior\r\n\r\nMainPage has a white background (the colour of MainActivity).\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0.94564-pre3\r\n- Last known good version: 3.5.0.62956-pre2\r\n- IDE: VS 2017 v15.9.5\r\n- Platform Target Frameworks:\r\n  - Android: 8.1 + 9.0 (both tested)\r\n- Android Support Library Version: 28.0.0.1 (also seen with 28.0.0)\r\n- Affected Devices: Galaxy S6 Edge (Android 7.0) + Android Emulator\r\n\r\n### Screenshots\r\n\r\nExpected Behaviour: \r\n![expectedbehaviour-35pre3](https://user-images.githubusercontent.com/27953302/51717764-27d56800-203a-11e9-83bd-215cf645d295.png)\r\n\r\nActual Behaviour: \r\n![actualbehaviour-35pre2](https://user-images.githubusercontent.com/27953302/51717768-2b68ef00-203a-11e9-973a-0a3f83897949.png)\r\n\r\n### Reproduction Link\r\n\r\n[irongut/35pre3BGColor](https://github.com/irongut/35pre3BGColor)\r\n"},{"Id":"8947845497","Type":"PullRequestEvent","CreatedAt":"2019-01-24T23:39:38","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5056","RelatedDescription":"Opened pull request \"[WIP] Material Entry v1\" (#5056) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nStyles changes for ios and android to make Material Entry \r\n  \r\n\r\n### Known Issues\r\n- The height on android renders differently based on if it starts with text vs not\r\n\r\n### Issues Resolved ### \r\n- fixes #4949 \r\n\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n![image](https://user-images.githubusercontent.com/5375137/51715543-647f7000-1ff6-11e9-82a0-9880701e2964.png)\r\n\r\n\r\n### Testing Procedure ###\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8947839346","Type":"IssuesEvent","CreatedAt":"2019-01-24T23:38:09","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1395","RelatedDescription":"Closed issue \"Xamarin.Forms Grid Measure and Layout bug\" (#1395) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI attached a simple xaml to reproduce the problem and screenshots. There are four labels \"Begin t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 end\" which I am not able to show in the correct way without clipping.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.121934\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - UWP:  16299\r\n\r\n### Screenshots\r\n\r\nDuring windows resize\r\n\r\n- ![b1](https://user-images.githubusercontent.com/14055723/33965950-17b5f948-e05e-11e7-9003-660d2c948e86.PNG)\r\n\r\n- ![b2](https://user-images.githubusercontent.com/14055723/33965978-1fa20d68-e05e-11e7-8293-a9973f7ab0da.PNG)\r\n\r\n- ![b3](https://user-images.githubusercontent.com/14055723/33965979-1fba3adc-e05e-11e7-93b4-648cf4e40474.PNG)\r\n\r\nWhen I removed the row with Height=\"*\" from the main grid\r\n\r\n- ![bx1](https://user-images.githubusercontent.com/14055723/33965976-1f71a63c-e05e-11e7-8d5a-d6942275eda5.PNG)\r\n\r\n### Reproduction Link\r\n\r\n[TestPage2.zip](https://github.com/xamarin/Xamarin.Forms/files/1557359/TestPage2.zip)\r\n"},{"Id":"8947723364","Type":"IssuesEvent","CreatedAt":"2019-01-24T23:09:51","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5022","RelatedDescription":"Closed issue \"TapGestureRecognizer not working with Spans on iOS\" (#5022) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nHaving a `Label` with multiple `Span`s with `TapGestureRecognizer`s are not working on iOS.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add the next `Label` to `MainPage.xaml`:\r\n```\r\n<Label\r\n    FontSize=\"Micro\"\r\n    VerticalTextAlignment=\"Center\"\r\n    HorizontalTextAlignment=\"Center\">\r\n    <Label.FormattedText>\r\n        <FormattedString>\r\n            <Span Text=\"Long text about how we respect your privacy but you should actually check \" />\r\n            <Span Text=\" Twitter \" TextColor=\"Purple\">\r\n                <Span.GestureRecognizers>\r\n                    <TapGestureRecognizer Tapped=\"OpenPP\" />\r\n                </Span.GestureRecognizers>\r\n            </Span>\r\n            <Span Text=\"and\" />\r\n            <Span Text=\" Google\" TextColor=\"Purple\">\r\n                <Span.GestureRecognizers>\r\n                    <TapGestureRecognizer Tapped=\"OpenToc\" />\r\n                </Span.GestureRecognizers>\r\n            </Span>\r\n            <Span Text=\".\" />\r\n        </FormattedString>\r\n    </Label.FormattedText>\r\n</Label>\r\n```\r\n2. Add `EventHandlers` for both `OpenToc` and `OpenPP`.\r\n\r\n### Expected Behavior\r\nWhen the user tap on `Twitter` or `Google` spans the action described in the `EventHandlers` should happen.\r\n\r\n### Actual Behavior\r\nWhen the user tap on `Twitter` or `Google` spans the action described in the `EventHandlers` never happen.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1009999\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/yuv4ik/XFFormattedStringBug/\r\n\r\nMight be related to https://github.com/xamarin/Xamarin.Forms/issues/4143\r\n"},{"Id":"8947610393","Type":"PullRequestEvent","CreatedAt":"2019-01-24T22:44:55","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5055","RelatedDescription":"Opened pull request \"[iOS] CollectionView multi-item Add/Remove/Replace/Move\" (#5055) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUpdate INotifyCollectionChanged handling for CollectionView on iOS to handle mutli-item Add, Remove, Replace, and Move notifications. \r\n\r\n### Issues Resolved ### \r\n\r\n- partially implements #3172 \r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nIn Control Gallery, navigate to CollectionView Gallery -> Observable Collection Galleries -> [Multi-item add/remove, no index|Multi-item add/remove, with index].\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8948690252","Type":"PullRequestEvent","CreatedAt":"2019-01-25T03:40:52","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5474","RelatedDescription":"Opened pull request \"[tests] Ignore UIPreviewInteraction failing selectors for now\" (#5474) at xamarin/xamarin-macios","RelatedBody":"- With Xcode 10.2 beta 1 these selectors do not respond anymore.\n  Still investigating why as part of https://github.com/xamarin/xamarin-macios/issues/5471\n- Fix Make.config Xcode xip url."},{"Id":"8948241873","Type":"PullRequestEvent","CreatedAt":"2019-01-25T01:27:56","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5473","RelatedDescription":"Opened pull request \"[WatchKit] Update bindings to Xcode 10.2 Beta 1\" (#5473) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8948144401","Type":"PullRequestEvent","CreatedAt":"2019-01-25T01:00:44","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5472","RelatedDescription":"Opened pull request \"[WebKit] Update bindings to Xcode 10.2 Beta 1\" (#5472) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8947250252","Type":"PullRequestEvent","CreatedAt":"2019-01-24T21:36:16","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5470","RelatedDescription":"Merged pull request \"Bump for Xcode 10.2 beta 1\" (#5470) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8947236260","Type":"IssuesEvent","CreatedAt":"2019-01-24T21:33:44","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5471","RelatedDescription":"Opened issue \"[tests] Introspection iOS Unified 64-bits - simulator failing on 5 selector not found for UIKit.UIPreviewInteraction\" (#5471) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Run iOS introspection tests for iOS Unified 64-bits \r\n\r\n### Expected Behavior\r\n\r\nTests shouldn't fail with \"selector not found for UIKit.UIPreviewInteraction\"\r\n\r\n### Actual Behavior\r\n\r\n5 selector not found for UIKit.UIPreviewInteraction\r\n\r\n```\r\n[FAIL] Selector not found for UIKit.UIPreviewInteraction : cancelInteraction \r\n[FAIL] Selector not found for UIKit.UIPreviewInteraction : locationInCoordinateSpace: \r\n[FAIL] Selector not found for UIKit.UIPreviewInteraction : delegate \r\n[FAIL] Selector not found for UIKit.UIPreviewInteraction : setDelegate: \r\n[FAIL] Selector not found for UIKit.UIPreviewInteraction : view \r\n```\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\nLatest builds from https://github.com/xamarin/xamarin-macios/tree/xcode10.2. After https://github.com/xamarin/xamarin-macios/pull/5470 is merged.\r\n"},{"Id":"8946847528","Type":"PullRequestEvent","CreatedAt":"2019-01-24T20:23:24","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5470","RelatedDescription":"Opened pull request \"Bump for Xcode 10.2 beta 1\" (#5470) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":145,"FavoriteCount":69,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":42,"FavoriteCount":19,"RawContent":null},{"Id":"1085961073902129152","CreatedAt":"2019-01-17T18:04:30+00:00","UserScreenname":"xamarinhq","Text":"As the .NET community expands so should the community standups... We are pleased to introduce the expansion of the… https://t.co/EDO0vChQlR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1083829954515750923","CreatedAt":"2019-01-11T20:56:12+00:00","UserScreenname":"xamarinhq","Text":"...just posted on the Xamarin Blog, Andrei Nitescu shares one of his contributions to Xamarin.Forms, the bindable l… https://t.co/rp3eVPLbYl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":104,"FavoriteCount":45,"RawContent":null},{"Id":"1083399709526503424","CreatedAt":"2019-01-10T16:26:34+00:00","UserScreenname":"xamarinhq","Text":"Our very first Mobile .NET #CommunityStandup will be live in about 30 minutes at 9am Pacific! @maddyleger1,… https://t.co/vmFHIKZTIt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":270,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":154,"FavoriteCount":69,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":145,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":82,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":177,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":113,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2019-01-25T05:31:06.5667898Z","RunDurationInMilliseconds":2699}