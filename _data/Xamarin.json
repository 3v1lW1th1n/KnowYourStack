{"Data":{"Blog":{"FeedItems":[{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null},{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T19:56:18+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post What&#8217;s New for Xamarin Developers in Visual Studio 2019 appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-visual-studio-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in April","PublishedOn":"2019-04-01T19:05:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Xamarin and .NET Developer Events in April appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-and-net-developer-events-in-april/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9505596539","Type":"PullRequestEvent","CreatedAt":"2019-04-24T21:05:16","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3023","RelatedDescription":"Merged pull request \"[MSBuildDeviceIntegration] Fix the Install/InstantRun tests.\" (#3023) at xamarin/xamarin-android","RelatedBody":"We made a change where `SignAndroidPackage` no longer\r\nautomatically calls `Build`. This was done to help\r\nspeed up the IDE and to save it having to call `Build`\r\nall over again. There was an assumption in the `Install`\r\ntests where we assumed `Build` was being called. As a\r\nresult a bunch of tests failed with our favourite\r\n`LinkAssemblies` error.\r\n\r\n\terror MSB4018: System.IO.FileNotFoundException: Could not load assembly 'UnnamedProject, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\n\r\nSo lets call `Build` before we do any of the Installation\r\ntests.\r\n\r\nNext up it seems that Nunit resolves all the test cases\r\nBEFORE the `[OnTimeSetup]` runs. As a result the value\r\nfor `CommercialBuildAvailable` was always `false`.\r\nSo lets calculate that in a static constructor so that\r\nit will have the correct value when nunit figures out\r\nthe test cases."},{"Id":"9505274103","Type":"PullRequestEvent","CreatedAt":"2019-04-24T20:15:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3024","RelatedDescription":"Merged pull request \"[tests] Add XF test to _ApkTestProjectBundle\" (#3024) at xamarin/xamarin-android","RelatedBody":"When fixing the AOT measurements\r\n(https://github.com/xamarin/xamarin-android/pull/3017), I didn't\r\nnotice we have similar issue with the Bundle flavor.\r\n\r\nWe can either not run XF in Bundle flavor or rebuild it before\r\nrun. The XF apps are very common, so I think it makes sense to keep running\r\nthe test and thus we need to add it to the `_ApkTestProjectBundle` item\r\ngroup so that it is rebuild before running."},{"Id":"9504795741","Type":"PullRequestEvent","CreatedAt":"2019-04-24T18:59:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3019","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix startup-xf.aotprofile installation\" (#3019) at xamarin/xamarin-android","RelatedBody":"Forgot to list the `startup-xf.aotprofile` file in few places to make\r\nit part of the installation"},{"Id":"9504733111","Type":"PullRequestEvent","CreatedAt":"2019-04-24T18:50:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2701","RelatedDescription":"Merged pull request \"Bump to mono:2019-02\" (#2701) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9503689672","Type":"PullRequestEvent","CreatedAt":"2019-04-24T16:16:27","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3024","RelatedDescription":"Opened pull request \"[tests] Add XF test to _ApkTestProjectBundle\" (#3024) at xamarin/xamarin-android","RelatedBody":"When fixing the AOT measurements\r\n(https://github.com/xamarin/xamarin-android/pull/3017), I didn't\r\nnotice we have similar issue with the Bundle flavor.\r\n\r\nWe can either not run XF in Bundle flavor or rebuild it before\r\nrun. The XF apps are very common, so I think it makes sense to keep running\r\nthe test and thus we need to add it to the `_ApkTestProjectBundle` item\r\ngroup so that it is rebuild before running."},{"Id":"9503618610","Type":"PullRequestEvent","CreatedAt":"2019-04-24T16:07:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3020","RelatedDescription":"Merged pull request \"[xa-prep-tasks] support https for git clone\" (#3020) at xamarin/xamarin-android","RelatedBody":"I don't use SSH on Windows, and so the current behavior wasn't working\r\nfor me. I was getting errors such as:\r\n\r\n    Cloning into 'C:\\src\\xamarin-android\\\\external\\monodroid'...\r\n    Host key verification failed.\r\n    fatal: Could not read from remote repository.\r\n    Please make sure you have the correct access rights\r\n    and the repository exists.\r\n    Errors\r\n        C:\\src\\xamarin-android\\build-tools\\xa-prep-tasks\\external-git-dependencies.targets(17,5): error MSB6006: \"git.EXE\" exited with code 128. [C:\\src\\xamarin-android\\build-tools\\xa-prep-tasks\\xa-prep-tasks.csproj]\r\n        C:\\src\\xamarin-android\\build-tools\\xa-prep-tasks\\external-git-dependencies.targets(17,5): error MSB6003: The specified task executable \"git.EXE\" could not be run. System.ComponentModel.Win32Exception (0x80004005): The directory name is invalid\r\n        at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)\r\n        at System.Diagnostics.Process.Start()\r\n        at Microsoft.Build.Utilities.ToolTask.ExecuteTool(String pathToTool, String responseFileCommands, String commandLineCommands)\r\n        at Microsoft.Build.Utilities.ToolTask.Execute() [C:\\src\\xamarin-android\\build-tools\\xa-prep-tasks\\xa-prep-tasks.csproj]\r\n                C:\\src\\xamarin-android\\build-tools\\xa-prep-tasks\\external-git-dependencies.targets(17,5): error MSB6003: The specified task executable \"git.EXE\" could not be run. System.ComponentModel.Win32Exception (0x80004005): The directory name is invalid\r\n        at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)\r\n        at System.Diagnostics.Process.Start()\r\n        at Microsoft.Build.Utilities.ToolTask.ExecuteTool(String pathToTool, String responseFileCommands, String commandLineCommands)\r\n        at Microsoft.Build.Utilities.ToolTask.Execute() [C:\\src\\xamarin-android\\build-tools\\xa-prep-tasks\\xa-prep-tasks.csproj]\r\n\r\nI think we could support https by doing:\r\n\r\n    git config --get remote.origin.url\r\n\r\nAnd if we see `https://`, just try to use `git clone\r\nhttps://github.com/foo/bar` without any credentials."},{"Id":"9503448841","Type":"PullRequestEvent","CreatedAt":"2019-04-24T15:46:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3017","RelatedDescription":"Merged pull request \"[tests] Add XF test to _ApkTestProjectAot\" (#3017) at xamarin/xamarin-android","RelatedBody":"So that it is rebuilt, before running it, with AOT enabled. That\r\nexplains the unexpected test times measurements, where there wasn't\r\nmuch difference between AOT and non-AOT measurements.\r\n\r\nExample unexpected measurements (the lines are split for better\r\nreadability):\r\n\r\n    last-Release,JNI.init-Release,init-Release,OnCreateBegin-Release,OnCreateEnd-Release,OnStartBegin-Release,OnStartEnd-Release,OnResumeBegin-Release,OnResumeEnd-Release,ActivityDisplayed-Release\r\n    last-Release-Aot,JNI.init-Release-Aot,init-Release-Aot,OnCreateBegin-Release-Aot,OnCreateEnd-Release-Aot,OnStartBegin-Release-Aot,OnStartEnd-Release-Aot,OnResumeBegin-Release-Aot,OnResumeEnd-Release-Aot,ActivityDisplayed-Release-Aot\r\n    last-Release-Profiled-Aot,JNI.init-Release-Profiled-Aot,init-Release-Profiled-Aot,OnCreateBegin-Release-Profiled-Aot,OnCreateEnd-Release-Profiled-Aot,OnStartBegin-Release-Profiled-Aot,OnStartEnd-Release-Profiled-Aot,OnResumeBegin-Release-Profiled-Aot,OnResumeEnd-Release-Profiled-Aot,ActivityDisplayed-Release-Profiled-Aot\r\n    last-Release-Bundle,JNI.init-Release-Bundle,init-Release-Bundle,OnCreateBegin-Release-Bundle,OnCreateEnd-Release-Bundle,OnStartBegin-Release-Bundle,OnStartEnd-Release-Bundle,OnResumeBegin-Release-Bundle,OnResumeEnd-Release-Bundle,ActivityDisplayed-Release-Bundle\r\n    738,195,195,238,459,461,461,461,462,800\r\n    727,198,198,239,462,464,464,464,465,786\r\n    829,258,258,307,540,542,542,543,544,888\r\n    717,198,198,240,465,467,467,468,468,773"},{"Id":"9503081766","Type":"PullRequestEvent","CreatedAt":"2019-04-24T15:02:38","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3023","RelatedDescription":"Opened pull request \"[MSBuildDeviceIntegration] Fix the Install/InstantRun tests.\" (#3023) at xamarin/xamarin-android","RelatedBody":"We made a change where `SignAndroidPackage` no longer\r\nautomatically calls `Build`. This was done to help\r\nspeed up the IDE and to save it having to call `Build`\r\nall over again. There was an assumption in the `Install`\r\ntests where we assumed `Build` was being called. As a\r\nresult a bunch of tests failed with our favourite\r\n`LinkAssemblies` error.\r\n\r\n\terror MSB4018: System.IO.FileNotFoundException: Could not load assembly 'UnnamedProject, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\n\r\nSo lets call `Build` before we do any of the Installation\r\ntests.\r\n\r\nNext up it seems that Nunit resolves all the test cases\r\nBEFORE the `[OnTimeSetup]` runs. As a result the value\r\nfor `CommercialBuildAvailable` was always `false`.\r\nSo lets calculate that in a static constructor so that\r\nit will have the correct value when nunit figures out\r\nthe test cases."},{"Id":"9503070506","Type":"PullRequestEvent","CreatedAt":"2019-04-24T15:01:23","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3022","RelatedDescription":"Closed pull request \"[MSBuildDeviceIntegration] Fix the Install/InstantRun tests.\" (#3022) at xamarin/xamarin-android","RelatedBody":"We made a change where `SignAndroidPackage` no longer\r\nautomatically calls `Build`. This was done to help\r\nspeed up the IDE and to save it having to call `Build`\r\nall over again. There was an assumption in the `Install`\r\ntests where we assumed `Build` was being called. As a\r\nresult a bunch of tests failed with our favourite\r\n`LinkAssemblies` error.\r\n\r\n\terror MSB4018: System.IO.FileNotFoundException: Could not load assembly 'UnnamedProject, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\n\r\nSo lets call `Build` before we do any of the Installation\r\ntests.\r\n\r\nNext up it seems that Nunit resolves all the test cases\r\nBEFORE the `[OnTimeSetup]` runs. As a result the value\r\nfor `CommercialBuildAvailable` was always `false`.\r\nSo lets calculate that in a static constructor so that\r\nit will have the correct value when nunit figures out\r\nthe test cases."},{"Id":"9502149450","Type":"PullRequestEvent","CreatedAt":"2019-04-24T13:14:16","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3022","RelatedDescription":"Opened pull request \"[MSBuildDeviceIntegration] Fix the Install/InstantRun tests.\" (#3022) at xamarin/xamarin-android","RelatedBody":"We made a change where `SignAndroidPackage` no longer\r\nautomatically calls `Build`. This was done to help\r\nspeed up the IDE and to save it having to call `Build`\r\nall over again. There was an assumption in the `Install`\r\ntests where we assumed `Build` was being called. As a\r\nresult a bunch of tests failed with our favourite\r\n`LinkAssemblies` error.\r\n\r\n\terror MSB4018: System.IO.FileNotFoundException: Could not load assembly 'UnnamedProject, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\n\r\nSo lets call `Build` before we do any of the Installation\r\ntests.\r\n\r\nNext up it seems that Nunit resolves all the test cases\r\nBEFORE the `[OnTimeSetup]` runs. As a result the value\r\nfor `CommercialBuildAvailable` was always `false`.\r\nSo lets calculate that in a static constructor so that\r\nit will have the correct value when nunit figures out\r\nthe test cases."},{"Id":"9501899763","Type":"IssuesEvent","CreatedAt":"2019-04-24T12:41:28","Actor":"GintasS","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3021","RelatedDescription":"Opened issue \"Xamarin Android - New Created Tabbed App crashes after changing newly added ImageView's src attribute in VS2019.\" (#3021) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open VS 2019.\r\n2. Create new Project - Xamarin.Android (Tabbed App)\r\n3. Add ImageView control and change it's src attribute via Source editor.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nLoads custom image from drawable path.\r\n![image](https://user-images.githubusercontent.com/20372363/56659765-9dd38480-66a6-11e9-87b1-57c77af0687a.png)\r\n\r\n### Actual Behavior\r\nProduces following errors:\r\n![image](https://user-images.githubusercontent.com/20372363/56659532-10903000-66a6-11e9-987f-29a840733d8d.png)\r\n\r\n(Designer error):\r\n![image](https://user-images.githubusercontent.com/20372363/56659840-c78cab80-66a6-11e9-91bb-e98c0e74c2ae.png)\r\n\r\n\r\n### Version Information\r\n![image](https://user-images.githubusercontent.com/20372363/56659569-2867b400-66a6-11e9-9c72-2255de63e022.png)\r\n![image](https://user-images.githubusercontent.com/20372363/56659593-34ec0c80-66a6-11e9-82ff-dff1f9df2daa.png)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nXamarin.VisualStudio.TastyPackage|Information|0|Hooked up SDB tracing adapter\r\nXamarin.VisualStudio.TastyPackage|Information|0|Initialization finished\r\nXamarin|Information|0|Xamarin - 16.0.0.515-d16-0+a3502d929\r\nXamarin.VisualStudio.TastyPackage|Information|0|Hooked up SDB tracing adapter\r\nXamarin.VisualStudio.TastyPackage|Information|0|Initialization finished\r\nXamarin.VisualStudio.Android.XamarinAndroidPackage|Warning|0|Initializing Xamarin.VisualStudio.Android.XamarinAndroidPackage\r\nXamarin.VisualStudio.Android.AndroidVirtualDeviceProvider|Error|0|an error occurred loading avd `A`, the system image does not exists\r\nXamarin.VisualStudio.Android.AndroidVirtualDeviceProvider|Error|0|an error occurred loading avd `Android_Accelerated_x86_Oreo`, the system image does not exists\r\nXamarin.VisualStudio.Android.AndroidVirtualDeviceProvider|Error|0|an error occurred loading avd `Nexus_5X_API_25`, the system image does not exists\r\nXamarin.VisualStudio.Android.AndroidVirtualDeviceProvider|Error|0|an error occurred loading avd `Nexus_5X_API_25_2`, the system image does not exists\r\nXamarin.VisualStudio.Android.AndroidVirtualDeviceProvider|Error|0|an error occurred loading avd `Test`, the system image does not exists\r\nXamarin.VisualStudio.ProjectSystem.PackageServices|Warning|0|Failed to Restore Nuget packages for project <deleted path for security by me>\\Visual Studio 2017\\Projects\\Test123\\Test123\\Test123.csproj.\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9506507434","Type":"PullRequestEvent","CreatedAt":"2019-04-25T00:36:20","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5961","RelatedDescription":"Merged pull request \"Shell hamburger\" (#5961) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRemove the bundled 3bar.png files. From what I can tell these won't get auto included when bundled with a nuget. In theory you can bundle content with the nuspec but iOS won't pickup those resources and pull them into the build. We could add a target to add the resource in but seeing as how it's just 3 horizontal lines, just drawing it seemed like the best solution for now. The PNG is basically just 3 rectangles.\r\n\r\n### Issues Resolved ### \r\n- fixes #3124 \r\n\r\n### Platforms Affected ### \r\n- iOS\r\n\r\n### Before/After Screenshots ### \r\nOne is the png and the other is the drawing\r\n\r\n![image](https://user-images.githubusercontent.com/5375137/56440447-a858dd00-62a6-11e9-9c19-09befd534244.png)\r\n\r\n\r\n### Testing Procedure ###\r\nRun the shell and make sure the hamburger shows up and looks ok\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard"},{"Id":"9506354979","Type":"IssuesEvent","CreatedAt":"2019-04-24T23:50:56","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6004","RelatedDescription":"Opened issue \"[Enhancement, Android] Change ActionBarDrawerToggle in platform to be v7 not v4\" (#6004) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\n\r\nCurrently we can't set the drawable on ActionBarDrawerToggle to anything because the v4 version of it doesn't have an api for setting the drawable\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/4915/files#diff-adb24726a0c58c74e3fc99113a27e2dcR785\r\n\r\nIf we convert it to the v7 one then we can set the drawable\r\n\r\n"},{"Id":"9506024945","Type":"PullRequestEvent","CreatedAt":"2019-04-24T22:25:13","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5954","RelatedDescription":"Merged pull request \"fix infinite loops and remove public apis\" (#5954) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n- removed GoToPart from the IShellController code parts because there isn't any platform code that uses them so it's not useful at this point\r\n- added an exception if someone tries to do a relative route to a shell section as this behavior hasn't been implemented yet so I don't want the behavior to change once we make it so relative routes push to a stack. I also added an internal overload to turn this on for unit tests so unit tests can continue unhindered with validating behavior\r\n- I fixed  the logic when you use an absolute route to navigation via <routename> / <page>. It was causing an  infinite loop\r\n- removed getroutekeys and a few additional classes added in pre9 that will become exposed later down the road\r\n\r\n\r\n### API Changes ###\r\n Removed:\r\n - Routing.GetRouteKeys\r\n- class NavigationRequest\r\n- GotoPart from the IShellController classes as the platforms don't use these methods so they don't need to be apart of the controllers\r\n\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n\r\n### Testing Procedure ###\r\n- there are unit tests\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9505879430","Type":"IssuesEvent","CreatedAt":"2019-04-24T21:55:10","Actor":"dansiegel","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6003","RelatedDescription":"Opened issue \"[Enhancement] Add Color.ToHexString\" (#6003) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\n\r\nAdd ToHexString method on the Color to make it easier to convert a Xamarin Forms Color back to a Hex String.  \r\n\r\n## API Changes\r\n\r\n```cs\r\npublic string GetHexString()\r\n    {\r\n        var red = (int)(R * 255);\r\n        var green = (int)(G * 255);\r\n        var blue = (int)(B * 255);\r\n        var alpha = (int)(A * 255);\r\n        var hex = $\"#{alpha:X2}{red:X2}{green:X2}{blue:X2}\";\r\n\r\n        return hex;\r\n    }\r\n```\r\n\r\n## Intended Use Case\r\n\r\nanywhere that it makes sense to create a native color from hex string.\r\n"},{"Id":"9505428741","Type":"PullRequestEvent","CreatedAt":"2019-04-24T20:38:52","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6002","RelatedDescription":"Opened pull request \"Profiler V4\" (#6002) at xamarin/Xamarin.Forms","RelatedBody":"Debug CI"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9505692083","Type":"PullRequestEvent","CreatedAt":"2019-04-24T21:21:00","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5946","RelatedDescription":"Merged pull request \"[appkit] Fix NSTabView.Delegate (missing/removed `virtual`)\" (#5946) at xamarin/xamarin-macios","RelatedBody":"This was removed accidentally while fixing the generator\nref: https://github.com/xamarin/xamarin-macios/commit/35842ffc5e0d5b47d8e58410e1800f2996816846"},{"Id":"9504072877","Type":"PullRequestEvent","CreatedAt":"2019-04-24T17:11:41","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5919","RelatedDescription":"Merged pull request \"[mtouch] Enable dsym even for aot'ed images when interpreter is enabled\" (#5919) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/mono/mono/issues/13975"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":37,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":92,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":107,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":44,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":26,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":120,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":97,"FavoriteCount":42,"RawContent":null}]}},"RunOn":"2019-04-25T05:30:53.8521826Z","RunDurationInMilliseconds":3055}