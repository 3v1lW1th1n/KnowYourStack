{"Data":{"Vue-Issues":{"Issues":[{"Id":"610608736","IsPullRequest":true,"CreatedAt":"2020-05-01T13:29:47","Actor":"vue-bot","Number":"11365","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11365","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11365)"},{"Id":"610724496","IsPullRequest":false,"CreatedAt":"2020-05-01T13:18:09","Actor":"Gotterbild","Number":"11367","RawContent":null,"Title":"Unexpected convertation of string prop into boolean","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ndxL039y/2/](https://jsfiddle.net/ndxL039y/2/)\r\n\r\n### Steps to reproduce\r\nJust add a property that can accept both boolean and string:\r\n```\r\n...\r\nprops: {\r\n  value: [Boolean, String]\r\n},\r\n...\r\n```\r\n\r\nThen feed an empty string value into this property. Empty string value will be converted to boolean value, to `true`.\r\n\r\n### What is expected?\r\nIf property can accept both boolean and string value, then empty string value should behave as any other string value and shouldn't be converted into boolean.\r\n\r\n### What is actually happening?\r\nEmpty string value is converted into boolean `true` value.\r\n\r\n---\r\nTested in Vue 2.7.1, but 2.7.1 is not availalble in your Issue Helper.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11367","RelatedDescription":"Closed issue \"Unexpected convertation of string prop into boolean\" (#11367)"},{"Id":"610696566","IsPullRequest":false,"CreatedAt":"2020-05-01T11:14:04","Actor":"BXGo","Number":"11366","RawContent":null,"Title":"website dark mode","State":"closed","Body":"### What problem does this feature solve?\r\ntoo light at night\r\n\r\n### What does the proposed API look like?\r\nan botton for shift.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11366","RelatedDescription":"Closed issue \"website dark mode\" (#11366)"},{"Id":"610196131","IsPullRequest":false,"CreatedAt":"2020-04-30T16:24:18","Actor":"roydouek","Number":"11364","RawContent":null,"Title":"not re rendering view with v-model and computed value","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/sc-xw0xf](https://codesandbox.io/s/sc-xw0xf)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1.select the selected date time on the second selection table , under \"this doesn't works as expected\"\r\n2. select another date on the same hour(same row)\r\n3. notice no change was made to the div\r\n\r\n### What is expected?\r\ndiv would change the text as the value recomputed ,\r\nas the first selection table works \r\n\r\n### What is actually happening?\r\nno change is made in div text\r\n\r\n---\r\nthis is weird because you can see the correct value is send , and with my testing the data is indeed being changed correctly in the model.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11364","RelatedDescription":"Closed issue \"not re rendering view with v-model and computed value\" (#11364)"},{"Id":"610097040","IsPullRequest":false,"CreatedAt":"2020-04-30T15:52:29","Actor":"CzBiX","Number":"11363","RawContent":null,"Title":"Iframe immediately recreated in firefox","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2rkotfpc/2/](https://jsfiddle.net/2rkotfpc/2/)\r\n\r\n### Steps to reproduce\r\nclick the checkbox\r\n\r\n### What is expected?\r\noutput `[true, true]`\r\n\r\n### What is actually happening?\r\noutput `[true, false]` in Firefox\r\n\r\n---\r\nThis demo works in Chrome, but failed on Firefox v75-76.\r\nAny breakpoint also make the demo correct.(see `debugger` statement in demo)\r\n\r\nI'm not sure this bug should belongs to Vue or Firefox (or myself?).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11363","RelatedDescription":"Closed issue \"Iframe immediately recreated in firefox\" (#11363)"},{"Id":"609552454","IsPullRequest":false,"CreatedAt":"2020-04-30T07:05:57","Actor":"gxrsprite","Number":"11362","RawContent":null,"Title":"event bind name not support chinese characters","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://stackblitz.com/edit/js-bafxzt](https://stackblitz.com/edit/js-bafxzt)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n<a @click=\"点击\">btn1</a>   \r\n<a @click=\"点击($event)\">btn2</a>  \r\n<a @click=\"onClick\">btn3</a>   \r\n\r\nmethods:{\r\n   点击:function(e){\r\n\r\n    },\r\n    onClick:function(e){\r\n\r\n    }\r\n}\r\n\r\n### What is expected?\r\nbtn1 event not work\r\n\r\n### What is actually happening?\r\nwrite $event in console\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11362","RelatedDescription":"Closed issue \"event bind name not support chinese characters\" (#11362)"},{"Id":"609267236","IsPullRequest":false,"CreatedAt":"2020-04-29T19:09:50","Actor":"EthianWong","Number":"11361","RawContent":null,"Title":"支持渲染字符串为Vue组件","State":"closed","Body":"### What problem does this feature solve?\r\n服务端返回一个字符串例如\r\n`'i miss u <x-emoji>[爱心]</x-emoji>'`\r\n\r\n面对这个解析我主要想了下有3种比较好的方式？\r\n第一种 Vue 中定义 x-emoji 组件，有点类似 v-html 支持渲染组件？\r\n\r\n第二种是使用web-component\r\n\r\n第三种是类似语法解析，将这个字符串变为类似createElement 的结构，但不清楚Vue是否有这方面的沉淀可以复用？\r\n\r\n希望能给些建议\r\n\r\n### What does the proposed API look like?\r\nv-html支持渲染组件或给一些建议\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11361","RelatedDescription":"Closed issue \"支持渲染字符串为Vue组件\" (#11361)"},{"Id":"609131438","IsPullRequest":false,"CreatedAt":"2020-04-29T15:20:27","Actor":"NotThatGregGuy","Number":"11360","RawContent":null,"Title":"Prop type declaration order changes the props value when it is an empty string","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nz9qrjcb/](https://jsfiddle.net/nz9qrjcb/)\r\n\r\n\r\n### Steps to reproduce\r\nClick run and look at the generated html for the 4th row (array index 3).\r\nNotice that it is sometimes empty and sometimes true\r\n\r\n![image](https://user-images.githubusercontent.com/17282176/80613398-de28b980-8a02-11ea-9b9f-0cc01adb02e1.png)\r\n\r\n\r\n### What is expected?\r\nProp type order should not change the value of the prop\r\n\r\n### What is actually happening?\r\nProp type order is changing how empty strings are handled\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11360","RelatedDescription":"Closed issue \"Prop type declaration order changes the props value when it is an empty string\" (#11360)"},{"Id":"608875511","IsPullRequest":false,"CreatedAt":"2020-04-29T08:33:11","Actor":"troxler","Number":"11359","RawContent":null,"Title":"Add option to keep whitespace between elements regardless of new lines (vue-template-compiler)","State":"open","Body":"### What problem does this feature solve?\r\nThe [`whitespace` option of vue-template-compiler](https://github.com/vuejs/vue/tree/dev/packages/vue-template-compiler#options) currently allows `preserve` and `condense` (default in Vue CLI). While `condense` will result in smaller code size, it also breaks a common way to structure HTML as it removes all whitespace between elements *if it contains new lines*.\r\n\r\nPlease add an option that condenses all whitespace between elements into a single space *regardless of whether it contains new lines*. Such an option might also be the better default than `condense` as it is closer to what you would expect from your HTML.\r\n\r\nExample using Vue CLI with the default `condense` option:\r\n\r\n```html\r\n<p>\r\n  <span>1</span> <span>a</span>\r\n</p>\r\n\r\n<p>\r\n  <span>2</span>\r\n  <span>b</span>\r\n</p>\r\n\r\n<p>\r\n  <span>3</span>\r\n  <span>\r\n    c\r\n  </span>\r\n</p>\r\n```\r\n\r\nThis results in the following output in the browser:\r\n\r\n```\r\n1 a\r\n2b\r\n3 c \r\n```\r\n\r\nAs you can see, there is no whitespace between `2b`. While this behaviour is properly documented in the vue-template-compiler docs, it is not intuitive. Structuring HTML like in `2` is very common and it should not be necessary to restructure it like `3`. In addition to being unintuitive, it is currently very hard to find out which package with which configuration and which default options is actually responsible for that behaviour. It is thus super hard to reconfigure your setup according to your needs. And even if you manage to do that, you must decide between no minification with `preserve` and minification that might break your HTML with `condense`. I think there should be a middle ground.\r\n\r\n### What does the proposed API look like?\r\nIntroduce an option `condense-keep` or similar. Using that instead of `condense` will always keep one whitespace between elements regardless of any new lines.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11359","RelatedDescription":"Open issue \"Add option to keep whitespace between elements regardless of new lines (vue-template-compiler)\" (#11359)"},{"Id":"608794398","IsPullRequest":false,"CreatedAt":"2020-04-29T07:21:31","Actor":"anoopgcmz","Number":"11358","RawContent":null,"Title":"Insert content into iFrame content","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a text box outside iframe. when the title is updated in the text box the title inside the iframe should be changed. It can be done easily with jquery. But i cant find a solution to do the same in vue. please find the example jquery code below.\r\n\r\n$('#preview_iframe').contents().find('#title_iframe').html( $('#textbox_title').val().replace (/ /g, \"&nbsp;\"));\r\n\r\n### What is expected?\r\nto change the iframe text realtime on textbox update\r\n\r\n### What is actually happening?\r\nin console the data is getting updated but in iframe it is no updating\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11358","RelatedDescription":"Closed issue \"Insert content into iFrame content\" (#11358)"},{"Id":"608672931","IsPullRequest":false,"CreatedAt":"2020-04-28T23:14:07","Actor":"CaseJnr","Number":"11357","RawContent":null,"Title":"`src` attribute of `img` inside `picture` should be set after `img` is appended to `picture` to avoid unnecessary requests","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/CaseJnr/pen/VwvWbPE](https://codepen.io/CaseJnr/pen/VwvWbPE)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the codepen link in safari\r\n\r\n2. Inspect the element\r\n\r\n3. Reduce the view width below 900px and refresh the page\r\n\r\n4. You will notice that both the red and blue image is requested.\r\n\r\n5. Comment out the vue instance and refresh the page.\r\n\r\n6. You will notice only the red image is requested (as expected).\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nOnly the required picture resource is requested. \r\n\r\n### What is actually happening?\r\nBoth of the pictures resources are requested, causing redundant downloads.\r\n\r\n---\r\nIn Safari, adding a vue instance to any page will cause redundant picture sources to be requested. The picture element will behave correctly if the vue instance is removed.\r\n\r\n\r\nE.g.\r\n\r\n\r\n&#x3C;picture&#x3E;\r\n    &#x3C;source media=&#x22;(max-width: 900px)&#x22; srcset=&#x22;small.jpg&#x22;&#x3E;\r\n    &#x3C;img src=&#x22;large.jpg&#x22; alt=&#x22;&#x22;&#x3E;\r\n  &#x3C;/picture&#x3E;\r\n\r\n\r\n\r\nBy default, only the small.jpg should be requested when the view width is below 900px. However, if a vue instance is added to the page, then both the small.jpg and large.jpg are requested.\r\n\r\nThe mobile inspector shows the small.jpg request initiator as the page (expected). The large.jpg initiator is actually the vue instance.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11357","RelatedDescription":"Open issue \"`src` attribute of `img` inside `picture` should be set after `img` is appended to `picture` to avoid unnecessary requests\" (#11357)"},{"Id":"608572301","IsPullRequest":false,"CreatedAt":"2020-04-28T20:58:45","Actor":"stevenwr23","Number":"11356","RawContent":null,"Title":"Vue.nextTick event still called","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/qsv4dw2p/3/](https://jsfiddle.net/qsv4dw2p/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on show tooltip button\r\n\r\n\r\n### What is expected?\r\nThe text should change to \"Showing tooltip\" until I click anywhere else\r\n\r\n### What is actually happening?\r\nThe text changes to \"Showing tooltip\" and then immediatly changes back to \"no tooltip\"\r\n\r\n---\r\nHi, I'm trying the following for showing and hiding a tooltip on a click event (https://jsfiddle.net/qsv4dw2p/3/ ):\r\n\r\n\r\n  \tshowTooltip() {\r\n    \tthis.text = 'showing tooltip'\r\n      this.$nextTick(() => {\r\n        document.addEventListener(\"click\", this.hideTooltip)\r\n      })\r\n\t\t},\r\n    hideTooltip() {\r\n    \tthis.text = 'no tooltip'\r\n      document.removeEventListener('click', this.hideTooltip)\r\n    }\r\n\r\n\r\nThis worked on a previous version of vue (2.15.16), but I updated to (2.6.11) and it stopped working, basically the hide is called even if the listener is added on the $nextTick, why has this behavior changed?\r\n\r\nFrom my understanding, this should work in theory, since we are adding the hide listener on a next tick, so the current event should have already been handled.\r\n\r\nThere is a workaround, which is using click.stop instead of click (https://jsfiddle.net/qsv4dw2p/4/ ), however I'm curious on why it worked on previous versions but not in the latest.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11356","RelatedDescription":"Closed issue \"Vue.nextTick event still called\" (#11356)"},{"Id":"608356880","IsPullRequest":false,"CreatedAt":"2020-04-28T14:46:08","Actor":"aysiscore","Number":"11355","RawContent":null,"Title":"Vue.js loses DOM reactivity if element is removed from DOM by browser/user","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/86da2vpu/](https://jsfiddle.net/86da2vpu/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTo understand this, just type into the div and you will see the `<span>` tag placeholder will disappear (and be replaced by a `<!---->` comment) and you can start typing your text. The Content variable will now have your typed text in it.\r\n\r\nThen keep deleting the text you typed using the backspace key until all text is gone. Then backspace once more even though the string appears empty to clear out the `\\n` new line character (you can see this in the Vue `Content` variable's contents).\r\n\r\nWhat happens after the final backspace is that the `<p>` element also gets deleted from the DOM, as do the `<!---->` comments, and now the `<span>` placeholder HTML does not reappear as it should. It seems that if the comments are deleted, then Vue loses all reference to the `v-if` elements.\r\n\r\n### What is expected?\r\nOnce the text is deleted, the `<span>` placeholder should reappear.\r\n\r\n### What is actually happening?\r\nNothing happens. Vue.js loses interactivity.\r\n\r\n---\r\nhttps://stackoverflow.com/questions/61482260/vue-js-loses-dom-reactivity-if-element-is-removed-from-dom-by-browser-user\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11355","RelatedDescription":"Closed issue \"Vue.js loses DOM reactivity if element is removed from DOM by browser/user\" (#11355)"},{"Id":"608293864","IsPullRequest":false,"CreatedAt":"2020-04-28T13:57:33","Actor":"smolinari","Number":"11354","RawContent":null,"Title":"Dynamic slot names seem to fail with camelCase","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/smolinari/pen/RwWgMoW?editors=1010](https://codepen.io/smolinari/pen/RwWgMoW?editors=1010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis demo is using Quasar Framework, but the issue seems to be with Vue. \r\n\r\nNote there is a single slot with a dynamic slot name called \"computedBodyCellName\".  \r\n\r\n1. As the codepen is, you get this error: \r\n\r\n[Vue warn]: Property or method \"computedbodycellname\" is not defined on the instance but referenced during render.\r\n\r\nNotice how it is all small letters.\r\n\r\n2. Now change the computed property name to all small letters and then the dynamic slot name works. \r\n\r\n### What is expected?\r\ncamelCase named computed property used as the dynamic slot name should work. \r\n\r\n### What is actually happening?\r\ncamelCase name in the dynamic slot is being reduced to all small letters for some reason.\r\n\r\n---\r\nHope I could help.\r\n\r\nScott\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11354","RelatedDescription":"Closed issue \"Dynamic slot names seem to fail with camelCase\" (#11354)"},{"Id":"608070959","IsPullRequest":false,"CreatedAt":"2020-04-28T07:15:34","Actor":"wulucxy","Number":"11353","RawContent":null,"Title":"$attrs makes a lot unRecognized property to child component root html","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/sleepy-colden-2mzcw?file=/src/components/list-wrapper.vue](https://codesandbox.io/s/sleepy-colden-2mzcw?file=/src/components/list-wrapper.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. `grand-parent` pass props to parent component\r\n2. `parent` does't need some props, so we just `proxy` to `children` component(or grand-children)\r\n3. `children` component get the props\r\n4. the `parent` component get a lot unrecognized props to the root Dom Tag, this is annoying\r\n\r\n\r\n### What is expected?\r\nthe `parent` component ignore the unrecognized dom props\r\n\r\n### What is actually happening?\r\nthe `parent` dom still show the un needable `m1`, `m2`props。\r\n\r\n![image](https://user-images.githubusercontent.com/5326403/80456278-e4b22500-895f-11ea-8621-895f0614a857.png)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11353","RelatedDescription":"Closed issue \"$attrs makes a lot unRecognized property to child component root html\" (#11353)"},{"Id":"607848725","IsPullRequest":false,"CreatedAt":"2020-04-27T21:49:18","Actor":"derMart","Number":"11352","RawContent":null,"Title":"computed property setter not called when set in parent template","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/keen-smoke-dp17k?file=/src/components/HelloWorld.vue](https://codesandbox.io/s/keen-smoke-dp17k?file=/src/components/HelloWorld.vue)\r\n\r\n### Steps to reproduce\r\nsee the minimal example link which boiles down to this:\r\n\r\nparent template:\r\n```\r\n <HelloWorld msg=\"Hello Vue in CodeSandbox!\"/>\r\n```\r\nhello world code:\r\n```\r\n  computed: {\r\n    msg: {\r\n      get() {\r\n        return this._msg;\r\n      },\r\n      set: function(v) {\r\n        this._msg = v;\r\n        console.log(\"msg setter called\");\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\n### What is expected?\r\nthe console should print 'msg setter called'\r\n\r\n### What is actually happening?\r\nthe console does not print 'msg setter called' although the parent template sets the msg property\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11352","RelatedDescription":"Closed issue \"computed property setter not called when set in parent template\" (#11352)"},{"Id":"607655921","IsPullRequest":true,"CreatedAt":"2020-04-27T15:48:05","Actor":"IWANABETHATGUY","Number":"11351","RawContent":null,"Title":"types(Vue.use): fix #10573, better Vue.use type inference ","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11351","RelatedDescription":"Open PR \"types(Vue.use): fix #10573, better Vue.use type inference \" (#11351)"},{"Id":"607571521","IsPullRequest":false,"CreatedAt":"2020-04-27T14:10:26","Actor":"muzi131313","Number":"11350","RawContent":null,"Title":"vue spa application exits memory leak with using `$router.back()/$router.go(-1)` function","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/muzi131313/memory-leak/tree/master/vue-spa](https://github.com/muzi131313/memory-leak/tree/master/vue-spa)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nBasic Info:\r\n- 1.First, I have ensure this was not vue-router's question, there is  [related issues](https://github.com/vuejs/vue-router/issues/3181).\r\n- 2.clone the repository: `git clone https://github.com/muzi131313/memory-leak/tree/master/vue-spa`\r\n- 3.`npm install`\r\n- 4.`npm run serve`\r\n- 5.visit local page: `http://localhost:8080`\r\n\r\nNo problem step:\r\n- 1.Open Chrome Dev Tool, choose【More tools】->【Performance monitor】, and select 【memory】 tab\r\n- 2.click link 【About】\r\n- 3.then click link 【Home】\r\n- 4.click 【Collect garbage】\r\n- 5.then 【Dom Nodes】、【JS heap size】will down\r\n\r\nProblem step:\r\n- 1.Open Chrome Dev Tool, choose【More tools】->【Performance monitor】, and select 【memory】 tab\r\n- 2.click link 【About】\r\n- 3.then click 【back】(**don't click 【home】link**)\r\n- 4.click 【Collect garbage】\r\n- 5.then 【Dom Nodes】、【JS heap size】stay high\r\n\r\n\r\n### What is expected?\r\n【Dom Nodes】、【JS heap size】will down\r\n\r\n### What is actually happening?\r\n【Dom Nodes】、【JS heap size】stay high\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11350","RelatedDescription":"Closed issue \"vue spa application exits memory leak with using `$router.back()/$router.go(-1)` function\" (#11350)"},{"Id":"606978963","IsPullRequest":false,"CreatedAt":"2020-04-27T09:09:41","Actor":"duanmw","Number":"11348","RawContent":null,"Title":"在浏览器切换到其他页面再切换回来时，使用了v-show的transition过渡异常","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/duanmw/pen/mdemPwb](https://codepen.io/duanmw/pen/mdemPwb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n打开https://codepen.io/duanmw/pen/mdemPwb 页面，使用了v-show的transition过渡效果正常，然后切换其他浏览器页面，过一会再切换回来，transition过渡效果异常\r\n\r\n### What is expected?\r\ntransition过渡效果不受浏览器页面切换的影响\r\n\r\n### What is actually happening?\r\n浏览器页面切换影响了transition过渡效果\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11348","RelatedDescription":"Closed issue \"在浏览器切换到其他页面再切换回来时，使用了v-show的transition过渡异常\" (#11348)"},{"Id":"607017516","IsPullRequest":true,"CreatedAt":"2020-04-26T13:52:19","Actor":"zhangzhonghe","Number":"11349","RawContent":null,"Title":"fix(namespace): apply every namespace in slot when call applyNS (#11315)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11349","RelatedDescription":"Open PR \"fix(namespace): apply every namespace in slot when call applyNS (#11315)\" (#11349)"},{"Id":"606757047","IsPullRequest":false,"CreatedAt":"2020-04-25T12:13:32","Actor":"karthikmunsu","Number":"11347","RawContent":null,"Title":"Breaks in production mode","State":"closed","Body":"Im using lodash in some of my compoents it works fine yesterday from today it throws error\r\n![image](https://user-images.githubusercontent.com/8131962/80279558-1fc41680-871c-11ea-8bc5-baaafcf57f2c.png)\r\n![image](https://user-images.githubusercontent.com/8131962/80279574-3a968b00-871c-11ea-8b10-e911fad07c30.png)\r\n","Url":"https://github.com/vuejs/vue/issues/11347","RelatedDescription":"Closed issue \"Breaks in production mode\" (#11347)"},{"Id":"606208346","IsPullRequest":true,"CreatedAt":"2020-04-24T12:09:01","Actor":"LongTengDao","Number":"11346","RawContent":null,"Title":"avoid compiled code conflict with vm.Array","State":"closed","Body":"\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n","Url":"https://github.com/vuejs/vue/pull/11346","RelatedDescription":"Closed or merged PR \"avoid compiled code conflict with vm.Array\" (#11346)"},{"Id":"606090331","IsPullRequest":false,"CreatedAt":"2020-04-24T07:04:51","Actor":"wulucxy","Number":"11345","RawContent":null,"Title":"vue style bind can be improved","State":"closed","Body":"### What problem does this feature solve?\r\nI have bind some style properties, like this:\r\n\r\n```\r\nposition = {left: 40, top: 50}\r\n```\r\nso my first thought is this:\r\n\r\n```\r\n<div class={`basic-tooltip ${className}`} style={position}>\r\n```\r\nthe result is style is not show at all。\r\nI have to change to this:\r\n\r\n```\r\n// this really sucks~\r\nconst positionStyle = {}\r\nif (style.left) {\r\n  positionStyle.left = `${style.left || 0}px`\r\n}\r\nif (style.right) {\r\n  positionStyle.left = `${style.right || 0}px`\r\n}\r\nif (style.top) {\r\n  positionStyle.left = `${style.top || 0}px`\r\n}\r\nif (style.bottom) {\r\n  positionStyle.bottom = `${style.bottom || 0}px`\r\n}\r\n\r\n<div class={`basic-tooltip ${className}`} style={positionStyle}>\r\n```\r\n\r\nso why don't the first way be supported, this is much more elegant than the second way。\r\n\r\n### What does the proposed API look like?\r\n```\r\nrender(){\r\n  const position = {left: 40, top: 50}\r\n  return <div class={`basic-tooltip ${className}`} style={position} /> \r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11345","RelatedDescription":"Closed issue \"vue style bind can be improved\" (#11345)"},{"Id":"606088828","IsPullRequest":false,"CreatedAt":"2020-04-24T07:00:41","Actor":"wulucxy","Number":"11344","RawContent":null,"Title":"vue style bind can be improved","State":"closed","Body":"I have bind some style properties, like this:\r\n\r\n```\r\nposition = {left: 40, top: 50}\r\n```\r\nso my first thought is this:\r\n\r\n```\r\n<div class={`basic-tooltip ${className}`} style={position}>\r\n```\r\nthe result is style is not show at all。\r\nI have to change to this:\r\n\r\n```\r\n// this sucks~\r\n   const positionStyle = {}\r\nif (style.left) {\r\n  positionStyle.left = `${style.left || 0}px`\r\n}\r\nif (style.right) {\r\n  positionStyle.left = `${style.right || 0}px`\r\n}\r\nif (style.top) {\r\n  positionStyle.left = `${style.top || 0}px`\r\n}\r\nif (style.bottom) {\r\n  positionStyle.bottom = `${style.bottom || 0}px`\r\n}\r\n\r\n<div class={`basic-tooltip ${className}`} style={positionStyle}>\r\n```\r\n\r\nso why don't the first way be supported, this is much more elegant than the second way。","Url":"https://github.com/vuejs/vue/issues/11344","RelatedDescription":"Closed issue \"vue style bind can be improved\" (#11344)"},{"Id":"605975532","IsPullRequest":false,"CreatedAt":"2020-04-24T06:57:32","Actor":"Feofilakt","Number":"11343","RawContent":null,"Title":"Memory leak in Internet Explorer process after creating and destroying Vue component","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsbin.com/tepahezeqi/1/edit?html,js,output](https://jsbin.com/tepahezeqi/1/edit?html,js,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open reproduction link in Internet Explorer of latest version\r\n2. Open task manager and see how IE process memory increases until browser stops responding or crashes\r\n\r\n### What is expected?\r\nMemory usage not increases over time, browser works normal\r\n\r\n### What is actually happening?\r\n IE process memory quickly increases until browser stops responding or crashes\r\n\r\n---\r\nI suspect it is issue with reactivity system of Vue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11343","RelatedDescription":"Closed issue \"Memory leak in Internet Explorer process after creating and destroying Vue component\" (#11343)"},{"Id":"605843764","IsPullRequest":false,"CreatedAt":"2020-04-23T21:33:52","Actor":"guillaumebriday","Number":"11342","RawContent":null,"Title":"ignoredElements option does not completely ignore elements.","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/patient-snow-6pyw9?file=/src/App.vue](https://codesandbox.io/s/patient-snow-6pyw9?file=/src/App.vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nFor instance, I defined my Vue option like that:\r\n\r\n```\r\nVue.config.ignoredElements = [\r\n  'password-toggle'\r\n]\r\n```\r\n\r\nI have a CustomElement named `password-toggle` and I use it like so in my html:\r\n```html\r\n<input type=\"password\" class=\"form-control\" is=\"password-toggle\" />\r\n```\r\n\r\n\r\n\r\n### What is expected?\r\nI think, this input should be completely ignored by Vue and be handle by the browser. It should keep the eventListeners on this element too.\r\n\r\n### What is actually happening?\r\nUnfortunately, it's parsed by Vue and changed like that:\r\n\r\n```html\r\n<password-toggle class=\"form-toggle\"></password-toggle>\r\n```\r\n\r\nAll the eventListeners are gone too.\r\n\r\n---\r\nHow can we use Vue with Custom Elements ?\r\n\r\nThank you\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11342","RelatedDescription":"Closed issue \"ignoredElements option does not completely ignore elements.\" (#11342)"},{"Id":"605724374","IsPullRequest":false,"CreatedAt":"2020-04-23T17:41:17","Actor":"unarist","Number":"11341","RawContent":null,"Title":"Add user timing measurement for lifecycle hooks","State":"open","Body":"### What problem does this feature solve?\r\nMy app had performance issue due to some slow lifecycle hooks.\r\nIt would be easy to find an issue like that if `Vue.config.performance` API records lifecycle hooks too.\r\n\r\n### What does the proposed API look like?\r\nWith `Vue.config.performance = true`, I can observe timings of lifecycle hooks as like `vue <Foo> mounted` in \"Timings\" section in the devtools as well as current `Vue.config.performance` behavior for init/compile/render/patch events.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11341","RelatedDescription":"Open issue \"Add user timing measurement for lifecycle hooks\" (#11341)"},{"Id":"605630320","IsPullRequest":false,"CreatedAt":"2020-04-23T15:54:28","Actor":"Feofilakt","Number":"11340","RawContent":null,"Title":"Memory leak in Internet Explorer process after creating and destroying Vue component","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>Vue test</title>\r\n  </head>\r\n  <body>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.11/vue.js\"></script>\r\n    <div id=\"app\">\r\n      <child-component v-if=\"enabled\" />\r\n    </div>\r\n\r\n    <script>\r\n      Vue.component('child-component', {\r\n        data: function () {\r\n          return {\r\n            a: [],\r\n          }\r\n        },\r\n        template: '<div>{{ a.length }}</div>',\r\n        created: function () {\r\n          // noprotect\r\n          for (var i = 0; i < 10000; i++) {\r\n            this.a.push({\r\n              b: 1,\r\n              c: 2,\r\n              d: 3,\r\n              e: 4,\r\n            })\r\n          }\r\n        },\r\n      })\r\n\r\n      new Vue({\r\n        el: '#app',\r\n        data: function () {\r\n          return {\r\n            enabled: false,\r\n          }\r\n        },\r\n        created: function () {\r\n          var self = this\r\n          setInterval(function () {\r\n            self.enabled = !self.enabled\r\n          }, 2000)\r\n        },\r\n      })\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open reproduction link in Internet Explorer of latest version\r\n2. Open task manager and see how IE process memory increases until browser stops responding or crashes\r\n\r\n### What is expected?\r\nMemory usage not increases over time, browser works normal\r\n\r\n### What is actually happening?\r\n IE process memory quickly increases until browser stops responding or crashes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11340","RelatedDescription":"Closed issue \"Memory leak in Internet Explorer process after creating and destroying Vue component\" (#11340)"},{"Id":"605470169","IsPullRequest":false,"CreatedAt":"2020-04-23T12:30:34","Actor":"Feofilakt","Number":"11339","RawContent":null,"Title":"Memory leak in Internet Explorer after creating and destroying component","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/Feofilakt/vue-issue-repro](https://github.com/Feofilakt/vue-issue-repro)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Load reproduction project\r\n2. Install cli-service-global (https://cli.vuejs.org/guide/prototyping.html) and run \"vue serve\"\r\n3. Open site in Internet Explorer of latest version, open development tools and run memory profiler\r\n6. Make heap snapshot\r\n7. Check the checkbox\r\n8. Uncheck the checkbox\r\n9. Make heap snapshot\r\n\r\n### What is expected?\r\nMemory of two snapshots must be about equal\r\n\r\n### What is actually happening?\r\nMemory of two snapshots varies significantly\r\n\r\n---\r\nI'm afraid I didn't yet determine all the reproduction conditions for sure. If you cannot reproduce the bug, try increase the count in \"for\" loop, please.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11339","RelatedDescription":"Closed issue \"Memory leak in Internet Explorer after creating and destroying component\" (#11339)"},{"Id":"605228471","IsPullRequest":false,"CreatedAt":"2020-04-23T07:43:13","Actor":"SaekiRaku","Number":"11338","RawContent":null,"Title":"Class name are not finish binding after $nextTick on Vue 2.6.11.","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/SaekiRaku/issue-vue-nexttick](https://github.com/SaekiRaku/issue-vue-nexttick)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone the repository, and open the `vue2.5.html` and `vue2.6.html` in the browser directly.\r\n\r\nThese 2 HTML files based on the same JS code file (`app.js`), the difference between the HTML files is the version of Vue.\r\n\r\nBut the CSS transition reacts a different behaviour (the class of CSS transition is added by v-bind), by clicking `Toggle Expand` on the web, it should collapse or expand the list of random length with animation.\r\n\r\nAnd it works fine on Vue 2.5.1, but failed on Vue 2.6.11 (Also tested on Vue 2.6.1 which is also failed). On Vue 2.6.11 the action of collapse didn't have animation and didn't trigger the transitionend event. But it can work when adding a `setTimeout` inside the `$nextTick` callback. So I assumed that is because the class didn't finish binding after the `$nextTick`.\r\n\r\n### What is expected?\r\nIt should react in the same way between the different version of Vue.\r\n\r\n### What is actually happening?\r\nFor this repo's example, Vue 2.5.1 is working fine, Vue 2.6.11 is not.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11338","RelatedDescription":"Closed issue \"Class name are not finish binding after $nextTick on Vue 2.6.11.\" (#11338)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"610379213","IsPullRequest":false,"CreatedAt":"2020-04-30T20:54:38","Actor":"gimyboya","Number":"3185","RawContent":null,"Title":"Async components have meta as undefined","State":"closed","Body":"not sure if i am doing anything wrong but the `meta` property in the async routes is undefined when used in `beforeEach` or `beforeResolve`\r\n\r\n`router.ts`\r\n```ts\r\n{\r\n    path: '/auth',\r\n    name: 'auth',\r\n    meta: { layout: 'fullwidth', requireAuth: false },\r\n    component: () => import('@/views/Auth.vue'),\r\n    props: (route) => ({ query: route.query.c })\r\n  }\r\n```\r\n\r\n`guards.ts`\r\n```ts\r\nexport const authGuard = (to: Route, from: Route, next: any) => {\r\n  console.log(to.meta.requiresAuth); // undefined\r\n}\r\n```\r\n`main.ts`\r\n```ts\r\nrouter.beforeResolve(authGuard);\r\n\r\nnew Vue({\r\n  router,\r\n  render: (h: Function) => h(App)\r\n}).$mount('#app');\r\n```\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3185","RelatedDescription":"Closed issue \"Async components have meta as undefined\" (#3185)"},{"Id":"609584423","IsPullRequest":true,"CreatedAt":"2020-04-30T05:10:29","Actor":"mdwheele","Number":"3184","RawContent":null,"Title":"feat(link): add router-link-inactive","State":"open","Body":"Resolves #2648\r\n\r\nHello!\r\n\r\n💁 This PR adds an `inactive-class` prop to `<router-link>`, which will add a class to all inactive links (by default, uses `.router-link-inactive`)\r\n\r\nExample:\r\n\r\n```vue\r\n<router-link :to=\"link\" class=\"all links\" active-class=\"active only\" inactive-class=\"inactive only\">\r\n  Click me\r\n</router-link>\r\n```\r\n\r\nThis feature would be _killer_ for anybody using [Tailwind CSS](https://tailwindcss.com).\r\n\r\nPlease let me know if you would like me to add any additional e2e tests covering this. I don't know if there are any special behaviours around exact-match links or things like that we should cover.","Url":"https://github.com/vuejs/vue-router/pull/3184","RelatedDescription":"Open PR \"feat(link): add router-link-inactive\" (#3184)"},{"Id":"609357453","IsPullRequest":false,"CreatedAt":"2020-04-29T21:01:46","Actor":"stevendesu","Number":"3183","RawContent":null,"Title":"Update Route meta type to a user-extensible empty interfaces","State":"open","Body":"### What problem does this feature solve?\r\nCurrently a route's meta field is listed as \"any\". This makes it impossible for users to define the structure of their own metadata. As an example, I wish to use the \"meta\" property for middleware. I've created a Middleware type and would like an interface like the following:\r\n\r\n```\r\ndeclare module \"vue-router\" {\r\n    interface Route {\r\n        meta: {\r\n            middleware?: Middleware[]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIf I try to define it this way, I get an error saying that all declarations of \"meta\" must have identical modifiers, and that \"meta\" was already defined in router.d.ts... However if I DON'T define it this way then I lose the ability to statically type check this property and catch developers who accidentally pass an incorrect type (e.g. passing a string containing the middleware's name, instead of the middleware object itself)\r\n\r\nNow there's admittedly a limitation of this. Currently, it's possible to pass a non-object for the meta of a route. If you want to stick just a number or a string in there, it's completely valid. Making this a user-extensible interface would eliminate that use case (and therefore be a breaking API change) -- but I find it highly suspect that anyone is using the meta field in that way in a production app of any meaningful size. Without key-value pairs, storing only a single string into the \"meta\" field doesn't feel very useful.\r\n\r\n### What does the proposed API look like?\r\n```\r\nexport interface Route {\r\n  path: string\r\n  name?: string | null\r\n  hash: string\r\n  query: Dictionary<string | (string | null)[]>\r\n  params: Dictionary<string>\r\n  fullPath: string\r\n  matched: RouteRecord[]\r\n  redirectedFrom?: string\r\n  meta?: {} // <-- replaced \"any\" with \"{}\"\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3183","RelatedDescription":"Open issue \"Update Route meta type to a user-extensible empty interfaces\" (#3183)"},{"Id":"608925473","IsPullRequest":false,"CreatedAt":"2020-04-29T10:11:04","Actor":"DarkLite1","Number":"3182","RawContent":null,"Title":"Question: navigate back the previous page when logon succeeded","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/posva/rfcs/blob/router/navigation-failures/active-rfcs/0000-router-navigation-failures.md](https://github.com/posva/rfcs/blob/router/navigation-failures/active-rfcs/0000-router-navigation-failures.md)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI've implemented the `beforeEach` guard from the example:\r\n\r\n```javascript\r\nrouter.beforeEach((to, from, next) => {\r\n  // redirect to the login page if the target location requires authentication\r\n  if (to.meta.requiresAuth && !isAuthenticated) next('/login')\r\n  else next()\r\n})\r\n```\r\n\r\nThis works perfectly fine and redirects the user to the login page when he is not authenticated. When I then try to implement the navigation back to the original requested page as in the example it fails:\r\n\r\n```javascript\r\n// user is not authenticated\r\nawait router.push('/profile/dashboard')\r\n\r\n// `redirectedFrom` is a RouteLocationNormalized, like `currentRoute` but we are omitting\r\n// most properties to make the example readable\r\nrouter.currentRoute // { path: '/login', redirectedFrom: { path: '/profile/dashboard' } }\r\n```\r\nThank you for shining a little bit of light on this subject. Sorry if this is the wrong place to ask but the official example doesn't show something like this.\r\n\r\n### What is expected?\r\nAfter  successful logon the user should be navigated to the page he requested in the first place.\r\n\r\n### What is actually happening?\r\nDon't understand how to get that functionality in the app. \r\n\r\n---\r\nThank you for your help.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3182","RelatedDescription":"Closed issue \"Question: navigate back the previous page when logon succeeded\" (#3182)"},{"Id":"607258791","IsPullRequest":false,"CreatedAt":"2020-04-27T09:00:49","Actor":"muzi131313","Number":"3181","RawContent":null,"Title":"two nested router-view exist memory leak","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/muzi131313/vue-drag-slider/tree/master/example](https://github.com/muzi131313/vue-drag-slider/tree/master/example)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- 1.run the project\r\n```\r\ngit clone https://github.com/muzi131313/vue-drag-slider/tree/master/example\r\nnpm install\r\nnpm run serve\r\n```\r\n\r\n- 2.open chrome browser, input: http://localhost:8080\r\n- 2.open chrome devtool, and select memory\r\n- 3.more tools, select **Performance monitor**, notice **DOM Nodes** and **JS event listeners**\r\n- 4.click button 【go images】, then entry images page\r\n- 5.click button 【back】, back to the home page\r\n- 6.at 【memory】 tab, click 【collect garbage】\r\n- 7.then you will see 【JS event listeners】number was down, but 【DOM Nodes】and 【JS heap size】stay high\r\n- 8.repeat 4~7\r\n\r\n\r\n\r\n\r\n### What is expected?\r\n【DOM Nodes】and 【JS heap size】was down\r\n\r\n### What is actually happening?\r\n【DOM Nodes】and 【JS heap size】stay high\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3181","RelatedDescription":"Closed issue \"two nested router-view exist memory leak\" (#3181)"},{"Id":"606088604","IsPullRequest":false,"CreatedAt":"2020-04-24T07:00:15","Actor":"YueweiGuo","Number":"3180","RawContent":null,"Title":"vue router 不会提供清空历史记录的api么？","State":"closed","Body":"vue router 不会提供清空历史记录的api么？百度了一下，很多人有这个需求啊","Url":"https://github.com/vuejs/vue-router/issues/3180","RelatedDescription":"Closed issue \"vue router 不会提供清空历史记录的api么？\" (#3180)"},{"Id":"604276535","IsPullRequest":false,"CreatedAt":"2020-04-21T21:23:06","Actor":"ajmas","Number":"3179","RawContent":null,"Title":"Documentation: Clarify how to navigate to current page, while avoiding NavigationDuplicated","State":"closed","Body":"### What problem does this feature solve?\r\nSuggestion to provide an example and counter example on how to navigate to current page with updated query parameters. To be added  https://router.vuejs.org/guide/essentials/navigation.html\r\n\r\nThis is partly to counter outdated examples I have found on the internet and provide a 'supported' approach and also some knowledge that is currently only in the issues tracker.\r\n\r\nInitially I was dealing with code that looks like:\r\n\r\n```\r\n        const query = this.$route.query;\r\n        query.page = page;\r\n        query.limit = rowsPerPage;\r\n        await this.$router.push({ query }); \r\n```\r\n\r\nand resolved with:\r\n\r\n```\r\n        const query = Object.assign({}, this.$route.query);\r\n        query.page = page;\r\n        query.limit = rowsPerPage;\r\n        await this.$router.push({ query }); \r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nThis is a documentation update suggestion. I can make it if the idea is approved.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3179","RelatedDescription":"Closed issue \"Documentation: Clarify how to navigate to current page, while avoiding NavigationDuplicated\" (#3179)"},{"Id":"603769534","IsPullRequest":true,"CreatedAt":"2020-04-21T07:23:07","Actor":"Jinjiang","Number":"3178","RawContent":null,"Title":"docs(zh): update","State":"open","Body":"https://github.com/vuejs/vue-router/compare/a8fe4fc...11e779a\r\n/cc @Justineo for review. Thanks.","Url":"https://github.com/vuejs/vue-router/pull/3178","RelatedDescription":"Open PR \"docs(zh): update\" (#3178)"},{"Id":"602426487","IsPullRequest":true,"CreatedAt":"2020-04-18T10:17:36","Actor":"lscobe16","Number":"3177","RawContent":null,"Title":"Docs: Add Lighttpd config for history-mode","State":"open","Body":"On [this site](https://router.vuejs.org/guide/essentials/history-mode.html#example-server-configurations) added a config to use history-mode for Lighttpd just like for Apache/nginx/etc.\r\n\r\nThe solution was taken from: https://alexdespaindev.blogspot.com/2018/09/lighttpd-and-vuejs-router-history-mode.html","Url":"https://github.com/vuejs/vue-router/pull/3177","RelatedDescription":"Open PR \"Docs: Add Lighttpd config for history-mode\" (#3177)"},{"Id":"602406961","IsPullRequest":false,"CreatedAt":"2020-04-18T08:41:44","Actor":"mostafa6765","Number":"3176","RawContent":null,"Title":"addRoutes existing vue spa project","State":"closed","Body":"### What problem does this feature solve?\r\nI have a spa project which is already built as app.js . now I want to add routes that existing spa projects. please share any idea. laravel nova already uses this type of method.\r\n\r\nlaravel nova use this type functionality for adding route with existing vue spa\r\n\r\n```js\r\nNova.booting((Vue, router) => {\r\n    router.addRoutes([\r\n        {\r\n            name: 'nova-log-viewer-dashboard',\r\n            path: '/nova-log-viewer/dashboard',\r\n            component: require('./components/Dashboard'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-list',\r\n            path: '/nova-log-viewer/list',\r\n            component: require('./components/Logs/LogsTool'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-show',\r\n            path: '/nova-log-viewer/list/:date/:level',\r\n            component: require('./components/Show/Logs'),\r\n        },\r\n    ])\r\n})\r\n```\r\n\r\n### What does the proposed API look like?\r\n~ larave nova code sample \r\n\r\n```js\r\nNova.booting((Vue, router) => {\r\n    router.addRoutes([\r\n        {\r\n            name: 'nova-log-viewer-dashboard',\r\n            path: '/nova-log-viewer/dashboard',\r\n            component: require('./components/Dashboard'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-list',\r\n            path: '/nova-log-viewer/list',\r\n            component: require('./components/Logs/LogsTool'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-show',\r\n            path: '/nova-log-viewer/list/:date/:level',\r\n            component: require('./components/Show/Logs'),\r\n        },\r\n    ])\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3176","RelatedDescription":"Closed issue \"addRoutes existing vue spa project\" (#3176)"},{"Id":"602406113","IsPullRequest":false,"CreatedAt":"2020-04-18T08:14:49","Actor":"mostafa6765","Number":"3175","RawContent":null,"Title":"addRoutes existing vue spa project !","State":"closed","Body":"I have a spa project which is already built as app.js . now I want to add routes that existing spa projects. please share any idea. laravel nova already uses this type of method.\r\n\r\n* laravel nova use this type functionality for adding route with existing vue spa\r\n\r\n```js\r\nNova.booting((Vue, router) => {\r\n    router.addRoutes([\r\n        {\r\n            name: 'nova-log-viewer-dashboard',\r\n            path: '/nova-log-viewer/dashboard',\r\n            component: require('./components/Dashboard'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-list',\r\n            path: '/nova-log-viewer/list',\r\n            component: require('./components/Logs/LogsTool'),\r\n        },\r\n        {\r\n            name: 'nova-log-viewer-show',\r\n            path: '/nova-log-viewer/list/:date/:level',\r\n            component: require('./components/Show/Logs'),\r\n        },\r\n    ])\r\n})\r\n```","Url":"https://github.com/vuejs/vue-router/issues/3175","RelatedDescription":"Closed issue \"addRoutes existing vue spa project !\" (#3175)"},{"Id":"600892896","IsPullRequest":true,"CreatedAt":"2020-04-16T09:35:40","Actor":"SimonSiefke","Number":"3174","RawContent":null,"Title":"better error message when component is a promise (fix #3167)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3174","RelatedDescription":"Open PR \"better error message when component is a promise (fix #3167)\" (#3174)"},{"Id":"599455378","IsPullRequest":false,"CreatedAt":"2020-04-14T10:58:20","Actor":"jousi592","Number":"3173","RawContent":null,"Title":"Getting NavigationDuplicated when pushing new query params to router","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/flamboyant-fermat-lhb7u](https://codesandbox.io/s/flamboyant-fermat-lhb7u)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nInstall and configure Vue-router,  in any component try to add a query parametr with: `this.$router.push({ query: { test: 'test' } })` in `mounted` hook for example.\r\n\r\n### What is expected?\r\nThe query parameter gets added without errors.\r\n\r\n### What is actually happening?\r\nA uncaught error \"NavigationDuplicated\" gets thrown and blocks further js execution (when developer tools open)\r\n\r\n---\r\nI thought this has been fixed before, but it doesnt seem like it has and adding `.catch(() => {});` doesnt work 100% of the time.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3173","RelatedDescription":"Closed issue \"Getting NavigationDuplicated when pushing new query params to router\" (#3173)"},{"Id":"599176347","IsPullRequest":true,"CreatedAt":"2020-04-13T22:35:49","Actor":"joeldenning","Number":"3172","RawContent":null,"Title":"feat(history): Remove event listeners when all apps are destroyed.","State":"open","Body":"This resolves #3152 and resolves #2341\r\n\r\nThis is my first PR to vue-router and I am not sure if this was the best approach to solving the problem - please let me know! I also need to think of a good way of testing this behavior in either the e2e or unit tests. The unit tests only use the the abstract mode, but the feature only applies to html5/hash modes. And for e2e tests, I need to brainstorm the best way to verify that the hashchange and popstate listeners are being removed.","Url":"https://github.com/vuejs/vue-router/pull/3172","RelatedDescription":"Open PR \"feat(history): Remove event listeners when all apps are destroyed.\" (#3172)"},{"Id":"598746596","IsPullRequest":false,"CreatedAt":"2020-04-13T08:18:49","Actor":"mahmoudbassam","Number":"3171","RawContent":null,"Title":"router link not work inside li tag","State":"closed","Body":"  <ul class=\"main-search-list-defaultlist d-none\">\r\n\r\n           <li class=\"auto-suggestion d-flex align-items-center cursor-pointer\" v-for=\"(user, index) in userFromSearch\"  :key=\"index\" >\r\n               <router-link class=\"d-flex align-items-center justify-content-between w-100\"  :to=\"'/Userprofile/'+user.id\" >\r\n               <div class=\"d-flex\">\r\n                   <div v-if=\"user.channel.image\">\r\n                       <div class=\"mr-50\"><img :src=\"userSearchImage(user.channel.image)\" alt=\"png\"  height=\"50\"></div>\r\n                   </div>\r\n                   <div class=\"search-data\" >\r\n                       <p class=\"search-data-title mb-0\"></p><span class=\"text-muted\">{{user.name}}</span>\r\n                   </div>\r\n               </div><button class=\"search-data-size mr-50 text-muted\" >17kb</button>\r\n           </router-link>\r\n             </li>\r\n\r\n       </ul>\r\n**this menu appear after user search for another user but router link refresh the page and go to the true url I need do it without refresh the page **","Url":"https://github.com/vuejs/vue-router/issues/3171","RelatedDescription":"Closed issue \"router link not work inside li tag\" (#3171)"},{"Id":"598477703","IsPullRequest":true,"CreatedAt":"2020-04-12T14:39:35","Actor":"Alex-Sokolov","Number":"3170","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3170","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#3170)"},{"Id":"598042950","IsPullRequest":false,"CreatedAt":"2020-04-10T19:44:58","Actor":"6etacat","Number":"3169","RawContent":null,"Title":"Vue Router Dynamic Class Issue","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/zhoLsm6b/11/](https://jsfiddle.net/zhoLsm6b/11/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen a router-view tries to dynamically add classes to the router-links, some changes are overridden. \r\n\r\n### What is expected?\r\nDynamically added classes are preserved. \r\n\r\n### What is actually happening?\r\nWhen vue-router sees it needs to modify the classes, it does not preserve the previous classes. \r\n\r\n---\r\nI need to add another class for CSS modifications on the navigation bar for my 404 page. This requires me to reactively add a class to the router-links. \r\n\r\nMaybe rather than create a new classList, we can simply use `classList.add` or `classList.remove` so the user-added classes can be preserved when vue-router updates the elements?\r\n\r\nOr is this configurable in the router setup?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3169","RelatedDescription":"Closed issue \"Vue Router Dynamic Class Issue\" (#3169)"},{"Id":"595945573","IsPullRequest":false,"CreatedAt":"2020-04-07T15:16:37","Actor":"cartok","Number":"3168","RawContent":null,"Title":"Make asynch code possible in RouteConfig.redirect functions","State":"closed","Body":"### What problem does this feature solve?\r\nYou might be required to execute async code in order to be able to make a decision on where to redirect to.  \r\n\r\n**For example:**\r\n1. Some external service generates a URI like */foo?value=value*\r\n2. A user clicks on the link that came via email\r\n3. The app should redirect from */foo* to */bar or /baz*. The decision on where to redirect to depends on another service (elastic for example). If it found data for *value=value* you want to redirect to */bar*. If not to */baz*. (could be a check if some product still exists where you want to let the user create a review for)\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n// This redirect should execute properly\r\nconst route: RouteConfig = {\r\n  path: '/foo',\r\n  redirect: async function (to) {\r\n    const info = await someApiRequest({ value: to.query.value })\r\n\r\n    if (info) {\r\n      return '/bar'\r\n    } else {\r\n      return '/baz'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3168","RelatedDescription":"Closed issue \"Make asynch code possible in RouteConfig.redirect functions\" (#3168)"},{"Id":"595918906","IsPullRequest":false,"CreatedAt":"2020-04-07T14:38:26","Actor":"SimonSiefke","Number":"3167","RawContent":null,"Title":"Better error message Component type is invalid ","State":"open","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-em6dm?file=/router/index.js](https://codesandbox.io/s/vue-routing-example-em6dm?file=/router/index.js)\r\n\r\nVisit the `/hello` page in the codesandbox reproduction and open the console to see the error message\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSetup lazy-loaded routes and make a mistake by forgetting that it must not be an import but a function that returns the import statement\r\n```\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: import(/* webpackChunkName: \"Home\" */ '../views/Home.vue'),\r\n  }\r\n]\r\n```\r\n\r\n### What is expected?\r\nAn error message that says the component is not valid (because it is a promise) and that the expected type is a function\r\n\r\n### What is actually happening?\r\nVue shows the following error message: \r\n```\r\nFailed to mount component: template or render function not defined.\r\n```\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3167","RelatedDescription":"Open issue \"Better error message Component type is invalid \" (#3167)"},{"Id":"595030290","IsPullRequest":false,"CreatedAt":"2020-04-06T11:22:37","Actor":"bponomarenko","Number":"3166","RawContent":null,"Title":"Provide access to the router instance and component options in \"beforeRouteEnter\" guard","State":"open","Body":"### What problem does this feature solve?\r\nThere are some use cases, when it is required to have access to the router instance and component options inside `beforeRouteEnter` guard. While `beforeRouteUpdate` and `beforeRouteLeave` could get such access through `this.$router` and `this.$options`, it seems not way to achieve it in `beforeRouteEnter`. Importing router instance (similar to store import suggestion [here](https://github.com/vuejs/vue-router/issues/2118#issuecomment-484037415)) is not an option for us because we have shared set of router components, which are re-used in different vue applications, so there is no single place to import it from.\r\n\r\n### Use case\r\n\r\nI'm trying to create generic plugin for our applications which will define hook to pre-load data. In some component data pre-load will happen via vuex store, so it should be accessible in this hook.\r\n\r\nHere is simplified code for the plugin:\r\n```js\r\nexport default function install(Vue) {\r\n  Vue.mixin({\r\n    async beforeRouterEnter(to, from, next) {\r\n      if (componentOptions.preloadData) {\r\n        try {\r\n          const nextCallback = componentOptions.preloadData.call(null, router.app.$store);\r\n          next(nextCallback);\r\n        } catch (error) {\r\n          // Custom error for a generic error handler\r\n          next(new DataPreloadError(error));\r\n        }\r\n      } else {\r\n        next();\r\n      }\r\n    },\r\n  });\r\n};\r\n```\r\n\r\nThis plugin will make it possible to define custom `preloadData() { ... }` component option for a generic data pre-load as part of routing process. The only missing  references to make it work are `componentOptions` and `router`.\r\n\r\nNote that it is possible to provide `router` access in this particular example by passing it as plugin argument – `export default function install(Vue, router) { ... }`. However, it might be still beneficial to have access to router in the `beforeRouteEnter` guard, as it will be a solution for #3157.\r\n\r\n### What does the proposed API look like?\r\nProposal is to add additional `guardContext` argument to the guard function:\r\n```js\r\nbeforeRouteEnter(to, from, next, context) {\r\n // where context is { router: ..., componentOptions: ... }\r\n}\r\n```\r\n\r\nHowever if it should be implemented in different way – would be great to hear it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3166","RelatedDescription":"Open issue \"Provide access to the router instance and component options in \"beforeRouteEnter\" guard\" (#3166)"},{"Id":"593057325","IsPullRequest":false,"CreatedAt":"2020-04-03T08:06:23","Actor":"hengyizhangcn","Number":"3165","RawContent":null,"Title":"Is there the possibility of coexisting with hash mode and history mode in one program","State":"closed","Body":"### What problem does this feature solve?\r\nIs there the possibility of coexisting with hash mode and history mode in one program\r\n\r\n### What does the proposed API look like?\r\nIs there the possibility of coexisting with hash mode and history mode in one program\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3165","RelatedDescription":"Closed issue \"Is there the possibility of coexisting with hash mode and history mode in one program\" (#3165)"},{"Id":"593055233","IsPullRequest":false,"CreatedAt":"2020-04-03T03:42:28","Actor":"hengyizhangcn","Number":"3164","RawContent":null,"Title":"Is there the possibility of coexisting with hash mode and history mode in one program","State":"closed","Body":"Is there the possibility of coexisting with hash mode and history mode in one program","Url":"https://github.com/vuejs/vue-router/issues/3164","RelatedDescription":"Closed issue \"Is there the possibility of coexisting with hash mode and history mode in one program\" (#3164)"},{"Id":"591671724","IsPullRequest":false,"CreatedAt":"2020-04-01T06:51:14","Actor":"hengyizhangcn","Number":"3163","RawContent":null,"Title":" nothing","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/3163","RelatedDescription":"Closed issue \" nothing\" (#3163)"},{"Id":"591603172","IsPullRequest":false,"CreatedAt":"2020-04-01T04:00:35","Actor":"zhgt1997","Number":"3162","RawContent":null,"Title":"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录","State":"closed","Body":"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录，页面没有内容，有什么解决的方法吗\r\n","Url":"https://github.com/vuejs/vue-router/issues/3162","RelatedDescription":"Closed issue \"在 ie11 浏览器中，通过 window.open() 打开一个新页面，这个页面的路由是二级路由，但是ie 的地址栏的地址会闪一下，又变成了根目录\" (#3162)"},{"Id":"590433621","IsPullRequest":false,"CreatedAt":"2020-03-30T17:37:56","Actor":"evont","Number":"3161","RawContent":null,"Title":"getMatchedComponents 在base 模式下没有返回正确路由","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://github.com/evont/vue-multi-ssr](https://github.com/evont/vue-multi-ssr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSSR 下，如果使用了base 选项，比如： { routes: [{ path: '/page1', component: Page1 }], base: '/test' }，访问/pc2/page1, getMatchedComponents 将不会匹配到Page1，会抛出not found\r\n\r\n### What is expected?\r\ngetMatchedComponents 在base 模式下能够正确匹配到组件\r\n\r\n### What is actually happening?\r\ngetMatchedComponents 会直接使用routes中的path 去和fullPath 比对，导致无法获得正确路由组件\r\n\r\n---\r\n在尝试修改源码，在addRouteRecord 添加base 到 normalizedPath，即record.path 加上了base 之后，运行正常，但由于对源码改动比较大，且不确定这一问题是否为正常行为，希望解答或修复，感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3161","RelatedDescription":"Closed issue \"getMatchedComponents 在base 模式下没有返回正确路由\" (#3161)"},{"Id":"590110975","IsPullRequest":false,"CreatedAt":"2020-03-30T09:37:36","Actor":"anihCevol","Number":"3159","RawContent":null,"Title":"beforeRouteLeave","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB](https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E7%BB%84%E4%BB%B6%E5%86%85%E7%9A%84%E5%AE%88%E5%8D%AB)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nB页面：\r\n```\r\nexport default {\r\n  beforeRouteLeave (to, from, next) {\r\n    next(false)\r\n  }\r\n}\r\n```\r\n假如A页面高度300，A页面滑动到底部，然后路由跳转到B页面，假如B页面高度400，在B页面点击浏览器返回键， 虽然阻止了页面返回，但是页面滚动到了300的位置。\r\n\r\n### What is expected?\r\n页面位置不变\r\n\r\n### What is actually happening?\r\n页面位置滚动上一个页面位置高度\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3159","RelatedDescription":"Closed issue \"beforeRouteLeave\" (#3159)"},{"Id":"590112810","IsPullRequest":false,"CreatedAt":"2020-03-30T09:37:05","Actor":"951759534","Number":"3160","RawContent":null,"Title":"NavigationDuplicated error","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n````\r\nexport const dataRouter= [\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'NormalWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  }\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'ContractWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  },\r\n  {\r\n    path: '',\r\n    redirect: {\r\n      path: 'normalWrites'\r\n    }\r\n  }\r\n];\r\n\r\nrouter.js\r\nconst routes = [\r\n {\r\n        path: '/secondReviewList',\r\n        name: 'SecondReviewList',\r\n        component: SecondReviewList,\r\n        meta: {\r\n          requiresAuth: true\r\n        },\r\n        children: dataRouter\r\n      }\r\n]\r\nnew Router({\r\nroutes,\r\nmode: 'history',\r\n})\r\n\r\nview\r\n\r\n<button @click=\"changurl\">\r\n   change url\r\n<button>\r\n<router-view></router-view>\r\n\r\n\r\njs\r\n\r\nchangeUrl() {\r\n  this.$router.push({\r\n   url: '/secondReviewList/contractWrites'\r\n})\r\n}\r\n````\r\n\r\n### What is expected?\r\nno error\r\n\r\n### What is actually happening?\r\ntrigger this onClick event throw NavigationDuplicated error and this url isn't changed\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3160","RelatedDescription":"Closed issue \"NavigationDuplicated error\" (#3160)"},{"Id":"590110891","IsPullRequest":false,"CreatedAt":"2020-03-30T08:54:23","Actor":"951759534","Number":"3158","RawContent":null,"Title":"NavigationDuplicated error ","State":"closed","Body":"```\r\nexport const dataRouter= [\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'NormalWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  }\r\n  {\r\n    path: 'contractWrites',\r\n    name: 'ContractWrites',\r\n    meta: {\r\n      requiresAuth: true\r\n    },\r\n    component: CommonList\r\n  },\r\n  {\r\n    path: '',\r\n    redirect: {\r\n      path: 'normalWrites'\r\n    }\r\n  }\r\n];\r\n\r\nrouter.js\r\nconst routes = [\r\n {\r\n        path: '/secondReviewList',\r\n        name: 'SecondReviewList',\r\n        component: SecondReviewList,\r\n        meta: {\r\n          requiresAuth: true\r\n        },\r\n        children: dataRouter\r\n      }\r\n]\r\nnew Router({\r\nroutes,\r\nmode: 'history',\r\n})\r\n\r\nview\r\n\r\n<button @click=\"changurl\">\r\n   change url\r\n<button>\r\n<router-view></router-view>\r\n\r\n\r\njs\r\n\r\nchangeUrl() {\r\n  this.$router.push({\r\n   url: '/secondReviewList/contractWrites'\r\n})\r\n}\r\n```\r\n\r\n\r\ntrigger this onClick event    throw NavigationDuplicated error and this url isn't changed\r\n","Url":"https://github.com/vuejs/vue-router/issues/3158","RelatedDescription":"Closed issue \"NavigationDuplicated error \" (#3158)"},{"Id":"589214905","IsPullRequest":false,"CreatedAt":"2020-03-28T17:53:45","Actor":"bponomarenko","Number":"3157","RawContent":null,"Title":"Add possibility to handle aborted navigations globally","State":"closed","Body":"### What problem does this feature solve?\r\nAdds possibility to handle aborted navigations globally.\r\n\r\nInitiated vue-router navigation could have different outcomes:\r\n* successful navigation\r\n* errored navigation (in case there is non-internal js error in one of the guards or hooks)\r\n* aborted navigation\r\n\r\nIn cases, when application logic depends on these navigation results, `vue-router` has very limited support to catch aborted navigations, and no support to do it globally.\r\n\r\nSuccessful navigation can be catched in global `afterEach` hook or in `beforeResolve` guard (however error still can be thrown there). Also there is optional `onComplete` callback for `router.push`, but there is no way to set it from `<router-link>`.\r\nNavigation with error (because of JS error in one of the guards or hooks) can be catched in global `onError` hook. Also there is optional `onAbort` callback for `router.push` (which will be called for both navigation with error and aborted navigation), but there is no way to set it from `<router-link>`.\r\nWhen it comes to aborted navigations, the only place where it can be catched – `onAbort` callback for `router.push`. However, as mentioned before, it is not possible to set it from `<router-link>`. Moreover, there is no global hook to catch aborted navigations at all.\r\n\r\n### Use case\r\n\r\nIn our application we would like to simply display loading indicator in the root App component while navigation is in progress. Also, we would like to have this functionality be generic, so it can be applied to different applications. The easiest way to achieve it is by creating separate ES module like this `navigation-state-plugin.js`:\r\n``` js\r\nimport Vue from 'vue';\r\n\r\nexport const state = Vue.observable({ navigating: false });\r\n\r\nexport default router => {\r\n  // When navigation initiated – update state and proceed\r\n  router.beforeEach((to, from, next) {\r\n    state.navigating = true;\r\n    next();\r\n  });\r\n\r\n  // When navigation successfully finished – update state accordingly\r\n  router.afterEach(() => {\r\n    state.navigating = false;\r\n  });\r\n\r\n  // When navigation failed –also update state\r\n  router.onError(error => {\r\n    state.navigating = false;\r\n  });\r\n};\r\n```\r\n\r\nIn this way in can be applied in the `main.js`:\r\n```js\r\nimport VueRouter from 'vue-router';\r\nimport applyPlugin from './navigation-state-plugin.js`;\r\n\r\n// do other initializations\r\n\r\nconst router = new VueRouter(...);\r\napplyPlugin(router);\r\n\r\n// init application\r\n```\r\n\r\nAlso state from this file can be imported in App.vue and used to display loading indicator when `state.navigating` is `true`.\r\n\r\nHowever, when navigation is aborted there is no way to track it in a global manner, which leads to loading indicator to stay visible on a screen.\r\n\r\nAs possible solution, [it was suggested](https://github.com/vuejs/vue-router/issues/3027#issuecomment-599474646) to _\"use `router.push` or the v-slot api and get the promise returned from `navigate`\"_ (which is currently not available because #3042 has no PR). However this solution would require to create wrappers around vue-router API, which should always be used throughout entire application instead of native `vue-router` api. Even though it is easy to do for `router.push`, it is cumbersome to do for `<router-link>` because wrapper should be able to support the same rendering scenarios (without slot content, with slot content, with scoped slot content, etc.)\r\nIt is also not suitable for us, because we have shared set of router components, which are re-used in different vue applications. And not all applications will have `navigation-state-plugin.js`. So we need to have possibility to use native `router.push` and `<router-link>` with an option to globally manage navigation state.\r\n\r\n### What does the proposed API look like?\r\nMost obvious would be to introduce global `onAbort` hook:\r\n```js\r\n  router.onAbort(function callback(abortedRoute, reason) { ... });\r\n```\r\nwhere `reason` can be one of the errors from #3047\r\n\r\nIt may be possible to call existing `onError` or `afterEach` hooks also for aborted navigations, but that would be a breaking change, and probably would make API more confusing.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3157","RelatedDescription":"Closed issue \"Add possibility to handle aborted navigations globally\" (#3157)"},{"Id":"586418841","IsPullRequest":false,"CreatedAt":"2020-03-23T18:18:19","Actor":"rfftrifork","Number":"3156","RawContent":null,"Title":"Allow nested routes without parent component","State":"open","Body":"### What problem does this feature solve?\r\nThis issue already exist, but was closed: https://github.com/vuejs/vue-router/issues/2105 I do believe it shouldn't have been.\r\n\r\nThe `PassThrough` solution will most likely do it, but it is a workaround. I do not want to specify every view as a pass through.\r\n\r\nThis should imo. be supported by vue-router directly, making it easier to design ones system as small sub components, allowing each component to know it's own navigation and be loosely coupled.\r\n\r\n\r\nAlso, I don't know if it's the same or another issue, but `name` hierarchies would make this feature quite powerful\r\n\r\n### What does the proposed API look like?\r\nInterface wise I would say it makes sense to simply default to this behavior if `component` isn't specified.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3156","RelatedDescription":"Open issue \"Allow nested routes without parent component\" (#3156)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"610369802","IsPullRequest":true,"CreatedAt":"2020-05-01T03:09:08","Actor":"cuebit","Number":"1741","RawContent":null,"Title":"docs: module state declaration as function","State":"closed","Body":"This PR replaces all state declaration as functions for [module](https://vuex.vuejs.org/guide/modules.html) examples only.\r\n\r\nLeading by example, pun intended, this will encourage users to avoid common pitfalls with shared declarative state.\r\n\r\nInstance state examples are retained as `Object` since this does not apply to root state.\r\n\r\nCloses #1477","Url":"https://github.com/vuejs/vuex/pull/1741","RelatedDescription":"Closed or merged PR \"docs: module state declaration as function\" (#1741)"},{"Id":"610365714","IsPullRequest":true,"CreatedAt":"2020-04-30T20:30:44","Actor":"jmplahitko","Number":"1740","RawContent":null,"Title":"Allow action subscribers to catch rejections.","State":"open","Body":"@kiaking - Thanks for the direction. This is the pull request to replace [#1531](https://github.com/vuejs/vuex/pull/1531)","Url":"https://github.com/vuejs/vuex/pull/1740","RelatedDescription":"Open PR \"Allow action subscribers to catch rejections.\" (#1740)"},{"Id":"608713342","IsPullRequest":false,"CreatedAt":"2020-04-30T14:03:00","Actor":"ChrisShank","Number":"1736","RawContent":null,"Title":"useStore is missing a type declaration","State":"closed","Body":"### Version\r\n4.0.0-beta.1\r\n\r\n### Reproduction link\r\n[https://github.com/ChrisShank/vue-next-webpack-preview](https://github.com/ChrisShank/vue-next-webpack-preview)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRemove the type declaration of 'useStore' I added in 'vuex-shim.d.ts', and there will be a compile-time TS error.\r\n\r\n### What is expected?\r\nThe type for useStore to exist.\r\n\r\n### What is actually happening?\r\nOn the line: \r\n```ts\r\nimport { useStore } from 'vuex'\r\n```\r\n\r\nThere is an error: \r\n```bash\r\nTS2614: Module 'vue-next-webpack-preview/node_modules/vuex/types\"' has no exported member 'useStore'. Did you mean to use 'import useStore from \"vue-next-webpack-preview/node_modules/vuex/types\"' instead?\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1736","RelatedDescription":"Closed issue \"useStore is missing a type declaration\" (#1736)"},{"Id":"609944125","IsPullRequest":true,"CreatedAt":"2020-04-30T13:33:12","Actor":"kiaking","Number":"1739","RawContent":null,"Title":"types: add `useStore` function (#1736)","State":"closed","Body":"fix #1736\r\n\r\nThis PR adds missing `useStore` function typings. Users may provide `State` as a generics, or use without it to get `Store<any>` type.","Url":"https://github.com/vuejs/vuex/pull/1739","RelatedDescription":"Closed or merged PR \"types: add `useStore` function (#1736)\" (#1739)"},{"Id":"609881333","IsPullRequest":true,"CreatedAt":"2020-04-30T12:01:02","Actor":"kiaking","Number":"1738","RawContent":null,"Title":"build: migrate tests to jest","State":"open","Body":"Migrate test framework to Jest.\r\n\r\n- All unit tests are written in Jest.\r\n- Moved `setup` files out of `unit` filter and place it under `test`. This is for migrating E2E test to use Puppeteer instead of Nightwatch. In that time, we should be able to reuse this file since the test will all run with Jest.\r\n- Updated Babel to the latest.\r\n- Remove `babel-polyfill` due to deprecation. In the examples, we could add core-js pattern [described here at the top](https://babeljs.io/docs/en/babel-polyfill).\r\n- Added `yarn coverage` to generate test coverage.","Url":"https://github.com/vuejs/vuex/pull/1738","RelatedDescription":"Open PR \"build: migrate tests to jest\" (#1738)"},{"Id":"608878282","IsPullRequest":false,"CreatedAt":"2020-04-29T08:58:45","Actor":"ais-one","Number":"1737","RawContent":null,"Title":"process.env.NODE_ENV causing problems in @vue/vite","State":"closed","Body":"### Version\r\n4.0.0-beta.1\r\n\r\n### Reproduction link\r\n[https://github.com/ais-one/vite-eg](https://github.com/ais-one/vite-eg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclone the reproduction repo\r\nfollow README.md to install and run\r\nview browser console.log for error\r\n\r\nThe problem in vite (which does not use webpack, does not have process)\r\n\r\n```\r\nclass Store {\r\n  constructor (options = {}) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(typeof Promise !== 'undefined', `vuex requires a Promise polyfill in this browser.`);\r\n      assert(this instanceof Store, `store must be called with the new operator.`);\r\n    }\r\n```\r\n\r\n \r\n\r\n### What is expected?\r\nVuex createStore runs without error\r\n\r\n### What is actually happening?\r\nVuex createStore runs has error when running without webpack\r\n\r\n---\r\nIt may have the same problem on ESM build\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1737","RelatedDescription":"Closed issue \"process.env.NODE_ENV causing problems in @vue/vite\" (#1737)"},{"Id":"608081553","IsPullRequest":true,"CreatedAt":"2020-04-28T07:13:23","Actor":"kiaking","Number":"1735","RawContent":null,"Title":"chore: enhance release script","State":"open","Body":"This PR updates the release script to better support the workflow, such as server validation and such.\r\n\r\nMost of the code as taken from Vue 3 release script, but with minor update, which is it lets us select the release tag (`latest` or `next`).","Url":"https://github.com/vuejs/vuex/pull/1735","RelatedDescription":"Open PR \"chore: enhance release script\" (#1735)"},{"Id":"606807465","IsPullRequest":true,"CreatedAt":"2020-04-27T04:06:07","Actor":"kiaking","Number":"1729","RawContent":null,"Title":"build: update the build system to the latest structure","State":"closed","Body":"Close #1253\r\n\r\nThis PR updates the build system to align with the latest Vue libs. Almost identical to how it is in Vuex 4. The differences are:\r\n\r\n- Bundle name is as is.\r\n- `UMD` build instead of `IIFE`.","Url":"https://github.com/vuejs/vuex/pull/1729","RelatedDescription":"Closed or merged PR \"build: update the build system to the latest structure\" (#1729)"},{"Id":"607079371","IsPullRequest":false,"CreatedAt":"2020-04-26T18:23:14","Actor":"peerhenry","Number":"1734","RawContent":null,"Title":"No/insufficient documentation on accessing getters from other namespaced modules","State":"open","Body":"### Version\r\n4.0.0-beta.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/guide/getters.html](https://vuex.vuejs.org/guide/getters.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGo to https://vuex.vuejs.org/guide/getters.html\r\n\r\n### What is expected?\r\nAn example/explanation of how to access getters from another namespaced module.\r\n\r\n### What is actually happening?\r\nThere is no explanation.\r\n\r\n---\r\nOnly once I did a `console.log` of `rootGetters` was I able to see that getters from other namespaced modules had to be accessed by:\r\n\r\n`rootGetters['<othermodulename>/<getter>']`\r\n\r\nPlease provide this information in the documentation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1734","RelatedDescription":"Open issue \"No/insufficient documentation on accessing getters from other namespaced modules\" (#1734)"},{"Id":"606919093","IsPullRequest":true,"CreatedAt":"2020-04-26T05:07:37","Actor":"bekalshenoy","Number":"1733","RawContent":null,"Title":"fix: import requirements for  `this.$store` in README","State":"closed","Body":"To work global typings for `this.$store` need to import `Store` and `ComponentCustomProperties`","Url":"https://github.com/vuejs/vuex/pull/1733","RelatedDescription":"Closed or merged PR \"fix: import requirements for  `this.$store` in README\" (#1733)"},{"Id":"606918324","IsPullRequest":false,"CreatedAt":"2020-04-26T04:49:45","Actor":"BenoitRanque","Number":"1732","RawContent":null,"Title":"Discussion: will Vuex be necessary with Vue3?","State":"closed","Body":"Creating a usable central store is fairly trivial with the Vue3 composition api, example follows:\r\n\r\nExample simple store:\r\n\r\n```js\r\n// example-module.js\r\n\r\n// state\r\nexport const state = reactive({\r\n  count: 0\r\n})\r\n\r\n// getter\r\nexport const countPlusOne = computed(() => state.count + 1)\r\n\r\n// action (mutation not needed)\r\nexport function countUp () {\r\n  state.count += 1\r\n}\r\n\r\n// watchers would be very useful here too\r\n```\r\n\r\nThe module can easily be imported in files that need it, or a store could trivially be provided in the root Vue instance.\r\n\r\nThis leads me to ask: what features will Vuex 5 offer over this?\r\n","Url":"https://github.com/vuejs/vuex/issues/1732","RelatedDescription":"Closed issue \"Discussion: will Vuex be necessary with Vue3?\" (#1732)"},{"Id":"606895310","IsPullRequest":true,"CreatedAt":"2020-04-26T03:26:08","Actor":"cuebit","Number":"1731","RawContent":null,"Title":"chore(readme): language and example code improvements.","State":"closed","Body":"This PR revises the 4.0 branch README.\r\n\r\nImprovements include:\r\n- Better use of language for readability.\r\n- Correct use of module import/export for related example code blocks.","Url":"https://github.com/vuejs/vuex/pull/1731","RelatedDescription":"Closed or merged PR \"chore(readme): language and example code improvements.\" (#1731)"},{"Id":"606820939","IsPullRequest":false,"CreatedAt":"2020-04-25T17:48:39","Actor":"pearofducks","Number":"1730","RawContent":null,"Title":"ESM browser build still contains references to process.env","State":"open","Body":"### Version\r\n4.0.0-beta.1\r\n\r\n### Reproduction link\r\n[https://unpkg.com/vuex@4.0.0-beta.1/dist/vuex.esm-browser.js](https://unpkg.com/vuex@4.0.0-beta.1/dist/vuex.esm-browser.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCompare build from 3.3.0\r\n\r\nhttps://unpkg.com/vuex@3.3.0/dist/vuex.esm.browser.js\r\n\r\nto build for 4.0.0-beta.1\r\n\r\nhttps://unpkg.com/vuex@4.0.0-beta.1/dist/vuex.esm-browser.js\r\n\r\n### What is expected?\r\nNo references to `process.env`\r\n\r\n### What is actually happening?\r\nReferences to `process.env` which cause it to not be usable in the browser.\r\n\r\n---\r\nOriginal issue creating these builds - https://github.com/vuejs/vuex/issues/1247\r\n\r\nResolving this is blocking Vuex use in [Vite](https://github.com/vuejs/vite)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1730","RelatedDescription":"Open issue \"ESM browser build still contains references to process.env\" (#1730)"},{"Id":"606728306","IsPullRequest":true,"CreatedAt":"2020-04-25T10:02:38","Actor":"kiaking","Number":"1728","RawContent":null,"Title":"docs(ja): translate new options for the `subscribe` methods and logger plugin","State":"closed","Body":"This PR adds the Japanese translation for the new options added to `subscribe` methods and logger plugin.","Url":"https://github.com/vuejs/vuex/pull/1728","RelatedDescription":"Closed or merged PR \"docs(ja): translate new options for the `subscribe` methods and logger plugin\" (#1728)"},{"Id":"606721357","IsPullRequest":true,"CreatedAt":"2020-04-25T08:48:38","Actor":"Alex-Sokolov","Number":"1727","RawContent":null,"Title":"docs: Fix example in api/README.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1727","RelatedDescription":"Closed or merged PR \"docs: Fix example in api/README.md\" (#1727)"},{"Id":"606721133","IsPullRequest":true,"CreatedAt":"2020-04-25T08:47:06","Actor":"Alex-Sokolov","Number":"1726","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1726","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1726)"},{"Id":"606701661","IsPullRequest":false,"CreatedAt":"2020-04-25T06:19:48","Actor":"kiaking","Number":"1725","RawContent":null,"Title":"Add useXXX helpers","State":"open","Body":"### What problem does this feature solve?\r\nCurrently, we don't have `mapXXX` helpers equivalent feature when using Vuex 4 in composition api. It would be nice to have as both a convenience and for better typing support.\r\n\r\n### What does the proposed API look like?\r\nTo smoothly support migration from Vuex 3, at first, we should align with existing `mapXXX` helpers.\r\n\r\nAll of the following codes are meant to be used inside `setup` hook.\r\n\r\n### useState\r\n\r\n```js\r\nconst { count, countAlias, countPlusLocalState } = useState({\r\n  // arrow functions can make the code very succinct!\r\n  count: state => state.count,\r\n\r\n  // passing the string value 'count' is same as `state => state.count`\r\n  countAlias: 'count',\r\n\r\n  // to access local state with `this`, a normal function must be used\r\n  countPlusLocalState (state) {\r\n    return state.count   this.localCount\r\n  }\r\n})\r\n```\r\n\r\nWe should also support passing an array.\r\n\r\n```js\r\nconst { count } = useState([\r\n  // map this.count to store.state.count\r\n  'count'\r\n])\r\n```\r\n\r\n### useGetters\r\n\r\n```js\r\nconst { doneTodosCount, anotherGetter } = useGetters([\r\n  'doneTodosCount',\r\n  'anotherGetter'\r\n])\r\n```\r\n\r\nAlias the name by passing an object.\r\n\r\n```js\r\nconst { doneCount } = useGetters({\r\n  doneCount: 'doneTodosCount'\r\n})\r\n```\r\n\r\n### useActions\r\n\r\n```js\r\nconst { increment, incrementBy } = useActions([\r\n  'increment', // map `increment()` to `store.dispatch('increment')`\r\n  'incrementBy' // map `incrementBy(amount)` to `store.dispatch('incrementBy', amount)`\r\n])\r\n\r\nconst { add } = useActions({\r\n  add: 'increment' // map `add()` to `store.dispatch('increment')`\r\n})\r\n```\r\n\r\n### useMutations\r\n\r\n```js\r\nconst { increment, incrementBy } = useMutations([\r\n  'increment', // map `increment()` to `store.commit('increment')`\r\n  'incrementBy' // map `incrementBy(amount)` to `store.commit('incrementBy', amount)`\r\n])\r\n\r\nconst { add } = useMutations({\r\n  add: 'increment' // map `add()` to `store.commit('increment')`\r\n})\r\n```\r\n\r\n### Namespacing\r\n\r\nAll `useXXX` helpers should support passing `namespace` as the first argument.\r\n\r\n```js\r\nconst { a, b } = useState('some/nested/module', {\r\n  a: state => state.a,\r\n  b: state => state.b\r\n})\r\n\r\nconst { foo, bar } = useActions('some/nested/module', [\r\n  'foo',\r\n  'bar'\r\n])\r\n```\r\n\r\nAnd finally, `useNamespacedHelpers`.\r\n\r\n```js\r\nconst { useState, useActions } = useNamespacedHelpers('some/nested/module')\r\n\r\n// look up in `some/nested/module`\r\nconst { a, b } = useState({\r\n  a: state => state.a,\r\n  b: state => state.b\r\n})\r\n\r\n\r\n// look up in `some/nested/module`\r\nconst { foo, bar } = useActions([\r\n  'foo',\r\n  'bar'\r\n])\r\n```\r\n\r\n### NOTE\r\n\r\nThere's an issue #1695 that proposes adding `useModule` helper that returns the whole `module` as an object. We could do the follow-up PR to tackle this idea as well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1725","RelatedDescription":"Open issue \"Add useXXX helpers\" (#1725)"},{"Id":"605565711","IsPullRequest":true,"CreatedAt":"2020-04-23T15:51:43","Actor":"kiaking","Number":"1724","RawContent":null,"Title":"types: add subscribe options type","State":"closed","Body":"This PR adds missing types for subscribe `prepend` option merged via #1358.","Url":"https://github.com/vuejs/vuex/pull/1724","RelatedDescription":"Closed or merged PR \"types: add subscribe options type\" (#1724)"},{"Id":"602380309","IsPullRequest":true,"CreatedAt":"2020-04-23T11:50:50","Actor":"kiaking","Number":"1717","RawContent":null,"Title":"types: add typing support","State":"closed","Body":"fix #994\r\n\r\nCelebrating Vue Beta 2 release, now we can argument type our `$store` custom property in Vue Component 🎉  This PR adds typing support for Vuex 4.\r\n\r\n- Add missing types, and update Vue interfaces.\r\n- Upgrade TS to 3.8.\r\n- Upgrade tsconfig to align with Vue 3 (support Map and such).\r\n- Bring back type test in testing.","Url":"https://github.com/vuejs/vuex/pull/1717","RelatedDescription":"Closed or merged PR \"types: add typing support\" (#1717)"},{"Id":"604118936","IsPullRequest":true,"CreatedAt":"2020-04-23T03:45:54","Actor":"kiaking","Number":"1722","RawContent":null,"Title":"docs(ja): add `hasModule` api translation","State":"closed","Body":"This PR add the Japanese translation for the new `hasModule` API.","Url":"https://github.com/vuejs/vuex/pull/1722","RelatedDescription":"Closed or merged PR \"docs(ja): add `hasModule` api translation\" (#1722)"},{"Id":"604158924","IsPullRequest":true,"CreatedAt":"2020-04-23T03:45:19","Actor":"Alex-Sokolov","Number":"1723","RawContent":null,"Title":"docs: [RU] Update testing.md","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/pull/1425","Url":"https://github.com/vuejs/vuex/pull/1723","RelatedDescription":"Closed or merged PR \"docs: [RU] Update testing.md\" (#1723)"},{"Id":"603917875","IsPullRequest":false,"CreatedAt":"2020-04-21T11:25:56","Actor":"nainardev","Number":"1721","RawContent":null,"Title":"Why store() instead of just a store object","State":"closed","Body":"### Current API\r\n```js\r\nimport { createStore } from 'vuex'\r\n\r\nconst store = createStore({\r\n  state () {\r\n    return {\r\n      count: 1\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nWhy should we have store() return the state object instead of just writing the store?\r\n\r\n### What does the proposed API look like?\r\n```js\r\nimport { createStore } from 'vuex'\r\n\r\nconst store = createStore({\r\n  count: 1\r\n})\r\n```\r\nIs there a specific reason for having a function return store object\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1721","RelatedDescription":"Closed issue \"Why store() instead of just a store object\" (#1721)"},{"Id":"603849083","IsPullRequest":true,"CreatedAt":"2020-04-21T10:09:28","Actor":"Alex-Sokolov","Number":"1720","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"Latest updates","Url":"https://github.com/vuejs/vuex/pull/1720","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1720)"},{"Id":"603676755","IsPullRequest":true,"CreatedAt":"2020-04-21T08:05:10","Actor":"Jinjiang","Number":"1718","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"https://github.com/vuejs/vuex/compare/a5dd20c...b40ee5d\r\n/cc @justineo for review. Thanks.","Url":"https://github.com/vuejs/vuex/pull/1718","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1718)"},{"Id":"603680606","IsPullRequest":true,"CreatedAt":"2020-04-21T04:12:35","Actor":"Jinjiang","Number":"1719","RawContent":null,"Title":"docs: unified the tips format","State":"closed","Body":"I found in docs, we both use `> note: xxx` and `:::tip xxx` so I unified them into `vuepress` specific format. Hope it would be better.\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1719","RelatedDescription":"Closed or merged PR \"docs: unified the tips format\" (#1719)"},{"Id":"600845131","IsPullRequest":true,"CreatedAt":"2020-04-20T12:22:02","Actor":"kiaking","Number":"1715","RawContent":null,"Title":"build: align build system with vue 3","State":"closed","Body":"This PR updates the build system for Vuex 4 to align with Vue 3.\r\n\r\n- Bundles are now aligned with Vue 3 such as `vuex.esm-bundler.js` and `vuex.global.js`.\r\n- Using `__DEV__` global variable and rollup replace plugin to handle `process.env.NODE_ENV !== 'production'` replacement.\r\n- Remove `dist` folder from commit expect for `logger.d.ts`, plus organize `.gitignore` file to match the latest repository structure.\r\n- Make `index.js` to be the primary esm entry point by renaming `index.esm.js` to `index.js`, and renaming `index.js` to `index.cjs`.\r\n- Use index file without the build in test cases.\r\n- ~⚠️ The \"release script\" should be updated once #1707 is merged in `dev` branch.~ Included the \"release script\" as well.","Url":"https://github.com/vuejs/vuex/pull/1715","RelatedDescription":"Closed or merged PR \"build: align build system with vue 3\" (#1715)"},{"Id":"601706924","IsPullRequest":true,"CreatedAt":"2020-04-18T01:05:41","Actor":"mohamedhayibor","Number":"1716","RawContent":null,"Title":"Use currentCount getter instead of accessing $store.state.count on Counter component","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1716","RelatedDescription":"Closed or merged PR \"Use currentCount getter instead of accessing $store.state.count on Counter component\" (#1716)"},{"Id":"600545534","IsPullRequest":true,"CreatedAt":"2020-04-16T06:20:30","Actor":"alexesprit","Number":"1714","RawContent":null,"Title":"docs(ru): fix punctuation and typos","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1714","RelatedDescription":"Closed or merged PR \"docs(ru): fix punctuation and typos\" (#1714)"},{"Id":"599328444","IsPullRequest":true,"CreatedAt":"2020-04-14T06:33:54","Actor":"Alex-Sokolov","Number":"1713","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1713","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1713)"},{"Id":"598478643","IsPullRequest":true,"CreatedAt":"2020-04-14T06:28:02","Actor":"Alex-Sokolov","Number":"1712","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1712","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1712)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-02T05:30:44.7569269Z","RunDurationInMilliseconds":1754}