{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel. Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7528783140","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:20:36","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2941","RelatedDescription":"Closed issue \"PersistKeysToFileSystem in Docker hosted in Linux fails with \"Unknown error 524\"\" (#2941) at aspnet/Home","RelatedBody":"@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343)\r\n\r\nTrying to AddDataProtection for MVC Core app.\r\n\r\n```c#\r\nservices.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(\"etc/keys/\"))\r\n                .SetApplicationName(\"AppName\")\r\n```\r\n\r\nThe Directory is a configured volume mount in the linux host.\r\nIf I dont use the volume mount, it works.\r\nVolume mount is needed as per described in MS Docs since the app is hosted in many Docker containers.\r\nPlease advise.\r\n\r\nWorks locally. But when configured to a Docker container hosted in linux, I get the following exception on startup:\r\n\r\n{\"Timestamp\":\"2018-03-08T20:45:37.4873753+00:00\",\"Level\":\"Error\",\"MessageTemplate\":\"An error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC55SODK05P:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC55SODK05P\"}}\r\n\r\n\r\n---\r\n\r\n@Tratcher commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371634771)\r\n\r\n@natemcmaster \r\n\r\n---\r\n\r\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371636962)\r\n\r\nThis appears to be an issue with your Docker host, not with ASP.NET Core. System.IO.File.Move is failing to write into the mounted directory. Can you verify this with a minimal repro like this?\r\n```c#\r\npublic static void Main(string[] args)\r\n{\r\n    var tempFile = Path.Combine(Path.GetTempPath(), \"test.txt\");\r\n    File.WriteAllText(tempFile, \"Hello\");\r\n    File.Move(tempFile, \"etc/keys/test.txt\");\r\n}\r\n```\r\n\r\n---\r\n\r\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371659784)\r\n\r\nWrite and move works, but still getting exception.\r\n\r\nAn error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC597NS53I0:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC597NS53I0\"}}\r\n\r\nAn unhandled exception was thrown by the application.\",\"Exception\":\"System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()\",\"Properties\":{\"ConnectionId\":\"0HLC597NS53I0\",\"TraceIdentifier\":\"0HLC597NS53I0:00000001\",\"EventId\":{\"Id\":13,\"Name\":\"ApplicationError\"},\"SourceContext\":\"Microsoft.AspNetCore.Server.Kestrel\",\"RequestId\":\"0HLC597NS53I0:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null}}\r\n\r\n---\r\n\r\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371661817)\r\n\r\nCan you provide more log info? There should be an INFO log item just before this File.Move\r\n\r\nhttps://github.com/aspnet/DataProtection/blob/8a42c24f46d728b4728e6b20febd0a11c1111df2/src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs#L232-L233\r\n\r\n---\r\n\r\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371685069)\r\n\r\n services.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(\"etc/talentbrew/keys\"))\r\n                .SetApplicationName(\"XXX\")\r\n                .SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\r\nLevel\":\"Information\",\"MessageTemplate\":\"Writing data to file '{FileName}'.\",\"Properties\":{\"FileName\":\"/app/etc/talentbrew/keys/key-fb6f8187-5606-445b-9591-3c268c59ff84.xml\",\"EventId\":{\"Id\":39},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"}\r\n\r\n\"Level\":\"Error\",\"MessageTemplate\":\"Connection id \\\"{ConnectionId}\\\", Request id \\\"{TraceIdentifier}\\\": An unhandled exception was thrown by the application.\",\"Exception\":\"System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()\",\"Properties\":{\"ConnectionId\":\"0HLC5BJ5EVUU9\",\"TraceIdentifier\":\"0HLC5BJ5EVUU9:00000001\",\"EventId\":{\"Id\":13,\"Name\":\"ApplicationError\"},\"SourceContext\":\"Microsoft.AspNetCore.Server.Kestrel\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null}}\r\n\r\n\"Level\":\"Information\",\"MessageTemplate\":\"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.\",\"Properties\":{\"KeyId\":\"fb6f8187-5606-445b-9591-3c268c59ff84\",\"CreationDate\":\"2018-03-09T01:33:27.3851082+00:00\",\"ActivationDate\":\"2018-03-09T01:33:27.3843013+00:00\",\"ExpirationDate\":\"2019-03-09T01:33:27.3843013+00:00\",\"EventId\":{\"Id\":58},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"},\"Renderings\":{\"KeyId\":[{\"Format\":\"B\",\"Rendering\":\"{fb6f8187-5606-445b-9591-3c268c59ff84}\"}],\"CreationDate\":[{\"Format\":\"u\",\"Rendering\":\"2018-03-09 01:33:27Z\"}],\"ActivationDate\":[{\"Format\":\"u\",\"Rendering\":\"2018-03-09 01:33:27Z\"}],\"ExpirationDate\":[{\"Format\":\"u\",\"Rendering\":\"2019-03-09 01:33:27Z\"}]}}\r\n\r\nLevel\":\"Error\",\"MessageTemplate\":\"An error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"}}\r\n\r\n"},{"Id":"7528273325","Type":"IssuesEvent","CreatedAt":"2018-04-13T20:08:06","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3052","RelatedDescription":"Closed issue \"Routing tests broken on Mac\" (#3052) at aspnet/Home","RelatedBody":"https://travis-ci.org/aspnet/Routing/jobs/365869435\r\n\r\n```\r\n[xUnit.net 00:00:03.2304060]     Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder [FAIL]\r\nFailed   Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder\r\nError Message:\r\n Assert.Equal() Failure\r\n                                 ↓ (pos 62)\r\nExpected: ···20%23characters%20J%C3%B6rn\r\nActual:   ···20%23characters%20J%EF%BF%BDrn\r\n                                 ↑ (pos 62)\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder() in /_/test/Microsoft.AspNetCore.Routing.Tests/RouteTest.cs:line 675\r\n```\r\n\r\ncc @kichalla @jbagga @NTaylorMullen ?"},{"Id":"7528086117","Type":"IssuesEvent","CreatedAt":"2018-04-13T19:24:23","Actor":"pakrym","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3055","RelatedDescription":"Closed issue \"ConfigurationBuild.Build with non-existent Json file and reloadOnChange hangs on Ubuntu\" (#3055) at aspnet/Home","RelatedBody":"After instrumenting app from issue https://github.com/aspnet/AzureIntegration/issues/171 with a bunch of `Console.WriteLine()` calls:\r\n![image](https://user-images.githubusercontent.com/1697911/38753295-c89acf6e-3f12-11e8-95a2-9840135fc091.png)\r\n\r\nI got the following output:\r\n![image](https://user-images.githubusercontent.com/1697911/38753268-b8d43462-3f12-11e8-86ab-9c5b52b71000.png)\r\n\r\nThat means that `configurationBuilder.Build()` hangs.\r\n\r\nThe other things to consider is that in this case, `json` file doesn't exist and `reloadOnChange` is set to `true`.\r\n\r\nI also wasn't able to repro this issue outside CI test run, maybe it requires a lot of file IO to repro."},{"Id":"7528047005","Type":"IssuesEvent","CreatedAt":"2018-04-13T19:15:24","Actor":"pakrym","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3055","RelatedDescription":"Opened issue \"ConfigurationBuild.Build with non-existent Json file and reloadOnChange hangs on Ubuntu\" (#3055) at aspnet/Home","RelatedBody":"After instrumenting app from issue https://github.com/aspnet/AzureIntegration/issues/171 with a bunch of `Console.WriteLine()` calls:\r\n![image](https://user-images.githubusercontent.com/1697911/38753295-c89acf6e-3f12-11e8-95a2-9840135fc091.png)\r\n\r\nI got the following output:\r\n![image](https://user-images.githubusercontent.com/1697911/38753268-b8d43462-3f12-11e8-86ab-9c5b52b71000.png)\r\n\r\nThat means that `configurationBuilder.Build()` hangs.\r\n\r\nThe other things to consider is that in this case, `json` file doesn't exist and `reloadOnChange` is set to `true`.\r\n\r\nI also wasn't able to repro this issue outside CI test run, maybe it requires a lot of file IO to repro."},{"Id":"7527660281","Type":"IssuesEvent","CreatedAt":"2018-04-13T17:52:01","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2403","RelatedDescription":"Closed issue \"Make Session loading (Deserialize) faster\" (#2403) at aspnet/Home","RelatedBody":"_From @sdrapkin on Wednesday, May 10, 2017 8:43:05 AM_\r\n\r\n[DistributedSession.cs](https://github.com/aspnet/Session/blob/02b975c59776722c0cc47542599a59bef9445440/src/Microsoft.AspNetCore.Session/DistributedSession.cs#L294) adds deserialized property values in a loop to a `Dictionary<EncodedKey, byte[]> _store`.\r\n\r\nThis causes continuous dictionary resizing (which uses prime-number capacities). However, this resizing is wasteful, since `Deserialize()` already knows the required capacity (`expectedEntries`).\r\n\r\n`_store` should be initialised with a known capacity inside `Deserialize()`, instead if being initialised with an unknown capacity inside ctor.\r\n\r\n_Copied from original issue: aspnet/Session#163_"},{"Id":"7527450224","Type":"IssuesEvent","CreatedAt":"2018-04-13T17:06:02","Actor":"pakrym","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3054","RelatedDescription":"Opened issue \"JIT Compiler encountered an internal limitation while resolving a service with ILEmit backend enabled\" (#3054) at aspnet/Home","RelatedBody":"https://github.com/aspnet/Home/issues/2737#issuecomment-381194729\r\n\r\n```\r\nSystem.InvalidProgramException: JIT Compiler encountered an internal limitation.\r\n   at ResolveService(ILEmitResolverBuilderRuntimeContext , ServiceProviderEngineScope )\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)\r\n```\r\n\r\nSeems like a bad codegen."},{"Id":"7526621025","Type":"IssuesEvent","CreatedAt":"2018-04-13T14:32:57","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3053","RelatedDescription":"Closed issue \"Could not install package 'System.IO.FileSystem 4.3.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile259', but the package does not contain any assembly references or content files that are compatible with that framework. \" (#3053) at aspnet/Home","RelatedBody":"Working on Xamarin Cross Platform project(PCL) in Visual Studio 2017. Need to do some file IO operations but not able to add reference to System.IO.FileSystem nugget. Getting this error Could not install package 'System.IO.FileSystem 4.3.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile259', but the package does not contain any assembly references or content files that are compatible with that framework. "},{"Id":"7524322027","Type":"IssuesEvent","CreatedAt":"2018-04-13T06:33:48","Actor":"pkpaul5","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3053","RelatedDescription":"Opened issue \"Could not install package 'System.IO.FileSystem 4.3.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile259', but the package does not contain any assembly references or content files that are compatible with that framework. \" (#3053) at aspnet/Home","RelatedBody":"Working on Xamarin Cross Platform project(PCL) in Visual Studio 2017. Need to do some file IO operations but not able to add reference to System.IO.FileSystem nugget. Getting this error Could not install package 'System.IO.FileSystem 4.3.0'. You are trying to install this package into a project that targets '.NETPortable,Version=v4.5,Profile=Profile259', but the package does not contain any assembly references or content files that are compatible with that framework. "},{"Id":"7523236255","Type":"IssuesEvent","CreatedAt":"2018-04-12T23:46:49","Actor":"JunTaoLuo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3052","RelatedDescription":"Opened issue \"Routing tests broken on Mac\" (#3052) at aspnet/Home","RelatedBody":"https://travis-ci.org/aspnet/Routing/jobs/365869435\r\n\r\n```\r\n[xUnit.net 00:00:03.2304060]     Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder [FAIL]\r\nFailed   Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder\r\nError Message:\r\n Assert.Equal() Failure\r\n                                 ↓ (pos 62)\r\nExpected: ···20%23characters%20J%C3%B6rn\r\nActual:   ···20%23characters%20J%EF%BF%BDrn\r\n                                 ↑ (pos 62)\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder() in /_/test/Microsoft.AspNetCore.Routing.Tests/RouteTest.cs:line 675\r\n```\r\n\r\ncc @kichalla @jbagga @NTaylorMullen ?"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7529072576","Type":"PullRequestEvent","CreatedAt":"2018-04-14T00:21:50","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2015","RelatedDescription":"Merged pull request \"API Review Dependency Injection\" (#2015) at aspnet/SignalR","RelatedBody":"#1976 "},{"Id":"7529046719","Type":"PullRequestEvent","CreatedAt":"2018-04-14T00:08:03","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2006","RelatedDescription":"Merged pull request \"Remove MSG from SignalR\" (#2006) at aspnet/SignalR","RelatedBody":"This **includes** the changes from #2005, until I merge that (at which point I will rebase).\r\n\r\n![https://i2.wp.com/ahijackedlife.com/wp-content/uploads/2016/10/nomsg.png?resize=100%2C100](https://i2.wp.com/ahijackedlife.com/wp-content/uploads/2016/10/nomsg.png?resize=100%2C100)"},{"Id":"7528977460","Type":"PullRequestEvent","CreatedAt":"2018-04-13T23:35:08","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2010","RelatedDescription":"Merged pull request \"API Review for Http.Connections\" (#2010) at aspnet/SignalR","RelatedBody":"* Microsoft.AspNetCore.Http.Connections\r\n  * Remove string overloads of MapConnectionHandler, MapConnections on ConnectionsRouteBuilder\r\n  * Pubternalize HttpConnectionContext\r\n  * Unnest HttpConnectionContext.ConnectionStatus (and Pubternalize)\r\n  * Pubternalize HttpConnectionDispatcher\r\n  * Pubternalize HttpConnectionManager\r\n  * Rename `HttpConnectionOptions` (ideas: `HttpConnectionDispatcherOptions`)"},{"Id":"7528923568","Type":"PullRequestEvent","CreatedAt":"2018-04-13T23:12:21","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2016","RelatedDescription":"Opened pull request \"Extension methods for IHubClients methods\" (#2016) at aspnet/SignalR","RelatedBody":""},{"Id":"7528734536","Type":"PullRequestEvent","CreatedAt":"2018-04-13T22:05:00","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2014","RelatedDescription":"Merged pull request \"Internalize Microsoft.AspNetCore.Http.Connections.Client.Internal\" (#2014) at aspnet/SignalR","RelatedBody":"#1976 "},{"Id":"7528726643","Type":"PullRequestEvent","CreatedAt":"2018-04-13T22:02:38","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2015","RelatedDescription":"Opened pull request \"API Review Dependency Injection\" (#2015) at aspnet/SignalR","RelatedBody":"#1976 "},{"Id":"7528709237","Type":"PullRequestEvent","CreatedAt":"2018-04-13T21:57:39","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2013","RelatedDescription":"Merged pull request \"Internalize classes in Http.Connections\" (#2013) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/issues/1976\r\nKept `AvailableTransport` and `ServerSentEventsMessageFormatter` as pubternal\r\n`AvailableTransport` is used in `NegotiationResponse` which is used across multiple packages\r\n`ServerSentEventsMessageFormatter` is used by micro-benchmarks and because of crazy internal dependencies can't have internals visible to on Http.Connections"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7529260141","Type":"IssuesEvent","CreatedAt":"2018-04-14T02:26:47","Actor":"jaska45","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7651","RelatedDescription":"Opened issue \"Resource file generator\" (#7651) at aspnet/Mvc","RelatedBody":"ASP.NET Core localization is based on .resx file and localizers that use the resources. This all works pretty well but there is one big obstacle on localization any larger applications. It is the creating and maintaining .resx files. The localization process does not require neutral .resx file but in most cases they are needed because we need some files that are going to be the model for localized resx files. Most localization tools and services can handle .resx. You send the neutral .resx files and you will get set of localized ,resx files. In order to do that we need those neutral .resx files.\r\n\r\nUnfortunately there is not tooling support in VS for this but we have to do everything manually. First refactor the original source to replace hard coded string with localizer[\"...\"], then add the matching item into a .resx file and making sure they always match. Very tedious and boring job. It should be enough that you just internationalize your code (e.g. add localizer[\"...\"]) and then VS tooling would scan the source files and create the neutral resource files.\r\n\r\nCan you implement such a tool and include that to VS."},{"Id":"7529033690","Type":"PullRequestEvent","CreatedAt":"2018-04-14T00:01:41","Actor":"ajaybhargavb","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7650","RelatedDescription":"Opened pull request \"Added symbols.nuspec file to Mvc.Razor\" (#7650) at aspnet/Mvc","RelatedBody":"React to https://github.com/aspnet/BuildTools/pull/630.\r\n\r\n"},{"Id":"7528905576","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:05:12","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7635","RelatedDescription":"Closed issue \"Provide an ability to configure the HTTP client created by WebApplicationFactory<T>\" (#7635) at aspnet/Mvc","RelatedBody":"I'm using `WebApplicationFactory<T>` for some tests where I need to configure `HttpClient` appropriately with some default headers in order for the application to accept requests as valid.\r\n\r\nBecause all the `HttpClient Create*Client()` methods are non-virtual, it's not possible for me to override any of the implementations to set the headers before returning the client, so I need to make my own method and get all my tests to call that instead (`CreateValidClient()`) rather than have the fixture handle it for the consumers of it transparently.\r\n\r\nIt would be much easier to use `WebApplicationFactory<T>` in these tests if some (if not all) of the methods for creating `HttpClient` instances were virtual.\r\n\r\nThis is similar to #7631 which also requests changes to make it easier to make derived classes from `WebApplicationFactory<T>`."},{"Id":"7528768214","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:15:43","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7373","RelatedDescription":"Closed issue \"Assigning to the context's Result property, when implementing IPageFilter, causes an exception.\" (#7373) at aspnet/Mvc","RelatedBody":"Common logic, within an MVC Action or Razor Pages Handler, is to check, immediately, whether the ModelState is valid and, if not, return the View, Page or a Bad Request result (see Figure 1).\r\n\r\nTo eliminate this repeated code pattern, I have created an Action Filter that performs the check and, when appropriate, assigns a new `BadRequestObjectResult` to the context's `Result` property (See Figure 2).\r\n\r\nI am trying to do something similar in my Razor Pages (See Figure 3) but this results in an exception being thrown.  _I suspect this would also happen if a new `ViewResult` was assigned to the `Result` property, in the Action Filter, although I haven't test this hypothesis._\r\n\r\n[The documentation](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.filters.pagehandlerexecutingcontext?view=aspnetcore-2.0) explains that 'Setting Result to a non-null value inside a page filter will short-circuit the page and any remaining page filters.'; however, the code in Figure 3 is no different, logically, than the code in Figure 4 (calling `Page()` returns an 'empty' `PageResult`, which gets populated later in the pipeline) and so the execution of the Handler should be by-passed and the rest of the pipeline should use the Page Filter's PageResult object.  _Likewise, when setting a new `ViewResult` to the `Result` property, in the Action Filter_\r\n\r\nFigure 1:\r\n\r\n    [HttpPost]\r\n    public async Task<IActionResult> Create(CreateModel model)\r\n    {\r\n        if (!ModelState.IsValid)\r\n        {\r\n            return BadRequest(ModelState);\r\n        }\r\n    \r\n        ...\r\n    }\r\n\r\nFigure 2:\r\n\r\n    public void OnActionExecuting(ActionExecutingContext context) => context.Result = context.ModelState.IsValid ? null : new BadRequestObjectResult(context.ModelState);\r\n\r\nFigure 3:\r\n\r\n    public void OnPageHandlerExecuting(PageHandlerExecutingContext context) => context.Result = context.ModelState.IsValid ? null : new PageResult();\r\n\r\nFigure 4:\r\n\r\n    public Task<IActionResult> OnPostAsync([FromBody] CreateModel model)\r\n    {\r\n        if (!ModelState.IsValid)\r\n        {\r\n            return Page();\r\n        }\r\n\r\n        ...\r\n    }\r\n\r\n### Minimal repro steps\r\nPlease see the [attached file](https://github.com/aspnet/Mvc/files/1725594/RazorPagesIssue.zip).\r\n\r\n### Expected result\r\nThe page should be displayed.\r\n\r\n### Actual result\r\nAn exception is thrown:\r\n\r\n    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageResultExecutor.ExecuteAsync(PageContext pageContext, PageResult result)\r\n       at Microsoft.AspNetCore.Mvc.RazorPages.PageResult.ExecuteResultAsync(ActionContext context)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeResultAsync>d__19.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResultFilterAsync>d__24.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.<Invoke>d__4.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.<Invoke>d__6.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.<Invoke>d__6.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n\r\n### Further technical details\r\nThe exception is throw because the `Page` property, of the `PageResult`, is null.  It is possible to instantiate a Page but an exception is still thrown, due to the `ViewContext` property being null.  It is not possible to populate the `ViewContext` property, within the Page Filter."},{"Id":"7528768174","Type":"PullRequestEvent","CreatedAt":"2018-04-13T22:15:42","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7639","RelatedDescription":"Merged pull request \"[Fixes #7373] Assigning to the context's Result property, when implem…\" (#7639) at aspnet/Mvc","RelatedBody":"…enting IPageFilter, causes an exception"},{"Id":"7528716923","Type":"PullRequestEvent","CreatedAt":"2018-04-13T21:59:55","Actor":"ajaybhargavb","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7649","RelatedDescription":"Merged pull request \"Remove usages of obsolete APIs\" (#7649) at aspnet/Mvc","RelatedBody":"https://github.com/aspnet/Razor/issues/2082\r\n\r\nFollow up to https://github.com/aspnet/Razor/pull/2273"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7529003088","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:47:06","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1736","RelatedDescription":"Closed issue \"/Identity/Account/ResetPassword page is not reachable when auth required globally\" (#1736) at aspnet/Identity","RelatedBody":"Looks like at least one page was missed when fixing #1617 \r\n## Repro steps\r\n1. `dotnet new mvc --name netcoreIndividualAuth --auth Individual --use-local-db` (doubt `--use-local-db` is mandatory)\r\n2. `cd netcoreIndividualAuth`\r\n3. Open project in Visual Studio\r\n4. Edit `Startup.ConfigureServices(...)` to require an authenticated user globally i.e. change `services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);` to\r\n  ``` c#\r\n  services\r\n      .AddMvc(configuration =>\r\n      {\r\n          var policy = new AuthorizationPolicyBuilder()\r\n              .RequireAuthenticatedUser()\r\n              .Build();\r\n          configuration.Filters.Add(new AuthorizeFilter(policy));\r\n      })\r\n      .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n  ```\r\n\r\n5. Start app in the debugger\r\n6. Ensure debug option \"Enable Just My Code\" is disabled and \"Microsoft Symbol Servers\" are enabled under \"Symbols\"\r\n7. Set C# function breakpoint at `Microsoft.AspNetCore.Identity.UI.Services.EmailSender.SendEmailAsync` \r\n8. In browser, register a new user\r\n9. In debugger, copy the URL in the `htmlMessage` parameter\r\n10. In browser, head to the copied URL but change `&amp;code` to `&code`\r\n11. In browser, log out, click on \"Forgot your password\", then enter the new user's email and click Submit\r\n12. In debugger, copy the URL in the `htmlMessage` parameter\r\n13. In browser, head to the copied URL\r\n\r\n### Expected\r\n- Land on /Identity/Account/ForgotPasswordConfirmation page after step 11\r\n- Land on /Identity/Account/ResetPassword page after step 13\r\n### Actual\r\nRedirected to the login page again in both cases i.e. both page models lack `[AllowAnonymous]` though the lack in /Identity/Account/ResetPassword is more troublesome.\r\n\r\n----\r\nThis is a small part of #1617 which does not work end-to-end. Found while verifying (aspnet/Release#263) with the 2.1.300-preview2-008523 SDK and Microsoft.AspNetCore.Identity.UI 2.1.0-preview2-30552."},{"Id":"7529000560","Type":"PullRequestEvent","CreatedAt":"2018-04-13T23:46:01","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1744","RelatedDescription":"Merged pull request \"Add AllowAnonymous for resetting password navigation flow\" (#1744) at aspnet/Identity","RelatedBody":"Addresses #1736 and aspnet/templating#448"},{"Id":"7528865077","Type":"PullRequestEvent","CreatedAt":"2018-04-13T22:50:11","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1749","RelatedDescription":"Closed pull request \"[Fixes #1742, #1722, #1706, #1725] Fixing multiple issues\" (#1749) at aspnet/Identity","RelatedBody":"* Add a test to validate that the Identity endpoints are not available when the default UI is not plugged in.\r\n* Remove IUserFactory<TUser> and UserFactory<TUser>\r\n* Update the testing infrastructure to newer bits from MVC.\r\n* Parameterize the testing infrastructure to support testing different user types.\r\n* Make EmailSender internal."},{"Id":"7528861679","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:48:50","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1688","RelatedDescription":"Closed issue \"Identity mismatch between Email and Username\" (#1688) at aspnet/Identity","RelatedBody":"When using Identity it generates views and methods that confuse Email and Username.\r\n\r\nThe register view and methods ask for an Email and Password, assigns Username the value of Email.\r\n\r\nThe login view asks for Email and Password, but uses the email as a Username, via call to _signInManager.PasswordSignInAsync(...) which takes a Username and Password.\r\n\r\nThe Account/Manage view allows you to change your Email.  If I change my email I can no longer login.  If I use my previous Email I can, the Account/Manage views shows my correctly changed email and a readonly Username with my original email used at signup.\r\n\r\nThis is with a new unmodified project generated via new project in visual studio selecting individual user accounts."},{"Id":"7528860982","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:48:34","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1725","RelatedDescription":"Closed issue \"Add functional tests for different user types in DefaultUI\" (#1725) at aspnet/Identity","RelatedBody":"Some user types to think of:\r\n- `class IdentityUser`\r\n- `class TestUser : IdentityUser`\r\n- `class TestUser : IdentityUser<Guid>`\r\n- `class TestUser`"},{"Id":"7528858371","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:47:38","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1742","RelatedDescription":"Closed issue \"Logout must redirect instead of just rendering the page so that the identity in the request gets properly updated\" (#1742) at aspnet/Identity","RelatedBody":"Logout.cshtml and Logout.cshtml.cs are used before _and after_ the user is logged out. If user posts to the Logout page without a `returnUrl` value, the page displays a message: `You have successfully logged out of the application.` Unfortunately, the page is unreachable after logging out (i.e. requires authentication) due to the following line in the generated `IdentityDefaultUIConfigureOptions.PostConfigure(...)`: https://github.com/aspnet/Identity/blob/394e4746b89485e6f6d0736b363d947361e7a378/src/UI/IdentityDefaultUIConfigureOptions.cs#L38\r\n\r\nBecause this setting is done in an `IPostConfigureOptions<CookieAuthenticationOptions>` implementation, it is extra hard for users to override.\r\n\r\nSee also aspnet/Scaffolding#734"},{"Id":"7528632845","Type":"IssuesEvent","CreatedAt":"2018-04-13T21:35:41","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1740","RelatedDescription":"Closed issue \"RoleManager.CreateAsync throw an Exception when role with the same name already exists.\" (#1740) at aspnet/Identity","RelatedBody":"When role with the same name already exists _RoleManager.CreateAsync_ throw an Exception \"Object reference not set to an instance of an object.\"."},{"Id":"7528617576","Type":"PullRequestEvent","CreatedAt":"2018-04-13T21:31:37","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1752","RelatedDescription":"Merged pull request \"Fix error message\" (#1752) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1669"},{"Id":"7528617571","Type":"IssuesEvent","CreatedAt":"2018-04-13T21:31:36","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1669","RelatedDescription":"Closed issue \"Misleading exception message in Identity 2.0.1\" (#1669) at aspnet/Identity","RelatedBody":"```\r\nSystem.NotSupportedException : No IUserTokenProvider named 'Default' is registered.\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(TUser user, String tokenProvider, String purpose)\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(TUser user)\r\n```\r\n\r\nThe framework in reality requires an implementation of `IUserTwoFactorTokenProvider<TUser>` "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7529173727","Type":"PullRequestEvent","CreatedAt":"2018-04-14T01:23:15","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2347","RelatedDescription":"Closed pull request \"Less StringValue struct copies + bounds check elimination\" (#2347) at aspnet/KestrelHttpServer","RelatedBody":"Less StringValue struct copies for header existence checks\r\n\r\n* fast in-place bitflag check\r\n* don't let `null` adds set bitflags in headers (as won't be output anyway)\r\n* clear for `null` sets in headers\r\n\r\nLazy calc transfer coding\r\n\r\n* calc once existence is confirmed rather than always (since existence is checked anyway)\r\n\r\nFast-path EnsureHostHeaderExists\r\n\r\n* for OriginForm with single host header\r\n\r\nSkip lots of bounds checks through various methods (by helping the Jit recognize preconditions)\r\n\r\nUpdate to https://github.com/aspnet/KestrelHttpServer/pull/2014"},{"Id":"7529171793","Type":"PullRequestEvent","CreatedAt":"2018-04-14T01:21:51","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2488","RelatedDescription":"Merged pull request \" Less StringValue struct copies for header checks\" (#2488) at aspnet/KestrelHttpServer","RelatedBody":"/cc @halter73 @davidfowl something more like this?"},{"Id":"7529082506","Type":"PullRequestEvent","CreatedAt":"2018-04-14T00:27:15","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2492","RelatedDescription":"Opened pull request \"Make logging on by default\" (#2492) at aspnet/KestrelHttpServer","RelatedBody":"And other minor cleanup\r\n\r\nFollowup for #2479."},{"Id":"7528699801","Type":"IssuesEvent","CreatedAt":"2018-04-13T21:54:47","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2390","RelatedDescription":"Closed issue \"Implement file based logging accross the board\" (#2390) at aspnet/KestrelHttpServer","RelatedBody":"We did this for SignalR -- where we log each test failure in a file. This makes it easier to debug and fix test cases, reducing the time to look into CI logs, etc.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7529333514","Type":"PullRequestEvent","CreatedAt":"2018-04-14T03:23:53","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2279","RelatedDescription":"Opened pull request \"Added nuspec and symbols.nuspec files to Razor.Design\" (#2279) at aspnet/Razor","RelatedBody":"Fixes #2215 \r\n\r\nReact to aspnet/BuildTools#630\r\n\r\nWe want to include the pdbs of the tasks and tools as part of the Razor.Design symbols package."},{"Id":"7528929672","Type":"PullRequestEvent","CreatedAt":"2018-04-13T23:14:39","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2272","RelatedDescription":"Merged pull request \"Continue generating RelatedAssemblyPart on assembly if GenerateAssemblyInfo=false\" (#2272) at aspnet/Razor","RelatedBody":"\r\nFixes #2257"},{"Id":"7528929665","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:14:39","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2257","RelatedDescription":"Closed issue \"Continue generating RelatedAssemblyPart on assembly if GenerateAssemblyInfo=false\" (#2257) at aspnet/Razor","RelatedBody":"@rynowak @pranavkm, Setting\r\n\r\n`<GenerateAssemblyInfo>false</GenerateAssemblyInfo>`\r\n\r\nin the csproj file prevents Razor assembly info generation (affecting app.dll and app.Views.dll) and such MVC apps throw (see below) when deployed to production servers because views are not found.\r\n\r\n```\r\n\r\nNow listening on: http://127.0.0.1:28447\r\nApplication started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 GET http://example.com/  \r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]\r\n      Route matched with {action = \"Index\", controller = \"Home\"}. Executing action SimpleMvcApp.Controllers.HomeController.Index (SimpleMvcApp)\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]\r\n      Executing action method SimpleMvcApp.Controllers.HomeController.Index (SimpleMvcApp) - Validation state: Valid\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action method SimpleMvcApp.Controllers.HomeController.Index (SimpleMvcApp), returned result Microsoft.AspNetCore.Mvc.ViewResult in 0.0237ms.\r\ninfo: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[1]\r\n      Executing ViewResult, running view Index.\r\nfail: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[3]\r\n      The view 'Index' was not found. Searched locations: /Views/Home/Index.cshtml, /Views/Shared/Index.cshtml\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action SimpleMvcApp.Controllers.HomeController.Index (SimpleMvcApp) in 0.4997ms\r\nfail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n      Connection id \"0HLCVQKE7G6Q7\", Request id \"0HLCVQKE7G6Q7:00000002\": An unhandled exception was thrown by the application.\r\nSystem.InvalidOperationException: The view 'Index' was not found. The following locations were searched:\r\n/Views/Home/Index.cshtml\r\n/Views/Shared/Index.cshtml\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(IEnumerable`1 originalLocations)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 5.1816ms 500 \r\n\r\n```\r\n\r\nThis happens because SimpleMvcApp.dll is missing\r\n\r\n```\r\n\r\n[assembly: RelatedAssembly(\"SimpleMvcApp.Views\")]\r\n[assembly: RazorLanguageVersion(\"2.1\")]\r\n[assembly: RazorConfigurationName(\"MVC-2.1\")]\r\n[assembly: RazorExtensionAssemblyName(\"MVC-2.1\", \"Microsoft.AspNetCore.Mvc.Razor.Extensions\")]\r\n\r\n```\r\n(workaround: add above assembly attributes manually)\r\n\r\nand SimpleMvcApp.Views.dll is missing\r\n\r\n\r\n`[assembly: ProvideApplicationPartFactory(\"Microsoft.AspNetCore.Mvc.ApplicationParts.CompiledRazorAssemblyApplicationPartFactory, Microsoft.AspNetCore.Mvc.Razor\")]`\r\n\r\n\r\n(workaround: add `<GenerateRazorTargetAssemblyInfo>true</GenerateRazorTargetAssemblyInfo>` to the csproj file).\r\n\r\n\r\nDev Machine Setup:\r\nVisual Studio 2017 15.7 Preview 3\r\ndotnet-sdk-2.1.300-preview2-008530-win-x64\r\n\r\nHosting Server Setup:\r\nWindows Server 2012 R2\r\ndotnet-hosting-2.1.0-preview2-final-win\r\n\r\nSteps to reproduce:\r\n\r\n1) Create default MVC 2.1 project.\r\n2) Add `<GenerateAssemblyInfo>false</GenerateAssemblyInfo>` to csproj file.\r\n3) Add custom 'assemblyinfo.cs' with some assembly attributes.\r\n4) Publish to server, enable logging, and browse the site.\r\n"},{"Id":"7528900709","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:03:36","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2278","RelatedDescription":"Closed issue \"Razor build fails when ExtensionDependencyChecker fails\" (#2278) at aspnet/Razor","RelatedBody":"More info here https://github.com/aspnet/Razor/issues/2256. This is just to track part of that issue.\r\n\r\ncc @mkArtakMSFT "},{"Id":"7528899284","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:03:02","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2278","RelatedDescription":"Opened issue \"Razor build fails when ExtensionDependencyChecker fails\" (#2278) at aspnet/Razor","RelatedBody":"More info here https://github.com/aspnet/Razor/issues/2256. This is just to track part of that issue.\r\n\r\ncc @mkArtakMSFT "},{"Id":"7528882477","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:56:38","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2256","RelatedDescription":"Reopened issue \"Razor Build tasks fail when using different version of assemblies\" (#2256) at aspnet/Razor","RelatedBody":"We see errors like the following in the Razor build server when upgrading packages\r\n```\r\nExtension assembly 'Microsoft.AspNetCore.Blazor.Razor.Extensions' at 'C:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.0-preview1-10195\\tools\\Microsoft.AspNetCore.Blazor.Razor.Extensions.dll' has a different ModuleVersionId than loaded assembly 'Microsoft.AspNetCore.Blazor.Razor.Extensions, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null'\r\n  Extensions could not be loaded. See output for details.\r\nC:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.0-preview1-10195\\targets\\RazorCompilation.targets(179,5): error : rzc generate exited with code 1 \r\n```\r\n\r\nThere are a few issues with this.\r\n\r\nIt would firstly be great to know which other assembly is loaded and where it was loaded from - my guess is that this happened when updating the packages used by our templates, or by mixing our templates with a repo-local build.\r\n\r\nSecondly, I think this is just a bug. The assembly loading logic we use for Razor is supposed to be based on paths for 'top level' extensions, meaning that we should be able to load two copies of `Microsoft.AspNetCore.Blazor.Razor.Extensions`. We should investigate this and see if it's possible.\r\n\r\nLastly, this **must not** fail the build. We expect users to mix and match dependencies and this is intended to 'just work'. "},{"Id":"7528881525","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:56:18","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2256","RelatedDescription":"Closed issue \"Razor Build tasks fail when using different version of assemblies\" (#2256) at aspnet/Razor","RelatedBody":"We see errors like the following in the Razor build server when upgrading packages\r\n```\r\nExtension assembly 'Microsoft.AspNetCore.Blazor.Razor.Extensions' at 'C:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.0-preview1-10195\\tools\\Microsoft.AspNetCore.Blazor.Razor.Extensions.dll' has a different ModuleVersionId than loaded assembly 'Microsoft.AspNetCore.Blazor.Razor.Extensions, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null'\r\n  Extensions could not be loaded. See output for details.\r\nC:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.0-preview1-10195\\targets\\RazorCompilation.targets(179,5): error : rzc generate exited with code 1 \r\n```\r\n\r\nThere are a few issues with this.\r\n\r\nIt would firstly be great to know which other assembly is loaded and where it was loaded from - my guess is that this happened when updating the packages used by our templates, or by mixing our templates with a repo-local build.\r\n\r\nSecondly, I think this is just a bug. The assembly loading logic we use for Razor is supposed to be based on paths for 'top level' extensions, meaning that we should be able to load two copies of `Microsoft.AspNetCore.Blazor.Razor.Extensions`. We should investigate this and see if it's possible.\r\n\r\nLastly, this **must not** fail the build. We expect users to mix and match dependencies and this is intended to 'just work'. "},{"Id":"7528881522","Type":"PullRequestEvent","CreatedAt":"2018-04-13T22:56:18","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2277","RelatedDescription":"Merged pull request \"Don't fail the build when ExtensionDependencyChecker fails\" (#2277) at aspnet/Razor","RelatedBody":"Fixes #2256 \r\n\r\nWe want to make sure to not fail the build and fallback to cli execution when the ExtensionDependencyChecker fails to load an extension."},{"Id":"7528739912","Type":"PullRequestEvent","CreatedAt":"2018-04-13T22:06:41","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2277","RelatedDescription":"Opened pull request \"Don't fail the build when ExtensionDependencyChecker fails\" (#2277) at aspnet/Razor","RelatedBody":"Fixes #2256 \r\n\r\nWe want to make sure to not fail the build and fallback to cli execution when the ExtensionDependencyChecker fails to load an extension."},{"Id":"7528630477","Type":"PullRequestEvent","CreatedAt":"2018-04-13T21:35:06","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2276","RelatedDescription":"Merged pull request \"Make sure RazorSdk works when BuildingInVisualStudio \\ BuildProjectReferences is disabled\" (#2276) at aspnet/Razor","RelatedBody":"Fixes #2247"},{"Id":"7528630470","Type":"IssuesEvent","CreatedAt":"2018-04-13T21:35:06","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2247","RelatedDescription":"Closed issue \"View Compilation build error in VS15.7 due to missing references\" (#2247) at aspnet/Razor","RelatedBody":"I have a solution with a large number of projects that I am porting to MvcCore. In this solution I have a number of class libraries that contains views. I was using RazorGenerator.MsBuild in the MVC5 days and some view engine hackery to get the main web project to do what you are enabling in 2.1.\r\n\r\nI've been trying out the view precompilation using the 2.1.0-preview1, and I'm using VS 15.7 preview 2.\r\n\r\nI got the code to the point where it compiles. From the command line invoking dotnet build and dotnet run I haven't had any issues, it is working well.\r\n\r\nThe issue I am having is building within Visual Studio I am getting build failures on incremental builds due to missing project references being added to the csc command line. This may not strictly be a View Compilation bug, but I am not sure what else to check.\r\n\r\nI've installed the Project System extension and looked at the build log. It appears that the ResolveProjectReferences isn't being called to populate these dll's and then has the build failure.\r\n\r\nThis only seems to be affecting projects containing views where I have enabled the RazorSdk and and RazorCompileOnBuild=true settings. The csc command does appear to be including PackageReferences.\r\n\r\nStrangely according to the Build Logging it is when building the main project that has references to the class libraries, that it is failing.\r\n\r\nI've managed to reproduce this in a clean class library project. What I did was create a new project on the 2.0 templates, upgraded to 2.1 and created a class library for the views. I've created a common class library and moved the Web models to the Common library. Then I've moved the Account views into the View library. This is referenced from the web project. It seemed to work OK for a single project, however when duplicating the class library I get the same build error in my full solution.\r\n\r\nSometimes it is a bit hard to trigger the bug. The build output looks like this\r\n```\r\nError occurred while restoring NuGet packages: Object reference not set to an instance of an object.\r\n1>------ Build started: Project: ViewClass, Configuration: Debug Any CPU ------\r\n1>ViewClass -> C:\\dev\\BugReport\\ViewClass\\bin\\Debug\\netstandard2.0\\ViewClass.dll\r\n1>ViewClass -> C:\\dev\\BugReport\\ViewClass\\bin\\Debug\\netstandard2.0\\ViewClass.PrecompiledViews.dll\r\n2>------ Build started: Project: BugReport, Configuration: Debug Any CPU ------\r\n2>Class1.cs(1,7,1,17): error CS0246: The type or namespace name 'CommonCode' could not be found (are you missing a using directive or an assembly reference?)\r\n2>Class1.cs(12,30,12,39): error CS0246: The type or namespace name 'SomeClass' could not be found (are you missing a using directive or an assembly reference?)\r\n2>Class1.cs(14,30,14,34): error CS0115: 'SomeOther.Test()': no suitable method found to override\r\n2>Done building project \"ViewClassSecond.csproj\" -- FAILED.\r\n2>Class1.cs(1,7,1,17): error CS0246: The type or namespace name 'CommonCode' could not be found (are you missing a using directive or an assembly reference?)\r\n2>Class1.cs(12,30,12,39): error CS0246: The type or namespace name 'SomeClass' could not be found (are you missing a using directive or an assembly reference?)\r\n2>Class1.cs(14,30,14,34): error CS0115: 'SomeOther.Test()': no suitable method found to override\r\n2>Done building project \"ViewClassThird.csproj\" -- FAILED.\r\n========== Build: 1 succeeded, 1 failed, 3 up-to-date, 0 skipped ==========\r\n```\r\nI've attached the binlog and this is the screenshot. It appears that the project is pulling in the dependency, trying to build the class libraries and this is the scenario it is failing.\r\n\r\n![image](https://user-images.githubusercontent.com/2775804/38476352-a39f899a-3bf0-11e8-91d0-ae16331504d4.png)\r\n\r\n[BugReport_Debug_AnyCPU_Build_2018-04-09T12_20_01.9597168+10_00.binlog.zip](https://github.com/aspnet/Razor/files/1888268/BugReport_Debug_AnyCPU_Build_2018-04-09T12_20_01.9597168.10_00.binlog.zip)\r\n\r\nI'll upload the solution that I managed to reproduce to a new git repo."},{"Id":"7528301450","Type":"PullRequestEvent","CreatedAt":"2018-04-13T20:14:33","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2276","RelatedDescription":"Opened pull request \"Make sure RazorSdk works when BuildingInVisualStudio \\ BuildProjectReferences is disabled\" (#2276) at aspnet/Razor","RelatedBody":"Fixes #2247"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."},{"Id":"7390872316","Type":"IssuesEvent","CreatedAt":"2018-03-16T13:54:05","Actor":"mnmr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Opened issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":56,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":159,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"973691520728510464","CreatedAt":"2018-03-13T22:45:23+00:00","UserScreenname":"aspnet","Text":"Starting now... join us for the weekly #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-04-14T05:30:09.2776142Z","RunDurationInMilliseconds":8039}