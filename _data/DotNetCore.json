{"Data":{"Blog":{"FeedItems":[{"Title":".NET for Apache® Spark™ In-Memory DataFrame Support","PublishedOn":"2020-03-30T16:33:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET for Apache Spark is aimed at making Apache® Spark™, and thus the exciting world of big data analytics, accessible to .NET developers. .NET for Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/net-for-apache-spark-in-memory-dataframe-support/","RawContent":null},{"Title":"Helping Customers Effectively","PublishedOn":"2020-03-30T08:05:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I have to put a disclaimer here since this is not the usual type of blog posts I write. I’m by no means a master at communication. This is just what I thought that seemed to work well. YMMV of...","Href":"https://devblogs.microsoft.com/dotnet/helping-customers-effectively/","RawContent":null},{"Title":"Balancing work on GC threads","PublishedOn":"2020-03-28T20:52:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In Server GC, each GC thread will work on its heap in parallel (that&#8217;s a simplistic view and is not necessarily true for all phases but on the high level it&#8217;s exact the idea of a parallel...","Href":"https://devblogs.microsoft.com/dotnet/balancing-work-on-gc-threads/","RawContent":null},{"Title":".NET Core March 2020 Updates – 2.1.17 and 3.1.3","PublishedOn":"2020-03-24T21:21:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core March 2020 Update. These updates only contain non-security fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-march-2020/","RawContent":null},{"Title":"Catch up on the latest .NET Productivity features","PublishedOn":"2020-03-24T17:25:31+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The Roslyn team continuously works to provide tooling that deeply understands the code you are writing in-order to help you be more productive. In this post, I&#8217;ll cover some of the latest .NET...","Href":"https://devblogs.microsoft.com/dotnet/catch-up-on-the-latest-net-productivity-features/","RawContent":null},{"Title":"Announcing F# 5 preview 1","PublishedOn":"2020-03-19T01:31:56+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that F# 5 preview 1 is now available! Here&#8217;s how to get it:\nInstall .NET 5 preview SDK\nInstall Jupyter Notebooks for .NET\nIf you&#8217;re using Visual Studio on...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-5-preview-1/","RawContent":null},{"Title":".NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016.","PublishedOn":"2020-03-17T17:11:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing an update for .NET Framework 4.8 on Windows 10 1607 (Anniversary Update) and Windows Server 2016.\nSecurity\nThis update does not contain any new security fixes. See January 2020...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/","RawContent":null},{"Title":"Updates on .NET Core Windows Forms designer","PublishedOn":"2020-03-17T17:10:16+00:00","CommentsCount":43,"FacebookCount":0,"Summary":"We released a preview version of Visual Studio 16.6 &#8211; Visual Studio 2019 version 16.6 Preview 1 and with it a new version of .NET Core Windows Forms designer.\nThis release contains\nSupport for...","Href":"https://devblogs.microsoft.com/dotnet/updates-on-net-core-windows-forms-designer/","RawContent":null},{"Title":"Async ValueTask Pooling in .NET 5","PublishedOn":"2020-03-16T22:08:07+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"The async/await feature in C# has revolutionized how developers targeting .NET write asynchronous code. Sprinkle some async and await around, change some return types to be tasks, and badda bing badda...","Href":"https://devblogs.microsoft.com/dotnet/async-valuetask-pooling-in-net-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 5.0 Preview 1","PublishedOn":"2020-03-16T20:26:10+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Today we are excited to announce the first preview release of EF Core 5.0.\nPrerequisites\nThe previews of EF Core 5.0 require .NET Standard 2.1. This means:\nEF Core 5.0 runs on .NET Core 3.1; it does...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"11931015197","Type":"PullRequestEvent","CreatedAt":"2020-04-01T20:28:35","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/179","RelatedDescription":"Merged pull request \"Add FlubuCore\" (#179) at dotnet/foundation","RelatedBody":""},{"Id":"11927520661","Type":"PullRequestEvent","CreatedAt":"2020-04-01T14:37:47","Actor":"ChrisSfanos","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/171","RelatedDescription":"Closed pull request \"Create new-projects-v2.md\" (#171) at dotnet/foundation","RelatedBody":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc"},{"Id":"11921445336","Type":"PullRequestEvent","CreatedAt":"2020-04-01T02:17:00","Actor":"mzorec","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/179","RelatedDescription":"Opened pull request \"Add FlubuCore\" (#179) at dotnet/foundation","RelatedBody":""},{"Id":"11920693435","Type":"PullRequestEvent","CreatedAt":"2020-03-31T23:59:06","Actor":"dnfadmin","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/178","RelatedDescription":"Merged pull request \"Add Avalonia\" (#178) at dotnet/foundation","RelatedBody":"Added the Avalonia project."},{"Id":"11919871243","Type":"PullRequestEvent","CreatedAt":"2020-03-31T22:30:44","Actor":"grokys","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/178","RelatedDescription":"Opened pull request \"Add Avalonia\" (#178) at dotnet/foundation","RelatedBody":"Added the Avalonia project."},{"Id":"11917020573","Type":"PullRequestEvent","CreatedAt":"2020-03-31T17:18:16","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/177","RelatedDescription":"Merged pull request \"Add Oqtane to .NET Foundation\" (#177) at dotnet/foundation","RelatedBody":""},{"Id":"11916886430","Type":"PullRequestEvent","CreatedAt":"2020-03-31T17:04:54","Actor":"sbwalker","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/177","RelatedDescription":"Opened pull request \"Add Oqtane to .NET Foundation\" (#177) at dotnet/foundation","RelatedBody":""},{"Id":"11914292627","Type":"PullRequestEvent","CreatedAt":"2020-03-31T13:23:48","Actor":"MikeWilliams-UK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/176","RelatedDescription":"Opened pull request \"Update links and name\" (#176) at dotnet/foundation","RelatedBody":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo"},{"Id":"11913896017","Type":"PullRequestEvent","CreatedAt":"2020-03-31T12:47:05","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/175","RelatedDescription":"Merged pull request \"Added Piranha CMS\" (#175) at dotnet/foundation","RelatedBody":""},{"Id":"11908135785","Type":"PullRequestEvent","CreatedAt":"2020-03-31T00:05:12","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/174","RelatedDescription":"Merged pull request \"Add CoreWF to projects list\" (#174) at dotnet/foundation","RelatedBody":"Fixes https://github.com/UiPath-Open/corewf/issues/95"},{"Id":"11907653564","Type":"PullRequestEvent","CreatedAt":"2020-03-30T22:48:37","Actor":"tidyui","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/175","RelatedDescription":"Opened pull request \"Added Piranha CMS\" (#175) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11789505984","Type":"IssuesEvent","CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Opened issue \"March 2020 .NET Updates\" (#152) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11491466131","Type":"IssuesEvent","CreatedAt":"2020-02-11T19:02:45","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Opened issue \"February 2020 .NET Updates\" (#151) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11919267790","Type":"PullRequestEvent","CreatedAt":"2020-03-31T21:15:36","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Closed pull request \"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28022) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"11918928835","Type":"PullRequestEvent","CreatedAt":"2020-03-31T20:38:07","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27950","RelatedDescription":"Closed pull request \"Update BuildTools to preview1-04626-03 (release/2.2)\" (#27950) at dotnet/coreclr","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"11877680831","Type":"PullRequestEvent","CreatedAt":"2020-03-27T03:30:10","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":"Merged pull request \"Port to 3.1 - Fix handling thread abort in HelperMethodFrame\" (#28029) at dotnet/coreclr","RelatedBody":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)"},{"Id":"11876174438","Type":"PullRequestEvent","CreatedAt":"2020-03-26T22:31:03","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":null,"RelatedBody":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)"},{"Id":"11876174216","Type":"PullRequestEvent","CreatedAt":"2020-03-26T22:31:01","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":"Closed pull request \"Port to 3.1 - Fix handling thread abort in HelperMethodFrame\" (#28029) at dotnet/coreclr","RelatedBody":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)"},{"Id":"11874220305","Type":"PullRequestEvent","CreatedAt":"2020-03-26T18:36:56","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28033","RelatedDescription":"Opened pull request \"For 3.1 Backport #25958 Modify amd64walker to use table based decode\" (#28033) at dotnet/coreclr","RelatedBody":"Fixes dotnet/runtime#34109\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/coreclr/pull/25958). This PR ports that fix to _release/3.1_.\r\n\r\n## Customer Impact\r\n\r\nSetting a debugger breakpoint on Amd64 (x64) can result in incorrect calculation of floating point values. \r\n\r\n## Regression?\r\n\r\nThis was a known and difficult to fix issue. The hand written Amd64 instruction parser was flaky and nearly impossible to maintain.\r\n\r\nThe problem arose because the debugger must determine the length and form of the instruction where the breakpoint is inserted. The original code was a minimal implementation which only covered the instruction form historically used by the JIT.  As new forms and especially intrinsics were added, the code was not updated because the complexity was far too high. \r\n\r\nThe fix required was this substantial change. At the time we missed the 3.0 branch and we did not have sufficient feedback to consider backport to 3.x.\r\n\r\n## Testing\r\n\r\n+ This code was manually tested to fix the originally reported issue.\r\n+ The code has been in the 5.0 branch for more than 6 months with no new regressions\r\n+ The 5.0 code has been tested against recently reported similar issues\r\n+ The internal diagnostic test suite was amended to test for this issue and prevent further identical regressions.\r\n\r\n## Risk\r\nLow. \r\n+ Only affects debugger operation.\r\n+ Removes a flaky instruction parser and replaces it with a machine generated one.  \r\n+ Adds tools to regenerate the parser tables\r\n+ Adds documentation\r\n \r\n## Code Reviewer\r\n@hoyosjs @tannergooding"},{"Id":"11873333779","Type":"PullRequestEvent","CreatedAt":"2020-03-26T17:08:28","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28032","RelatedDescription":"Merged pull request \"[release/3.1] Fix Runtime_1241 test build\" (#28032) at dotnet/coreclr","RelatedBody":"Runtime_1241 test doesn't build without this change.\r\n\r\ncc @alpencolt "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"11933567041","Type":"PullRequestEvent","CreatedAt":"2020-04-02T03:44:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13329","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13329) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200401.6\r\n- **Date Produced**: 4/1/2020 5:23 PM\r\n- **Commit**: 06bdc9ce0f3f21c365b998a34165c9c6a8019589\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20201.6\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11933420331","Type":"PullRequestEvent","CreatedAt":"2020-04-02T03:14:18","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13315","RelatedDescription":"Merged pull request \"Add retry on docker build\" (#13315) at dotnet/cli","RelatedBody":""},{"Id":"11933419751","Type":"PullRequestEvent","CreatedAt":"2020-04-02T03:14:11","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13316","RelatedDescription":"Merged pull request \"Add retry on docker build\" (#13316) at dotnet/cli","RelatedBody":""},{"Id":"11933418263","Type":"PullRequestEvent","CreatedAt":"2020-04-02T03:13:53","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13317","RelatedDescription":"Merged pull request \"Add retry on docker build\" (#13317) at dotnet/cli","RelatedBody":""},{"Id":"11929528928","Type":"PullRequestEvent","CreatedAt":"2020-04-01T17:44:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13329","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13329) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200401.6\r\n- **Date Produced**: 4/1/2020 5:23 PM\r\n- **Commit**: 06bdc9ce0f3f21c365b998a34165c9c6a8019589\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20201.6\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11928521864","Type":"PullRequestEvent","CreatedAt":"2020-04-01T16:03:26","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13324","RelatedDescription":"Merged pull request \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13324) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6532\r\n- **Date Produced**: 3/25/2020 11:01 PM\r\n- **Commit**: 1c2681b16a0bb9be9271abe043a1cbf892761ef8\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.6.0-preview.2.6532\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n"},{"Id":"11928483307","Type":"PullRequestEvent","CreatedAt":"2020-04-01T16:00:04","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13327","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13327) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n"},{"Id":"11928482018","Type":"PullRequestEvent","CreatedAt":"2020-04-01T15:59:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13328","RelatedDescription":"Merged pull request \"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore\" (#13328) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9a2d95d4-e7b6-4af1-24a3-08d7c517f22b\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n\r\n"},{"Id":"11928441654","Type":"PullRequestEvent","CreatedAt":"2020-04-01T15:56:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13325","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#13325) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: cadcf242-0374-4d70-4f28-08d7c5f06407\r\n- **Build**: 20200331.2\r\n- **Date Produced**: 4/1/2020 2:44 AM\r\n- **Commit**: 57d5bbb58f17a8cb3a82c81839c9379b4fcfe0d8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.4-servicing.20181.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.4\r\n\r\n[marker]: <> (End:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"11922968046","Type":"PullRequestEvent","CreatedAt":"2020-04-01T06:51:04","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13326","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13326) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"11915564019","Type":"PullRequestEvent","CreatedAt":"2020-03-31T15:08:40","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Merged pull request \"Feed cleanup\" (#1749) at dotnet/standard","RelatedBody":"Switch away from blob feeds"},{"Id":"11913682185","Type":"PullRequestEvent","CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1751) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11913440133","Type":"PullRequestEvent","CreatedAt":"2020-03-31T12:00:36","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1751) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11909071906","Type":"IssuesEvent","CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Opened issue \"System.Data.Linq.Mapping namespace missing\" (#1750) at dotnet/standard","RelatedBody":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"11919862473","Type":"PullRequestEvent","CreatedAt":"2020-03-31T22:29:34","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42899","RelatedDescription":"Merged pull request \"Stablise the 3.1 branch\" (#42899) at dotnet/corefx","RelatedBody":""},{"Id":"11918594336","Type":"PullRequestEvent","CreatedAt":"2020-03-31T20:01:26","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42899","RelatedDescription":"Opened pull request \"Stablise the 3.1 branch\" (#42899) at dotnet/corefx","RelatedBody":""},{"Id":"11902912237","Type":"PullRequestEvent","CreatedAt":"2020-03-30T14:37:08","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42898","RelatedDescription":"Closed pull request \"Update README.md\" (#42898) at dotnet/corefx","RelatedBody":""},{"Id":"11902838813","Type":"PullRequestEvent","CreatedAt":"2020-03-30T14:31:10","Actor":"s-tarasov","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42898","RelatedDescription":"Opened pull request \"Update README.md\" (#42898) at dotnet/corefx","RelatedBody":""},{"Id":"11883024331","Type":"PullRequestEvent","CreatedAt":"2020-03-27T15:18:17","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42894","RelatedDescription":"Merged pull request \"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better\" (#42894) at dotnet/corefx","RelatedBody":"This is porting the last 3 commits that went into https://github.com/dotnet/runtime/pull/33459.\r\n\r\ncc: @Jozkee @ericstj "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"11933539676","Type":"PullRequestEvent","CreatedAt":"2020-04-02T03:38:22","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/42990","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#42990) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11933499517","Type":"IssuesEvent","CreatedAt":"2020-04-02T03:30:06","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/43011","RelatedDescription":"Opened issue \"Add analyzer that catches properties that can be made readonly\" (#43011) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\nIt would be nice to have an analyzer that catches that this can be made readonly. Hit this on a [PR](https://devdiv.visualstudio.com/DevDiv/_git/CPS/pullrequest/239223?path=%2Fsrc%2FMicrosoft.VisualStudio.ProjectSystem.Implementation%2FBuild%2FCommonBuildPropertiesProvider.cs&_a=overview) just recently.\r\n\r\n``` C#\r\n\r\n    public class Foo\r\n    {\r\n        public Foo(string property)\r\n        {\r\n            Property = property;\r\n        }\r\n        \r\n        private string Property\r\n        {\r\n            get;\r\n            set;  // <!-- Can remove\r\n        }\r\n\r\n        public void Method()\r\n        {\r\n            Console.WriteLine(Property);\r\n        }\r\n    }\r\n```"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"11921501547","Type":"PullRequestEvent","CreatedAt":"2020-04-01T02:27:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8059","RelatedDescription":"Merged pull request \"Update GC from dotnet/runtime\" (#8059) at dotnet/corert","RelatedBody":"Skipping commits:\r\n\r\ndotnet/runtime@631cb1b3dbe80c374dad691bfdd6989d8efb68d3 - I think we need to pull the Perl script to generate ETW boilerplate into the open.\r\ndotnet/runtime@fcd862e06413a000f9cafa9d2f359226c60b9b42 - not going to mess with that right now\r\ndotnet/runtime@6c1f8adf26cacb963e96d8f046411912aa6ebafe - I think this is for another commit that we skipped\r\ndotnet/runtime@f99b4fe46497185db3b2049913f2af0c839fda00 - more ETW\r\n"},{"Id":"11913956265","Type":"PullRequestEvent","CreatedAt":"2020-03-31T12:52:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/8059","RelatedDescription":null,"RelatedBody":"Skipping commits:\r\n\r\ndotnet/runtime@631cb1b3dbe80c374dad691bfdd6989d8efb68d3 - I think we need to pull the Perl script to generate ETW boilerplate into the open.\r\ndotnet/runtime@fcd862e06413a000f9cafa9d2f359226c60b9b42 - not going to mess with that right now\r\ndotnet/runtime@6c1f8adf26cacb963e96d8f046411912aa6ebafe - I think this is for another commit that we skipped\r\ndotnet/runtime@f99b4fe46497185db3b2049913f2af0c839fda00 - more ETW\r\n"},{"Id":"11913955616","Type":"PullRequestEvent","CreatedAt":"2020-03-31T12:52:51","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/8059","RelatedDescription":"Closed pull request \"Update GC from dotnet/runtime\" (#8059) at dotnet/corert","RelatedBody":"Skipping commits:\r\n\r\ndotnet/runtime@631cb1b3dbe80c374dad691bfdd6989d8efb68d3 - I think we need to pull the Perl script to generate ETW boilerplate into the open.\r\ndotnet/runtime@fcd862e06413a000f9cafa9d2f359226c60b9b42 - not going to mess with that right now\r\ndotnet/runtime@6c1f8adf26cacb963e96d8f046411912aa6ebafe - I think this is for another commit that we skipped\r\ndotnet/runtime@f99b4fe46497185db3b2049913f2af0c839fda00 - more ETW\r\n"},{"Id":"11898962513","Type":"PullRequestEvent","CreatedAt":"2020-03-30T08:11:45","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7998","RelatedDescription":"Merged pull request \"Wasm: Reenable the CI for Wasm\" (#7998) at dotnet/corert","RelatedBody":"Seems like the only way to test this is to create a PR and keep editing it until it works....\r\n\r\nFirst commit just to see if I'm on the right track and can add a Wasm platform to the matrix and see what it runs.   Have commented out other platforms, I will redo the push squashing commits when it works.\r\n\r\nWhat's required is to install emscripten 1.39.4 (or later) activate it, set up the env, then run `build wasm {configuration}`   ... I think.\r\n\r\nHave changed the running of test from Firefox to Node (which I use from the Emscripten source) with the hope that will alleviate some of the timeout problems that used to occur in Jenkins.\r\n\r\nNot sure I've got the matrix logic in the right place, but couldn't see somewhere better.\r\n \r\n`build wasm release` is not in as its broken - #8012 \r\n\r\nThere was an issue with the SSL certificate for googleapis.com and downloading from there using python.  Emscripten does this to start its install.  The error was intermittent but if it occurred, retrying did not help.  I understand python (later versions of v2 and v3) on windows use the machine certificate store, so my theory is that depending on the agent the store is different and it either fails or succeeds, just a theory.  I added some powershell to do the same download and that always seems to succeed, and if the python download failed, and the powershell download is performed, then the python download succeeds.  So it could be that the powershell download using `System.Net.Security.SslStream` is changing the machine certs, at least that's my best theory, and that's the approach here which has succeed 6 times consequitively. Upgrading python is not necessary so I've left it out.  The native tools download of python is not used by the emscripten install as it just pulls python from the path, and the native tools download does not change the path. "},{"Id":"11896167595","Type":"IssuesEvent","CreatedAt":"2020-03-29T23:02:22","Actor":"Shadow4walker","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8065","RelatedDescription":"Opened issue \"How to Solve This (Value cannot be null. Parameter name: property)\" (#8065) at dotnet/corert","RelatedBody":"I'm trying To Compile a test App With [https://github.com/quartznet/quartznet](url)\r\nafter Compiling when try to run the Compiled app I got below exception! idk What should i put in the rd.xml to make it run successfully! :/\r\n\r\n> Unhandled Exception: System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\r\n ---> System.ArgumentNullException: Value cannot be null. Parameter name: property\r\n   at System.Linq.Expressions.Expression.Property(Expression, PropertyInfo) + 0x181\r\n   at TestApp!<BaseAddress>+0x12868b5\r\n   at TestApp!<BaseAddress>+0x1286712\r\n   at TestApp!<BaseAddress>+0x15003cd\r\n   at TestApp!<BaseAddress>+0x305d41\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at TestApp!<BaseAddress>+0x88027a\r\n   at TestApp!<BaseAddress>+0x8ff08e\r\n   at System.Linq.Expressions.Interpreter.LightLambda.Run(Object[]) + 0x82\r\n   at TestApp!<BaseAddress>+0xf10363\r\n   at Quartz.Logging.LogProvider.GetLogger(String) + 0x14\r\n   at TestApp!<BaseAddress>+0x7cbe74\r\n   at TestApp!<BaseAddress>+0xd69a93\r\n   --- End of inner exception stack trace ---\r\n   at TestApp!<BaseAddress>+0xd69a8a\r\n   at TestApp!<BaseAddress>+0xd6995d\r\n   at Quartz.Impl.StdSchedulerFactory.get_Log() + 0x9\r\n   at Quartz.Impl.StdSchedulerFactory.Initialize() + 0x2b4\r\n   at Quartz.Impl.StdSchedulerFactory.<GetScheduler>d__69.MoveNext() + 0x5f\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at TestApp!<BaseAddress>+0xd6b0ca\r\n   at TestApp!<BaseAddress>+0xd6b004\r\n   at TestApp.Models.SchedulerManager.<Init>d__4.MoveNext() + 0xd4\r\n\r\nthe rd.Xml for this Lib Defined as Below\r\n\r\n>     <Assembly Name=\"Quartz\" Dynamic=\"Required All\">\r\n    <Type Name=\"Quartz.Impl.StdSchedulerFactory\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Simpl.RAMJobStore\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Simpl.TaskSchedulingThreadPool\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.QuartzScheduler\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.QuartzSchedulerThread\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.ErrorLogger\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.SchedulerSignalerImpl\" Dynamic=\"Required All\"/>\r\n    </Assembly>\r\n\r\n any help to get ride of this please!"},{"Id":"11894925675","Type":"PullRequestEvent","CreatedAt":"2020-03-29T17:40:58","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8064","RelatedDescription":"Merged pull request \"Delete a few more unused methods\" (#8064) at dotnet/corert","RelatedBody":""},{"Id":"11894342782","Type":"PullRequestEvent","CreatedAt":"2020-03-29T15:22:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8064","RelatedDescription":"Opened pull request \"Delete a few more unused methods\" (#8064) at dotnet/corert","RelatedBody":""},{"Id":"11894273698","Type":"PullRequestEvent","CreatedAt":"2020-03-29T15:06:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8063","RelatedDescription":"Merged pull request \"Delete unnecessary native runtime EEType knowledge\" (#8063) at dotnet/corert","RelatedBody":"EEType knowledge is triplicated in the compiler, EEType.cs, and the native runtime. The fewer places know about it, the easier it is to maintain/audit.\r\n\r\nI think it would be ideal if the native runtime only knows about the fields that are common to all EETypes and doesn't know about optional fields/rare flags stuff.\r\n\r\nThere is one last spot accessing the EEType optional fields/RareFlags data structure after this - the Align8 rare flag. I'm wondering whether we should just expose an `RhIsAlign8` method out of the managed runtime for the native runtime to call."},{"Id":"11893161113","Type":"PullRequestEvent","CreatedAt":"2020-03-29T10:09:49","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8063","RelatedDescription":"Opened pull request \"Delete unnecessary native runtime EEType knowledge\" (#8063) at dotnet/corert","RelatedBody":"EEType knowledge is triplicated in the compiler, EEType.cs, and the native runtime. The fewer places know about it, the easier it is to maintain/audit.\r\n\r\nI think it would be ideal if the native runtime only knows about the fields that are common to all EETypes and doesn't know about optional fields/rare flags stuff.\r\n\r\nThere is one last spot accessing the EEType optional fields/RareFlags data structure after this - the Align8 rare flag. I'm wondering whether we should just expose an `RhIsAlign8` method out of the managed runtime for the native runtime to call."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"11933909007","Type":"PullRequestEvent","CreatedAt":"2020-04-02T04:57:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11111","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/templating\" (#11111) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/2/2020 4:44 AM\r\n- **Commit**: 3afa35569f53dceabbff596010f52ea328b0d5f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-preview.3.20201.2\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n"},{"Id":"11933765690","Type":"PullRequestEvent","CreatedAt":"2020-04-02T04:27:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11110","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview3] Update dependencies from aspnet/websdk\" (#11110) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee\r\n- **Build**: 20200401.3\r\n- **Date Produced**: 4/2/2020 4:17 AM\r\n- **Commit**: 02b9b9ce80ef82c1681421b3b493bfeeacb2b916\r\n- **Branch**: refs/heads/release/5.0.1xx-preview3\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web** -> 5.0.100-preview.3.20201.3\r\n\r\n[marker]: <> (End:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n\r\n"},{"Id":"11933489341","Type":"PullRequestEvent","CreatedAt":"2020-04-02T03:28:04","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11109","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore\" (#11109) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: fcb06124-ac40-4456-eda2-08d7d0ee12d3\r\n- **Build**: 20200401.12\r\n- **Date Produced**: 4/2/2020 1:44 AM\r\n- **Commit**: f753368cc6a3f84b7855ec5ed76b99e3ebb7d7c5\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.3.20201.12\r\n\r\n[marker]: <> (End:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n\r\n"},{"Id":"11933317311","Type":"PullRequestEvent","CreatedAt":"2020-04-02T02:54:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11104","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview3] Update dependencies from dotnet/runtime\" (#11104) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4da35469-f761-4937-eda3-08d7d0ee12d3)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 4da35469-f761-4937-eda3-08d7d0ee12d3\r\n- **Build**: 20200401.7\r\n- **Date Produced**: 4/1/2020 8:30 PM\r\n- **Commit**: 73da9bb62ee77cd0984d521572f64c60bf098762\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **System.CodeDom** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-preview.3-runtime.20201.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-preview.3.20201.7\r\n  - **System.Security.Cryptography.ProtectedData** -> 5.0.0-preview.3.20201.7\r\n  - **System.Text.Encoding.CodePages** -> 5.0.0-preview.3.20201.7\r\n  - **System.Resources.Extensions** -> 5.0.0-preview.3.20201.7\r\n\r\n[marker]: <> (End:4da35469-f761-4937-eda3-08d7d0ee12d3)\r\n\r\n"},{"Id":"11933211764","Type":"IssuesEvent","CreatedAt":"2020-04-02T02:33:19","Actor":"jeromelaban","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/11108","RelatedDescription":"Opened issue \"[MSBuildExtras] Using msbuild extras under linux fails with missing Microsoft.WinFX.props\" (#11108) at dotnet/sdk","RelatedBody":"[MSBuild extras](https://github.com/novotnyllc/MSBuildSdkExtras) validates that projects can successfully build under a variety of .NET Runtimes and OSes, and a recent addition of validation of .NET Core 3.1 fails the build under Linux with the following error:\r\n\r\n```\r\n/__t/dotnet/sdk/3.1.201/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.NET.Sdk.WindowsDesktop.props(208,3): \r\nerror MSB4019: The imported project \"/__t/dotnet/sdk/3.1.201/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFX.props\" was not found. \r\nConfirm that the expression in the Import declaration \"Microsoft.WinFX.props\" is correct, and that the file exists on disk.\r\n```\r\n\r\nThis error does not happen with .NET Core 3.0 and 2.2.\r\n\r\nThe error happens when building [this project](https://github.com/novotnyllc/MSBuildSdkExtras/blob/39737a3ed9b3e29ad4f3a4d1e07d00fa679e2965/TestProjects/Linux-C%23/cross-ios-netstd2/cross-ios-netstd2.csproj), with [this script](https://github.com/novotnyllc/MSBuildSdkExtras/blob/904123f47decab3f88204f4002d3fe4740a25529/azure-pipelines.yml#L158)."},{"Id":"11932793871","Type":"IssuesEvent","CreatedAt":"2020-04-02T01:08:44","Actor":"BruceForstall","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/11107","RelatedDescription":"Opened issue \"`dotnet build --help` should be more helpful\" (#11107) at dotnet/sdk","RelatedBody":"When I run `dotnet build --help`, I see:\r\n\r\n```\r\nUsage: dotnet build [options] <PROJECT | SOLUTION>\r\n\r\nArguments:\r\n  <PROJECT | SOLUTION>   The project or solution file to operate on. If a file is not specified, the command will search the current directory for one.\r\n\r\nOptions:\r\n  -h, --help                            Show command line help.\r\n  -o, --output <OUTPUT_DIR>             The output directory to place built artifacts in.\r\n  -f, --framework <FRAMEWORK>           The target framework to build for. The target framework must also be specified in the project file.\r\n  -c, --configuration <CONFIGURATION>   The configuration to use for building the project. The default for most projects is 'Debug'.\r\n  -r, --runtime <RUNTIME_IDENTIFIER>    The target runtime to build for.\r\n  --version-suffix <VERSION_SUFFIX>     Set the value of the $(VersionSuffix) property to use when building the project.\r\n  --no-incremental                      Do not use incremental building.\r\n  --no-dependencies                     Do not build project-to-project references and only build the specified project.\r\n  /nologo, --nologo                     Do not display the startup banner or the copyright message.\r\n  --no-restore                          Do not restore the project before building.\r\n  --interactive                         Allows the command to stop and wait for user input or action (for example to complete authentication).\r\n  -v, --verbosity <LEVEL>               Set the MSBuild verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\r\n  --force                               Force all dependencies to be resolved even if the last restore was successful.\r\n                                        This is equivalent to deleting project.assets.json.\r\n```\r\n\r\nIt could be more helpful in several ways:\r\n1. `--framework`: what can I use for `<FRAMEWORK>`? Give me the list. Give me an example. It says, \"The target framework must also be specified in the project file.\" Tell me which project file you're looking at, and which frameworks are in there right now. Tell me the default.\r\n2. `--runtime`. What can I use for `<RUNTIME_IDENTIFIER>`? Give me some examples. Tell me where to find the entire list. Tell me what the default is. Link to the RID catalog documentation https://docs.microsoft.com/en-us/dotnet/core/rid-catalog?\r\n3. Include an URL to the documentation, either https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build or more generally https://docs.microsoft.com/en-us/dotnet/core/tools/.\r\n\r\nNit: shouldn't the syntax on the first line be:\r\n```\r\nUsage: dotnet build [options] [<PROJECT | SOLUTION>]\r\n```\r\nwith `[` `]` around PROJECT/SOLUTION to indicate it is optional to specify that?"},{"Id":"11932780375","Type":"IssuesEvent","CreatedAt":"2020-04-02T01:05:56","Actor":"swaroop-sridhar","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/10610","RelatedDescription":"Closed issue \"Publish test PublishItemsOutputGroupTests.GroupPopulatedCorrectlyWithSingleFile was disabled for Ubuntu due to unresolved test issue\" (#10610) at dotnet/sdk","RelatedBody":"When creating this test it would consistently fail the Ubuntu check in gates due to an unresolved test issue, so we marked it CoreMSBuildAndWindowsOnly.  We don't loose meaningful test coverage here because the tested scenario is only valid on Windows platforms anyway, but I'm still tracking the test issue in case it affects other tests as well.  Here's the details:\r\n\r\n\r\nIn order to verify the contents of an output group I add a custom build target to the test project that copies all items in the output group to a folder under the test directory (Example: \\TestPublishOutputGroup\\TestOutput). You can see how this is done here: \r\n\r\nhttps://github.com/dotnet/sdk/blob/9e18c1c22e2cd5c2d0a1cc3a5dc3459e6f2390a6/src/Tests/Microsoft.NET.TestFramework/ProjectConstruction/TestProject.cs#L306 \r\n\r\nNormally this works fine when running in the Ubuntu flavor, the two other tests do the same thing and pass. But for some reason in this one test when we go to verify the contents of this folder (using DirectoryInfo.Should().HaveFile()) we get an exception:\r\n\r\n_Expected File \"TestPublishOutputGroup\" cannot be found in directory \"/datadisks/disk1/workspace/work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/TestOutput\"._\r\n\r\nHowever, all other logging I've added to the test shows that this folder does indeed exist. I tried simply creating the directory before the build starts and verifying it exists using Directory.Exists, which reported true even though the exception still happens later on. I've also had the test output a diagnostic MSBuild log and confirmed it's creating the directory and placing items in it. From a sample log (where the directory was not explicitly created before the build):\r\n\r\n_Task \"Copy\" (TaskId:101)\r\nTask Parameter:\r\nSourceFiles=\r\n/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/obj/Debug/netcoreapp3.0/win-x86/TestPublishOutputGroup.pdb\r\nCopyToPublishDirectory=PreserveNewest\r\nExcludeFromSingleFile=true\r\nIsKeyOutput=\r\nOutputGroup=PublishItemsOutputGroup\r\nRelativePath=TestPublishOutputGroup.pdb\r\nTargetPath=TestPublishOutputGroup.pdb\r\n/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/bin/Debug/netcoreapp3.0/win-x86/publish/TestPublishOutputGroup.exe\r\nIsKeyOutput=true\r\nOutputGroup=PublishItemsOutputGroup\r\nRelativePath=TestPublishOutputGroup.exe\r\nTargetPath=TestPublishOutputGroup.exe (TaskId:101)\r\nTask Parameter:DestinationFolder=/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/TestOutput (TaskId:101)\r\nCopying file from \"/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/obj/Debug/netcoreapp3.0/win-x86/TestPublishOutputGroup.pdb\" to \"/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/TestOutput/TestPublishOutputGroup.pdb\". (TaskId:101)\r\nCopying file from \"/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/bin/Debug/netcoreapp3.0/win-x86/publish/TestPublishOutputGroup.exe\" to \"/datadisks/disk1/workspace/work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/TestOutput/TestPublishOutputGroup.exe\". (TaskId:101)\r\nDone executing task \"Copy\". (TaskId:101)_\r\n\r\nAs you can see, MSBuild explicitly mentions copying files to this directory, and the copy task passes. So it's not clear to me why this exception is happening. This is why I've marked this test CoreMSBuildAndWindowsOnlyFact. It should also be noted that the PublishItemsOutputGroup was created for use by the Visual Studio Installer Projects extension, which only runs on Windows platforms anyway."},{"Id":"11932774454","Type":"PullRequestEvent","CreatedAt":"2020-04-02T01:04:45","Actor":"swaroop-sridhar","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11060","RelatedDescription":"Merged pull request \"Updating FilesCopiedToPublishDir output group to remove deps.json file, plus some test changes\" (#11060) at dotnet/sdk","RelatedBody":"Starting in .NET 5.0 the ResolvedFileToPublish item group now contains the deps.json file.  This is a problem for wapproj scenarios, where a custom deps.json file is generally used.  So I'm explicitly removing the deps.json file when constructing the FilesCopiedToPublishDir item group if it exists.\r\n\r\nSince PublishItemsOutputGroup still needs the deps.json file I'm making it no longer use FilesCopiedToPublishDir and instead use ResolvedFileToPublish directly.\r\n\r\nAlso making a few test changes:\r\n - Refactoring PublishItemsOutputGroupTests to use GetValuesCommand instead of a test target to copy files\r\n - Adding new set of tests for FilesCopiedToPublishDir\r\n\r\nThis will also resolve test issue https://github.com/dotnet/sdk/issues/10610, since we'll no longer be using the CopyFiles target that was sometimes failing on Ubuntu."},{"Id":"11932606148","Type":"PullRequestEvent","CreatedAt":"2020-04-02T00:29:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11078","RelatedDescription":"Merged pull request \"[master] Update dependencies from nuget/nuget.client\" (#11078) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be39118f-8347-4151-a885-08d7219800a1)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: be39118f-8347-4151-a885-08d7219800a1\r\n- **Build**: 5.6.0.6532\r\n- **Date Produced**: 3/25/2020 11:01 PM\r\n- **Commit**: 1c2681b16a0bb9be9271abe043a1cbf892761ef8\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.6.0-preview.2.6532\r\n\r\n[marker]: <> (End:be39118f-8347-4151-a885-08d7219800a1)\r\n\r\n\r\n\r\n"},{"Id":"11932597931","Type":"PullRequestEvent","CreatedAt":"2020-04-02T00:27:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11102","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore-tooling\" (#11102) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cb8d14bb-ac49-48d4-0732-08d7d0ed8d73)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: cb8d14bb-ac49-48d4-0732-08d7d0ed8d73\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 6:27 PM\r\n- **Commit**: 606e87fc4430a73ff5a765d1561f86ddd6736835\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor** -> 5.0.0-preview.3.20201.2\r\n\r\n[marker]: <> (End:cb8d14bb-ac49-48d4-0732-08d7d0ed8d73)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-03-31T13:23:48","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"open","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet/foundation/pull/176","RelatedDescription":"Open PR \"Update links and name\" (#176)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"},{"Id":"577522629","IsPullRequest":true,"CreatedAt":"2020-03-08T16:27:23","Actor":"AArnott","Number":"162","RawContent":null,"Title":"Create nerdbank-gitversioning.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/162","RelatedDescription":"Closed or merged PR \"Create nerdbank-gitversioning.md\" (#162)"},{"Id":"552027434","IsPullRequest":false,"CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Number":"159","RawContent":null,"Title":"Add Akka.NET to the DNF project listing","State":"closed","Body":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings.","Url":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159)"},{"Id":"555112784","IsPullRequest":false,"CreatedAt":"2020-01-25T17:36:28","Actor":"oskardudycz","Number":"161","RawContent":null,"Title":"Marten","State":"closed","Body":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation.","Url":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161)"},{"Id":"555038667","IsPullRequest":false,"CreatedAt":"2020-01-25T04:38:47","Actor":"nagytech","Number":"160","RawContent":null,"Title":"Website down","State":"closed","Body":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~","Url":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:29","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#152)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:00","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#153)"},{"Id":"539153211","IsPullRequest":true,"CreatedAt":"2020-01-22T14:07:13","Actor":"khalidabuhakmeh","Number":"156","RawContent":null,"Title":"Update Teams Link","State":"closed","Body":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`","Url":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Closed or merged PR \"Update Teams Link\" (#156)"},{"Id":"544546454","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:51","Actor":"manne","Number":"157","RawContent":null,"Title":"Link Reactive Extensions to new github repo","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Closed or merged PR \"Link Reactive Extensions to new github repo\" (#157)"},{"Id":"552026315","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:19","Actor":"nagytech","Number":"158","RawContent":null,"Title":"Add Akka.NET to DNF","State":"closed","Body":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n","Url":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Closed or merged PR \"Add Akka.NET to DNF\" (#158)"},{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"clairernovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"567714729","IsPullRequest":true,"CreatedAt":"2020-03-31T21:15:35","Actor":"dotnet-maestro-bot","Number":"28022","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28022)"},{"Id":"584089447","IsPullRequest":true,"CreatedAt":"2020-03-27T03:30:09","Actor":"janvorli","Number":"28029","RawContent":null,"Title":"Port to 3.1 - Fix handling thread abort in HelperMethodFrame","State":"closed","Body":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)","Url":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix handling thread abort in HelperMethodFrame\" (#28029)"},{"Id":"588639746","IsPullRequest":true,"CreatedAt":"2020-03-26T18:36:55","Actor":"sdmaclea","Number":"28033","RawContent":null,"Title":"For 3.1 Backport #25958 Modify amd64walker to use table based decode","State":"open","Body":"Fixes dotnet/runtime#34109\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/coreclr/pull/25958). This PR ports that fix to _release/3.1_.\r\n\r\n## Customer Impact\r\n\r\nSetting a debugger breakpoint on Amd64 (x64) can result in incorrect calculation of floating point values. \r\n\r\n## Regression?\r\n\r\nThis was a known and difficult to fix issue. The hand written Amd64 instruction parser was flaky and nearly impossible to maintain.\r\n\r\nThe problem arose because the debugger must determine the length and form of the instruction where the breakpoint is inserted. The original code was a minimal implementation which only covered the instruction form historically used by the JIT.  As new forms and especially intrinsics were added, the code was not updated because the complexity was far too high. \r\n\r\nThe fix required was this substantial change. At the time we missed the 3.0 branch and we did not have sufficient feedback to consider backport to 3.x.\r\n\r\n## Testing\r\n\r\n+ This code was manually tested to fix the originally reported issue.\r\n+ The code has been in the 5.0 branch for more than 6 months with no new regressions\r\n+ The 5.0 code has been tested against recently reported similar issues\r\n+ The internal diagnostic test suite was amended to test for this issue and prevent further identical regressions.\r\n\r\n## Risk\r\nLow. \r\n+ Only affects debugger operation.\r\n+ Removes a flaky instruction parser and replaces it with a machine generated one.  \r\n+ Adds tools to regenerate the parser tables\r\n+ Adds documentation\r\n \r\n## Code Reviewer\r\n@hoyosjs @tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28033","RelatedDescription":"Open PR \"For 3.1 Backport #25958 Modify amd64walker to use table based decode\" (#28033)"},{"Id":"587768007","IsPullRequest":true,"CreatedAt":"2020-03-26T17:08:27","Actor":"gbalykov","Number":"28032","RawContent":null,"Title":"[release/3.1] Fix Runtime_1241 test build","State":"closed","Body":"Runtime_1241 test doesn't build without this change.\r\n\r\ncc @alpencolt ","Url":"https://github.com/dotnet/coreclr/pull/28032","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Runtime_1241 test build\" (#28032)"},{"Id":"570086508","IsPullRequest":true,"CreatedAt":"2020-03-25T23:18:18","Actor":"AndyAyersMS","Number":"28024","RawContent":null,"Title":"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)","State":"closed","Body":"If we're promoting a long field, make sure `compLongUsed` gets set.\r\nOtherwise we may fail to properly decompose a long later on, leading\r\nto access violations in the jit.\r\n\r\nSee dotnet/runtime#32059 for the original bug report, and\r\ndotnet/runtime#32702 for the fix in 5.0.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash in the jit. No easy workaround.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: fix is surgical and enables existing long operand handling in\r\nthe jit in one case that can be overlooked. Only impacts x86 and arm\r\ncodegen. Problematic IL patterns may not be reachable from C#.","Url":"https://github.com/dotnet/coreclr/pull/28024","RelatedDescription":"Closed or merged PR \"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)\" (#28024)"},{"Id":"579461507","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:42","Actor":"omajid","Number":"28026","RawContent":null,"Title":"[release/3.1] Fix build with clang 10","State":"closed","Body":"This fixes 3 different sets of build issues that are seen when compiling with clang 10.\r\n\r\n- Clang 10 fails to compile slist.h because the code contained is   actually invalid. The assignment operator being used doesn't exist.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/33096\r\n\r\n- Clang 10 has moved exception-handling mismatches in function declarations under the -fms-compatibility flag (instead of the -fms-extensions flag). Our declarations of atoll and other similar functions are missing the exception declaration `throw()`. This mismatch in exception declarations makes clang 10 unable to build this code. Fix it by defining THROW_DECL as `throw()` which is supported at least as far back as clang 3.3.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/32837\r\n\r\n- Clang 10 has enabled additional warnings. Lets turn of -Werror globally in this release branch by making the `-ignorewarnings` switch  to `./build.sh` be the default.","Url":"https://github.com/dotnet/coreclr/pull/28026","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build with clang 10\" (#28026)"},{"Id":"577917254","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:25","Actor":"janvorli","Number":"28025","RawContent":null,"Title":"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle","State":"closed","Body":"When there is a race calling RuntimeType.InitializeCache, each of the\r\nracing threads creates a new GC handle using\r\nnew\r\nRuntimeTypeHandle(this).GetGCHandle(GCHandleType.WeakTrackResurrection);\r\nThis ends up calling RuntimeTypeHandle::GetGCHandle native method that\r\nadds the allocated handle into the handle cleanup list of the\r\nAssemblyLoaderAllocator specific for the runtime type.\r\nAll but the winning thread then call GCHandle.InternalFree on the just\r\nallocated handle. That frees the handle, but leaves it on the cleanup\r\nlist of the loader allocator. The same handle can be later allocated for\r\nsome\r\nother purpose. When the AssemblyLoaderAllocator is being destroyed, all\r\nthe handles on the cleanup list are destroyed too. So it destroys also\r\nthe handle that was left on the cleanup list incorrectly. That can cause\r\nall kinds of hard to diagnose issues, like the\r\nhttps://github.com/dotnet/runtime/issues/32171.\r\n\r\nThis change fixes it by adding a FreeGCHandle method on the\r\nRuntimeTypeHandle that besides freeing the handle also removes it from\r\nthe cleanup list of the related AssemblyLoadContext.\r\n\r\n ## Customer impact\r\nHard to diagnose crashes in the runtime caused by closing of random\r\nGC handles. The customer that has reported this issue was using\r\ncollectible assemblies and it was resulting in collecting\r\nLoaderAllocator that was still in use and it lead to crashes at various\r\nplaces.\r\n\r\n ## Regression?\r\nYes, it was introduced in 3.0. In 2.1 and 2.2, the thread that loses\r\nthe race destroys the handle only if the type was not in a collectible\r\nassembly. Since the non-collectible assemblies LoaderAllocator is never\r\ndestroyed, the handles were never cleaned up and so no problem could occur.\r\nIt was introduced in https://github.com/dotnet/coreclr/pull/21737\r\n\r\n ## Testing\r\nCustomer affected by the issue heavily has tested a fixed version and\r\nreported the issue doesn't occur anymore.\r\n\r\n ## Risk\r\nLow, the new code is executed at single place once per process runtine\r\nonly when a thread races for allocating the GC handle with another one\r\nand loses the race.","Url":"https://github.com/dotnet/coreclr/pull/28025","RelatedDescription":"Closed or merged PR \"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle\" (#28025)"},{"Id":"569148773","IsPullRequest":true,"CreatedAt":"2020-03-25T20:35:59","Actor":"hoyosjs","Number":"28023","RawContent":null,"Title":"[3.1 port] Fix debugger crash during unload of assemblies in ALC","State":"closed","Body":"Issue dotnet/runtime#2317 reports that trying to use unloadable ALCs under the debugger often ends up in a crash. There was a missing implementation when removing values from the module cache which in turn triggered a sporadic bad error in the DAC\r\n\r\nThis has already been fixed in .NET 5 (see dotnet/runtime#32311). This PR ports that fix down to _release/3.1_.\r\n\r\nFixes dotnet/runtime#2317\r\n\r\n## Customer Impact\r\nInner loop get's heavily impacted for plugin scenarios. From dotnet/runtime#2317 \r\n> Developing/using the use cases that where described in the .net core announcement under [Assembly Unloadability](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0) is slowed down as it is not possible to debug any scenario that requires assembly unloading. Without this fix the application must be restarted or tested without a debugger attached. This makes plugin development very annoying and less attractive.\r\n\r\nAlso see https://developercommunity.visualstudio.com/content/problem/698374/vs2019-and-fatal-error-has-occurred-and-debugging.html\r\n\r\n## Regression?\r\nNot a regression. Unloadable ALC's were introduced in the 3.0/3.1 time-frame as a new feature. However, adoption is cumbersome on inner loop due to this. \r\n\r\n## Testing\r\nThere's currently work in flight to add ALCs and unloadability verification for debugger scenarios. \r\n\r\n## Risk\r\nLow. The only code path that reaches this is exactly the one that's getting fixed and that still has somewhat low adoption. \r\n\r\n## Code Reviewer\r\n@sdmaclea ","Url":"https://github.com/dotnet/coreclr/pull/28023","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix debugger crash during unload of assemblies in ALC\" (#28023)"},{"Id":"587357484","IsPullRequest":true,"CreatedAt":"2020-03-25T18:36:02","Actor":"Anipik","Number":"28030","RawContent":null,"Title":"update branding for coreclr to 3.1.4","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28030","RelatedDescription":"Closed or merged PR \"update branding for coreclr to 3.1.4\" (#28030)"},{"Id":"587368335","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:19","Actor":"Anipik","Number":"28031","RawContent":null,"Title":"update branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28031","RelatedDescription":"Closed or merged PR \"update branding for 2.1.18\" (#28031)"},{"Id":"580316086","IsPullRequest":true,"CreatedAt":"2020-03-13T01:32:05","Actor":"sdmaclea","Number":"28028","RawContent":null,"Title":"WIP Support older 3.x releases with cross OS backport (for testing)","State":"open","Body":"This is a little more than #28027","Url":"https://github.com/dotnet/coreclr/pull/28028","RelatedDescription":"Open PR \"WIP Support older 3.x releases with cross OS backport (for testing)\" (#28028)"},{"Id":"580315472","IsPullRequest":true,"CreatedAt":"2020-03-13T01:29:34","Actor":"sdmaclea","Number":"28027","RawContent":null,"Title":"WIP Port Cross OS DAC to 3.1","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28027","RelatedDescription":"Open PR \"WIP Port Cross OS DAC to 3.1\" (#28027)"},{"Id":"557359179","IsPullRequest":true,"CreatedAt":"2020-02-18T21:46:38","Actor":"kouvel","Number":"28006","RawContent":null,"Title":"[3.1] Fail FuncEval if slot backpatching lock is held by any thread","State":"closed","Body":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\n### Customer impact\r\n\r\n- This is a top feedback item for VS on 3.x: [feedback ticket](https://developercommunity.visualstudio.com/content/problem/855101/to-prevent-an-unsafe-abort-popup-appears-often-in.html)\r\n\r\n### Regression?\r\n\r\nYes, regression from 2.x, starting in 3.0\r\n\r\n### Testing\r\n\r\n- It's a timing issue and was reproduced by inducing specific timings in various phases of tiering\r\n- Verified that the timeout does not occur after the fix in the vast majority of cases. Instead, the FuncEval is failed when the lock is held and VS falls back to alternate means for evaluating the expression. See more in risks below.\r\n- Checked debugger-broken stacks at various phases of tiering to verify that the poll for debugger suspension is working as expected\r\n- Standard tests\r\n\r\n### Risks\r\n\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537","Url":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Closed or merged PR \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006)"},{"Id":"564203743","IsPullRequest":true,"CreatedAt":"2020-02-18T21:32:58","Actor":"GrabYourPitchforks","Number":"28014","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28014","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28014)"},{"Id":"566357453","IsPullRequest":true,"CreatedAt":"2020-02-18T21:31:54","Actor":"eiriktsarpalis","Number":"28019","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression","State":"closed","Body":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0 [here](https://github.com/dotnet/corefx/pull/34747/files#diff-e388668f95442712879e252fb0d48001R193) - original issue [here](https://github.com/dotnet/runtime/issues/28365)). Reported by 2 customers. \r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28019","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#28019)"},{"Id":"567089433","IsPullRequest":true,"CreatedAt":"2020-02-18T18:55:37","Actor":"tqinli","Number":"28021","RawContent":null,"Title":"Please ignore this PR, I made a mistake to create this here.","State":"closed","Body":"Please ignore this PR, I made a mistake to create this here.","Url":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Closed or merged PR \"Please ignore this PR, I made a mistake to create this here.\" (#28021)"},{"Id":"563480826","IsPullRequest":true,"CreatedAt":"2020-02-18T18:27:24","Actor":"omajid","Number":"28012","RawContent":null,"Title":"[release/3.1] Fix build on systems with glibc >= 2.30","State":"closed","Body":"## Issue\r\n\r\nrelease/3.1 does not build on newer Linux distros, due to glibc deprecation warnings being treated as errors. The fix for release/3.1 is to disable this warning. (We have proper fix for .NET 5.)\r\n\r\n## Customer Impact\r\n\r\nCustomers building .NET Runtime from sources have to apply private patches to keep the build working.\r\n\r\n## Regression?\r\n\r\nRegression from older Linux distros.\r\n\r\n---\r\n\r\nOn newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off.","Url":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012)"},{"Id":"563610462","IsPullRequest":true,"CreatedAt":"2020-02-18T18:06:39","Actor":"GrabYourPitchforks","Number":"28013","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance\" (#28013)"},{"Id":"562935739","IsPullRequest":true,"CreatedAt":"2020-02-14T17:49:00","Actor":"sdmaclea","Number":"28011","RawContent":null,"Title":"WIP -- Port linuxdac from master","State":"closed","Body":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Closed or merged PR \"WIP -- Port linuxdac from master\" (#28011)"},{"Id":"565025740","IsPullRequest":true,"CreatedAt":"2020-02-14T01:45:09","Actor":"dotnet-maestro[bot]","Number":"28018","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018)"},{"Id":"555024664","IsPullRequest":true,"CreatedAt":"2020-02-13T22:26:52","Actor":"briansull","Number":"28003","RawContent":null,"Title":"Port the 5.0 fix for issue #1104","State":"closed","Body":"This is the fix for the 3.1 branch for the runtime issue #1104 \r\nThis a a bug which Sergey Andreenko @sandreenko found where the JIT can\r\noptimize away a range check, allowing an out of bounds read or write.\r\nThe original cause was from PR #23109, where a cut-and-paste typo inverted the \r\ninitialization code for `bool alreadyPresent` in `RangeCheck::IsMonotonicallyIncreasing`\r\n\r\n**Customer Impact**\r\nInvalid code gen that allows an out of bounds read or write.\r\n\r\n**Regression?**\r\nA regression introduced during 3.0 development.\r\n\r\n**Testing**\r\nThe fix has been verified in the runtime repo.\r\n\r\n**Risk**\r\nLow: The fix is straightforward and only impacts 1 line of code.\r\n\r\n**Code Reviewer**\r\n@sandreenko and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/28003","RelatedDescription":"Closed or merged PR \"Port the 5.0 fix for issue #1104\" (#28003)"},{"Id":"564882854","IsPullRequest":true,"CreatedAt":"2020-02-13T22:24:20","Actor":"Anipik","Number":"28016","RawContent":null,"Title":"update branding for 3.1.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Closed or merged PR \"update branding for 3.1.3\" (#28016)"},{"Id":"564883079","IsPullRequest":true,"CreatedAt":"2020-02-13T20:26:57","Actor":"Anipik","Number":"28017","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#28017)"},{"Id":"561936487","IsPullRequest":true,"CreatedAt":"2020-02-13T19:59:55","Actor":"omajid","Number":"28010","RawContent":null,"Title":"[release/3.1] Support glibc deprecation of sys/sysctl.h ","State":"closed","Body":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`","Url":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Closed or merged PR \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010)"},{"Id":"564266501","IsPullRequest":true,"CreatedAt":"2020-02-12T20:57:40","Actor":"GrabYourPitchforks","Number":"28015","RawContent":null,"Title":"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"open","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`. __This has already impacted at least one first-party application__, and they are requesting a backported fix for UWP.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28015","RelatedDescription":"Open PR \"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28015)"},{"Id":"558155384","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:51","Actor":"stephentoub","Number":"28008","RawContent":null,"Title":"Delete ISSUE_TEMPLATE.md","State":"closed","Body":"All issues have been transferred to dotnet/runtime, and issues in coreclr have been disabled.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28008","RelatedDescription":"Closed or merged PR \"Delete ISSUE_TEMPLATE.md\" (#28008)"},{"Id":"558156253","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:03","Actor":"stephentoub","Number":"28009","RawContent":null,"Title":"Fix readme link in contributed.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28009","RelatedDescription":"Closed or merged PR \"Fix readme link in contributed.md\" (#28009)"},{"Id":"557644837","IsPullRequest":true,"CreatedAt":"2020-01-31T14:20:41","Actor":"WenningQiu","Number":"28007","RawContent":null,"Title":"CSG stop-gap change on AsyncLocal for .NET Core 3.1","State":"closed","Body":"Stop-gap change for https://github.com/dotnet/docs/issues/9965","Url":"https://github.com/dotnet/coreclr/pull/28007","RelatedDescription":"Closed or merged PR \"CSG stop-gap change on AsyncLocal for .NET Core 3.1\" (#28007)"},{"Id":"555745808","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:56","Actor":"danmosemsft","Number":"28004","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28004","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#28004)"},{"Id":"551004118","IsPullRequest":true,"CreatedAt":"2020-01-17T02:10:57","Actor":"dotnet-maestro-bot","Number":"28002","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @hoyosjs\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28002","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#28002)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"592091086","IsPullRequest":true,"CreatedAt":"2020-04-02T03:44:09","Actor":"dotnet-maestro[bot]","Number":"13329","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200401.6\r\n- **Date Produced**: 4/1/2020 5:23 PM\r\n- **Commit**: 06bdc9ce0f3f21c365b998a34165c9c6a8019589\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20201.6\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13329","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13329)"},{"Id":"589929295","IsPullRequest":true,"CreatedAt":"2020-04-02T03:14:17","Actor":"wli3","Number":"13315","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13315","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13315)"},{"Id":"589929389","IsPullRequest":true,"CreatedAt":"2020-04-02T03:14:10","Actor":"wli3","Number":"13316","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13316","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13316)"},{"Id":"589929746","IsPullRequest":true,"CreatedAt":"2020-04-02T03:13:52","Actor":"wli3","Number":"13317","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13317","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13317)"},{"Id":"591476705","IsPullRequest":true,"CreatedAt":"2020-04-01T16:03:25","Actor":"dotnet-maestro[bot]","Number":"13324","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6532\r\n- **Date Produced**: 3/25/2020 11:01 PM\r\n- **Commit**: 1c2681b16a0bb9be9271abe043a1cbf892761ef8\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.6.0-preview.2.6532\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13324","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13324)"},{"Id":"591660841","IsPullRequest":true,"CreatedAt":"2020-04-01T16:00:03","Actor":"dotnet-maestro[bot]","Number":"13327","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13327","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13327)"},{"Id":"591660845","IsPullRequest":true,"CreatedAt":"2020-04-01T15:59:56","Actor":"dotnet-maestro[bot]","Number":"13328","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9a2d95d4-e7b6-4af1-24a3-08d7c517f22b\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13328","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore\" (#13328)"},{"Id":"591503112","IsPullRequest":true,"CreatedAt":"2020-04-01T15:56:15","Actor":"dotnet-maestro[bot]","Number":"13325","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: cadcf242-0374-4d70-4f28-08d7c5f06407\r\n- **Build**: 20200331.2\r\n- **Date Produced**: 4/1/2020 2:44 AM\r\n- **Commit**: 57d5bbb58f17a8cb3a82c81839c9379b4fcfe0d8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.4-servicing.20181.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.4\r\n\r\n[marker]: <> (End:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13325","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#13325)"},{"Id":"591660832","IsPullRequest":true,"CreatedAt":"2020-04-01T06:51:04","Actor":"dotnet-maestro[bot]","Number":"13326","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13326","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13326)"},{"Id":"590005024","IsPullRequest":true,"CreatedAt":"2020-03-31T20:27:31","Actor":"dotnet-maestro-bot","Number":"13318","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* wli3\n* dsplaisted\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13318","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13318)"},{"Id":"590782764","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:55","Actor":"wli3","Number":"13321","RawContent":null,"Title":"Change mac build pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13321","RelatedDescription":"Closed or merged PR \"Change mac build pool\" (#13321)"},{"Id":"590783573","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:40","Actor":"wli3","Number":"13322","RawContent":null,"Title":"Change mac pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13322","RelatedDescription":"Closed or merged PR \"Change mac pool\" (#13322)"},{"Id":"590814958","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:33","Actor":"wli3","Number":"13323","RawContent":null,"Title":"Change mac pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13323","RelatedDescription":"Closed or merged PR \"Change mac pool\" (#13323)"},{"Id":"589929012","IsPullRequest":true,"CreatedAt":"2020-03-30T18:56:51","Actor":"wli3","Number":"13313","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13313","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13313)"},{"Id":"589929171","IsPullRequest":true,"CreatedAt":"2020-03-30T18:56:44","Actor":"wli3","Number":"13314","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13314","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13314)"},{"Id":"589928899","IsPullRequest":true,"CreatedAt":"2020-03-30T18:56:39","Actor":"wli3","Number":"13312","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13312","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13312)"},{"Id":"590031312","IsPullRequest":true,"CreatedAt":"2020-03-30T17:23:28","Actor":"dotnet-maestro[bot]","Number":"13319","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200329.7\r\n- **Date Produced**: 3/30/2020 6:18 AM\r\n- **Commit**: 974c51e8486a018d53394cc4852fd451eb940dd6\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20179.7\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13319","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13319)"},{"Id":"590050283","IsPullRequest":true,"CreatedAt":"2020-03-30T17:23:19","Actor":"dotnet-maestro[bot]","Number":"13320","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200329.9\r\n- **Date Produced**: 3/30/2020 6:57 AM\r\n- **Commit**: b90f3aeb88e31f9519482ab5f665e953056598d5\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.300-preview.20179.9\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13320","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13320)"},{"Id":"589114872","IsPullRequest":true,"CreatedAt":"2020-03-30T17:23:02","Actor":"dotnet-maestro[bot]","Number":"13307","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2f46839f-4f80-4d33-eeee-08d727dab80f\r\n- **Build**: 20200327.1\r\n- **Date Produced**: 3/27/2020 12:22 PM\r\n- **Commit**: 55ff2d0d7b63a97b2e53dc2e94df8d1cae9858ac\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.4-servicing.20177.1\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13307","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13307)"},{"Id":"589690301","IsPullRequest":true,"CreatedAt":"2020-03-30T05:34:31","Actor":"dotnet-maestro[bot]","Number":"13311","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200328.4\r\n- **Date Produced**: 3/29/2020 12:37 AM\r\n- **Commit**: e7806934e7e832ba623ca921d25e7cc430d41afe\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20178.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13311","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13311)"},{"Id":"588755613","IsPullRequest":true,"CreatedAt":"2020-03-30T05:33:55","Actor":"dotnet-maestro[bot]","Number":"13300","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9a2d95d4-e7b6-4af1-24a3-08d7c517f22b\r\n- **Build**: 20200328.10\r\n- **Date Produced**: 3/29/2020 2:38 AM\r\n- **Commit**: 306ef044cf9c8500d4d37f930f2b3f64380b2622\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20178.10\r\n\r\n[marker]: <> (End:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13300","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore\" (#13300)"},{"Id":"589675028","IsPullRequest":true,"CreatedAt":"2020-03-30T05:27:53","Actor":"dotnet-maestro[bot]","Number":"13310","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200328.10\r\n- **Date Produced**: 3/29/2020 2:38 AM\r\n- **Commit**: 306ef044cf9c8500d4d37f930f2b3f64380b2622\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20178.10\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13310","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13310)"},{"Id":"588944792","IsPullRequest":true,"CreatedAt":"2020-03-30T05:07:06","Actor":"dotnet-maestro-bot","Number":"13304","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* wli3\n* dsplaisted\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13304","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13304)"},{"Id":"588755617","IsPullRequest":true,"CreatedAt":"2020-03-29T03:48:24","Actor":"dotnet-maestro[bot]","Number":"13301","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200328.10\r\n- **Date Produced**: 3/29/2020 2:38 AM\r\n- **Commit**: 306ef044cf9c8500d4d37f930f2b3f64380b2622\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20178.10\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13301","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13301)"},{"Id":"589004495","IsPullRequest":true,"CreatedAt":"2020-03-28T01:42:12","Actor":"dotnet-maestro[bot]","Number":"13305","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200327.7\r\n- **Date Produced**: 3/28/2020 12:46 AM\r\n- **Commit**: 697da893b00d13a4161780ea63d3b1dd5fe57399\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20177.7\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13305","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13305)"},{"Id":"589441164","IsPullRequest":true,"CreatedAt":"2020-03-27T22:56:05","Actor":"dotnet-maestro[bot]","Number":"13309","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200327.4\r\n- **Date Produced**: 3/27/2020 9:14 PM\r\n- **Commit**: 654cf06615981b190737101d3a1df39e57e20341\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20177.4\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13309","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13309)"},{"Id":"588790257","IsPullRequest":true,"CreatedAt":"2020-03-27T21:01:50","Actor":"dotnet-maestro[bot]","Number":"13303","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: cadcf242-0374-4d70-4f28-08d7c5f06407\r\n- **Build**: 20200326.4\r\n- **Date Produced**: 3/27/2020 3:05 AM\r\n- **Commit**: 08b96bae4b5127c9ab110182fdd51e6a045803cf\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.4-servicing.20176.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.4-servicing.20176.4\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.4-servicing.20176.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.4-servicing.20176.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.4-servicing.20176.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.4-servicing.20176.4\r\n\r\n[marker]: <> (End:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13303","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#13303)"},{"Id":"589114694","IsPullRequest":true,"CreatedAt":"2020-03-27T13:46:17","Actor":"dotnet-maestro[bot]","Number":"13306","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0f28bf3e-b839-49cc-8bfb-08d7b5674f1a)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 0f28bf3e-b839-49cc-8bfb-08d7b5674f1a\r\n- **Build**: 20200327.1\r\n- **Date Produced**: 3/27/2020 12:22 PM\r\n- **Commit**: 55ff2d0d7b63a97b2e53dc2e94df8d1cae9858ac\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.4-servicing.20177.1\r\n\r\n[marker]: <> (End:0f28bf3e-b839-49cc-8bfb-08d7b5674f1a)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13306","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/templating\" (#13306)"},{"Id":"589114972","IsPullRequest":true,"CreatedAt":"2020-03-27T13:41:46","Actor":"dotnet-maestro[bot]","Number":"13308","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2edc82a1-19d9-431c-901b-08d76d41c6c3\r\n- **Build**: 20200327.1\r\n- **Date Produced**: 3/27/2020 12:22 PM\r\n- **Commit**: 55ff2d0d7b63a97b2e53dc2e94df8d1cae9858ac\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.4-servicing.20177.1\r\n\r\n[marker]: <> (End:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13308","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/templating\" (#13308)"},{"Id":"588789937","IsPullRequest":true,"CreatedAt":"2020-03-26T23:31:40","Actor":"dotnet-maestro[bot]","Number":"13302","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200331.2\r\n- **Date Produced**: 4/1/2020 2:44 AM\r\n- **Commit**: 57d5bbb58f17a8cb3a82c81839c9379b4fcfe0d8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.4-servicing.20181.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13302","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13302)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-03-23T16:43:07","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"open","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Open issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"},{"Id":"585023231","IsPullRequest":true,"CreatedAt":"2020-03-20T12:15:48","Actor":"dotnet-maestro[bot]","Number":"1745","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1745)"},{"Id":"584362093","IsPullRequest":true,"CreatedAt":"2020-03-19T12:25:52","Actor":"dotnet-maestro[bot]","Number":"1744","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1744","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1744)"},{"Id":"582961986","IsPullRequest":true,"CreatedAt":"2020-03-18T22:09:09","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1742)"},{"Id":"584020602","IsPullRequest":true,"CreatedAt":"2020-03-18T22:08:19","Actor":"gugavaro","Number":"1743","RawContent":null,"Title":"Updating ApiCompat baselines files","State":"closed","Body":"Updating ApiCompat baselines files","Url":"https://github.com/dotnet/standard/pull/1743","RelatedDescription":"Closed or merged PR \"Updating ApiCompat baselines files\" (#1743)"},{"Id":"580556512","IsPullRequest":true,"CreatedAt":"2020-03-13T12:15:46","Actor":"dotnet-maestro[bot]","Number":"1740","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200312.3\r\n- **Date Produced**: 3/12/2020 5:55 PM\r\n- **Commit**: 16d4350184cf362cd59807b589d1c93803025abc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20162.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1740","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1740)"},{"Id":"579889900","IsPullRequest":true,"CreatedAt":"2020-03-12T12:10:44","Actor":"dotnet-maestro[bot]","Number":"1739","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200311.5\r\n- **Date Produced**: 3/12/2020 1:01 AM\r\n- **Commit**: df7ef03819d65500711edd0bceac091264b464b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20161.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1739","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1739)"},{"Id":"579213194","IsPullRequest":true,"CreatedAt":"2020-03-11T12:25:51","Actor":"dotnet-maestro[bot]","Number":"1738","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200310.4\r\n- **Date Produced**: 3/10/2020 8:42 PM\r\n- **Commit**: 9a9422d109520d942711e07fae8c662c20e7b6e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20160.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1738","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1738)"},{"Id":"578529521","IsPullRequest":true,"CreatedAt":"2020-03-10T12:35:54","Actor":"dotnet-maestro[bot]","Number":"1737","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200309.2\r\n- **Date Produced**: 3/9/2020 3:47 PM\r\n- **Commit**: d9a664e151f9973f1a3679f48d24c3407d77c9b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20159.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1737","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1737)"},{"Id":"577855009","IsPullRequest":true,"CreatedAt":"2020-03-09T12:10:53","Actor":"dotnet-maestro[bot]","Number":"1736","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200308.2\r\n- **Date Produced**: 3/8/2020 11:45 PM\r\n- **Commit**: 527179abfbb5cd738035c4ac2d2566c571ce85db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20158.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1736","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1736)"},{"Id":"577489994","IsPullRequest":true,"CreatedAt":"2020-03-08T12:10:56","Actor":"dotnet-maestro[bot]","Number":"1735","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200307.1\r\n- **Date Produced**: 3/7/2020 2:29 PM\r\n- **Commit**: ca67e6af5b3c6d94755f0912c5365bea44130b12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20157.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1735","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1735)"},{"Id":"577331751","IsPullRequest":true,"CreatedAt":"2020-03-07T13:20:45","Actor":"dotnet-maestro[bot]","Number":"1734","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200306.4\r\n- **Date Produced**: 3/6/2020 6:36 PM\r\n- **Commit**: 8ff203f47d83e89ac4b9310b4e902188e0344bf0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20156.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1734","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1734)"},{"Id":"576916652","IsPullRequest":true,"CreatedAt":"2020-03-06T13:10:41","Actor":"dotnet-maestro[bot]","Number":"1733","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200305.4\r\n- **Date Produced**: 3/6/2020 12:19 AM\r\n- **Commit**: 08eea2b992d991297fc23de413bddfb9b3db5082\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20155.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1733","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1733)"},{"Id":"576236548","IsPullRequest":true,"CreatedAt":"2020-03-05T13:25:48","Actor":"dotnet-maestro[bot]","Number":"1732","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200304.1\r\n- **Date Produced**: 3/4/2020 2:28 PM\r\n- **Commit**: 5d8c586ca1bed15f630ba7d2ed16f591be06eafd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20154.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1732","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1732)"},{"Id":"575382239","IsPullRequest":true,"CreatedAt":"2020-03-04T13:25:52","Actor":"dotnet-maestro[bot]","Number":"1731","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200303.1\r\n- **Date Produced**: 3/3/2020 2:12 PM\r\n- **Commit**: 421b20fb860907c45673de791177e3fd61402197\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20153.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1731","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1731)"},{"Id":"574651534","IsPullRequest":true,"CreatedAt":"2020-03-03T13:20:48","Actor":"dotnet-maestro[bot]","Number":"1730","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200302.4\r\n- **Date Produced**: 3/2/2020 6:28 PM\r\n- **Commit**: d8c2d041341ea7974fd3f2057e9d6afdd4f37598\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20152.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1730","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1730)"},{"Id":"574149455","IsPullRequest":true,"CreatedAt":"2020-03-02T18:30:15","Actor":"joperezr","Number":"1729","RawContent":null,"Title":"Adding Code of Conduct to the repo","State":"closed","Body":"cc: @karelz @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1729","RelatedDescription":"Closed or merged PR \"Adding Code of Conduct to the repo\" (#1729)"},{"Id":"573958323","IsPullRequest":true,"CreatedAt":"2020-03-02T13:20:54","Actor":"dotnet-maestro[bot]","Number":"1728","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200301.1\r\n- **Date Produced**: 3/1/2020 2:16 PM\r\n- **Commit**: 8ccad075bbb0db445e03eed0a6073d27bdd4f31a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20151.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1728","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1728)"},{"Id":"573542635","IsPullRequest":true,"CreatedAt":"2020-03-01T13:10:43","Actor":"dotnet-maestro[bot]","Number":"1727","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200229.1\r\n- **Date Produced**: 2/29/2020 2:10 PM\r\n- **Commit**: 86e54fb5076d46a6f959f0329d53c1c72e2280df\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20129.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20129.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1727","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1727)"},{"Id":"573290194","IsPullRequest":true,"CreatedAt":"2020-02-29T13:25:48","Actor":"dotnet-maestro[bot]","Number":"1726","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200228.3\r\n- **Date Produced**: 2/29/2020 12:26 AM\r\n- **Commit**: 5966c5dd9deb5aca8fd8183eec454cf6cf864d14\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20128.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20128.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1726","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1726)"},{"Id":"572741397","IsPullRequest":true,"CreatedAt":"2020-02-28T13:25:51","Actor":"dotnet-maestro[bot]","Number":"1725","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200227.9\r\n- **Date Produced**: 2/27/2020 11:49 PM\r\n- **Commit**: 9c66925c608f3c0ee3e1f66c05943865b64590e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20127.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20127.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1725","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1725)"},{"Id":"570587282","IsPullRequest":false,"CreatedAt":"2020-02-27T20:52:20","Actor":"danheinz","Number":"1721","RawContent":null,"Title":"Display .NET Standard assembly in the Add Reference dialog for a UWP application","State":"closed","Body":"I am trying to figure out how to display my .NET Standard assembly in the Visual Studio Reference Manager under Assemblies/Extensions for a UWP application.\r\n\r\nI currently do this with a .NET Framework assembly for .NET Framework applications by setting the proper registry key ([from the Microsoft docs article](https://docs.microsoft.com/en-us/visualstudio/ide/how-to-add-or-remove-references-by-using-the-reference-manager?view=vs-2019)):\r\n\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft.NETFramework\\\\AssemblyFoldersEx\\MyAssemblies]@=\"\"\r\n\r\nThis works great for .NET Framework, but I cannot figure out how to do the same thing for my .NET Standard 2.0 assembly and UWP applications.\r\n\r\nFor example, with the above registry addition and a .NET Framework project, my .NET Framework assembly is automatically shown in the Reference Manager dialog under Assemblies/Extensions. In addition, projects that have a reference to the assembly automatically know where it is located.\r\n\r\nI can't seem to do this with a .NET Standard 2.0 assembly and a UWP project. The registry entry appears to be only for .NET Framework assemblies, not assemblies used with UWP. Part of the registry key is the lowest version of the .NET Framework my assembly supports. For example: HKEY_LOCAL_MACHINE\\Software\\Microsoft.NETFramework\\v2.0.50727\\AssemblyFoldersEx\\My Assembly\\\r\n\r\nI tried creating a registry key with the .NET Framework version 4.6.1 and my .NET Standard assembly does show up in the Reference Manager for projects targeting .NET Framework 4.6.1 or newer, but it still does not show up in Reference Manager for UWP projects. I have to manually browse to the assembly file.\r\n\r\nIs there a way to have the .NET Standard 2.0 assembly automatically show in Reference Manager for UWP projects (and be able to find the assembly when a project has a reference to it without a path) like I am able to do for the .NET Framework assembly?\r\n","Url":"https://github.com/dotnet/standard/issues/1721","RelatedDescription":"Closed issue \"Display .NET Standard assembly in the Add Reference dialog for a UWP application\" (#1721)"},{"Id":"572068106","IsPullRequest":true,"CreatedAt":"2020-02-27T13:15:40","Actor":"dotnet-maestro[bot]","Number":"1724","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200226.7\r\n- **Date Produced**: 2/27/2020 12:44 AM\r\n- **Commit**: cd4164e1f3f7daf2a6f8dbd012210c93521bd82f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20126.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20126.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1724","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1724)"},{"Id":"571340051","IsPullRequest":true,"CreatedAt":"2020-02-26T13:20:45","Actor":"dotnet-maestro[bot]","Number":"1723","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200225.9\r\n- **Date Produced**: 2/26/2020 2:30 AM\r\n- **Commit**: e6c7061dacf795792aa7d1213dba0e532bbd85bd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20125.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20125.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1723","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1723)"},{"Id":"570776400","IsPullRequest":false,"CreatedAt":"2020-02-25T19:18:29","Actor":"harrisse","Number":"1722","RawContent":null,"Title":"System.IO.Path Nullable differences between .NET Core 3.1 and .NET Standard 2.1","State":"open","Body":"With `<Nullable>enable</Nullable>` there are signature differences in System.IO.Path between .NET Core 3.1 and .NET Standard 2.1. \r\n\r\n.NET Core: `public static string? GetDirectoryName(string? path);`\r\n.NET Standard: `public static string GetDirectoryName(string path);`\r\n\r\nThe .NET Core class comes from `Microsoft.NETCore.App.Ref\\3.1.0\\ref\\netcoreapp3.1\\System.Runtime.Extensions.dll` while the .NET Standard class comes from `C:\\Program Files\\dotnet\\packs\\NETStandard.Library.Ref\\2.1.0\\ref\\netstandard2.1\\netstandard.dll`\r\n\r\nIs there something I'm missing about how nullable ref types should work here?","Url":"https://github.com/dotnet/standard/issues/1722","RelatedDescription":"Open issue \"System.IO.Path Nullable differences between .NET Core 3.1 and .NET Standard 2.1\" (#1722)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"591386734","IsPullRequest":true,"CreatedAt":"2020-03-31T22:29:33","Actor":"Anipik","Number":"42899","RawContent":null,"Title":"Stablise the 3.1 branch","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42899","RelatedDescription":"Closed or merged PR \"Stablise the 3.1 branch\" (#42899)"},{"Id":"590339010","IsPullRequest":true,"CreatedAt":"2020-03-30T14:37:07","Actor":"s-tarasov","Number":"42898","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42898","RelatedDescription":"Closed or merged PR \"Update README.md\" (#42898)"},{"Id":"588584064","IsPullRequest":true,"CreatedAt":"2020-03-27T15:18:16","Actor":"joperezr","Number":"42894","RawContent":null,"Title":"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better","State":"closed","Body":"This is porting the last 3 commits that went into https://github.com/dotnet/runtime/pull/33459.\r\n\r\ncc: @Jozkee @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42894","RelatedDescription":"Closed or merged PR \"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better\" (#42894)"},{"Id":"587989374","IsPullRequest":true,"CreatedAt":"2020-03-27T03:12:16","Actor":"Anipik","Number":"42890","RawContent":null,"Title":"rev up assembly and package versions and add package to package builds","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42890","RelatedDescription":"Closed or merged PR \"rev up assembly and package versions and add package to package builds\" (#42890)"},{"Id":"588766967","IsPullRequest":true,"CreatedAt":"2020-03-26T23:06:51","Actor":"Anipik","Number":"42897","RawContent":null,"Title":"building platforms package","State":"closed","Body":"Related PR https://github.com/dotnet/corefx/pull/42872","Url":"https://github.com/dotnet/corefx/pull/42897","RelatedDescription":"Closed or merged PR \"building platforms package\" (#42897)"},{"Id":"588726249","IsPullRequest":true,"CreatedAt":"2020-03-26T22:51:13","Actor":"dotnet-maestro[bot]","Number":"42896","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200326.1\r\n- **Date Produced**: 3/26/2020 5:57 PM\r\n- **Commit**: 83c2d68edf0cc18cf06b12fb2d7eb41031676a3f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20176.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20176.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20176.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42896","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42896)"},{"Id":"588631300","IsPullRequest":true,"CreatedAt":"2020-03-26T22:47:01","Actor":"safern","Number":"42895","RawContent":null,"Title":"Bump branding to preview4 in 3.1-blazor branch","State":"closed","Body":"I looked at aspnetcore branding and they already moved to preview4.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/blazor-wasm/eng/Versions.props#L12","Url":"https://github.com/dotnet/corefx/pull/42895","RelatedDescription":"Closed or merged PR \"Bump branding to preview4 in 3.1-blazor branch\" (#42895)"},{"Id":"583846290","IsPullRequest":true,"CreatedAt":"2020-03-26T22:23:16","Actor":"bartonjs","Number":"42880","RawContent":null,"Title":"[release/2.1] Data loss - Don't delete private keys detected from SerializedCert imports","State":"closed","Body":"Port of https://github.com/dotnet/runtime/commit/2bcf71309065044c291de38809912b14437ee804","Url":"https://github.com/dotnet/corefx/pull/42880","RelatedDescription":"Closed or merged PR \"[release/2.1] Data loss - Don't delete private keys detected from SerializedCert imports\" (#42880)"},{"Id":"572290580","IsPullRequest":true,"CreatedAt":"2020-03-26T22:21:06","Actor":"bartonjs","Number":"42876","RawContent":null,"Title":"[release/2.1] Suppress the GrayListedLeaf error code on macOS X509Chain","State":"closed","Body":"This is a port of https://github.com/dotnet/runtime/pull/32895.\r\n\r\n#### Description\r\n\r\nRecent change to macOS has caused a new error code to appear during X509Chain building. Since this error code has been identified as not having impact on the .NET X509Chain class, ignore it.\r\n\r\n#### Customer Impact\r\n\r\nWithout this fix, customers who upgrade their macOS version and build X509Chains against certificates/certificate-authorities which result in the GrayListedLeaf code will get a `CryptographicException` due to the unmapped error.\r\n\r\n#### Regression?\r\n\r\nNo, reaction to OS update.\r\n\r\n#### Packaging reviewed?\r\n\r\nRequired shim library, no packaging impact.\r\n\r\n#### Risk\r\n\r\n**Low**, covered by unit tests (which originally discovered the issue).","Url":"https://github.com/dotnet/corefx/pull/42876","RelatedDescription":"Closed or merged PR \"[release/2.1] Suppress the GrayListedLeaf error code on macOS X509Chain\" (#42876)"},{"Id":"570123604","IsPullRequest":true,"CreatedAt":"2020-03-26T22:20:20","Actor":"omajid","Number":"42872","RawContent":null,"Title":"[release/2.1] Add Fedora 33 runtime ids","State":"closed","Body":"Fedora 32 is gearing up for release[1], and in-development version of Fedora has been offiically labelled as being Fedora 33:\r\n\r\n    $ podman run -it fedora:33 cat /etc/os-release\r\n    NAME=Fedora\r\n    VERSION=\"33 (Container Image)\"\r\n    ID=fedora\r\n    VERSION_ID=33\r\n    VERSION_CODENAME=\"\"\r\n    PLATFORM_ID=\"platform:f33\"\r\n    PRETTY_NAME=\"Fedora 33 (Container Image)\"\r\n    ANSI_COLOR=\"0;34\"\r\n    LOGO=fedora-logo-icon\r\n    CPE_NAME=\"cpe:/o:fedoraproject:fedora:33\"\r\n    HOME_URL=\"https://fedoraproject.org/\"\r\n    DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/\"\r\n    SUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\n    BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\n    REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\n    REDHAT_BUGZILLA_PRODUCT_VERSION=rawhide\r\n    REDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\n    REDHAT_SUPPORT_PRODUCT_VERSION=rawhide\r\n    PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\n    VARIANT=\"Container Image\"\r\n    VARIANT_ID=container\r\n\r\n[1] https://fedorapeople.org/groups/schedule/f-32/f-32-key-tasks.html\r\n\r\nThis is a backport of https://github.com/dotnet/runtime/pull/32752","Url":"https://github.com/dotnet/corefx/pull/42872","RelatedDescription":"Closed or merged PR \"[release/2.1] Add Fedora 33 runtime ids\" (#42872)"},{"Id":"588053330","IsPullRequest":true,"CreatedAt":"2020-03-26T17:22:38","Actor":"dotnet-maestro[bot]","Number":"42893","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200325.3\r\n- **Date Produced**: 3/26/2020 12:32 AM\r\n- **Commit**: f5d8d52a3033bccda3ed798ba25fcfd988f78019\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20175.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20175.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20175.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42893","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42893)"},{"Id":"588040516","IsPullRequest":true,"CreatedAt":"2020-03-26T02:17:35","Actor":"safern","Number":"42892","RawContent":null,"Title":"Publish only on all configurations and only publish Json package","State":"closed","Body":"This prevents us from publishing any transport packages in release/3.1-blazor package, and will only publish the json package added in: https://github.com/dotnet/corefx/pull/42889\r\n\r\nOnce that PR is merged, I'll test this on an official build and if green add the default channel and then merge.\r\n\r\ncc: @joperezr @ericstj","Url":"https://github.com/dotnet/corefx/pull/42892","RelatedDescription":"Closed or merged PR \"Publish only on all configurations and only publish Json package\" (#42892)"},{"Id":"587871901","IsPullRequest":true,"CreatedAt":"2020-03-26T01:14:17","Actor":"joperezr","Number":"42889","RawContent":null,"Title":"Add new System.Net.Http.Json project/namespace","State":"closed","Body":"Porting #42879 to new blazor branch. The 3.1 PR was already approved for servicing. It includes all commits from PR https://github.com/dotnet/runtime/pull/33459 up to https://github.com/dotnet/runtime/pull/33459/commits/4970a538111515c734bec677d2bc4cf8e8c88a75\r\n\r\ncc: @ericstj @Jozkee @jeffhandley @stephentoub @terrajobst @mkArtakMSFT @safern @GrabYourPitchforks ","Url":"https://github.com/dotnet/corefx/pull/42889","RelatedDescription":"Closed or merged PR \"Add new System.Net.Http.Json project/namespace\" (#42889)"},{"Id":"570071235","IsPullRequest":true,"CreatedAt":"2020-03-26T00:52:58","Actor":"omajid","Number":"42871","RawContent":null,"Title":"[release/3.1] Add Fedora 33 runtime ids","State":"closed","Body":"Fedora 32 is gearing up for release[1], and in-development version of Fedora has been officially labelled as being Fedora 33:\r\n\r\n    $ podman run -it fedora:33 cat /etc/os-release\r\n    NAME=Fedora\r\n    VERSION=\"33 (Container Image)\"\r\n    ID=fedora\r\n    VERSION_ID=33\r\n    VERSION_CODENAME=\"\"\r\n    PLATFORM_ID=\"platform:f33\"\r\n    PRETTY_NAME=\"Fedora 33 (Container Image)\"\r\n    ANSI_COLOR=\"0;34\"\r\n    LOGO=fedora-logo-icon\r\n    CPE_NAME=\"cpe:/o:fedoraproject:fedora:33\"\r\n    HOME_URL=\"https://fedoraproject.org/\"\r\n    DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/\"\r\n    SUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\n    BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\n    REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\n    REDHAT_BUGZILLA_PRODUCT_VERSION=rawhide\r\n    REDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\n    REDHAT_SUPPORT_PRODUCT_VERSION=rawhide\r\n    PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\n    VARIANT=\"Container Image\"\r\n    VARIANT_ID=container\r\n\r\n[1] https://fedorapeople.org/groups/schedule/f-32/f-32-key-tasks.html\r\n\r\nThis is a backport of https://github.com/dotnet/runtime/pull/32752","Url":"https://github.com/dotnet/corefx/pull/42871","RelatedDescription":"Closed or merged PR \"[release/3.1] Add Fedora 33 runtime ids\" (#42871)"},{"Id":"587999955","IsPullRequest":true,"CreatedAt":"2020-03-25T22:24:07","Actor":"dotnet-maestro[bot]","Number":"42891","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200325.1\r\n- **Date Produced**: 3/25/2020 7:29 PM\r\n- **Commit**: 9d9b5795356a138fb834dc4b7ff7141002904244\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20175.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20175.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20175.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42891","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42891)"},{"Id":"578554116","IsPullRequest":true,"CreatedAt":"2020-03-25T21:57:37","Actor":"saurabh500","Number":"42878","RawContent":null,"Title":"Porting OleDb transaction API failure fix","State":"closed","Body":"#### Description\r\n\r\nPort the changes from PR https://github.com/dotnet/runtime/pull/32573\r\nThe changes address https://github.com/dotnet/runtime/issues/31177 and https://github.com/dotnet/runtime/issues/32405\r\n\r\nThe problem manifests in the usage of OleDbTransaction throwing exceptions in System.Data.OleDb. This is caused because a duplicate interface but with incorrect Guid for ITransaction.\r\nThe fix removes the duplicate interface and also releases the COM objects once they have been used.\r\n\r\n#### Customer Impact\r\n\r\nThe customers will be able to use OleDbTransaction.Commit() and OleDbTransaction.RollBack(), successfully. These APIs are important to perform actions on OleDb providers with transaction support.\r\nAlso OleDbConnection.Dispose() would call OleDbTransaction.Rollback(), which used to fail silently underneath. These above issues would be addressed for customer.\r\n\r\n\r\n#### Regression?\r\n\r\nThis is not a regression, and the bug had existed since the beginning. \r\n\r\n#### Risk\r\n\r\nNo risks identified.\r\n\r\n#### Packaging changes reviewed? (if a libraries change) \r\n\r\nPackage changes added after getting guidance from @anipik","Url":"https://github.com/dotnet/corefx/pull/42878","RelatedDescription":"Closed or merged PR \"Porting OleDb transaction API failure fix\" (#42878)"},{"Id":"570892707","IsPullRequest":true,"CreatedAt":"2020-03-25T21:55:32","Actor":"vcsjones","Number":"42873","RawContent":null,"Title":"[release/3.1] Permit incorrectly DER sorted SET for decoding X500 names.","State":"closed","Body":"This is a cherry-pick of https://github.com/dotnet/runtime/commit/b12c90179f115f9b7979263da529921607412f6d to port the fix from dotnet/runtime#32558 in to the 3.1 release branch.\r\n\r\n/cc @bartonjs @danmosemsft \r\n\r\n## Description\r\n\r\n`X500DistinguishedName` values that do not follow the specified sort order decode as the empty string on .NET Core 3.0+ on Linux, but work on Windows.   This change makes the Linux build match the Windows behavior.\r\n\r\nThe fix is to simply skip a specific data conformance validation check, which only has a visible impact on non-conforming values now being accepted.\r\n\r\n## Customer Impact\r\n\r\nReported by Pivotal. Customers that encounter X.509 certificates with a subject name, or issuer name, that contains a segment that is not canonically encoded will see that subject name (or issuer name) as the empty string on .NET Core 3.1 on Linux.\r\n\r\nThis problem only applies to X500DistinguishedName values that use a \"multi-RDN\" value, which is not very common (the CA/Browser forum Baseline Recommendations do not explicitly say to not use this encoding, but their description of distinguished name values uses \"single-value\" terminology).\r\n\r\n## Regression\r\n\r\nYes, from 2.1.  The underlying data reader was replaced during 3.0, with the new reader validating by default and the old reader not validating.\r\n\r\n### Testing\r\n\r\nAdded a unit test to verify that non-conforming data decodes the same on all platforms.\r\n\r\n## Risk\r\n\r\n**Low**.  The change merely bypasses a conformance check, explicitly choosing to accept non-conforming data. The unit tests confirms that the same answer is given for Windows and Linux.","Url":"https://github.com/dotnet/corefx/pull/42873","RelatedDescription":"Closed or merged PR \"[release/3.1] Permit incorrectly DER sorted SET for decoding X500 names.\" (#42873)"},{"Id":"574199017","IsPullRequest":true,"CreatedAt":"2020-03-25T21:14:34","Actor":"microkatz","Number":"42877","RawContent":null,"Title":"[release/3.1] Fix HTTP Digest authentication","State":"closed","Body":"This is a port of https://github.com/dotnet/runtime/pull/32983. Original issue: https://github.com/dotnet/runtime/issues/32943\r\n\r\n#### Description\r\n\r\nThis bug was found in testing http requests with a Bosch IP Camera that supports the ONVIF protocol. Bosch is a large manufacturer in the realm of ONVIF compliant cameras. A Bosch camera that was being tested sent a digest challenge with the opaque value as an empty-string. The current dotnet core library fails to use the correct digest scheme because it breaks on parsing the empty string. \r\n\r\n#### Customer Impact\r\n\r\nWithout this fix, customers can not communicate with the Bosch IP Cameras which use HTTP Digest communications.\r\n\r\n#### Regression?\r\n\r\nNo\r\n\r\n#### Packaging reviewed?\r\n\r\nChange needed to System.Net.Http.dll which is part of the shared framework Microsoft.NETCore.App package.\r\n\r\n#### Risk\r\n\r\n**Low**, covered by unit tests","Url":"https://github.com/dotnet/corefx/pull/42877","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix HTTP Digest authentication\" (#42877)"},{"Id":"583846914","IsPullRequest":true,"CreatedAt":"2020-03-25T21:07:45","Actor":"bartonjs","Number":"42881","RawContent":null,"Title":"[release/3.1] Data loss - Don't delete private keys detected from SerializedCert imports","State":"closed","Body":"Port of https://github.com/dotnet/runtime/commit/2bcf71309065044c291de38809912b14437ee804","Url":"https://github.com/dotnet/corefx/pull/42881","RelatedDescription":"Closed or merged PR \"[release/3.1] Data loss - Don't delete private keys detected from SerializedCert imports\" (#42881)"},{"Id":"569218016","IsPullRequest":true,"CreatedAt":"2020-03-25T20:47:55","Actor":"buyaa-n","Number":"42870","RawContent":null,"Title":"[release/3.1] Remove local header compressed/uncompressed length validations","State":"closed","Body":"Port from https://github.com/dotnet/runtime/pull/32149. Fixes https://github.com/dotnet/runtime/issues/1094\r\n\r\n### Description\r\nWe had and issue https://github.com/dotnet/runtime/issues/27741 reported that .NET core ZipArchive API extracting a tampered zip file without any error, where Uncompressed size was tampered to have much smaller size than real/extracted size. When trying to decompress the tampered zip with different tools some were throwing error, some just restricting decompressed output by given uncompressed size. As it could cause security issue we added strict validation of Compressed and Uncompressed size to throw if it unmatched, also limited the decompressed output by uncompressed size.  \r\n\r\n### Customer Impact\r\nThrowing error for unmatched compressed/uncompressed sizes in local header vs central directory record was a breaking change. Turns out zip format specification, especially file local header format is not that clear in some area and not strictly followed by different zip producing tools. Several customers complaining that they cannot read a zip anymore which they were able to read before 3.0. As validation was not mandatory when we restricting the output stream by uncompressed size we are removing the validation we added in 3.0\r\n\r\n### Regression\r\nNo. \r\nAs we are removing a restriction, nothing added so no regression should happen\r\n \r\n### Testing\r\nRemoved related tests, added new test for original bug\r\n\r\n### Risk\r\nCustomer might read corrupted zip file with updated compressed/uncompressed size from real size, but as we have appropriate restriction for reading compressed stream and output decompressed stream that wouldn't be a big issue.\r\n\r\ncc @ericstj","Url":"https://github.com/dotnet/corefx/pull/42870","RelatedDescription":"Closed or merged PR \"[release/3.1] Remove local header compressed/uncompressed length validations\" (#42870)"},{"Id":"572283938","IsPullRequest":true,"CreatedAt":"2020-03-25T20:40:54","Actor":"bartonjs","Number":"42875","RawContent":null,"Title":"[release/3.1] Suppress the GrayListedLeaf error code on macOS X509Chain","State":"closed","Body":"This is a port of https://github.com/dotnet/runtime/pull/32895.\r\n\r\n#### Description\r\n\r\nRecent change to macOS has caused a new error code to appear during X509Chain building. Since this error code has been identified as not having impact on the .NET X509Chain class, ignore it.\r\n\r\n#### Customer Impact\r\n\r\nWithout this fix, customers who upgrade their macOS version and build X509Chains against certificates/certificate-authorities which result in the GrayListedLeaf code will get a `CryptographicException` due to the unmapped error.\r\n\r\n#### Regression?\r\n\r\nNo, reaction to OS update.\r\n\r\n#### Packaging reviewed?\r\n\r\nRequired shim library, no packaging impact.\r\n\r\n#### Risk\r\n\r\n**Low**, covered by unit tests (which originally discovered the issue).","Url":"https://github.com/dotnet/corefx/pull/42875","RelatedDescription":"Closed or merged PR \"[release/3.1] Suppress the GrayListedLeaf error code on macOS X509Chain\" (#42875)"},{"Id":"587358274","IsPullRequest":true,"CreatedAt":"2020-03-25T18:35:42","Actor":"Anipik","Number":"42886","RawContent":null,"Title":"update branding done for 3.1.4","State":"closed","Body":"- updated branding\r\n- disable stable builds to produce suffix netcoreapp package\r\n- clear packages.build\r\n- updated packageindex","Url":"https://github.com/dotnet/corefx/pull/42886","RelatedDescription":"Closed or merged PR \"update branding done for 3.1.4\" (#42886)"},{"Id":"582831241","IsPullRequest":true,"CreatedAt":"2020-03-25T17:40:53","Actor":"Jozkee","Number":"42879","RawContent":null,"Title":"[release/3.1] Add new System.Net.Http.Json project/namespace","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/33459\r\n**Note that the runtime PR is still open, so please add all feedback that is not related to release/3.1 there** (all new commits on that PR will be ported into here as well)\r\n# Description\r\nSerializing and deserializing JSON payloads from the network is a very common operation for clients, especially in the upcoming Blazor environment. Right now, sending a JSON payload to the server requires multiple lines of code, which will be a major speed bump for those customers. We'd like to add extension methods on top of HttpClient that allows doing those operations with a single method call.\r\n\r\nThis creates a package that targets netstandard2.0 only. \r\nThis does not ship inbox in this branch.\r\n\r\n# Customer Impact\r\nThis provides a solution that serves as a replacement of the old-fashioned [Microsoft.AspNet.WebApi.Client](https://www.nuget.org/packages/Microsoft.AspNet.WebApi.Client), that is compatible with netstandard2.0 and can be used by Blazor WebAssembly apps.\r\n\r\n# Regression\r\nNone. \r\nThis is a brand new project.\r\n\r\n# Testing\r\nAdded unit tests to verify correct behavior of API surface.\r\nAdded unit tests to verify correct behavior of transcoding semantics.\r\n\r\n# Risk\r\nThis is a whole new API that has not even shipped as a preview in runtime, and it is still on active development. ","Url":"https://github.com/dotnet/corefx/pull/42879","RelatedDescription":"Closed or merged PR \"[release/3.1] Add new System.Net.Http.Json project/namespace\" (#42879)"},{"Id":"587368089","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:47","Actor":"Anipik","Number":"42887","RawContent":null,"Title":"branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42887","RelatedDescription":"Closed or merged PR \"branding for 2.1.18\" (#42887)"},{"Id":"587757768","IsPullRequest":true,"CreatedAt":"2020-03-25T14:56:08","Actor":"alnikola","Number":"42888","RawContent":null,"Title":"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler","State":"open","Body":"This is port of dotnet/runtime#33158.\r\n\r\n**Description**\r\nPre-release WinHTTP's version supports client certificate-based authentication over HTTP/2, but the feature must be explicitly opted-in. PR sets WINHTTP_OPTION_ENABLE_HTTP2_PLUS_CLIENT_CERT to TRUE before invoking WinHttpConnect if the request's protocol is HTTP/2 and scheme is HTTPS.\r\n\r\n**Customer impact**\r\nWithout this change, it's not possible to use client certificate-based authentication on HTTP/2 in .Net Framework 4.7.2 and 4.8.\r\n\r\n**Regression?**\r\nNo\r\n\r\n**Packaging review**\r\nChange affects System.Net.Http.WinHttpHandler.dll which is distributed in System.Net.Http.WinHttpHandler package.\r\n\r\n**Risk**\r\n**Low**, covered by functional tests in master branch, but only manually tested for 3.1","Url":"https://github.com/dotnet/corefx/pull/42888","RelatedDescription":"Open PR \"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler\" (#42888)"},{"Id":"587298720","IsPullRequest":true,"CreatedAt":"2020-03-25T00:26:50","Actor":"dotnet-maestro-bot","Number":"42885","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28619-01, servicing-28619-01, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42885","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28619-01, servicing-28619-01, stable, respectively (release/2.1)\" (#42885)"},{"Id":"587197172","IsPullRequest":true,"CreatedAt":"2020-03-24T22:36:16","Actor":"safern","Number":"42884","RawContent":null,"Title":"Clear package list for 3.1-blazor branch","State":"closed","Body":"cc: @joperezr @ericstj @Anipik ","Url":"https://github.com/dotnet/corefx/pull/42884","RelatedDescription":"Closed or merged PR \"Clear package list for 3.1-blazor branch\" (#42884)"},{"Id":"586620784","IsPullRequest":true,"CreatedAt":"2020-03-24T07:09:20","Actor":"safern","Number":"42883","RawContent":null,"Title":"Update branding for release/3.1-blazor","State":"closed","Body":"cc: @joperezr @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42883","RelatedDescription":"Closed or merged PR \"Update branding for release/3.1-blazor\" (#42883)"},{"Id":"586614324","IsPullRequest":true,"CreatedAt":"2020-03-24T01:02:01","Actor":"safern","Number":"42882","RawContent":null,"Title":"Test PR Builds in new branch","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42882","RelatedDescription":"Closed or merged PR \"Test PR Builds in new branch\" (#42882)"},{"Id":"570943287","IsPullRequest":true,"CreatedAt":"2020-02-26T00:10:21","Actor":"cston","Number":"42874","RawContent":null,"Title":"[release/3.1] Improve Expression.Lambda<TDelegate> performance (dotnet/runtime#32768)","State":"open","Body":"Port of https://github.com/dotnet/runtime/pull/32768\r\nFixes https://github.com/dotnet/runtime/issues/32767\r\n\r\n### Description\r\nAn `Expression` lambda delegate cache was added in .NET Core 2.0. If there are many calls to `Expression.Lambda<TDelegate>()` overloads with distinct delegate types which result in cache misses, the result is a performance regression. \r\n\r\n### Customer Impact\r\nPerformance regression with many calls to `Expression.Lambda<TDelegate>()` with distinct delegate types. Customer reported this impact in a migration from .NET Framework to .NET Core.\r\n\r\n### Packaging Impact\r\nNone\r\n\r\n### Regression\r\nRegression from .NET Core 1.0, and .NET Framework.\r\n \r\n### Testing\r\nSee benchmark testing in https://github.com/dotnet/runtime/issues/32767.\r\n\r\n### Risk\r\nLow. The change avoids the cache and allocates a distinct `Expression<TDelegate>` each time.\r\n\r\ncc @ericstj","Url":"https://github.com/dotnet/corefx/pull/42874","RelatedDescription":"Open PR \"[release/3.1] Improve Expression.Lambda<TDelegate> performance (dotnet/runtime#32768)\" (#42874)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"592102339","IsPullRequest":true,"CreatedAt":"2020-04-02T03:38:20","Actor":"dotnet-bot","Number":"42990","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/42990","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#42990)"},{"Id":"592332681","IsPullRequest":false,"CreatedAt":"2020-04-02T03:30:05","Actor":"davkean","Number":"43011","RawContent":null,"Title":"Add analyzer that catches properties that can be made readonly","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\nIt would be nice to have an analyzer that catches that the following property can be made readonly. Hit this on a [PR](https://devdiv.visualstudio.com/DevDiv/_git/CPS/pullrequest/239223?path=%2Fsrc%2FMicrosoft.VisualStudio.ProjectSystem.Implementation%2FBuild%2FCommonBuildPropertiesProvider.cs&_a=overview) just recently.\r\n\r\n``` C#\r\n\r\n    public class Foo\r\n    {\r\n        public Foo(string property)\r\n        {\r\n            Property = property;\r\n        }\r\n        \r\n        private string Property\r\n        {\r\n            get;\r\n            set;  // <!-- Can remove\r\n        }\r\n\r\n        public void Method()\r\n        {\r\n            Console.WriteLine(Property);\r\n        }\r\n    }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/43011","RelatedDescription":"Open issue \"Add analyzer that catches properties that can be made readonly\" (#43011)"},{"Id":"592309115","IsPullRequest":true,"CreatedAt":"2020-04-02T02:12:17","Actor":"jmarolf","Number":"43010","RawContent":null,"Title":"remove test that aserts .NET Standard should be prefered over .NET Framework","State":"open","Body":"fixes #42772","Url":"https://github.com/dotnet/roslyn/pull/43010","RelatedDescription":"Open PR \"remove test that aserts .NET Standard should be prefered over .NET Framework\" (#43010)"},{"Id":"592306042","IsPullRequest":true,"CreatedAt":"2020-04-02T02:01:04","Actor":"tmat","Number":"43009","RawContent":null,"Title":"Simplify analyzer assembly loaders, analyzer reference serialization","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43009","RelatedDescription":"Open PR \"Simplify analyzer assembly loaders, analyzer reference serialization\" (#43009)"},{"Id":"592303715","IsPullRequest":false,"CreatedAt":"2020-04-02T01:52:11","Actor":"tmat","Number":"43008","RawContent":null,"Title":"Move logic that populates Solution Explorer Analyzer node OOP","State":"open","Body":"- Do not load analyzers in devenv \r\n  [GetFilteredAnalyzers](https://github.com/dotnet/roslyn/blob/master/src/VisualStudio/Core/SolutionExplorerShim/AnalyzerItem/AnalyzerItemSource.cs#L207) loads analyzers. \r\n\r\n- Do not access Solution snapshot\r\n  Move all logic that accesses Solution snapshot or loads analyzers OOP and call remote service from Solution Explorer impl to retrieve the data.\r\n\r\n- Remove VisualStudioAnalyzer\r\n  It won't be needed once the above is implemented.","Url":"https://github.com/dotnet/roslyn/issues/43008","RelatedDescription":"Open issue \"Move logic that populates Solution Explorer Analyzer node OOP\" (#43008)"},{"Id":"592298391","IsPullRequest":true,"CreatedAt":"2020-04-02T01:32:25","Actor":"333fred","Number":"43007","RawContent":null,"Title":"Function Pointer Conversions","State":"open","Body":"Support all conversions involving function pointers. @dotnet/roslyn-compiler @AlekseyTs for review.","Url":"https://github.com/dotnet/roslyn/pull/43007","RelatedDescription":"Open PR \"Function Pointer Conversions\" (#43007)"},{"Id":"592119674","IsPullRequest":true,"CreatedAt":"2020-04-02T01:03:00","Actor":"gafter","Number":"42991","RawContent":null,"Title":"Merge master to features/target-typing","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/42991","RelatedDescription":"Closed or merged PR \"Merge master to features/target-typing\" (#42991)"},{"Id":"592282837","IsPullRequest":true,"CreatedAt":"2020-04-02T00:36:55","Actor":"JoeRobich","Number":"43006","RawContent":null,"Title":"Set Microsoft.CodeAnalysis.Analyzers package to a release version","State":"open","Body":"As mentioned in https://github.com/dotnet/roslyn/issues/42493#event-3190057875, The 3.5.0 NuGet packages still referenced a pre-release Analyzer package. This seems to install fine for .NET Core and .NET Standard projects but fails to install for .NET Framework. This PR updates the reference to a release version and decouples it from the RoslynAnalyzersVersion property.","Url":"https://github.com/dotnet/roslyn/pull/43006","RelatedDescription":"Open PR \"Set Microsoft.CodeAnalysis.Analyzers package to a release version\" (#43006)"},{"Id":"592282147","IsPullRequest":true,"CreatedAt":"2020-04-02T00:34:29","Actor":"gafter","Number":"43005","RawContent":null,"Title":"Add a test to demonstrate that an issue has been addressed.","State":"open","Body":"Fixes #38665","Url":"https://github.com/dotnet/roslyn/pull/43005","RelatedDescription":"Open PR \"Add a test to demonstrate that an issue has been addressed.\" (#43005)"},{"Id":"592273504","IsPullRequest":true,"CreatedAt":"2020-04-02T00:04:56","Actor":"dpoeschl","Number":"43004","RawContent":null,"Title":"Find concrete types for type parameters in completion off of lambda parameters","State":"open","Body":"Fixes #42997","Url":"https://github.com/dotnet/roslyn/pull/43004","RelatedDescription":"Open PR \"Find concrete types for type parameters in completion off of lambda parameters\" (#43004)"},{"Id":"592272812","IsPullRequest":true,"CreatedAt":"2020-04-02T00:02:47","Actor":"dotnet-bot","Number":"43003","RawContent":null,"Title":"Merge release/dev16.7-preview1 to release/dev16.7-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.7-preview1 into release/dev16.7-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.7-preview1-to-release/dev16.7-preview1-vs-deps\ngit reset --hard upstream/release/dev16.7-preview1-vs-deps\ngit merge upstream/release/dev16.7-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.7-preview1-to-release/dev16.7-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43003","RelatedDescription":"Open PR \"Merge release/dev16.7-preview1 to release/dev16.7-preview1-vs-deps\" (#43003)"},{"Id":"592264570","IsPullRequest":true,"CreatedAt":"2020-04-01T23:35:04","Actor":"genlu","Number":"43002","RawContent":null,"Title":"Return partial results if cache/index for unimported items are not fully populated","State":"open","Body":"Per discussion in [this PR](https://github.com/dotnet/roslyn/pull/42585#discussion_r395359722), allow import completion returns partial results when cache/index isn't fully populated.  \r\n\r\nWe expect this to be a relatively rare situation. For types, this practically means the very first time completion is triggered, the only unimported items shown would be from the current project (w/o any from its references.) For extension methods, the result depends on the availability of persisted data and/or the progress of solution crawler. For example, if persisted data is up-to-date for the solution, we won't run into this scenario.\r\n\r\nThe behavior before this change is not showing any unimported items plus setting completion list's expander button as unselected to indicate this. If user clicked the expander in the same completion session, it would ensure the return of a complete list of unimported items. A background task to force creating the cache would be triggered as well to avoid running into this again, which is still the case after this change. \r\n\r\nOne down side of this change is the expander button can no longer be used as an indication of completeness of the items or as a way to ask for a complete list. With this change, if only a subset of unimported items is returned, the expander will be shown as selected, de-select and then re-select it in the same session would give you the same result (this is the design of current expander API). Dismiss and trigger completion again is likely to have all the items returned(due to the work done by background task).","Url":"https://github.com/dotnet/roslyn/pull/43002","RelatedDescription":"Open PR \"Return partial results if cache/index for unimported items are not fully populated\" (#43002)"},{"Id":"592254433","IsPullRequest":false,"CreatedAt":"2020-04-01T23:05:32","Actor":"davkean","Number":"43001","RawContent":null,"Title":"\"Introduce using statement\" should remove unneeded \"try...finally...dispose\"","State":"open","Body":"**Version Used**: \r\n\r\nIt would be nice if \"Introduce using statement\" or a new code fix simplified the dispose statement:\r\n\r\n**Steps to Reproduce**:\r\n\r\n``` C#\r\n            var user = this.vsReferenceManagerUserFactory.CreateReferenceManagerUser(); // <--- Introduce using statement\r\n            try\r\n            {\r\n                string title = string.Format(CultureInfo.CurrentCulture, Strings.AddReferenceDialogTitle, Path.GetFileNameWithoutExtension(this.UnconfiguredProject.FullPath));\r\n                this.referenceManager.Value.ShowReferenceManager(\r\n                    user,\r\n                    title,\r\n                    \"VS.ReferenceManager\",\r\n                    initialProviderGuid ?? user.InitialProvider,\r\n                    fForceShowDefaultProvider: initialProviderGuid.HasValue);\r\n            }\r\n            finally\r\n            {\r\n                user.Dispose();\r\n            }\r\n```\r\n\r\n**Expected Behavior**:\r\n``` C#\r\n            using (var user = this.vsReferenceManagerUserFactory.CreateReferenceManagerUser())\r\n            {\r\n                string title = string.Format(CultureInfo.CurrentCulture, Strings.AddReferenceDialogTitle, Path.GetFileNameWithoutExtension(this.UnconfiguredProject.FullPath));\r\n                this.referenceManager.Value.ShowReferenceManager(\r\n                    user,\r\n                    title,\r\n                    \"VS.ReferenceManager\",\r\n                    initialProviderGuid ?? user.InitialProvider,\r\n                    fForceShowDefaultProvider: initialProviderGuid.HasValue);\r\n            }\r\n```\r\n\r\n**Actual Behavior**:\r\n``` C#\r\n            using (var user = this.vsReferenceManagerUserFactory.CreateReferenceManagerUser())\r\n            {\r\n                try\r\n                {\r\n                    string title = string.Format(CultureInfo.CurrentCulture, Strings.AddReferenceDialogTitle, Path.GetFileNameWithoutExtension(this.UnconfiguredProject.FullPath));\r\n                    this.referenceManager.Value.ShowReferenceManager(\r\n                        user,\r\n                        title,\r\n                        \"VS.ReferenceManager\",\r\n                        initialProviderGuid ?? user.InitialProvider,\r\n                        fForceShowDefaultProvider: initialProviderGuid.HasValue);\r\n                }\r\n                finally\r\n                {\r\n                    user.Dispose();\r\n                }\r\n            }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/43001","RelatedDescription":"Open issue \"\"Introduce using statement\" should remove unneeded \"try...finally...dispose\"\" (#43001)"},{"Id":"592101607","IsPullRequest":true,"CreatedAt":"2020-04-01T22:53:54","Actor":"dotnet-bot","Number":"42989","RawContent":null,"Title":"Merge master to release/dev16.7-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.7-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.7-preview1\ngit reset --hard upstream/release/dev16.7-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.7-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/42989","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.7-preview1\" (#42989)"},{"Id":"592243539","IsPullRequest":true,"CreatedAt":"2020-04-01T22:34:35","Actor":"mavasani","Number":"43000","RawContent":null,"Title":"Port ConvertAnonymousTypeToTuple to shared layer","State":"open","Body":"First commit: file moves\r\nSecond commit: xlf and resx changes","Url":"https://github.com/dotnet/roslyn/pull/43000","RelatedDescription":"Open PR \"Port ConvertAnonymousTypeToTuple to shared layer\" (#43000)"},{"Id":"592243287","IsPullRequest":true,"CreatedAt":"2020-04-01T22:33:54","Actor":"jcouv","Number":"42999","RawContent":null,"Title":"Generate friendly syntax for nint/nuint","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/42986\r\n\r\nTaggging @jasonmalinowski @CyrusNajmabadi @mavasani for review.\r\nTagging @cston FYI \r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/38821","Url":"https://github.com/dotnet/roslyn/pull/42999","RelatedDescription":"Open PR \"Generate friendly syntax for nint/nuint\" (#42999)"},{"Id":"592242276","IsPullRequest":false,"CreatedAt":"2020-04-01T22:31:12","Actor":"AlekseyTs","Number":"42998","RawContent":null,"Title":"Find All References/Goto Implementation for a C# declaration doesn't find information in VB code ","State":"open","Body":"**Version Used**: \r\nMicrosoft Visual Studio Enterprise 2019 Int Preview\r\nVersion 16.6.0 Preview 3.0 [29930.152.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Find all references or Goto Implementation on \r\n```internal abstract void ComputeDeclarationsInSpan(TextSpan span, bool getSymbol, ArrayBuilder<DeclarationInfo> builder, CancellationToken cancellationToken);``` in SemanticModel.\r\n\r\n**Expected Behavior**:\r\n\r\nShould find an override in VB compiler\r\n\r\n**Actual Behavior**:\r\n\r\nOnly an override in C# compiler is found.\r\n\r\n![image](https://user-images.githubusercontent.com/10522107/78192722-8d3a9b00-742d-11ea-8501-26678ab3b107.png)\r\n\r\n![image](https://user-images.githubusercontent.com/10522107/78192788-b8bd8580-742d-11ea-8666-a94985b8876c.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/42998","RelatedDescription":"Open issue \"Find All References/Goto Implementation for a C# declaration doesn't find information in VB code \" (#42998)"},{"Id":"592221734","IsPullRequest":false,"CreatedAt":"2020-04-01T21:43:05","Actor":"ajaybhargavb","Number":"42997","RawContent":null,"Title":"Regression: Linq.Expressions infers correct type but doesn't provide completions","State":"open","Body":"This used to work before and it is now breaking some primary Razor tag helper completion scenarios.\r\n\r\n**Version Used**: \r\nSDK: 3.1.300-preview-015048\r\nVSCode version: 1.43.2\r\nC# extension version: 1.21.16\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new console app\r\n2. Open it in VS Code and replace `Program.cs` content with the following content,\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq.Expressions;\r\n\r\nnamespace ModelExpressionTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var obj = new ModelExpression();\r\n            var list = new List<Product>();\r\n\r\n            // Hovering over 'arg' shows that it is of type 'Product' but it doesn't show 'MyProperty' in the completion list.\r\n            obj.Create(list, arg => arg.);\r\n            //                         ^ - invoke completions here\r\n\r\n            // This works as expected\r\n            obj.Create<Product>(list, arg => arg.);\r\n        }\r\n    }\r\n\r\n    class ModelExpression\r\n    {\r\n        public object Create<T>(List<T> list, Expression<Action<T>> expression)\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    class Product\r\n    {\r\n        public int MyProperty { get; set; }\r\n    }\r\n}\r\n\r\n```\r\n\r\n3. Invoke completions at the position marked by the comments\r\n\r\n**Expected Behavior**:\r\n`MyProperty` is part of the completion list\r\n![image](https://user-images.githubusercontent.com/1579269/78189088-44cbaf00-7426-11ea-95d5-6748a0ba7707.png)\r\n\r\n**Actual Behavior**:\r\nNo `MyProperty` in completion list\r\n![image](https://user-images.githubusercontent.com/1579269/78189121-51e89e00-7426-11ea-955b-0aa296d49a8c.png)\r\n\r\nNote: \r\nHovering over `arg` shows that it is inferred to be the correct type (`Product`) but somehow completions don't reflect that,\r\n![image](https://user-images.githubusercontent.com/1579269/78189288-9d9b4780-7426-11ea-8987-f5bd0d2f5520.png)\r\n\r\nAlso note, this is not VS Code specific. I noticed the same behavior in VS as well.","Url":"https://github.com/dotnet/roslyn/issues/42997","RelatedDescription":"Open issue \"Regression: Linq.Expressions infers correct type but doesn't provide completions\" (#42997)"},{"Id":"592213528","IsPullRequest":true,"CreatedAt":"2020-04-01T21:25:03","Actor":"cston","Number":"42996","RawContent":null,"Title":"Additional tests for native integers","State":"open","Body":"Additional tests requested in earlier PRs.","Url":"https://github.com/dotnet/roslyn/pull/42996","RelatedDescription":"Open PR \"Additional tests for native integers\" (#42996)"},{"Id":"592148038","IsPullRequest":false,"CreatedAt":"2020-04-01T19:23:08","Actor":"vsfeedback","Number":"42994","RawContent":null,"Title":"Accessing an unitialized array throws a NullReferenceException but at the wrong line","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/969914/accessing-an-unitialized-array-throws-a-nullrefere.html)._\n\n---\nConsider the following code to reproduce:\n\n```\nstatic string[] SomeArray = null;\n\nstatic void Main(string[] args)\n{\n    SomeArray[1] = string. Empty; // Line #15\n    DoSomething(); // Line #16\n}\nstatic void DoSomething() { }\n\n```\n\nObviously, `SomeArray` is never initialized and trying to access it (at line #15) would throw a NullReferenceException. However, the debugger shows the exception at the next line (line #16) and the stack trace is as follows:\n\n`>\tConsoleApp1.exe! ConsoleApp1.Program.Main(string[] args) Line 16\tC#`\n\nI was able to reproduce this on both VS2017 and VS2019.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 3/31/2020, 00:55 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/42994","RelatedDescription":"Open issue \"Accessing an unitialized array throws a NullReferenceException but at the wrong line\" (#42994)"},{"Id":"592142880","IsPullRequest":false,"CreatedAt":"2020-04-01T19:13:52","Actor":"vsfeedback","Number":"42993","RawContent":null,"Title":"Interface method Implementation is not placing in correct order","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/967532/interface-method-implementation-is-not-placing-in.html)._\n\n---\n<p>Let say I have the following interface:</p><pre>public interface IEmployeeService\n{\n        Task&lt;List&lt;EmployeeDetailsViewModel&gt;&gt; GetEmployeeListAsync();\n        Task&lt;EmployeeDetailsViewModel&gt; GetEmployeeDetailsAsync(int employeeId);\n        Task CreateEmployeeAsync(CreateEmployeeViewModel createEmployeeViewModel);\n        Task UpdateEmplyeeAsync(UpdateEmployeeViewModel updateEmployeeViewModel);\n        Task DeleteEmployee(int employeeId);    \n}</pre><p>Now if I implement the interface with visual studio tool tip it implementing as follow:</p><pre>public class EmployeeService : IEmployeeService\n{\n        public Task CreateEmployeeAsync(CreateEmployeeViewModel createEmployeeViewModel)\n        {\n            throw new NotImplementedException();\n        }\n\n        public Task DeleteEmployee(int employeeId)\n        {\n            throw new NotImplementedException();\n        }\n\n        public Task&lt;EmployeeDetailsViewModel&gt; GetEmployeeDetailsAsync(int employeeId)\n        {\n            throw new NotImplementedException();\n        }\n\n        public Task&lt;List&lt;EmployeeDetailsViewModel&gt;&gt; GetEmployeeListAsync()\n        {\n            throw new NotImplementedException();\n        }\n\n        public Task UpdateEmplyeeAsync(UpdateEmployeeViewModel updateEmployeeViewModel)\n        {\n            throw new NotImplementedException();\n        }\n}\n\nLook at methods order in the interface has been broken in the implantation.</pre>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 3/30/2020, 00:24 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/42993","RelatedDescription":"Open issue \"Interface method Implementation is not placing in correct order\" (#42993)"},{"Id":"592123809","IsPullRequest":false,"CreatedAt":"2020-04-01T18:39:06","Actor":"allisonchou","Number":"42992","RawContent":null,"Title":"GetDeclaredSymbol's return type is not annotated as a nullable symbol","State":"open","Body":"Per this [comment](https://github.com/dotnet/roslyn/pull/42971#discussion_r401300134), GetDeclaredSymbol is in a file that is nullable enabled and the method's comments indicate that it can return null, however the return type is not annotated as a nullable symbol.","Url":"https://github.com/dotnet/roslyn/issues/42992","RelatedDescription":"Open issue \"GetDeclaredSymbol's return type is not annotated as a nullable symbol\" (#42992)"},{"Id":"592099685","IsPullRequest":false,"CreatedAt":"2020-04-01T17:58:00","Actor":"jcouv","Number":"42988","RawContent":null,"Title":"Recognize references for `nint` and `nuint`","State":"open","Body":"- FindAllReferences/GoToDefinition treats nint and IntPtr as a single type. I assume that's okay (similar behavior for tuples).\r\n![image](https://user-images.githubusercontent.com/12466233/78170128-58b3e880-7407-11ea-8874-2a7fda8318b4.png)\r\n- We're currently not highlighting correctly when placing cursor on `nint` (should highlight other `nint` syntax, but only highlights `IntPtr` syntax).\r\n- QuickInfo on type shows xml doc from underlying type, which seems incorrect, although minor.\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/38821","Url":"https://github.com/dotnet/roslyn/issues/42988","RelatedDescription":"Open issue \"Recognize references for `nint` and `nuint`\" (#42988)"},{"Id":"592098104","IsPullRequest":true,"CreatedAt":"2020-04-01T17:55:20","Actor":"jaredpar","Number":"42987","RawContent":null,"Title":"Disable component governance","State":"open","Body":"Disable component governance in our CI builds. These builds are not\r\nshipping nor are they services hence they don't need governance.\r\n\r\nThese injected tasks just add extra time to our build, and in some cases\r\nproduce spurious warnings. Removing as it's unnecessary to incur this\r\ncost","Url":"https://github.com/dotnet/roslyn/pull/42987","RelatedDescription":"Open PR \"Disable component governance\" (#42987)"},{"Id":"592098031","IsPullRequest":false,"CreatedAt":"2020-04-01T17:55:14","Actor":"jcouv","Number":"42986","RawContent":null,"Title":"Generating syntax for `nint` and `nuint` should use those keywords","State":"open","Body":"I'm listing a number of scenarios that are broken in similar ways. Hopefully they can be fixed with a single stone. If not, feel free to split this issue as necessary.\r\n\r\n- ExplicitType `var x = (nint)0;` produces `IntPtr` instead of `nint`.\r\n- Same for IntroduceLocal, GenerateImplementation (implementing an interface), GenerateOverride (typing `override` and using completion).\r\n- Same ExtractMethod, ExtractLocalFunction, AddParameter. Those also generate `IntPtr` parameters.\r\n- Haven't tested MetadataAsSource, but it is likely the same.\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/38821","Url":"https://github.com/dotnet/roslyn/issues/42986","RelatedDescription":"Open issue \"Generating syntax for `nint` and `nuint` should use those keywords\" (#42986)"},{"Id":"592026389","IsPullRequest":false,"CreatedAt":"2020-04-01T15:59:08","Actor":"stephentoub","Number":"42985","RawContent":null,"Title":"Compiler generates empty cctor for static fields initialized to `null!`","State":"open","Body":"**Version Used**: \r\n3.6.0-2.20173.3+2242fa4fb945b97680bdd49eb5dd58285e4abb1c\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\n#nullable enable\r\nusing System;\r\n\r\npublic class C0 {\r\n    private static readonly String S1;\r\n}\r\n\r\npublic class C1 {\r\n    private static readonly String S1 = null!;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo cctor should be generated for either type, as in both cases S1 is null.\r\n\r\n**Actual Behavior**:\r\nAn empty cctor is generated for C1:\r\n```\r\n    .method private hidebysig specialname rtspecialname static \r\n        void .cctor () cil managed \r\n    {\r\n        // Method begins at RVA 0x2087\r\n        // Code size 1 (0x1)\r\n        .maxstack 8\r\n\r\n        IL_0000: ret\r\n    } // end of method C1::.cctor\r\n```","Url":"https://github.com/dotnet/roslyn/issues/42985","RelatedDescription":"Open issue \"Compiler generates empty cctor for static fields initialized to `null!`\" (#42985)"},{"Id":"592002918","IsPullRequest":false,"CreatedAt":"2020-04-01T15:26:04","Actor":"jaredpar","Number":"42984","RawContent":null,"Title":"NonExpandedItemShouldAlwaysBePreferred_FullDisplayTextMatch failing in spanish runs","State":"open","Body":"### Console\r\n\r\n```\r\nSystem.Threading.Tasks.TaskCanceledException : Se canceló una tarea.\r\n\r\n\r\nStack trace\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   en Microsoft.CodeAnalysis.Editor.UnitTests.IntelliSense.TestState.VB$StateMachine_64_WaitForUIRenderedAsync.MoveNext() en /_/src/EditorFeatures/TestUtilities2/Intellisense/TestState.vb:línea 554\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   en Microsoft.CodeAnalysis.Editor.UnitTests.IntelliSense.CSharpCompletionCommandHandlerTests.VB$StateMachine_240_NonExpandedItemShouldAlwaysBePreferred_FullDisplayTextMatch.MoveNext() en /_/src/EditorFeatures/Test2/IntelliSense/CSharpCompletionCommandHandlerTests.vb:línea 6413\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en Xunit.Sdk.TestInvoker`1.<>c__DisplayClass48_1.<<InvokeTestMethodAsync>b__1>d.MoveNext() en C:\\projects\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\Runners\\TestInvoker.cs:línea 264\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en Xunit.Sdk.ExecutionTimer.<AggregateAsync>d__4.MoveNext() en C:\\projects\\xunit\\src\\xunit.execution\\Sdk\\Frameworks\\ExecutionTimer.cs:línea 48\r\n--- Fin del seguimiento de la pila de la ubicación anterior donde se produjo la excepción ---\r\n   en System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   en System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   en Xunit.Sdk.ExceptionAggregator.<RunAsync>d__9.MoveNext() en C:\\projects\\xunit\\src\\xunit.core\\Sdk\\ExceptionAggregator.cs:línea 90\r\n```\r\n\r\n### Builds\r\n|Build|Pull Request | Test Failure Count|\r\n| --- | --- | --- |\r\n|[#581833](https://dev.azure.com/dnceng/public/_build/results?buildId=581833)|#41641|1|\r\n|[#582562](https://dev.azure.com/dnceng/public/_build/results?buildId=582562)|Rolling|1|\r\n|[#582841](https://dev.azure.com/dnceng/public/_build/results?buildId=582841)|Rolling|1|\r\n### Configurations\r\n- Windows Desktop Spanish\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/42984","RelatedDescription":"Open issue \"NonExpandedItemShouldAlwaysBePreferred_FullDisplayTextMatch failing in spanish runs\" (#42984)"},{"Id":"592000661","IsPullRequest":true,"CreatedAt":"2020-04-01T15:22:58","Actor":"jcouv","Number":"42983","RawContent":null,"Title":"Add notes for deploying roslyn from command-line","State":"open","Body":"@sharwell for review. Docs-only change","Url":"https://github.com/dotnet/roslyn/pull/42983","RelatedDescription":"Open PR \"Add notes for deploying roslyn from command-line\" (#42983)"},{"Id":"591988149","IsPullRequest":false,"CreatedAt":"2020-04-01T15:05:51","Actor":"jaredpar","Number":"42982","RawContent":null,"Title":"NullReferenceException in GetLanguageProviders","State":"open","Body":"Found in the following build https://dev.azure.com/dnceng/public/_build/results?buildId=582697\r\n\r\n```\r\n at Microsoft.CodeAnalysis.Test.Utilities.UseExportProviderAttribute.After(MethodInfo methodUnderTest) in /_/src/Workspaces/CoreTestUtilities/MEF/UseExportProviderAttribute.cs:line 142\r\n----- Inner Stack Trace -----\r\n   at Microsoft.CodeAnalysis.Completion.Providers.AbstractEmbeddedLanguageCompletionProvider.GetLanguageProviders[T](Func`2 documentProvider, T state) in /_/src/Features/Core/Portable/Completion/Providers/AbstractEmbeddedLanguageCompletionProvider.cs:line 39\r\n   at Microsoft.CodeAnalysis.Completion.Providers.AbstractEmbeddedLanguageCompletionProvider.ShouldTriggerCompletion(SourceText text, Int32 caretPosition, CompletionTrigger trigger, OptionSet options) in /_/src/Features/Core/Portable/Completion/Providers/AbstractEmbeddedLanguageCompletionProvider.cs:line 48\r\n   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.<>c__DisplayClass22_0.<GetCompletionsWithAvailabilityOfExpandedItemsAsync>b__3(CompletionProvider p) in /_/src/Features/Core/Portable/Completion/CompletionServiceWithProviders.cs:line 228\r\n   at System.Linq.Enumerable.WhereArrayIterator`1.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at System.Collections.Immutable.ImmutableArray.CreateRange[T](IEnumerable`1 items)\r\n   at Roslyn.Utilities.ImmutableArrayExtensions.ToImmutableArrayOrEmpty[T](IEnumerable`1 items) in /_/src/Workspaces/SharedUtilitiesAndExtensions/Compiler/Core/Extensions/ImmutableArrayExtensions.cs:line 45\r\n   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.<GetCompletionsWithAvailabilityOfExpandedItemsAsync>d__22.MoveNext() in /_/src/Features/Core/Portable/Completion/CompletionServiceWithProviders.cs:line 228\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.AsyncCompletion.CompletionSource.<GetCompletionContextWorkerAsync>d__25.MoveNext() in /_/src/EditorFeatures/Core/Implementation/IntelliSense/AsyncCompletion/CompletionSource.cs:line 267\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.<CallExtensionPointAsync>d__36`1.MoveNext()\r\n```","Url":"https://github.com/dotnet/roslyn/issues/42982","RelatedDescription":"Open issue \"NullReferenceException in GetLanguageProviders\" (#42982)"},{"Id":"591931463","IsPullRequest":false,"CreatedAt":"2020-04-01T13:48:36","Actor":"TessenR","Number":"42981","RawContent":null,"Title":"Roslyn doesn't verify variables' nullable states on exits through finally blocks","State":"open","Body":"**Version Used**: \r\n```\r\nBranch master (10 Mar 2020)\r\nLatest commit 441c154 by msftbot[bot]:\r\nMerge pull request #42303 from CyrusNajmabadi/useCompoundParens\r\n\r\nSupport parenthesized expressions in use-compound-operator.\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile and run the following code\r\n```cs\r\n#nullable enable\r\nusing System.Diagnostics.CodeAnalysis;\r\nclass C\r\n{\r\n    public static void Main()\r\n    {\r\n        if (!M(true, out var x))\r\n        {\r\n            x.ToString();\r\n        }\r\n    }\r\n    \r\n    public static bool M(bool b, [MaybeNullWhen(true)] out string s)\r\n    {\r\n        s = \"\";\r\n        try\r\n        {\r\n            if (b)\r\n              return false;\r\n        }\r\n        finally\r\n        {\r\n            s = null;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n```\r\n\r\n[sharplab.io](https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxAgrgOyQExAagB8BiTdAG3ImHLgAI5NraBYAKAAEAGOjgRgB0AEQCWEAOaYA9rBEBjKAIDCUnHACCTcgE8oIqAG52HAEx0l7AN7s6t3iZM271tnbd0RAMzoAKAIQAsj4wGHBIdFLoMHQAbhAIdAAeAJTJTu50LhkZiQIAKlIAyiEimOI+yUau2QC+6XR11bb1HADMvHwAbHTAUlLkdEG9/T3hANoBENrAcAByFOQA6gAWjMGhyQC6EVEdPFBpTZn1blB0ALx0AERXVdl0Idonzs8ZXr7Ah/cZHADsdJ4IOQoHA7rVXgDSkCdBCst9bGdLmRKGCMo0IX8HqFUQ12DUgA===)\r\n\r\n**Expected Behavior**:\r\nWarning for either `return false;` or `s = null;` in the finally block containing `return false;` statement\r\n\r\n**Actual Behavior**:\r\nNo warnings. The program crashes at runtime with a `NullReferenceException`","Url":"https://github.com/dotnet/roslyn/issues/42981","RelatedDescription":"Open issue \"Roslyn doesn't verify variables' nullable states on exits through finally blocks\" (#42981)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"589519642","IsPullRequest":true,"CreatedAt":"2020-04-01T02:27:12","Actor":"MichalStrehovsky","Number":"8059","RawContent":null,"Title":"Update GC from dotnet/runtime","State":"closed","Body":"Skipping commits:\r\n\r\ndotnet/runtime@631cb1b3dbe80c374dad691bfdd6989d8efb68d3 - I think we need to pull the Perl script to generate ETW boilerplate into the open.\r\ndotnet/runtime@fcd862e06413a000f9cafa9d2f359226c60b9b42 - not going to mess with that right now\r\ndotnet/runtime@6c1f8adf26cacb963e96d8f046411912aa6ebafe - I think this is for another commit that we skipped\r\ndotnet/runtime@f99b4fe46497185db3b2049913f2af0c839fda00 - more ETW\r\n","Url":"https://github.com/dotnet/corert/pull/8059","RelatedDescription":"Closed or merged PR \"Update GC from dotnet/runtime\" (#8059)"},{"Id":"589906202","IsPullRequest":false,"CreatedAt":"2020-03-29T23:02:21","Actor":"Shadow4walker","Number":"8065","RawContent":null,"Title":"How to Solve This (Value cannot be null. Parameter name: property)","State":"open","Body":"I'm trying To Compile a test App With [https://github.com/quartznet/quartznet](url)\r\nafter Compiling when try to run the Compiled app I got below exception! idk What should i put in the rd.xml to make it run successfully! :/\r\n\r\n> Unhandled Exception: System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\r\n ---> System.ArgumentNullException: Value cannot be null. Parameter name: property\r\n   at System.Linq.Expressions.Expression.Property(Expression, PropertyInfo) + 0x181\r\n   at TestApp!<BaseAddress>+0x12868b5\r\n   at TestApp!<BaseAddress>+0x1286712\r\n   at TestApp!<BaseAddress>+0x15003cd\r\n   at TestApp!<BaseAddress>+0x305d41\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at TestApp!<BaseAddress>+0x88027a\r\n   at TestApp!<BaseAddress>+0x8ff08e\r\n   at System.Linq.Expressions.Interpreter.LightLambda.Run(Object[]) + 0x82\r\n   at TestApp!<BaseAddress>+0xf10363\r\n   at Quartz.Logging.LogProvider.GetLogger(String) + 0x14\r\n   at TestApp!<BaseAddress>+0x7cbe74\r\n   at TestApp!<BaseAddress>+0xd69a93\r\n   --- End of inner exception stack trace ---\r\n   at TestApp!<BaseAddress>+0xd69a8a\r\n   at TestApp!<BaseAddress>+0xd6995d\r\n   at Quartz.Impl.StdSchedulerFactory.get_Log() + 0x9\r\n   at Quartz.Impl.StdSchedulerFactory.Initialize() + 0x2b4\r\n   at Quartz.Impl.StdSchedulerFactory.<GetScheduler>d__69.MoveNext() + 0x5f\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at TestApp!<BaseAddress>+0xd6b0ca\r\n   at TestApp!<BaseAddress>+0xd6b004\r\n   at TestApp.Models.SchedulerManager.<Init>d__4.MoveNext() + 0xd4\r\n\r\nthe rd.Xml for this Lib Defined as Below\r\n\r\n>     <Assembly Name=\"Quartz\" Dynamic=\"Required All\">\r\n    <Type Name=\"Quartz.Impl.StdSchedulerFactory\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Simpl.RAMJobStore\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Simpl.TaskSchedulingThreadPool\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.QuartzScheduler\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.QuartzSchedulerThread\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.ErrorLogger\" Dynamic=\"Required All\"/>\r\n    <Type Name=\"Quartz.Core.SchedulerSignalerImpl\" Dynamic=\"Required All\"/>\r\n    </Assembly>\r\n\r\nand when using     `<IlcArg` Include=\"--stacktracedata\" /> \r\n\r\n> Unhandled Exception: System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\r\n ---> System.ArgumentNullException: Value cannot be null. Parameter name: property\r\n   at System.Linq.Expressions.Expression.Property(Expression, PropertyInfo) + 0x181\r\n   at System.Runtime.CompilerServices.CallSiteBinder.Stitch[T](Expression, CallSiteBinder.LambdaSignature`1) + 0x115\r\n   at System.Runtime.CompilerServices.CallSiteBinder.BindCore[T](CallSite`1, Object[]) + 0x92\r\n   at TestApp!<BaseAddress>+0x150055d\r\n   at System.InvokeUtils.CallDynamicInvokeMethod(Object, IntPtr, Object, IntPtr, IntPtr, Object, Object[], BinderBundle, Boolean, Boolean, Boolean) + 0x211\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at System.Linq.Expressions.Interpreter.MethodInfoCallInstruction.Run(InterpretedFrame) + 0x17a\r\n   at System.Linq.Expressions.Interpreter.Interpreter.Run(InterpretedFrame) + 0x2e\r\n   at System.Linq.Expressions.Interpreter.LightLambda.Run(Object[]) + 0x82\r\n   at TestApp!<BaseAddress>+0xf104f3\r\n   at Quartz.Logging.LogProvider.GetLogger(String) + 0x14\r\n   at Quartz.Impl.StdSchedulerFactory..cctor() + 0x34\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd3\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xca\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\r\n   at Quartz.Impl.StdSchedulerFactory.get_Log() + 0x9\r\n   at Quartz.Impl.StdSchedulerFactory.Initialize() + 0x2b4\r\n   at Quartz.Impl.StdSchedulerFactory.<GetScheduler>d__69.MoveNext() + 0x5f\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x20\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task) + 0xba\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task) + 0x44\r\n   at TestApp.Models.SchedulerManager.<Init>d__4.MoveNext() + 0x102\r\n\r\n\r\n any help to get ride of this please!","Url":"https://github.com/dotnet/corert/issues/8065","RelatedDescription":"Open issue \"How to Solve This (Value cannot be null. Parameter name: property)\" (#8065)"},{"Id":"589815848","IsPullRequest":true,"CreatedAt":"2020-03-29T17:40:57","Actor":"jkotas","Number":"8064","RawContent":null,"Title":"Delete a few more unused methods","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8064","RelatedDescription":"Closed or merged PR \"Delete a few more unused methods\" (#8064)"},{"Id":"589759062","IsPullRequest":true,"CreatedAt":"2020-03-29T15:06:28","Actor":"MichalStrehovsky","Number":"8063","RawContent":null,"Title":"Delete unnecessary native runtime EEType knowledge","State":"closed","Body":"EEType knowledge is triplicated in the compiler, EEType.cs, and the native runtime. The fewer places know about it, the easier it is to maintain/audit.\r\n\r\nI think it would be ideal if the native runtime only knows about the fields that are common to all EETypes and doesn't know about optional fields/rare flags stuff.\r\n\r\nThere is one last spot accessing the EEType optional fields/RareFlags data structure after this - the Align8 rare flag. I'm wondering whether we should just expose an `RhIsAlign8` method out of the managed runtime for the native runtime to call.","Url":"https://github.com/dotnet/corert/pull/8063","RelatedDescription":"Closed or merged PR \"Delete unnecessary native runtime EEType knowledge\" (#8063)"},{"Id":"589581187","IsPullRequest":true,"CreatedAt":"2020-03-29T09:55:32","Actor":"MichalStrehovsky","Number":"8062","RawContent":null,"Title":"Rewrite RhpBox in managed code","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8062","RelatedDescription":"Closed or merged PR \"Rewrite RhpBox in managed code\" (#8062)"},{"Id":"589581104","IsPullRequest":true,"CreatedAt":"2020-03-29T06:43:29","Actor":"MichalStrehovsky","Number":"8061","RawContent":null,"Title":"Move dispatch map handling to managed code","State":"closed","Body":"Removes a bunch of duplicated logic.","Url":"https://github.com/dotnet/corert/pull/8061","RelatedDescription":"Closed or merged PR \"Move dispatch map handling to managed code\" (#8061)"},{"Id":"589539216","IsPullRequest":true,"CreatedAt":"2020-03-28T09:25:13","Actor":"ezruneko","Number":"8060","RawContent":null,"Title":"old link updated","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8060","RelatedDescription":"Closed or merged PR \"old link updated\" (#8060)"},{"Id":"589516190","IsPullRequest":true,"CreatedAt":"2020-03-28T09:03:03","Actor":"MichalStrehovsky","Number":"8058","RawContent":null,"Title":"Update compiler from dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8058","RelatedDescription":"Closed or merged PR \"Update compiler from dotnet/runtime\" (#8058)"},{"Id":"588428795","IsPullRequest":true,"CreatedAt":"2020-03-26T16:58:30","Actor":"kant2002","Number":"8057","RawContent":null,"Title":"Migrate links from CoreCLR to Runtime repository","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8057","RelatedDescription":"Closed or merged PR \"Migrate links from CoreCLR to Runtime repository\" (#8057)"},{"Id":"588082207","IsPullRequest":false,"CreatedAt":"2020-03-26T01:03:51","Actor":"shravan2x","Number":"8056","RawContent":null,"Title":"Task.WaitAll missing IEnumerable<Task> overload","State":"closed","Body":"In general, `Task.WhenAll` is used to wait for a collection for tasks to complete execution. However, `Task.WaitAll` still has valid niche use-cases. For example, in a synchronous method that blocks shutdown until it completes - `appLifetime.ApplicationStopping.Register(() => _shutdownTokenSource.Cancel())`.\r\n\r\n`Task.WaitAll` seems to be missing an overload that takes an `IEnumerable<Task>`. This overload exists for `Task.WhenAll`. Can we add this?","Url":"https://github.com/dotnet/corert/issues/8056","RelatedDescription":"Closed issue \"Task.WaitAll missing IEnumerable<Task> overload\" (#8056)"},{"Id":"587737284","IsPullRequest":false,"CreatedAt":"2020-03-25T14:49:01","Actor":"remibernard","Number":"8055","RawContent":null,"Title":"System.Text.Json with CoreRT in 3.1","State":"closed","Body":"I am getting a `System.Reflection.MissingMetadataException` for `JsonPropertyInfoNotNullable` (with 4 generic parameters), even if it is included in my rd.xml file, or if I try `--rootallapplicationassemblies` or `--completemetadata`.\r\n\r\nTarget framework: `netstandard2.0` (library), .NET Core version 3.1.101,\r\nCompiler package version: `Microsoft.DotNet.ILCompiler (1.0.0-alpha-28725-01)`,\r\nBuild command: `dotnet publish /p:NativeLib=Shared -r win-x64 -c Release myproject.csproj`\r\n\r\nRelevant stack trace:\r\n```\r\nSystem.Reflection.MissingMetadataException: 'System.Text.Json.JsonPropertyInfoNotNullable<System.Object,System.Int64,System.Int64,System.Int64>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x13e\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0x87\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x44\r\n   at System.Text.Json.JsonClassInfo.CreateProperty(Type, Type, Type, PropertyInfo, Type, JsonConverter, JsonSerializerOptions) + 0x2f8\r\n   at System.Text.Json.JsonClassInfo.AddProperty(Type, PropertyInfo, Type, JsonSerializerOptions) + 0xa9\r\n   at System.Text.Json.JsonClassInfo.AddPolicyProperty(Type, JsonSerializerOptions) + 0x32\r\n   at System.Text.Json.JsonSerializerOptions.GetOrAddClass(Type) + 0x51\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type, JsonSerializerOptions, Utf8JsonReader&) + 0x9f\r\n   at System.Text.Json.JsonSerializer.ParseCore(String, Type, JsonSerializerOptions) + 0x131\r\n```\r\n\r\n`Default.rd.xml`:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?> \r\n<Directives xmlns=\"http://schemas.microsoft.com/netfx/2013/01/metadata\">\r\n  <Library>\r\n    <Assembly Name=\"System.Text.Json\" Dynamic=\"Required All\">\r\n      <Type Name=\"System.Text.Json.JsonPropertyInfoNotNullable`4\" Dynamic=\"Required All\" />\r\n    </Assembly>\r\n  </Library>\r\n</Directives>\r\n```\r\n\r\nCode snip:\r\n```c#\r\nprivate static object DeserializeJsonElement(Type type, JsonElement element)\r\n        => JsonSerializer.Deserialize(element.GetRawText(), type);\r\n```\r\n\r\nAm I missing something obvious? Or is System.Text.Json not compatible with CoreRT for some reason?\r\nThanks!","Url":"https://github.com/dotnet/corert/issues/8055","RelatedDescription":"Closed issue \"System.Text.Json with CoreRT in 3.1\" (#8055)"},{"Id":"586210738","IsPullRequest":true,"CreatedAt":"2020-03-24T22:32:47","Actor":"jkotas","Number":"8051","RawContent":null,"Title":"Delete more ProjectN leftovers","State":"closed","Body":"The special loop hijacking support. RyuJIT does not have it today and it is unlikely that it would ever change.","Url":"https://github.com/dotnet/corert/pull/8051","RelatedDescription":"Closed or merged PR \"Delete more ProjectN leftovers\" (#8051)"},{"Id":"586328794","IsPullRequest":false,"CreatedAt":"2020-03-23T16:12:52","Actor":"theolivenbaum","Number":"8054","RawContent":null,"Title":"Error building under macOS","State":"open","Body":"We're hitting this problem when trying to compile one of our projects under macOS, on an Azure devops VM:\r\n\r\n`ld: illegal text-relocation to '___ThreadStaticRegionEnd'`\r\n\r\nThe same project builds fine on windows and linux.\r\n \r\nThe only solution I found online for this \"illegal text-relocation\" issue was to add `-read_only_relocs suppress`, but this is not anymore supported on macOS & x64.\r\n\r\n\r\nThere are two more warnings besides  this error message:\r\n```\r\n/usr/bin/clang\r\nGenerating native code\r\nld : warning : -read_only_relocs cannot be used with x86_64 [/Users/runner/runners/2.165.2/work/1/s/Project.csproj]\r\nld : warning : could not create compact unwind for _System_Net_Security_System_Net_Security_TlsCipherSuiteData___cctor: stack subq instruction is too different from dwarf stack size [/Users/runner/runners/2.165.2/work/1/s/Project.csproj]\r\nld : warning : can't parse dwarf compilation unit info in obj/Debug/netcoreapp3.1/osx-x64/native/Project.o [/Users/runner/runners/2.165.2/work/1/s/Project.csproj]\r\nld: illegal text-relocation to '___ThreadStaticRegionEnd' in obj/Debug/netcoreapp3.1/osx-x64/native/Project.o from '___RMHSignature_MessagePack_Annotations_MessagePack_MessagePackFormatterAttribute__get_FormatterType' in obj/Debug/netcoreapp3.1/osx-x64/native/Project.o for architecture x86_64\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/Users/runner/runners/2.165.2/work/1/s/Project.csproj]\r\n\r\n```\r\n\r\nAny ideas?","Url":"https://github.com/dotnet/corert/issues/8054","RelatedDescription":"Open issue \"Error building under macOS\" (#8054)"},{"Id":"586256890","IsPullRequest":true,"CreatedAt":"2020-03-23T15:54:50","Actor":"MichalStrehovsky","Number":"8053","RawContent":null,"Title":"Do not overwrite metadataGenerationOptions","State":"closed","Body":"Plus test coverage.\r\n\r\nFixes the issue reported in #7995.","Url":"https://github.com/dotnet/corert/pull/8053","RelatedDescription":"Closed or merged PR \"Do not overwrite metadataGenerationOptions\" (#8053)"},{"Id":"586213074","IsPullRequest":false,"CreatedAt":"2020-03-23T13:34:43","Actor":"hez2010","Number":"8052","RawContent":null,"Title":"CoreRT Stack overflow when build with EntityFrameworkCore","State":"open","Body":"## CoreRT Stack overflow when build with EntityFrameworkCore\r\n### Repro:\r\nCreate project:\r\n```bash\r\ndotnet new web\r\ndotnet add package Microsoft.EntityFrameworkCore\r\ndotnet add package Microsoft.DotNet.ILCompiler  --Version=1.0.0-*\r\n```\r\nAnd then add an empty DbContext:\r\n```csharp\r\nusing Microsoft.EntityFrameworkCore;\r\npublic class TestDbContext : DbContext { }\r\n```\r\n\r\nBuild (with ilcarg: --verbose --singlethreaded):\r\n```bash\r\ndotnet publish -c Debug -r win-x64\r\n```\r\n\r\nResult:\r\n```\r\n  ......\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Remove<__Canon>(__Canon)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Update<__Canon>(__Canon)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Attach<__Canon>(__Canon)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.AddAsync<__Canon>(__Canon,CancellationToken)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Add<__Canon>(__Canon)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.SetEntityStateAsync(InternalEntityEntry,EntityState,CancellationToken)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.SetEntityState(InternalEntityEntry,EntityState)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.EntryWithoutDetectChanges(object)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Entry(object)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.EntryWithoutDetectChanges<__Canon>(__Canon)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Entry<__Canon>(__Canon)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.DisposeAsync()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.DisposeSync()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Dispose()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.GetResettableServices()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(CancellationToken)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect(DbContextPoolConfigurationSnapshot)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool(IDbContextPool)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(bool,CancellationToken)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(CancellationToken)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.TryDetectChanges(EntityEntry)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.TryDetectChanges()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.SaveChanges(bool)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.SaveChanges()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(ModelBuilder)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(DbContextOptionsBuilder)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.CheckDisposed()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Finder(Type)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Query<__Canon>()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Set<__Canon>()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(IDbSetSource,Type)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_InfrastructureLogger()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_UpdateLogger()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_EntityGraphAttacher()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_ChangeDetector()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_StateManager()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_QueryProvider()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_EntityFinderFactory()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_SetSource()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.get_ContextId()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.get_Model()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.get_ChangeTracker()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext.get_Database()...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext..ctor(DbContextOptions)...\r\n  Compiling [Microsoft.EntityFrameworkCore]Microsoft.EntityFrameworkCore.DbContext..ctor()...\r\n  Compiling object.GetHashCode()...\r\n  Compiling object.ReferenceEquals(object,object)...\r\n  Compiling object.Equals(object,object)...\r\n  Compiling object.Equals(object)...\r\n  Compiling object.ToString()...\r\n  Compiling object.Finalize()...\r\n  Compiling object..ctor()...\r\n  Compiling object.GetRawDataSize()...\r\n  Compiling object.MemberwiseClone()...\r\n  Compiling object.get_EETypePtr()...\r\n  Compiling object.GetType()...\r\n  Compiling [S.P.CoreLib]System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs..ctor(Exception)...\r\n  Compiling [S.P.CoreLib]System.Exception.get_HResult()...\r\n  Compiling string.GetPinnableReference()...\r\n  Compiling [S.P.CoreLib]System.Exception.GetType()...\r\n  Compiling [S.P.CoreLib]System.Exception.AppendStackIP(native int,bool)...\r\n  Compiling native int.op_Inequality(native int,native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnNonGCStaticBase(StaticClassConstructionContext*,native int)...\r\n  Compiling [S.P.CoreLib]Internal.Diagnostics.StackTraceHelper+SpecialIP..cctor()...\r\n  Compiling [S.P.CoreLib]System.Environment.FailFast(string)...\r\n  Compiling [S.P.CoreLib]System.DataMisalignedException..ctor()...\r\n  Compiling [S.P.CoreLib]System.SystemException..ctor()...\r\n  Compiling [S.P.CoreLib]System.SystemException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.DataMisalignedException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.RuntimeExceptionHelpers.FailFast(string)...\r\n  Compiling [S.P.CoreLib]System.NullReferenceException..ctor()...\r\n  Compiling [S.P.CoreLib]System.NullReferenceException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.OverflowException..ctor()...\r\n  Compiling [S.P.CoreLib]System.OverflowException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.InvalidCastException..ctor()...\r\n  Compiling [S.P.CoreLib]System.InvalidCastException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.IndexOutOfRangeException..ctor()...\r\n  Compiling [S.P.CoreLib]System.IndexOutOfRangeException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.DivideByZeroException..ctor()...\r\n  Compiling [S.P.CoreLib]System.DivideByZeroException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.ArrayTypeMismatchException..ctor()...\r\n  Compiling [S.P.CoreLib]System.ArrayTypeMismatchException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.ArithmeticException..ctor()...\r\n  Compiling [S.P.CoreLib]System.ArithmeticException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.OutOfMemoryException..ctor()...\r\n  Compiling [S.P.CoreLib]System.OutOfMemoryException..ctor(SerializationInfo,StreamingContext)...\r\n  Compiling [S.P.CoreLib]System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnThreadStaticBase(TypeManagerSlot*,int32,StaticClassConstructionContext*)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.ThreadStatics.GetThreadStaticBaseForType(TypeManagerSlot*,int32)...\r\n  Compiling [S.P.CoreLib]System.RuntimeExceptionHelpers..cctor()...\r\n  Compiling [S.P.CoreLib]System.RuntimeExceptionHelpers.FailFast(string,Exception,RhFailFastReason,native int,native int)...\r\n  Compiling string.Format(string,object,object,object)...\r\n  Compiling [S.P.CoreLib]System.RuntimeExceptionHelpers.GetStringForFailFastReason(RhFailFastReason)...\r\n  Compiling [S.P.CoreLib]System.PreallocatedOutOfMemoryException.get_Instance()...\r\n  Compiling [S.P.CoreLib]System.RuntimeExceptionHelpers.get_SafeToPerformRichExceptionSupport()...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetV(object,native int,ArgSetupState&,bool)...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetVI<int64>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [S.P.CoreLib]System.Runtime.InteropServices.NativeCallableAttribute..ctor()...\r\n  Compiling [S.P.CoreLib]System.Runtime.CalliIntrinsics.CallVoid(native int)...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetVII<native int,native int>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [S.P.CoreLib]System.Threading.Thread.InitializeComForFinalizerThread()...\r\n  Compiling [S.P.CoreLib]System.Runtime.CastableObjectSupport.GetCastableObjectDispatchCellThunk(EEType*,native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.CachedInterfaceDispatch.RhpCidResolve_Worker(object,native int)...\r\n  Compiling native int.op_Equality(native int,native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.CachedInterfaceDispatch.RhResolveDispatchWorker(object,void*,DispatchCellInfo&)...\r\n  Compiling [S.P.CoreLib]System.Runtime.DispatchResolve.FindInterfaceMethodImplementationTarget(EEType*,EEType*,uint16)...\r\n  Compiling [S.P.CoreLib]System.Runtime.InternalCalls.RhpSignalFinalizationComplete()...\r\n  Compiling [S.P.CoreLib]System.Runtime.__Finalizer.DrainQueue()...\r\n  Compiling [S.P.CoreLib]System.Runtime.__Finalizer.MakeFinalizerInitCallbacks()...\r\n  Compiling [S.P.CoreLib]System.Runtime.InternalCalls.RhpWaitForFinalizerRequest()...\r\n  Compiling [S.P.CoreLib]System.Runtime.EH+ExInfo.Init(object,bool)...\r\n  Compiling [S.P.CoreLib]System.Runtime.EH.GetClasslibException(ExceptionIDs,native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.EH.DispatchEx(StackFrameIterator&,ExInfo&,uint32)...\r\n  Compiling [S.P.CoreLib]System.Runtime.EH+ExInfo.Init(object,ExInfo&)...\r\n  Compiling [S.P.CoreLib]System.Runtime.EH+ExInfo.get_ThrownException()...\r\n  Compiling [S.P.CoreLib]System.Runtime.InternalCalls.RhpCollect(int32,InternalGCCollectionMode)...\r\n  Compiling [S.P.CoreLib]System.Runtime.InternalCalls.RhpGetGcTotalMemory()...\r\n  Compiling [S.P.CoreLib]System.Runtime.InternalCalls.RhpStartNoGCRegion(int64,bool,int64,bool)...\r\n  Compiling [S.P.CoreLib]System.Runtime.InternalCalls.RhpEndNoGCRegion()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.GetAssociatedModuleAddress()...\r\n  Compiling [S.P.CoreLib]System.Runtime.CastableObjectSupport.GetCastableTargetIfPossible(ICastableObject,EEType*,bool,Exception&)...\r\n  Compiling [S.P.CoreLib]System.Runtime.EH.FallbackFailFast(RhFailFastReason,object)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerServices.Unsafe.As<native int,__Canon>(native int&)...\r\n  Compiling native int.op_Addition(native int,int32)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.TransitionBlock.GetThisOffset()...\r\n  Compiling [S.P.CoreLib]System.Runtime.CastableObjectSupport..cctor()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsFinalizable()...\r\n  Compiling [S.P.CoreLib]System.Runtime.RuntimeExports.UnboxAnyTypeCompare(EEType*,EEType*)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_HasGCPointers()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerServices.Unsafe.Add<uint8>(uint8&,int32)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_NullableValueOffset()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerServices.Unsafe.As<uint8,bool>(uint8&)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_ValueTypeFieldPadding()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_BaseSize()...\r\n  Compiling [S.P.CoreLib]System.Runtime.RuntimeExports+Wrapper..ctor()...\r\n  Compiling object.GetRawData()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerServices.Unsafe.As<__Canon>(object)...\r\n  Compiling [S.P.CoreLib]System.EETypePtr..ctor(native int)...\r\n  Compiling native int.op_Explicit(void*)...\r\n  Compiling [S.P.CoreLib]System.Runtime.EH.FailFastViaClasslib(RhFailFastReason,object,native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.RuntimeExports.RhpGetCurrentThreadStackTrace(native int*,uint32)...\r\n  Compiling [S.P.CoreLib]System.Runtime.StackFrameIterator.Next()...\r\n  Compiling native int..ctor(void*)...\r\n  Compiling [S.P.CoreLib]System.Runtime.StackFrameIterator.get_ControlPC()...\r\n  Compiling [S.P.CoreLib]System.Runtime.StackFrameIterator.Init(PAL_LIMITED_CONTEXT*,bool)...\r\n  Compiling native uint..ctor(uint64)...\r\n  Compiling native uint.op_Explicit(native uint)...\r\n  Compiling native uint.op_Explicit(void*)...\r\n  Compiling [S.P.CoreLib]System.Runtime.ThunksHeap.CreateThunksHeap(native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.ThunksHeap.AllocateThunk()...\r\n  Compiling [S.P.CoreLib]System.Runtime.ThunksHeap.FreeThunk(native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.ThunksHeap.SetThunkData(native int,native int,native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.ThunksHeap.TryGetThunkData(native int,native int&,native int&)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_NonClonedNonArrayBaseType()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.WellKnownEETypes.IsSystemArray(EEType*)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.WellKnownEETypes.IsSystemObject(EEType*)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_HasGenericVariance()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_CanonicalEEType()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsCloned()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.SimpleCasting()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_RawBaseType()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.BothSimpleCasting(EEType*,EEType*)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_ArrayRank()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsSzArray()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_ParameterizedTypeShape()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_NullableType()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsNullable()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsGenericTypeDefinition()...\r\n  Compiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOfInterfaceViaCastableObjectWithException(object,EEType*,Exception&)...\r\n  Compiling [S.P.CoreLib]System.Runtime.TypeCast+CastCache.AreTypesAssignableInternal_SourceNotTarget_BoxedSource(EEType*,EEType*,EETypePairList*)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsValueType()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerServices.Unsafe.Add<native int>(native int&,int32)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerServices.Unsafe.As<uint8,native int>(uint8&)...\r\n  Compiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOfInterfaceViaCastableObject(object,EEType*)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsICastable()...\r\n  Compiling [S.P.CoreLib]System.Runtime.TypeCast+CastCache.AreTypesAssignableInternal(EEType*,EEType*,AssignmentVariation,EETypePairList*)...\r\n  Compiling [S.P.CoreLib]System.Array.get_Length()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerServices.Unsafe.Add<__Canon>(__Canon&,int32)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerServices.Unsafe.As<uint8,__Canon>(uint8&)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.GetClasslibException(ExceptionIDs)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_RelatedParameterType()...\r\n  Compiling object.get_EEType()...\r\n  Compiling native int.op_Explicit(native int)...\r\n  Compiling [S.P.CoreLib]System.Runtime.TypeCast.AreTypesEquivalentInternal(EEType*,EEType*)...\r\n  Compiling [S.P.CoreLib]System.EETypePtr.ToPointer()...\r\n  Compiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCastNonArrayParameterizedType(void*,object)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsParameterizedType()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsInterface()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.EEType.get_IsArray()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.StartupCodeHelpers.InitializeEagerClassConstructorsForModule(TypeManagerHandle)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.StartupCodeHelpers.AddModule(TypeManagerHandle)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.StartupCodeHelpers.InitializeGlobalTablesForModule(TypeManagerHandle,int32)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.ThrowHelpers.ThrowIndexOutOfRangeException()...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.StartupCodeHelpers.CreateTypeManagers(native int,native int*,int32,native int*,int32)...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetOI<float64,int32>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.ThrowUIntOvf()...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetOI<float64,uint32>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.ThrowLngOvf()...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetOI<float64,int64>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.ThrowULngOvf()...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetOI<float64,uint64>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetOI<float32,int32>(object,native int,ArgSetupState&,bool)...\r\n  Compiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.ThrowIntOvf()...\r\n  Compiling [S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetOI<float32,int64>(object,native int,ArgSetupState&,bool)...\r\n  \r\n  Process is terminating due to StackOverflowException.\r\n```","Url":"https://github.com/dotnet/corert/issues/8052","RelatedDescription":"Open issue \"CoreRT Stack overflow when build with EntityFrameworkCore\" (#8052)"},{"Id":"585534493","IsPullRequest":false,"CreatedAt":"2020-03-23T13:32:23","Actor":"teobugslayer","Number":"8050","RawContent":null,"Title":"Help needed compiling an Avalonia app","State":"closed","Body":"Hi guys,\r\n\r\nI tried to build a sample Avalonia UI app with CoreRT and did not succced. I need help to understand what's going wrong and how to fix it.\r\n\r\n**What do I observe?**\r\nThe compilation does not end in more than 40 minutes and Ilc appears to be running. In Process Explorer I can see that Ilc takes about 3.0 - 3.5 GB Private bytes and the CPU is 16-30%.\r\n\r\nThe output in the console is:\r\n\r\n>Microsoft (R) Build Engine version 16.6.0-preview-20126-02+13cfe7fc5 for .NET Core\r\n>  Determining projects to restore...\r\n>  Restore completed in 42,31 sec for C:\\Dev\\AvaloniaCoreRTDemo\\AvaloniaCoreRTDemo.csproj.\r\n>  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n>  AvaloniaCoreRTDemo -> C:\\Dev\\AvaloniaCoreRTDemo\\bin\\Release\\netcoreapp3.0\\win-x64\\AvaloniaCoreRTDemo.dll\r\n>  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n\r\n**Steps to reproduce**\r\n1. Install Avalonia UI templates as described in their readme\r\n2. `dotnet new avalonia.app`\r\n3. modify the nuget.config:\r\n```XML\r\n<packageSources>\r\n    <add key=\"AvaloniaCI\" value=\"https://www.myget.org/F/avalonia-ci/api/v2\" />\r\n    <add key=\"dotnet-core\" value=\"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\" />\r\n    <add key=\"nuget\" value=\"https://api.nuget.org/v3/index.json\" />\r\n  </packageSources>\r\n```\r\n4. Modify the project file:\r\n```XML\r\n<ItemGroup>\r\n    <PackageReference Include=\"Avalonia\" Version=\"0.9.0\" />\r\n    <PackageReference Include=\"Avalonia.Desktop\" Version=\"0.9.0\" />\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n```\r\n\r\n**My setup is**\r\n* Windows 10 1909\r\n* Visual Studio 16.6 preview 1\r\n* .NET Core 5.0 SDK daily build from 2020-03-20\r\n* CoreRT 1.0.0-alpha-28721-01\r\n\r\nI have the sample code [here](https://github.com/teobugslayer/AvaloniaCoreRTDemo) but as I said, it's just the empty project. I verified that the project builds and runs in Visual Studio in Debug config.","Url":"https://github.com/dotnet/corert/issues/8050","RelatedDescription":"Closed issue \"Help needed compiling an Avalonia app\" (#8050)"},{"Id":"585493043","IsPullRequest":true,"CreatedAt":"2020-03-23T08:44:09","Actor":"MichalStrehovsky","Number":"8049","RawContent":null,"Title":"Delete ProjectN leftovers from the native runtime","State":"closed","Body":"There is more but this is the equivalent of pulling on a loose thread on a shirt and being left with no shirt.\r\n\r\nI put the generic unification deletion in a separate commit in case we actually want to keep it. The rest shouldn't be needed anymore now that we have no plans to resurrect rhbind.exe.","Url":"https://github.com/dotnet/corert/pull/8049","RelatedDescription":"Closed or merged PR \"Delete ProjectN leftovers from the native runtime\" (#8049)"},{"Id":"585463351","IsPullRequest":false,"CreatedAt":"2020-03-22T16:01:01","Actor":"knocte","Number":"8048","RawContent":null,"Title":"string.FastAllocateString, with Debug(x64), throws unhandled exception in mrt100_app.dll","State":"closed","Body":"Project using Microsoft.NETCore.UniversalWindowsPlatform 6.2.9, targetting Windows10 v1903 (10.0, build 18362).\r\n\r\nI've narrowed it down to a call to deserialize this JSON string using Newtonsoft.JSON:\r\n\r\n```\r\n{\"jsonrpc\": \"2.0\", \"result\": [\"ElectrumX 1.10.1\", \"1.4\"], \"id\": 0}\r\n```\r\n\r\nThe code:\r\n\r\n```\r\nJsonConvert.DeserializeObject<T>(json, PascalCase2LowerCasePlusUnderscoreConversionSettings)\r\n```\r\n\r\nWith PascalCase2LowerCasePlusUnderscoreConversionSettings being:\r\n\r\n```\r\nJsonSerializerSettings(ContractResolver = PascalCase2LowercasePlusUnderscoreContractResolver())\r\n```\r\n\r\nwhere PascalCase2LowercasePlusUnderscoreContractResolver is:\r\n\r\n```\r\ntype private PascalCase2LowercasePlusUnderscoreContractResolver() =\r\n    inherit DefaultContractResolver()\r\n\r\n    // https://stackoverflow.com/a/20952003/544947\r\n    let pascalToUnderScoreRegex = Regex(\"((?<=.)[A-Z][a-zA-Z]*)|((?<=[a-zA-Z])\\d+)\", RegexOptions.Multiline)\r\n    let pascalToUnderScoreReplacementExpression = \"_$1$2\"\r\n    override __.ResolvePropertyName (propertyName: string) =\r\n        pascalToUnderScoreRegex.Replace(propertyName, pascalToUnderScoreReplacementExpression).ToLower()\r\n```\r\n\r\nAnd T being this record:\r\n\r\n```\r\ntype ServerVersionResult =\r\n    {\r\n        Id: int;\r\n        Result: array<string>;\r\n    }\r\n```\r\n\r\nResult where you can see the whole stacktrace (sorry, I didn't manage to copy it to clipboard, VS keep throwing at exception when attempting to do it):\r\n\r\n<img width=\"1022\" alt=\"Screenshot 2020-03-21 at 5 16 57 PM\" src=\"https://user-images.githubusercontent.com/331303/77223602-0964f100-6b99-11ea-8d1e-c2db3f20d80f.png\">\r\n","Url":"https://github.com/dotnet/corert/issues/8048","RelatedDescription":"Closed issue \"string.FastAllocateString, with Debug(x64), throws unhandled exception in mrt100_app.dll\" (#8048)"},{"Id":"582672752","IsPullRequest":true,"CreatedAt":"2020-03-20T18:24:52","Actor":"NextTurn","Number":"8042","RawContent":null,"Title":"Work around non-portable linux RIDs","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8042","RelatedDescription":"Closed or merged PR \"Work around non-portable linux RIDs\" (#8042)"},{"Id":"583568156","IsPullRequest":true,"CreatedAt":"2020-03-20T18:23:31","Actor":"kant2002","Number":"8045","RawContent":null,"Title":"Improve documentation around Dependency analysis","State":"closed","Body":"- Clarify not supported usage for ILCompiler-DependencyGraph-Viewer\r\n- Mention about existence of WhyDGML tool\r\nCloses: #8044, Closes: #8043","Url":"https://github.com/dotnet/corert/pull/8045","RelatedDescription":"Closed or merged PR \"Improve documentation around Dependency analysis\" (#8045)"},{"Id":"583474152","IsPullRequest":false,"CreatedAt":"2020-03-20T18:23:31","Actor":"kant2002","Number":"8043","RawContent":null,"Title":"Cannot debug graph visualisation","State":"closed","Body":"I attempt to make a stab at the marshalling null values for COM, but stuck with producing correct IL. I decide that I'm smart guy and can enable debugging of the DependencyGraph. I'm not sure if this was correct decision, but that's not root cause of the issue which I encounter.\r\n\r\nSo I start follow [Documentation\\how-to-debug-compiler-dependency-analysis.md](https://github.com/dotnet/corert/blob/master/Documentation/how-to-debug-compiler-dependency-analysis.md) \r\n1. I setup csproj and include `<IlcGenerateDgmlFile>true</IlcGenerateDgmlFile>`\r\n2. I configure to use locally built version of CoreRT.\r\n3. Launch VS as admin and open `ILCompiler-DependencyGraph-Viewer.sln`\r\n4. Launch `dotnet publish` as admin\r\n5. Launch `ILCompiler-DependencyGraph-Viewer` inside VS\r\n\r\nevents was not there.\r\nUnder debugger, line below return false into `restarted` variable.\r\nhttps://github.com/dotnet/corert/blob/7f4555b5adedbc628842e2146205d61c592e5643/src/ILCompiler.DependencyAnalysisFramework/ILCompiler-DependencyGraph-Viewer/Program.cs#L258 \r\n\r\nI suspect that this is related to enabling ETW somehow, or maybe I miss some other step?","Url":"https://github.com/dotnet/corert/issues/8043","RelatedDescription":"Closed issue \"Cannot debug graph visualisation\" (#8043)"},{"Id":"583475081","IsPullRequest":false,"CreatedAt":"2020-03-20T18:23:30","Actor":"kant2002","Number":"8044","RawContent":null,"Title":"Document WhyDgml","State":"closed","Body":"I notice that WhyDGML tool introduced, maybe I can put some words about it into [Documentation\\how-to-debug-compiler-dependency-analysis.md](https://github.com/dotnet/corert/blob/master/Documentation/how-to-debug-compiler-dependency-analysis.md) ","Url":"https://github.com/dotnet/corert/issues/8044","RelatedDescription":"Closed issue \"Document WhyDgml\" (#8044)"},{"Id":"584787301","IsPullRequest":false,"CreatedAt":"2020-03-20T17:38:12","Actor":"zgramana","Number":"8047","RawContent":null,"Title":"Non-reference generic type parameters throw MissingMetadataException","State":"closed","Body":"Runtime generation of generic types using non-reference types results in `MissingMetadataException` at runtime on `osx-x64`\r\n\r\n#### Repro Code\r\n\r\n`My.csproj`\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <LangVersion>8.0</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <CustomLinkerArg Include=\"$(AdditionalLinkerFlags)\" />\r\n    <!-- Do not generate partial metadata for types - always include all members even if they're unused -->\r\n    <IlcArg Include=\"--completetypemetadata\" />\r\n    <!-- Generate extra data to make stack traces nicer -->\r\n    <IlcArg Include=\"--stacktracedata\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n`Program.cs`\r\n```csharp\r\nusing System;\r\n\r\nnamespace My\r\n{\r\n    class Program\r\n    {\r\n        public class Generic<T> { }\r\n\r\n        public class EnumGeneric<T> where T : Enum { }\r\n\r\n        public class StructGeneric<T> where T : struct { }\r\n\r\n        public class NewGeneric<T> where T : new() { }\r\n\r\n        public class NotNullGeneric<T> where T : notnull { }\r\n\r\n        public class ComparableGeneric<T> where T : IComparable { }\r\n\r\n        public enum MyEnum : int\r\n        {\r\n            Foo,\r\n            Bar\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            try\r\n            {\r\n                Console.WriteLine($\">>> Generic<object>'\");\r\n                var genericType = typeof(Generic<>).MakeGenericType(typeof(object));\r\n                Console.WriteLine($\"<<< Got {genericType}\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine($\"!!! Failed Generic: {e}\");\r\n            }\r\n\r\n            try\r\n            {\r\n                Console.WriteLine($\">>> Generic<int>'\");\r\n                var genericType = typeof(Generic<>).MakeGenericType(typeof(int));\r\n                Console.WriteLine($\"<<< Got {genericType}\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine($\"!!! Failed Generic: {e}\");\r\n            }\r\n\r\n            try\r\n            {\r\n                Console.WriteLine($\">>> EnumGeneric<MyEnum>'\");\r\n                var genericType = typeof(EnumGeneric<>).MakeGenericType(typeof(MyEnum));\r\n                Console.WriteLine($\"<<< Got {genericType}\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine($\"!!! Failed EnumGeneric: {e}\");\r\n            }\r\n\r\n            try\r\n            {\r\n                Console.WriteLine($\">>> StructGeneric<int>'\");\r\n                var genericType = typeof(StructGeneric<>).MakeGenericType(typeof(int));\r\n                Console.WriteLine($\"<<< Got {genericType}\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine($\"!!! Failed StructGeneric: {e}\");\r\n            }\r\n\r\n            try\r\n            {\r\n                Console.WriteLine($\">>> StructGeneric<MyEnum>'\");\r\n                var genericType = typeof(StructGeneric<>).MakeGenericType(typeof(MyEnum));\r\n                Console.WriteLine($\"<<< Got {genericType}\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine($\"!!! Failed StructGeneric: {e}\");\r\n            }\r\n\r\n            try\r\n            {\r\n                Console.WriteLine($\">>> NewGeneric<MyEnum>'\");\r\n                var genericType = typeof(NewGeneric<>).MakeGenericType(typeof(MyEnum));\r\n                Console.WriteLine($\"<<< Got {genericType}\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine($\"!!! Failed NewGeneric: {e}\");\r\n            }\r\n\r\n            try\r\n            {\r\n                Console.WriteLine($\">>> NotNullGeneric<MyEnum>'\");\r\n                var genericType = typeof(NotNullGeneric<>).MakeGenericType(typeof(MyEnum));\r\n                Console.WriteLine($\"<<< Got {genericType}\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine($\"!!! Failed NotNullGeneric: {e}\");\r\n            }\r\n\r\n            try\r\n            {\r\n                Console.WriteLine($\">>> ComparableGeneric<MyEnum>'\");\r\n                var genericType = typeof(ComparableGeneric<>).MakeGenericType(typeof(MyEnum));\r\n                Console.WriteLine($\"<<< Got {genericType}\");\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine($\"!!! Failed ComparableGeneric: {e}\");\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n#### Managed Output\r\nOutput via `dotnet run`:\r\n\r\n```text\r\n>>> Generic<object>'\r\n<<< Got My.Program+Generic`1[System.Object]\r\n>>> Generic<int>'\r\n<<< Got My.Program+Generic`1[System.Int32]\r\n>>> EnumGeneric<MyEnum>'\r\n<<< Got My.Program+EnumGeneric`1[My.Program+MyEnum]\r\n>>> StructGeneric<int>'\r\n<<< Got My.Program+StructGeneric`1[System.Int32]\r\n>>> StructGeneric<MyEnum>'\r\n<<< Got My.Program+StructGeneric`1[My.Program+MyEnum]\r\n>>> NewGeneric<MyEnum>'\r\n<<< Got My.Program+NewGeneric`1[My.Program+MyEnum]\r\n>>> NotNullGeneric<MyEnum>'\r\n<<< Got My.Program+NotNullGeneric`1[My.Program+MyEnum]\r\n>>> ComparableGeneric<MyEnum>'\r\n<<< Got My.Program+ComparableGeneric`1[My.Program+MyEnum]\r\n```\r\n\r\n#### Unmanaged Output\r\nOutput via `dotnet publish -v d -r osx-x64`\r\n\r\n```text\r\n>>> Generic<object>'\r\n<<< Got My.Program+Generic`1[System.Object]\r\n>>> Generic<int>'\r\n!!! Failed Generic: System.Reflection.MissingMetadataException: 'My.Program.Generic<System.Int32>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x14a\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0xab\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x36\r\n   at My.Program.Main(String[]) + 0xf0\r\n>>> EnumGeneric<MyEnum>'\r\n!!! Failed EnumGeneric: System.Reflection.MissingMetadataException: 'My.Program.EnumGeneric<My.Program.MyEnum>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x14a\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0xab\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x36\r\n   at My.Program.Main(String[]) + 0x17e\r\n>>> StructGeneric<int>'\r\n!!! Failed StructGeneric: System.Reflection.MissingMetadataException: 'My.Program.StructGeneric<System.Int32>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x14a\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0xab\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x36\r\n   at My.Program.Main(String[]) + 0x20c\r\n>>> StructGeneric<MyEnum>'\r\n!!! Failed StructGeneric: System.Reflection.MissingMetadataException: 'My.Program.StructGeneric<My.Program.MyEnum>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x14a\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0xab\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x36\r\n   at My.Program.Main(String[]) + 0x29a\r\n>>> NewGeneric<MyEnum>'\r\n!!! Failed NewGeneric: System.Reflection.MissingMetadataException: 'My.Program.NewGeneric<My.Program.MyEnum>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x14a\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0xab\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x36\r\n   at My.Program.Main(String[]) + 0x328\r\n>>> NotNullGeneric<MyEnum>'\r\n!!! Failed NotNullGeneric: System.Reflection.MissingMetadataException: 'My.Program.NotNullGeneric<My.Program.MyEnum>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x14a\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0xab\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x36\r\n   at My.Program.Main(String[]) + 0x3b6\r\n>>> ComparableGeneric<MyEnum>'\r\n!!! Failed ComparableGeneric: System.Reflection.MissingMetadataException: 'My.Program.ComparableGeneric<My.Program.MyEnum>' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.ConstructedGenericTypeTable.Factory(RuntimeConstructedGenericTypeInfo.UnificationKey) + 0x14a\r\n   at System.Collections.Concurrent.ConcurrentUnifierWKeyed`2.GetOrAdd(K) + 0xab\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeConstructedGenericTypeInfo.GetRuntimeConstructedGenericTypeInfo(RuntimeTypeInfo, RuntimeTypeInfo[], RuntimeTypeHandle) + 0x36\r\n   at My.Program.Main(String[]) + 0x444\r\n```\r\n\r\n### Toolchain Info\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.102\r\n Commit:    573d158fea\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.15\r\n OS Platform: Darwin\r\n RID:         osx.10.15-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.1.102/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.2\r\n  Commit:  916b5cba26\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [/usr/local/share/dotnet/sdk]\r\n  3.1.101 [/usr/local/share/dotnet/sdk]\r\n  3.1.102 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/corert/issues/8047","RelatedDescription":"Closed issue \"Non-reference generic type parameters throw MissingMetadataException\" (#8047)"},{"Id":"583593272","IsPullRequest":true,"CreatedAt":"2020-03-18T12:14:22","Actor":"kant2002","Number":"8046","RawContent":null,"Title":"Hopefully this will break,","State":"closed","Body":"since it will be aligned with my observations regarding Python code\r\nsubmitted in #8021 and confirmed by @yowl I belive that currently\r\nrunning tests is broken, and need more proof for my hypothesis.\r\n\r\nAlso 3.7.3 is last version in `netcorenativeassets` container,\r\nbut `dotnet/runtime` state that 3.7.4 is required.\r\nMaybe at least 3.7.4 should be uploaded to be aligned\r\nwith dotnet/runtime\r\nAnd last request, if this fails, can I submit PR to dotnet/runtime?\r\nsince most likely it is broken there as well.","Url":"https://github.com/dotnet/corert/pull/8046","RelatedDescription":"Closed or merged PR \"Hopefully this will break,\" (#8046)"},{"Id":"581672393","IsPullRequest":true,"CreatedAt":"2020-03-16T10:26:46","Actor":"MichalStrehovsky","Number":"8040","RawContent":null,"Title":"Get rid of nullable-related EEType info","State":"closed","Body":"We no longer need the IsNullable rare flag because EETypeElementType captures that. We can now check for nullable without going to the rare flags.\r\n\r\nI went ahead and also deleted the pointer to the T type in nullable, since this is redundant with the generic composition information (generic composition is new as of ~2 years ago - we didn't have that before).","Url":"https://github.com/dotnet/corert/pull/8040","RelatedDescription":"Closed or merged PR \"Get rid of nullable-related EEType info\" (#8040)"},{"Id":"581126448","IsPullRequest":true,"CreatedAt":"2020-03-16T09:22:09","Actor":"MichalStrehovsky","Number":"8037","RawContent":null,"Title":"Rewrite RhUnbox in managed code","State":"closed","Body":"Mostly want to get rid of the dependencies on nullable-related fields on EEType on the unmanaged side of the runtime. This is the only place that depends on them. Deletion will follow.","Url":"https://github.com/dotnet/corert/pull/8037","RelatedDescription":"Closed or merged PR \"Rewrite RhUnbox in managed code\" (#8037)"},{"Id":"581691290","IsPullRequest":true,"CreatedAt":"2020-03-16T07:55:51","Actor":"jkotas","Number":"8041","RawContent":null,"Title":"Delete RHBINDER and RHDUMP ifdefs","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/8041","RelatedDescription":"Closed or merged PR \"Delete RHBINDER and RHDUMP ifdefs\" (#8041)"},{"Id":"581332998","IsPullRequest":true,"CreatedAt":"2020-03-15T13:26:34","Actor":"MichalStrehovsky","Number":"8039","RawContent":null,"Title":"Take advantage of new EETypeElementType values","State":"closed","Body":"After #8004, some information in EEType was duplicated. This frees up two bits in the main flags, and makes a couple checks easier.\r\n\r\nI'm keeping the ParameterizedTypeShape concept because it makes casting Sz/Md arrays easier.","Url":"https://github.com/dotnet/corert/pull/8039","RelatedDescription":"Closed or merged PR \"Take advantage of new EETypeElementType values\" (#8039)"},{"Id":"581126758","IsPullRequest":true,"CreatedAt":"2020-03-14T18:53:04","Actor":"MichalStrehovsky","Number":"8038","RawContent":null,"Title":"Rewrite RhCreateGenericInstanceDescForType2 in managed code","State":"closed","Body":"Quoting from a (David's?) comment I'm deleting: \"this is a ridiculous API\". The API has a long history and there's no reason for it to exist anymore. Inlining the functionality it was providing into the runtime type loader.\r\n\r\nThis lets us delete a bunch of EEType knowledge from the unmanaged runtime.","Url":"https://github.com/dotnet/corert/pull/8038","RelatedDescription":"Closed or merged PR \"Rewrite RhCreateGenericInstanceDescForType2 in managed code\" (#8038)"},{"Id":"580774651","IsPullRequest":false,"CreatedAt":"2020-03-13T18:41:59","Actor":"PurnaChandraPanda","Number":"8036","RawContent":null,"Title":"Is PublishSingleFile not supported for Linux?","State":"closed","Body":"On my WSL machine, I tried to compress my .NET Core 3.1 Console application. \r\n\r\n```\r\nuadmin@MININT-BJ5SNCB:/mnt/d/work/samples/DotNetSample/MinificationTest/ConsoleApp1$ sudo dotnet publish -r linux-x64 -c Release /p:PublishSingleFile=true /p:PublishTrimmed=true\r\nMicrosoft (R) Build Engine version 16.4.0+e901037fe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 16.62 sec for /mnt/d/work/samples/DotNetSample/MinificationTest/ConsoleApp1/ConsoleApp1.csproj.\r\n  ConsoleApp1 -> /mnt/d/work/samples/DotNetSample/MinificationTest/ConsoleApp1/bin/Release/netcoreapp3.1/linux-x64/ConsoleApp1.dll\r\n  Optimizing assemblies for size, which may change the behavior of the app. Be sure to test after publishing. See: https://aka.ms/dotnet-illink\r\n  ConsoleApp1 -> /mnt/d/work/samples/DotNetSample/MinificationTest/ConsoleApp1/bin/Release/netcoreapp3.1/linux-x64/publish/\r\n```\r\n\r\nWhen I tried to access the app from same WSL ubuntu linux, it failed with \"Command Not Found\". Can you please let me know what I am missing here?\r\n\r\n```\r\nuadmin@MININT-BJ5SNCB:/mnt/d/work/samples/DotNetSample/MinificationTest/ConsoleApp1/bin/Release/netcoreapp3.1/linux-x64/publish$ ConsoleApp1\r\nConsoleApp1: command not found\r\n```","Url":"https://github.com/dotnet/corert/issues/8036","RelatedDescription":"Closed issue \"Is PublishSingleFile not supported for Linux?\" (#8036)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"592358102","IsPullRequest":true,"CreatedAt":"2020-04-02T04:57:58","Actor":"dotnet-maestro[bot]","Number":"11111","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/2/2020 4:44 AM\r\n- **Commit**: 3afa35569f53dceabbff596010f52ea328b0d5f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-preview.3.20201.2\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11111","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/templating\" (#11111)"},{"Id":"592348909","IsPullRequest":true,"CreatedAt":"2020-04-02T04:27:13","Actor":"dotnet-maestro[bot]","Number":"11110","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from aspnet/websdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee\r\n- **Build**: 20200401.3\r\n- **Date Produced**: 4/2/2020 4:17 AM\r\n- **Commit**: 02b9b9ce80ef82c1681421b3b493bfeeacb2b916\r\n- **Branch**: refs/heads/release/5.0.1xx-preview3\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web** -> 5.0.100-preview.3.20201.3\r\n\r\n[marker]: <> (End:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11110","RelatedDescription":"Open PR \"[release/5.0.1xx-preview3] Update dependencies from aspnet/websdk\" (#11110)"},{"Id":"592332084","IsPullRequest":true,"CreatedAt":"2020-04-02T03:28:03","Actor":"dotnet-maestro[bot]","Number":"11109","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: fcb06124-ac40-4456-eda2-08d7d0ee12d3\r\n- **Build**: 20200401.12\r\n- **Date Produced**: 4/2/2020 1:44 AM\r\n- **Commit**: f753368cc6a3f84b7855ec5ed76b99e3ebb7d7c5\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.3.20201.12\r\n\r\n[marker]: <> (End:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11109","RelatedDescription":"Open PR \"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore\" (#11109)"},{"Id":"592214475","IsPullRequest":true,"CreatedAt":"2020-04-02T02:54:14","Actor":"dotnet-maestro[bot]","Number":"11104","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4da35469-f761-4937-eda3-08d7d0ee12d3)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 4da35469-f761-4937-eda3-08d7d0ee12d3\r\n- **Build**: 20200401.7\r\n- **Date Produced**: 4/1/2020 8:30 PM\r\n- **Commit**: 73da9bb62ee77cd0984d521572f64c60bf098762\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **System.CodeDom** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-preview.3-runtime.20201.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-preview.3.20201.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-preview.3.20201.7\r\n  - **System.Security.Cryptography.ProtectedData** -> 5.0.0-preview.3.20201.7\r\n  - **System.Text.Encoding.CodePages** -> 5.0.0-preview.3.20201.7\r\n  - **System.Resources.Extensions** -> 5.0.0-preview.3.20201.7\r\n\r\n[marker]: <> (End:4da35469-f761-4937-eda3-08d7d0ee12d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11104","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview3] Update dependencies from dotnet/runtime\" (#11104)"},{"Id":"592315637","IsPullRequest":false,"CreatedAt":"2020-04-02T01:43:40","Actor":"jeromelaban","Number":"11108","RawContent":null,"Title":"[MSBuildExtras] Using msbuild extras under linux fails with missing Microsoft.WinFX.props","State":"open","Body":"[MSBuild extras](https://github.com/novotnyllc/MSBuildSdkExtras) validates that projects can successfully build under a variety of .NET Runtimes and OSes, and a recent addition of validation of .NET Core 3.1 fails the build under Linux with the following error:\r\n\r\n```\r\n/__t/dotnet/sdk/3.1.201/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.NET.Sdk.WindowsDesktop.props(208,3): \r\nerror MSB4019: The imported project \"/__t/dotnet/sdk/3.1.201/Sdks/Microsoft.NET.Sdk.WindowsDesktop/targets/Microsoft.WinFX.props\" was not found. \r\nConfirm that the expression in the Import declaration \"Microsoft.WinFX.props\" is correct, and that the file exists on disk.\r\n```\r\n\r\nThis error does not happen with .NET Core 3.0 and 2.2.\r\n\r\nThe error happens when building [this project](https://github.com/novotnyllc/MSBuildSdkExtras/blob/39737a3ed9b3e29ad4f3a4d1e07d00fa679e2965/TestProjects/Linux-C%23/cross-ios-netstd2/cross-ios-netstd2.csproj), with [this script](https://github.com/novotnyllc/MSBuildSdkExtras/blob/904123f47decab3f88204f4002d3fe4740a25529/azure-pipelines.yml#L158).","Url":"https://github.com/dotnet/sdk/issues/11108","RelatedDescription":"Open issue \"[MSBuildExtras] Using msbuild extras under linux fails with missing Microsoft.WinFX.props\" (#11108)"},{"Id":"592291718","IsPullRequest":false,"CreatedAt":"2020-04-02T01:08:43","Actor":"BruceForstall","Number":"11107","RawContent":null,"Title":"`dotnet build --help` should be more helpful","State":"open","Body":"When I run `dotnet build --help`, I see:\r\n\r\n```\r\nUsage: dotnet build [options] <PROJECT | SOLUTION>\r\n\r\nArguments:\r\n  <PROJECT | SOLUTION>   The project or solution file to operate on. If a file is not specified, the command will search the current directory for one.\r\n\r\nOptions:\r\n  -h, --help                            Show command line help.\r\n  -o, --output <OUTPUT_DIR>             The output directory to place built artifacts in.\r\n  -f, --framework <FRAMEWORK>           The target framework to build for. The target framework must also be specified in the project file.\r\n  -c, --configuration <CONFIGURATION>   The configuration to use for building the project. The default for most projects is 'Debug'.\r\n  -r, --runtime <RUNTIME_IDENTIFIER>    The target runtime to build for.\r\n  --version-suffix <VERSION_SUFFIX>     Set the value of the $(VersionSuffix) property to use when building the project.\r\n  --no-incremental                      Do not use incremental building.\r\n  --no-dependencies                     Do not build project-to-project references and only build the specified project.\r\n  /nologo, --nologo                     Do not display the startup banner or the copyright message.\r\n  --no-restore                          Do not restore the project before building.\r\n  --interactive                         Allows the command to stop and wait for user input or action (for example to complete authentication).\r\n  -v, --verbosity <LEVEL>               Set the MSBuild verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\r\n  --force                               Force all dependencies to be resolved even if the last restore was successful.\r\n                                        This is equivalent to deleting project.assets.json.\r\n```\r\n\r\nIt could be more helpful in several ways:\r\n1. `--framework`: what can I use for `<FRAMEWORK>`? Give me the list. Give me an example. It says, \"The target framework must also be specified in the project file.\" Tell me which project file you're looking at, and which frameworks are in there right now. Tell me the default.\r\n2. `--runtime`. What can I use for `<RUNTIME_IDENTIFIER>`? Give me some examples. Tell me where to find the entire list. Tell me what the default is. Link to the RID catalog documentation https://docs.microsoft.com/en-us/dotnet/core/rid-catalog?\r\n3. Include an URL to the documentation, either https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build or more generally https://docs.microsoft.com/en-us/dotnet/core/tools/.\r\n\r\nNit: shouldn't the syntax on the first line be:\r\n```\r\nUsage: dotnet build [options] [<PROJECT | SOLUTION>]\r\n```\r\nwith `[` `]` around PROJECT/SOLUTION to indicate it is optional to specify that?","Url":"https://github.com/dotnet/sdk/issues/11107","RelatedDescription":"Open issue \"`dotnet build --help` should be more helpful\" (#11107)"},{"Id":"592135222","IsPullRequest":true,"CreatedAt":"2020-04-02T00:27:54","Actor":"dotnet-maestro[bot]","Number":"11102","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore-tooling","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cb8d14bb-ac49-48d4-0732-08d7d0ed8d73)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: cb8d14bb-ac49-48d4-0732-08d7d0ed8d73\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 6:27 PM\r\n- **Commit**: 606e87fc4430a73ff5a765d1561f86ddd6736835\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor** -> 5.0.0-preview.3.20201.2\r\n\r\n[marker]: <> (End:cb8d14bb-ac49-48d4-0732-08d7d0ed8d73)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11102","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore-tooling\" (#11102)"},{"Id":"592263591","IsPullRequest":true,"CreatedAt":"2020-04-01T23:31:56","Actor":"dotnet-maestro[bot]","Number":"11106","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from dotnet/windowsdesktop","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:48da31a5-ecc8-4f94-eda6-08d7d0ee12d3)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 48da31a5-ecc8-4f94-eda6-08d7d0ee12d3\r\n- **Build**: 20200401.4\r\n- **Date Produced**: 4/1/2020 10:23 PM\r\n- **Commit**: 164016bc4e9c42ad7d4bcc51cb84589a391c65a6\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App** -> 5.0.0-preview.3.20201.4\r\n\r\n[marker]: <> (End:48da31a5-ecc8-4f94-eda6-08d7d0ee12d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11106","RelatedDescription":"Open PR \"[release/5.0.1xx-preview3] Update dependencies from dotnet/windowsdesktop\" (#11106)"},{"Id":"592116486","IsPullRequest":true,"CreatedAt":"2020-04-01T23:29:43","Actor":"dotnet-maestro[bot]","Number":"11101","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:48da31a5-ecc8-4f94-eda6-08d7d0ee12d3)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 48da31a5-ecc8-4f94-eda6-08d7d0ee12d3\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 5:57 PM\r\n- **Commit**: d455df84028c76ca7a8aaa934036f482a04a3fdd\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App** -> 5.0.0-preview.3.20201.2\r\n\r\n[marker]: <> (End:48da31a5-ecc8-4f94-eda6-08d7d0ee12d3)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop** -> 5.0.0-preview.3.20201.2 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11101","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview3] Update dependencies from dotnet/windowsdesktop\" (#11101)"},{"Id":"591502416","IsPullRequest":true,"CreatedAt":"2020-04-01T21:49:18","Actor":"dotnet-maestro[bot]","Number":"11082","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5a976d45-b90d-4c39-d453-08d76e1d3434)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 5a976d45-b90d-4c39-d453-08d76e1d3434\r\n- **Build**: 20200331.2\r\n- **Date Produced**: 4/1/2020 2:44 AM\r\n- **Commit**: 57d5bbb58f17a8cb3a82c81839c9379b4fcfe0d8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.4\r\n\r\n[marker]: <> (End:5a976d45-b90d-4c39-d453-08d76e1d3434)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11082","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#11082)"},{"Id":"592183455","IsPullRequest":true,"CreatedAt":"2020-04-01T20:27:14","Actor":"dotnet-maestro[bot]","Number":"11103","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 6:01 PM\r\n- **Commit**: ca5cd91d6854a4ce941887cca6a1d04fa67d36be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.4.20201.2\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11103","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11103)"},{"Id":"592245983","IsPullRequest":false,"CreatedAt":"2020-04-01T20:02:08","Actor":"clairernovotny","Number":"11105","RawContent":null,"Title":"DeterministicSourcePaths doesn't take NuGet source packages into account","State":"open","Body":"**Version Used**: 5.0p1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a class library\r\n2. Add a package reference to xunit.assert.source\r\n3. enable `Deterministic` and `ContinuousIntegrationBuild`\r\n\r\n\r\n\r\n**Expected Behavior**:\r\nA source root should be created for the NuGet source package and the path to the source normalized/deterministic. \r\n\r\n**Actual Behavior**:\r\nThe source paths for the source package point to the NuGet directory and are not deterministic.\r\n\r\n\r\nPossible solution:\r\nNuGet has a variable for its package root. We can add a SourceRoot for that and that'd cover all source packages under that root:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <SourceRoot Include=\"$(NuGetPackageRoot)\" Condition=\"'$(NuGetPackageRoot)' != ''\" />\r\n  </ItemGroup>\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/11105","RelatedDescription":"Open issue \"DeterministicSourcePaths doesn't take NuGet source packages into account\" (#11105)"},{"Id":"592048776","IsPullRequest":true,"CreatedAt":"2020-04-01T18:33:38","Actor":"dotnet-maestro[bot]","Number":"11097","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: db42dfcc-7777-466a-4ef3-08d7a4f251c6\r\n- **Build**: 20200401.1\r\n- **Date Produced**: 4/1/2020 4:09 PM\r\n- **Commit**: 210d5c4babbbe15c730f2643815f949b7a4e2467\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-preview.3.20201.1\r\n\r\n[marker]: <> (End:db42dfcc-7777-466a-4ef3-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11097","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11097)"},{"Id":"591866216","IsPullRequest":true,"CreatedAt":"2020-04-01T17:11:36","Actor":"dotnet-maestro[bot]","Number":"11091","RawContent":null,"Title":"[master] Update dependencies from aspnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 83e6badd-2490-46c6-4ef2-08d7a4f251c6\r\n- **Build**: 20200331.1\r\n- **Date Produced**: 3/31/2020 12:44 PM\r\n- **Commit**: 4eda13173951ac03e21454507778016df7720e16\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web** -> 5.0.100-preview.4.20181.1\r\n\r\n[marker]: <> (End:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11091","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/websdk\" (#11091)"},{"Id":"592068474","IsPullRequest":true,"CreatedAt":"2020-04-01T17:05:41","Actor":"AaronRobinsonMSFT","Number":"11100","RawContent":null,"Title":"Fix renaming issue with copying ComReferences during publishing.","State":"open","Body":"Fixes #10908 \r\n\r\n~~This fix is missing tests for this scenario since it requires and only runs using the .NET Framework version of MSBuild. The current [`COMReference` tests](https://github.com/dotnet/sdk/blob/master/src/Tests/Microsoft.NET.Build.Tests/COMReferenceTests.cs) appear to have a relatively simply path forward, but this will also require understanding the build machines in order to select two COM servers that can be used for validation.~~\r\n\r\nAdded test relying on a Visual Studio published COM server.\r\n\r\n/cc @dsplaisted ","Url":"https://github.com/dotnet/sdk/pull/11100","RelatedDescription":"Open PR \"Fix renaming issue with copying ComReferences during publishing.\" (#11100)"},{"Id":"591660696","IsPullRequest":true,"CreatedAt":"2020-04-01T16:59:56","Actor":"dotnet-maestro[bot]","Number":"11089","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8f801b1f-3ee8-40c4-ed90-08d7cb65d119)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 8f801b1f-3ee8-40c4-ed90-08d7cb65d119\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.App.Runtime.win-x64** -> 3.1.4\r\n\r\n[marker]: <> (End:8f801b1f-3ee8-40c4-ed90-08d7cb65d119)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11089","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#11089)"},{"Id":"592054981","IsPullRequest":false,"CreatedAt":"2020-04-01T16:43:07","Actor":"bjorg","Number":"11099","RawContent":null,"Title":"dotnet publish is missing --no-incremental option","State":"open","Body":"As far as I can tell, it's not possible to do `dotnet publish --no-incremental`. Instead, I have to first do a `dotnet build --no-incremental`, followed by `dotnet publish`. Is there a work around to achieve the same thing in a single command?","Url":"https://github.com/dotnet/sdk/issues/11099","RelatedDescription":"Open issue \"dotnet publish is missing --no-incremental option\" (#11099)"},{"Id":"591867168","IsPullRequest":true,"CreatedAt":"2020-04-01T16:42:56","Actor":"dotnet-maestro[bot]","Number":"11093","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: c167c97f-374f-4f20-31ff-08d7a4f3bc87\r\n- **Build**: 20200331.5\r\n- **Date Produced**: 4/1/2020 1:41 AM\r\n- **Commit**: a974402336f00d2ce9fe5437b297f4c013e6feac\r\n- **Branch**: refs/heads/release/fsharp5\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler** -> 11.0.0-beta.20181.5\r\n\r\n[marker]: <> (End:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11093","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/fsharp\" (#11093)"},{"Id":"592051078","IsPullRequest":false,"CreatedAt":"2020-04-01T16:36:29","Actor":"Panuchi","Number":"11098","RawContent":null,"Title":"Cmd.exe exited with code '1'","State":"open","Body":"https://github.com/vknet/vk/commit/132484466870dfa5016d41bf8b2365daaafa1bf8\r\n\r\nI added two of these parameters from the commit on top, an error occurred and when executing the dotnet nuget push *.nupkg -k *** -s https://www.myget.org/F/vknet/\r\n===============\r\n\"C:\\windows\\system32\\cmd.exe\" /D  E: ON /V: OFF /S /C \"CALL\" D:\\a\\_temp\\632e1878-73a1-496c-8483-8dd17c58a7e9.cmd \"\"\r\nerror: File does not exist (* .nupkg).\r\n## [error] Cmd.exe exited with code '1'.\r\nHere is a mistake","Url":"https://github.com/dotnet/sdk/issues/11098","RelatedDescription":"Open issue \"Cmd.exe exited with code '1'\" (#11098)"},{"Id":"591866748","IsPullRequest":true,"CreatedAt":"2020-04-01T15:01:36","Actor":"dotnet-maestro[bot]","Number":"11092","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore-tooling","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: ed1c2bc3-ada8-4f10-fd59-08d7a4f28342\r\n- **Build**: 20200331.8\r\n- **Date Produced**: 4/1/2020 2:25 AM\r\n- **Commit**: d23b03d665e5a8ca639ce3f3e22bc9e8c921d686\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor** -> 5.0.0-preview.4.20181.8\r\n\r\n[marker]: <> (End:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11092","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore-tooling\" (#11092)"},{"Id":"591865376","IsPullRequest":true,"CreatedAt":"2020-04-01T14:39:06","Actor":"dotnet-maestro[bot]","Number":"11090","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200401.1\r\n- **Date Produced**: 4/1/2020 10:30 AM\r\n- **Commit**: e1fa5d7648d46f067e265211fc2c695d409fe788\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom** -> 5.0.0-preview.4.20201.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.4.20201.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-preview.4.20201.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-preview.4-runtime.20201.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-preview.4.20201.1\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-preview.4.20201.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-preview.4.20201.1\r\n  - **System.Security.Cryptography.ProtectedData** -> 5.0.0-preview.4.20201.1\r\n  - **System.Text.Encoding.CodePages** -> 5.0.0-preview.4.20201.1\r\n  - **System.Resources.Extensions** -> 5.0.0-preview.4.20201.1\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11090","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#11090)"},{"Id":"591867606","IsPullRequest":true,"CreatedAt":"2020-04-01T14:32:50","Actor":"dotnet-maestro[bot]","Number":"11094","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200331.9\r\n- **Date Produced**: 3/31/2020 11:06 PM\r\n- **Commit**: b561644e8028e6719c5f25e90a849e3f152a94bd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App** -> 5.0.0-preview.4.20181.9\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop** -> 5.0.0-preview.4.20181.5 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11094","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#11094)"},{"Id":"591868009","IsPullRequest":true,"CreatedAt":"2020-04-01T14:13:19","Actor":"dotnet-maestro[bot]","Number":"11095","RawContent":null,"Title":"[master] Update dependencies from Microsoft/vstest","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9dee50-6009-4f5e-3201-08d7a4f3bc87)\r\n## From https://github.com/microsoft/vstest\r\n- **Subscription**: 3c9dee50-6009-4f5e-3201-08d7a4f3bc87\r\n- **Build**: 20200401-02\r\n- **Date Produced**: 4/1/2020 10:52 AM\r\n- **Commit**: d10bcbb28cc3999bcc12758a41a04b998eb9595b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Test.Sdk** -> 16.6.0\r\n\r\n[marker]: <> (End:3c9dee50-6009-4f5e-3201-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11095","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from Microsoft/vstest\" (#11095)"},{"Id":"591914534","IsPullRequest":false,"CreatedAt":"2020-04-01T13:25:44","Actor":"leung85","Number":"11096","RawContent":null,"Title":"Could not load type 'System.IO.Compression.ZipFile' from assembly on docker raspberry pi when publish with Trimmed ","State":"open","Body":".net Core 3.1.3\r\n**Describe the bug**\r\nBelow code can be run on window\r\nBut on docker with raspberry pi publish with /p:PublishTrimmed=true, have error:\r\n\r\n> Could not load type 'System.IO.Compression.ZipFile' from assembly\r\n\r\n**To Reproduce**\r\nCreate a WebProject and Use below code then publish with /p:PublishTrimmed=true\r\n\r\n```\r\n[HttpGet(\"logs\")]\r\n     public ActionResult GetLog()\r\n     {\r\n         string startPath = @\"./data/logs\";\r\n         string zipPath = @\"./tmp/logs.zip\";\r\n         try\r\n         {\r\n             ZipFile.CreateFromDirectory(startPath, zipPath);\r\n             var data = System.IO.File.ReadAllBytes(zipPath);\r\n             var content = new System.IO.MemoryStream(data);\r\n             const string contentType = \"application/zip\";\r\n             var fileName = $\"logs-{DateTime.Now.ToString(\"yyyyMMddhhmmss\")}.zip\";\r\n             return File(content, contentType, fileName);\r\n         }\r\n         finally\r\n         {\r\n             System.IO.File.Delete(zipPath);\r\n         }\r\n     }\r\n\r\n```","Url":"https://github.com/dotnet/sdk/issues/11096","RelatedDescription":"Open issue \"Could not load type 'System.IO.Compression.ZipFile' from assembly on docker raspberry pi when publish with Trimmed \" (#11096)"},{"Id":"591624520","IsPullRequest":true,"CreatedAt":"2020-04-01T09:57:31","Actor":"dotnet-maestro[bot]","Number":"11088","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200331.16\r\n- **Date Produced**: 4/1/2020 6:38 AM\r\n- **Commit**: b73e221c64397487cc1846bf14b72d128e97b3ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.4.20181.16\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11088","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11088)"},{"Id":"591576325","IsPullRequest":true,"CreatedAt":"2020-04-01T04:26:16","Actor":"dotnet-maestro[bot]","Number":"11087","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4da35469-f761-4937-eda3-08d7d0ee12d3)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 4da35469-f761-4937-eda3-08d7d0ee12d3\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 1:53 AM\r\n- **Commit**: 87c90a052473ca9c4096e08c62fa57b782814df5\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **System.CodeDom** -> 5.0.0-preview.3.20181.15\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.3.20181.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-preview.3.20181.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-preview.3-runtime.20181.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-preview.3.20181.15\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-preview.3.20181.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-preview.3.20181.15\r\n  - **System.Security.Cryptography.ProtectedData** -> 5.0.0-preview.3.20181.15\r\n  - **System.Text.Encoding.CodePages** -> 5.0.0-preview.3.20181.15\r\n  - **System.Resources.Extensions** -> 5.0.0-preview.3.20181.15\r\n\r\n[marker]: <> (End:4da35469-f761-4937-eda3-08d7d0ee12d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11087","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview3] Update dependencies from dotnet/runtime\" (#11087)"},{"Id":"591566429","IsPullRequest":true,"CreatedAt":"2020-04-01T04:18:13","Actor":"dotnet-maestro[bot]","Number":"11086","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200331.11\r\n- **Date Produced**: 4/1/2020 12:06 AM\r\n- **Commit**: 1b3e8e1117731087df3a43ec8a58ff6387761033\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.4.20181.11\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11086","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11086)"},{"Id":"591557321","IsPullRequest":true,"CreatedAt":"2020-04-01T03:56:17","Actor":"dotnet-maestro[bot]","Number":"11085","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from aspnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee\r\n- **Build**: 20200331.3\r\n- **Date Produced**: 4/1/2020 1:19 AM\r\n- **Commit**: f7b706f448546b1ebd62de44ad6ca46eda0df44c\r\n- **Branch**: refs/heads/release/5.0.1xx-preview3\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web** -> 5.0.100-preview.3.20181.3\r\n\r\n[marker]: <> (End:eb1bc63b-48e4-40f5-fcf3-08d7d0f045ee)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11085","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview3] Update dependencies from aspnet/websdk\" (#11085)"},{"Id":"591528027","IsPullRequest":true,"CreatedAt":"2020-04-01T03:37:22","Actor":"dotnet-maestro[bot]","Number":"11084","RawContent":null,"Title":"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: fcb06124-ac40-4456-eda2-08d7d0ee12d3\r\n- **Build**: 20200331.7\r\n- **Date Produced**: 3/31/2020 10:39 PM\r\n- **Commit**: 6e56c72dc57d413f405b51e5daea731d278440d2\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-preview.3.20181.7\r\n\r\n[marker]: <> (End:fcb06124-ac40-4456-eda2-08d7d0ee12d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11084","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview3] Update dependencies from dotnet/aspnetcore\" (#11084)"},{"Id":"591507211","IsPullRequest":true,"CreatedAt":"2020-03-31T23:32:48","Actor":"alfredmyers","Number":"11083","RawContent":null,"Title":"Updated link from MSDN to Docs","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/11083","RelatedDescription":"Open PR \"Updated link from MSDN to Docs\" (#11083)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1245451420968591361","CreatedAt":"2020-04-01T20:42:12+00:00","UserScreenname":"dotnet","Text":"There's a new preview update of #Blazor 🔥 WebAssembly now available!\n✅ Debugging in @VisualStudio and #VSCode\n✅ Aut… https://t.co/DMAludtr6e","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":83,"FavoriteCount":33,"RawContent":null},{"Id":"1245374116519084037","CreatedAt":"2020-04-01T15:35:01+00:00","UserScreenname":"dotnet","Text":"Looking for that perfect control or functionality for your #Xamarin app? The amazing Xamarin community has you cove… https://t.co/AR2cBfP4Mz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null},{"Id":"1245086722779684867","CreatedAt":"2020-03-31T20:33:01+00:00","UserScreenname":"dotnet","Text":"The Roslyn team is always working to provide tooling that deeply understands the code you are writing in-order to h… https://t.co/DIQlzRlf6R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":28,"RawContent":null},{"Id":"1245031854064963586","CreatedAt":"2020-03-31T16:55:00+00:00","UserScreenname":"dotnet","Text":"We're about to go live! Today, @bartonjs will walk us through the second part of the ASN1 reader/writer. https://t.co/8bg7wLn33x","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":1,"RawContent":null},{"Id":"1245008206897831942","CreatedAt":"2020-03-31T15:21:02+00:00","UserScreenname":"dotnet","Text":"In today's #dotNETConf session replay, we find out what's new and awesome for #Xamarin developers to build stunning… https://t.co/u4kW2wI8fu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"1244728612236013572","CreatedAt":"2020-03-30T20:50:01+00:00","UserScreenname":"dotnet","Text":"We just released an updated .NET Core for March 2020. Here are the links for everything we updated:… https://t.co/MI4Q5sRTdj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":33,"RawContent":null},{"Id":"1244642545969348615","CreatedAt":"2020-03-30T15:08:01+00:00","UserScreenname":"dotnet","Text":"With #VS2019 version 16.6 Preview 1, we also get a new version of #dotNET Core Windows Forms designer. Here's what'… https://t.co/6KNRZm9RLq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":119,"FavoriteCount":34,"RawContent":null},{"Id":"1243637925809717249","CreatedAt":"2020-03-27T20:36:01+00:00","UserScreenname":"dotnet","Text":"Don't forget, there was a new preview of Blazor 🔥 WebAssembly just made available! ...&amp; it has some pretty neat stu… https://t.co/3NTBW5UY5t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":86,"FavoriteCount":38,"RawContent":null},{"Id":"1243558152202838016","CreatedAt":"2020-03-27T15:19:02+00:00","UserScreenname":"dotnet","Text":"Our #dotNET community is active in hosting workshops, meetups, &amp; creating support content. In this #OnDotNET,… https://t.co/KziotlBtrH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":16,"RawContent":null},{"Id":"1243275541861498888","CreatedAt":"2020-03-26T20:36:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, we hear how #dotNET, Azure, &amp; Contigo help lower the cost of insurance and provide in… https://t.co/F2cv2GGjwR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2020-04-02T05:30:34.5682938Z","RunDurationInMilliseconds":13465}