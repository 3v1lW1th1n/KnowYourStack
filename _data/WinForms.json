{"Data":{"GitHub":{"Issues":[{"Id":"506408126","IsPullRequest":false,"CreatedAt":"2019-10-15T03:11:27","Actor":"Shadowblitz16","Number":"2076","RawContent":null,"Title":"translate winforms to use native calls on mac and linux?","State":"closed","Body":"right now winforms is the easiest to use but doesn't look native on other platforms.\r\nI think if someone with the know how was willing to support other platforms natively it would be a better alternative for cross platform development then say xwt and eto.\r\n\r\nI dislike the idea of anything related to wpf since its not native looking even on windows and is harder to use.","Url":"https://github.com/dotnet/winforms/issues/2076","RelatedDescription":"Closed issue \"translate winforms to use native calls on mac and linux?\" (#2076)"},{"Id":"505369351","IsPullRequest":true,"CreatedAt":"2019-10-14T23:59:20","Actor":"hughbe","Number":"2064","RawContent":null,"Title":"Rename and structify OLEINPLACEFRAMEINFO","State":"closed","Body":"## Proposed Changes\r\n- Rename tagOIFI to OLEINPLACEFRAMEINFO\r\n- Structify\r\n- Cleanup\r\n\r\nhttps://docs.microsoft.com/en-us/windows/win32/api/oleidl/ns-oleidl-oleinplaceframeinfo\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2064)","Url":"https://github.com/dotnet/winforms/pull/2064","RelatedDescription":"Closed or merged PR \"Rename and structify OLEINPLACEFRAMEINFO\" (#2064)"},{"Id":"506741107","IsPullRequest":true,"CreatedAt":"2019-10-14T23:48:47","Actor":"hughbe","Number":"2081","RawContent":null,"Title":"Cleanup NMTBHOTITEM","State":"closed","Body":"## Proposed Changes\r\n- Move NMTBHOTITEM to Interop\r\n- Cleanup enums\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2081)","Url":"https://github.com/dotnet/winforms/pull/2081","RelatedDescription":"Closed or merged PR \"Cleanup NMTBHOTITEM\" (#2081)"},{"Id":"506731394","IsPullRequest":true,"CreatedAt":"2019-10-14T23:24:15","Actor":"hughbe","Number":"2079","RawContent":null,"Title":"Structify REQRESIZE","State":"closed","Body":"## Proposed Changes\r\n- Structify REQRESIZE\r\n- Move to Richedit namespace\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2079)","Url":"https://github.com/dotnet/winforms/pull/2079","RelatedDescription":"Closed or merged PR \"Structify REQRESIZE\" (#2079)"},{"Id":"505370466","IsPullRequest":true,"CreatedAt":"2019-10-14T21:21:29","Actor":"hughbe","Number":"2065","RawContent":null,"Title":"Cleanup SendKeys interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup GetKeyboardState/SetKeyboardState\r\n- Cleanup BlockInput\r\n- Cleanup GetAsyncKeyState\r\n- Cleanup OemKeyScan\r\n- Structify EVENTMSG\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2065)","Url":"https://github.com/dotnet/winforms/pull/2065","RelatedDescription":"Closed or merged PR \"Cleanup SendKeys interop\" (#2065)"},{"Id":"505820764","IsPullRequest":true,"CreatedAt":"2019-10-14T18:51:33","Actor":"dotnet-maestro[bot]","Number":"2072","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191014.1\r\n- **Date Produced**: 10/14/2019 8:54 AM\r\n- **Commit**: 4ace84dbf94128b4825c76cdd09b46dba7473478\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19514.1\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2072)\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19513.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19513.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2072","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#2072)"},{"Id":"506762300","IsPullRequest":false,"CreatedAt":"2019-10-14T16:41:54","Actor":"jmarolf","Number":"2084","RawContent":null,"Title":"Incorrect position of controls when layout is suspended","State":"open","Body":"* .NET Core Version: 3.0 RTW\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n\r\n**Problem description:**\r\n\r\nWhen a controls layout is suspended, if anchors are specified, changing the location of that control will cause incorrect positions to occur when layout is resumed\r\n\r\n**Actual behavior:**\r\n\r\n![](https://user-images.githubusercontent.com/9663150/65137205-32999e80-da09-11e9-80f8-852861f4f392.gif)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2084","RelatedDescription":"Open issue \"Incorrect position of controls when layout is suspended\" (#2084)"},{"Id":"506746646","IsPullRequest":true,"CreatedAt":"2019-10-14T16:07:52","Actor":"hughbe","Number":"2083","RawContent":null,"Title":"Remove duplicate GetCursor interop","State":"open","Body":"## Proposed Changes\r\n- Remove duplicate GetCursor/GetCursorPos interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2083)","Url":"https://github.com/dotnet/winforms/pull/2083","RelatedDescription":"Open PR \"Remove duplicate GetCursor interop\" (#2083)"},{"Id":"506744436","IsPullRequest":true,"CreatedAt":"2019-10-14T16:03:41","Actor":"hughbe","Number":"2082","RawContent":null,"Title":"Structify NMVIEWCHANGE","State":"open","Body":"## Proposed Changes\r\n- Structify NMVIEWCHANGE\r\n- Cleanup NMVIEWCHANGE interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2082)","Url":"https://github.com/dotnet/winforms/pull/2082","RelatedDescription":"Open PR \"Structify NMVIEWCHANGE\" (#2082)"},{"Id":"506734642","IsPullRequest":true,"CreatedAt":"2019-10-14T15:45:32","Actor":"hughbe","Number":"2080","RawContent":null,"Title":"Structify SELCHANGE","State":"open","Body":"## Proposed Changes\r\n- Structify SELCHANGE\r\n- Correct definition to use `WORD` instead of `int`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2080)","Url":"https://github.com/dotnet/winforms/pull/2080","RelatedDescription":"Open PR \"Structify SELCHANGE\" (#2080)"},{"Id":"506694403","IsPullRequest":true,"CreatedAt":"2019-10-14T14:36:42","Actor":"vladimir-krestov","Number":"2078","RawContent":null,"Title":"Porting System.Windows.Forms.Design.ListControlStringCollectionEditor","State":"open","Body":"Fixes #1271 \r\nRelated issue: #1115\r\nHave you experienced this same bug with .NET Framework?: No\r\n\r\n## Proposed changes\r\n\r\n- Add System.Windows.Forms.Design.ListControlStringCollectionEditor class\r\n- Add resources for DataSourceLocksItem\r\n- Implement TypeForwardedTo method\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Changed collection editor for controls which use ListControlStringCollectionEditor (TextBox, ComboBox, ListBox, etc.) to compliance with .Net 4.8.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- ComboBox (and others) has ObjectCollectionEditor as Items editor\r\n![image](https://user-images.githubusercontent.com/49272759/66759214-81234700-eea8-11e9-9635-2ac442b7b29c.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n- ComboBox (and others) has ListControlStringCollectionEditor as Items editor \r\n![image](https://user-images.githubusercontent.com/49272759/66755564-e7a46700-eea0-11e9-8b2f-9d6f4eb1ae0c.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2078)","Url":"https://github.com/dotnet/winforms/pull/2078","RelatedDescription":"Open PR \"Porting System.Windows.Forms.Design.ListControlStringCollectionEditor\" (#2078)"},{"Id":"505380643","IsPullRequest":true,"CreatedAt":"2019-10-14T09:15:29","Actor":"hughbe","Number":"2066","RawContent":null,"Title":"Cleanup ChooseColor","State":"closed","Body":"## Proposed Changes\r\n- Cleanup and structify ChooseColor\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2066)","Url":"https://github.com/dotnet/winforms/pull/2066","RelatedDescription":"Closed or merged PR \"Cleanup ChooseColor\" (#2066)"},{"Id":"506531907","IsPullRequest":true,"CreatedAt":"2019-10-14T09:12:47","Actor":"RussKie","Number":"2077","RawContent":null,"Title":"Cleanup `LVM`","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- WindowMessage had a duplicate list of `LVM_` messages. \r\n    * Rename the dups, update callsites to use the existing enum.\r\n    * Add tests to confirm the correct behaviour\r\n- Remove few redundant `else`s to reduce nesting\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Internal plumbing changes, should be not visible to consumers\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal, behaviour was verified with tests\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2077)","Url":"https://github.com/dotnet/winforms/pull/2077","RelatedDescription":"Open PR \"Cleanup `LVM`\" (#2077)"},{"Id":"505811494","IsPullRequest":true,"CreatedAt":"2019-10-14T05:47:55","Actor":"dotnet-maestro[bot]","Number":"2071","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2071)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2071","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2071)"},{"Id":"505361052","IsPullRequest":true,"CreatedAt":"2019-10-14T05:09:55","Actor":"hughbe","Number":"2061","RawContent":null,"Title":"Cleanup OleCreatePropertyFrame","State":"closed","Body":"## Proposed Changes\r\n- Consolidate overloads\r\n- Cleanup interop to avoid array allocation\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2061)","Url":"https://github.com/dotnet/winforms/pull/2061","RelatedDescription":"Closed or merged PR \"Cleanup OleCreatePropertyFrame\" (#2061)"},{"Id":"505779372","IsPullRequest":true,"CreatedAt":"2019-10-14T00:05:53","Actor":"hughbe","Number":"2070","RawContent":null,"Title":"Structify NMTVDISPINFOW","State":"closed","Body":"## Proposed Changes\r\n- Turn NMTVDISPINFOW into a (blittable) struct\r\n- Rename to NMTVDISPINFOW\r\n- Move to interop\r\n\r\nhttps://docs.microsoft.com/en-us/windows/win32/api/commctrl/ns-commctrl-nmtvdispinfow\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2070)","Url":"https://github.com/dotnet/winforms/pull/2070","RelatedDescription":"Closed or merged PR \"Structify NMTVDISPINFOW\" (#2070)"},{"Id":"505929192","IsPullRequest":true,"CreatedAt":"2019-10-11T15:49:16","Actor":"hughbe","Number":"2075","RawContent":null,"Title":"Cleanup NMTOOLBARW/TBBUTTONINFOW/TBBUTTON","State":"open","Body":"## Proposed Changes\r\n- Cleanup NMTOOLBAR\r\n- Cleanup TBBUTTONINFOW\r\n- Cleanup TBBUTTON\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2075)","Url":"https://github.com/dotnet/winforms/pull/2075","RelatedDescription":"Open PR \"Cleanup NMTOOLBARW/TBBUTTONINFOW/TBBUTTON\" (#2075)"},{"Id":"505884509","IsPullRequest":true,"CreatedAt":"2019-10-11T14:24:50","Actor":"vladimir-krestov","Number":"2074","RawContent":null,"Title":"WIP: [Accessibility][ScreenReader]: Fixing tooltip text announcing by NVDA/Narrator","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2073\r\nOriginal bug: [987952](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/987952)\r\n\r\n## Proposed changes\r\n\r\n- Add AnnounceText method to raise UIA notification (ScreenReader says notification text) when a tooltip is shown\r\n- Add IToolTip interface and implement it to unite elements (Control, ToolStripItem, DataGridViewElement) which can have a tooltip (this is necessary to the correct, simple and short implementation of raising UIA notification.)\r\n\r\n> ScreenReader reads the tooltip text of elements of in turn.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A user can hear a text of a shown tooltip\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/66658882-11fce700-ec4b-11e9-95ab-769287de4313.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/66658891-16c19b00-ec4b-11e9-91aa-47ad841fb406.png)\r\n\r\n![2](https://user-images.githubusercontent.com/49272759/66658939-2ccf5b80-ec4b-11e9-9cf2-8246ce386889.gif)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Using NVDA and Narrator\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET Core Version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.356]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2074)","Url":"https://github.com/dotnet/winforms/pull/2074","RelatedDescription":"Open PR \"WIP: [Accessibility][ScreenReader]: Fixing tooltip text announcing by NVDA/Narrator\" (#2074)"},{"Id":"505868040","IsPullRequest":false,"CreatedAt":"2019-10-11T13:55:14","Actor":"vladimir-krestov","Number":"2073","RawContent":null,"Title":"[Accessibility][ScreenReader]: NVDA/Narrator are not reading the ToolTip message","State":"open","Body":"* .NET Core Version: 3.1.0-preview1.19458.7\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Original bug:**\r\n- [Bug 987952](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/987952)\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n- A user can't hear a tooltip text using NVDA/Narrator\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n- NVDA/Narrator don't read a message from shown ToolTip\r\n\r\n**Expected behavior:**\r\n- NVDA/Narrator should announce ToolTip text\r\n![image](https://user-images.githubusercontent.com/49272759/66656755-453d7700-ec47-11e9-9ed1-9cb8c857e030.png)\r\n\r\n\r\n**Minimal repro:**\r\n- Create .Net Core app\r\n- Add some control and ToolTip\r\n- Connect the control with the ToolTip\r\n- Run the test app and NVDA/Narrator\r\n- Listen what NVDA/Narrator say\r\n\r\n**Test app:**\r\n- [[Core][NVDA]ToolTipError.zip](https://github.com/dotnet/winforms/files/3717915/Core.NVDA.ToolTipError.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2073","RelatedDescription":"Open issue \"[Accessibility][ScreenReader]: NVDA/Narrator are not reading the ToolTip message\" (#2073)"},{"Id":"505570305","IsPullRequest":false,"CreatedAt":"2019-10-11T00:09:00","Actor":"JeremyKuhne","Number":"2069","RawContent":null,"Title":"Consider using structs to wrap simple native typedefs","State":"open","Body":"We've been using enums to wrap `typedef`s from Windows. For example:\r\n\r\n``` C\r\ntypedef int BOOL;\r\n```\r\n\r\nWe're [wrapping as](https://github.com/dotnet/winforms/blob/master/src/Common/src/Interop/Interop.BOOL.cs):\r\n\r\n``` C#\r\npublic enum BOOL : int\r\n{\r\n    FALSE = 0,\r\n    TRUE = 1\r\n}\r\n```\r\n\r\nWhile enums are more directly aligned with `typedef`, they don't provide other advantages that C# can provide, such as implicit operators. This can be useful in the case of `BOOL`, where checking `if (b == BOOL.TRUE)` is **not** correct as anything other than `BOOL.FALSE` is true.\r\n\r\nWe mitigate this somewhat with extension methods and copious comments, but it still makes for less than ideal consumption. `if (SomeMethod().IsTrue())` isn't natural.\r\n\r\nUsing a struct with a single internal field is functionally equivalent from an interop perspective. It allows you to use operators with can make code much easier to write:\r\n\r\n``` C#\r\npublic readonly struct BOOL\r\n{\r\n    public int RawValue { get; }\r\n    public BOOL(bool b) => RawValue = b ? 1 : 0;\r\n    public BOOL(int b) => RawValue = b;\r\n    public bool IsTrue => RawValue != 0;\r\n    public bool IsFalse => RawValue == 0;\r\n    public static implicit operator bool(BOOL b) => b.IsTrue;\r\n    public static implicit operator BOOL(bool b) => new BOOL(b);\r\n}\r\n\r\n[DllImport]\r\nBOOL SomeMethod(BOOL value);\r\n\r\n// Can now be used like\r\nif (SomeMethod(true))\r\n\r\n// Instead of\r\nif (SomeMethod(BOOL.TRUE).IsTrue())\r\n```\r\n\r\nThe downsides are:\r\n\r\n1. It isn't technically correct, but .NET treats it the way we want\r\n2. It isn't as easy to optimize as `enum`, but the difference is trivial\r\n3. Core turned down the struct pattern, but doesn't have the volume of APIs WinForms does\r\n\r\nUpsides are:\r\n\r\n1. Natural code flow\r\n2. Less risk of misuse\r\n\r\nAnother thing that is possible with structs that _isn't_ with enums is wrapping pointers. Notably things like `HWND`, `HBITMAP`, etc. Using structs can allow us to strongly type our APIs:\r\n\r\n``` C#\r\npublic readonly struct HWND\r\n{\r\n    public IntPtr Value { get; }\r\n    public HWND(IntPtr handle) => Value = handle;\r\n}\r\n```\r\n\r\nWith pointer size objects added to the mix I'd argue that using structs for `typedef` is the best pattern to be using in WinForms.\r\n\r\nDiscussed [here](https://github.com/dotnet/winforms/pull/1978#pullrequestreview-299083926).\r\n\r\ncc: @hughbe, @zsd4yr, @russkie, @weltkante","Url":"https://github.com/dotnet/winforms/issues/2069","RelatedDescription":"Open issue \"Consider using structs to wrap simple native typedefs\" (#2069)"},{"Id":"505363968","IsPullRequest":true,"CreatedAt":"2019-10-11T00:08:00","Actor":"hughbe","Number":"2063","RawContent":null,"Title":"Cleanup NMLISTVIEW","State":"closed","Body":"## Proposed Changes\r\n- Move NMLISTVIEW to Interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2063)","Url":"https://github.com/dotnet/winforms/pull/2063","RelatedDescription":"Closed or merged PR \"Cleanup NMLISTVIEW\" (#2063)"},{"Id":"505090487","IsPullRequest":false,"CreatedAt":"2019-10-10T23:43:40","Actor":"vladimir-krestov","Number":"2059","RawContent":null,"Title":".NET Core project template doesn't have a manifest file","State":"closed","Body":"* .NET Core Version: 3.1.0-preview1.19458.7\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n- It needs to add a manifest file to Core project template in order for the new app to opt-in into all the latest fixes from Windows. \r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n- Core project template doesn't have a manifest file\r\n\r\n**Expected behavior:**\r\n- Core project template must have a manifest file\r\n\r\n**Minimal repro:**\r\n- Create new .Net Core app\r\n\r\n**Manifest file:**\r\n- [ManifestFile.zip](https://github.com/dotnet/winforms/files/3708508/ManifestFile.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2059","RelatedDescription":"Closed issue \".NET Core project template doesn't have a manifest file\" (#2059)"},{"Id":"505547964","IsPullRequest":false,"CreatedAt":"2019-10-10T22:46:37","Actor":"AdamYoblick","Number":"2068","RawContent":null,"Title":"Port yaml cleanup from winforms-designer","State":"open","Body":"Specifically:\r\n\r\n- Making the variables easier to read\r\n- Only running debug on public builds\r\n\r\nSee https://github.com/dotnet/winforms-designer/pull/963","Url":"https://github.com/dotnet/winforms/issues/2068","RelatedDescription":"Open issue \"Port yaml cleanup from winforms-designer\" (#2068)"},{"Id":"505224653","IsPullRequest":true,"CreatedAt":"2019-10-10T19:40:08","Actor":"dotnet-maestro[bot]","Number":"2060","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191009.5\r\n- **Date Produced**: 10/9/2019 10:22 PM\r\n- **Commit**: 1acb4c3ce4c6497388752adad31825ae7cdb7e2a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19509.5\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2060)","Url":"https://github.com/dotnet/winforms/pull/2060","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2060)"},{"Id":"505430098","IsPullRequest":false,"CreatedAt":"2019-10-10T18:13:45","Actor":"AdamYoblick","Number":"2067","RawContent":null,"Title":"Enable Roslyn Analyzers","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nPort the fixes for Roslyn Analyzer violations from the VS source to the winforms source. See https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/206917 for details.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n**Expected behavior:**\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/2067","RelatedDescription":"Open issue \"Enable Roslyn Analyzers\" (#2067)"},{"Id":"505362494","IsPullRequest":true,"CreatedAt":"2019-10-10T15:54:29","Actor":"hughbe","Number":"2062","RawContent":null,"Title":"Cleanup SYSTEMTIME and dependencies","State":"open","Body":"## Proposed Changes\r\n- Cleanup SYSTEMTIME\r\n- Cleanup NMDATETIMECHANGE\r\n- Cleanup NMDAYSTATE\r\n- Cleanup NMSELCHANGE\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2062)","Url":"https://github.com/dotnet/winforms/pull/2062","RelatedDescription":"Open PR \"Cleanup SYSTEMTIME and dependencies\" (#2062)"},{"Id":"505060225","IsPullRequest":false,"CreatedAt":"2019-10-10T06:18:47","Actor":"0x084E","Number":"2058","RawContent":null,"Title":"NotifyIcon ContextMenuStrip is shown above taskbar","State":"open","Body":"* .NET Core Version: 3.0.100\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nA NotifyIcons ContextMenuStrip is shown above the taskbar and not within.\r\n\r\nI think the reason for this is that ToolStripDropDown.WorkingAreaConstrained is always returning true in .NET Core ([Net.Core Source](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/ToolStripDropDown.cs,8513f6aa3e2a13ef,references) / [.NET Framework Source](https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/ToolStripDropDown.cs,8513f6aa3e2a13ef,references))\r\n\r\n.NET Core 3\r\n![image](https://user-images.githubusercontent.com/7345141/66543472-c278c700-eb35-11e9-9591-631ff7c0e034.png)\r\n\r\n.NET Framework 4.8\r\n![image](https://user-images.githubusercontent.com/7345141/66543527-e805d080-eb35-11e9-867c-3989e5ebc640.png)\r\n\r\n**Actual behavior:**\r\nContextMenu is shown above the taskbar.\r\n\r\n**Expected behavior:**\r\nContextMenu should be shown within the taskbar.\r\n\r\n**Minimal repro:**\r\nCreate a NotifyIcon, set ContextMenuStrip property, show the icon and right click.","Url":"https://github.com/dotnet/winforms/issues/2058","RelatedDescription":"Open issue \"NotifyIcon ContextMenuStrip is shown above taskbar\" (#2058)"},{"Id":"504983597","IsPullRequest":true,"CreatedAt":"2019-10-10T02:38:51","Actor":"merriemcgaw","Number":"2057","RawContent":null,"Title":"Fix link to PLM zip","State":"closed","Body":"Non-Code change. Just updating the instructions to link to the script that turns PLM on/off and resets settings for the first release. We'll update again as soon as we've got the public release with UI that enables/disables instead of feature flags\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2057)","Url":"https://github.com/dotnet/winforms/pull/2057","RelatedDescription":"Closed or merged PR \"Fix link to PLM zip\" (#2057)"},{"Id":"504845353","IsPullRequest":false,"CreatedAt":"2019-10-09T19:24:47","Actor":"cston","Number":"2056","RawContent":null,"Title":"Support WindowsFormsApplicationBase.IsSingleInstance","State":"open","Body":"Support for \"single instance\" applications (see `WindowsFormsApplicationBase.IsSingleInstance`) has not been ported to .NET Core.\r\n\r\nThe [reference source](https://github.com/microsoft/referencesource/blob/master/Microsoft.VisualBasic/runtime/msvbalib/ApplicationServices/WindowsFormsApplicationBase.vb) implementation relies on `System.Runtime.Remoting` to communicate with other instances, and `Remoting` is not available on .NET Core.","Url":"https://github.com/dotnet/winforms/issues/2056","RelatedDescription":"Open issue \"Support WindowsFormsApplicationBase.IsSingleInstance\" (#2056)"},{"Id":"504611058","IsPullRequest":true,"CreatedAt":"2019-10-09T17:43:35","Actor":"dotnet-maestro[bot]","Number":"2055","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191008.9\r\n- **Date Produced**: 10/9/2019 5:01 AM\r\n- **Commit**: 5491acd84b92034d5d53e226682f053a7b376ad9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19508.9\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2055)","Url":"https://github.com/dotnet/winforms/pull/2055","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#2055)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-15T05:30:57.2217108Z","RunDurationInMilliseconds":849}