{"Data":{"GitHubIssues":{"Issues":[{"Id":"362822113","IsPullRequest":false,"CreatedAt":"2018-09-22T03:22:25","Actor":"carlosalcantara2668","Number":"1462","RawContent":null,"Title":"onkeypress does not work in the following browsers: Chrome and Edge","State":"open","Body":"what is working in mozilla,\r\n\r\nBackspace\r\nBackspace\r\nBackspace\r\nArrowLeft\r\nArrowUp\r\nArrowDown\r\nArrowRight\r\nArrowLeft\r\n\r\n![keyboar](https://user-images.githubusercontent.com/16179281/45912802-229aaf00-bdf5-11e8-8810-ca0050d14489.JPG)\r\n\r\n@using Microsoft.JSInterop\r\n\r\nType here: <input onkeypress=@OnKeyPressed />\r\n\r\n\r\n\r\n<ul>\r\n    @foreach (var key in keysPressed)\r\n    {\r\n        <li>@key</li>\r\n    }\r\n</ul>\r\n\r\n@functions {\r\nList<string> keysPressed = new List<string>();\r\n\r\nvoid OnKeyPressed(UIKeyboardEventArgs eventArgs)\r\n{\r\n    Console.WriteLine(Json.Serialize(eventArgs));\r\n    keysPressed.Add(eventArgs.Key);\r\n}\r\n}\r\n","Url":"https://github.com/aspnet/Blazor/issues/1462","RelatedDescription":"Open issue \"onkeypress does not work in the following browsers: Chrome and Edge\" (#1462)"},{"Id":"362365805","IsPullRequest":true,"CreatedAt":"2018-09-21T19:54:45","Actor":"rynowak","Number":"1457","RawContent":null,"Title":"Fix #1399 - crash on start-end syntax for void element","State":"closed","Body":"We weren't correctly recovering when a void element is written as a\r\nstart-end pair. This change cleans up some of the plumbing around\r\nend-tag handling and adds recognition for this case.\r\n\r\nAdded a new bespoke diagnostic for the void element case.","Url":"https://github.com/aspnet/Blazor/pull/1457","RelatedDescription":"Closed or merged PR \"Fix #1399 - crash on start-end syntax for void element\" (#1457)"},{"Id":"362753628","IsPullRequest":false,"CreatedAt":"2018-09-21T19:54:31","Actor":"uwefms","Number":"1461","RawContent":null,"Title":"displaying / downloading pdf in server-side blazor","State":"open","Body":"Is there a way to display a pdf file in server-side blazor like I can do in client-side blazor in a controller like:\r\n\r\n       [HttpGet]\r\n        public IActionResult CreatePDF()\r\n        {\r\n            var globalSettings = new GlobalSettings\r\n            {\r\n                ColorMode = ColorMode.Color,\r\n                Orientation = Orientation.Portrait,\r\n                PaperSize = PaperKind.A4,\r\n                Margins = new MarginSettings { Top = 10 },\r\n                DocumentTitle = \"PDF Report\",\r\n            };\r\n \r\n            var objectSettings = new ObjectSettings\r\n            {\r\n                PagesCount = true,\r\n                HtmlContent = TemplateGenerator.GetHTMLString(),\r\n                WebSettings = { DefaultEncoding = \"utf-8\", UserStyleSheet =  Path.Combine(Directory.GetCurrentDirectory(), \"assets\", \"styles.css\") },\r\n                HeaderSettings = { FontName = \"Arial\", FontSize = 9, Right = \"Page [page] of [toPage]\", Line = true },\r\n                FooterSettings = { FontName = \"Arial\", FontSize = 9, Line = true, Center = \"Report Footer\" }\r\n            };\r\n \r\n            var pdf = new HtmlToPdfDocument()\r\n            {\r\n                GlobalSettings = globalSettings,\r\n                Objects = { objectSettings }\r\n            };\r\n\t\t\tCustomAssemblyLoadContext context = new CustomAssemblyLoadContext();\t\t\t\r\n\t\t\tcontext.LoadUnmanagedLibrary(\"C:\\\\Dinktopdf\\\\libwkhtmltox.dll\");\t\t\t\r\n\r\n\t\t\tvar file = _converter.Convert(pdf);\r\n\t\t\treturn File(file, \"application/pdf\");\r\n        }\r\n\r\n\r\nAt server-side I fail using\r\n\r\nreturn File(file, \"application/pdf\");\r\n\r\nwhich only seems to work in controllers which I did not get to work either.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1461","RelatedDescription":"Open issue \"displaying / downloading pdf in server-side blazor\" (#1461)"},{"Id":"362579462","IsPullRequest":false,"CreatedAt":"2018-09-21T17:09:09","Actor":"emelhu","Number":"1459","RawContent":null,"Title":"base class, public/private parameter ","State":"closed","Body":"![1](https://user-images.githubusercontent.com/7081135/45879252-0fabbe80-bda4-11e8-8cd5-7049b2383079.jpg)\r\n![2](https://user-images.githubusercontent.com/7081135/45879256-13d7dc00-bda4-11e8-8c0b-c22c0b30c9ef.jpg)\r\n\r\n\r\n### **Only a warning, but.._**.","Url":"https://github.com/aspnet/Blazor/issues/1459","RelatedDescription":"Closed issue \"base class, public/private parameter \" (#1459)"},{"Id":"362638946","IsPullRequest":false,"CreatedAt":"2018-09-21T17:08:28","Actor":"tezine","Number":"1460","RawContent":null,"Title":"[Question]: Is it possible to use Angular Elements inside Blazor? ","State":"closed","Body":"Hi, Blazor is a wonderful project but since it's on early stages it lacks many components already available for Angular (or others). \r\nSince Angular allows to pack components as Custom elements ( [info](https://angular.io/guide/elements) ), I wonder if it's possible to reuse them inside a Blazor standalone web app. This would be great since we wouldn't have to create components from scratch all the time. We just wrap them into some C# classes/methods to use it. ","Url":"https://github.com/aspnet/Blazor/issues/1460","RelatedDescription":"Closed issue \"[Question]: Is it possible to use Angular Elements inside Blazor? \" (#1460)"},{"Id":"362446382","IsPullRequest":false,"CreatedAt":"2018-09-21T11:39:30","Actor":"jvelezc","Number":"1458","RawContent":null,"Title":"As I am configuring things I am wondering where I should store variables in server side blazor project","State":"closed","Body":"Could you provide guidance on how to store variables. \r\n\r\nFor example: I ended up putting a appsettings.json on the client side project and using IConfiguration and then just doing \r\n```\r\n\r\n   public class Startup\r\n    {\r\n\r\n        public IConfiguration Configuration { get; }\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n```\r\n\r\nAt startup.cs. But should I have put this on Server project. Should there be a \"blazor way\" to store configs?","Url":"https://github.com/aspnet/Blazor/issues/1458","RelatedDescription":"Closed issue \"As I am configuring things I am wondering where I should store variables in server side blazor project\" (#1458)"},{"Id":"361812403","IsPullRequest":false,"CreatedAt":"2018-09-20T21:27:11","Actor":"panesofglass","Number":"1450","RawContent":null,"Title":"Unable to create Blazor app with fsproj","State":"closed","Body":"I've attempted to create an all-F# Blazor app with each release, but it seems that the current solution requires a `csproj` and expects all files to be C#. I suspect this is because the Blazor tooling is inspecting the solution to find `.cshtml` files and generate the `.g.cs` files the compiler will use. I've built a F# renderer, [Trail](https://github.com/panesofglass/trail), that doesn't require this step, and I would love to build Blazor apps with just the `fsproj`. The only thing in the `csproj` in my Trail sample apps is the [call to build and run the host builder](https://github.com/panesofglass/trail/blob/master/sample/standalone/BlazorApp1/Program.cs).\r\n\r\nI think this should be possible as the mono wasm tooling appears able to run F# projects. I would be very glad to help out with investigating whether this is possible and desirable from a Blazor project perspective.","Url":"https://github.com/aspnet/Blazor/issues/1450","RelatedDescription":"Closed issue \"Unable to create Blazor app with fsproj\" (#1450)"},{"Id":"362352146","IsPullRequest":true,"CreatedAt":"2018-09-20T21:27:09","Actor":"rynowak","Number":"1456","RawContent":null,"Title":"Fix #1450 Skip compilation on non-C# projects","State":"closed","Body":"This change skips our 'temp' compilation that we do to implement 2-phase\r\nbuild for defining components in .cshtml when the project is not C# OR\r\nwhen the project has no .cshtml files.\r\n\r\nThis should make the rest of the build-time Blazor functionality work\r\nfor non-C# projects.\r\n\r\nThis should also make the build faster when you have the Blazor targets\r\nimported in a C# project with no .cshtml files.","Url":"https://github.com/aspnet/Blazor/pull/1456","RelatedDescription":"Closed or merged PR \"Fix #1450 Skip compilation on non-C# projects\" (#1456)"},{"Id":"361983899","IsPullRequest":true,"CreatedAt":"2018-09-20T19:19:27","Actor":"rynowak","Number":"1453","RawContent":null,"Title":"Add Type Inference for Generic-Typed Components","State":"closed","Body":"This change allows you to use generic-typed components without\r\nexplicitly specify type arguments.\r\n\r\n**Before:**\r\n```\r\n<Grid Items=\"@MyItems\" TItem=\"Person\">\r\n...\r\n</Grid>\r\n```\r\n\r\n**After:**\r\n```\r\n<Grid Items=\"@MyItems\">\r\n...\r\n</Grid>\r\n```\r\n\r\nWhere possible, the type of the component will be inferred based on the\r\nvalues passed to component parameters. This won't work like magic, you\r\nhave to specify parameters that provide type arguments for all of the\r\ncomponent's type parameters.\r\n\r\nThis is a best effort system, and it's largely based on the limitations\r\nand behaviours of generic type inference in C#. We think it will work\r\nwell with most Blazor features and for most reasonable components. You\r\nshould not forget it's easy to specify type arguments, because you may\r\nstill have to in some cases.\r\n\r\nIn particular you may notice issues if you are trying to use a generic\r\ntyped component where all of the parameters are delegates or templates.\r\nType inference for delegates/lambdas in C# is based on the context. Any\r\ntime you combine generics and delegates it's easy to get into a scenario\r\nwhere the compiler won't infer the correct type, or will give up.\r\n\r\n----\r\nThe type inference feature works by generating a 'thunk' method in\r\n*caller* that can act as a site for type inference (C# does not support\r\ninference on constructors).\r\n\r\nFor our grid example above, the non-inferenced code will look something\r\nlike:\r\n```\r\nbuilder.OpenComponent<Grid<Person>>(0);\r\nbuilder.AddAttribute(1, \"Items\", MyItems);\r\nbuilder.CloseComponent();\r\n```\r\n\r\nNote that we can only write the type `Grid<Person>` because you wrote\r\n`Person` in your code. What you type in the `TItem` attribute value gets\r\ninserted into the generated code such that it fills in the generic type\r\nparameter.\r\n\r\nOn the other hand, if you want is to infer the type, we have to do some\r\ncompiler magic. That looks like:\r\n```\r\n__Blazor.(long generated name).TypeInference.CreateGrid_0(builder, 0, 1, MyItems);\r\n...\r\n\r\n// elsewhere in the file\r\ninternal static class TypeInference\r\n{\r\n    public static void CreateGrid_0<TItem>(RenderTreeBuilder builder, int seq, int __seq0, global::System.Collections.Generic.List<TItem> __arg0)\r\n    {\r\n\tbuilder.OpenComponent<Grid<TItem>>(seq);\r\n\tbuilder.AddAttribute(__seq0, \"Items\", __arg0);\r\n        builder.CloseComponent();\r\n    }\r\n}\r\n```\r\n\r\nThis allows us to rely on the C# compiler for itype inference.","Url":"https://github.com/aspnet/Blazor/pull/1453","RelatedDescription":"Closed or merged PR \"Add Type Inference for Generic-Typed Components\" (#1453)"},{"Id":"362297964","IsPullRequest":false,"CreatedAt":"2018-09-20T17:56:58","Actor":"rynowak","Number":"1455","RawContent":null,"Title":"Consider splitting up AddAttribute functionality for elements/components","State":"open","Body":"Based on: https://github.com/aspnet/Blazor/pull/1453#discussion_r219171895\r\n\r\nWe have a bunch of overloads of `AddAttribute` but we could potentially reduce runtime complexity by making more decisions at compile time based on whether we're operating on a component or an element.","Url":"https://github.com/aspnet/Blazor/issues/1455","RelatedDescription":"Open issue \"Consider splitting up AddAttribute functionality for elements/components\" (#1455)"},{"Id":"362271875","IsPullRequest":false,"CreatedAt":"2018-09-20T16:57:06","Actor":"alfkonee","Number":"1454","RawContent":null,"Title":"Cannot Inject HttpClient in ServerSide Mode","State":"closed","Body":"Is it possible to inject the IUrlHelper and HttpClient in the ServerSide Rendering Mode of Blazor cuz everytime I try to do so I get this Error\r\n\r\n```\r\nError: System.InvalidOperationException: Unable to resolve service for type 'System.Net.Http.HttpClient' while attempting to activate 'Test.App.Services.WeatherForecastService'.\r\n   at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously(String assemblyName, String methodIdentifier, Object targetInstance, String argsJson)\r\n   at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke(String callId, String assemblyName, String methodIdentifier, Int64 dotNetObjectId, String argsJson)\r\n\r\n   at Microsoft.JSInterop.DotNetDispatcher.InvokeSynchronously(String assemblyName, String methodIdentifier, Object targetInstance, String argsJson)\r\n   at Microsoft.JSInterop.DotNetDispatcher.BeginInvoke(String callId, String assemblyName, String methodIdentifier, Int64 dotNetObjectId, String argsJson)\r\n    at endInvokeDotNetFromJS (http://localhost:5000/_framework/blazor.server.js:23:48556)\r\n    at http://localhost:5000/_framework/blazor.server.js:23:48125\r\n    at new Promise (<anonymous>)\r\n    at e.beginInvokeJSFromDotNet (http://localhost:5000/_framework/blazor.server.js:23:48094)\r\n    at http://localhost:5000/_framework/blazor.server.js:16:11652\r\n    at Array.forEach (<anonymous>)\r\n    at e.invokeClientMethod (http://localhost:5000/_framework/blazor.server.js:16:11623)\r\n    at e.processIncomingData (http://localhost:5000/_framework/blazor.server.js:16:10229)\r\n    at e.connection.onreceive (http://localhost:5000/_framework/blazor.server.js:16:7298)\r\n    at WebSocket.i.onmessage (http://localhost:5000/_framework/blazor.server.js:16:20346)\r\n```\r\nif it's not possible could you provide a method as to how we cn make http calls and get an Insatance of the UrlHelper when using server side rendering ","Url":"https://github.com/aspnet/Blazor/issues/1454","RelatedDescription":"Closed issue \"Cannot Inject HttpClient in ServerSide Mode\" (#1454)"},{"Id":"361867630","IsPullRequest":false,"CreatedAt":"2018-09-20T15:16:37","Actor":"mercersoft","Number":"1451","RawContent":null,"Title":"JsonConvert.SerializeObject fails","State":"closed","Body":"I am trying to serialize a simple class to JSON (using Newtonsoft.JSON) using the code below, but the request fails with the following error: \r\n\r\n**WASM: [Newtonsoft.Json.JsonSerializationException] Error setting value to 'Name' on 'Blazor1.Client.Pages.Index+Foo'.**\r\n\r\nI have added the following block to the default Blazor (0.5.0) Project:\r\n\r\n```\r\n@functions\r\n{\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        string content = \"{ \\\"name\\\" : \\\"PHS\\\" }\";\r\n        Foo foo = JsonConvert.DeserializeObject<Foo>(content);\r\n        var bar = JsonConvert.SerializeObject(foo);\r\n    }\r\n\r\n    public class Foo\r\n    {\r\n        public string Name { get; set; }\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1451","RelatedDescription":"Closed issue \"JsonConvert.SerializeObject fails\" (#1451)"},{"Id":"361957345","IsPullRequest":false,"CreatedAt":"2018-09-20T14:30:04","Actor":"OmarTawfik","Number":"1452","RawContent":null,"Title":"Microsoft.JSInterop.d.ts not available","State":"closed","Body":"I looked through the codebase, npm, and nuget, but couldn't figure out where it is published to.\r\nI want to write my client side interop in TypeScript, and I want to refer to `DotNet.invokeMethod` and other functions in that file, but I cannot figure out where to reference the `.d.ts` from. Is that a WIP?\r\n\r\nhttps://github.com/aspnet/Blazor/blob/0.5.1/src/Microsoft.JSInterop/JavaScriptRuntime/src/Microsoft.JSInterop.ts","Url":"https://github.com/aspnet/Blazor/issues/1452","RelatedDescription":"Closed issue \"Microsoft.JSInterop.d.ts not available\" (#1452)"},{"Id":"361725163","IsPullRequest":true,"CreatedAt":"2018-09-20T09:20:37","Actor":"SteveSandersonMS","Number":"1448","RawContent":null,"Title":"Fix method wiping","State":"closed","Body":"While investigating linking, I found that `ilwipe` couldn't process certain assemblies, and in other cases wasn't throwing the expected clear message if you called a wiped method. This PR fixes the generated IL and adds an E2E test for it.","Url":"https://github.com/aspnet/Blazor/pull/1448","RelatedDescription":"Closed or merged PR \"Fix method wiping\" (#1448)"},{"Id":"361632114","IsPullRequest":true,"CreatedAt":"2018-09-19T18:36:15","Actor":"conficient","Number":"1447","RawContent":null,"Title":"Amend link for [docs]","State":"closed","Body":"The current link for docs points to the wiki which does not have a lot of documentation. Suggest pointing to https://blazor.net/docs/index.html","Url":"https://github.com/aspnet/Blazor/pull/1447","RelatedDescription":"Closed or merged PR \"Amend link for [docs]\" (#1447)"},{"Id":"361742196","IsPullRequest":false,"CreatedAt":"2018-09-19T13:17:36","Actor":"awesomeaaron","Number":"1449","RawContent":null,"Title":"Authentication / Authorization for server side Blazor","State":"closed","Body":"Hi,\r\nI would like to implement authentication/authorization for a server side Blazor app. For MVC app, we use session/cookie and for api we can use oauth / openid. What is the preffered way of doing authentication / authorization for a server side Blazor app.","Url":"https://github.com/aspnet/Blazor/issues/1449","RelatedDescription":"Closed issue \"Authentication / Authorization for server side Blazor\" (#1449)"},{"Id":"361245858","IsPullRequest":true,"CreatedAt":"2018-09-19T12:35:02","Actor":"SteveSandersonMS","Number":"1441","RawContent":null,"Title":"Include TPN file in VSIX and all nupkg files built from \"src\" directory. Fixes #335","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1441","RelatedDescription":"Closed or merged PR \"Include TPN file in VSIX and all nupkg files built from \"src\" directory. Fixes #335\" (#1441)"},{"Id":"361312368","IsPullRequest":false,"CreatedAt":"2018-09-19T12:34:10","Actor":"kwaclaw","Number":"1442","RawContent":null,"Title":"Webcomponents","State":"closed","Body":"Webcomponents are part of the HTML standard. They are custom tags recognized by the browser directly.\r\nOne can write them with Javascript or TypeScript.\r\n\r\nBoth Vue and Angular support the creation of web components, Vue through their \"web-component-wrapper\" and Angular through \"Angular Elements\".\r\n\r\nCan I write webcomponents with Blazor? Preferably in a direct fashion like with Javascript, not indirectly through a wrapper for some \"Blazor component\".","Url":"https://github.com/aspnet/Blazor/issues/1442","RelatedDescription":"Closed issue \"Webcomponents\" (#1442)"},{"Id":"361391820","IsPullRequest":false,"CreatedAt":"2018-09-19T12:32:52","Actor":"gthvidsten","Number":"1443","RawContent":null,"Title":"Blazor in self hosted OWIN on .NET Framework","State":"closed","Body":"I have a service written in .NET Framework that hosts its own webserver using OWIN. Having read about Blazor, I want to start experimenting with it and try to host a Blazor webapp in this service.\r\n\r\nHowever, I haven't found any good instructions on how to do self-hosting with Blazor, especially not on OWIN and .Net Framework. I'd really like a native solution, and converting my solution to .NET Core is not viable. Also, I would really like not to have to compile the Blazor webapp in another solution then copying the files to be hosted using i.e. `Microsoft.Owin.StaticFiles` middleware.\r\n\r\nThe question, then, is quite basic:\r\n\r\nHow can I host a Blazor webapp in my existing OWIN service?","Url":"https://github.com/aspnet/Blazor/issues/1443","RelatedDescription":"Closed issue \"Blazor in self hosted OWIN on .NET Framework\" (#1443)"},{"Id":"361402175","IsPullRequest":false,"CreatedAt":"2018-09-18T23:23:21","Actor":"kant2002","Number":"1444","RawContent":null,"Title":"Rename of the variables does not works","State":"closed","Body":"1. press Ctrl+R, R in the Blazor component view (Client-side)\r\n2. start typing to rename variable\r\nVariable name does not changed in the editor, but some indication in the refactoring view helper\r\n\r\n![image](https://user-images.githubusercontent.com/4257079/45703842-3d6fe800-bb97-11e8-8300-cab57d6f8f9b.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1444","RelatedDescription":"Closed issue \"Rename of the variables does not works\" (#1444)"},{"Id":"361511490","IsPullRequest":false,"CreatedAt":"2018-09-18T23:16:42","Actor":"KnottStudios","Number":"1446","RawContent":null,"Title":"Select is having issues","State":"closed","Body":"VS 2017 15.8.4\r\n<Select> causes a page not to load.\r\nTested with code directly from this github site.\r\nSee attached file.\r\n![snippet](https://user-images.githubusercontent.com/17166749/45720595-6af26c80-bb6a-11e8-8eea-490012f7beae.PNG)\r\n  \r\n","Url":"https://github.com/aspnet/Blazor/issues/1446","RelatedDescription":"Closed issue \"Select is having issues\" (#1446)"},{"Id":"361486536","IsPullRequest":true,"CreatedAt":"2018-09-18T21:16:39","Actor":"SteveSandersonMS","Number":"1445","RawContent":null,"Title":"Update VSTS queue name","State":"closed","Body":"Hopefully fixes the signed builds. These changes are equivalent to some that @natemcmaster recently made elsewhere.","Url":"https://github.com/aspnet/Blazor/pull/1445","RelatedDescription":"Closed or merged PR \"Update VSTS queue name\" (#1445)"},{"Id":"361100715","IsPullRequest":true,"CreatedAt":"2018-09-18T10:53:23","Actor":"IEvangelist","Number":"1440","RawContent":null,"Title":"Update Startup.cs","State":"closed","Body":"Use `nameof` instead of string literal.","Url":"https://github.com/aspnet/Blazor/pull/1440","RelatedDescription":"Closed or merged PR \"Update Startup.cs\" (#1440)"},{"Id":"360819064","IsPullRequest":false,"CreatedAt":"2018-09-18T10:12:26","Actor":"stsrki","Number":"1436","RawContent":null,"Title":"HttpClient response headers are empty","State":"closed","Body":"I'm trying to read custom headers from the HttpResponseHeaders using the following code. \r\n\r\n```\r\npublic static class ExtensionMethods\r\n{\r\n    #region HttpClient\r\n\r\n    public static async Task<IPage<T>> GetPageAsync<T>( this HttpClient httpClient, string requestUri ) where T : class\r\n    {\r\n        using ( var response = await httpClient.GetAsync( requestUri ) )\r\n        {\r\n            response.EnsureSuccessStatusCode();\r\n\r\n            var entries = Json.Deserialize<List<T>>( await response.Content.ReadAsStringAsync() );\r\n            var totalCount = response.Headers.ParseInt( \"X-Total-Count\" );\r\n            var offset = response.Headers.ParseInt( \"X-Offset\" );\r\n            var limit = response.Headers.ParseInt( \"X-Limit\" );\r\n\r\n            return await Task.FromResult( new Page<T>\r\n            {\r\n                TotalCount = totalCount,\r\n                Entries = entries,\r\n                Offset = offset,\r\n                Limit = limit,\r\n            } );\r\n        }\r\n    }\r\n\r\n    private static int ParseInt( this HttpResponseHeaders headers, string key )\r\n    {\r\n        var value = headers?.FirstOrDefault( x => x.Key == key ).Value?.FirstOrDefault();\r\n\r\n        if ( string.IsNullOrEmpty( value ) )\r\n            return 0;\r\n\r\n        int.TryParse( value, out var number );\r\n\r\n        return number;\r\n    }\r\n\r\n    #endregion\r\n}\r\n```\r\n\r\nHelper classes:\r\n```\r\npublic interface IPage<T>\r\n{\r\n    int TotalCount { get; }\r\n\r\n    List<T> Entries { get; }\r\n\r\n    int Limit { get; }\r\n\r\n    int Offset { get; }\r\n}\r\n\r\n[DataContract]\r\npublic class Page<T> : IPage<T> where T : class\r\n{\r\n    [DataMember]\r\n    public int TotalCount { get; set; }\r\n\r\n    [DataMember]\r\n    public List<T> Entries { get; set; }\r\n\r\n    [DataMember]\r\n    public int Offset { get; set; }\r\n\r\n    [DataMember]\r\n    public int Limit { get; set; }\r\n}\r\n```\r\n\r\nI can see the headers in **Postman** and the code works when I run it in **ConsoleApp** without any problems. But in **Blazor** the `response.Headers` are always missing. The only value that I can get is Content-Type.\r\n\r\nIs there any way that I can get custom headers with the HttpClient in Blazor?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1436","RelatedDescription":"Closed issue \"HttpClient response headers are empty\" (#1436)"},{"Id":"360976293","IsPullRequest":false,"CreatedAt":"2018-09-18T10:08:54","Actor":"footysteve","Number":"1439","RawContent":null,"Title":"Blazor source, a little advice needed.","State":"closed","Body":"Hi \r\n\r\nI'm looking into seo with Blazor. At the moment google & co don't appear to work well with WebAssembly apps.\r\n\r\n![Google Indexing](https://github.com/footysteve/blazor.space/blob/master/images/blazor-seo.jpg)\r\n\r\nLooked at some seo related posts here, #24 for example. I think, maybe, I might have a practical and efficient solution though I'm still getting to know the internals of wasm/mono. \r\n\r\nI've downloaded and built Blazor and have been familiarising myself with the codebase though I haven't been able to step through code yet as I need to change the language services extension version numbers or uninstall the extension I guess. \r\n\r\nIt's a big project, lots of code so I wondered if someone might be able to give me a little info about, or point me to a document that details the process flow of Blazor, what happens under he hood. I'm looking for the point in code where a page has been constructed but not yet packed ready for download. \r\n\r\nThanks\r\nSteve\r\n\r\nPS. Sorry the image isn't showing up, still figuring out GitHub, clicking the link shows the image.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1439","RelatedDescription":"Closed issue \"Blazor source, a little advice needed.\" (#1439)"},{"Id":"360667627","IsPullRequest":false,"CreatedAt":"2018-09-17T22:33:27","Actor":"JamesNK","Number":"1433","RawContent":null,"Title":"NRE exception with Newtonsoft.Json","State":"closed","Body":"Hi\r\n\r\nThis PR was raised for Newtonsoft.Json - https://github.com/JamesNK/Newtonsoft.Json/pull/1828\r\nI thought this issue was fixed with a linker configuration change - https://github.com/mono/mono/issues/8872\r\n\r\nCan you double check that this fix is shipping with Blazor so it Just Works for users.","Url":"https://github.com/aspnet/Blazor/issues/1433","RelatedDescription":"Closed issue \"NRE exception with Newtonsoft.Json\" (#1433)"},{"Id":"360961177","IsPullRequest":false,"CreatedAt":"2018-09-17T21:21:32","Actor":"danroth27","Number":"1438","RawContent":null,"Title":"Tooling exception after copying component .cshtml file for component","State":"closed","Body":"Environment:\r\nVisual Studio 2017 15.8.4\r\nBlazor 0.5.1\r\n\r\nRepro steps:\r\n- Create new Blazor app\r\n- Copy and paste Counter.cshtml to create a new page in the Page folder\r\n- Rename the new page to Test.cshtml\r\n- Edit Test.cshtml\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/45638242-7c9c1d00-ba61-11e8-944d-25ccec53c20f.png)\r\n\r\n[ActivityLog.zip](https://github.com/aspnet/Blazor/files/2389534/ActivityLog.zip)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1438","RelatedDescription":"Closed issue \"Tooling exception after copying component .cshtml file for component\" (#1438)"},{"Id":"360675231","IsPullRequest":false,"CreatedAt":"2018-09-17T17:26:06","Actor":"JohnyL","Number":"1434","RawContent":null,"Title":"Error when using C# code in onclick handler of button","State":"closed","Body":"I am new to Blazor and I liked it very much. I want to put my time into learning it, so I began from beginning. :)\r\nI was watching [this video](https://youtu.be/MiLAE6HMr10?t=2193) and was trying to set C# code for `onclick` handler of `button`. However, I receive error:\r\n\r\n> Argument 1: cannot convert from 'void' to 'string'\r\n\r\nHere's screenshot of TodoList.cshtml:\r\n![IMG1](https://8hnsoa.am.files.1drv.com/y4mMvxGjcz63kZWfLdKyhpaqEpvmtOfc49NYMVRkUFQuc4ZhUYgJ_Nck0ND97xtLFspXxpzJgyitVExZyVxB5Tfb-fb1tTfqp7fGt2cFSvkMpzOh-J0p5Ivi_EeZMWbodV_zOidXQNZdBW7Ve-wUqBMhPlpzclc0f2XuT_28CKJioWIkTTfrGq6O2uNizNCK64jxSUxQjwTzBiTt8JWUC-gwQ?width=1025&height=611&cropmode=none)","Url":"https://github.com/aspnet/Blazor/issues/1434","RelatedDescription":"Closed issue \"Error when using C# code in onclick handler of button\" (#1434)"},{"Id":"360848764","IsPullRequest":false,"CreatedAt":"2018-09-17T12:36:45","Actor":"uwefms","Number":"1437","RawContent":null,"Title":"negative route parameter not allowed","State":"open","Body":"Having the following route:\r\n\r\n@page \"/sendemail/{RoomName}/{RoomId:int}\"\r\n\r\nI get the following error:\r\n\r\nUncaught (in promise) Error: System.InvalidOperationException: 'Router' cannot find any component with a route for '/confirmemail/2.01/-1'.\r\n\r\nwhen trying to send a negative RoomId. \r\n\r\nNo Problem with positive Ids or 0\r\n","Url":"https://github.com/aspnet/Blazor/issues/1437","RelatedDescription":"Open issue \"negative route parameter not allowed\" (#1437)"},{"Id":"360729618","IsPullRequest":false,"CreatedAt":"2018-09-17T05:48:53","Actor":"kant2002","Number":"1435","RawContent":null,"Title":"Intellisense or language service error","State":"open","Body":"1. have `<td></td>`\r\n2. Put caret between `<td>|</td>`\r\n3. Press Enter\r\n4. Type `@if (` fast. After typing `(` the additional `if` appears.\r\n\r\n![image](https://user-images.githubusercontent.com/4257079/45607604-5c735a80-ba6f-11e8-9e8e-81bb72d43589.png)\r\n \r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1435","RelatedDescription":"Open issue \"Intellisense or language service error\" (#1435)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-22T05:30:03.1914364Z","RunDurationInMilliseconds":1209}