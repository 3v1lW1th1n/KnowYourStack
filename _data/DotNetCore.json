{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":32,"FacebookCount":0,"Summary":"Updated: January 25, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."},{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"},{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7273432788","Type":"PullRequestEvent","CreatedAt":"2018-02-21T05:01:40","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16459","RelatedDescription":"Merged pull request \"Moved extensions.cs to shared folder in coreclr\" (#16459) at dotnet/coreclr","RelatedBody":"Related to https://github.com/dotnet/corefx/pull/27099"},{"Id":"7273416871","Type":"PullRequestEvent","CreatedAt":"2018-02-21T04:55:04","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16466","RelatedDescription":"Closed pull request \"Fix TryGetOwnedMemory xml docs\" (#16466) at dotnet/coreclr","RelatedBody":"/cc @stephentoub @ahsonkhan"},{"Id":"7273249086","Type":"PullRequestEvent","CreatedAt":"2018-02-21T03:44:01","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16466","RelatedDescription":"Opened pull request \"Fix TryGetOwnedMemory xml docs\" (#16466) at dotnet/coreclr","RelatedBody":"/cc @stephentoub @ahsonkhan"},{"Id":"7273230898","Type":"IssuesEvent","CreatedAt":"2018-02-21T03:36:07","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16465","RelatedDescription":"Opened issue \"[Arm64/Unix] Release 2.1 regression\" (#16465) at dotnet/coreclr","RelatedBody":"591459f3 caused the following tests to regress on the release/2.1 branch\r\n\r\n```\r\nJIT/HardwareIntrinsics/X86/IsSupported_r/IsSupported_r.sh\r\nJIT/HardwareIntrinsics/X86/IsSupported_ro/IsSupported_ro.sh\r\nJIT/Performance/CodeQuality/BenchmarksGame/mandelbrot/mandelbrot-7/mandelbrot-7.sh\r\nJIT/Performance/CodeQuality/Burgers/Burgers/Burgers.sh\r\nJIT/Performance/CodeQuality/SIMD/ConsoleMandel/ConsoleMandel/ConsoleMandel.sh\r\nJIT/Performance/CodeQuality/SIMD/SeekUnroll/SeekUnroll/SeekUnroll.sh\r\nJIT/Regression/JitBlue/DevDiv_461649/DevDiv_461649/DevDiv_461649.sh\r\nJIT/Regression/JitBlue/GitHub_11804/GitHub_11804/GitHub_11804.sh\r\nJIT/Regression/JitBlue/GitHub_13568/GitHub_13568/GitHub_13568.sh\r\nJIT/Regression/JitBlue/GitHub_14028/GitHub_14028/GitHub_14028.sh\r\nJIT/Regression/JitBlue/GitHub_15237/GitHub_15237/GitHub_15237.sh\r\nJIT/Regression/JitBlue/GitHub_6318/GitHub_6318/GitHub_6318.sh\r\nJIT/Regression/JitBlue/GitHub_7906/GitHub_7906/GitHub_7906.sh\r\nJIT/Regression/JitBlue/GitHub_8220/GitHub_8220/GitHub_8220.sh\r\nJIT/Regression/JitBlue/GitHub_8231/GitHub_8231/GitHub_8231.sh\r\nJIT/SIMD/AbsGeneric_r/AbsGeneric_r.sh\r\nJIT/SIMD/AbsGeneric_ro/AbsGeneric_ro.sh\r\nJIT/SIMD/BitwiseOperations_r/BitwiseOperations_r.sh\r\nJIT/SIMD/BitwiseOperations_ro/BitwiseOperations_ro.sh\r\nJIT/SIMD/BoxUnbox_r/BoxUnbox_r.sh\r\nJIT/SIMD/BoxUnbox_ro/BoxUnbox_ro.sh\r\nJIT/SIMD/BugWithAVX_r/BugWithAVX_r.sh\r\nJIT/SIMD/BugWithAVX_ro/BugWithAVX_ro.sh\r\nJIT/SIMD/CreateGeneric_r/CreateGeneric_r.sh\r\nJIT/SIMD/CreateGeneric_ro/CreateGeneric_ro.sh\r\nJIT/SIMD/CtorFromArray_r/CtorFromArray_r.sh\r\nJIT/SIMD/CtorFromArray_ro/CtorFromArray_ro.sh\r\nJIT/SIMD/Ctors_r/Ctors_r.sh\r\nJIT/SIMD/Ctors_ro/Ctors_ro.sh\r\nJIT/SIMD/DivSignedUnsignedTest_r/DivSignedUnsignedTest_r.sh\r\nJIT/SIMD/DivSignedUnsignedTest_ro/DivSignedUnsignedTest_ro.sh\r\nJIT/SIMD/Haar-likeFeaturesGeneric_r/Haar-likeFeaturesGeneric_r.sh\r\nJIT/SIMD/Haar-likeFeaturesGeneric_ro/Haar-likeFeaturesGeneric_ro.sh\r\nJIT/SIMD/LdfldGeneric_r/LdfldGeneric_r.sh\r\nJIT/SIMD/LdfldGeneric_ro/LdfldGeneric_ro.sh\r\nJIT/SIMD/Plane_ro/Plane_ro.sh\r\nJIT/SIMD/Plane_r/Plane_r.sh\r\nJIT/SIMD/SqrtGeneric_ro/SqrtGeneric_ro.sh\r\nJIT/SIMD/SqrtGeneric_r/SqrtGeneric_r.sh\r\nJIT/SIMD/StoreElement_ro/StoreElement_ro.sh\r\nJIT/SIMD/StoreElement_r/StoreElement_r.sh\r\nJIT/SIMD/VectorAbs_ro/VectorAbs_ro.sh\r\nJIT/SIMD/VectorAbs_r/VectorAbs_r.sh\r\nJIT/SIMD/VectorAdd_ro/VectorAdd_ro.sh\r\nJIT/SIMD/VectorAdd_r/VectorAdd_r.sh\r\nJIT/SIMD/VectorArgs_ro/VectorArgs_ro.sh\r\nJIT/SIMD/VectorArgs_r/VectorArgs_r.sh\r\nJIT/SIMD/VectorArrayInit_ro/VectorArrayInit_ro.sh\r\nJIT/SIMD/VectorArrayInit_r/VectorArrayInit_r.sh\r\nJIT/SIMD/VectorArray_ro/VectorArray_ro.sh\r\nJIT/SIMD/VectorArray_r/VectorArray_r.sh\r\nJIT/SIMD/VectorCast_ro/VectorCast_ro.sh\r\nJIT/SIMD/VectorCast_r/VectorCast_r.sh\r\nJIT/SIMD/VectorConvert_ro/VectorConvert_ro.sh\r\nJIT/SIMD/VectorConvert_r/VectorConvert_r.sh\r\nJIT/SIMD/VectorCopyToArray_ro/VectorCopyToArray_ro.sh\r\nJIT/SIMD/VectorCopyToArray_r/VectorCopyToArray_r.sh\r\nJIT/SIMD/VectorDiv_ro/VectorDiv_ro.sh\r\nJIT/SIMD/VectorDiv_r/VectorDiv_r.sh\r\nJIT/SIMD/VectorDot_ro/VectorDot_ro.sh\r\nJIT/SIMD/VectorDot_r/VectorDot_r.sh\r\nJIT/SIMD/VectorExp_ro/VectorExp_ro.sh\r\nJIT/SIMD/VectorExp_r/VectorExp_r.sh\r\nJIT/SIMD/VectorGet_ro/VectorGet_ro.sh\r\nJIT/SIMD/VectorGet_r/VectorGet_r.sh\r\nJIT/SIMD/VectorHWAccel2_ro/VectorHWAccel2_ro.sh\r\nJIT/SIMD/VectorHWAccel2_r/VectorHWAccel2_r.sh\r\nJIT/SIMD/VectorHWAccel_ro/VectorHWAccel_ro.sh\r\nJIT/SIMD/VectorHWAccel_r/VectorHWAccel_r.sh\r\nJIT/SIMD/VectorInitN_ro/VectorInitN_ro.sh\r\nJIT/SIMD/VectorInitN_r/VectorInitN_r.sh\r\nJIT/SIMD/VectorIntEquals_ro/VectorIntEquals_ro.sh\r\nJIT/SIMD/VectorIntEquals_r/VectorIntEquals_r.sh\r\nJIT/SIMD/VectorMatrix_ro/VectorMatrix_ro.sh\r\nJIT/SIMD/VectorMatrix_r/VectorMatrix_r.sh\r\nJIT/SIMD/VectorMax_ro/VectorMax_ro.sh\r\nJIT/SIMD/VectorMax_r/VectorMax_r.sh\r\nJIT/SIMD/VectorMin_ro/VectorMin_ro.sh\r\nJIT/SIMD/VectorMin_r/VectorMin_r.sh\r\nJIT/SIMD/VectorMul_ro/VectorMul_ro.sh\r\nJIT/SIMD/VectorMul_r/VectorMul_r.sh\r\nJIT/SIMD/VectorRelOp_ro/VectorRelOp_ro.sh\r\nJIT/SIMD/VectorRelOp_r/VectorRelOp_r.sh\r\nJIT/SIMD/VectorReturn_ro/VectorReturn_ro.sh\r\nJIT/SIMD/VectorReturn_r/VectorReturn_r.sh\r\nJIT/SIMD/VectorSqrt_ro/VectorSqrt_ro.sh\r\nJIT/SIMD/VectorSqrt_r/VectorSqrt_r.sh\r\nJIT/SIMD/VectorSub_ro/VectorSub_ro.sh\r\nJIT/SIMD/VectorSub_r/VectorSub_r.sh\r\nJIT/SIMD/VectorUnused_ro/VectorUnused_ro.sh\r\nJIT/SIMD/VectorUnused_r/VectorUnused_r.sh\r\n```\r\n\r\nRepresentative errors:\r\n```\r\nUnhandled Exception: System.TypeLoadException: \r\nCould not load type 'System.Numerics.Vector`1'\r\nfrom assembly 'System.Numerics.Vectors, Version=4.1.4.0\r\n```\r\n```\r\nUnhandled Exception: System.MissingMethodException: Method not found: \r\n'System.ReadOnlySpan`1<!!1> \r\nSystem.Runtime.InteropServices.MemoryMarshal.Cast(System.ReadOnlySpan`1<!!0>)'\r\n```\r\n```\r\nUnhandled Exception: System.TypeLoadException: \r\nCould not load type 'System.Numerics.Vector' \r\nfrom assembly 'System.Private.CoreLib, Version=4.0.0.0\r\n```\r\n"},{"Id":"7273177744","Type":"PullRequestEvent","CreatedAt":"2018-02-21T03:13:48","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16461","RelatedDescription":"Merged pull request \"Revert TLS model change of the gCurrentThreadInfo\" (#16461) at dotnet/coreclr","RelatedBody":"This change causes crashes due to incorrect TLS variable initialization\r\non Alpine Linux. The initial-exec model that the variable was modified\r\nto use recently cannot be safely used in shared libraries."},{"Id":"7273096212","Type":"PullRequestEvent","CreatedAt":"2018-02-21T02:42:59","Actor":"ateoi","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16464","RelatedDescription":"Opened pull request \"Show the expected stack trace from a rethrown exception.\" (#16464) at dotnet/coreclr","RelatedBody":"Fix #15780"},{"Id":"7272968734","Type":"PullRequestEvent","CreatedAt":"2018-02-21T01:56:03","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16455","RelatedDescription":"Merged pull request \"Add TryGetOwnedMemory\" (#16455) at dotnet/coreclr","RelatedBody":"Resolves https://github.com/dotnet/corefx/issues/27237\r\n\r\nWith https://github.com/dotnet/corefx/pull/27288\r\n\r\n/cc @stephentoub "},{"Id":"7272961700","Type":"IssuesEvent","CreatedAt":"2018-02-21T01:53:33","Actor":"Petermarcu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16463","RelatedDescription":"Opened issue \"How to deal with Stack Overflow exception error? (in Linux)\" (#16463) at dotnet/coreclr","RelatedBody":"@roozbehid-ic commented on [Tue Feb 06 2018](https://github.com/dotnet/core/issues/1257)\n\nI have a very large project consisting of C++ projects and C# projects.\r\nThey build and run fine on Windows 10, using .Net Core 2.0 and Visual Studio 15.5.6.\r\nRunning them on Linux (GCC 5.4.0) also works fine for few minutes then I get Stack overflow exception.\r\n\r\nI tried to debug it with GDB and VSDBG (Managed part).\r\nInteresting thing is they crash at different points while debugging native compared to managed. (and unfortunately you can not do them at the same time). \r\n\r\nBut in both cases it is not helping as I do not get exception and crash in debugger (managed debugging)!\r\nIn native debugging, I get crash inside CoreCLR which is also not useful.\r\nI more have a feeling that exception and problem happen in managed side compared to native part.\r\n\r\nI am wondering if you guys have any suggestions how to debug and find my bug!\r\nBecause it is a huge code.....\r\n\r\nHere are the things I want to try: \r\n - Increase stack size in Linux  - in managed code? (how?)\r\n - Decree stack size in Windows -  in managed code? (maybe emulate Linux behavior? how?)\r\n - Somehow instrument code to notify me before running out of stack - in managed code? (how?)\r\n - Use GCC with -fstack-protector-all ? (Did it. no help)\r\n - Upgrade to more recent GCC\r\n - Upgrade to .Net core 2.1-preview\r\n \r\nAny other suggestions or helps?\r\n\r\n\r\n\n\n"},{"Id":"7272936681","Type":"IssuesEvent","CreatedAt":"2018-02-21T01:44:42","Actor":"Petermarcu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16462","RelatedDescription":"Opened issue \"dotnet core application aborts without exceptions\" (#16462) at dotnet/coreclr","RelatedBody":"@pavlexander commented on [Wed Feb 14 2018](https://github.com/dotnet/core/issues/1268)\n\n# Issue Title\r\n\r\n.net core 2 console application stops execution and quits without providing any kind of exception messages, except short notice \"**Aborted**\"\r\n\r\n# General\r\n\r\nThe issue is only reproducible on Linux, but not Windows.\r\n\r\nSystem:\r\n\r\n- Linux: **Debian 9, x64 bits**\r\n- dotnet --version: **2.1.3**\r\n- compiled on Windows 10 x64 with command: **dotnet publish -c release -r debian-x64**\r\n- thread on [StackoverFlow ](https://stackoverflow.com/questions/48773208/json-deserialization-causes-dotnet-core-application-to-abort-no-exceptions-are/48790722#48790722)\r\n- bug report on [git](https://github.com/sonvister/Binance/issues/60)\r\n\r\n# Description\r\n\r\nDuring the deserialization (or initialization) of objects of a certain type - application crashes on Linux environment immediately.\r\n\r\nA sample code for issue reproduction is:\r\n\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n     var symbol = Symbol.ONE;\r\n     // if real library is used then Symbol.BNB_BTC or (Symbol)\"BNBBTC\" will do\r\n}\r\n```\r\n\r\nThe `Symbol` class is implemented with a type-safe Enum pattern:\r\n\r\n```\r\npublic sealed class Symbol\r\n{\r\n    public static readonly Symbol ONE = new Symbol(new[] { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit });\r\n    public static readonly Symbol TWO = new Symbol(new[] { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit });\r\n    public static readonly Symbol THREE = new Symbol(new[] { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit });\r\n    // 264 such lines in total\r\n\r\n    public Symbol(IEnumerable<OrderType> orderTypes)\r\n    {\r\n\r\n    }\r\n}\r\n```\r\nIn the example above, upon initialization of `Symbol` type object - application would abort at rate 1/5 (or more often/rarely):\r\n\r\n# Testing\r\n\r\n> while sleep 0.5 ; do dotnet ConsoleApp1.dll ; done\r\n\r\nThe linux command will execute dotnet application once in half-a-second time. Therefore, if at least one \"Aborted\" is printed within 20 second interval - you can consider the test as not passed.\r\n\r\n# Fix\r\n\r\nI was able to come up with a temporary solution which seems to be working at the moment.\r\n\r\nIf we change an anonymous type of object in constructor parameter list to `List` - then that will work nicely.\r\n\r\nInstead of this:\r\n\r\n`new[] { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit }`\r\n\r\nuse this:\r\n\r\n`new List<OrderType> { OrderType.Limit, OrderType.LimitMaker, OrderType.Market, OrderType.StopLossLimit, OrderType.TakeProfitLimit }`\r\n\r\nAlso, it was confirmed, that `OrderType[]` type of object yields absolutely the same result as `new[]`\r\nAlso, it was confirmed (on my machine), that if the number of static properties is halved, then the issue is gone, therefore, for better effect - test the solution when more than 200 `Symbol`s are defined in `Symbol` class.\r\n\r\n# Steps to reproduce\r\n\r\nThe easiest steps to reproduce the issue is to:\r\n1. Download the same library as I did [here](https://github.com/sonvister/Binance).\r\n2. Change the source for the `Symbol` class, so that anonymous object is used (author recently applied a fix, per my request)\r\n3. add new console application (see description section)\r\n4. compile and then run on Linux (see testing section)\r\n\r\nIf you see the \"Aborted\" message after some time, then that's the issue.\r\n\r\n# Suggested fix\r\n\r\nI would appreciate to \r\n1. see some kind of exception message when such errors are thrown\r\n2. issue to be fixed\r\n\r\nRest is up to you. Good luck.\n\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7273109257","Type":"PullRequestEvent","CreatedAt":"2018-02-21T02:48:03","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8647","RelatedDescription":"Merged pull request \"Tag non-shipping nupkg as 'NonShipping=true' in the manifest.\" (#8647) at dotnet/cli","RelatedBody":"\r\nmicrosoft.dotnet.msbuildsdkresolver.2.1.300-preview2-008217.nupkg should be tagged as \"nonshipping\" to prevent the final publishing on nuget.org"},{"Id":"7273101756","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:45:11","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8651","RelatedDescription":"Closed issue \"dotnet core install via official script not working\" (#8651) at dotnet/cli","RelatedBody":"@noelmcgrath commented on [Fri Feb 02 2018](https://github.com/dotnet/core/issues/1255)\n\nBrowse to https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script\r\nDownload script https://dot.net/v1/dotnet-install.ps1 \r\nRun script\r\n\r\nExpected:\r\nWould download zip and install .net core sdk\r\n\r\nActual:\r\nGetting 404\r\n\r\nOther info:\r\nGet one of the urls and paste into browser\r\nGet the following:\r\n\r\n<Error>\r\n<Code>BlobNotFound</Code>\r\n<Message>\r\nThe specified blob does not exist. RequestId:ea148153-001e-00df-075c-9cf99f000000 Time:2018-02-02T19:28:52.4221024Z\r\n</Message>\r\n</Error>\r\n\n\n---\n\n@Petermarcu commented on [Fri Feb 02 2018](https://github.com/dotnet/core/issues/1255#issuecomment-362760523)\n\nWondering if this was some temporary glitch. The script seems to be there for me now.\n\n---\n\n@noelmcgrath commented on [Sat Feb 03 2018](https://github.com/dotnet/core/issues/1255#issuecomment-362793167)\n\nthe script is there, thats not the problem. Its the urls in the script that give back 404\n\n---\n\n@noelmcgrath commented on [Sat Feb 03 2018](https://github.com/dotnet/core/issues/1255#issuecomment-362793698)\n\nAlso was trying to run with -Version stable.\r\nChanged to run with no parameters just to check if that worked.\r\nIt tries to download Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/1.1.5/dotnet-sdk-1.1.5-win-x64.zip\r\nCurrent SDK is v2.1.4 I believe\n\n"},{"Id":"7273011284","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:11:33","Actor":"KathleenDollard","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8652","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#8652) at dotnet/cli","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7272967913","Type":"IssuesEvent","CreatedAt":"2018-02-21T01:55:45","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8651","RelatedDescription":"Opened issue \"dotnet core install via official script not working\" (#8651) at dotnet/cli","RelatedBody":"@noelmcgrath commented on [Fri Feb 02 2018](https://github.com/dotnet/core/issues/1255)\n\nBrowse to https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script\r\nDownload script https://dot.net/v1/dotnet-install.ps1 \r\nRun script\r\n\r\nExpected:\r\nWould download zip and install .net core sdk\r\n\r\nActual:\r\nGetting 404\r\n\r\nOther info:\r\nGet one of the urls and paste into browser\r\nGet the following:\r\n\r\n<Error>\r\n<Code>BlobNotFound</Code>\r\n<Message>\r\nThe specified blob does not exist. RequestId:ea148153-001e-00df-075c-9cf99f000000 Time:2018-02-02T19:28:52.4221024Z\r\n</Message>\r\n</Error>\r\n\n\n---\n\n@Petermarcu commented on [Fri Feb 02 2018](https://github.com/dotnet/core/issues/1255#issuecomment-362760523)\n\nWondering if this was some temporary glitch. The script seems to be there for me now.\n\n---\n\n@noelmcgrath commented on [Sat Feb 03 2018](https://github.com/dotnet/core/issues/1255#issuecomment-362793167)\n\nthe script is there, thats not the problem. Its the urls in the script that give back 404\n\n---\n\n@noelmcgrath commented on [Sat Feb 03 2018](https://github.com/dotnet/core/issues/1255#issuecomment-362793698)\n\nAlso was trying to run with -Version stable.\r\nChanged to run with no parameters just to check if that worked.\r\nIt tries to download Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/1.1.5/dotnet-sdk-1.1.5-win-x64.zip\r\nCurrent SDK is v2.1.4 I believe\n\n"},{"Id":"7272939996","Type":"IssuesEvent","CreatedAt":"2018-02-21T01:45:48","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8650","RelatedDescription":"Opened issue \"Troubles to set up internal NuGet server for .NET Core development/publishing\" (#8650) at dotnet/cli","RelatedBody":"@lextm commented on [Wed Feb 07 2018](https://github.com/dotnet/core/issues/1261)\n\nA company can block internet access for its internal development machines. In such cases, an internal NuGet server would be required to host the necessary packages, so as to enable .NET Core development and publishing.\r\n\r\nI built a detailed example and documented it in [my blog post](https://blog.lextudio.com/offline-publishing-asp-net-core-apps-cf22f45158af), which shows how troublesome the experience is today, when attempting to publish the default ASP.NET Core MVC project. \r\n\r\nTo summarize,\r\n\r\n* The default NuGet source setting specifies nuget.org, which if blocked leads to an error. This error can only be resolved by adding a custom nuget.config file, which is not pleasant.\r\n* `dotnet publish -r win-x64` would generate errors on missing packages, which is good, but there is no easy way to extract a list of NuGet packages (with version numbers) out and download them. Ideally, such can be done by a PowerShell script, but no sample anyway.\r\n* The `Detected package downgrade` error message can be misleading, while the fix is to explicitly set `<RuntimeFrameworkVersion>`.\r\n\r\nHope there can be official guides from Microsoft to show how such internal NuGet server should be set up (especially which packages are mandatory). That can save tons of hours for those companies to explore on their own.\n\n"},{"Id":"7272926613","Type":"IssuesEvent","CreatedAt":"2018-02-21T01:41:09","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8649","RelatedDescription":"Opened issue \".Net Core 2.0 Nuget packages not being restored on build server\" (#8649) at dotnet/cli","RelatedBody":"@philultfin commented on [Sat Feb 17 2018](https://github.com/dotnet/core/issues/1271)\n\n**.Net Core 2.0 Nuget packages not being restored on build server**\r\n\r\n**Local Machine:** Windows 7, Visual Studio 2017 Professional 15.5.6, dotnet core 2.1.4\r\n**Build Server:**  Windows Server 2012 R2, msbuild 15.5.180.51428, dotnet core 2.1.4, nuget 4.5.1.4879\r\n\r\nSolution with 20+ dotnet core projects and one third-party developed project on framework 4.5.2. The solution compiles fine locally, but fails on build server. Various errors on nuget packages e.g. \r\n\r\nRunning msbuild /t:rebuild gives (truncated but lots more)\r\nStartup.cs(3,32): error CS0234: The type or namespace name 'Builder' does not exist in the namespace 'Microsoft.AspNetCore' (are you missing an assembly reference?) \r\nStartup.cs(5,32): error CS0234: The type or namespace name 'Configuration' does not exist in the namespace 'Microsoft.Extensions' (are you missing an assembly reference?) \r\nalso\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\bin\\Microsoft.Common.CrossTargeting.targets(141,3): error MSB4019: The imported project \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\NuGet.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. \r\n\r\nLooked at  issue  #1006 and that helped, but still getting nuget failures, running combinations of nuget restore, dotnet build, msbuild etc, gives different errors each time, but all nuget related. \r\n\r\nI've tried clearing caches etc. multiple times, basically trying to find root cause. other core 2.1.4 solutions all build fine and all are the same mix of web, web api and class libraries. I found Visual Studio Community edition on the build server so updated it to latest version and built the solution with that. It built successfully, but still fails at command line. \r\n\r\nIf I run Get-package in the console manager I only see the packages for the framework 4.5.2 project from a packages.config file, I see no projectreferences and the UI has the yellow warning on each one. If I do the same on the local machine, I see all the packages including the projectreferences listed (I also waited for package console to initialise before loading solution as that was a reported issue). \r\n\r\nI compared the caches on the local and build server, there is a projectreference to \\microsoft.aspnetcore.mvc 2.0.2, it is on the local machine (along with 2.0.0), but is not in the cache on the build server, it only has 2.0.0. I can't understand how it can build in VS community edition without that package in cache unless VS has another cache it accesses (assume C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder). My next attempt will be to manually copy missing packages to the cache from local to build server, while this might allow builds to work, if the cache is cleared, the situation will occur again. Any ideas on how to resolve this would be appreciated. I'm thinking the VS Community Edition shouldn't be on the server and may be causing an issue with build tools and will uninstall it, but I'd guess they should work side-by-side.\r\n\r\n\r\n\n\n"},{"Id":"7272875891","Type":"PullRequestEvent","CreatedAt":"2018-02-21T01:23:52","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8643","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to master\" (#8643) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7272874362","Type":"PullRequestEvent","CreatedAt":"2018-02-21T01:23:20","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8642","RelatedDescription":"Merged pull request \"Merge release/2.1.2xx to release/2.1.3xx\" (#8642) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.2xx-to-release/2.1.3xx\ngit reset --hard upstream/release/2.1.3xx\ngit merge upstream/release/2.1.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.2xx-to-release/2.1.3xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7272851582","Type":"PullRequestEvent","CreatedAt":"2018-02-21T01:15:54","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8648","RelatedDescription":"Opened pull request \"Sign the MSBuildSdkResolver dll in standard nupkg\" (#8648) at dotnet/cli","RelatedBody":"We were only signing the copy in the msbuild extensions layout for the VS insertion package, but not the x-plat nupkg we produced for VS Code.\r\n\r\n\r\n\r\n"},{"Id":"7272692336","Type":"IssuesEvent","CreatedAt":"2018-02-21T00:24:51","Actor":"pkapare","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8640","RelatedDescription":"Closed issue \"CLI source code build error : Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat\" (#8640) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Clone CLI repo\r\n2. Run Build.cmd to build code\r\n\r\n## Expected  behavior\r\nShould build source code without errors.\r\n\r\n\r\n## Actual behavior\r\nGetting following error.\r\nH:\\Github\\DotNetCore\\cli>build.cmd\r\nH:\\Github\\DotNetCore\\cli\\scripts\\obtain\\dotnet-install.ps1 -version \"2.2.0-preview1-007799\" -InstallDir H:\\Github\\DotNetCore\\cli\\.dotnet_stage0\\x64 -Architecture \"x64\"\r\ndotnet-install: .NET Core SDK version 2.2.0-preview1-007799 is already installed.\r\ndotnet-install: Adding to current process PATH: \"H:\\Github\\DotNetCore\\cli\\.dotnet_stage0\\x64\\\". Note: This change will not be visible if PowerShell was run as a child process.\r\nMicrosoft (R) Build Engine version 15.6.12.27473 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Restore completed in 22.91 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\Microsoft.DotNet.Cli.Build.Framework\\Microsoft.DotNet.Cli.Build.Framework.csproj.\r\n    Restore completed in 26.81 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\shared-build-targets-utils\\shared-build-targets-utils.csproj.\r\n    Restore completed in 30.11 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\dotnet-cli-build\\dotnet-cli-build.csproj.\r\n  8215\r\n  787bee7ad3a143c64b677d3cf64c5fb180215c47\r\nMicrosoft (R) Build Engine version 15.6.12.27473 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 18-Feb-18 8:38:15 AM.\r\n     1>Project \"H:\\Github\\DotNetCore\\cli\\build.proj\" on node 1 (default targets).\r\n     1>PrintBuildInfo:\r\n         Host info - Rid: win10-x64, OSName: win\r\n         Build info - Rid: win10-x64, Architecture: x64, OSName: win\r\n         If you intended to use a different Rid, Architecture, or OSName run the following command to generate your build state:\r\n         dotnet msbuild build.proj /p:Architecture=Architecture /p:Rid=Rid /p:OSName=OSName /p:GeneratePropsFile=true /t:WriteDynamicPropsToStaticPropsFiles\r\n       MSBuildWorkaroundTarget:\r\n         Dont remove this target\r\n       RestoreDotnetCliBuildFramework:\r\n         H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64/dotnet.exe restore  /p:GeneratePropsFile=\r\n           Restore completed in 21.65 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\Microsoft.DotNet.Cli.Build.Framework\\Microsoft.DotNet.Cli.Build.Framework.csproj.\r\n           Restore completed in 23.66 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\shared-build-targets-utils\\shared-build-targets-utils.csproj.\r\n           Restore completed in 26.36 ms for H:\\Github\\DotNetCore\\cli\\build_projects\\dotnet-cli-build\\dotnet-cli-build.csproj.\r\n       BuildDotnetCliBuildFramework:\r\n       Skipping target \"BuildDotnetCliBuildFramework\" because all output files are up-to-date with respect to the input files.\r\n       CheckPrereqs:\r\n         Using previous stage version:\r\n         H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64/dotnet.exe --version\r\n         2.2.0-preview1-007799\r\n       RestoreSrcPackages:\r\n         > [DotNetTool] restore    \"H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj\"\r\n         > H:\\Github\\DotNetCore\\cli\\/.dotnet_stage0/x64\\dotnet.exe restore    \"H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj\"\r\n           Restoring packages for H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj...\r\n           Restore completed in 32.43 ms for H:\\Github\\DotNetCore\\cli\\src\\tool_launcher\\tool_launcher.csproj.\r\n           Restore completed in 49.29 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.InternalAbstractions\\Microsoft.DotNet.InternalAbstractions.csproj.\r\n           Restore completed in 59.98 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Configurer\\Microsoft.DotNet.Configurer.csproj.\r\n           Restore completed in 58.11 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Cli.Utils\\Microsoft.DotNet.Cli.Utils.csproj.\r\n           Restore completed in 59.35 ms for H:\\Github\\DotNetCore\\cli\\src\\Microsoft.DotNet.Cli.Sln.Internal\\Microsoft.DotNet.Cli.Sln.Internal.csproj.\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat with version (>= 2.1.0-preview2-30106) [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 7 version(s) in cli-deps [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 5 version(s) in BlobFeed [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget.org [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in dotnet-corefxlab [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in websdkfeed [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget-build [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in roslyn [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in symreader-native [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in templating [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in vstest [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in container-tools [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n     1>H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in xunit [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n           Restore failed in 1.08 sec for H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj.\r\n     1>Done Building Project \"H:\\Github\\DotNetCore\\cli\\build.proj\" (default targets) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"H:\\Github\\DotNetCore\\cli\\build.proj\" (default target) (1) ->\r\n       (RestoreSrcPackages target) ->\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.DeveloperCertificates.XPlat with version (>= 2.1.0-preview2-30106) [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 7 version(s) in cli-deps [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 5 version(s) in BlobFeed [ Nearest version: 2.1.0-preview1-28275 ] [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget.org [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in dotnet-corefxlab [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in websdkfeed [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in nuget-build [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in roslyn [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in symreader-native [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in templating [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in vstest [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in container-tools [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n         H:\\Github\\DotNetCore\\cli\\src\\dotnet\\dotnet.csproj : error NU1102: - Found 0 version(s) in xunit [H:\\Github\\DotNetCore\\cli\\build.proj]\r\n\r\n    0 Warning(s)\r\n    13 Error(s)\r\n\r\nTime Elapsed 00:00:04.29\r\nFailed to build\r\nAt H:\\Github\\DotNetCore\\cli\\run-build.ps1:105 char:31\r\n+     if($LASTEXITCODE -ne 0) { throw \"Failed to build\" }\r\n+                               ~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (Failed to build:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : Failed to build\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.100-preview-007363)\r\n\r\nProduct Information:\r\n Version:            2.1.100-preview-007363\r\n Commit SHA-1 hash:  0468da6ada\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.100-preview-007363\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7272650944","Type":"PullRequestEvent","CreatedAt":"2018-02-21T00:11:51","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8348","RelatedDescription":"Closed pull request \"Merge release/2.1 to master\" (#8348) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-master-20180109-080046\ngit reset --hard upstream/master\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-master-20180109-080046 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7272997768","Type":"PullRequestEvent","CreatedAt":"2018-02-21T02:06:34","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/656","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02521-01 (master)\" (#656) at dotnet/standard","RelatedBody":""},{"Id":"7272799574","Type":"IssuesEvent","CreatedAt":"2018-02-21T00:59:04","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/655","RelatedDescription":"Closed issue \".NET Standard project does not bring its package-originated dependencies with it\" (#655) at dotnet/standard","RelatedBody":"Let's say I have two projects: A targeting .NET Framework 4.6.1 and B targeting .NET Standard 2.0\r\nThe B project has a C dependency; this dependency is supplied by the correspondent NuGet package.\r\nA also references B. When I hit 'Build' I see that B output is copied to the A output folder which is the expected result. I also expect the C dependency to be copied as well. However this doesn't happen.\r\nIs this by design?"},{"Id":"7272795258","Type":"PullRequestEvent","CreatedAt":"2018-02-21T00:57:38","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/653","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02520-02 (master)\" (#653) at dotnet/standard","RelatedBody":""},{"Id":"7267513701","Type":"IssuesEvent","CreatedAt":"2018-02-20T05:35:27","Actor":"godrose","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/655","RelatedDescription":"Opened issue \".NET Standard project does not bring its package-originated dependencies with it\" (#655) at dotnet/standard","RelatedBody":"Let's say I have two projects: A targeting .NET Framework 4.6.1 and B targeting .NET Standard 2.0\r\nThe B project has a C dependency; this dependency is supplied by the correspondent NuGet package.\r\nA also references B. When I hit 'Build' I see that B output is copied to the A output folder which is the expected result. I also expect the C dependency to be copied as well. However this doesn't happen.\r\nIs this by design?"},{"Id":"7261455638","Type":"IssuesEvent","CreatedAt":"2018-02-18T20:55:57","Actor":"JamesNK","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/654","RelatedDescription":"Closed issue \"netstandard2.0 errors - The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\" (#654) at dotnet/standard","RelatedBody":"I have a class library that is completely successful with net45 or netstandard1.3. But adding netstandard2.0 to the TargetFrameworks generates thousands of errors:\r\n\r\n```\r\n1>JSchemaValidatingReader.cs(151,13,151,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(85,16,85,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(57,16,57,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(121,16,121,23): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(131,16,131,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(250,25,250,33): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(263,25,263,39): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(103,35,103,44): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nBuild the repo here to see the problem is action - https://github.com/JamesNK/Newtonsoft.Json.Schema/tree/netstandard2-broken"},{"Id":"7259811109","Type":"IssuesEvent","CreatedAt":"2018-02-18T00:17:00","Actor":"JamesNK","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/654","RelatedDescription":"Opened issue \"netstandard2.0 errors - The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\" (#654) at dotnet/standard","RelatedBody":"I have a class library that is completely successful with net45 or netstandard1.3. But adding netstandard2.0 to the TargetFrameworks generates thousands of errors:\r\n\r\n```\r\n1>JSchemaValidatingReader.cs(151,13,151,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(85,16,85,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(57,16,57,24): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(121,16,121,23): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(131,16,131,26): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingWriter.cs(198,42,198,51): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(250,25,250,33): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(263,25,263,39): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n1>JSchemaValidatingReader.cs(103,35,103,44): error CS0012: The type 'Enum' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nBuild the repo here to see the problem is action - https://github.com/JamesNK/Newtonsoft.Json.Schema/tree/netstandard2-broken"},{"Id":"7252234877","Type":"PullRequestEvent","CreatedAt":"2018-02-15T22:11:54","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/653","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02515-02 (master)\" (#653) at dotnet/standard","RelatedBody":""},{"Id":"7251733856","Type":"PullRequestEvent","CreatedAt":"2018-02-15T20:24:37","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/651","RelatedDescription":"Merged pull request \"Update BuildTools to preview2-02515-01 (master)\" (#651) at dotnet/standard","RelatedBody":""},{"Id":"7249664432","Type":"IssuesEvent","CreatedAt":"2018-02-15T13:57:29","Actor":"MANYAM-HARI","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/652","RelatedDescription":"Opened issue \".net core 2.0 dependencies issue\" (#652) at dotnet/standard","RelatedBody":"![image](https://user-images.githubusercontent.com/14251849/36260023-17bf766c-1286-11e8-80af-09336a210ab3.png)\r\n![capture](https://user-images.githubusercontent.com/14251849/36260045-280e2b9e-1286-11e8-9ef7-ec22e87a1a73.PNG)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7273491900","Type":"PullRequestEvent","CreatedAt":"2018-02-21T05:26:14","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/27259","RelatedDescription":"Closed pull request \"DO NOT MERGE: Test response drain behavior\" (#27259) at dotnet/corefx","RelatedBody":""},{"Id":"7273425037","Type":"PullRequestEvent","CreatedAt":"2018-02-21T04:58:29","Actor":"saurabh500","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27298","RelatedDescription":"Merged pull request \"Updated contract, exposed SqlMetaData ctors\" (#27298) at dotnet/corefx","RelatedBody":"Updated contract, exposed SqlMetaData ctors and added SqlParameterCollection properties.\r\n\r\nCompleted the following types:\r\nM:Microsoft.SqlServer.Server.SqlMetaData..ctor(System.String, System.Data.SqlDbType, System.Type, System.String) \r\nM:Microsoft.SqlServer.Server.SqlMetaData..ctor(System.String, System.Data.SqlDbType, System.Type, System.String, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)\r\nP:Microsoft.SqlServer.Server.SqlMetaData.DbType {get;}\r\nP:Microsoft.SqlServer.Server.SqlMetaData.Type {get;}\r\nP:System.Data.SqlClient.SqlParameterCollection.IsFixedSize\r\nP:System.Data.SqlClient.SqlParameterCollection.IsReadOnly M:System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior) \r\n\r\n\r\n\r\nAdding reviewers:\r\n@saurabh500 @corivera @geleems "},{"Id":"7273405984","Type":"IssuesEvent","CreatedAt":"2018-02-21T04:50:19","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/27210","RelatedDescription":"Closed issue \"socket may be non-blocking after Accept on macOS\" (#27210) at dotnet/corefx","RelatedBody":"This is rated to discussion from #23115\r\n\r\nConsider following C code:\r\n\r\n\r\n``` C\r\n#include <stdio.h>\r\n#include <sys/socket.h>\r\n#include <unistd.h>\r\n#include <errno.h>\r\n#include <string.h>\r\n#include <netinet/in.h>\r\n#include <fcntl.h>\r\n#include <sys/select.h>\r\n\r\nint\r\nmain(int argc, char ** argv) {\r\n    int ret, fd;\r\n    struct sockaddr_in sa;\r\n    socklen_t salen;\r\n    int newfd;\r\n    int flags;\r\n    fd_set fs;\r\n\r\n    sa.sin_family = AF_INET;\r\n    sa.sin_addr.s_addr = INADDR_ANY;\r\n    sa.sin_port = htons(6600);\r\n\r\n    fd=socket(PF_INET,SOCK_STREAM, 0);\r\n\r\n    if (argc > 1) {\r\n        printf(\"setting accepting fd to non-block\\n\");\r\n        ret=fcntl(fd, F_SETFL, O_NONBLOCK);\r\n        fprintf(stderr, \"Flags set on %d with %d\\n\", fd, ret);\r\n    }\r\n\r\n    if (bind(fd, (struct sockaddr *)&sa, sizeof(sa)) != 0) {\r\n         fprintf(stderr, \"Bind failed %s\\n\",strerror(errno));\r\n         return -1;\r\n    }\r\n    if (listen(fd, 100) != 0) {\r\n        fprintf(stderr, \"Listen failed: %s\\n\", strerror(errno));\r\n        return(1);\r\n    }\r\n    flags = fcntl(fd, F_GETFL);\r\n    printf(\"Accepting fd %d flags=0x%x NONBLOCK=%d\\n\", fd, flags, flags & O_NONBLOCK );\r\n    FD_ZERO(&fs);\r\n    FD_SET(fd, &fs);\r\n    select(fd+1, &fs, NULL, NULL, NULL);\r\n    newfd = accept(fd, (struct sockaddr *)&sa, &salen);\r\n    printf(\"newfd=%d\\n\", newfd);\r\n    flags = fcntl(newfd, F_GETFL);\r\n    printf(\"newfd flags=0x%x NONBLOCK=%d\\n\", flags, flags & O_NONBLOCK);\r\n\r\n}\r\n```\r\n\r\nThis will listen on port 6600 and accept new connection. It will printf socket flags after new socket is accepted. (nc 127.0.0.1 6600) When argument is passed to executable it will accept using non-blocking socket.\r\n\r\n> furt@Ubuntu:/tmp$ ./socket\r\n> Accepting fd 3 flags=0x2 NONBLOCK=0\r\n> newfd=4\r\n> newfd flags=0x2 NONBLOCK=0\r\n> \r\n> furt@Ubuntu:/tmp$ ./socket -b\r\n> setting accepting fd to non-block\r\n> Accepting fd 3 flags=0x802 NONBLOCK=2048\r\n> newfd=4\r\n> newfd flags=0x2 NONBLOCK=0\r\n> \r\n\r\nhowever on macOS 10.12.6\r\n\r\n> Accepting fd 3 flags=0x2 NONBLOCK=0\r\n> newfd=4\r\n> newfd flags=0x2 NONBLOCK=0\r\n> \r\n> macik:~ furt$ ./socket -b\r\n> setting accepting fd to non-block\r\n> Flags set on 3 with 0\r\n> Accepting fd 3 flags=0x6 NONBLOCK=4\r\n> newfd=4\r\n> newfd flags=0x6 NONBLOCK=4\r\n> \r\n\r\nI got same result on macOS 10.13 (High Sierra) \r\nFor comparison on FreeBSD 11.0:\r\n\r\n> [furt@toweinfu-d11 /tmp]$ ./socket -b\r\n> setting accepting fd to non-block\r\n> Flags set on 3 with 0\r\n> Accepting fd 3 flags=0x6 NONBLOCK=4\r\n> newfd=4\r\n> newfd flags=0x6 NONBLOCK=4\r\n> \r\n\r\nIt seems like on macOS and BSD new socket inherits flags from accepting socket. \r\n"},{"Id":"7273404477","Type":"PullRequestEvent","CreatedAt":"2018-02-21T04:49:41","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27213","RelatedDescription":"Merged pull request \"make sure socket is blocking after accept() on macOS and BSD\" (#27213) at dotnet/corefx","RelatedBody":"This change will make sure new sockets after Accept() are in blocking mode on macOS. \r\nSee the notes from #27210. \r\n\r\nIt will also make them auto-close after exec to match Linux behavior.\r\nI have no direct evidence that it is causing problems but now remote exec xUnit tests will inherit sockets from main process. "},{"Id":"7273198866","Type":"PullRequestEvent","CreatedAt":"2018-02-21T03:22:43","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27314","RelatedDescription":"Opened pull request \"Move HashtableExtensions to common, Regex refactoring\" (#27314) at dotnet/corefx","RelatedBody":"I'm deeply sorry for the big PR (and commit). To cut a long story short, I was drawing a dependency graph (pen & paper) to better understand the current design and prepare for possible larger code changes. By that I accidently found tons of places in the code base that could have been cleaned up, and so I did...\r\n\r\nIn a lot of cases access modifiers weren't as limited as possible (internal instead of private). In some cases I changed fields to auto properties (some with private protected modifier). **All tests are still passing and I guarantee I did not alter any existing code in this PR**\r\n\r\nDuring this work I found several optimization candidates which I will submit a PR for tomorrow 🚶 🌜 "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7273363568","Type":"PullRequestEvent","CreatedAt":"2018-02-21T04:32:00","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24948","RelatedDescription":"Merged pull request \"Merge 15.6.x to 15.7.x\" (#24948) at dotnet/roslyn","RelatedBody":"Manual merge to bring in 15.6 changes ASAP.\r\n\r\ncc @jaredpar @jasonmalinowski "},{"Id":"7273222510","Type":"IssuesEvent","CreatedAt":"2018-02-21T03:32:38","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24967","RelatedDescription":"Opened issue \"ExtractMethodCodeRefactoringProvider threw \"System.InvalidOperationException : Failed to compare two elements in the array\"\" (#24967) at dotnet/roslyn","RelatedBody":"Was editing something in this code, I'm not sure what caused it:\r\n\r\n``` C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing Microsoft.VisualStudio.Setup;\r\nusing WillowDepends.Lib;\r\nusing static System.Console;\r\n\r\nnamespace WillowDepends.Console\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var manifest = Manifest.FromManifestFile(@\"\\\\cpvsbuild\\Drops\\VS\\d15.6\\products\\27420.00\\VisualStudio.vsman\");\r\n\r\n            foreach (var workload in manifest.Workloads)\r\n            {\r\n                if (!Contains461(manifest, workload))\r\n                {\r\n                    PrintPackageDependencies(manifest, workload);\r\n                }\r\n            }\r\n        }\r\n\r\n        private static bool Contains461(Manifest manifest, IPackage workload)\r\n        {\r\n            var alreadySeenPackages = new List<string>();\r\n            bool PringPackage(IPackage package, int v)\r\n            {\r\n                if (alreadySeenPackages.Contains(package.Id.ToLower()))\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                alreadySeenPackages.Add(package.Id.ToLower());\r\n                for (int i = 0; i < v; i++)\r\n                {\r\n                    if (package.Id == \"Microsoft.Net.PackageGroup.4.6.1.Redist\")\r\n                        return true;\r\n                }\r\n\r\n                foreach (var dependency in package.Dependencies)\r\n                {\r\n                    if (PringPackage(manifest[dependency.Id], v + 2))\r\n                        return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            alreadySeenPackages.Add(workload.Id.ToLower());\r\n            \r\n            foreach (var dependency in workload.Dependencies)\r\n            {\r\n                if (PringPackage(manifest[dependency.Id], 4))\r\n                    return true;\r\n            }\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        static void PrintPackageDependencies(Manifest manifest, IPackage workload)\r\n        {\r\n            var alreadySeenPackages = new List<string>();\r\n            void PringPackage(IPackage package, int v)\r\n            {\r\n                if (alreadySeenPackages.Contains(package.Id.ToLower()))\r\n                {\r\n                    return;\r\n                }\r\n\r\n                alreadySeenPackages.Add(package.Id.ToLower());\r\n                for (int i = 0; i < v; i++)\r\n                {\r\n                    Write(\" \");\r\n                }\r\n                Write(package.Id);\r\n                Write(Environment.NewLine);\r\n                foreach (var dependency in package.Dependencies)\r\n                {\r\n                    PringPackage(manifest[dependency.Id], v + 2);\r\n                }\r\n            }\r\n\r\n            alreadySeenPackages.Add(workload.Id.ToLower());\r\n            WriteLine(workload.Id);\r\n            //foreach (var dependency in workload.Dependencies)\r\n            //{\r\n            //    PringPackage(manifest[dependency.Id], 4);\r\n            //}\r\n        }\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\nResulted in:\r\n\r\n```\r\nSystem.InvalidOperationException : Failed to compare two elements in the array. ---> System.InvalidOperationException : Shouldn't reach here\r\n   at Roslyn.Utilities.Contract.FailWithReturn[T](String message)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ParameterVariableSymbol.CompareTo(IMethodSymbol left,IMethodSymbol right)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ParameterVariableSymbol.CompareTo(ParameterVariableSymbol other)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ParameterVariableSymbol.CompareTo(VariableSymbol right)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.VariableSymbol.Compare(VariableSymbol left,VariableSymbol right,INamedTypeSymbol cancellationTokenType)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.VariableInfo.<>c__DisplayClass24_0.<SortVariables>b__0(VariableInfo v1,VariableInfo v2)\r\n   at System.Array.FunctorComparer`1.Compare(T x,T y)\r\n   at System.Collections.Generic.ArraySortHelper`1.InsertionSort(T[] keys,Int32 lo,Int32 hi,IComparer`1 comparer)\r\n   at System.Collections.Generic.ArraySortHelper`1.IntroSort(T[] keys,Int32 lo,Int32 hi,Int32 depthLimit,IComparer`1 comparer)\r\n   at System.Collections.Generic.ArraySortHelper`1.IntrospectiveSort(T[] keys,Int32 left,Int32 length,IComparer`1 comparer)\r\n   at System.Collections.Generic.ArraySortHelper`1.Sort(T[] keys,Int32 index,Int32 length,IComparer`1 comparer)\r\n   --- End of inner exception stack trace ---\r\n   at System.Collections.Generic.ArraySortHelper`1.Sort(T[] keys,Int32 index,Int32 length,IComparer`1 comparer)\r\n   at System.Array.Sort[T](T[] array,Int32 index,Int32 length,IComparer`1 comparer)\r\n   at System.Collections.Generic.List`1.Sort(Comparison`1 comparison)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.VariableInfo.SortVariables(Compilation compilation,List`1 list)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.GetMethodParameters(ICollection`1 variableInfo)\r\n   at Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.GetSignatureInformation(DataFlowAnalysis dataFlowAnalysisData,IDictionary`2 variableInfoMap,Boolean isInExpressionOrHasReturnStatement)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.Analyzer.AnalyzeAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.MethodExtractor.ExtractMethodAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ExtractMethod.AbstractExtractMethodService`3.ExtractMethodAsync[TValidator,TExtractor,TResult](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.GetCodeActionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nI do not know what the repro is."},{"Id":"7272909840","Type":"PullRequestEvent","CreatedAt":"2018-02-21T01:35:18","Actor":"VSadov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24966","RelatedDescription":"Opened pull request \"Allow indexing fixed fields in movable contexts without pinning.\" (#24966) at dotnet/roslyn","RelatedBody":"Contributes towards:https://github.com/dotnet/csharplang/blob/master/proposals/fixed-sized-buffers.md\r\n\r\nTurns out the reason why we need pinning when the target is movable is the artefact of our code generation strategy - we always convert to unmanaged pointer and thys need to pin. However conversion to unmanaged is unnecessary when only doing indexing.\r\nThe same unsafe pointer math is equally applicable when we have the receiver in the form of managed pointer. However, when the intermediate ref is managed (GC-tracked), we do not need to pin it.\r\n\r\nTherefore, when a `fixed` field is used just for indexing and the unmanaged pointer is never realized, the requirement for `fixed` statement is unnecessary, regardless whether the receiver is movable or not.\r\n\r\nNOTE:\r\n- it is still possible to pin `fixed` buffer via `fixed` statement. Nothing changed here. There are still scenarios where it is useful - when one needs to do some elaborate pointer math or pass the pointer to the native API.\r\n- It was always allowed to index in unmovable contexts and it was always unsafe, and still is  - in particular no range checks are performed while indexing.\r\n- the only restriction that is gone is that you can now use indexing if receiver is movable as well.\r\nThe operation is just as fast and just as unsafe as in unmovable context - in particular it performs no range checks.\r\n"},{"Id":"7272852050","Type":"PullRequestEvent","CreatedAt":"2018-02-21T01:16:04","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24965","RelatedDescription":"Opened pull request \"SubstituteNoPiaLocalType - use comparison of SpecialTypes to match bases across distinct core libraries.\" (#24965) at dotnet/roslyn","RelatedBody":"Fixes #24964.\r\n\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7272734964","Type":"IssuesEvent","CreatedAt":"2018-02-21T00:38:07","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/19829","RelatedDescription":"Closed issue \"pathmap command line option inconsistent with similar command line options such as link/reference with regards to paths containing spaces\" (#19829) at dotnet/roslyn","RelatedBody":"Pathmap is fairly new and as of yet undocumented compiler command line option (see #18071 and dotnet/docs#1800). The main purpose of pathmap is to remap paths of source files for the benefit of deterministic builds that use CallerFilePathAttribute.\r\n\r\nThe general format of the pathmap command line option is:\r\n/pathmap:path1=pathA,path2=pathB etc\r\n\r\nIf any of the paths provided to the pathmap parameter contain spaces then you need to put double quotes around the entire set of comma separated path mapping instead of being able to quote individual paths. \r\n\r\nParsePathMap is inconsistent with other command line options that take a comma separated list of files or paths. For example the link and reference command line options make use of ParseAssemblyReferences which gives the following examples in comments within that method:\r\n\r\n// /r:\"reference\"\r\n// /r:alias=reference\r\n// /r:alias=\"reference\"\r\nThe MSDN documentation for the link option (https://msdn.microsoft.com/en-us/library/dd264728.aspx) explicitly states \"If the file name contains a space, enclose the name in quotation marks\".\r\n\r\nIt is expected that pathMap should work in a similar way.\r\n\r\n**Version Used**: \r\nThis is using latest Master. I actually came across this while updating all Roslyn tests to be compatible with user accounts/temp paths containing spaces.  Please refer to pull request #17524 for further details.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new folder containing a space, for example \"c:\\path with spaces\" and create a program.cs file in that folder with the following contents:\r\n``` C#\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args) => TraceMessage();\r\n    static void TraceMessage([System.Runtime.CompilerServices.CallerFilePath] string sourceFilePath = \"\") => Console.WriteLine(\"source file path: \" + sourceFilePath);\r\n}\r\n```\r\n2. Compile the project from the command line as follows:\r\n```csc.exe program.csc /pathmap:\"c:\\path with spaces\"=\\ ```\r\n3. Run program.exe\r\n\r\n**Expected Behavior**:\r\nProduce a program.exe that when run produces the following output:\r\n```source file path: c:\\path with spaces\\program.cs\"```\r\n\r\n**Actual Behavior**:\r\ncsc.exe returns an error because the command line was malformed with everything from the word ```with``` onwards being treated as extra separate command line options. The error returned is:\r\n```error CS8101: The pathmap option was incorrectly formatted.```\r\n\r\nTo successfully compile this with the pathmap you must use the following command line (note the closing double quote is now after the forward slash after the equals sign):\r\n```csc.exe program.csc /pathmap:\"c:\\path with spaces=\\\" ```"},{"Id":"7272693360","Type":"IssuesEvent","CreatedAt":"2018-02-21T00:25:10","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24964","RelatedDescription":"Opened issue \"Unexpected error about inability to locate canonical definition for a NoPia local type when different core libraries are involved\" (#24964) at dotnet/roslyn","RelatedBody":"```\r\n        [Fact]\r\n        public void UnificationAcrossDistincCoreLibs()\r\n        {\r\n            string pia = @\"\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\nusing System.Runtime.CompilerServices;\r\n\r\n[assembly: ImportedFromTypeLib(\"\"GeneralPIA.dll\"\")]\r\n[assembly: Guid(\"\"f9c2d51d-4f44-45f0-9eda-c9d599b58257\"\")]\r\n\r\npublic struct Test\r\n{\r\n}\r\n\";\r\n\r\n            var piaCompilation = CreateCompilationWithMscorlib45(pia, options: TestOptions.DebugDll, assemblyName: \"Pia\");\r\n\r\n            string consumer1 = @\"\r\npublic class UsePia1 \r\n{\r\n    public static Test M1()\r\n    {\r\n        return default;\r\n    }\r\n} \r\n\";\r\n\r\n            string consumer2 = @\"\r\nclass UsePia2 \r\n{\r\n    public static void Main()\r\n    {\r\n        UsePia1.M1();\r\n    }\r\n} \r\n\";\r\n\r\n            foreach (MetadataReference piaRef in new [] { piaCompilation.EmitToImageReference(), piaCompilation.ToMetadataReference() })\r\n            {\r\n                var compilation1 = CreateCompilationWithMscorlib45(consumer1, references: new [] { piaRef.WithEmbedInteropTypes(true) });\r\n\r\n                foreach (MetadataReference consumer1Ref in new[] { compilation1.EmitToImageReference(), compilation1.ToMetadataReference() })\r\n                {\r\n                    var compilation2 = CreateCompilationWithMscorlib46(consumer2, references: new[] { piaRef, consumer1Ref });\r\n\r\n                    compilation2.VerifyDiagnostics();\r\n\r\n                    Assert.NotSame(compilation1.SourceAssembly.CorLibrary, compilation2.SourceAssembly.CorLibrary);\r\n\r\n                    var test = compilation2.GetTypeByMetadataName(\"Test\");\r\n                    Assert.Equal(\"Pia.dll\", test.ContainingModule.Name);\r\n\r\n                    var usePia1 = compilation2.GetTypeByMetadataName(\"UsePia1\");\r\n                    Assert.Same(test, usePia1.GetMember<MethodSymbol>(\"M1\").ReturnType);\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\nExpected:\r\nActual:\r\n                // (6,9): error CS1748: Cannot find the interop type that matches the embedded interop type 'Test'. Are you missing an assembly reference?\r\n                //         UsePia1.M1();\r\n                Diagnostic(ErrorCode.ERR_NoCanonicalView, \"UsePia1.M1\").WithArguments(\"Test\").WithLocation(6, 9)\r\nDiff:\r\n++>                 Diagnostic(ErrorCode.ERR_NoCanonicalView, \"UsePia1.M1\").WithArguments(\"Test\").WithLocation(6, 9)\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7273439849","Type":"PullRequestEvent","CreatedAt":"2018-02-21T05:04:36","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5419","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5419) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7273174240","Type":"PullRequestEvent","CreatedAt":"2018-02-21T03:12:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5418","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5418) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7273030199","Type":"PullRequestEvent","CreatedAt":"2018-02-21T02:18:12","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5418","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5418) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7273023661","Type":"PullRequestEvent","CreatedAt":"2018-02-21T02:15:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5417","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5417) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7270941682","Type":"PullRequestEvent","CreatedAt":"2018-02-20T17:59:07","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5417","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5417) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7268821633","Type":"PullRequestEvent","CreatedAt":"2018-02-20T11:28:11","Actor":"mmayr-at","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5416","RelatedDescription":"Opened pull request \"Fix include/exclude pattern matching by using fully qualified method name and added some verbose output\" (#5416) at dotnet/corert","RelatedBody":"I saw that include/exclude pattern matching was not working anymore, because only the method name and not the fully qualified name was used.\r\n\r\nI also added some verbose output to see what input files, reference files, include and exclude patterns are used and if a method was verified or skipped."},{"Id":"7268117065","Type":"PullRequestEvent","CreatedAt":"2018-02-20T08:56:23","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5412","RelatedDescription":"Merged pull request \"Update CoreCLR tests\" (#5412) at dotnet/corert","RelatedBody":"Picks up the latest version of Pri0 tests (as of yesterday).\r\n\r\nThere was a massive cleanup of Pri0 tests on the CoreCLR side so we now run only about 2000 tests. Hopefully, they're more representative now. Most of what we picked as \"Top200\" was no longer part of the Pri0 suite, so I made a new one.\r\n\r\nWe might want to consider switching to Pri1 for the rolling builds."},{"Id":"7266623639","Type":"IssuesEvent","CreatedAt":"2018-02-19T23:14:20","Actor":"brunomlopes","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5415","RelatedDescription":"Opened issue \"Running SampleWebApi on IIS seems to fail?\" (#5415) at dotnet/corert","RelatedBody":"I've looked at using corert to compile and package a very simple asp.net core app to run on IIS, but while it runs standalone (by executing it directly on a command line).\r\n\r\nSo I've tried to compile the SampleWebApi that's in the samples directory and run in under IIS.\r\nIt failed with `Application startup exception: System.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.`\r\n\r\nThere might be some declarations missing on rd.xml?\r\n\r\nHere are the steps I've followed:\r\n\r\nRan  `dotnet publish -c Release -r win-x64`\r\n\r\nCreated IIS site and app pool, pointing at `corert\\samples\\WebApi\\bin\\Release\\netcoreapp2.0\\win-x64\\publish\\`\r\n\r\nAdded permissions on the folder to the app pool, changed web.config to remove `arguments` and set `stdoutLogEnabled` to true to see errors.\r\n\r\nNavigating with a browser shows\r\n```\r\nAn error occurred while starting the application.\r\n.NET Core 1.0.26219.01 X64 v4.0.0.0    |   Microsoft.AspNetCore.Hosting version 2.0.1-rtm-125    |    Microsoft Windows 10.0.16299    |   Need help?\r\n```\r\n\r\n\r\n\r\nOn the log file I've found it fails with\r\n```\r\nApplication startup exception: System.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x2e1\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x2e1\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n```\r\n\r\nSince it runs standalone, I thought I might need to add to the rd.xml:\r\n```\r\n    <Assembly Name=\"Microsoft.AspNetCore.Server.IISIntegration\" Dynamic=\"Required All\"/>\r\n```\r\n\r\nRepublish and now it fails with:\r\n```\r\nApplication startup exception: System.InvalidOperationException: A suitable constructor for type 'Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider' could not be located. Ensure the type is concrete and services are registered for all parameters of a public constructor.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type, Type, ISet`1) + 0x478\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor, Type, ISet`1) + 0x8f\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type, ISet`1) + 0x4d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0x8b\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type, ServiceProvider) + 0x31\r\n   at SampleWebApi!<BaseAddress>+0x4205a4\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type) + 0x30\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider) + 0x71\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x1e6\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.InvalidOperationException: A suitable constructor for type 'Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider' could not be located. Ensure the type is concrete and services are registered for all parameters of a public constructor.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type, Type, ISet`1) + 0x478\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor, Type, ISet`1) + 0x8f\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type, ISet`1) + 0x4d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0x8b\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type, ServiceProvider) + 0x31\r\n   at SampleWebApi!<BaseAddress>+0x4205a4\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type) + 0x30\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider) + 0x71\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x1e6\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n```\r\n\r\nAdding to rd.xml the declaration for that particular type:\r\n```\r\n        <Assembly Name=\"Microsoft.AspNetCore.Authentication.Core\">\r\n          <Type Name=\"Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider\" Dynamic=\"Required All\" />\r\n        </Assembly>\r\n```\r\n\r\nNow it fails with:\r\n```\r\nApplication startup exception: System.ArgumentException: 'Microsoft.AspNetCore.Authentication.AuthenticationOptions', on 'Microsoft.Extensions.Options.OptionsManager`1[TOptions]' violates the constraint of type 'TOptions'.\r\nParameter name: GenericArguments[0]\r\n   at SampleWebApi!<BaseAddress>+0x71404\r\n   at SampleWebApi!<BaseAddress>+0x71e2c\r\n   at SampleWebApi!<BaseAddress>+0x880ba\r\n   at SampleWebApi!<BaseAddress>+0x122841\r\n   at SampleWebApi!<BaseAddress>+0xff3cf\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateOpenGeneric(ServiceDescriptor, Type, ISet`1) + 0x64\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateOpenGeneric(Type, ISet`1) + 0x6d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0xc6\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type, Type, ISet`1, ParameterInfo[], Boolean) + 0x5a\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type, Type, ISet`1) + 0x123\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor, Type, ISet`1) + 0x8f\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type, ISet`1) + 0x4d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0x8b\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type, ServiceProvider) + 0x31\r\n   at SampleWebApi!<BaseAddress>+0x4219f4\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type) + 0x30\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider) + 0x71\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x1e6\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.ArgumentException: 'Microsoft.AspNetCore.Authentication.AuthenticationOptions', on 'Microsoft.Extensions.Options.OptionsManager`1[TOptions]' violates the constraint of type 'TOptions'.\r\nParameter name: GenericArguments[0]\r\n   at SampleWebApi!<BaseAddress>+0x71404\r\n   at SampleWebApi!<BaseAddress>+0x71e2c\r\n   at SampleWebApi!<BaseAddress>+0x880ba\r\n   at SampleWebApi!<BaseAddress>+0x122841\r\n   at SampleWebApi!<BaseAddress>+0xff3cf\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateOpenGeneric(ServiceDescriptor, Type, ISet`1) + 0x64\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateOpenGeneric(Type, ISet`1) + 0x6d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0xc6\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type, Type, ISet`1, ParameterInfo[], Boolean) + 0x5a\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type, Type, ISet`1) + 0x123\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor, Type, ISet`1) + 0x8f\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type, ISet`1) + 0x4d\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type, ISet`1) + 0x8b\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type, ServiceProvider) + 0x31\r\n   at SampleWebApi!<BaseAddress>+0x4219f4\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type) + 0x30\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider) + 0x71\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x1e6\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n```\r\n\r\nAdded\r\n```\r\n            <Type Name=\"Microsoft.Extensions.Options.OptionsManager`1[[Microsoft.AspNetCore.Authentication.AuthenticationOptions,Microsoft.AspNetCore.Authentication.Abstractions]]\" Dynamic=\"Required All\" />\r\n            <Type Name=\"Microsoft.Extensions.Options.OptionsFactory`1[[Microsoft.AspNetCore.Authentication.AuthenticationOptions,Microsoft.AspNetCore.Authentication.Abstractions]]\" Dynamic=\"Required All\" />\r\n```\r\nUnder `<Assembly Name=\"Microsoft.Extensions.Options\">`\r\n\r\nAnd now I'm back at \r\n```\r\nApplication startup exception: System.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x2e1\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate) + 0x2e1\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build() + 0x9c\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication() + 0x165\r\n```\r\n\r\nIs there an easy way to find out which type I'm missing?"},{"Id":"7266084610","Type":"PullRequestEvent","CreatedAt":"2018-02-19T20:33:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5414","RelatedDescription":"Merged pull request \"Typos\" (#5414) at dotnet/corert","RelatedBody":""},{"Id":"7265935560","Type":"PullRequestEvent","CreatedAt":"2018-02-19T19:52:37","Actor":"github-john-doe","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5414","RelatedDescription":"Opened pull request \"Typos\" (#5414) at dotnet/corert","RelatedBody":""},{"Id":"7265390554","Type":"PullRequestEvent","CreatedAt":"2018-02-19T17:31:05","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5411","RelatedDescription":"Merged pull request \"Fix build-and-run-test.cmd for VS 2017\" (#5411) at dotnet/corert","RelatedBody":"We stopped supporting VS 2015 a while ago, but running CoreCLR tests didn't actually work without it because we forgot to update a place."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7273028299","Type":"PullRequestEvent","CreatedAt":"2018-02-21T02:17:31","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1976","RelatedDescription":"Opened pull request \"Fixing perf.groovy syntax errors.\" (#1976) at dotnet/sdk","RelatedBody":"Fixing perf.groovy syntax errors.\r\n\r\n@DrewScoggins"},{"Id":"7272933532","Type":"PullRequestEvent","CreatedAt":"2018-02-21T01:43:35","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1969","RelatedDescription":"Merged pull request \"Enable the running of performance tests: SDK:release/2.0.0\" (#1969) at dotnet/sdk","RelatedBody":"Enable the running of performance tests: \r\n- commandLine: \"build.cmd -perf\"\r\n- optional properties: 'PerfIterations' 'PerfOutputDirectory' 'PerfCollectionType'\r\n- update RepoToolset version to a version that contains the performance targets\r\n- first draft 'perf.groovy'\r\n- rename: \"Microsoft.NET.Perf.Tests\" to \"Microsoft.NET.PerformanceTests\"\r\n\r\n@DrewScoggins"},{"Id":"7272670368","Type":"PullRequestEvent","CreatedAt":"2018-02-21T00:17:54","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1965","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to master\" (#1965) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7272612282","Type":"PullRequestEvent","CreatedAt":"2018-02-21T00:00:17","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1970","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.7.0-preview1-4927 into sdk\" (#1970) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.7.0-preview1-4927 into sdk release/2.1.2xx branch"},{"Id":"7272476847","Type":"PullRequestEvent","CreatedAt":"2018-02-20T23:21:20","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1965","RelatedDescription":null,"RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7272476747","Type":"PullRequestEvent","CreatedAt":"2018-02-20T23:21:18","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/1965","RelatedDescription":"Closed pull request \"Merge release/2.1.3xx to master\" (#1965) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7272474698","Type":"PullRequestEvent","CreatedAt":"2018-02-20T23:20:43","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1973","RelatedDescription":"Merged pull request \"Merge release/2.0.0 to release/2.1\" (#1973) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7272465992","Type":"PullRequestEvent","CreatedAt":"2018-02-20T23:18:20","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1974","RelatedDescription":"Merged pull request \"Merge release/2.1.1xx to release/2.1.2xx\" (#1974) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.1xx into release/2.1.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.1xx-to-release/2.1.2xx\ngit reset --hard upstream/release/2.1.2xx\ngit merge upstream/release/2.1.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.1xx-to-release/2.1.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"965964952375873544","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"dotnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/ioBP2nkstm","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"965646227764232192","CreatedAt":"2018-02-19T17:56:16+00:00","UserScreenname":"dotnet","Text":"Interactive learning with Try .NET with @LadyNaggaga https://t.co/8btikidagq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":22,"RawContent":null},{"Id":"964556484267868162","CreatedAt":"2018-02-16T17:46:01+00:00","UserScreenname":"dotnet","Text":"How can #VisualStudio help you get started building #dotNET apps in #Azure? Join @PaulYuki99 &amp; @andrewBrianHall at… https://t.co/Sws9Apkm6t","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":18,"FavoriteCount":14,"RawContent":null},{"Id":"963791622948388870","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/icP5AqPRuB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":46,"RawContent":null},{"Id":"963413986954895360","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"dotnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/l9RlPrj5Ep","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"963128572595519489","CreatedAt":"2018-02-12T19:12:00+00:00","UserScreenname":"dotnet","Text":"You can run your application anywhere with .NET Core – join @coolsch as he talks about .NET in 2018 at… https://t.co/0sSc3B7yOQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null},{"Id":"963083274636554240","CreatedAt":"2018-02-12T16:12:00+00:00","UserScreenname":"dotnet","Text":"Update your existing .NET application to take advantage of new features in Windows Forms and WPF with @csharpfritz… https://t.co/yjqbIthkKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":17,"RawContent":null},{"Id":"961657885137698816","CreatedAt":"2018-02-08T17:48:01+00:00","UserScreenname":"dotnet","Text":"Tomorrow is NOW! @DEVintersection Take a deep dive with the Microsoft’s AI team into machine learning, predictive a… https://t.co/5AcI4VRNyG","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":22,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-02-21T05:30:20.1297785Z","RunDurationInMilliseconds":7821}