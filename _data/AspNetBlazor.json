{"Data":{"GitHubIssues":{"Issues":[{"Id":"357667652","IsPullRequest":false,"CreatedAt":"2018-09-06T13:57:24","Actor":"stsrki","Number":"1394","RawContent":null,"Title":"ref attribute is null","State":"open","Body":"I have a custom components for my _navbar_ and I want to control the collapse(BarMenu) using the reference attribute like this:\r\n\r\n```\r\n<Bar Expand=\"Size.Large\" Background=\"Background.Primary\" Theme=\"Theme.Dark\">\r\n    <BarBrand To=\"\">Home</BarBrand>\r\n    <BarToggler For=\"@barMenu\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </BarToggler>\r\n    <BarMenu ref=\"barMenu\">\r\n        ...\r\n    </BarMenu>\r\n</Bar\r\n\r\n@functions{\r\n    private BarMenu barMenu;\r\n}\r\n```\r\nIn my BarToggler I have this code for button onclick event:\r\n\r\n```\r\n[Parameter] private BarMenu For { get; set; }\r\n\r\nprotected void ClickHandler()\r\n{\r\n    For?.Toggle();\r\n}\r\n```\r\nand in BarMenu:\r\n```\r\npublic void Toggle()\r\n{\r\n    IsOpen = !IsOpen;\r\n    Toggled?.Invoke( IsOpen );\r\n\r\n    StateHasChanged();\r\n}\r\n```\r\n\r\nNow the problem is that this only works if I place the Bar **inside** of MainLayout component. If I try to place it inside of any other component/page it is not working. The **For** attribute is always null in the BarToggler component and because of that the Toggle function will never be called.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1394","RelatedDescription":"Open issue \"ref attribute is null\" (#1394)"},{"Id":"357392050","IsPullRequest":false,"CreatedAt":"2018-09-06T08:15:28","Actor":"ChuckBevitt","Number":"1392","RawContent":null,"Title":"Sample App Does Not Compile","State":"closed","Body":"I followed the directions carefully at https://blazor.net/docs/get-started.html to create your first project. However, when I try to build the sample app created by the template I get this error:\r\n\r\nError\tMSB3073\tThe command \"dotnet \"C:\\Users\\DevCharlesB\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.5.1\\targets\\../tools/Microsoft.AspNetCore.Blazor.Build.dll\" write-boot-json obj\\Debug\\netstandard2.0\\Test Blazor2.dll --references \"C:\\Test\\Test Blazor2\\Test Blazor2\\obj\\Debug\\netstandard2.0\\blazor/bootjson-references.txt\" --embedded-resources \"C:\\Test\\Test Blazor2\\Test Blazor2\\obj\\Debug\\netstandard2.0\\blazor/embedded.resources.txt\" --linker-enabled --output \"C:\\Test\\Test Blazor2\\Test Blazor2\\obj\\Debug\\netstandard2.0\\blazor/blazor.boot.json\"\" exited with code -532462766.\tTest Blazor2\tC:\\Users\\DevCharlesB\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.5.1\\targets\\Blazor.MonoRuntime.targets\t635\r\n\r\nCan't quite pick out what it's trying to tell me or where to go with it. Appreciate any suggestions.","Url":"https://github.com/aspnet/Blazor/issues/1392","RelatedDescription":"Closed issue \"Sample App Does Not Compile\" (#1392)"},{"Id":"357455542","IsPullRequest":false,"CreatedAt":"2018-09-06T02:19:40","Actor":"SwErSumant","Number":"1393","RawContent":null,"Title":"Browser ( Chrome ) Extension development Template","State":"closed","Body":"NOTE: **Its not a browser extension to support blazor but develop any browser extension by using blazor.**\r\nWe can start from here\r\nhttps://developer.chrome.com/extensions/getstarted\r\nCan you please provide browser ( Chrome ) extension development template ?\r\nWhich other browser extension development is possible ?\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1393","RelatedDescription":"Closed issue \"Browser ( Chrome ) Extension development Template\" (#1393)"},{"Id":"356117766","IsPullRequest":false,"CreatedAt":"2018-09-05T21:07:22","Actor":"maraf","Number":"1377","RawContent":null,"Title":"Parameter of type object and string literal","State":"closed","Body":"Hi there.\r\nI tried to create a parameter of type object and than use type switch for various types (a single message of type string or a list of messages).\r\nSo I have created a parameter:\r\n\r\n```C#\r\n[Parameter]\r\nprotected object Message { get; set; }\r\n```\r\n\r\nThen, when I use it with literal value:\r\n\r\n```html\r\n<Alert Message=\"Try adding some exchange rates.\" />\r\n```\r\n\r\nIt strips out `\"` and generates an invalid code:\r\n\r\n```C#\r\nbuilder2.OpenComponent<Money.UI.Blazor.Components.Bootstrap.Alert>(63);\r\nbuilder2.AddAttribute(64, \"Message\", Microsoft.AspNetCore.Blazor.Components.RuntimeHelpers.TypeCheck<System.Object>(Try adding some exchange rates.));\r\nbuilder2.CloseComponent();\r\n```\r\n\r\nIt seems that only string is buggy, boolean and int values work.\r\nAlso when I pass a value of some property, it's ok.\r\n\r\nI'm using Blazor 0.5.1.","Url":"https://github.com/aspnet/Blazor/issues/1377","RelatedDescription":"Closed issue \"Parameter of type object and string literal\" (#1377)"},{"Id":"357373728","IsPullRequest":true,"CreatedAt":"2018-09-05T21:00:37","Actor":"rynowak","Number":"1391","RawContent":null,"Title":"Fix path to our templates","State":"closed","Body":"Fixes #1375","Url":"https://github.com/aspnet/Blazor/pull/1391","RelatedDescription":"Closed or merged PR \"Fix path to our templates\" (#1391)"},{"Id":"355993485","IsPullRequest":false,"CreatedAt":"2018-09-05T21:00:36","Actor":"srburton","Number":"1375","RawContent":null,"Title":"Blazor templates missing after installing latest Blazor VSIX from the dev feed","State":"closed","Body":"After the last update no longer appears the Blazor as a project.\r\n\r\n![image](https://user-images.githubusercontent.com/15394508/44916846-172ff880-ad0d-11e8-8c57-0117743680f4.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1375","RelatedDescription":"Closed issue \"Blazor templates missing after installing latest Blazor VSIX from the dev feed\" (#1375)"},{"Id":"357123662","IsPullRequest":false,"CreatedAt":"2018-09-05T14:59:05","Actor":"kant2002","Number":"1389","RawContent":null,"Title":"Libman restore does not working","State":"closed","Body":"If add libman.json to the project, then on new PC on the build files does not restored","Url":"https://github.com/aspnet/Blazor/issues/1389","RelatedDescription":"Closed issue \"Libman restore does not working\" (#1389)"},{"Id":"357141636","IsPullRequest":false,"CreatedAt":"2018-09-05T09:26:09","Actor":"arkadiuszwojcik","Number":"1390","RawContent":null,"Title":"Component not rendering after StateHasChanged call","State":"open","Body":"I have created simple `NavElement` component that changes a bit standard `NavLink` behaviour. According to log all logic works but somehow component is not re-rendered after `StateHasChanged` call. Relevant code looks like this:\r\n\r\n        private void OnLocationChanged(object sender, string newUriAbsolute)\r\n        {\r\n            Console.WriteLine(\"OnLocationChanged\");\r\n\r\n            var shouldBeActiveNow = ShouldMatch(newUriAbsolute);\r\n\r\n            if (shouldBeActiveNow != IsActive)\r\n            {\r\n                IsActive = shouldBeActiveNow;\r\n                Console.WriteLine(\"Calling StateHasChanged\");\r\n                StateHasChanged();\r\n            }\r\n        }\r\n\r\n        protected override bool ShouldRender() => true;\r\n\r\n        protected override void BuildRenderTree(RenderTreeBuilder builder)\r\n        {\r\n            Console.WriteLine(\"BuildRenderTree\");\r\n\r\n            builder.OpenElement(0, \"li\");\r\n\r\n            // Set class attribute\r\n            builder.AddAttribute(0, \"class\", CombineWithSpace(Class, IsActive ? ActiveClass : null));\r\n\r\n            builder.AddContent(1, ChildContent);\r\n\r\n            builder.CloseElement();\r\n        }\r\n\r\nComponent renders initialy. Later on when I click on some link logic works like expected and I get `Calling StateHasChanged` in browser console for two nav elements (old active and new active). But after that I can't see in logs `BuildRenderTree`. But when I refresh web page changes are applied.","Url":"https://github.com/aspnet/Blazor/issues/1390","RelatedDescription":"Open issue \"Component not rendering after StateHasChanged call\" (#1390)"},{"Id":"356766896","IsPullRequest":true,"CreatedAt":"2018-09-05T09:03:55","Actor":"SteveSandersonMS","Number":"1382","RawContent":null,"Title":"Pre-trim Mono BCL","State":"closed","Body":"This PR adds infrastructure for trimming the Mono WebAssembly BCL as part of our build, so the BCL we distribute gets smaller (especially after linking). The main aspects are:\r\n\r\n* A new build tool command, `ilwipe`, that takes a set of \"spec\" files and uses them as a config to know which parts of the BCL to \"wipe\"\r\n   * *wipe* means \"replace specified method bodies with a single `throw` instruction\". Doing this (instead of actually removing the method entirely) means that the assembly retains a completely standard API surface, and if you try to use one of the wiped methods, you get an easy-to-understand exception stack trace that tells you which wiped method you're trying to call.\r\n   * Spec files are just text files, each line of which is either whitespace, a comment, or a descriptor of something to wipe. Descriptors are of the form `Namespace.Type[::MethodName[(argtypes)]]`, where method name and arg types are optional (if not set, means \"all\"). Also supports wildcards (e.g., `System.Reflection.*`) and negation (e.g., `!System.Reflection.MethodInfo::ToString`) to override earlier lines.\r\n   * When the linker processes wiped (near-empty) methods such as these, it won't mark their orignial dependencies for retention, so even if the \"wiped\" assembly isn't much smaller, the overall linker result may be dramatically smaller\r\n* Build config changes that run `ilwipe` as part of the build. I also found numerous places where our build config was doing odd things or depending on not-actually-guaranteed build-order coincidences, so have (hopefully) tidied this up.\r\n\r\nWith the wipe config in this PR, the out-of-box standalone app goes down from 2.5MB to 2.0MB, i.e., it undoes the extra bloat introduced in #1372. I expect there are plenty more easy opportunities for wiping out other large would-never-work-anyway areas of the BCL, but that is a job for later.","Url":"https://github.com/aspnet/Blazor/pull/1382","RelatedDescription":"Closed or merged PR \"Pre-trim Mono BCL\" (#1382)"},{"Id":"357027331","IsPullRequest":false,"CreatedAt":"2018-09-05T08:26:31","Actor":"Lupusa87","Number":"1388","RawContent":null,"Title":"warning BL9993: Component parameter 'any' is marked public, but component parameters should not be public","State":"closed","Body":"**This warning has no sense!**\r\n\r\n1. If I want to access child **property or action** from parent using component reference I need public property (why should I add extra public method to modify private property) or action (especially).\r\n\r\n2. I often access component's properties or actions from any place inside application, logically I need public properties or actions to have control of them.\r\n\r\nI use public access level but VS is giving this warning.\r\n\r\nI can use **internal** access level but I think it will be also against the logic based with blazor analyzer requires private.\r\n\r\nMy questions:\r\n**1. What are arguments for requesting private?**\r\n\r\n**2. Why can not be used public or internal?**\r\n\r\n**3. If there is good reason then what can we do in above cases?**\r\n\r\n@SteveSandersonMS \r\n","Url":"https://github.com/aspnet/Blazor/issues/1388","RelatedDescription":"Closed issue \"warning BL9993: Component parameter 'any' is marked public, but component parameters should not be public\" (#1388)"},{"Id":"357001867","IsPullRequest":true,"CreatedAt":"2018-09-04T22:40:37","Actor":"Suchiman","Number":"1387","RawContent":null,"Title":"Support streaming HTTP responses and HttpCompletionOption.ResponseHeadersRead","State":"open","Body":"This delays reading the response body as  `ArrayBuffer`  by moving it into a custom `HttpContent` type which allows `httpClient.SendAsync(request, HttpCompletionOption.ResponseHeadersRead` to work as intended.\r\nAdditionally this introduces optional support for streaming the response body if supported by the browser and enabled by the user (controlled via `BrowserHttpMessageHandler.StreamingSupported` and `BrowserHttpMessageHandler.StreamingEnabled`).\r\nStreaming is not enabled by default because the default behavior of `HttpClient` is to buffer anyway while the streaming mode increases the overhead (many interop transitions, Tasks allocated for every `ReadAsync` call).\r\nLast but not least a small change to cascade the `CancellationToken` to an `abortController` on the JS side so an in-flight fetch request can be properly canceled.\r\nfixes #1384","Url":"https://github.com/aspnet/Blazor/pull/1387","RelatedDescription":"Open PR \"Support streaming HTTP responses and HttpCompletionOption.ResponseHeadersRead\" (#1387)"},{"Id":"356913219","IsPullRequest":true,"CreatedAt":"2018-09-04T17:50:50","Actor":"kant2002","Number":"1386","RawContent":null,"Title":"Removal of global.json from the template","State":"open","Body":"I remove only global.json from the template, and leave global.json in the repository root, since it is required for the build.\r\nSee #1324","Url":"https://github.com/aspnet/Blazor/pull/1386","RelatedDescription":"Open PR \"Removal of global.json from the template\" (#1386)"},{"Id":"356866373","IsPullRequest":false,"CreatedAt":"2018-09-04T15:34:46","Actor":"andras-ferencz","Number":"1385","RawContent":null,"Title":"Annoying wwwroot folder behavior - no failback mechanism for lack of an accessible index.html file.","State":"open","Body":"If your visual studio lags out and in the process you [whack your keyboard](https://dqbasmyouzti2.cloudfront.net/assets/content/cache/made/content/images/articles/BrokenComputer_XL_721_420_80_s_c1.jpg) and it somehow hits the right combination of hotkeys to move the wwwroot folder to, say, Pages or Shared, you're going to have a really bad time with this wonderful error: \r\n\r\n> The SPA default page middleware could not return the default page '/index.html' because it was not found, and no other middleware handled the request.\r\n\r\nI understand that managing to achieve this error is the equivalent of winning the [GRAND PRIZE](https://en.wikipedia.org/wiki/Golden_Raspberry_Awards), but hear me out here.\r\n\r\nAs you frantically search the internet for why your latest deployment destroyed everything for no reason whatsoever, you'll bet met with zero indication that, perhaps, just perhaps, a goddamned little gremlin from Redmond, WA moved your wwwroot folder underneath another folder.\r\n\r\nVisualStudio should definitely not let you accidentally move or drag the wwwroot (or any other folder that gets a specialized, unique icon - seriously, how tf has this not been implemented by 2018?); but Blazor itself, should have a failback mechanism for when it gets served without an accessible index.html page; even a single string of text that says \"hey i, the magnificent blazor, couldn't find wwwroot\". \r\n\r\n🐊","Url":"https://github.com/aspnet/Blazor/issues/1385","RelatedDescription":"Open issue \"Annoying wwwroot folder behavior - no failback mechanism for lack of an accessible index.html file.\" (#1385)"},{"Id":"356789193","IsPullRequest":false,"CreatedAt":"2018-09-04T12:34:46","Actor":"csnewman","Number":"1384","RawContent":null,"Title":"BrowserHttpMessageHandler reads body content to end","State":"open","Body":"Inside \"Blazor/src/Microsoft.AspNetCore.Blazor.Browser.JS/src/Services/Http.ts\", the response data is handled via \" responseData = await response.arrayBuffer();\", which reads the entire response stream to the end, and then returns the data, however this is the incorrect behaviour.\r\n\r\nHttpMessageHandler's should not buffer the response as this is handled within the HttpClient.\r\n\r\nThis means that method such as \"_httpClient.SendAsync(request, HttpCompletionOption.ResponseHeadersRead, CancellationToken.None);\", are not handled correctly as the ResponseHeadersRead flag is not respected, due to the content body being read to the end.\r\n\r\nWe would need to wrap the ReadableStream from the JS side to the c# side as the HttpContent in the ReceiveResponse in BrowserHttpMessageHandler.\r\n\r\nIs there any chance of getting this fixed? As I've managed to get the c# signalr client working with long polling, but can't get the \"ServerSentEventsTransport\" to work until this is fixed, as otherwise the client timeouts trying to read the content body to the end, when it shouldn't as the ResponseHeadersRead is passed.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1384","RelatedDescription":"Open issue \"BrowserHttpMessageHandler reads body content to end\" (#1384)"},{"Id":"356770513","IsPullRequest":true,"CreatedAt":"2018-09-04T11:38:05","Actor":"kant2002","Number":"1383","RawContent":null,"Title":"Add -c option in the blazor server","State":"open","Body":"- Pass configuration using MSBuild variable $(Configuration)\r\n- Parse command line parameters -c or --configuration to match dotnet command way of defining configuration\r\n\r\nSee #261","Url":"https://github.com/aspnet/Blazor/pull/1383","RelatedDescription":"Open PR \"Add -c option in the blazor server\" (#1383)"},{"Id":"355527886","IsPullRequest":true,"CreatedAt":"2018-09-03T16:47:06","Actor":"SteveSandersonMS","Number":"1372","RawContent":null,"Title":"Enable default HttpClient handler","State":"closed","Body":"This uses the feature implemented by @kjpou1 https://github.com/mono/mono/pull/10152. It means you can now do `new HttpClient()` directly and it works under Blazor on WebAssembly.\r\n\r\nNote that we still register a `HttpClient` in the default DI config, because that instance has its `BaseUri` populated, meaning that it knows how to make requests with relative URLs. If you do `new HttpClient()` then you can only make requests to absolute URLs. This is standard for .NET's `HttpClient`.\r\n\r\nAdditionally, this involved updating to a newer version of mono (bfc35fc6e65). Benchmarks show that this newer version of Mono is consistently 10-20% faster on our checked scenarios (app startup, rendering, JSON handling), but it's also about 150KB bigger after linking.","Url":"https://github.com/aspnet/Blazor/pull/1372","RelatedDescription":"Closed or merged PR \"Enable default HttpClient handler\" (#1372)"},{"Id":"356280347","IsPullRequest":false,"CreatedAt":"2018-09-03T15:56:22","Actor":"JamJar00","Number":"1380","RawContent":null,"Title":"Mono IL Linker Error with MVC Scaffolding","State":"closed","Body":"Having added MVC scaffolding to my Blazor project Mono is unable to resolve the System.Resources.Reader assembly.\r\n```\r\nFatal error in IL Linker\r\nMono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'C:\\Usrs\\Jamie\\.nuget\\packages\\system.resources.reader\\4.3.0\\lib\\netstandard1.0\\System.Resources.Reader.dll, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'C:\\Usrs\\Jamie\\.nuget\\packages\\system.resources.reader\\4.3.0\\lib\\netstandard1.0\\System.Resources.Reader.dll, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n   at Mono.Linker.DirectoryAssemblyResolver.Resolve(AssemblyNameReference name, ReaderParameters parameters)\r\n   at Mono.Linker.AssemblyResolver.Resolve(AssemblyNameReference name, ReaderParameters parameters)\r\n   at Mono.Linker.LinkContext.Resolve(IMetadataScope scope)\r\n   at Mono.Linker.LinkContext.Resolve(IMetadataScope scope)\r\n   at Mono.Linker.LinkContext.Resolve(String name)\r\n   at Mono.Linker.Steps.ResolveFromAssemblyStep.Process()\r\n   at Mono.Linker.Steps.BaseStep.Process(LinkContext context)\r\n   at Mono.Linker.Pipeline.Process(LinkContext context)\r\n   at Mono.Linker.Driver.Run(ILogger customLogger)\r\n   at Mono.Linker.Driver.Execute(String[] args, ILogger customLogger)\r\n```\r\n\r\nHave confirmed the DLL is present and the linker is finding it (I get a different error if it's not there).\r\n\r\n\r\nI'm not entirely sure how I got here so it's hard to reproduce. I added MVC scaffolding, resolved the errors the import brought and was able to run the project, but having added controllers and models this error is thrown every build.\r\n\r\nThe usual cleaning the project/deleting the bin and obj folders hasn't helped. Backtracking and removing the controller and model files I added also hasn't helped.","Url":"https://github.com/aspnet/Blazor/issues/1380","RelatedDescription":"Closed issue \"Mono IL Linker Error with MVC Scaffolding\" (#1380)"},{"Id":"355953727","IsPullRequest":false,"CreatedAt":"2018-09-03T13:14:06","Actor":"male110","Number":"1374","RawContent":null,"Title":"error tip","State":"closed","Body":"<input type=\"text\" bind=\"@Count\" />\r\n<div>@Count</div>\r\n@functions{\r\n    int Count { get; set; }\r\n}\r\nif input 'aaaa',How can i show some tips","Url":"https://github.com/aspnet/Blazor/issues/1374","RelatedDescription":"Closed issue \"error tip\" (#1374)"},{"Id":"356011861","IsPullRequest":false,"CreatedAt":"2018-09-03T13:11:24","Actor":"Sire","Number":"1376","RawContent":null,"Title":"Sending objects with only private setters should give a warning","State":"closed","Body":"When sending objects in Blazor with private setters on their properties, those properties are always empty at the client, and no warnings are given.\r\n\r\nThis is a limitation of the MessagePack de/serialization, [issue here](https://github.com/neuecc/MessagePack-CSharp/issues/284). Private fields are never serialized.\r\n\r\nIt would be very helpful to show a warning from JsInterop. It could save hours of head-scratching. At least if ALL properties have private setters - which indicates the developer doesn't know of this limitation. \r\n\r\nThere is a very helpful warning from the jsinterop project when you're trying to send an object with a non-public constructor. So it might be possible to add another warning at this location.\r\n\r\nSource:\r\n```\r\nvar constructorDelegate = ConstructorCache[type] ?? \r\nthrow new InvalidOperationException($\"Cannot deserialize JSON into type '{type.FullName}' because it does not have a public parameterless constructor.\");\r\n\r\n```\r\n[Link to source](https://github.com/dotnet/jsinterop/blob/a9a5bb9eba154d9dc3f43d5636e49d02cbd6cc97/src/Microsoft.JSInterop/Json/SimpleJson/SimpleJson.cs#L1473)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1376","RelatedDescription":"Closed issue \"Sending objects with only private setters should give a warning\" (#1376)"},{"Id":"356256750","IsPullRequest":false,"CreatedAt":"2018-09-03T13:03:40","Actor":"footysteve","Number":"1379","RawContent":null,"Title":"Issue #834 nav bug","State":"closed","Body":"I'm new to github hope it's ok post about a closed issue. I just encountered this while playing around with blazor\r\n\r\n\"Blazor App - simple bug, hard to fix - make DOM/window properties and events available in Blazor\r\n#834 by Andrzej-W was closed on May 22\"\r\n\r\nThis is my workaround, \r\n\r\n`\r\n**button class=\"navbar-toggler\" onclick=@Dropdown**\r\n\r\n@functions {\r\n    bool collapseNavMenu = true;\r\n    bool dropDownActive = false;\r\n\r\n    void ToggleNavMenu()\r\n    {\r\n        if (dropDownActive)\r\n        {\r\n            collapseNavMenu = true;\r\n            dropDownActive = false;\r\n        }\r\n    }\r\n\r\n    void Dropdown()\r\n    {\r\n        collapseNavMenu = !collapseNavMenu;\r\n        dropDownActive = !collapseNavMenu;\r\n    }\r\n}`\r\n\r\nCould be coded better I expect, a first cut, it does work though :)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1379","RelatedDescription":"Closed issue \"Issue #834 nav bug\" (#1379)"},{"Id":"356312997","IsPullRequest":false,"CreatedAt":"2018-09-03T12:56:04","Actor":"highphilosopher","Number":"1381","RawContent":null,"Title":"Issue with Javascript Interop in Server Side Blazor Project","State":"closed","Body":"Currently I am trying to access the play() method on an HTML audio tag.\r\n\r\n`<audio id=\"timeOverPlayer\" preload=\"auto\"><source src=\"@settings[\"Time Over Sound\"]\" /></audio>`\r\n\r\nI've got a Script tag in my index.html file:\r\n\r\n`    <script>\r\n        window.playElement = function (element) {\r\n            document.getElementById(element).play();\r\n            return true;\r\n        }\r\n    </script>`\r\n\r\nAnd I'm trying to call this function from C# with the following static method which is an event handler (if that's important):\r\n\r\n```\r\n    public void OnFiveMinuteWarning(object sender, EventArgs args)\r\n    {\r\n        PlayAudio(\"fiveMinutePlayer\");\r\n    }\r\n```\r\n\r\n```\r\n    public static Task<bool> PlayAudio(String elementName)\r\n    {\r\n        return JSRuntime.Current.InvokeAsync<bool>(\"playElement\", elementName);\r\n    }\r\n```\r\n\r\nWhen this happens I get no audio and no errors in the console. I can manually call the Javascript from the console, and the audio plays fine. If I add a Wait() on the PlayAudio method call, I get an error:\r\n\r\n> System.AggregateException\r\n  HResult=0x80131500\r\n  Message=One or more errors occurred.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait()\r\n   at WebClock.App.Pages.Clocks.OnTimeOver(Object sender, EventArgs args) in C:\\Users\\samue\\source\\repos\\BlazorClock\\WebClock\\WebClock.App\\Pages\\Clocks.cshtml:line 52\r\n   at WebClock.App.Services.Clock._timer_Elapsed(Object sender, ElapsedEventArgs e) in C:\\Users\\samue\\source\\repos\\BlazorClock\\WebClock\\WebClock.App\\Services\\ClockService.cs:line 111\r\n   at System.Timers.Timer.MyTimerCallback(Object state)\r\n\r\n> Inner Exception 1:\r\n> JSException: Could not find 'playElement' in 'window'.\r\n> Error: Could not find 'playElement' in 'window'.\r\n>     at http://localhost:37382/_framework/blazor.server.js:23:47556\r\n>     at Array.forEach (<anonymous>)\r\n>     at p (http://localhost:37382/_framework/blazor.server.js:23:47517)\r\n>     at http://localhost:37382/_framework/blazor.server.js:23:48120\r\n>     at new Promise (<anonymous>)\r\n>     at e.beginInvokeJSFromDotNet (http://localhost:37382/_framework/blazor.server.js:23:48094)\r\n>     at http://localhost:37382/_framework/blazor.server.js:16:11652\r\n>     at Array.forEach (<anonymous>)\r\n>     at e.invokeClientMethod (http://localhost:37382/_framework/blazor.server.js:16:11623)\r\n>     at e.processIncomingData (http://localhost:37382/_framework/blazor.server.js:16:10229)\r\n> \r\n\r\nNot sure if this is just not being raised when async or if the error is because I'm Waiting on an async call. At this point I'm pretty puzzled.","Url":"https://github.com/aspnet/Blazor/issues/1381","RelatedDescription":"Closed issue \"Issue with Javascript Interop in Server Side Blazor Project\" (#1381)"},{"Id":"356222457","IsPullRequest":false,"CreatedAt":"2018-09-02T08:31:57","Actor":"MarekPokornyOva","Number":"1378","RawContent":null,"Title":"How to pass more ChildContents from razor file?","State":"closed","Body":"Hello,\r\nI'm playing with ChildContent on a component and can't find solution for following:\r\n\r\nLet's have reusable base component allowing to include three parts.\r\n**SplitterBase.cshtml**\r\n```\r\n<div class=\"part1\">@Part1</div>\r\n<div class=\"part2\">@Part2</div>\r\n<div class=\"part3\">@Part3</div>\r\n\r\n@functions\r\n{\r\n   [Parameter]\r\n   RenderFragment Part1 { get; set; }\r\n\r\n   [Parameter]\r\n   RenderFragment Part2 { get; set; }\r\n\r\n   [Parameter]\r\n   RenderFragment Part3 { get; set; }\r\n\r\n\t//just one ChildContent property is not enough in this case\r\n}\r\n\r\n\r\n```How is it possible to pass the parts from parent component defined in cshtml?\r\n**Splitter.cshtml**\r\n```\r\n<SplitterBase>\r\n\tHow to define Part1 here?\r\n\tHow to define Part2 here?\r\n\tHow to define Part3 here?\r\n</SplitterBase>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1378","RelatedDescription":"Closed issue \"How to pass more ChildContents from razor file?\" (#1378)"},{"Id":"355774788","IsPullRequest":false,"CreatedAt":"2018-08-30T22:21:42","Actor":"vipero07","Number":"1373","RawContent":null,"Title":"Preload Dlls and mono.wasm on build","State":"open","Body":"The way things are currently loaded is mono.wasm first, then after it is processed the dlls get loaded and processed. After all of this is done the application will finally render in the browser. As a result the initial load is quite slow (for me its been around 4s on a fast computer with a good internet connection). The initial page load performance can be greatly improved simply by adding a preload link in the HTML for each dll. \r\n\r\nE.G. \r\n```\r\n<link rel=\"preload\" as=\"fetch\" type=\"application/octet-stream\" href=\"_framework/_bin/mscorlib.dll\" /> \r\n<link rel=\"preload\" as=\"fetch\" type=\"application/octet-stream\" href=\"_framework/_bin/System.Core.dll\" />\r\n...\r\n```\r\n\r\nYou could also use a script like:\r\n\r\n```\r\n(function () {\r\n    function preload(href) {\r\n        var link = document.createElement('link');\r\n        link.rel = 'preload';\r\n        link.as = 'fetch';\r\n        link.type = 'application/octet-stream';\r\n        link.href = '_framework/_bin/' + href;\r\n        document.head.appendChild(link);\r\n    }\r\n    [\r\n        'mscorlib.dll',\r\n        'System.Core.dll',\r\n        'Microsoft.CSharp.dll',\r\n        'System.dll',\r\n        'Microsoft.AspNetCore.Blazor.dll',\r\n    ].forEach(preload);\r\n}());\r\n```\r\n\r\nThe downside of using a script is browsers can be pushed link preloads by the server, and using the script loses the server push ability.\r\n\r\nWhat would be nice is a build script that detects the generated dlls and injects the link preload into the html file head. When you preload the dlls they are generally done being retrieved before mono.wasm is even ready to look for them. This has reduced my render times down to 1s from the 4s I mentioned above, a notable improvement. \r\n\r\nAlternatively a service worker that prefetches the dlls would work just as well.","Url":"https://github.com/aspnet/Blazor/issues/1373","RelatedDescription":"Open issue \"Preload Dlls and mono.wasm on build\" (#1373)"},{"Id":"355212624","IsPullRequest":false,"CreatedAt":"2018-08-29T15:35:01","Actor":"ericgrantholland","Number":"1371","RawContent":null,"Title":"Need examples showing Blazor Drag and Drop API","State":"closed","Body":"Looking for a working example using the Blazor drag and drop API. Specifically, I'm looking for an example of setting HTML elements as dropzones and draggables WITHOUT explicit JS interop. Looking to hook into the Blazor events designed around UIDragEventArgs.\r\n\r\nPlease note I'm that I'm also looking to set transfer data using blazor C#, but this issue currently being tracked by #957","Url":"https://github.com/aspnet/Blazor/issues/1371","RelatedDescription":"Closed issue \"Need examples showing Blazor Drag and Drop API\" (#1371)"},{"Id":"354274942","IsPullRequest":false,"CreatedAt":"2018-08-29T10:06:19","Actor":"moataz1991","Number":"1368","RawContent":null,"Title":"DataAnnotations Exception","State":"closed","Body":"Hello\r\n\r\nwhen i want to add DataAnnotation attributes for EF Core purpose \"Timestamp\"\r\nit throws an exception\r\n\r\n[System.IO.FileNotFoundException] Could not load file or assembly 'System.ComponentModel.Annotations, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies\r\n\r\nhow to fix this please :)\r\n\r\nim using MySql Database with Pomelo\r\nWindows 10 64-bit\r\n\r\nThanks","Url":"https://github.com/aspnet/Blazor/issues/1368","RelatedDescription":"Closed issue \"DataAnnotations Exception\" (#1368)"},{"Id":"354251875","IsPullRequest":false,"CreatedAt":"2018-08-29T09:44:40","Actor":"cores-system","Number":"1366","RawContent":null,"Title":"BindElementAttribute and StateHasChanged()","State":"closed","Body":"Hello, \"int SomeExpression\" is not updated until you call \"StateHasChanged()\"\r\nHow to use it correctly BindElementAttribute ?\r\n\r\nBindAttributes.cs\r\n```\r\n[BindElement(\"myinput\", null, \"value\", \"valueChange\")]\r\npublic static class BindAttributes : Object { }\r\n```\r\n\r\nIndex.cshtml\r\n```\r\n@page \"/\"\r\n\r\nWORK\r\n<myinput bind=\"@Some1\" onchange=\"@(e => StateHasChanged())\" /> <br />\r\n@SomeExpression\r\n\r\nNOT WORK\r\n<myinput bind=\"@Some2\" /> <br />\r\n@SomeExpression\r\n\r\n@functions{\r\n    int Some1 { get; set; }\r\n    int Some2 { get; set; }\r\n}\r\n```\r\n\r\nmyinput.cshtml\r\n```\r\n<input type=\"number\" class=\"form-control\"\r\n       value=\"@(0 >= value || value == DefaultValue ? string.Empty : value.ToString())\"\r\n       placeholder=\"@(Init ? \"Loading...\" : placeholder)\"\r\n       onchange=\"@(e => {\r\n            valueChange?.Invoke(int.Parse(e.Value.ToString()));\r\n            onchange?.Invoke(e);\r\n       })\"\r\n />\r\n\r\n@functions {\r\n    [Parameter]\r\n    int value { get; set; }\r\n\r\n    [Parameter]\r\n    Action<int> valueChange { get; set; }\r\n\r\n    [Parameter]\r\n    int DefaultValue { get; set; }\r\n\r\n    [Parameter]\r\n    bool Init { get; set; }\r\n\r\n    [Parameter]\r\n    string placeholder { get; set; }\r\n\r\n    [Parameter]\r\n    Action<UIChangeEventArgs> onchange { get; set; }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1366","RelatedDescription":"Closed issue \"BindElementAttribute and StateHasChanged()\" (#1366)"},{"Id":"354522157","IsPullRequest":false,"CreatedAt":"2018-08-28T00:10:05","Actor":"kant2002","Number":"1370","RawContent":null,"Title":"Could not publish with --no-build","State":"open","Body":"1. Have setup Two projects. First is API, second is Client Blazor app which is referenced by API.\r\n2. I do build of solution using dotnet build\r\n3. then I run `dotnet publish API --no-build`\r\n\r\nResulting the generated output does not contains .blazor.config\r\nwhen I run `dotnet publish` without specifying `--no-build` produced package contains valid `blazor.config` file. This make whole published package unusable.","Url":"https://github.com/aspnet/Blazor/issues/1370","RelatedDescription":"Open issue \"Could not publish with --no-build\" (#1370)"},{"Id":"354462348","IsPullRequest":false,"CreatedAt":"2018-08-27T20:17:12","Actor":"korsaire","Number":"1369","RawContent":null,"Title":"Button's onclick triggered upon right mouse click","State":"open","Body":"When you have onclick event e.g.\r\n```\r\n<button onclick=\"@HandleClick\">Click me</button>\r\n```\r\nit's triggered upon both left and right button click. I think it's a bug, as you can read in living HTML [standard](https://w3c.github.io/uievents/#event-type-click):\r\n>The click event type MUST be dispatched on the topmost event target indicated by the pointer, when the user presses down and releases the **primary** pointer button, or otherwise activates the pointer in a manner that simulates such an action.","Url":"https://github.com/aspnet/Blazor/issues/1369","RelatedDescription":"Open issue \"Button's onclick triggered upon right mouse click\" (#1369)"},{"Id":"354131309","IsPullRequest":false,"CreatedAt":"2018-08-27T19:20:56","Actor":"korsaire","Number":"1365","RawContent":null,"Title":"Ability to pass parameters to event handlers","State":"closed","Body":"It seems that currently parameters are not supported. If you do e.g. this:\r\n```\r\n    @foreach(var x in xCollection)\r\n    {\r\n        <li>x.Name <a onclick=\"@HandleClick(x.Value)\">Click me</a></li>\r\n    }\r\n\r\n    //More code\r\n\r\n    @functions {\r\n        private void HandleClick(string p)\r\n        {           \r\n        }\r\n    }\r\n```\r\n\r\nyou get a compilation error:\r\n```\r\nerror CS1503: Argument 1: cannot convert from 'void' to 'string'\r\n```\r\n\r\nIt would simplify the binding to be able to pass parameters there.","Url":"https://github.com/aspnet/Blazor/issues/1365","RelatedDescription":"Closed issue \"Ability to pass parameters to event handlers\" (#1365)"},{"Id":"354266584","IsPullRequest":false,"CreatedAt":"2018-08-27T11:40:33","Actor":"SMPX","Number":"1367","RawContent":null,"Title":"Hosting static files in ASP.NET Core hosting project","State":"closed","Body":"Client project (in conponent):\r\nI create a link:\r\n\r\n`<a href=\"http://localhost/1.txt\">Download file</a>`\r\n\r\nIn Server proget in wwwroot folder i put file \"1.txt\"\r\n\r\nWhen run and click <a> - route error:\r\n\r\n\"Error: System.InvalidOperationException: 'Router' cannot find any component with a route for '/1.txt'\"\r\n\r\nHow a can host static files ?\r\n\r\nThank you.\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1367","RelatedDescription":"Closed issue \"Hosting static files in ASP.NET Core hosting project\" (#1367)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-07T05:30:04.0904842Z","RunDurationInMilliseconds":1282}