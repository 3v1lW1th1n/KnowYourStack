{"Data":{"GitHub":{"Issues":[{"Id":"427811569","IsPullRequest":true,"CreatedAt":"2019-04-01T17:16:34","Actor":"vatsan-madhavan","Number":"482","RawContent":null,"Title":"Update to C++ tools used in internal builds","State":"closed","Body":"Updating C++ tools used in internal builds. This is the final update until these tools are integrated into Dev16.1 Preview 2 bits directly. ","Url":"https://github.com/dotnet/wpf/pull/482","RelatedDescription":"Closed or merged PR \"Update to C++ tools used in internal builds\" (#482)"},{"Id":"427280334","IsPullRequest":true,"CreatedAt":"2019-03-30T13:10:51","Actor":"dotnet-maestro[bot]","Number":"481","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190329.11\r\n- **Date Produced**: 3/30/2019 2:01 AM\r\n- **Commit**: cbf050750a3e74f8877ebf0f817aef906a94240c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27529-11\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Private.Winforms** -> 4.8.0-preview4.19178.12 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview4.19179.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.1 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/481","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#481)"},{"Id":"427279488","IsPullRequest":false,"CreatedAt":"2019-03-30T12:55:35","Actor":"VBAndCs","Number":"480","RawContent":null,"Title":"A more compact Style format","State":"open","Body":"Allow us to write Styles like this:\r\n```XAML\r\n<Style Key=\"Style1\" TargetType=\"Control\">\r\n   <Set\r\n    Foreground = \"#66603a\"\r\n    Background = \"#fff4e4\"\r\n    BorderBrush = \"Red\"\r\n    BorderThickness = \".5,.5,1.5,1.5\"          \r\n    FontFamily = \"Times New Roman\" \r\n    FontSize= \"18\" \r\n    FontWeight = \"Bold\" \r\n    FontStyle = \"Oblique\"\r\n    Padding = \"5\" \r\n    Margin = \"10\" />\r\n\r\n    <Handle MouseEnter =\"Control_MouseEnter\"/>\r\n</Style>\r\n```\r\n\r\nthis is more compact and more readable than:\r\n```XAML\r\n<Style Key=\"Style1\" TargetType=\"Control\">\r\n      <Setter Property=\"Control.Foreground\" Value=\"#66603a\" />\r\n      <Setter Property=\"Control.Background\" Value=\"#fff4e4\"/>\r\n      <Setter Property=\"Control.BorderBrush\" Value=\"Red\"/>\r\n      <Setter Property=\"Control.BorderThickness\" Value=\".5,.5,1.5,1.5\"/>          \r\n      <Setter Property=\"Control.FontFamily\" Value=\"Times New Roman\" />\r\n      <Setter Property=\"Control.FontSize\" Value=\"18\" />\r\n      <Setter Property=\"Control.FontWeight\" Value=\"Bold\" />\r\n      <Setter Property=\"Control.FontStyle\" Value=\"Oblique\"/>\r\n      <Setter Property=\"Control.Padding\" Value=\"5\" />\r\n      <Setter Property=\"Control.Margin\" Value=\"10\" />\r\n\r\n    <EventSetter Event=\"MouseEnter\"  Handler=\"Control_MouseEnter\"/>\r\n</Style>\r\n```\r\n","Url":"https://github.com/dotnet/wpf/issues/480","RelatedDescription":"Open issue \"A more compact Style format\" (#480)"},{"Id":"427275670","IsPullRequest":true,"CreatedAt":"2019-03-30T12:10:58","Actor":"dotnet-maestro[bot]","Number":"479","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/479","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#479)"},{"Id":"427234544","IsPullRequest":false,"CreatedAt":"2019-03-30T03:02:31","Actor":"zwcloud","Number":"478","RawContent":null,"Title":"Why did you create VisualTreeHelper class?","State":"open","Body":"Dear WPF devs, this is a question about the thoughts and considerations about the API `VisualTreeHelper`.\r\n\r\nA [StackOverflow answer](https://stackoverflow.com/a/2205934/3427520) by @paulcbetts said:\r\n\r\n> I believe it is intentionally obfuscated a bit, because you shouldn't be directly fiddling with the visual tree most of the time, fitting with the \"Framework Design Guidelines\" philosophy of \"Commonly used classes should follow basic scenarios\".\r\n> Since any method in Visual would be on pretty much any WPF control, they chose to put these advanced methods in a separate class. What the Framework designers are subtly trying to tell you is, \"You shouldn't use this function unless you really know there's no better way to do what you're doing\".\r\n\r\nThat sounds quite reasonable. And I would like to know original ideas from WPF devs.","Url":"https://github.com/dotnet/wpf/issues/478","RelatedDescription":"Open issue \"Why did you create VisualTreeHelper class?\" (#478)"},{"Id":"427151138","IsPullRequest":true,"CreatedAt":"2019-03-29T20:55:40","Actor":"vatsan-madhavan","Number":"477","RawContent":null,"Title":"Fixes to get solution build within VS working again","State":"closed","Body":"Removes `NoBuild=true` from packaging projects. We use targets suppression to prevent packaging projects from producing unnecessary DLL's, so `NoBuild=true` wasn't adding any value and was making builds within VS difficult to use\r\n\r\n\\+ A few other ancillary changes. \r\n\r\nNote: My builds work cleanly within VS after I installed [`3.0.100-preview4-011006`](https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-preview4-011006/dotnet-sdk-3.0.100-preview4-011006-win-x64.zip) ([`x86`](https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-preview4-011006/dotnet-sdk-3.0.100-preview4-011006-win-x86.zip)).","Url":"https://github.com/dotnet/wpf/pull/477","RelatedDescription":"Closed or merged PR \"Fixes to get solution build within VS working again\" (#477)"},{"Id":"426977639","IsPullRequest":true,"CreatedAt":"2019-03-29T13:13:06","Actor":"dotnet-maestro[bot]","Number":"476","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190328.14\r\n- **Date Produced**: 3/29/2019 5:44 AM\r\n- **Commit**: 6f7780eef92af15d41c55aca5e7e7edd02ad08fd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27528-14\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Private.Winforms** -> 4.8.0-preview4.19177.2 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview4.19178.7 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#476)"},{"Id":"426955157","IsPullRequest":true,"CreatedAt":"2019-03-29T12:11:25","Actor":"dotnet-maestro[bot]","Number":"475","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 10:57 AM\r\n- **Commit**: ef139c7533e2e33c5e0946b80cb1aa95d84da868\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/475","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#475)"},{"Id":"426947714","IsPullRequest":false,"CreatedAt":"2019-03-29T11:45:08","Actor":"onovotny","Number":"474","RawContent":null,"Title":"Improve AssemblyInformationVersionAttribute contents","State":"open","Body":"Hi,\r\n\r\nCurrently the contents of the `AssemblyInformationalVersionAttribute` looks something like this:\r\n\r\n`4.8.27522.14 @BuiltBy: dlab14-DDVSOWINAGE077 @Branch: master @Commit: 5cd1bc54eca491024d501e926f7fb058dbf9e657`\r\n\r\nThere's a lot in there to unpack. By contrast, the CLR's version of the attribute looks like this:\r\n\r\n`3.0.0-preview4.27525.71+a593024b85a6e074770c88867491f4f30cc6fc8a`\r\n\r\nCan the WPF version of the attribute be improved/split up? The branch name, if relevant (why if the commit hash is there), could go in a different AssemblyMetadata attribute. Same as the `BuildBy`.\r\n\r\nLastly, is there a way to get the version value itself to match that of the shared desktop version: `3.0.0-preview4-27522-14`?\r\n\r\nWhat I'd like to see, for the particular version I have, is this: `3.0.0-preview4-27522-14+5cd1bc54eca491024d501e926f7fb058dbf9e657`\r\n\r\n/cc @richlander as he drove improvements to this area for the BCL in 3.0.","Url":"https://github.com/dotnet/wpf/issues/474","RelatedDescription":"Open issue \"Improve AssemblyInformationVersionAttribute contents\" (#474)"},{"Id":"426655243","IsPullRequest":true,"CreatedAt":"2019-03-28T19:06:33","Actor":"vatsan-madhavan","Number":"473","RawContent":null,"Title":"Onboarding new build infrastructure","State":"closed","Body":"This PR onboards a new shared build infrastrucutre - primarily props + targets - that are shared between this repo and WPF's internal build. ","Url":"https://github.com/dotnet/wpf/pull/473","RelatedDescription":"Closed or merged PR \"Onboarding new build infrastructure\" (#473)"},{"Id":"426483768","IsPullRequest":true,"CreatedAt":"2019-03-28T13:16:23","Actor":"dotnet-maestro[bot]","Number":"472","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190328.01\r\n- **Date Produced**: 3/28/2019 9:43 AM\r\n- **Commit**: afd454e4fa78e615f7501c8eddf24af579f7719d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27528-01\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.TypeExtensions** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview4.19177.9 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/472","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#472)"},{"Id":"426456221","IsPullRequest":true,"CreatedAt":"2019-03-28T12:11:44","Actor":"dotnet-maestro[bot]","Number":"471","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190327.11\r\n- **Date Produced**: 3/28/2019 1:58 AM\r\n- **Commit**: 69f276904fdd6d8f81404b857f295537894b81d3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19177.11\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/471","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#471)"},{"Id":"426149710","IsPullRequest":false,"CreatedAt":"2019-03-27T19:42:00","Actor":"poke","Number":"470","RawContent":null,"Title":"Cross platform support for XPS","State":"open","Body":"XPS is with OpenXPS an open standard that is actually supported by non-Windows operating systems.\r\n\r\nI’ve recently found XPS and the XPS Document API to be really nice for composing documents. With WPF and related technologies moving to .NET Core 3, the XPS APIs will also be available for .NET Core 3.\r\n\r\nHowever, the way I understand it, XPS is somewhat a part of WPF and as such is limited to Windows. Are there any plans to extract XPS out of WPF in a way that makes the XPS APIs for document creation etc. available on other operating systems?","Url":"https://github.com/dotnet/wpf/issues/470","RelatedDescription":"Open issue \"Cross platform support for XPS\" (#470)"},{"Id":"425948245","IsPullRequest":true,"CreatedAt":"2019-03-27T13:10:01","Actor":"dotnet-maestro[bot]","Number":"469","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190327.02\r\n- **Date Produced**: 3/27/2019 11:44 AM\r\n- **Commit**: fef74d39b1bb08aefd0930f6c7866ddb3150d75b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27527-02\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.TypeExtensions** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview4.19176.11 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/469","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#469)"},{"Id":"425921717","IsPullRequest":true,"CreatedAt":"2019-03-27T12:11:09","Actor":"dotnet-maestro[bot]","Number":"468","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190326.14\r\n- **Date Produced**: 3/27/2019 12:08 AM\r\n- **Commit**: e23a3e2fd09a6222361ce47b78d23ab42867924c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19176.14\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/468","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#468)"},{"Id":"425836877","IsPullRequest":false,"CreatedAt":"2019-03-27T09:02:31","Actor":"vsfeedback","Number":"467","RawContent":null,"Title":"Debugging WPF applications is exceptionally slow","State":"open","Body":"VSF_TYPE_MARKDOWNDebugging WPF applications is exceptionally slow. When the debugged application causes a UI refresh (not sure what is triggering it, maybe applying templates), it does it very slowly. During this time you can see the output window filling up with warnings like \n\n&quot;System.Windows.ResourceDictionary Warning: 9 : Resource not found; ResourceKey='...&quot;\n\nthough also very slowly (~1 per second).\n\nDebugging the same application works fine with VS 2017.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/506934/debugging-wpf-applications-is-exceptionally-slow.html\nVSTS ticketId: 829882_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/467","RelatedDescription":"Open issue \"Debugging WPF applications is exceptionally slow\" (#467)"},{"Id":"425836789","IsPullRequest":false,"CreatedAt":"2019-03-27T09:02:17","Actor":"vsfeedback","Number":"466","RawContent":null,"Title":"Commit error","State":"open","Body":"VSF_TYPE_MARKDOWN`Microsoft.VisualStudio.Composition.CompositionFailedException: An exception was thrown while initializing part &quot;GitClientVS.UI.Views.PublishSectionView&quot;. ---&gt; System.Windows.Markup.XamlParseException: Set property 'System.Windows.ResourceDictionary.DeferrableContent' threw an exception. ---&gt; System.Xaml.XamlObjectWriterException: Set property 'System.Windows.ResourceDictionary.Source' threw an exception. ---&gt; System.IO.IOException: Cannot locate resource 'themes/metroheader.xaml'.\n   at MS.Internal.AppModel.ResourcePart.GetStreamCore(FileMode mode, FileAccess access)\n   at System.IO.Packaging.PackagePart.GetStream(FileMode mode, FileAccess access)\n   at System.IO.Packaging.PackWebResponse.CachedResponse.GetResponseStream()\n   at System.IO.Packaging.PackWebResponse.GetResponseStream()\n   at System.IO.Packaging.PackWebResponse.get_ContentType()\n   at MS.Internal.WpfWebRequestHelper.GetContentType(WebResponse response)\n   at MS.Internal.WpfWebRequestHelper.GetResponseStream(WebRequest request, ContentType&amp; contentType)\n   at System.Windows.ResourceDictionary.set_Source(Uri value)\n   at System.Windows.Baml2006.WpfSharedBamlSchemaContext.&lt;&gt;c.&lt;Create_BamlProperty_ResourceDictionary_Source&gt;b__342_0(Object target, Object value)\n   at System.Windows.Baml2006.WpfKnownMemberInvoker.SetValue(Object instance, Object value)\n   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(XamlMember member, Object obj, Object value)\n   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(Object inst, XamlMember property, Object value)\n   --- End of inner exception stack trace ---\n   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(Object inst, XamlMember property, Object value)\n   at MS.Internal.Xaml.Runtime.PartialTrustTolerantRuntime.SetValue(Object obj, XamlMember property, Object value)\n   at System.Xaml.XamlObjectWriter.Logic_ApplyPropertyValue(ObjectWriterContext ctx, XamlMember prop, Object value, Boolean onParent)\n   at System.Xaml.XamlObjectWriter.Logic_DoAssignmentToParentProperty(ObjectWriterContext ctx)\n   at System.Xaml.XamlObjectWriter.Logic_AssignProvidedValue(ObjectWriterContext ctx)\n   at System.Xaml.XamlObjectWriter.WriteEndMember()\n   at System.Xaml.XamlWriter.WriteNode(XamlReader reader)\n   at System.Xaml.XamlServices.Transform(XamlReader xamlReader, XamlWriter xamlWriter, Boolean closeWriter)\n   at System.Xaml.XamlServices.Transform(XamlReader xamlReader, XamlWriter xamlWriter)\n   at System.Windows.SystemResources.ResourceDictionaries.LoadDictionary(Assembly assembly, String assemblyName, String resourceName, Boolean isTraceEnabled, Uri&amp; dictionarySourceUri)\n   at System.Windows.SystemResources.ResourceDictionaries.LoadGenericDictionary(Boolean isTraceEnabled)\n   at System.Windows.SystemResources.FindDictionaryResource(Object key, Type typeKey, ResourceKey resourceKey, Boolean isTraceEnabled, Boolean allowDeferredResourceReference, Boolean mustReturnDeferredResourceReference, Boolean&amp; canCache)\n   at System.Windows.SystemResources.FindResourceInternal(Object key, Boolean allowDeferredResourceReference, Boolean mustReturnDeferredResourceReference)\n   at System.Windows.FrameworkElement.FindResourceInternal(FrameworkElement fe, FrameworkContentElement fce, DependencyProperty dp, Object resourceKey, Object unlinkedParent, Boolean allowDeferredResourceReference, Boolean mustReturnDeferredResourceReference, DependencyObject boundaryElement, Boolean isImplicitStyleLookup, Object&amp; source)\n   at System.Windows.StaticResourceExtension.FindResourceInAppOrSystem(IServiceProvider serviceProvider, Boolean allowDeferredReference, Boolean mustReturnDeferredResourceReference)\n   at System.Windows.StaticResourceExtension.FindResourceInEnviroment(IServiceProvider serviceProvider, Boolean allowDeferredReference, Boolean mustReturnDeferredResourceReference)\n   at System.Windows.StaticResourceExtension.TryProvideValueImpl(IServiceProvider serviceProvider, Boolean allowDeferredReference, Boolean mustReturnDeferredResourceReference)\n   at System.Windows.ResourceDictionary.SetOptimizedStaticResources(IList`1 staticResources, IServiceProvider serviceProvider, StaticResourceExtension staticResourceWorker)\n   at System.Windows.ResourceDictionary.SetKeys(IList`1 keyCollection, IServiceProvider serviceProvider)\n   at System.Windows.ResourceDictionary.SetDeferrableContent(DeferrableContent deferrableContent)\n   at System.Windows.Baml2006.WpfSharedBamlSchemaContext.&lt;&gt;c.&lt;Create_BamlProperty_ResourceDictionary_DeferrableContent&gt;b__297_0(Object target, Object value)\n   at System.Windows.Baml2006.WpfKnownMemberInvoker.SetValue(Object instance, Object value)\n   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(XamlMember member, Object obj, Object value)\n   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(Object inst, XamlMember property, Object value)\n   --- End of inner exception stack trace ---\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\n   at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\n   at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\n   at System.Windows.Application.LoadComponent(Object component, Uri resourceLocator)\n   at GitClientVS.UI.Views.PublishSectionView.InitializeComponent()\n   at GitClientVS.UI.Views.PublishSectionView..ctor(IPublishSectionViewModel vm)\n   --- End of inner exception stack trace ---\n   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.RuntimePartLifecycleTracker.CreateValue()\n   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.Create()\n   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.MoveNext(PartLifecycleState nextState)\n   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.MoveToState(PartLifecycleState requiredState)\n   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.GetValueReadyToExpose()\n   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.&lt;&gt;c__DisplayClass15_0.&lt;GetExportedValueHelper&gt;b__0()\n   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.GetValueForImportElement(RuntimePartLifecycleTracker importingPartTracker, RuntimeImport import, RuntimeExport export, Func`3 lazyFactory)\n   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.GetValueForImportSite(RuntimePartLifecycleTracker importingPartTracker, RuntimeImport import)\n   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.RuntimePartLifecycleTracker.&lt;CreateValue&gt;b__10_0(RuntimeImport import)\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\n   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.RuntimePartLifecycleTracker.CreateValue()\n   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.Create()\n   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.MoveNext(PartLifecycleState nextState)\n   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.MoveToState(PartLifecycleState requiredState)\n   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.GetValueReadyToExpose()\n   at Microsoft.VisualStudio.Composition.ExportProvider.&lt;&gt;c__DisplayClass53_0.&lt;CreateExport&gt;b__0()\n   at Microsoft.VisualStudio.Composition.ExportProvider.&lt;&gt;c__DisplayClass55_0.&lt;CreateExportFactoryExport&gt;b__1()\n   at Microsoft.VisualStudio.Composition.ExportProvider.&lt;&gt;c__DisplayClass54_0.&lt;CreateExportFactory&gt;b__0()\n   at Microsoft.VisualStudio.Composition.DelegateServices.&lt;&gt;c__DisplayClass2_0`1.&lt;As&gt;b__0()\n   at System.ComponentModel.Composition.ExportFactory`1.CreateExport()\n   at Microsoft.VisualStudio.Composition.NetFxAdapters.MefV1ExportProvider.ComposablePartDefinitionForExportFactory.CreatePart()\n   at System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator.LifetimeContext.GetExportLifetimeContextFromExport[T](Export export)\n   at System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator.&lt;&gt;c__DisplayClass6_0`2.&lt;CreateStronglyTypedExportFactoryOfTM&gt;b__0()\n   at System.ComponentModel.Composition.ExportFactory`1.CreateExport()\n   at Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TeamExplorerSectionHost.Create()`\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/506935/commit-error.html\nVSTS ticketId: 829885_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/466","RelatedDescription":"Open issue \"Commit error\" (#466)"},{"Id":"425401438","IsPullRequest":true,"CreatedAt":"2019-03-26T21:12:17","Actor":"dotnet-maestro[bot]","Number":"464","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190325.14\r\n- **Date Produced**: 3/26/2019 4:31 AM\r\n- **Commit**: 36f75eb9d513d79acbd84b8137e5f4c10b38f5a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27525-14\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/464","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#464)"},{"Id":"425629260","IsPullRequest":true,"CreatedAt":"2019-03-26T21:09:35","Actor":"dotnet-maestro[bot]","Number":"465","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190325.9\r\n- **Date Produced**: 3/25/2019 10:36 PM\r\n- **Commit**: 13daa29185518ef3c6d4074fd07efbc5236a76c5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19175.9\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/465","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#465)"},{"Id":"425377853","IsPullRequest":true,"CreatedAt":"2019-03-26T18:27:01","Actor":"dotnet-maestro[bot]","Number":"463","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190325.7\r\n- **Date Produced**: 3/25/2019 8:34 PM\r\n- **Commit**: 002cce7e8e3e043c50acae673741ee3962411e10\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19175.7\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/463","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#463)"},{"Id":"425225826","IsPullRequest":false,"CreatedAt":"2019-03-26T04:49:44","Actor":"pcfulife","Number":"462","RawContent":null,"Title":"It sometimes crashes when I types Korean. (MSCTF.dll)","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`) preview3-010485, preview4-010963\r\n* Windows version: (`winver`) 17763 and 18362\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: I don't know. But, it does not reproduce in WPF for .NET Framework 4.7.2\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nMy project is packed with appx by using Desktop Bridge technology. And It sometimes crashes when I am typing Korean in TextBox. (MSCTF.dll)\r\nI think that it is due to Korean IME system. Because there are no case like me in google. And MSCTF is a dll file of IME system, isn't it?\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n System.ExecutionEngineException: 'Exception_WasThrown' from msctf.dll\r\n\r\n **Expected behavior:**\r\n Not throwing exception.\r\n\r\n **Minimal repro:**\r\n I don't have any reproducible project. Because it is very occasionally reproducible. So, I will upload a debugging screenshot.\r\n\r\n![1](https://user-images.githubusercontent.com/45808641/54972207-f3e0d980-4fcd-11e9-8186-b8febadd8e71.jpg)","Url":"https://github.com/dotnet/wpf/issues/462","RelatedDescription":"Open issue \"It sometimes crashes when I types Korean. (MSCTF.dll)\" (#462)"},{"Id":"424947313","IsPullRequest":true,"CreatedAt":"2019-03-25T15:00:18","Actor":"dotnet-maestro[bot]","Number":"461","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190325.01\r\n- **Date Produced**: 3/25/2019 2:51 PM\r\n- **Commit**: c521a89c14023a08d9cd6fb4b47dc13ca3c5e1f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27525-01\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/461","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#461)"},{"Id":"424699545","IsPullRequest":false,"CreatedAt":"2019-03-25T02:41:21","Actor":"vsfeedback","Number":"460","RawContent":null,"Title":"WPF Application Always Rebuilds In Visual Studio","State":"open","Body":"This was previously reported on GitHub to the MSBuild Team (https://github.com/Microsoft/msbuild/issues/4228) who suggested I open a Visual Studio Support Ticket.\n\nBackground\n\nIn attempting to reproduce the issue for #4217 I attempted to create a fresh WPF Project to see if I could reproduce it; in doing this I encountered a similar (but I do not believe identical) issue wherein the MainWindow.g.cs was always regenerated.\nSteps to reproduce\n\nPlease find an attached zip file that contains the project that demonstrates this behavior: WpfAppAlwaysRebuilds.zip\n\nThis project was created by:\n\n    Creating a new WPF Application within Visual Studio\n    Modifying the CSPROJ To contain the work around for #1648 as follows\n\n  &lt;Target Name=&quot;GenerateCompiledExpressionsTempFile&quot;&gt;\n    &lt;!--This is a no-op to overwrite the existing target that ships with MSBuild. When we upgrade to Visual Studio 2019 (MSBuild 16.0) we can remove this. See https://github.com/Microsoft/msbuild/issues/1648--&gt;\n  &lt;/Target&gt;\n\nTo reproduce the issue on the command line build the project\n\nmsbuild WpfAppAlwaysRebuilds.sln /t:Build\n\nThen launch the Solution in Visual Studio and build you will see this in diganostic verbosity:\n\nProject 'WpfAppAlwaysRebuilds' is not up to date. Input file 's:\\temp\\markupbug\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\obj\\debug\\mainwindow.g.cs' is modified after output file ''.\n------ Build started: Project: WpfAppAlwaysRebuilds, Configuration: Debug Any CPU ------\n\nNote that in order to repeat it a second time you MUST delete the contents of the /obj/ folder to start &quot;clean&quot; again. Once it has built in Visual Studio once MSBuild will happily report that it is up to date.\n\nExpected behavior\n\nThe expected behavior is that this project will report as &quot;up-to-date&quot;\n\nActual behavior\n\nThe project rebuilds because it determines that it is not &quot;up-to-date&quot;\n\n@livarcocc The Workflow Fix requires the coordination between Dev16; however if you notice bullet 2 I have already worked around this; this is a NEW issue (even after the workflow one is corrected).\n\nHere is the rebuild trigger:\n\n1&gt;Project 'WpfAppAlwaysRebuilds' is not up to date. Input file 'r:\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\obj\\debug\\mainwindow.g.cs' is modified after output file ''.\n\nIf this had been the workflow issue it would have been complaining about a *TemporaryGenerated.cs file.\n\nThis issue ends up being the same as the reference issue (although it took me a lot longer to get to that point in the reference issue):\n\n    When MSBuild compiles a WPF Application MarkupCompilePass1 is called PRIOR to all Compile inputs being calculated. One such task that adds additional compile items is GenerateTargetFrameworkMonikerAttribute\n    In Visual Studio GenerateTargetFrameworkMonikerAttribute is called PRIOR to MarkupCompilePass1\n    Because of the design of MarkupCompilePass1 there is another layer of incremental build caching: it is looking at the number of files used as inputs (as well as taking the hashes of their file names) to determine if it should run again or not. Because this added an additional Compile item in Visual Studio it will always rebuild.\n\nThe work around is to apply this into the ProjectFile which will temporarily fix you; but the real fix needs to happen in MSBuild to correctly call GenerateTargetFrameworkMonikerAttribute prior to MarkupCompilePass1:\n\n  &lt;PropertyGroup&gt;\n    &lt;!--This is a hack to try and fix https://github.com/Microsoft/msbuild/issues/4228--&gt;\n    &lt;MarkupCompilePass1DependsOn&gt;$(MarkupCompilePass1DependsOn);GenerateTargetFrameworkMonikerAttribute&lt;/MarkupCompilePass1DependsOn&gt;\n  &lt;/PropertyGroup&gt;\n\nIts unclear who owns this; its either gotta be Visual Studio or the MSBuild team that changes to make this consistent otherwise you will ALWAYS rebuild in WPF.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/503048/wpf-application-always-rebuilds-in-visual-studio.html\nVSTS ticketId: 826388_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/460","RelatedDescription":"Open issue \"WPF Application Always Rebuilds In Visual Studio\" (#460)"},{"Id":"424493792","IsPullRequest":true,"CreatedAt":"2019-03-23T12:09:42","Actor":"dotnet-maestro[bot]","Number":"459","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/459","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#459)"},{"Id":"423530321","IsPullRequest":true,"CreatedAt":"2019-03-22T22:06:04","Actor":"skendrot","Number":"454","RawContent":null,"Title":"Fix documentation typo and punctuation","State":"closed","Body":"Fixes a typo in the class summary documentation and adds punctuation where needed","Url":"https://github.com/dotnet/wpf/pull/454","RelatedDescription":"Closed or merged PR \"Fix documentation typo and punctuation\" (#454)"},{"Id":"423952869","IsPullRequest":true,"CreatedAt":"2019-03-22T16:51:47","Actor":"mmitche","Number":"457","RawContent":null,"Title":"Add coherent parent attributes","State":"closed","Body":"Adds a new dependency (not actually used) on Microsoft.NETCore.App and then ties the existing corefx dependencies to that Microsoft.NETCore.App.  This ensures that corefx binaries do not get ahead of a core-setup that has actually ingested those binaries.  This helps our overall coherency push at the end of the release cycle.","Url":"https://github.com/dotnet/wpf/pull/457","RelatedDescription":"Closed or merged PR \"Add coherent parent attributes\" (#457)"},{"Id":"424177506","IsPullRequest":true,"CreatedAt":"2019-03-22T12:10:21","Actor":"dotnet-maestro[bot]","Number":"458","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/458","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#458)"},{"Id":"423696506","IsPullRequest":true,"CreatedAt":"2019-03-21T12:10:32","Actor":"dotnet-maestro[bot]","Number":"456","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190320.2\r\n- **Date Produced**: 3/20/2019 5:43 PM\r\n- **Commit**: f70fa34786cff993625a4548ae0125335eabe82e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19170.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/456","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#456)"},{"Id":"423625704","IsPullRequest":false,"CreatedAt":"2019-03-21T09:00:41","Actor":"DingpingZhang","Number":"455","RawContent":null,"Title":"Provide more built-in markup extensions","State":"open","Body":"Sometimes I found that if we use some custom markup extensions, which can make our code easier. \r\n\r\nFor example, if we want to control the visibility of a ui element and there is a bool property (named `IsA`) in our view model, we usually use the `BooleanToVisibilityConverter` to convert the bool type to the visibility enum type in xaml, but there is another element that has the opposite behavior and it wants to be hidden when the boolean property (named `IsA`) is `true`. Now, we will have two options: 1) add a new bool property named `IsNotA`; 2) add a new converter named `NotBooleanToVisibilityConverter`. But I think we have a third choice: use a custom markup extension named `ComposeExtension` for it, like below: \r\n```xml\r\n<TextBlock Visibility={Binding IsA, Converter={markup:Compose {StaticResource NotOperator}, {StaticResource BooleanToVisibilityConverter}}} ...\r\n```\r\nIt can compose a series of converters to one converter. The data enters from the first converter, then flows through each converter in turn, and then flows out of the last converter. I think there are still many scenes that need it. (see [here](https://github.com/DingpingZhang/WpfExtensions/blob/master/WpfExtensions.Xaml/Markup/ComposeExtension.cs) for its implementation)\r\n\r\nAnother higher frequency requirement is to use conditional expression (`<bool>?<true value>:<false value>`) in xaml. I know we can use the `Trigger` to implement it, like below:\r\n```xml\r\n    <Button>\r\n        <Button.Style>\r\n            <Style TargetType=\"Button\" BasedOn=\"{StaticResource {x:Type Button}}\">\r\n                <Setter Property=\"Content\" Value=\"{StaticResource LoadingImage}\" />\r\n                <Style.Triggers>\r\n                    <DataTrigger Binding=\"{Binding IsLoaded}\" Value=\"True\">\r\n                        <Setter Property=\"Content\" Value=\"{StaticResource LoadedImage}\" />\r\n                    </DataTrigger>\r\n                </Style.Triggers>\r\n            </Style>\r\n        </Button.Style>\r\n    </Button>\r\n```\r\nBut I think the above code is too long. If we have the `IfExtension`, we can write it in the following form: (see [here](https://github.com/DingpingZhang/WpfExtensions/blob/master/WpfExtensions.Xaml/Markup/IfExtension.cs) for its implementation)\r\n```xml\r\n<Button Content=\"{markup:If {Binding IsLoaded}, {StaticResource LoadedImage}, {StaticResource LoadingImage}}\" />\r\n```\r\n\r\nBut the implementation of `IfExtension` has a known issue: I chose to implement `IfExtension` with `MultiBinding`, in order to get the correct `DataContext` when the values of `IfExtension.True` and `IfExtension.False` are binding, but `MultiBinding.Converters` CANNOT accept values of `MultiBinding` type, so I cannot set a derived class of `MultiBinding` for `IfExtension.True` and `IfExtension.False` , or use `IfExtension` in a nested form.\r\n\r\nI don't quite understand how to create a custom markup extension that gets the correct `DataContext` when the markup needs to accept some `BindingBase` type values. I found that there are many methods to implement `Binding` or `MultiBinding` 's code is `internal` (e.g.: `CreateBindingExpression()`, see [here](https://referencesource.microsoft.com/#PresentationFramework/src/Framework/System/Windows/Data/MultiBinding.cs)), and I'm not sure if I need to use these internal functions perfectly to implement `IfExtension`.\r\n\r\nIn addition, I also want to know what other interesting custom markup extensions you often use, I hope you can share them here, thank you! :)","Url":"https://github.com/dotnet/wpf/issues/455","RelatedDescription":"Open issue \"Provide more built-in markup extensions\" (#455)"},{"Id":"423475428","IsPullRequest":true,"CreatedAt":"2019-03-20T22:12:49","Actor":"stevenbrix","Number":"453","RawContent":null,"Title":"fix publishing","State":"closed","Body":"Fixes #452 ","Url":"https://github.com/dotnet/wpf/pull/453","RelatedDescription":"Closed or merged PR \"fix publishing\" (#453)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-02T05:30:46.4637553Z","RunDurationInMilliseconds":607}