{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-02-12T17:36:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released stable packages for ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/12/announcing-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Two Lesser Known Tools for Local Azure Development","PublishedOn":"2018-02-09T00:01:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you’re developing applications that target Azure services (e.g. Web Apps, Functions, Storage), you’ll want to know about two powerful tools that come with Visual Studio 2017 and the Azure...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/08/two-lesser-known-tools-for-local-azure-development/","RawContent":null},{"Title":"File nesting in Solution Explorer","PublishedOn":"2018-02-08T06:09:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to share with you a new capability in Visual Studio that was a clear ask from you, the community. Visual Studio has been nesting related files in Solution Explorer for a long time now,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/file-nesting-in-solution-explorer/","RawContent":null},{"Title":"Diagnosing Errors on your Cloud Apps","PublishedOn":"2018-02-07T16:00:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most frustrating experiences is when you have your app working on your local machine, but when you publish it it’s inexplicably failing. Fortunately, Visual Studio provides handy features...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/diagnosing-errors-on-your-cloud-apps/","RawContent":null},{"Title":"A new experiment: Browser-based web apps with .NET and Blazor","PublishedOn":"2018-02-06T18:00:53+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today I’m excited to announce a new experimental project from the ASP.NET team called Blazor. Blazor is an experimental web UI framework based on C#, Razor, and HTML that runs in the browser via...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/06/blazor-experimental-project/","RawContent":null},{"Title":"Learn how to do Image Recognition with Cognitive Services and ASP.NET","PublishedOn":"2018-02-05T21:27:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With all the talk about artificial intelligence (AI) and machine learning (ML) doing crazy things, it’s easy to be left wondering, “what are practical ways I can use this today?&#8221; It turns out...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/05/learn-how-to-do-image-recognition-with-cognitive-services-and-asp-net/","RawContent":null},{"Title":"ASP.NET Core 2.1 roadmap","PublishedOn":"2018-02-02T18:00:52+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Five months ago, we shipped ASP.NET Core 2.0 as a foundational release for our high performance, cross-platform web framework for .NET and .NET Core. Since then we have been hard at work to deliver...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/","RawContent":null},{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7240987186","Type":"IssuesEvent","CreatedAt":"2018-02-13T22:56:42","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2863","RelatedDescription":"Closed issue \"Add HostString.Matches method for matching wildcard subdomains\" (#2863) at aspnet/Home","RelatedBody":"When working with multiple Hosts an exact match is easy enough, but wildcard matching is a bit more work. E.g. I want to match all subdomains of foo.com.\r\n\r\nSignature: bool Matches(string hostPattern); // Matches against the decoded instance\r\nSignature: static bool Matches(string hostHeader, string hostPattern); // Matches against the raw encoded version\r\nPort should be ignored, or we could make that a bool.\r\n\r\nStart with a HostString with value `foo.bar.com:80`.  Port is ignored. Wildcards are only permitted at the start, paired with a dot, e.g. `*.domain`, or as the whole value `*`.\r\n\r\nInput | Output\r\n------|---------\r\n`foo.bar.com` | true\r\n`*.bar.com` | true\r\n`.bar.com` | false\r\n`bar.com` | false\r\n`*.com` | true\r\n`com` | false\r\n`*` | true\r\n\r\nShould this special case IPv4 or IPv6 addreses? Probably not, they're uncommon in hosts.\r\n"},{"Id":"7239426434","Type":"IssuesEvent","CreatedAt":"2018-02-13T17:27:08","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2876","RelatedDescription":"Opened issue \"[JsonPatch]: PathHelpers.NormalizePath should allow spaces and \\\\ characters\" (#2876) at aspnet/Home","RelatedBody":"Consider\r\n```\r\npublic class Person\r\n{\r\n    [JsonProperty(\"Person Name\")]\r\n    public string Name { get; set; }\r\n}\r\n```\r\n\r\nA patch can be sucessfully applied to this property as \r\n```C#\r\nvar doc = new JsonPatchDocument\r\n{\r\n    Operations = \r\n    {\r\n        new Operation(\"add\", \"/Person Name\", null, \"New Name\"),\r\n    },\r\n};\r\n\r\ndoc.ApplyTo(person); // This works correctly.\r\ndoc.Add(\"Person Name\", \"New Name\") fails\r\n```\r\n\r\nSame deal with back slashes. The invalid char check in that method is kinda unncecessary."},{"Id":"7235640849","Type":"IssuesEvent","CreatedAt":"2018-02-13T01:50:47","Actor":"5Series","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2875","RelatedDescription":"Opened issue \"Implementing Individual user accounts in local database in asp.net core 2.0 web API\" (#2875) at aspnet/Home","RelatedBody":"Is there a way to create web api .net core 2.0 with individual user accounts stored in app database and can be extended to use google authentication.\r\n\r\ncurrently in the web api template does not have a option for that and also is it going to add in the future for the .net core 2.0 web api template? "},{"Id":"7235249880","Type":"IssuesEvent","CreatedAt":"2018-02-12T23:43:27","Actor":"shripathi-kamath","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2874","RelatedDescription":"Opened issue \"Error: Missing Method SetHeadersAndLog in FileResultExecutorBase\" (#2874) at aspnet/Home","RelatedBody":"I had software implemented for streaming files using the technique described here, and it worked fine with ASP.NET Core 1.0\r\n\r\nIt worked fine with ASP.NET Core 2.0 when first released.  I had to modify the SetHeadersAndLog method to include a null for the third argument that became necessary.\r\n\r\nUpgrading to VS2017 15.5.6  (SDK 2.1.4, Runtime 2.0.5) seems to have broken it.  The source still compiles but yields a runtime exception that indicates that the method is missing.\r\n\r\nI am attaching a VS project that I created from the standard template and used the .NET Standard option instead of .NET Core.\r\n\r\nAny pointers would be appreciated.  I verified that the binaries are what I expect them to be.\r\n\r\n[SetHeadersAndLog.zip](https://github.com/aspnet/Home/files/1718074/SetHeadersAndLog.zip)\r\n"},{"Id":"7234897726","Type":"IssuesEvent","CreatedAt":"2018-02-12T22:13:38","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2872","RelatedDescription":"Closed issue \"VS project system error on ASP.NET Core Web App creation\" (#2872) at aspnet/Home","RelatedBody":"D15.6\\27411.00\r\n\r\n**Steps:**\r\n1. File > New Project > C# > ASP.NET Core Web Application\r\n2. Select Web Application with default settings\r\n\r\n**Actual:**\r\n![image](https://user-images.githubusercontent.com/12900364/36116311-a3f2af76-0fea-11e8-83ec-5e85e3189a88.png)\r\nIt only appears to repro the first creation of a Web App.\r\n\r\n**Logs:**\r\n```\r\n=====================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'TypeScript'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'TypeScript'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:42 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )<---\r\n\r\n===================\r\n\r\n```\r\n"},{"Id":"7234704386","Type":"IssuesEvent","CreatedAt":"2018-02-12T21:32:29","Actor":"jdmallen","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2873","RelatedDescription":"Closed issue \"Model validation infinite loop, stack overflow\" (#2873) at aspnet/Home","RelatedBody":"[This bug has been mentioned before](https://github.com/aspnet/Home/issues/2024), but it was not addressed.\r\n\r\n#### Issue description\r\n\r\nIn a Web API ASP.NET Core project, upon POST, model binding starts to occur and the JsonConverters are hit, but during the binding a stack overflow exception occurs before it enters the controller action.\r\n\r\n#### Steps to reproduce the issue\r\n\r\n1. Create a ASP.NET Core Web API project targetting the `netcoreapp2.0` framework and referencing the [`System.DirectoryServices` NuGet package](https://www.nuget.org/packages/System.DirectoryServices/).\r\n\r\n2. Create a basic `User` model with a property of type [`System.Security.Principal.SecurityIdentifier`](https://www.nuget.org/packages/System.DirectoryServices/) (the official type for an Active Directory account SID). Nest that `User` model inside a `ComplexModel`. Example:\r\n\r\n```csharp\r\npublic class User\r\n{\t\r\n\t[JsonConverter(typeof(SecurityIdentifierJsonConverter))]\r\n\tpublic SecurityIdentifier ObjectSid { get; set; }\r\n}\r\n\r\npublic class ComplexModel\r\n{\t\r\n\tpublic User User { get; set; }\r\n}\r\n```\r\n\r\n3.  Create an `[HttpPost]` action with `[FromBody] ComplexModel model` as the parameter. Example:\r\n\r\n```csharp\r\n[HttpPost]\r\n[Authorize]\r\n[ValidateAntiForgeryToken]\r\n[Route(\"create\")]\r\npublic async Task<IActionResult> Create([FromBody] ComplexObject complexObject)\r\n{\r\n\treturn Ok();\r\n}\r\n```\r\n\r\n4. Load a JsonConverter to properly convert the `SecurityIdentifier` as it comes in. The one I used is below:\r\n```csharp\r\npublic class SecurityIdentifierJsonConverter : JsonConverter\r\n{\r\n\tpublic override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\r\n\t{\r\n\t\tvar sid = (SecurityIdentifier) value;\r\n\t\tserializer.Serialize(writer, sid != null ? sid.Value : value);\r\n\t}\r\n\t\r\n\tpublic override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\r\n\t{\r\n\t\tvar readerValue = reader.Value?.ToString();\r\n\t\tSecurityIdentifier sid = null;\r\n\t\tif (!string.IsNullOrWhiteSpace(readerValue))\r\n\t\t{\r\n\t\t\tsid = new SecurityIdentifier(readerValue);\r\n\t\t}\r\n\t\treturn sid ?? new JsonSerializer().Deserialize(reader, objectType);\r\n\t}\r\n\r\n\tpublic override bool CanConvert(Type objectType) => objectType == typeof(SecurityIdentifier);\r\n}\r\n```\r\n5. Attempt to POST.\r\n\r\n#### What's the expected result?\r\n\r\nThe model minds without issue and the controller action executes.\r\n\r\n#### What's the actual result?\r\n\r\n```csharp\r\nSystem.InsufficientExecutionStackException: Insufficient stack to continue executing the program safely. This can happen from having too many functions on the call stack or function on the stack using too much stack space.\r\n   at System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack()\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   ...\r\n```\r\n\r\nThe last 3 lines of the stacktrace repeat thousands of times.\r\n\r\n#### Additional details / screenshot\r\n\r\nChanging the SID property from type `System.Security.Principal.SecurityIdentifier` to `System.String` in the bound object stops the exception and essentially fixes the problem, but this is still a serious bug and happens when binding other objects as well (see #2024)."},{"Id":"7234660690","Type":"IssuesEvent","CreatedAt":"2018-02-12T21:23:08","Actor":"jdmallen","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2873","RelatedDescription":"Opened issue \"Model validation infinite loop, stack overflow\" (#2873) at aspnet/Home","RelatedBody":"[This bug has been mentioned before](https://github.com/aspnet/Home/issues/2024), but it was not addressed.\r\n\r\n#### Issue description\r\n\r\nIn a Web API ASP.NET Core project, upon POST, model binding starts to occur and the JsonConverters are hit, but during the binding a stack overflow exception occurs before it enters the controller action.\r\n\r\n#### Steps to reproduce the issue\r\n\r\n1. Create a ASP.NET Core Web API project targetting the `netcoreapp2.0` framework and referencing the [`System.DirectoryServices` NuGet package](https://www.nuget.org/packages/System.DirectoryServices/).\r\n\r\n2. Create a basic `User` model with a property of type [`System.Security.Principal.SecurityIdentifier`](https://www.nuget.org/packages/System.DirectoryServices/) (the official type for an Active Directory account SID). Nest that `User` model inside a `ComplexModel`.\r\n\r\n3.  Create an `[HttpPost]` action with `[FromBody] ComplexModel model` as the parameter. Example:\r\n\r\n```\r\n[HttpPost]\r\n[Authorize]\r\n[ValidateAntiForgeryToken]\r\n[Route(\"create\")]\r\npublic async Task<IActionResult> Create([FromBody] ComplexObject complexObject)\r\n{\r\n\treturn Ok();\r\n}\r\n```\r\n\r\n4. Load a JsonConverter to properly convert the `SecurityIdentifier` as it comes in. The one I used is below:\r\n```\r\npublic class SecurityIdentifierJsonConverter : JsonConverter\r\n{\r\n\tpublic override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\r\n\t{\r\n\t\tvar sid = (SecurityIdentifier) value;\r\n\t\tserializer.Serialize(writer, sid != null ? sid.Value : value);\r\n\t}\r\n\t\r\n\tpublic override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\r\n\t{\r\n\t\tvar readerValue = reader.Value?.ToString();\r\n\t\tSecurityIdentifier sid = null;\r\n\t\tif (!string.IsNullOrWhiteSpace(readerValue))\r\n\t\t{\r\n\t\t\tsid = new SecurityIdentifier(readerValue);\r\n\t\t}\r\n\t\treturn sid ?? new JsonSerializer().Deserialize(reader, objectType);\r\n\t}\r\n\r\n\tpublic override bool CanConvert(Type objectType) => objectType == typeof(SecurityIdentifier);\r\n}\r\n```\r\n5. Attempt to POST.\r\n\r\n#### What's the expected result?\r\n\r\nThe model minds without issue and the controller action executes.\r\n\r\n#### What's the actual result?\r\n\r\n```\r\nSystem.InsufficientExecutionStackException: Insufficient stack to continue executing the program safely. This can happen from having too many functions on the call stack or function on the stack using too much stack space.\r\n   at System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack()\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(ModelMetadata metadata, String key, Object model)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(IValidationStrategy strategy)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(IValidationStrategy defaultStrategy)\r\n   ...\r\n```\r\n\r\nThe last 3 lines of the stacktrace repeat thousands of times.\r\n\r\n#### Additional details / screenshot\r\n\r\nChanging the SID property from type `System.Security.Principal.SecurityIdentifier` to `System.String` in the bound object stops the exception and essentially fixes the problem, but this is still a serious bug and happens when binding other objects as well (see #2024)."},{"Id":"7234229487","Type":"IssuesEvent","CreatedAt":"2018-02-12T19:49:25","Actor":"vsccarl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2872","RelatedDescription":"Opened issue \"VS project system error on ASP.NET Core Web App creation\" (#2872) at aspnet/Home","RelatedBody":"D15.6\\27411.00\r\n\r\n**Steps:**\r\n1. File > New Project > C# > ASP.NET Core Web Application\r\n2. Select Web Application with default settings\r\n\r\n**Actual:**\r\n![image](https://user-images.githubusercontent.com/12900364/36116311-a3f2af76-0fea-11e8-83ec-5e85e3189a88.png)\r\n\r\n**Logs:**\r\n```\r\n=====================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:31 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'TypeScript'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'TypeScript'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<---\r\n\r\n===================\r\n2/12/2018 11:20:42 AM\r\nLimitedFunctionality\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )\r\n   --- End of inner exception stack trace ---\r\n---> (Inner Exception #0) System.InvalidOperationException: Internal error: Critical capabilities changes were detected without any change made to the project 'WebApplication1.csproj', and forces the project to be reloaded.  Potential capabilities involved: 'FallbackProjectConfigurationService'.\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.<RequestReloadForIncompatibleCapabilitiesAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectCapabilitiesRequirementsService.CapabilityScopeRequirementState.<>c__DisplayClass9_0.<<InitialProjectReload>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.VisualStudio.ProjectSystem.CommonProjectSystemTools.Rethrow(Exception ex)\r\n   at Microsoft.VisualStudio.ProjectSystem.ProjectErrorReporting.<>c__DisplayClass6_0.<SubmitErrorReport>b__0()\r\n   at Microsoft.VisualStudio.ProjectSystem.ExceptionFilter.<>c__DisplayClass2_0.<Guard>b__0()\r\n   at GuardMethodClass.GuardMethod(Func`1 , Func`2 , Func`2 )<---\r\n\r\n===================\r\n\r\n```\r\n"},{"Id":"7234045344","Type":"IssuesEvent","CreatedAt":"2018-02-12T19:10:52","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2308","RelatedDescription":"Closed issue \"Improvements to HTTPS\" (#2308) at aspnet/Home","RelatedBody":"## Introduction \r\n\r\n- HTTPS enforcement is becoming increasingly [strict](https://blog.chromium.org/2017/04/next-steps-toward-more-connection.html) on the web\r\n- GDPR requires use of HTTPS\r\n- Developing with HTTPS can help prevent related issues in production\r\n- Setting up HTTPS with Kestrel today requires substantial code and custom configuration\r\n\r\n### Scenarios\r\n* Kestrel with HTTPS during development\r\n* Kestrel with HTTPS as production edge server\r\n* IIS Express with HTTPS during development\r\n* IIS with HTTPS in production\r\n* IIS with HTTPS in development\r\n* Development with HTTPS inside of Docker\r\n* In production with HTTPS inside of Docker\r\n\r\n### Goals\r\n* Minimal/no configuration for development and production\r\n* Single point for configuring HTTPS related features\r\n* Redirect incomming HTTP requests to HTTPS\r\n* Configure [HTTP Strict Transport Security Protocol (HSTS)](https://tools.ietf.org/html/rfc6797)\r\n\r\n### Technical challenges\r\n* Port and certificate discovery. (development/production) (edge server / behind proxy).\r\n* Port and certificate configuration. (development/production) (edge server / behind proxy).\r\n* Certificate management (mostly development).\r\n* Certificate trust (different across platforms).\r\n\r\n## User experience\r\n\r\n### Kestrel with HTTPS during development\r\n* New project created from command-line or VS setup by default for HTTPS\r\n* Listens on both an HTTP and HTTPS address (as specified in `launchSettings.json`)\r\n* Uses ASP.NET Core HTTPS development certificate by default\r\n  - Certificate setup by .NET Core SDK first run experience or by VS when running the project\r\n  - Command-line tool for manually creating and trusting the ASP.NET Core HTTPS development certificate \r\n* Project setup to redirect to HTTPS (port specified using env var)\r\n* Setup with HSTS support (not used in Development environment)\r\n\r\n### Kestrel wtih HTTPS as a production edge server\r\n* Production environment specific config required to specify listening addresses and production HTTPS certificate\r\n  - Configure Kestrel endpoints and certificates using default config schema (setup by default web host builder, takes precedence over server URLs):\r\n    ```json\r\n    {\r\n      \"Kestrel\": {\r\n        \"Endpoints\": {\r\n          \"HTTP\": { \"Url\": \"http://*:6000\" },\r\n          \"HTTPS\": {\r\n            \"Url\": \"https://*:6443\",\r\n            \"Certificate\": {\r\n              \"Path\": \"testCert.pfx\",\r\n              \"Password\": \"testPassword\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    ```\r\n* Absent any configuration, by default Kestrel listens on http://localhost:5000 *and* https://localhost:5001 *if* the default HTTPS certificate is available (i.e. on a dev machine with the .NET Core SDK and the ASP.NET Core HTTPS development certificate installed)\r\n  - The default HTTPS certificate is used for any HTTPS addresses configured as server URLs\r\n  - TODO: Consider providing a way to change the default certificate\r\n* HTTPS redirect to first HTTPS server address (typically 443)\r\n* HSTS enabled in production\r\n\r\n### HTTPS redirection\r\n* New HTTPS redirection extension method (`app.UseHttpsRedirection()`) simplifies redirecting to HTTPS by simplifying the configuration of the HTTPS port\r\n  - Specify the port and redirect status code via options\r\n  - Specify the port via ASPNETCORE_HTTPS_PORT environment variable if not specified via options\r\n* By default redirects to HTTPS server address if the server is listening on only one (throw otherwise), otherwise port 443\r\n\r\n### Enabling HSTS\r\n* New HSTS middleware (`app.UseHsts()`)\r\n* Only active on HTTPS requests\r\n* HSTS options for max age, subdomains, and Chrome's [HSTS preload list](https://hstspreload.org/)\r\n* Typically used only in non-dev scenarios\r\n\r\n### Development from the command-line first run experience\r\n* Run \"dotnet new razor\" or \"dotnet new mvc\"\r\n* The .NET Core SDK installs the ASP.NET Core HTTPS development certificate as part of the first run experience\r\n  - Installation of the HTTPS development certificate can be disabled by setting the DOTNET_SKIP_HTTPS_DEVELOPMENT_CERTIFICATE environment variable to true\r\n* As part of the first run experience, a message is displayed with instructions for trusting the development certificate:\r\n\r\n  ```\r\n  Installed the ASP.NET Core HTTPS development certificate. To trust the ASP.NET Core HTTPS development certificate run \"dotnet dev-certs https --trust\"\r\n  ```\r\n\r\n* Run \"dotnet dev-certs https --trust\" to trust the ASP.NET Core HTTPS development certificate\r\n  - Windows: The certificate is added to the user's trusted root store. Windows displays a UI prompt to confirm the action.\r\n  - Mac: The certificate is added to the user's keychain.\r\n  - Linux: The tool displays an error message: \"The --trust option is not supported on this platform. For details on establishing certificate trust manually see https://go.microsoft.com/fwlink/?linkid=848054.\"\r\n* Run \"dotnet run\"\r\n\r\n### Project template updates\r\n* `launchSettings.json` is generated by default, including from the command-line:\r\n\r\n  ```json\r\n  {\r\n    \"iisSettings\": {\r\n      \"windowsAuthentication\": false,\r\n      \"anonymousAuthentication\": true,\r\n      \"iisExpress\": {\r\n        \"applicationUrl\": \"http://localhost:11199/\",\r\n        \"sslPort\": 44333\r\n      }\r\n    },\r\n    \"profiles\": {\r\n      \"IIS Express\": {\r\n        \"commandName\": \"IISExpress\",\r\n        \"launchBrowser\": true,\r\n        \"environmentVariables\": {\r\n          \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n        }\r\n      },\r\n      \"WebApplication38\": {\r\n        \"commandName\": \"Project\",\r\n        \"launchBrowser\": true,\r\n        \"environmentVariables\": {\r\n          \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        },\r\n        \"applicationUrl\": \"https://localhost:44333;http://localhost:11199\"\r\n      }\r\n    }\r\n  }\r\n  ```\r\n\r\n  - The applicationUrl and sslPort properties result in the ASPNETCORE_URLS and ASPNETCORE_HTTPS_PORT environment variables being set\r\n  - The HTTP and HTTPS ports for all launch profiles should match\r\n  - IIS Express HTTPS port must be in the range 44300-44399\r\n\r\n* `Startup.cs` updated to enable HSTS and HTTPS redirect:\r\n\r\n  ```csharp\r\n  public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n  {\r\n      if (env.IsDevelopment())\r\n      {\r\n          app.UseDeveloperExceptionPage();\r\n      }\r\n      else\r\n      {\r\n          app.UseExceptionHandler(\"/Home/Error\");\r\n          app.UseHsts();\r\n      }\r\n\r\n      app.UseHttpsRedirection();\r\n      app.UseStaticFiles();\r\n\r\n      app.UseMvc(routes =>\r\n      {\r\n          routes.MapRoute(\r\n              name: \"default\",\r\n              template: \"{controller=Home}/{action=Index}/{id?}\");\r\n      });\r\n  }\r\n  ```\r\n\r\n### Certificate missing error\r\n* If an HTTPS server URL is configured, but a certificate is not available an exception with the following error message is thrown:\r\n\r\n  ```\r\n  An HTTPS server URL is configured, but no HTTPS certificate is available. To install the ASP.NET Core HTTPS development certificate run \"dotnet dev-certs https\". For details on configuring HTTPS in production see https://go.microsoft.com/fwlink/?linkid=848054.\r\n  ```\r\n\r\n### IIS Express with HTTPS during development\r\n* No change to IIS Express HTTPS setup - same as exists today\r\n* Uses IIS Express Development Certificate\r\n* VS sets up env var to specify HTTPS port for HTTPS redirection middleware\r\n\r\n### IIS with HTTPS in production\r\n* No change to IIS HTTPS setup - same as exists today\r\n\r\n### Development with HTTPS in Docker\r\n- Docker tools export the ASP.NET Core HTTPS development certificate as a PFX file and mounts the path to the exported certificate\r\n- Docker tools stores the certificate password using the user secrets manager and mounts the path to the user secrets file\r\n- Project Docker Compose overrides file includes environment variables for configuring HTTPS using the exported certificate and for the specifying the HTTPS port. Also port mappings for both HTTP and HTTPS that match `launchSettings.json`.\r\n\r\n### In production with HTTPS in Docker\r\n- Production Docker compose file includes environment variables for configuring the production certificate and ports.\r\n\r\n### HTTPS in Docker details\r\n\r\n#### Runtime\r\n* ASP.NET Core on the docker container will be configured through the new Kestrel configuration system.\r\n* The configuration will be passed as environment variables on the docker-compose.override.yml files and as user secrets mapped from the hosting container.\r\n* We will use an HTTPS certificate that will be provided in a PFX file along with its password (via user secrets).\r\n\r\n#### Tooling\r\n* The docker tools will use the 'dev-certs' tool to generate/trust/export the certificate to use\r\nfor HTTPS into a well-known location and with a password of their choosing.\r\n* The docker tools will use the 'user-secrets' tool to place the password for the certificate in the user secrets\r\nfile for the project under the right key.\r\n* On first run, the docker tooling will perform the above actions to ensure that the certificate is provisioned/trusted/exported to\r\n  the right folder location and that the password used to export the certificate is on the user secrets for the application.\r\n\r\n#### Dockerfile changes\r\n* In addition to exposing port 80 we will also export port 443 for HTTPS connections.\r\n\r\n#### Docker compose changes\r\n* We will add environment variables to configure the endpoints kestrel will listen on and to indicated the path where the certificate will\r\n  be made available inside the container.\r\n* We will define the external ports where we want the container to be listening on and those will match the ones in launchSettings.json\r\n* We will map two paths from the host machine into the container.\r\n    * We will map the user secrets folder on the host machine to the user secrets folder on the container.\r\n    * We will map the folder where we've exported the HTTPS certificate into the folder where we expect the certificate to be found in the container.\r\n\r\n#### Sample docker-compose.overrride.yml\r\n```yml\r\nversion: '3.0'\r\n\r\nservices:\r\n  dockerhttps:\r\n    environment:\r\n      - ASPNETCORE_ENVIRONMENT=Development\r\n      # The name of the variable below does not reflect the actual name\r\n      - ASPNETCORE_URLS=https://*:443;http://*:80\r\n      - ASPNETCORE_HTTPS_PORT=44349\r\n    ports:\r\n      # Both of these ports have been taken from launchSettings.json in the application.\r\n      - \"51217:80\"\r\n      - \"44349:443\"\r\n    volumes:\r\n      - ${APPDATA}/Microsoft/UserSecrets/:/root/.microsoft/usersecrets\r\n      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https/\r\n    \r\nnetworks:\r\n  default:\r\n    external:\r\n      name: nat\r\n```\r\n\r\n[HTTPS project](https://github.com/orgs/aspnet/projects/11)"},{"Id":"7233855285","Type":"IssuesEvent","CreatedAt":"2018-02-12T18:30:51","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2870","RelatedDescription":"Closed issue \"is order of httpresponse matter?\" (#2870) at aspnet/Home","RelatedBody":"vs2017, asp.net core 2. I was scratching my head about why this doesn't work, turned out the order matters and status code should placed before the writeAsync.  is it correct? it shouldn't build the response before it write to it?\r\n\r\nthis works \r\n```C#\r\napp.UseExceptionHandler(builder =>\r\n{\r\n    builder.Run(async context =>\r\n    {\r\n        context.Response.StatusCode = 500;\r\n        await context.Response.WriteAsync(\"some error happend\");\r\n    });\r\n});\r\n```\r\n![image](https://user-images.githubusercontent.com/8991783/36104698-b31a3704-104d-11e8-8969-1f170024b45c.png)\r\n\r\nthis doesn't works \r\n\r\n```C#\r\napp.UseExceptionHandler(builder =>\r\n{\r\n    builder.Run(async context =>\r\n    {\r\n        await context.Response.WriteAsync(\"some error happend\");\r\n        context.Response.StatusCode = 500;\r\n    });\r\n});\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8991783/36104740-c6b8c514-104d-11e8-873c-a02292a3ba97.png)\r\n"},{"Id":"7232925754","Type":"IssuesEvent","CreatedAt":"2018-02-12T15:40:58","Actor":"mhamri","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2870","RelatedDescription":"Opened issue \"is order of httpresponse matter?\" (#2870) at aspnet/Home","RelatedBody":"vs2017, asp.net core 2. I was scratching my head about why this doesn't work, turned out the order matters and status code should placed before the writeAsync.  is it correct? it shouldn't build the response before it write to it?\r\n\r\nthis works \r\n```C#\r\napp.UseExceptionHandler(builder =>\r\n{\r\n    builder.Run(async context =>\r\n    {\r\n        context.Response.StatusCode = 500;\r\n        await context.Response.WriteAsync(\"some error happend\");\r\n    });\r\n});\r\n```\r\n![image](https://user-images.githubusercontent.com/8991783/36104698-b31a3704-104d-11e8-8969-1f170024b45c.png)\r\n\r\nthis doesn't works \r\n\r\n```C#\r\napp.UseExceptionHandler(builder =>\r\n{\r\n    builder.Run(async context =>\r\n    {\r\n        await context.Response.WriteAsync(\"some error happend\");\r\n        context.Response.StatusCode = 500;\r\n    });\r\n});\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8991783/36104740-c6b8c514-104d-11e8-873c-a02292a3ba97.png)\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7241349055","Type":"IssuesEvent","CreatedAt":"2018-02-14T00:43:37","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1441","RelatedDescription":"Closed issue \"Sockets work while in Debug mode, but not deployed to IIS, Azure or running Kestrel with local ip \" (#1441) at aspnet/SignalR","RelatedBody":"Hello, I've taken the socket sample as a POC. It works flawlessly every time when debugging. When I try to deploy to my local IIS server with a local ip instead of using localhost, I get a socket ID and a socket open message, but thats it. No other messages come through. The same behavior takes place when I run the Kestrel server.\r\n\r\nWhen I deploy to Azure, I don't even get a socket open message.\r\n\r\nAny ideas?\r\n\r\nThanks in advance for your help,\r\n\r\nMHoward"},{"Id":"7240989816","Type":"PullRequestEvent","CreatedAt":"2018-02-13T22:57:22","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1445","RelatedDescription":"Merged pull request \"Logging invocations with errors would throw inside logger\" (#1445) at aspnet/SignalR","RelatedBody":""},{"Id":"7240905504","Type":"PullRequestEvent","CreatedAt":"2018-02-13T22:36:59","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1413","RelatedDescription":"Merged pull request \"remove bundler/minifier from ChatSample\" (#1413) at aspnet/SignalR","RelatedBody":"It doesn't like multi-targeted projects and causes file locking issues on build, making it flaky.\r\n\r\nI also removed the `less` file since we don't really need to use it in a sample. Similarly, I removed reference to the `.min.css` file in the Layout page.\r\n\r\n**NOTE** The diff got a little borked. All I did was **delete** the old `site.css` (generated from the `less` file) and rename `site.less` to `site.css`, removing the leading `@import` statement. We had two copies of bootstrap because we were bringing it in via a `<link>` tag on the view **and** we were embedding it in our `css` file via the less `@import` command."},{"Id":"7240322957","Type":"PullRequestEvent","CreatedAt":"2018-02-13T20:31:54","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1425","RelatedDescription":"Closed pull request \"Exit receive loop faster when connection closed\" (#1425) at aspnet/SignalR","RelatedBody":"The issue is, under high load, the client would have a large queue of items in the Channel and it would take a long time to drain the items on close. There is no need to drain (that I know of), we can just exit and let GC clean it up"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7241630089","Type":"IssuesEvent","CreatedAt":"2018-02-14T02:20:28","Actor":"CoderJason123","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7368","RelatedDescription":"Opened issue \"app.UseExceptionHandler Mvc on a mac crashes dotnet\" (#7368) at aspnet/Mvc","RelatedBody":"Hello.  I have an mvc aspnet core 2.0 app and started testing exceptions.  I am throwing all sorts of exceptions to test, regular exception, unauthorized exception, and so on, and the global error handler does not work.\r\n\r\nDotnet crashes and the mvc app is no longer receiving requests.  I've placed\r\n           app.UseExceptionHandler() before app.UseMvc().  No difference.  The only thing I see different about my setup than other articles is that I am using a mac os High Sierra.  The stack trace from my exception that I generate is...\r\nUnhandled Exception: System.Exception: hey this is an exception\r\n   at yyyyyService.<CheckAccountId>d__12.MoveNext() in /Users/jason/Documents/Service.cs:line 75\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n\r\nI've fiddled with this for a few hours to no avail.  Yes, I have tried changing from dev to production but my code only invokes the production app.UseExceptionHandler() from the standard startup.cs class.\r\n\r\nAny thoughts on where i can go from here?\r\n"},{"Id":"7241608642","Type":"IssuesEvent","CreatedAt":"2018-02-14T02:12:38","Actor":"NickCraver","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7367","RelatedDescription":"Opened issue \"Proposal: Helper to make sorting link generation easier\" (#7367) at aspnet/Mvc","RelatedBody":"A common scenario I run into is needing to use the current query string (action parameters) and change 1 for the purposes of sorting or filtering (e.g. a search query against the current other filters). Let's take an example:\r\n```\r\n/path/page?minRuns=20&filter=someText&database=PRIZM&sort=RunsPerSecond&order=Asc\r\n```\r\nIn the view, I have a table with columns with headers that are sorting links.  Let's say I have 3 columns so the headers look like this:\r\n```html\r\n<th><a href=\"/path/page?minRuns=20&amp;filter=someText&amp;database=PRIZM&amp;sort=Runs\">Runs</a></th>\r\n<th><a href=\"/path/page?minRuns=20&amp;filter=someText&amp;database=PRIZM&amp;sort=Duration\">Duration</a></th>\r\n<!-- repeat 8 times... -->\r\n```\r\nCurrently, generating the query string of a thing that *differs by one* is something users have to do very manually, generally with a builder or making a collection to serialize per link in a helper. I think this could be made much cleaner as something the framework provides. You can *almost* do this today with [`asp-all-route-data` via tag helper](https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/built-in/anchor-tag-helper#asp-all-route-data), but it could be improved.\r\n\r\nHere's the most succinct way I can find to do this today (note this is just query params, but you get the idea):\r\n```html\r\n@{ var routeDict = Context.Request.Query.ToDictionary(q => q.Key, q => q.Value.ToString()); }\r\n<th><a asp-all-route-data=\"routeDict\" asp-route-sort=\"@Sorts.Runs\">Runs</a></th>\r\n<th><a asp-all-route-data=\"routeDict\" asp-route-sort=\"@Sorts.Duration\">Duration</a></th>\r\n```\r\n\r\n## Proposal\r\nWhat if the anchor tag helper allowed `asp-all-route-data` without a value? The default would be the current route data. Since this already works in combination with `asp-route-{key}=\"value\"`, the combination becomes simply:\r\n```html\r\n<th><a asp-all-route-data asp-route-sort=\"@Sorts.Runs\">Runs</a></th>\r\n<th><a asp-all-route-data asp-route-sort=\"@Sorts.Duration\">Duration</a></th>\r\n```\r\n\r\nPerhaps there's a simpler and/or different way to achieve this (e.g. a new attribute), I was just thinking minimal changes would save code and open up use cases here. Thoughts?\r\n\r\n/cc @DamianEdwards "},{"Id":"7240875378","Type":"IssuesEvent","CreatedAt":"2018-02-13T22:30:01","Actor":"VAchris","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7366","RelatedDescription":"Opened issue \"asp.net core 2, iis express and client certificates\" (#7366) at aspnet/Mvc","RelatedBody":"I'm developing w/VS2017 using asp.net core 2.0.1 with IIS express. My problem is I cannot get IIS express to negotiate for a SSL client certificate.\r\n\r\nI have tried editing the applicationhost.config located in the \\.vs\\config folder of the project by changing the `<access sslFlags=\"None\" />` to  `<access sslFlags=\"Ssl, SslNegotiateCert\" />`\r\n\r\nI have also tried requiring a certificate using `<access sslFlags=\"Ssl, SslNegotiateCert, SslRequireCert\" />` but this causes IIS express to crash and produce a HttpFailure*.html file which reports: `The page you are attempting to access requires your browser to have a Secure Sockets Layer (SSL) client certificate that the Web server recognizes.`\r\n\r\nMy Startup.cs contains `services.Configure<IISOptions>(options => {options.ForwardClientCertificate = true; });` and I have called `UseIISIntegration` in the BuildWebHost method.\r\n\r\nMy application works as expected when I deploy it on IIS and require SSL client certificates."},{"Id":"7240625785","Type":"IssuesEvent","CreatedAt":"2018-02-13T21:35:57","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7365","RelatedDescription":"Opened issue \"`[FromHeader]` controller and page model properties use root `ModelState` entry \" (#7365) at aspnet/Mvc","RelatedBody":"For example, with the following page model\r\n``` c#\r\npublic class IndexModel : PageModel\r\n{\r\n    [FromHeader]\r\n    public string Host { get; set; }\r\n}\r\n```\r\n`ModelState` will contain a **visible** root note with the value `localhost:44394` (or similar).\r\n\r\nThe workaround is to use `[FromHeader(Name = \"Host\")]` instead of `[FromHeader]` or to add `[BindProperty(Name = \"Host\", SupportsGet = true)]`. (`SupportsGet` setting is needed to maintain \"always bind\" semantics of the original attribute.)"},{"Id":"7240516218","Type":"IssuesEvent","CreatedAt":"2018-02-13T21:13:18","Actor":"vankampenp","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7364","RelatedDescription":"Opened issue \"Antiforgery Token could not be decrypted\" (#7364) at aspnet/Mvc","RelatedBody":"This seems related to this issue: https://github.com/aspnet/DataProtection/issues/233\r\n\r\nOn my production server, even under small load, I am getting decryption errors in the log:\r\nMicrosoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery: An exception was thrown while deserializing the token. The antiforgery token could not be decrypted.\r\n\r\nI am using Microsoft.AspNetCore.All 2.0.5\r\n\r\nWith the workaround described in the mentioned issue, the problem goes away\r\n"},{"Id":"7240347890","Type":"IssuesEvent","CreatedAt":"2018-02-13T20:37:20","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7008","RelatedDescription":"Closed issue \"asp-for now not working when casting in asp.net core 2\" (#7008) at aspnet/Mvc","RelatedBody":"The asp-for casting shown below used to work in core 1.0 and core 1.1 but now doesn't in core 2.0?\r\n`<input asp-for=\"@(Model as ServiceOperative).JobTitleClient\" class=\"form-control\" />`\r\nIt now gives the following error -\r\n**InvalidOperationException: Templates can be used only with field access, property access, single-dimension array index, or single-parameter custom indexer expressions.**\r\nThe following gets round the initial error, but then renders the name/id as somodel_JobTitleClient - which then will not bind to the object server-side\r\n`var somodel = (Model as ServiceOperative);`\r\n`<input asp-for=\"@somodel.JobTitleClient\" class=\"form-control\" />`\r\n\r\nI tried a bunch of alternatives to the above but had to revert to using @Html.EditorFor for now...   =painful rework   :(\r\n"},{"Id":"7240078127","Type":"IssuesEvent","CreatedAt":"2018-02-13T19:40:59","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7363","RelatedDescription":"Opened issue \"Create a new [Https] attribute that enforces HTTPS on a given endpoint\" (#7363) at aspnet/Mvc","RelatedBody":"This is useful for libraries that expose endpoints to enforce that HTTPS is used on the environments they are consumed. For example libraries with UI for authentication flows. The attribute (and associated filter) will send back a 400 on incoming HTTP calls and will possibly allow you to configure a callback to know that this is happening (for example to revoke/blacklist disclosed credentials)."},{"Id":"7239823646","Type":"IssuesEvent","CreatedAt":"2018-02-13T18:48:25","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7362","RelatedDescription":"Opened issue \"Page routing silently falls back to generic handler when named handler does not exist\" (#7362) at aspnet/Mvc","RelatedBody":"For example, if Index.cshtml contains\r\n``` html\r\n<form method=\"post\" asp-page-handler=\"Integral\">\r\n    <!-- ... -->\r\n    <input type=\"submit\" />\r\n</form>\r\n```\r\nand the corresponding page model contains only\r\n``` c#\r\npublic void OnGet(...)\r\n{\r\n    // ...\r\n}\r\n\r\npublic IActionResult OnPost(...)\r\n{\r\n    // ...\r\n}\r\n```\r\nthe `OnPost(...)` handler will execute. I expected a 404 in this scenario.\r\n\r\nThe behaviour is the same for `@page` and `@page \"{handler?}\"`.\r\n\r\nThe chosen handler method is logged. But, there's no mention of failing to find the `OnPostIntegral(...)` handler. Should at least warn for this case because it indicates a developer error."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7241061340","Type":"IssuesEvent","CreatedAt":"2018-02-13T23:15:28","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1625","RelatedDescription":"Opened issue \"New AddIdentity public surface area ideas\" (#1625) at aspnet/Identity","RelatedBody":"Based on discussions with @davidfowl \r\n\r\nConsider something like:\r\n\r\n```\r\n   services.AddIdentity<User, Role, DbContext>()\r\n```\r\n\r\nFor auth consider adding a new options class with 4 `IOptionsBuilder` properties that allow configuration of each cookie.\r\n\r\ncc @ajcvickers @blowdart "},{"Id":"7239516316","Type":"PullRequestEvent","CreatedAt":"2018-02-13T17:45:03","Actor":"ajcvickers","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1604","RelatedDescription":"Merged pull request \"Update README.md\" (#1604) at aspnet/Identity","RelatedBody":"Add link to Cassandra provider"},{"Id":"7239143037","Type":"IssuesEvent","CreatedAt":"2018-02-13T16:36:22","Actor":"PacmanLazy","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1624","RelatedDescription":"Opened issue \"Asp .Netcore 2.0 Auth Cookie doesn't expire in Chrome\" (#1624) at aspnet/Identity","RelatedBody":"I used that code below to manage cookies behaviour.\r\nBut if I don't use \"RememberMe\" cookie which expires on session end doesn't expire in Google.\r\nI can't find any solution.\r\nFor example, in django I could use request.session.set_expiry(expiration_time)\r\n`services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)\r\n            .AddCookie(options =>\r\n            {\r\n                // Cookie settings\r\n                options.Cookie.HttpOnly = true;\r\n                options.Cookie.SameSite = SameSiteMode.Strict;\r\n                options.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n                options.LoginPath = \"/Account/Login\";\r\n                options.LogoutPath = \"/Account/Logout\";\r\n                options.AccessDeniedPath = \"/Account/AccessDenied\";\r\n            });\r\n            \r\n            services.ConfigureApplicationCookie(options =>\r\n            {\r\n                // Cookie settings\r\n                options.Cookie.HttpOnly = true;\r\n                options.Cookie.SameSite = SameSiteMode.Strict;\r\n                options.SlidingExpiration = true;\r\n                options.Cookie.Expiration = TimeSpan.FromDays(150);\r\n                options.ExpireTimeSpan = TimeSpan.FromDays(150);\r\n            });`"},{"Id":"7235052886","Type":"PullRequestEvent","CreatedAt":"2018-02-12T22:49:42","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1623","RelatedDescription":"Closed pull request \"Release/2.0\" (#1623) at aspnet/Identity","RelatedBody":"This PR removes the unneeded dependency on TUser from the IPasswordValidator interface. "},{"Id":"7234970611","Type":"PullRequestEvent","CreatedAt":"2018-02-12T22:30:11","Actor":"oferns","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1623","RelatedDescription":"Opened pull request \"Release/2.0\" (#1623) at aspnet/Identity","RelatedBody":"This PR removes the unneeded dependency on TUser from the IPasswordValidator interface. This makes the component more resuable."},{"Id":"7228894791","Type":"IssuesEvent","CreatedAt":"2018-02-11T14:41:53","Actor":"Amethi","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1622","RelatedDescription":"Opened issue \"How to perform additional checks on cookie login?\" (#1622) at aspnet/Identity","RelatedBody":"Hello. I’ve got a UserStatus claim that says if the user is Activ/Suspended/Banned. I use this to check if a user can sign-in or not. This works fine for controller-based logins, i.e. external or username & password as I can add my custom check code there, but how can I add this check when a user is signing in using a cookie?"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7241962589","Type":"PullRequestEvent","CreatedAt":"2018-02-14T04:39:43","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2319","RelatedDescription":"Closed pull request \"Run inline when already on ThreadPool\" (#2319) at aspnet/KestrelHttpServer","RelatedBody":"> Unfortunately this posed a few issues such as deciding which scheduler to use for the request body reader so the PumpAsync loop keeps going even if the application does a synchronous read.\r\n\r\nMight not work due to this subtly? https://github.com/aspnet/KestrelHttpServer/pull/2318"},{"Id":"7241906649","Type":"PullRequestEvent","CreatedAt":"2018-02-14T04:15:23","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2319","RelatedDescription":"Opened pull request \"Run inline when already on ThreadPool\" (#2319) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7241808506","Type":"PullRequestEvent","CreatedAt":"2018-02-14T03:32:37","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2318","RelatedDescription":"Opened pull request \"[WIP] Allow transport to influence application scheduler selection\" (#2318) at aspnet/KestrelHttpServer","RelatedBody":"This  started as an effort to avoid extra threadpool dispatching in the socket transport's default configuration. You can already choose to disable threadpool dispatching via KestrelServerOptions, but this PR intended to provide a mechanism for the transport for the transport to disable threadpool dispatching iteself.\r\n\r\nThe idea was that the socket transport would default to running app code inline even if the app developer didn't opt in because it's safe and it's faster. Unfortunately this posed a few issues such as what scheduler to use for the request body reader so the PumpAsync loop keeps going even if the application does a synchronous read.\r\n\r\n@davidfowl and I discussed the possibility of using the inline scheduler for sockets only if the request has no body because that case wouldn't be susceptible to deadlocking due to a synchronous read, but that raised other issues.\r\n\r\nWe decided if we're going to selectively switch schedulers maybe we should always run the parser inline even for the libuv transport. But the logic for the libuv transport can't be exactly like the socket transport, because we don't want to run app code inline even if the request doesn't have a body in the case of the libuv transport.\r\n\r\nThen we started discussing how a transport could communicate these kind of subtle scheduling preferences in a way that doesn't make these scheduling preferences something that's specific to the HTTP protocol and not applicable to other connection middleware.\r\n\r\nAfter all this discussion I put this PR on the back burner since we don't have a great design that addresses all of the above concerns. Here's what I have so far. It doesn't do any inline \"scheduling\" by default yet due to the aforementioned issues. Thoughts?\r\n\r\n@benaadams"},{"Id":"7241199757","Type":"IssuesEvent","CreatedAt":"2018-02-13T23:55:22","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2103","RelatedDescription":"Closed issue \"Allow to replace the server cert at runtime\" (#2103) at aspnet/KestrelHttpServer","RelatedBody":"Right now, the SSL certificate that Kestrel will use is here:\r\n\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/dev/src/Kestrel.Https/Internal/HttpsConnectionAdapter.cs#L25-L26\r\n\r\nThere are certain scenarios that we want to support replacing the certificate while the server is still running. This can be done quite easily if we could set the `_serverCertificate` so all new connections will be able to use that.\r\n\r\nScenarios for that include using Let's Encrypt certificates and not having to restart every 3 months.\r\n\r\nWhile making it public is one option, I think it would be better to _not_ hold a reference to the `_serverCertificate` from the options but use the value in the options itself. That will mean that the caller could hold on to the options and change the certificate value used without messing with any internal state.\r\n\r\n"},{"Id":"7241181715","Type":"IssuesEvent","CreatedAt":"2018-02-13T23:49:54","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1927","RelatedDescription":"Closed issue \"Flaky test: ThrowsWhenBindingLocalhostToIPv6AddressInUse\" (#1927) at aspnet/KestrelHttpServer","RelatedBody":"Reproes on Ubuntu \r\n```\r\n  Failed   ThrowsWhenBindingLocalhostToIPv6AddressInUse\r\n  Error Message:\r\n   Assert.Equal() Failure\r\n                                   ↓ (pos 33)\r\n  Expected: ···d to address http://[::1]:50156: address already in use.\r\n  Actual:   ···d to address http://127.0.0.1:50156: address already in use.\r\n                                   ↑ (pos 33)\r\n  Stack Trace:\r\n  at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.ThrowsWhenBindingLocalhostToAddressInUse(AddressFamily addressFamily, IPAddress address) in /datadrive/teamcity/33bdfc1cae7b2a38/.r/KestrelHttpServer/test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 542\r\n```"},{"Id":"7241095698","Type":"PullRequestEvent","CreatedAt":"2018-02-13T23:24:55","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2298","RelatedDescription":"Closed pull request \"Clean up threadpool overrides\" (#2298) at aspnet/KestrelHttpServer","RelatedBody":"* Call through to common non-virtual method (rather than virtual method)\r\n* Use `QueueUserWorkItem(..., preferLocal: true)` when available https://github.com/dotnet/corefx/issues/12442\r\n* Be more explicit about closure capture"},{"Id":"7239695027","Type":"IssuesEvent","CreatedAt":"2018-02-13T18:21:55","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2128","RelatedDescription":"Closed issue \"Specified argument was out of the range of valid values. Parameter name: count\" (#2128) at aspnet/KestrelHttpServer","RelatedBody":"I write a site with asp.net core 2.0, sometimes following error raise(rarely).\r\n\r\n> An unhandled exception has occurred: Specified argument was out of the range of valid values. Parameter name: count\r\n\r\nStackTrace:\r\n\r\n> System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values. Parameter name: count at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed() at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ReadResult& result) at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult() at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult() at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.d__24.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame1.<ProcessRequestsAsync>d__2.MoveNext()\r\n>   --- End of stack trace from previous location where exception was thrown --- at\r\n>   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() at\r\n>   Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame1.d__2.MoveNext()\r\n\r\nI`m not sure, but this error probably after I migrate to asp.net core 2.0."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7241282709","Type":"PullRequestEvent","CreatedAt":"2018-02-14T00:21:19","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2066","RelatedDescription":"Merged pull request \"Get rid of RazorConfiguration.DesignTime\" (#2066) at aspnet/Razor","RelatedBody":"This change makes it so that we no longer create 'design time' engines.\r\nThe choice of design time or runtime is made when we initiate a code\r\ngeneration operation.\r\n\r\nOptions instances are now created as part of the CodeDocument\r\ninitialization. Our existing code can still be created using a\r\nRazorEngine so our passes that initialize the options still support the\r\nold code path."},{"Id":"7240910077","Type":"IssuesEvent","CreatedAt":"2018-02-13T22:38:07","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2067","RelatedDescription":"Opened issue \"Make `App.Views.dll` the default filename for MVC when used with Razor SDK\" (#2067) at aspnet/Razor","RelatedBody":"We've decided to change the assembly that's produced by Razor SDK when used with MVC to `App.Views.dll`"},{"Id":"7240671116","Type":"PullRequestEvent","CreatedAt":"2018-02-13T21:45:43","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2064","RelatedDescription":"Merged pull request \"Make imports work without warnings or errors when the Sdk is referenc…\" (#2064) at aspnet/Razor","RelatedBody":"…ed via MsBuild and package."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7187586381","Type":"IssuesEvent","CreatedAt":"2018-02-02T06:15:37","Actor":"simonpbond","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/292","RelatedDescription":"Closed issue \"Publish ASP.NET 5 Web Application to remote IIS \" (#292) at aspnet/Tooling","RelatedBody":"In Visual Studio 2015, I can successfully preview / publish to a remote IIS server with a 4.6 Web application. However, publishing fails when using an ASP.NET 5 template / web applications, it will not even provide a preview.\n\nIs it possible to publish an ASP.NET 5 web application at the current time using Visual Studio 2015 / Publish to a remote IIS server?\n\nIf so, is there any instructions on doing this? (not for local IIS).\n"},{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"},{"Id":"7107011065","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:28:07","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/522","RelatedDescription":"Closed issue \"Asp.Net project with Build platform x86 \" (#522) at aspnet/Tooling","RelatedBody":"Here are threads in CLI and MVC repo https://github.com/aspnet/Mvc/issues/4663 and  https://github.com/dotnet/cli/issues/3091 with no real answers. Thought it would be VS Tooling bug.\n\nI have a asp.net project that reference a native dll via Nuget package. This native DLL is only build for x86. I've changed my project.json to set buildOptions\n \"platform\": \"x86\"\n\nBut when I build this asp.net project via visual studio, it creates \"bin\\Debug\\net46\\win7-x64\" as oppose to \"win7-x86\". If I run the resulting \".exe\" file it would crash.\n\nI've tried to use \"dotnet build -r win7-x86\" and it would create the right folder \"bin\\Debug\\net46\\win7-x86\" and then I can run the \".exe\" file.\n\nStill cannot test the application in x86 mode.\n\nThen I've uninstalled Microsoft .NET Code 1.0.0 RC2 - SDK Preview 1 (x64) which was installed via \"VS 2015 Tooling Preview\" and installed the \"x86\" one, and everything seems to be working.\n\nI think it is not right. I should be have the option to install x64 and x86 and then via that buildOption I should be able to tell dotnet how to compile. Just like MSBuild and ASP.Net projects where I set the build options from Project Properties.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7215731126","Type":"IssuesEvent","CreatedAt":"2018-02-08T09:18:22","Actor":"SteveSandersonMS","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Opened issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289) at aspnet/Announcements","RelatedBody":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available."},{"Id":"7191689127","Type":"IssuesEvent","CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Opened issue \"ASP.NET Core 2.1 \" (#288) at aspnet/Announcements","RelatedBody":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/7193)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":2,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of t… https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":32,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlando… https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":16,"RawContent":null},{"Id":"961596291968102400","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/dvU3elJX8R","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"961390822993399809","CreatedAt":"2018-02-08T00:06:48+00:00","UserScreenname":"aspnet","Text":"Did you miss this week's #ASPNET Community Standup (with the latest news on Blazor, starring @danroth27 and… https://t.co/tfeqgnhClX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"961390078932148224","CreatedAt":"2018-02-08T00:03:51+00:00","UserScreenname":"aspnet","Text":"Sure, after you've left a PR on the #ASPNET docs...\n\nhttps://t.co/Dau0ZgAUbe\n\n;) https://t.co/s8UGKAhK0e","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"961382608818130944","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/7ecMOR53sw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":0,"RawContent":null},{"Id":"960929306548387840","CreatedAt":"2018-02-06T17:32:54+00:00","UserScreenname":"aspnet","Text":"This week's standup starts in 30 minutes. Join us! https://t.co/YnMMK0GKu4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":5,"RawContent":null},{"Id":"960654063133052928","CreatedAt":"2018-02-05T23:19:11+00:00","UserScreenname":"aspnet","Text":"Just blogged: Learn how to do Image Recognition with Cognitive Services and https://t.co/eFOzgs22K8 https://t.co/7PVAkBPFzq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":7,"RawContent":null},{"Id":"960617902268342272","CreatedAt":"2018-02-05T20:55:29+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup Feb 6 at 10 Pacific / 18 GMT with special guests @danroth27 and… https://t.co/6JlWLbKqut","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":13,"RawContent":null},{"Id":"958482115208781824","CreatedAt":"2018-01-30T23:28:38+00:00","UserScreenname":"aspnet","Text":"Starting soon: #ASPNET Community Standup at 3:45 PM Pacific / 23:45 GMT.\n\nToday's community links: https://t.co/Va4tu6Rv47","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2018-02-14T05:30:09.8349139Z","RunDurationInMilliseconds":8632}