{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7785888134","Type":"IssuesEvent","CreatedAt":"2018-06-06T17:11:07","Actor":"humbertoadan","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1783","RelatedDescription":"Opened issue \"Deployment Error - Android manifest attributes not declared\" (#1783) at xamarin/xamarin-android","RelatedBody":"When I try to deploy a Xamarin.Android project to an emulator it fails and it shows a deployment failed message. It shows on the error lists 2 warnings about attributes not declared in the AndroidManifest.xml. The 2 warnings are the following.\r\n\r\n![capture](https://user-images.githubusercontent.com/6433487/41053456-8d4f5320-6989-11e8-966c-830acf5c2391.JPG)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create a Xamarin.Android project on Visual Studio 2017 15.7.3\r\n2.  Add the attribute <uses-sdk> and specify a minSdkVersion and targetSdkVersion.\r\n3.  Run the Xamarin.Android project on an emulator.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Output\r\n\r\n2> Deployment failed\r\n2>Mono.AndroidTools.InstallFailedException: Failure [INSTALL_FAILED_NO_MATCHING_ABIS: Failed to extract native libraries, res=-113]\r\n2>   at Mono.AndroidTools.Internal.AdbOutputParsing.CheckInstallSuccess(String output, String packageName)\r\n2>   at Mono.AndroidTools.AndroidDevice.<>c__DisplayClass94_0.<InstallPackage>b__0(Task`1 t)\r\n2>   at System.Threading.Tasks.ContinuationTaskFromResultTask`1.InnerInvoke()\r\n2>   at System.Threading.Tasks.Task.Execute()\r\n2>Failure [INSTALL_FAILED_NO_MATCHING_ABIS: Failed to extract native libraries, res=-113]\r\n2>   at Mono.AndroidTools.Internal.AdbOutputParsing.CheckInstallSuccess(String output, String packageName)\r\n2>   at Mono.AndroidTools.AndroidDevice.<>c__DisplayClass94_0.<InstallPackage>b__0(Task`1 t)\r\n2>   at System.Threading.Tasks.ContinuationTaskFromResultTask`1.InnerInvoke()\r\n2>   at System.Threading.Tasks.Task.Execute()\r\n2>Touching \"obj\\Debug\\upload.flag\".\r\n2>Done building project \"ClaraShoppingList.Android.csproj\".\r\n2>Build succeeded.\r\n2>Failure [INSTALL_FAILED_NO_MATCHING_ABIS: Failed to extract native libraries, res=-113]\r\n2>   at Mono.AndroidTools.Internal.AdbOutputParsing.CheckInstallSuccess(String output, String packageName)\r\n2>   at Mono.AndroidTools.AndroidDevice.<>c__DisplayClass94_0.<InstallPackage>b__0(Task`1 t)\r\n2>   at System.Threading.Tasks.ContinuationTaskFromResultTask`1.InnerInvoke()\r\n2>   at System.Threading.Tasks.Task.Execute()\r\n2>\r\n2>Deploy failed on Nexus_5X_API_27_x86\r\n========== Build: 1 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========\r\n========== Deploy: 0 succeeded, 1 failed, 0 skipped ==========\r\n\r\n"},{"Id":"7785825380","Type":"IssuesEvent","CreatedAt":"2018-06-06T16:58:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1275","RelatedDescription":"Closed issue \"System.IO.FileNotFoundException when using Xamarin Forms\" (#1275) at xamarin/xamarin-android","RelatedBody":"_From @frogcrush on November 7, 2017 22:16_\n\nWhen trying to use with a Xamarin Forms application, I keep receiving the following error message:\r\n\r\n![image](https://user-images.githubusercontent.com/6116333/32520758-f28f6dde-c3c5-11e7-895e-a456ff7cdb2b.png)\r\n\r\nIt's happened over two computers (one with a fresh VS2017 install). \r\n\r\nMicrosoft.EntityFrameworkcore.Sqlite and Microsoft.EntityframeworkCore is referenced in both the .NET Core \"shared\" project and the .Android project.\r\n\r\n### Steps to reproduce\r\nAttempt to use Microsoft.EntityFrameworkCore.Sqlite with a Xamarin Forms project\r\n\r\n\r\n### Further technical details\r\nEF Core version: 2.0.0\r\nDatabase Provider: e.g. Microsoft.EntityFrameworkCore.Sqlite\r\nOperating system: Windows 10\r\nIDE: Visual Studio Community 2017\r\n\n\n_Copied from original issue: aspnet/EntityFrameworkCore#10234_"},{"Id":"7785771610","Type":"IssuesEvent","CreatedAt":"2018-06-06T16:48:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1256","RelatedDescription":"Closed issue \"Installing Google Play Services leads to dex files always being recompiled\" (#1256) at xamarin/xamarin-android","RelatedBody":"I have to admit I'm not certain where to report this issue, since it's Android related I figured I'd try here.\r\n\r\n### Steps to Reproduce\r\n\r\n1. In VS for Mac (haven't tried on Windows so far), create a new, blank Xamarin.Android app. \r\n2. Build the project. Build it again to note the build time when the project is already built.\r\n3. Install the `Xamarin.GooglePlayServices.Basement` NuGet package, or just any GooglePlayServices package that uses it.\r\n4. Rebuild the project. Build it again, once more noting the build time.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nIn both (2) and (4) the second builds should be pretty much instantaneous, since there are no changes and build tasks are all being skipped because of it.\r\n\r\n### Actual Behavior\r\nIndeed (2) has the expected behavior. In (4), however, any build executes the `CompileToDalvik` task, which takes several seconds on the empty app (and much longer on my real app). What's worse is that the dex files generated because of it cause a redeployment of the app every time it is run, significantly increasing deploy / run times. \r\n\r\nFrom the diagnostic build output:\r\n```\r\nTarget \"_CompileToDalvikWithDx\" in file \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets\":\r\n  Building target \"_CompileToDalvikWithDx\" completely.\r\n  Input file \"obj/Debug/XbdMerge/proguard/dc663e480.txt\" is newer than output file \"obj/Debug/_dex_stamp\".\r\n```\r\n\r\nThat file, in turn, appears to be generated by the `_XamarinAndroidBuildAarProguardConfigs` target. I haven't managed to figure out what's going on here exactly, but that file seems to disappear at the start of every build.\r\n\r\n### Version Information\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 7)\r\nInstallation UUID: ccf6f6c1-ad58-4aa7-849b-9a9ced210760\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.2/Sdks\r\nSDK Versions:\r\n\t2.0.2\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.4 (Visual Studio Community)\r\nHash: db807ec9\r\nBranch: xcode9.2\r\nBuild date: 2018-01-10 16:45:48-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.5.0 (Visual Studio Community)\r\nAndroid SDK: /Users/elte/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.216 (Visual Studio Community)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030007\r\nGit revision: 125911fb4accc4309b2cee5c81c970c7cff9b0e0\r\nBuild date: 2018-01-22 17:46:46-05\r\nXamarin addins: 463e21a6d9d4f6b57f923df376fff093a1dd9404\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n### Log File\r\nAndroid log not applicable, I'll paste the build log here if needed (it's really long with diagnostics)."},{"Id":"7785424663","Type":"IssuesEvent","CreatedAt":"2018-06-06T15:49:05","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1246","RelatedDescription":"Closed issue \"Fast deploy does not work after touching a .cs in a referenced library project in certain solutions\" (#1246) at xamarin/xamarin-android","RelatedBody":"Filing a copy of https://bugzilla.xamarin.com/show_bug.cgi?id=58864 in GH to close the old BZ issue:\r\n\r\nFastdev is not working for the project attached to the bugzilla issue above during a rebuild attempt which occurs after touching a .cs file in a referenced library project. This behavior does not appear to be a regression in recent releases.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Deploy an enormous solution to device.\r\n2. Touch a .cs file in a referenced library project.\r\n3. Redeploy.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nSubsequent redeployments of _every_ project type do not result in the .apk file being reinstalled after a minor change in a .cs file occurs, assuming that fast deploy is enabled.\r\n\r\n### Actual Behavior\r\nFast deploy does not work after touching a .cs in a referenced library project in certain solutions\r\n\r\n### Version Information\r\nd15-5\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n"},{"Id":"7781248755","Type":"IssuesEvent","CreatedAt":"2018-06-05T23:09:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1215","RelatedDescription":"Closed issue \"Xamarin.Android.Support.v4  version=\"25.4.0.2\" targetFramework=\"monoandroid71\" \" (#1215) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add nuget\r\n```\r\n  <package id=\"Xamarin.Android.Support.Animated.Vector.Drawable\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Annotations\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Compat\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Core.UI\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Core.Utils\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Design\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Fragment\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Media.Compat\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Transition\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.v4\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.v7.AppCompat\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.v7.RecyclerView\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n  <package id=\"Xamarin.Android.Support.Vector.Drawable\" version=\"25.4.0.2\" targetFramework=\"monoandroid71\" />\r\n```\r\n2.  mainactivity :AppCompatActivity\r\nAndroid.Support.V7.App.AppCompatDelegate.CompatVectorFromResourcesEnabled = true;\r\n3. \r\n```\r\n[mono] \r\n[mono] Unhandled Exception:\r\n[mono] Android.Content.Res.Resources+NotFoundException: File res/drawable/abc_vector_test.xml from drawable resource ID #0x7f020052 ---> Org.XmlPull.V1.XmlPullParserException: Binary XML file line #15: invalid drawable tag vector\r\n[mono]    --- End of inner exception stack trace ---\r\n[mono]   --- End of managed Android.Content.Res.Resources+NotFoundException stack trace ---\r\n[mono] android.content.res.Resources$NotFoundException: File res/drawable/abc_vector_test.xml from drawable resource ID #0x7f020052\r\n[mono] \tat android.content.res.Resources.loadDrawable(Resources.java:2096)\r\n[mono] \tat android.content.res.Resources.getDrawable(Resources.java:700)\r\n[mono] \tat android.support.v7.widget.VectorEnabledTintResources.superGetDrawable(VectorEnabledTintResources.java:74)\r\n[mono] \tat android.support.v7.widget.AppCompatDrawableManager.onDrawableLoadedFromResources(AppCompatDrawableManager.java:437)\r\n[mono] \tat android.support.v7.widget.VectorEnabledTintResources.getDrawable(VectorEnabledTintResources.java:67)\r\n[mono] \tat android.support.v4.content.ContextCompat.getDrawable(ContextCompat.java:374)\r\n[mono] \tat android.support.v7.widget.AppCompatDrawableManager.getDrawable(AppCompatDrawableManager.java:202)\r\n[mono] \tat android.support.v7.widget.AppCompatDrawableManager.getDrawable(AppCompatDrawableManager.java:190)\r\n[mono] \tat android.support.v7.widget.AppCompatDrawableManager.checkVectorDrawableSetup(AppCompatDrawableManager.java:711)\r\n[mono] \tat android.support.v7.widget.AppCompatDrawableManager.getDrawable(AppCompatDrawableManager.java:195)\r\n[mono] \tat android.support.v7.widget.TintTypedArray.getDrawableIfKnown(TintTypedArray.java:81)\r\n[mono] \tat android.support.v7.app.AppCompatDelegateImplBase.<init>(AppCompatDelegateImplBase.java:131)\r\n[mono] \tat android.support.v7.app.AppCompatDelegateImplV9.<init>(AppCompatDelegateImplV9.java:155)\r\n[mono] \tat android.support.v7.app.AppCompatDelegateImplV11.<init>(AppCompatDelegateImplV11.java:31)\r\n[mono] \tat android.support.v7.app.AppCompatDelegateImplV14.<init>(AppCompatDelegateImplV14.java:55)\r\n[mono] \tat android.support.v7.app.AppCompatDelegate.create(AppCompatDelegate.java:205)\r\n[mono] \tat android.support.v7.app.AppCompatDelegate.create(AppCompatDelegate.java:185)\r\n[mono] \tat android.support.v7.app.AppCompatActivity.getDelegate(AppCompatActivity.java:519)\r\n[mono] \tat android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java:71)\r\n[mono] \tat md5d4650294d969630d3e35ba1924da8f51.LogoActivity.n_onCreate(Native Method)\r\n[mono] \tat md5d4650294d969630d3e35ba1924da8f51.LogoActivity.onCreate(LogoActivity.java:40)\r\n[mono] \tat android.app.Activity.performCreate(Activity.java:5231)\r\n[mono] \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)\r\n[mono] \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2148)\r\n[mono] \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2233)\r\n[mono] \tat android.app.ActivityThread.access$800(ActivityThread.java:135)\r\n[mono] \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)\r\n[mono] \tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n[mono] \tat android.os.Looper.loop(Looper.java:136)\r\n[mono] \tat android.app.ActivityThread.main(ActivityThread.java:5001)\r\n[mono] \tat java.lang.reflect.Method.invokeNative(Native Method)\r\n[mono] \tat java.lang.reflect.Method.invoke(Method.java:515)\r\n[mono] \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\r\n[mono] \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\r\n[mono] \tat dalvik.system.NativeStart.main(Native Method)\r\n[mono] Caused by: org.xmlpull.v1.XmlPullParserException: Binary XML file line #15: invalid drawable tag vector\r\n[mono] \tat android.graphics.drawable.Drawable.createFromXmlInner(Drawable.java:933)\r\n[mono] \tat android.graphics.drawable.Drawable.createFromXml(Drawable.java:877)\r\n[mono] \tat android.content.res.Resources.loadDrawable(Resources.java:2092)\r\n[mono] \t... 34 more\r\n[mono] \r\n[mono-rt] [ERROR] FATAL UNHANDLED EXCEPTION: Android.Content.Res.Resources+NotFoundException: File res/drawable/abc_vector_test.xml from drawable resource ID #0x7f020052 ---> Org.XmlPull.V1.XmlPullParserException: Binary XML file line #15: invalid drawable tag vector\r\n[mono-rt]    --- End of inner exception stack trace ---\r\n[mono-rt]   --- End of managed Android.Content.Res.Resources+NotFoundException stack trace ---\r\n[mono-rt] android.content.res.Resources$NotFoundException: File res/drawable/abc_vector_test.xml from drawable resource ID #0x7f020052\r\n[mono-rt] \tat android.content.res.Resources.loadDrawable(Resources.java:2096)\r\n[mono-rt] \tat android.content.res.Resources.getDrawable(Resources.java:700)\r\n[mono-rt] \tat android.support.v7.widget.VectorEnabledTintResources.superGetDrawable(VectorEnabledTintResources.java:74)\r\n[mono-rt] \tat android.support.v7.widget.AppCompatDrawableManager.onDrawableLoadedFromResources(AppCompatDrawableManager.java:437)\r\n[mono-rt] \tat android.support.v7.widget.VectorEnabledTintResources.getDrawable(VectorEnabledTintResources.java:67)\r\n[mono-rt] \tat android.support.v4.content.ContextCompat.getDrawable(ContextCompat.java:374)\r\n[mono-rt] \tat android.support.v7.widget.AppCompatDrawableManager.getDrawable(AppCompatDrawableManager.java:202)\r\n[mono-rt] \tat android.support.v7.widget.AppCompatDrawableManager.getDrawable(AppCompatDrawableManager.java:190)\r\n[mono-rt] \tat android.support.v7.widget.AppCompatDrawableManager.checkVectorDrawableSetup(AppCompatDrawableManager.java:711)\r\n[mono-rt] \tat android.support.v7.widget.AppCompatDrawableManager.getDrawable(AppCompatDrawableManager.java:195)\r\n[mono-rt] \tat android.support.v7.widget.TintTypedArray.getDrawableIfKnown(TintTypedArray.java:81)\r\n[mono-rt] \tat android.support.v7.app.AppCompatDelegateImplBase.<init>(AppCompatDelegateImplBase.java:131)\r\n[mono-rt] \tat android.support.v7.app.AppCompatDelegateImplV9.<init>(AppCompatDelegateImplV9.java:155)\r\n[mono-rt] \tat android.support.v7.app.AppCompatDelegateImplV11.<init>(AppCompatDelegateImplV11.java:31)\r\n[mono-rt] \tat android.support.v7.app.AppCompatDelegateImplV14.<init>(AppCompatDelegateImplV14.java:55)\r\n[mono-rt] \tat android.support.v7.app.AppCompatDelegate.create(AppCompatDelegate.java:205)\r\n[mono-rt] \tat android.support.v7.app.AppCompatDelegate.create(AppCompatDelegate.java:185)\r\n[mono-rt] \tat android.support.v7.app.AppCompatActivity.getDelegate(AppCompatActivity.java:519)\r\n[mono-rt] \tat android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java:71)\r\n[mono-rt] \tat md5d4650294d969630d3e35ba1924da8f51.LogoActivity.n_onCreate(Native Method)\r\n[mono-rt] \tat md5d4650294d969630d3e35ba1924da8f51.LogoActivity.onCreate(LogoActivity.java:40)\r\n[mono-rt] \tat android.app.Activity.performCreate(Activity.java:5231)\r\n[mono-rt] \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)\r\n[mono-rt] \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2148)\r\n[mono-rt] \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2233)\r\n[mono-rt] \tat android.app.ActivityThread.access$800(ActivityThread.java:135)\r\n[mono-rt] \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)\r\n[mono-rt] \tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n[mono-rt] \tat android.os.Looper.loop(Looper.java:136)\r\n[mono-rt] \tat android.app.ActivityThread.main(ActivityThread.java:5001)\r\n[mono-rt] \tat java.lang.reflect.Method.invokeNative(Native Method)\r\n[mono-rt] \tat java.lang.reflect.Method.invoke(Method.java:515)\r\n[mono-rt] \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\r\n[mono-rt] \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\r\n[mono-rt] \tat dalvik.system.NativeStart.main(Native Method)\r\n[mono-rt] Caused by: org.xmlpull.v1.XmlPullParserException: Binary XML file line #15: invalid drawable tag vector\r\n[mono-rt] \tat android.graphics.drawable.Drawable.createFromXmlInner(Drawable.java:933)\r\n[mono-rt] \tat android.graphics.drawable.Drawable.createFromXml(Drawable.java:877)\r\n[mono-rt] \tat android.content.res.Resources.loadDrawable(Resources.java:2092)\r\n[mono-rt] \t... 34 more\r\n```\r\n\r\nSDK:\r\nMono \r\n5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\nXamarin.Android\r\n8.0.2.1 (Visual Studio Enterprise)\r\n\r\n[OP edited for clarity (quoting)]"},{"Id":"7781230465","Type":"IssuesEvent","CreatedAt":"2018-06-05T23:03:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1213","RelatedDescription":"Closed issue \"Allow/use JAVA_HOME\" (#1213) at xamarin/xamarin-android","RelatedBody":"The default xamarin-android build uses whatever `java` is in `$PATH`, that the manner to override this choice is ill-defined. Additionally, the default xamarin-android build artifacts (`xabuild`) will likewise use whatever `java` is in `$PATH`.\r\n\r\nUnfortunately, [on macOS it is rather \"weird\" to control the the default JDK which is used when more than one is installed](https://stackoverflow.com/a/44169445), making the \"use whatever `java` is in `$PATH`\" behavior sub-optimal.\r\n\r\nThere is already a way to specify the JDK to use for app builds: `$HOME/.config/xbuild/monodroid-config.xml` contains a `/monodroid/java-sdk/@path` attribute which is the path to the JDK to use.\r\n\r\nHowever, *defaults matter*, and the default is `$PATH`.\r\n\r\nWe should do something smarter here, so that when we encounter a machine with both JDK 1.8 and JDK 9 installed, we prefer JDK 8."},{"Id":"7780845228","Type":"IssuesEvent","CreatedAt":"2018-06-05T21:24:13","Actor":"rmarinho","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1782","RelatedDescription":"Closed issue \"Erro\tXLS0503\tNão é possível adicionar um valor de tipo 'Grid' a uma coleção ou a um dicionário de tipo 'IList'\" (#1782) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Depois de atualizar o pacote do Nuget Xamarin.Forms para a versão 3.0.0.530893 no Visual Studio 2017 v. 15.7.3 \r\n2. No editor de XMAL apresenta o erro Erro\tXLS0503\tNão é possível adicionar um valor de tipo 'Grid' a uma coleção ou a um dicionário de tipo 'IList'\r\n3. Quando compila o erro é ignorado.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n![image](https://user-images.githubusercontent.com/18421177/40997585-9acee410-68db-11e8-9ad0-e4650a594675.png)\r\n\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n<StackLayout>\r\n                <Grid BackgroundColor=\"#03A9F4\">\r\n                    <Grid.ColumnDefinitions>\r\n                        <ColumnDefinition Width=\"10\"/>\r\n                        <ColumnDefinition Width=\"*\"/>\r\n                        <ColumnDefinition Width=\"10\"/>\r\n                    </Grid.ColumnDefinitions>\r\n                    <Grid.RowDefinitions>\r\n                        <RowDefinition Height=\"30\"/>\r\n                        <RowDefinition Height=\"80\"/>\r\n                        <RowDefinition Height=\"Auto\"/>\r\n                        <RowDefinition Height=\"10\"/>\r\n                    </Grid.RowDefinitions>\r\n                    <Label\r\n                  Grid.Column=\"1\"\r\n                  Grid.Row=\"2\"\r\n                  Text=\"GTT Light\"\r\n                  Style=\"{DynamicResource SubtitleStyle}\"/>\r\n                </Grid>\r\n\r\n                <Button Text=\"Pagina 1\" Clicked=\"MudarPagina1\"></Button>\r\n                <Button Text=\"Pagina 2\" Clicked=\"MudarPagina2\"></Button>\r\n                <Button Text=\"Pagina 3\" Clicked=\"MudarPagina3\"></Button>                \r\n            </StackLayout>\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7788334569","Type":"PullRequestEvent","CreatedAt":"2018-06-07T03:58:10","Actor":"rookiejava","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2967","RelatedDescription":"Opened pull request \"[Tizen] Ensures various button styles work well on watch\" (#2967) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR  make certain that various button styles work well on watch devices. It also includes fixes about determining the button size correctly if button has icon. \r\n\r\nIn order to change button theme style, user can just use something like -\r\n ```cs\r\nbutton.On<Tizen>().SetStyle(ButtonStyle.Circle);\r\n```\r\n\r\n<img src =\"https://user-images.githubusercontent.com/1029134/41077534-242d3f64-6a52-11e8-9f00-2b40cdfb2242.gif\" width=300>\r\n\r\n### Bugs Fixed ###\r\n\r\nThe size of the button is determined correctly across target idioms. \r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n\r\nXamarin.Forms.PlatformConfiguration.TizenSpecific\r\n - string ButtonStyle.Text; \r\n - string ButtonStyle.SelectMode; \r\n\r\n### Behavioral Changes ###\r\n\r\nNone. \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7788288638","Type":"PullRequestEvent","CreatedAt":"2018-06-07T03:40:05","Actor":"knocte","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2966","RelatedDescription":"Opened pull request \"README.md: update to mention gtk\" (#2966) at xamarin/Xamarin.Forms","RelatedBody":"Since Xamarin.Forms 3.x, gtk backend is available.\r\n"},{"Id":"7787756615","Type":"IssuesEvent","CreatedAt":"2018-06-07T00:14:41","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1543","RelatedDescription":"Closed issue \"[iOS] Specified Cast Exception on TableView Scrolling\" (#1543) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nInvalidCastException is getting thrown when I create a TableView with various height cells that creates enough content to be scrolled. \r\n\r\n### Steps to Reproduce\r\n\r\nI've attached a repro project.\r\n\r\n1.  Just run the project on an iOS simulator/device\r\n2.  Scroll down to the bottom of the content quickly. Then quickly scroll back up to the top of the page.  \r\n3.  Repeat a few times until the top cell is dequeued.  It should throw the exception documented below.\r\n\r\n### Expected Behavior\r\n\r\nNo exception\r\n\r\n### Actual Behavior\r\n\r\nSystem.InvalidCastException: Specified cast is not valid.\r\n  at at (wrapper castclass) System.Object:__castclass_with_cache (object,intptr,intptr)\r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.RendererPool.UpdateRenderers (Xamarin.Forms.Element newElement) [0x0008c] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.RendererPool.UpdateNewElement (Xamarin.Forms.VisualElement newElement) [0x00080] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.SetElement (Xamarin.Forms.VisualElement oldElement, Xamarin.Forms.VisualElement newElement) [0x00050] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnRendererElementChanged (System.Object sender, Xamarin.Forms.Platform.iOS.VisualElementChangedEventArgs args) [0x0001c] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].OnElementChanged (Xamarin.Forms.Platform.iOS.ElementChangedEventArgs`1[TElement] e) [0x0002c] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x00118] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.ViewCellRenderer+ViewTableCell.UpdateCell (Xamarin.Forms.ViewCell cell) [0x000e5] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.ViewCellRenderer+ViewTableCell.set_ViewCell (Xamarin.Forms.ViewCell value) [0x0000a] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.ViewCellRenderer.GetCell (Xamarin.Forms.Cell item, UIKit.UITableViewCell reusableCell, UIKit.UITableView tv) [0x0004d] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.CellTableViewCell.GetNativeCell (UIKit.UITableView tableView, Xamarin.Forms.Cell cell, System.Boolean recycleCells, System.String templateId) [0x00080] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.TableViewModelRenderer.GetCell (UIKit.UITableView tableView, Foundation.NSIndexPath indexPath) [0x0001d] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at at (wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:79\r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:63\r\n  at TestTableViewScroll.iOS.Application.Main (System.String[] args) [0x00001] in /Users/Clay/Media/work/centroid/scm/svn/vectortrax-mobile/trunk/mobile-app/xamarin_bugs/TestTableViewScroll/iOS/Main.cs:14\r\n\r\n\r\n### Basic Information\r\n\r\n- Forms 2.5.0.122203\r\n- Last known good version:  Forms 2.3 (I think) \r\n- IDE:  Visual Studio Mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n\r\n### Screenshots\r\n\r\nNone\r\n\r\n### Reproduction Link\r\n\r\n[Repo.zip](https://github.com/xamarin/Xamarin.Forms/files/1616615/Repo.zip)\r\n"},{"Id":"7787602814","Type":"PullRequestEvent","CreatedAt":"2018-06-06T23:20:51","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2965","RelatedDescription":"Opened pull request \"[Android] Add IsSmoothScrollEnabled platform specific to control tab change animation\" (#2965) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis adds `IsSmoothScrollEnabled` platform specific to Android's `TabbedPage` to enable/disable scroll animation as the user navigates from one tab to another manually or programmatically. Previously, a user sitting on the last tab and tapping the first one would see a flipbook-like animation which may not be ideal for some use cases. This platform-specific controls this behavior.\r\n\r\nPlease let me know how to update docs.\r\n\r\n### Bugs Fixed ###\r\n\r\n- #2948 \r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `IsSmoothScrollEnabled`  boolean and its platform specific methods\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7786877513","Type":"PullRequestEvent","CreatedAt":"2018-06-06T20:26:18","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2964","RelatedDescription":"Opened pull request \"Use UpdateOnTap setting for Slider to fix broken gesture bubbling test\" (#2964) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSets UpdateOnTap to true for the Slider in the gesture bubbling tests (on iOS).\r\n\r\nAlso fixes a bug where the initial setting for UpdateOnTap is ignored by the SliderRenderer.\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7787326047","Type":"PullRequestEvent","CreatedAt":"2018-06-06T22:00:33","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4194","RelatedDescription":"Opened pull request \"[tests] Add introspection tests to ensure there are native linking instructions for all frameworks. Fixes #3976\" (#4194) at xamarin/xamarin-macios","RelatedBody":"or a good, documented (in test code) reason for not needing it.\n\nhttps://github.com/xamarin/xamarin-macios/issues/3976"},{"Id":"7783970270","Type":"IssuesEvent","CreatedAt":"2018-06-06T11:48:45","Actor":"skir","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4192","RelatedDescription":"Opened issue \"iOS app crash on SGen when builded with LLVM enabled\" (#4192) at xamarin/xamarin-macios","RelatedBody":"Hello, my Xamarin.iOS application crashes after a set of Http requests when it is builded with LLVM compiler enabled. It looks like SGen issue, but I have SGen disabled in project build options.\r\nHere is [crash log](https://gist.github.com/skir/38ae96ab8f6edc7376fb1affb8a1c314)\r\n\r\n### Environment\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\n\r\nVersion 7.5.2 (build 40)\r\nInstallation UUID: 63db3e6c-8307-4b71-b39f-dda5bd648929\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\nNuGet\r\n\r\nVersion: 4.3.1.4445\r\n\r\nXamarin.Profiler\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\nXamarin.Mac\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\nXamarin.iOS\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\nXamarin Inspector\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\n\r\nRelease ID: 705020040\r\nGit revision: cfe2fc0566bc4db990242959de40505a13f58352\r\nBuild date: 2018-05-30 11:24:18-04\r\nXamarin addins: 3ac7413ef51a88e06367313c27aec8f7292752a6\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\nOperating System\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":23,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":19,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":15,"RawContent":null},{"Id":"1003716129758629888","CreatedAt":"2018-06-04T19:12:28+00:00","UserScreenname":"xamarinhq","Text":"Introducing the https://t.co/3QxhuBuvHc Firebase Job Dispatcher—background scheduling for all Android devices: https://t.co/vZlLAkI925","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":15,"RawContent":null},{"Id":"1003656628120498176","CreatedAt":"2018-06-04T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/emYMS1KIra","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":24,"RawContent":null},{"Id":"1003397917103845376","CreatedAt":"2018-06-03T22:08:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":21,"RawContent":null},{"Id":"1003046627240751104","CreatedAt":"2018-06-02T22:52:06+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/XoB2rKP2XT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":40,"RawContent":null},{"Id":"1002614995031592963","CreatedAt":"2018-06-01T18:16:57+00:00","UserScreenname":"xamarinhq","Text":"Find #Xamarin and/or #dotNET events near you this June: https://t.co/sJpR7Xk130 https://t.co/PT5WAD4JIx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":11,"RawContent":null},{"Id":"1002572478076645378","CreatedAt":"2018-06-01T15:28:00+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/xM3dAE2jRZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":12,"RawContent":null},{"Id":"1002218901680377858","CreatedAt":"2018-05-31T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/I2dYlz1Tfo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":28,"RawContent":null},{"Id":"1001900437233119234","CreatedAt":"2018-05-30T18:57:33+00:00","UserScreenname":"xamarinhq","Text":"We've got some great @XamarinU Guest Lectures coming up that you won't want to miss! Check them out, and make sure… https://t.co/REGhq5ZF12","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":17,"RawContent":null},{"Id":"1001568114855890945","CreatedAt":"2018-05-29T20:57:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/UH3gpAFFHj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":41,"RawContent":null},{"Id":"1000859470057132032","CreatedAt":"2018-05-27T22:01:07+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/iNmDBtF3zX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":18,"RawContent":null},{"Id":"1000408472083673089","CreatedAt":"2018-05-26T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/t7b1GH4pMp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":10,"RawContent":null},{"Id":"1000081068660330497","CreatedAt":"2018-05-25T18:28:02+00:00","UserScreenname":"xamarinhq","Text":"Join our open source family and help make https://t.co/3QxhuBuvHc even better: https://t.co/6h1HH1dTAM https://t.co/5go35jCm9N","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":34,"RawContent":null},{"Id":"999682195089436672","CreatedAt":"2018-05-24T16:03:03+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/81dQ3CWoSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-06-07T05:30:57.8940214Z","RunDurationInMilliseconds":4117}