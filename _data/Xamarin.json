{"Data":{"Blog":{"FeedItems":[{"Title":"iOS 13 Preview Release Now Available","PublishedOn":"2019-07-03T17:48:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are excited to share our first preview release focused on support for iOS 13 and Xcode 11! With today&#8217;s preview, you can begin building applications using Xcode 11 and start...","Href":"https://devblogs.microsoft.com/xamarin/ios-13-xcode-11/","RawContent":null},{"Title":"Xamarin and .NET Community Developer Events in July","PublishedOn":"2019-07-01T19:49:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Jumpstart your next mobile development project by networking with your local community and getting the latest updates about Xamarin and .NET related technologies. Discover upcoming developer events...","Href":"https://devblogs.microsoft.com/xamarin/july-xamarin-net-developer-events/","RawContent":null},{"Title":"Styling for Multiple Device Resolutions","PublishedOn":"2019-06-28T18:26:56+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Guest Post: Charlin Agramonte is a Microsoft MVP and co-founder of CrossGeeks. She writes Xamarin articles in her blog http://xamgirl.com/. Find her on twitter as @Chard003.\nA few months ago we...","Href":"https://devblogs.microsoft.com/xamarin/styling-for-multiple-device-resolutions/","RawContent":null},{"Title":"Migrating MacOS Apps to 64-bit Before the Apple Transition","PublishedOn":"2019-06-26T19:27:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has been moving towards 64-bit only applications on macOS for a number of releases. Last June, Apple started requiring Apps on the macOS App Store to be 64-bit only and macOS 10.13.4 and above...","Href":"https://devblogs.microsoft.com/xamarin/apple-transition-migrate-macos-apps-to-64-bit/","RawContent":null},{"Title":"Faster Xamarin.Android Builds & Smaller Dex Files","PublishedOn":"2019-06-24T18:02:55+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"One of our current focus areas in Xamarin.Android is build performance. The &#8220;inner dev loop&#8221; directly impacts developer productivity&#8211;the time it takes to make a small code change and...","Href":"https://devblogs.microsoft.com/xamarin/dex-counting-xamarin-android-improved/","RawContent":null},{"Title":"Get Started with Free Xamarin Training on Microsoft Learn","PublishedOn":"2019-06-21T19:10:22+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Learn how to build cross-platform mobile applications on Android and iOS with the new Xamarin.Forms content on Microsoft Learn. The new and completely free platform where you can earn points and...","Href":"https://devblogs.microsoft.com/xamarin/microsoft-learn-free-xamarin-training/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio for Mac","PublishedOn":"2019-06-19T18:21:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Visual Studio 2019 for Mac version 8.2 is officially available as a preview. Now featuring significant improvements to the XAML editing experience for Xamarin developers. The Xamarin.Forms XAML...","Href":"https://devblogs.microsoft.com/xamarin/xaml-intellisense-vs4m-xamarin-forms/","RawContent":null},{"Title":"Automatic Android SDK Management","PublishedOn":"2019-06-17T20:24:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"As a mobile developer building apps for Android, there are many tools used under the hood to build, deploy, and debug your Android applications. We know this can be an intimidating process. So to...","Href":"https://devblogs.microsoft.com/xamarin/automatic-android-sdk-management/","RawContent":null},{"Title":"Xamarin Podcast: Xamarin.Forms 4 And So Much More!","PublishedOn":"2019-06-14T16:08:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Keeping up with the latest in .NET, C#, Xamarin, and Azure is easier than ever. Co-hosts Matt Soucoup and James Montemagno cover a range of topics relevant to Xamarin developers from designing mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-xamarin-forms-4/","RawContent":null},{"Title":"Grial UI Kit: Building Beautiful Xamarin.Forms Apps, Faster","PublishedOn":"2019-06-12T17:07:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Leonardo Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UI Kit and Gorilla Player. UXDivers specializes in designing and coding...","Href":"https://devblogs.microsoft.com/xamarin/grial-ui-kit-xamarin-forms/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9946674378","Type":"IssuesEvent","CreatedAt":"2019-07-04T02:26:39","Actor":"jennyf19","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3326","RelatedDescription":"Opened issue \"Login screen loses information on device orientation in Android\" (#3326) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run a Xamarin Android app with [MSAL](https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/tree/master/tests/devapps/XForms\r\n) or ADAL with .WithEmbeddedWebview(true)\r\n2. On the login screen, enter the username\r\n3. When the password screen appears, change the screen orientation. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n=====\r\nZip file was too big, but here's a link to a [sample project](https://github.com/jennyf19/XamarinAndroidTest)\r\n\r\n### Expected Behavior\r\n- Upon screen orientation, the ui stays on the enter password screen, as it does with our native Android library\r\n### Actual Behavior\r\n- Upon screen orientation, the ui reverts back to the original login screen with no username present (this value has been lost)\r\n\r\nIn our dev sample, we have this in the MainActivity: \r\n [Activity(Label = \"XForms\", Icon = \"@drawable/icon\", Theme = \"@style/MainTheme\", MainLauncher = true,\r\n        ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation)]\r\n \r\nHere's the code in ADAL where we handle the [embedded webview](https://github.com/AzureAD/azure-activedirectory-library-for-dotnet/blob/dev/src/Microsoft.IdentityModel.Clients.ActiveDirectory/Platforms/android/EmbeddedWebview/AuthenticationAgentActivity.cs#L41)\r\n \r\nHere's the similar issue in ADAL with [screen shots](https://github.com/AzureAD/azure-activedirectory-library-for-dotnet/issues/1622)\r\n\r\nAnd a similar issue in [msal](https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/issues/1244)\r\n\r\n=====\r\nOur native Android's code for their [webview](https://github.com/AzureAD/azure-activedirectory-library-for-android/blob/dev/adal/src/main/java/com/microsoft/aad/adal/AuthenticationActivity.java)\r\nand their [manifest](https://github.com/AzureAD/azure-activedirectory-library-for-android/blob/dev/adal/src/main/AndroidManifest.xml)"},{"Id":"9944185673","Type":"PullRequestEvent","CreatedAt":"2019-07-03T17:36:29","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3325","RelatedDescription":"Opened pull request \"[build] Create and use an android-toolchain artifact\" (#3325) at xamarin/xamarin-android","RelatedBody":"Attempts to speed up some of our Azure Pipeline provisioning steps by\r\nuploading the android-toolchain dependencies as a pipeline artifact which\r\ncan be used by other stages. The hope is that we'll see faster download\r\nspeeds for these components if they are saved as a build artifact."},{"Id":"9944158925","Type":"IssuesEvent","CreatedAt":"2019-07-03T17:32:13","Actor":"jrahma","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3324","RelatedDescription":"Opened issue \"You uploaded an APK that is not zip aligned. You will need to run a zip align tool on your APK and upload it again.\" (#3324) at xamarin/xamarin-android","RelatedBody":"Hi,\r\n\r\nWhy all my new projects shows shows:\r\n\r\n> You uploaded an APK that is not zip aligned. You will need to run a zip align tool on your APK and upload it again.\r\n\r\n\r\nwhen uploading the APK to Google Play?\r\n\r\nand when I try:\r\n\r\n`zipalign.exe -v -p 4 C:\\Temp\\zipalign\\com.jafaria.app.apk C:\\Temp\\zipalign\\com.jafaria.app-aligned.apk\r\n`\r\nand upload the APK then I get:\r\n\r\n> You uploaded an APK with an invalid signature (learn more about signing). Error from apksigner: ERROR: JAR_SIG_NO_MANIFEST: Missing META-INF/MANIFEST.MF\r\n\r\n\r\nI never shows these errors before\r\n\r\n"},{"Id":"9943909186","Type":"IssuesEvent","CreatedAt":"2019-07-03T16:53:31","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3323","RelatedDescription":"Closed issue \"Encountering startup crash with AOT or Bundle Assemblies in 16.2\" (#3323) at xamarin/xamarin-android","RelatedBody":"A couple of projects are crashing on startup with AOT or Bundle Assemblies enabled when built against d16-2.\r\n\r\n## Steps to Reproduce\r\n\r\n1. msbuild /t:Install /p:Configuration=Release /p:AotAssemblies=true /p:EnableLlvm=true [Topeka.csproj](https://github.com/xamarin/monodroid-samples/tree/master/android5.0/Topeka)\r\n2. Launch app on device.\r\n\r\nor\r\n1. msbuild /t:Install /p:Configuration=Release /p:BundleAssemblies=true  [Topeka.csproj](https://github.com/xamarin/monodroid-samples/tree/master/android5.0/Topeka)\r\n2. Launch app on device.\r\n\r\n\r\n<!--\r\nYou may drag & drop the attachment (repro code/solution, screenshot, etc.) onto the issue.\r\n-->\r\n\r\n### Current Behavior\r\nhttps://gist.github.com/pjcollins/975c5368ed4473f3492a1af00176f2b5\r\n```\r\n07-03 12:44:17.386 29889 29889 I MonoDroid: UNHANDLED EXCEPTION:\r\n07-03 12:44:17.401 29889 29889 I MonoDroid: System.TypeLoadException: Could not load type 'Android.Text.ITextWatcherInvoker' from assembly 'Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at (wrapper managed-to-native) System.RuntimeTypeHandle.internal_from_name(string,System.Threading.StackCrawlMark&,System.Reflection.Assembly,bool,bool,bool)\r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at System.RuntimeTypeHandle.GetTypeByName (System.String typeName, System.Boolean throwOnError, System.Boolean ignoreCase, System.Boolean reflectionOnly, System.Threading.StackCrawlMark& stackMark, System.Boolean loadTypeFromPartialName) [0x0008d] in <a4ffac136b0549a681fa101adf9fe8b8>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at System.RuntimeType.GetType (System.String typeName, System.Boolean throwOnError, System.Boolean ignoreCase, System.Boolean reflectionOnly, System.Threading.StackCrawlMark& stackMark) [0x0000e] in <a4ffac136b0549a681fa101adf9fe8b8>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at System.Type.GetType (System.String typeName, System.Boolean throwOnError) [0x00002] in <a4ffac136b0549a681fa101adf9fe8b8>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.AndroidTypeManager.RegisterNativeMembers (Java.Interop.JniType jniType, System.Type type, System.String methods) [0x000fd] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.RegisterJniNatives (System.IntPtr typeName_ptr, System.Int32 typeName_len, System.IntPtr jniClass, System.IntPtr methods_ptr, System.Int32 methods_len) [0x00115] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_static_object_method_a(intptr,intptr&,intptr,intptr,Java.Interop.JniArgumentValue*)\r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Java.Interop.JniEnvironment+StaticMethods.CallStaticObjectMethod (Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00053] in <9234a7d3dc314014a9dc76c66d690cbf>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.CallStaticObjectMethod (System.IntPtr jclass, System.IntPtr jmethod, Android.Runtime.JValue* parms) [0x0000e] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.CallStaticObjectMethod (System.IntPtr jclass, System.IntPtr jmethod, Android.Runtime.JValue[] parms) [0x00018] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.FindClass (System.String classname) [0x0003d] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.AllocObject (System.String jniClassName) [0x00000] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.StartCreateInstance (System.String jniClassName, System.String jniCtorSignature, Android.Runtime.JValue* constructorParameters) [0x00007] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.StartCreateInstance (System.String jniClassName, System.String jniCtorSignature, Android.Runtime.JValue[] constructorParameters) [0x00018] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Text.TextWatcherImplementor..ctor (System.Object inst, System.EventHandler`1[TEventArgs] changed_handler, System.EventHandler`1[TEventArgs] before_handler, System.EventHandler`1[TEventArgs] after_handler) [0x00010] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Widget.TextView.add_TextChanged (System.EventHandler`1[TEventArgs] value) [0x00015] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Topeka.Fragments.SignInFragment.InitContentViews (Android.Views.View view) [0x00011] in <6203221cc06041c5a05d941769f573a9>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Topeka.Fragments.SignInFragment.OnViewCreated (Android.Views.View view, Android.OS.Bundle savedInstanceState) [0x0003e] in <6203221cc06041c5a05d941769f573a9>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.App.Fragment.n_OnViewCreated_Landroid_view_View_Landroid_os_Bundle_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_view, System.IntPtr native_savedInstanceState) [0x00019] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at (wrapper dynamic-method) Android.Runtime.DynamicMethodNameCounter.9(intptr,intptr,intptr,intptr)\r\n```\r\n\r\n[msbuild.binlog.zip](https://github.com/xamarin/xamarin-android/files/3355982/msbuild.binlog.zip)\r\n\r\n<!--\r\nWhat is the current behavior?\r\n-->\r\n\r\n**Version**:\r\nVS 2019 16.2 Preview 3.\r\n"},{"Id":"9943856090","Type":"IssuesEvent","CreatedAt":"2019-07-03T16:45:31","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3323","RelatedDescription":"Opened issue \"Encountering startup crash with AOT or Bundle Assemblies in 16.2\" (#3323) at xamarin/xamarin-android","RelatedBody":"A couple of projects are crashing on startup with AOT or Bundle Assemblies enabled when built against d16-2.\r\n\r\n## Steps to Reproduce\r\n\r\n1. msbuild /t:Install /p:Configuration=Release /p:AotAssemblies=true /p:EnableLlvm=true [Topeka.csproj](https://github.com/xamarin/monodroid-samples/tree/master/android5.0/Topeka)\r\n2. Launch app on device.\r\n\r\nor\r\n1. msbuild /t:Install /p:Configuration=Release /p:BundleAssemblies=true  [Topeka.csproj](https://github.com/xamarin/monodroid-samples/tree/master/android5.0/Topeka)\r\n2. Launch app on device.\r\n\r\n\r\n<!--\r\nYou may drag & drop the attachment (repro code/solution, screenshot, etc.) onto the issue.\r\n-->\r\n\r\n### Current Behavior\r\nhttps://gist.github.com/pjcollins/975c5368ed4473f3492a1af00176f2b5\r\n```\r\n07-03 12:44:17.386 29889 29889 I MonoDroid: UNHANDLED EXCEPTION:\r\n07-03 12:44:17.401 29889 29889 I MonoDroid: System.TypeLoadException: Could not load type 'Android.Text.ITextWatcherInvoker' from assembly 'Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at (wrapper managed-to-native) System.RuntimeTypeHandle.internal_from_name(string,System.Threading.StackCrawlMark&,System.Reflection.Assembly,bool,bool,bool)\r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at System.RuntimeTypeHandle.GetTypeByName (System.String typeName, System.Boolean throwOnError, System.Boolean ignoreCase, System.Boolean reflectionOnly, System.Threading.StackCrawlMark& stackMark, System.Boolean loadTypeFromPartialName) [0x0008d] in <a4ffac136b0549a681fa101adf9fe8b8>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at System.RuntimeType.GetType (System.String typeName, System.Boolean throwOnError, System.Boolean ignoreCase, System.Boolean reflectionOnly, System.Threading.StackCrawlMark& stackMark) [0x0000e] in <a4ffac136b0549a681fa101adf9fe8b8>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at System.Type.GetType (System.String typeName, System.Boolean throwOnError) [0x00002] in <a4ffac136b0549a681fa101adf9fe8b8>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.AndroidTypeManager.RegisterNativeMembers (Java.Interop.JniType jniType, System.Type type, System.String methods) [0x000fd] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.RegisterJniNatives (System.IntPtr typeName_ptr, System.Int32 typeName_len, System.IntPtr jniClass, System.IntPtr methods_ptr, System.Int32 methods_len) [0x00115] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_jnienv_call_static_object_method_a(intptr,intptr&,intptr,intptr,Java.Interop.JniArgumentValue*)\r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Java.Interop.JniEnvironment+StaticMethods.CallStaticObjectMethod (Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00053] in <9234a7d3dc314014a9dc76c66d690cbf>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.CallStaticObjectMethod (System.IntPtr jclass, System.IntPtr jmethod, Android.Runtime.JValue* parms) [0x0000e] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.CallStaticObjectMethod (System.IntPtr jclass, System.IntPtr jmethod, Android.Runtime.JValue[] parms) [0x00018] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.FindClass (System.String classname) [0x0003d] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.AllocObject (System.String jniClassName) [0x00000] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.StartCreateInstance (System.String jniClassName, System.String jniCtorSignature, Android.Runtime.JValue* constructorParameters) [0x00007] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Runtime.JNIEnv.StartCreateInstance (System.String jniClassName, System.String jniCtorSignature, Android.Runtime.JValue[] constructorParameters) [0x00018] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Text.TextWatcherImplementor..ctor (System.Object inst, System.EventHandler`1[TEventArgs] changed_handler, System.EventHandler`1[TEventArgs] before_handler, System.EventHandler`1[TEventArgs] after_handler) [0x00010] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.Widget.TextView.add_TextChanged (System.EventHandler`1[TEventArgs] value) [0x00015] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Topeka.Fragments.SignInFragment.InitContentViews (Android.Views.View view) [0x00011] in <6203221cc06041c5a05d941769f573a9>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Topeka.Fragments.SignInFragment.OnViewCreated (Android.Views.View view, Android.OS.Bundle savedInstanceState) [0x0003e] in <6203221cc06041c5a05d941769f573a9>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at Android.App.Fragment.n_OnViewCreated_Landroid_view_View_Landroid_os_Bundle_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_view, System.IntPtr native_savedInstanceState) [0x00019] in <c130c55abd344375a9a9632e4941efae>:0 \r\n07-03 12:44:17.401 29889 29889 I MonoDroid:   at (wrapper dynamic-method) Android.Runtime.DynamicMethodNameCounter.9(intptr,intptr,intptr,intptr)\r\n```\r\n\r\n[msbuild.binlog.zip](https://github.com/xamarin/xamarin-android/files/3355982/msbuild.binlog.zip)\r\n\r\n<!--\r\nWhat is the current behavior?\r\n-->\r\n\r\n**Version**:\r\nVS 2019 16.2 Preview 3.\r\n"},{"Id":"9943553820","Type":"PullRequestEvent","CreatedAt":"2019-07-03T16:05:03","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1860","RelatedDescription":"Closed pull request \"[Xamarin.Android.Build.Tasks] Use XNavigation for AndroidResource\" (#1860) at xamarin/xamarin-android","RelatedBody":"AndroidResource is slooow. Mainly because it is written to\r\nrepeatedly loop through the elements in the document.\r\nWe should use streaming to process these documents since it\r\nwill be faster.\r\n\r\nCurrent Master Xamarin Forms Test App Time Elapsed \r\n\r\n\r\n\r\n| Master | PR | Diff |\r\n| -------- | ---- | ---- |\r\n| 00:00:23.39 |  00:00:21.52 | -00:00:01.87\r\n- [ ]  Tests, tests and more tests\r\n- [x]  Switch to `AsyncTask`"},{"Id":"9943533899","Type":"IssuesEvent","CreatedAt":"2019-07-03T16:02:26","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3322","RelatedDescription":"Opened issue \"Deprecated RunCodeAnalysis option results in linker error in d16-2\" (#3322) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n#### VS Mac 8.2\r\n1. Create or load an XA project.\r\n2. Right click Project -> Options.\r\n3. Navigate to Code Anaylsis -> Enable Code Analysis on Build.\r\n4. Switch to the Release configuration and build.\r\n\r\n#### VS 2019 16.2\r\n1. Create or load an XA project.\r\n2. Switch to the Release configuration\r\n3. Select Analyze -> Run Code Analysis -> On Solution\r\n \r\n#### Command line:\r\n1. msbuild /t:SignAndroidPackage /p:Configuration=Release  /p:RunCodeAnalysis=true\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Actual Behavior\r\nThe (now deprecated) CodeAnalysis options are resulting in a build failure when the linker is enabled after upgrading to 16.2, though the app assembly referenced in the error has been built and exists in the output and intermediate output dir:\r\n\r\n```\r\n _CreatePackageWorkspace:\r\n  Creating directory \"obj/Release/android/assets/\".\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018: The \"LinkAssemblies\" task failed unexpectedly. [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018: System.IO.FileNotFoundException: Could not load assembly 'DroidButton, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile? [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018: File name: 'DroidButton.dll' [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018:   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference reference, Mono.Cecil.ReaderParameters parameters) [0x00125] in <bf8d1485bd8b4cc8b07ee73dc73c2c6c>:0  [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018:   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve (System.String fullName, Mono.Cecil.ReaderParameters parameters) [0x00007] in <bf8d1485bd8b4cc8b07ee73dc73c2c6c>:0  [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018:   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve (System.String fullName) [0x00000] in <bf8d1485bd8b4cc8b07ee73dc73c2c6c>:0  [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018:   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.GetAssembly (System.String fileName) [0x00007] in <bf8d1485bd8b4cc8b07ee73dc73c2c6c>:0  [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018:   at Xamarin.Android.Tasks.LinkAssemblies.Execute (Java.Interop.Tools.Cecil.DirectoryAssemblyResolver res) [0x0004d] in <d8e2132c4a15403dbf186d3f29b4d4ff>:0  [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018:   at Xamarin.Android.Tasks.LinkAssemblies.Execute () [0x0001b] in <d8e2132c4a15403dbf186d3f29b4d4ff>:0  [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <9793e3774951417ca4f48a7c60193b35>:0  [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(2147,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x002a9] in <9793e3774951417ca4f48a7c60193b35>:0  [/Users/peter/source/monodroid-samples/Button/DroidButton.csproj]\r\n```\r\n[msbuild.binlog.zip](https://github.com/xamarin/xamarin-android/files/3355751/msbuild.binlog.zip)\r\n\r\n\r\n \r\n### Version Information\r\nc30842125977ccffef34b22e4a6517a054529da3\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9943233486","Type":"IssuesEvent","CreatedAt":"2019-07-03T15:25:31","Actor":"damphyr","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3321","RelatedDescription":"Opened issue \"Xamarin.Android tasks evaluate before BaseIntermediateOutputPath ist set\" (#3321) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a Xamarin.Android project with the wizard\r\n2. Add \r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup>\r\n      <BaseOutputPath>$(MSBuildThisFileDirectory)\\out\\build\\$(MSBuildProjectName)</BaseOutputPath>\r\n      <BaseIntermediateOutputPath>$(BaseOutputPath)</BaseIntermediateOutputPath>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\nas *Directory.Build.props* next to the solution (this sets the property values at an early point for msbuild and is needed for nuget restores)\r\n3. Replace/Add the following in the .csproj wherever you find *OutputPath*\r\n```xml\r\n<OutputPath>$(BaseOutputPath)\\$(AssemblyName)\\bin\\$(Configuration)</OutputPath>\r\n<IntermediateOutputPath>$(BaseIntermediateOutputPath)$(AssemblyName)\\obj\\$(Configuration)</IntermediateOutputPath>\r\n```\r\n\r\n### Expected Behavior\r\nAll build generated files are under the <solution>\\out\\ directory.\r\n\r\n### Actual Behavior\r\n\r\nAndroid build is in c:\\$(AssemblyName)\\bin\r\nNuGet packages etc. are under <solution>\\out\\\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2019\r\nVersion 16.1.3\r\nVisualStudio.16.Release/16.1.3+29009.5\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\nInstalled Version: Professional\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nApplication Insights Tools for Visual Studio Package   9.1.00429.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.1.429.50124\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.1.429.50124\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.1.429.50124\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.9000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.1.429.50124\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.9000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.1.1-beta4-19281-06+58a4b1e79aea28115e66b06f850c83a3f1fcb6d3\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.9000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.9000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.5\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.9000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 0x10 - v2.9.20419.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   16.1.1 (2473f22)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNode.js Tools   1.5.10424.1 Commit Hash:c3ce0ae0b29c0b3a755ffc12f8a685fe7ddd3600\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   5.1.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.61904.23160\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.10506.2004\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.1.1-beta4-19281-06+58a4b1e79aea28115e66b06f850c83a3f1fcb6d3\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.1.0-beta.19253.3+42526fe359672a05fd562dc16a91a43d0fe047a7\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.1.0.543 (d16-1@34a619991)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.1.0.418 (remotes/origin/d16-1@5b958bb10)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.2.112 (4db4af4)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.3.0.22 (HEAD/8e7764fdf)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-08@3cb36842fc4\r\n    Java.Interop: xamarin/java.interop/d16-1@5ddc3e3\r\n    LibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.27.1@8212a2d\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-1@acabd26\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.10.0.153 (750a879)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n"},{"Id":"9942749229","Type":"PullRequestEvent","CreatedAt":"2019-07-03T14:30:06","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3320","RelatedDescription":"Opened pull request \"Import Configuration.props in Mono.Android-Test.Library\" (#3320) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/e9561076a8e8761002931b886991eb1616561864\r\n\r\nWhen this additional test library was added in e956107 it did not import\r\nour Configuration.props file which contains default paths to the Android\r\ntooling that we provision. This recently caused a breakage when bumping\r\nthe TargetFrameworkVersion of this project to v10.0 and building against\r\na system install of XA, as the Android SDK path which was automatically\r\nresolved did not contain an android-29/android.jar. Importing the\r\nConfiguration.props file should fix this build failure."},{"Id":"9942616387","Type":"PullRequestEvent","CreatedAt":"2019-07-03T14:14:42","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3315","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix cwd usage in <Aapt2Link/>\" (#3315) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3237\r\n\r\nWe have been made aware of a random error when building Xamarin.Forms\r\nfrom source:\r\n\r\n    Errors\r\n        AppCompat\\NavigationPageRenderer.cs(461,34): error CS0117: 'Resource.Attribute' does not contain a definition for 'actionBarSize'\r\n        Renderers\\ShellItemRenderer.cs(60,45): error CS0117: 'Resource' does not contain a definition for 'Layout'\r\n    ... plus more\r\n\r\nI was able to reproduce this in the IDE, but also with:\r\n\r\n    > git clean -dxf\r\n    > msbuild Xamarin.Forms.sln /restore /m\r\n\r\nI could resolve the issue by either:\r\n\r\n* Change the setting in the IDE to use 1 MSBuild node\r\n* Remove `/m`, which builds in parallel\r\n* Add `/p:AndroidUseAapt2=False`\r\n\r\nAfter debugging, the problem appeared to be this file was completely\r\nblank:\r\n\r\n    Xamarin.Forms.Platform.Android\\obj\\Debug\\90\\R.txt\r\n\r\nThen when I reviewed the `aapt2 link` call:\r\n\r\n    Executing link --manifest C:\\Users\\jopepper\\AppData\\Local\\Temp\\dief34vx.ctw\\manifest\\AndroidManifest.xml --java C:\\Users\\jopepper\\AppData\\Local\\Temp\\dief34vx.ctw --custom-package xamarin.forms.platform.android --auto-add-overlay -I \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-28\\android.jar\" --output-text-symbols obj\\Debug\\90\\R.txt -o C:\\Users\\jopepper\\AppData\\Local\\Temp\\dief34vx.ctw\\resources.apk\r\n\r\nThere were no `-R` arguments? This meant that the `.flata` files did\r\nnot exist at all??? Yet they *did* exist, and I could see them\r\ngenerated in the log prior to this call...\r\n\r\nI added logging and tried it again:\r\n\r\n    Aapt2Link\r\n    ...\r\n        Archive does not exist: obj\\Debug\\90\\flata\\43df68e0d20944e28151b722a21d9b9ef640254e.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\74a3f1c210308ec085909c723a8990aa914c1a71.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\4db0a001e031ddf3be314c5355f4fbbc0ce43f64.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\b12a43cde6840d15dadec10f8fb3ca5c547acc69.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\3b2cd76e696829add57b46e563c7a78bb42b7b11.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\ba386569fd62aa4d06aae04e8fc5ea2f4c505ecb.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\5ad21817f3b88df6b142d14cfcd0aa60312a41f2.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\86863b3e6cc326508270b8c30f738959fb241678.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\6a09985ebabd8c9070c92b8338f9c6f6198d0f0a.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\02d2c22bddc9d6810e8dc8cbdbe03619212dddc0.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\081a2e056100d972d2fc4067acb8a5034ac9ac9c.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\bd1122dc1010f54688ad4b996adc4af4b964358a.flata\r\n        Archive does not exist: obj\\Debug\\90\\flata\\\\compiled.flata\r\n        Executing link --manifest C:\\Users\\jopepper\\AppData\\Local\\Temp\\cxwzxiiv.he2\\manifest\\AndroidManifest.xml --java C:\\Users\\jopepper\\AppData\\Local\\Temp\\cxwzxiiv.he2 --custom-package xamarin.forms.maps.android --auto-add-overlay -I \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-28\\android.jar\" --output-text-symbols obj\\Debug\\90\\R.txt -o C:\\Users\\jopepper\\AppData\\Local\\Temp\\cxwzxiiv.he2\\resources.apk\r\n\r\nThat is when I realized all these were relative paths. We need to be\r\nusing `AsyncTask.WorkingDirectory` here. After fixing that the problem\r\nwent away. I kept the logging as well, since it should be helpful in\r\nthe future.\r\n\r\nUnfortunately, I don't see how to add a test for this issue, since the\r\n`/m` switch does not work with `xabuild.exe` on Windows. MSBuild's\r\nout-of-process node logic gets a bit confused.\r\n\r\nWe should revisit later, and add new MSBuild tests using `/m` after we\r\nget the tests running against the system install on Azure DevOps."},{"Id":"9942616339","Type":"IssuesEvent","CreatedAt":"2019-07-03T14:14:41","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3237","RelatedDescription":"Closed issue \"Csc errors in Resource.designer.cs during a regular build\" (#3237) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nFiling this, as I have not figured out what is wrong yet...\r\n\r\n1. Clone [Xamarin.Forms](https://github.com/xamarin/Xamarin.Forms) or run `git clean -dxf`\r\n2. Run `Xamarin.Forms.ControlGallery.Android` -- a Xamarin.Android app project\r\n3. You might get compiler errors in activities using fields from `Resource.designer.cs`\r\n\r\n```\r\nErrors\r\n    AppCompat\\NavigationPageRenderer.cs(461,34): error CS0117: 'Resource.Attribute' does not contain a definition for 'actionBarSize' \r\n    Renderers\\ShellItemRenderer.cs(60,45): error CS0117: 'Resource' does not contain a definition for 'Layout'\r\n... plus more\r\n```\r\n\r\nRebuilding `Xamarin.Forms.ControlGallery.Android` fixes the issue.\r\n\r\nThe actual file looked like this:\r\n\r\n```csharp\r\n#pragma warning disable 1591\r\n//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by a tool.\r\n//     Runtime Version:4.0.30319.42000\r\n//\r\n//     Changes to this file may cause incorrect behavior and will be lost if\r\n//     the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n[assembly: global::Android.Runtime.ResourceDesignerAttribute(\"Xamarin.Forms.Platform.Android.Resource\", IsApplication=false)]\r\n\r\nnamespace Xamarin.Forms.Platform.Android\r\n{\r\n\t\r\n\t\r\n\t[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Xamarin.Android.Build.Tasks\", \"1.0.0.0\")]\r\n\tpublic partial class Resource\r\n\t{\r\n\t\t\r\n\t\tstatic Resource()\r\n\t\t{\r\n\t\t\tglobal::Android.Runtime.ResourceIdManager.UpdateIdValues();\r\n\t\t}\r\n\t\t\r\n\t\tpublic partial class Attribute\r\n\t\t{\r\n\t\t\t\r\n\t\t\tstatic Attribute()\r\n\t\t\t{\r\n\t\t\t\tglobal::Android.Runtime.ResourceIdManager.UpdateIdValues();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tprivate Attribute()\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n#pragma warning restore 1591\r\n```\r\n\r\nIn a working example, I see a lot of logs like this:\r\n```\r\n  - Not remapping resource: Animation.abc_fade_in\r\n  - Not remapping resource: Animation.abc_fade_out\r\n... plus many more\r\n```\r\nThose are absent in the failing build log.\r\n\r\n### Expected Behavior\r\n\r\nA regular build should not encounter build errors.\r\n\r\n### Actual Behavior\r\n\r\nYou get build errors in code using `Resource.designer.cs`.\r\n\r\n### Version Information\r\n\r\n@PureWeen was hitting this in VS Windows, using Xamarin.Android 9.4.0.34.\r\n\r\nI wasn't able to reproduce myself, but logs are attached.\r\n\r\n### Log File\r\n\r\nAn example of a working/non-working build in here: [aapt2.zip](https://github.com/xamarin/xamarin-android/files/3298294/aapt2.zip)\r\n"},{"Id":"9942591067","Type":"IssuesEvent","CreatedAt":"2019-07-03T14:11:45","Actor":"rickdijk","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3319","RelatedDescription":"Opened issue \"windowLightNavigationBar color delay\" (#3319) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a values-v28 folder\r\n\r\n2. Add the styles.xml:\r\n      <item name=\"android:navigationBarColor\">@android:color/white</item>\r\n      <item name=\"android:windowDrawsSystemBarBackgrounds\">true</item>\r\n      <item name=\"android:windowLightNavigationBar\">true</item>\r\n\r\n3. Run the app, it works fine. Now put the app to the background and then bring it back again.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nImmediately when bringing back the app on screen, the LightNavigationBar should be visible\r\n\r\n### Actual Behavior\r\nRun the app, it works fine. Now when putting the app to the background and then bring it back again, the buttons in the navigationBar will be white for a second, before turning dark and visible again.\r\n\r\n### Version Information\r\n\r\n8.1.3 (build 19)"},{"Id":"9940461570","Type":"PullRequestEvent","CreatedAt":"2019-07-03T09:13:51","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3232","RelatedDescription":"Closed pull request \"[xdelta] Download and ship the xdelta3 tool.\" (#3232) at xamarin/xamarin-android","RelatedBody":"As part of our development of the fast deployment\r\nsystem we need to have a way to do binary diffs.\r\nThe xdelta tool (http://xdelta.org) provides that\r\ncapability. This PR makes use of the binaries\r\nproduced from the following fork of xdelta\r\n\r\n\thttps://github.com/dellis1972/xdelta\r\n\r\nIt downloads the binaries for MacOS, Linux and Windows.\r\nIt also downloads Android binaries for the following\r\narchitectures\r\n\r\n\tx86, x86_64, armeabi-v7a, arm64-v8a\r\n\r\nThis will allow us to produce a binary diff on the\r\nhost machine and apply it on the device."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9947118193","Type":"IssuesEvent","CreatedAt":"2019-07-04T04:44:07","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6717","RelatedDescription":"Closed issue \"Xamarin Forms iOS - Portuguese Brazil folder\" (#6717) at xamarin/Xamarin.Forms","RelatedBody":"Hello starting from Xamarin Forms 4.0, if we add resource file for Portuguese Brazil language\r\n![Capture](https://user-images.githubusercontent.com/15906420/60393473-a8156300-9adb-11e9-805b-e5f9a1dfdd63.PNG)\r\n culture as \"Resources.pt-BR.resx\", upon compilation the framework creates folder in lowercase \"pt-br\", rather in uppercase \"pt-BR\", hence the resources for specific culture are ignored by iOS. it is happening only in iOS. Is there any fix available?"},{"Id":"9947114212","Type":"IssuesEvent","CreatedAt":"2019-07-04T04:42:52","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6719","RelatedDescription":"Closed issue \"[Bug] Using FontImageSource for a ToolbarItem makes problems with using the font for a Label in Android\" (#6719) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI have two pages. On the first page this a ToolbarItem with Icon as FontImageSource.\r\n\r\nOn the second page there is a Label, which uses the same Font as FontImageSource on the first page.\r\n\r\nBy navigating first time to second page everything is OK. After navigating back and again to the second page the displayed image in the Label is corrupt.\r\n\r\nThe problem occurs only in Android.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.540366\r\n\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/884112/60395171-d6249280-9b2f-11e9-984b-9484efcb6545.png)\r\n![image](https://user-images.githubusercontent.com/884112/60395177-f2c0ca80-9b2f-11e9-87c7-0b9b208fcc14.png)\r\n![image](https://user-images.githubusercontent.com/884112/60395186-1126c600-9b30-11e9-8b76-6fdd12797c0e.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://downloads.membrain-it.com/bugs/app1.zip\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9947111612","Type":"IssuesEvent","CreatedAt":"2019-07-04T04:42:03","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6722","RelatedDescription":"Closed issue \"Unhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. occurred #713[Bug] \" (#6722) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nI am trying below code to Pick a Photo but getting this error on the MessagingCenter.Send line:\r\n\r\n> Unhandled Exception:\r\n> \r\n> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. occurred\r\n> \r\n\r\n\r\n\r\n**** The TakePhotoAsync MessagingCenter.Send is working perfectly without error..\r\n\r\n\r\nHere is the code:\r\n\r\n```\r\nasync void ImageKidPhotoTapped(object sender, System.EventArgs e)\r\n{\r\n    string action = await DisplayActionSheet(\"كيف تريد تحديث الصورة؟\", \"إلغاء\", null, \"الكاميرا\", \"الألبوم\");\r\n\r\n    if (action == \"الكاميرا\")\r\n    {\r\n        await CrossMedia.Current.Initialize();\r\n\r\n        if (!CrossMedia.Current.IsCameraAvailable || !CrossMedia.Current.IsTakePhotoSupported)\r\n        {\r\n            await DisplayAlert(\"No Camera\", \":( No camera available.\", \"OK\");\r\n            return;\r\n        }\r\n\r\n        var file = await CrossMedia.Current.TakePhotoAsync(new Plugin.Media.Abstractions.StoreCameraMediaOptions\r\n        {\r\n            AllowCropping = true,\r\n            SaveToAlbum = false,\r\n            Directory = \"JafariaImages\",\r\n            Name = \"StudentPhoto.png\"\r\n        });\r\n\r\n        if (file == null) return;\r\n\r\n        MyKidPhoto.Source = ImageSource.FromStream(() =>\r\n        {\r\n            var stream = file.GetStream();\r\n            return stream;\r\n        });\r\n\r\n        new_photo = file;\r\n\r\n        MessagingCenter.Send<object>(this, \"UpdateStudentPhoto\");\r\n    }\r\n    else if (action == \"الألبوم\")\r\n    {\r\n        if (!CrossMedia.Current.IsPickPhotoSupported)\r\n        {\r\n            await DisplayAlert(\"Photos Not Supported\", \":( Permission not granted to photos.\", \"OK\");\r\n            return;\r\n        }\r\n\r\n        var file = await Plugin.Media.CrossMedia.Current.PickPhotoAsync(new Plugin.Media.Abstractions.PickMediaOptions\r\n        {\r\n            PhotoSize = Plugin.Media.Abstractions.PhotoSize.Medium,\r\n        });\r\n\r\n\r\n        if (file == null)\r\n            return;\r\n\r\n        MyKidPhoto.Source = ImageSource.FromStream(() =>\r\n        {\r\n            var stream = file.GetStream();\r\n            file.Dispose();\r\n            return stream;\r\n        });\r\n\r\n        new_photo = file;\r\n\r\n        // HERE is my Error Thrown;\r\n         MessagingCenter.Send<object>(this, \"UpdateStudentPhoto\");\r\n    }\r\n}\r\n\r\n```\r\nThanks,\r\n[Jassim](https://www.softnames.com)\r\n\r\n"},{"Id":"9947012424","Type":"PullRequestEvent","CreatedAt":"2019-07-04T04:09:04","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5853","RelatedDescription":"Merged pull request \"Create UI test template for XAML pages\" (#5853) at xamarin/Xamarin.Forms","RelatedBody":"It's time-consuming to create XAML test files from scratch. This template will help speed things up. Also updated existing template to add an empty view model & model."},{"Id":"9946954543","Type":"IssuesEvent","CreatedAt":"2019-07-04T03:50:21","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6543","RelatedDescription":"Closed issue \"[Bug] Shell QueryProperty Parameter Ignored when Navigating to existing subpage\" (#6543) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen navigating to an already existing page with a new Uri the parameter in the uri is ignored. \r\nTested on Android, I am unable to test on IOS currently. This issue does not occur when the main tabs are navigated to with parameters, only pages below those.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add a QueryProperty to a viewmodel\r\n   `    [QueryProperty(\"TypeID\", \"id\")]\r\n    public class MonkeysPageViewModel : ViewModelBase\r\n\t{\r\n        private string _typeId;\r\n        public string TypeID\r\n        {\r\n            get\r\n            {\r\n                return _typeId;\r\n            }\r\n            set\r\n            {\r\n                _typeId = value;\r\n                OnPropertyChanged();\r\n                int mID;\r\n                if (Int32.TryParse(TypeID, out mID))\r\n                {\r\n                    SelectedMonkey = Monkeys[mID];\r\n                }\r\n            }\r\n        }`\r\n2. Register the route as a \"Relative Route\" of another Shell tab\r\n`Routing.RegisterRoute(\"monkeys/details\", typeof(MonkeysPage2));`\r\n3. Navigate with a Parameter\r\n`await Shell.Current.GoToAsync(\"//monkeys/details?id=1\");`\r\n4. Using the bottom tab navigation open a different tab (Page1)\r\n5. Navigate again with a different parameter\r\n`await Shell.Current.GoToAsync(\"//monkeys/details?id=2\");`\r\n\r\n### Expected Behavior\r\nNew parameter is passed to ViewModel\r\n\r\n### Actual Behavior\r\nParameter is ignored\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.497661\r\n- Last known good version: n/a\r\n- IDE: VS 2019 for Windows v16.1.3\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 28\r\n- Affected Devices: Only tested on Android emulator and device\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[MonkeyAppPicker.zip](https://github.com/xamarin/Xamarin.Forms/files/3293415/MonkeyAppPicker.zip)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9947275748","Type":"PullRequestEvent","CreatedAt":"2019-07-04T05:30:45","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6485","RelatedDescription":"Merged pull request \"[AppKit] Implement [NSView sortSubviewsUsingFunction:context:]\" (#6485) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9946119509","Type":"PullRequestEvent","CreatedAt":"2019-07-03T23:26:50","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6491","RelatedDescription":"Merged pull request \"[PencilKit] Add Xcode 11 Beta 3 bindings\" (#6491) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1146463951594459137","CreatedAt":"2019-07-03T17:01:20+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1146144741622505472","CreatedAt":"2019-07-02T19:52:55+00:00","UserScreenname":"xamarinhq","Text":"Jumpstart your next mobile development project by networking with your local community and getting the latest updat… https://t.co/JeIcDMSyUr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":24,"FavoriteCount":6,"RawContent":null},{"Id":"1145780868323168256","CreatedAt":"2019-07-01T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/ghYOrkuhhd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":17,"FavoriteCount":6,"RawContent":null},{"Id":"1144685402965643277","CreatedAt":"2019-06-28T19:14:01+00:00","UserScreenname":"xamarinhq","Text":"We realized that making UI *look* good is not enough; it has to be truly adaptive. See how to handle this by using… https://t.co/CtEZskZmJ9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":39,"RawContent":null},{"Id":"1144326789239644160","CreatedAt":"2019-06-27T19:29:01+00:00","UserScreenname":"xamarinhq","Text":"This week’s Xamarin Essential API, we look at the Email API; enabling you to open a pre-populated e-mail (with atta… https://t.co/oaob7atjW7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":14,"RawContent":null},{"Id":"1144002014592061441","CreatedAt":"2019-06-26T21:58:29+00:00","UserScreenname":"xamarinhq","Text":"Reminder: Though new Xamarin .Mac applications target 64-bit by default, existing Xamarin .Mac applications that ta… https://t.co/3k5pQmlyq9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":14,"RawContent":null},{"Id":"1143968928076640257","CreatedAt":"2019-06-26T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/YssrTsTPHN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":13,"RawContent":null},{"Id":"1143283413757190148","CreatedAt":"2019-06-24T22:23:01+00:00","UserScreenname":"xamarinhq","Text":"We've reevaluated our Xamarin .Android codebase and made changes that sped up builds and made smaller Dex Files. Se… https://t.co/H3JE59pryL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":68,"RawContent":null},{"Id":"1143177825882726403","CreatedAt":"2019-06-24T15:23:27+00:00","UserScreenname":"xamarinhq","Text":"Get better at building cross-platform mobile apps with the new Xamarin.Forms. Microsoft Learn is all new and a comp… https://t.co/Kb8hT5LkIZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":86,"FavoriteCount":41,"RawContent":null},{"Id":"1142066359947407362","CreatedAt":"2019-06-21T13:46:53+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/zcg70tbgE9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"1141695710716469249","CreatedAt":"2019-06-20T13:14:03+00:00","UserScreenname":"xamarinhq","Text":"Thanks to your feedback, #VS4Mac 8.2 has some really great improvements to the XAML editing experience; including i… https://t.co/vv0DVw9957","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":9,"RawContent":null},{"Id":"1141064668477345794","CreatedAt":"2019-06-18T19:26:31+00:00","UserScreenname":"xamarinhq","Text":"On this episode of the #XamarinShow, @JamesMontemagno and #MSMVP @DanJSiegel show us a super-cool feature of Prism… https://t.co/GLEhnDlQjp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":16,"RawContent":null},{"Id":"1140735760875872256","CreatedAt":"2019-06-17T21:39:33+00:00","UserScreenname":"xamarinhq","Text":"We want to make sure you’re using the latest tooling. The new and improved Automatic Android SDK Management tool is… https://t.co/H0CSaxzj9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":29,"RawContent":null},{"Id":"1140660631273652224","CreatedAt":"2019-06-17T16:41:01+00:00","UserScreenname":"xamarinhq","Text":"On the latest Xamarin.Essential API of the week show, we take a look at the File System Helpers API which contains… https://t.co/GOGKCwXu6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":34,"FavoriteCount":12,"RawContent":null},{"Id":"1139589442732285953","CreatedAt":"2019-06-14T17:44:30+00:00","UserScreenname":"xamarinhq","Text":"Keeping up w/the latest in #dotNET, C#, &amp; #Xamarin is easier than ever. \nThis week’s #XamarinPodcast includes:\n- hi… https://t.co/FDDO27QHDh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1138875870553300995","CreatedAt":"2019-06-12T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"We make it simple for .NET developers to build beautiful cross-platform apps, fast.\nTake a look at how Grial UI Kit… https://t.co/vceU8u475R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":108,"FavoriteCount":48,"RawContent":null},{"Id":"1138511096380309504","CreatedAt":"2019-06-11T18:19:32+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @chewamanda, App Center Program Manager, shows us the latest features in App Center… https://t.co/VHxAknaumJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":17,"RawContent":null},{"Id":"1138151096067792898","CreatedAt":"2019-06-10T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"Join us at Xamarin Developer Summit - July 11-12. With 35+ sessions, there is something for everyone:\n- Mobile DevO… https://t.co/Ez5mDpM1Az","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":84,"FavoriteCount":35,"RawContent":null},{"Id":"1137049335273840640","CreatedAt":"2019-06-07T17:31:01+00:00","UserScreenname":"xamarinhq","Text":"Our cross-platform API library enables any mobile app that uses the Maps API to launch a map w/ a specific location… https://t.co/BWS4qeqtyU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":34,"RawContent":null}]}},"RunOn":"2019-07-04T05:31:08.1156903Z","RunDurationInMilliseconds":4516}