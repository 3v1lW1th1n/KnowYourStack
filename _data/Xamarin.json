{"Data":{"Blog":{"FeedItems":[{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8250461710","Type":"PullRequestEvent","CreatedAt":"2018-09-12T02:54:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2157","RelatedDescription":"Merged pull request \"[Mono.Android] build and reference non-PCL Java.Interop\" (#2157) at xamarin/xamarin-android","RelatedBody":"Fixes: http://work.devdiv.io/667174\r\n\r\nContext: https://github.com/xamarin/java.interop/commit/893562cb6b02031c5991ec94769db5fd1a88b53e\r\nContext: https://github.com/xamarin/java.interop/commit/659711c77407c95a27b58ff6f2c84c9fe6db0691\r\nContext: https://github.com/xamarin/java.interop/compare/b873e81...9b390bc\r\n\r\nBumped to java.interop/d15-9/9b390bc\r\n\r\nBuild `lib\\xamarin.android\\xbuild-frameworks\\MonoAndroid\\v1.0\\Java.Interop.dll`\r\nas a `MonoAndroid`-profile assembly instead of as a PCL assembly.\r\nThis decreases the assemblies referenced in a \"Hello World\"\r\nXamarin.Android project dramatically; this:\r\n\r\n\tAdding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\t    Adding assembly reference for System.Runtime, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.ComponentModel.Composition, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, recursively...\r\n\t    Adding assembly reference for System.Diagnostics.Debug, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Threading, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Collections.Concurrent, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Reflection, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Linq.Expressions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Reflection.Primitives, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Dynamic.Runtime, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.ObjectModel, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Linq, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Runtime.InteropServices, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Runtime.Extensions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\t    Adding assembly reference for System.Reflection.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, recursively...\r\n\tAdding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\r\nnow becomes:\r\n\r\n\tAdding assembly reference for Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\tAdding assembly reference for Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065, recursively...\r\n\r\nBecause fewer assemblies need to be resolved, the `Rebuild` target\r\ntimes improve by 30%-50% for the \"Hello World\" app:\r\n\r\n  - `Debug` + PCL:            8.424s\r\n  - `Debug` + *not* PCL:      4.258s (~50% faster!)\r\n  - `Release` + PCL:         13.651s\r\n  - `Release` + *not* PCL:    9.487s (~30% faster!)\r\n\r\nThe `lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Java.Interop.dll`\r\ncopy used by `Xamarin.Android.Build.Tasks.dll` remains unchanged, as\r\nit is referenced by `Xamarin.Android.Build.Tasks.csproj`."},{"Id":"8250004318","Type":"IssuesEvent","CreatedAt":"2018-09-12T00:13:29","Actor":"tajinder95","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2179","RelatedDescription":"Opened issue \"Issue in using JNI to call activity from android AAR file\" (#2179) at xamarin/xamarin-android","RelatedBody":"Hi I am facing using AAR file in xamarin android project . I have added android AAR file in my xamarin android and set its build type to \"AndroidAarLibrary\" .Following is c# code used in xamarin to call activity that is defined in AAR file.\r\n\r\nvar clsName = Java.Lang.Class.ForName(\"com.dsphotoeditor.sdk.activity.DsPhotoEditorActivity\");\r\nvar innt = new Intent(this, clsName);\r\ninnt.SetData(inputImageUri); //Set image uri\r\ninnt.PutExtra(\"ds_photo_editor_api_key\", \"26c479d17c220131bec7b6e29e070ad89f3e6cf4\");\r\ninnt.PutExtra(\"ds_photo_editor_output_directory\", \"ds_photo_editor_sample\");\r\nStartActivityForResult(innt, DS_PHOTO_EDITOR_REQUEST_CODE);\r\n\r\nNow corresponding activity is called successfully and UI showing image editor property. But when clicking filter options in UI then it throw error and application gets closed with follwing error message:\r\n\r\nCheckJNI: method to register \"rsnScriptReduce\" not in the given class. This is slow, consider changing your RegisterNatives calls.\r\nFailed to register native method android.support.v8.renderscript.RenderScript.rsnScriptReduce(JJI[JJ[I)V in /data/app/mono.samples.jnitest-1/base.apk\r\n ----- class 'Landroid/support/v8/renderscript/RenderScript;' cl=0x32c07070 -----\r\n\r\nI think some classes not included while apk generation or not accessible. Please let me know if I am doing anything or if anyone have used this approach before.\r\nThis is google drive link to corresponding xamarin project https://drive.google.com/open?id=13r5FPLhbf75ERBqJI858kubmVARitZ74\r\n\r\nLink of full log file of xamarin output : https://drive.google.com/open?id=1doDkuUR7P25TfBfGz_QHn3m_TsGQ3MNo\r\n\r\nNote:I am want to use photo-editor AAR library from https://www.dsphotoeditor.com"},{"Id":"8249439327","Type":"IssuesEvent","CreatedAt":"2018-09-11T21:35:53","Actor":"PureWeen","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2178","RelatedDescription":"Opened issue \"[Feedback] VS2017 enterprise check Budle Assemblies into Native Code, Localization not work\" (#2178) at xamarin/xamarin-android","RelatedBody":"_From @samhouts on September 5, 2018 19:8_\n\n### Description\r\n\r\n\\r\\n\\r\\n\n<p>xamarin.forms , Currently when build release Xamarin Android Apk then install app on device,it is run well ,but Localization is not work, it is only show system language(chinese) and english,when I change language to Korean ,it is show english not\nKorean .\nwhen i not check Budle Assemblies into Native Code,it is run well for Localization .\n\nproject  See Attachment\n\nSteps:\n1.select release mode,check Budle Assemblies into \n   Native Code ,then generate project\n2.Archive the project and distribute\n3.Install app on device,then open app, change \n   language\n\n\nhope get help,thanks!</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/267954/vs2017-enterprise-check-budle-assemblies-into-nati-1.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/627183\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[661459](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/661459)\n\n_Copied from original issue: xamarin/Xamarin.Forms#3718_"},{"Id":"8249427570","Type":"PullRequestEvent","CreatedAt":"2018-09-11T21:33:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2170","RelatedDescription":"Merged pull request \"Make Android emulator creation task slightly less racy\" (#2170) at xamarin/xamarin-android","RelatedBody":"The `CreateAndroidEmulator` task calls the Android SDK utility\r\n`avdmanager` (which replaced the former `android` tool in creation of AVDs) in\r\norder to create an instance of AVD used by our APK tests. The tool has the habit\r\nof asking a question whether or not the user wants to create a custom hardware\r\nprofile for the emulator and it cannot be persuaded to not ask that question.\r\nSo, in order to be polite and answer it, we loop after the process has started\r\nand keep sending it newline characters which, at some point, answer the question\r\nand everybody is happy.\r\n\r\nThe process works most of the time but, unfortunately, it requires us to rely on\r\n`System.Diagnostics.Process.HasExited` property which is *not* a reliable way to\r\ntest whether the process went away, *especially* right after it quit. And so\r\nsometimes we attempt to write the standard input of the process when the process\r\nis already gone which results in an exception similar to the one below:\r\n\r\n```\r\n The \"CreateAndroidEmulator\" task failed unexpectedly.\r\n System.IO.IOException: Write fault on path /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/tests/[Unknown]\r\n   at System.IO.FileStream.WriteInternal (System.Byte[] src, System.Int32 offset, System.Int32 count) [0x000be] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-04/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/FileStream.cs:658\r\n   at System.IO.FileStream.Write (System.Byte[] array, System.Int32 offset, System.Int32 count) [0x00090] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-04/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/FileStream.cs:614\r\n   at System.IO.StreamWriter.Flush (System.Boolean flushStream, System.Boolean flushEncoder) [0x0007e] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-04/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/io/streamwriter.cs:318\r\n   at System.IO.StreamWriter.Write (System.Char[] buffer) [0x00079] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-04/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/io/streamwriter.cs:392\r\n   at System.IO.TextWriter.WriteLine () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-04/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/io/textwriter.cs:372\r\n   at Xamarin.Android.Tools.BootstrapTasks.CreateAndroidEmulator.Exec (System.String android, System.String arguments, System.Diagnostics.DataReceivedEventHandler stderr) [0x00161] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks/CreateAndroidEmulator.cs:136\r\n   at Xamarin.Android.Tools.BootstrapTasks.CreateAndroidEmulator.Run (System.String android) [0x0002d] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks/CreateAndroidEmulator.cs:74\r\n   at Xamarin.Android.Tools.BootstrapTasks.CreateAndroidEmulator.Execute () [0x001a0] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks/CreateAndroidEmulator.cs:46\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00023] in /_/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs:631\r\n   at Microsoft.Build.BackEnd.TaskBuilder+<ExecuteInstantiatedTask>d__26.MoveNext () [0x001f6] in /_/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs:787\r\n```\r\n\r\nTo make the race window smaller, this commit changes the way we wait for the\r\nprocess to quit as well as it corrects some issues with the way we capture\r\nstderr from the process. In addition, it catches and reports on the above\r\nIOException without breaking the build, should the race happen anyway."},{"Id":"8249125843","Type":"IssuesEvent","CreatedAt":"2018-09-11T20:34:50","Actor":"PureWeen","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2177","RelatedDescription":"Opened issue \"First run of Xamarin Forms Android Control Gallery throws error on inflating class Toolbar\" (#2177) at xamarin/xamarin-android","RelatedBody":"VS for MAC\r\nBuild Version: 7.6.3 (build 1)\r\n\r\n### Steps to Reproduce\r\n1. git clone https://github.com/xamarin/Xamarin.Forms.git\r\n2. open Xamarin.Forms.SLN\r\n3. set Xamarin.Forms.ControlGallery.Android as startup project\r\n4. run and deploy project\r\n\r\nAt this point I get a crash when the tool bar tries to inflate\r\n\r\nRebuild Xamarin.Forms.ControlGallery.Android\r\nrun and deploy project again\r\n\r\nNow it runs fine\r\n\r\nI'm unable to verify on Alpha because currently XF can't be built on Alpha because a different bug\r\n\r\n\r\n### Expected Behavior\r\n\r\nProject should run and deploy first time without requiring  a rebuild\r\n\r\n### Actual Behavior\r\nRequires a rebuild\r\n\r\n### Version Information\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.6.4 (build 22)\r\nInstallation UUID: 72a6cb22-788b-4376-9a6e-84deacf6730b\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.14 (Visual Studio Enterprise)\r\nHash: 1a6e2786\r\nBranch: \r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.14.0.14 (Visual Studio Enterprise)\r\nHash: 1a6e2786\r\nBranch: HEAD\r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/shane/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706040022\r\nGit revision: c20766ac3664b80b4098ec4181abcc73ea3a4a2c\r\nBuild date: 2018-09-07 17:05:17+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 9c227549870ec221f51f5dfb1f05da688ee71911\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nEditorConfig 1.2\r\n\r\n"},{"Id":"8249085788","Type":"IssuesEvent","CreatedAt":"2018-09-11T20:27:19","Actor":"StevenBonePgh","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2176","RelatedDescription":"Opened issue \"Cannot trust CertificationAuthority for TLS 1.2 ClientWebSocket Connection\" (#2176) at xamarin/xamarin-android","RelatedBody":"No functioning mechanism exists to connect to a websocket using `wss:` and TLS 1.2 when the server is using an otherwise valid certificate issued by a Certification Authority that is not trusted by the Android Device (OS Level).\r\n\r\n### Steps to Reproduce\r\n\r\n1. The documented way to trust a Certification Authority in Android has no effect under Xamarin.Android.\r\n[Apply the `android:networkSecurityConfig=\"@xml/network_security_config\"` attribute to the application element in the AndroidManifest.xml file][3], including resources `Resources\\raw\\sample_ca.pem` `Resources\\xml\\network_security_config.xml`\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n    <network-security-config>\r\n      <base-config>\r\n        <trust-anchors>\r\n          <certificates src=\"@raw/sample_ca\"/>\r\n          <certificates src=\"system\"/>\r\n          <certificates src=\"user\"/>\r\n        </trust-anchors>\r\n      </base-config>\r\n    </network-security-config>\r\n\r\nThis had no visible effect, and I cannot see anything in the debug output that would indicate that the runtime is even loading this. I have seen [references][4] to [messages][5] like this:\r\n\r\n    D/NetworkSecurityConfig: No Network Security Config specified, using platform default\r\n\r\nHowever, with or without this in place I have never seen messages like this or similar.  I really have no idea if it is being applied or not, or if btls implementation even uses/respects this.\r\n\r\nInterestingly, since the Android minSdk is set to 24 and target sdk of 27 I would expect the lack of this declaration should cause TLS 1.2 to *not* work if I simply added the CA to the android device user certificate store. I suspect there are a few Xamarin bugs surrounding this.\r\n\r\n2. Adding the CA Certificate to the X509 Store has no effect, either.\r\n\r\nAdd the CA to the X509 Store, hoping btls uses that as a source of certificates. This approach works on Windows/.NET 4 (it does bring up a dialog to accept the addition of the certificate).\r\n\r\n            X509Store store = new X509Store(StoreName.Root, StoreLocation.CurrentUser);\r\n            store.Open(OpenFlags.ReadWrite);\r\n            var certs = store.Certificates.Find(X509FindType.FindByThumbprint, cert.Thumbprint, false);\r\n            if (certs.Count == 0)\r\n                store.Add(cert);\r\n            store.Close();\r\n\r\n3. `ServicePointManager.ServerCertificateValidationCallback` does not get called.\r\n\r\nThis never gets called in Xamarin Android, but this approach works on Windows/.NET 4.\r\n\r\n    ServicePointManager.ServerCertificateValidationCallback += (sender, certificate, chain, errors) =>\r\n    {\r\n    \tif (errors == SslPolicyErrors.None)\r\n    \t\treturn true;    \r\n    \t//BUGBUG: Obviously there should be a much more extensive check here.\r\n    \tif (certificate.Issuer == caCert.Issuer)\r\n    \t\treturn true;    \r\n    \treturn false;\r\n    };\r\n\r\nThere are [some][6] [Mono][7] issues surrounding btls and a [pull request][8] that makes this approach look possible in the near future.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nI would expect to be able to trust and/or verify (allow) a certificate for a TLS 1.2 connection to a server at the application level, without resorting to OS Level trust configuration, in at least one of the above ways.\r\n\r\nNote that if the homemade CA Cert (.pem or .cer format) has been installed on the android device via Settings->Security->Install from SD Card, the ClientWebSocket connects using TLS 1.2 without problems, as one would expect.  Since this is a global solution to a local problem, not to mention opening a security hole for the larger device ecosystem, I do not wish to require this setup.\r\n \r\n### Actual Behavior\r\nNo mechanism exists to allow a TLS 1.2 connection to succeed when the server's certificate is signed by an untrusted (by OS) CA. \r\n\r\nRegardless of approach above, there is always the same exception thrown by ClientWebSocket.ConnectAsync(): `A call to SSPI failed` and `Ssl error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED at /Users/builder/jenkins/workspace/xamarin-android-d15-8/xamarin-android/external/mono/external/boringssl/ssl/handshake_client.c:1132`\r\n\r\nI created a [sample windows server and console app and Xamarin.Forms Android app][2] that demonstrates the issue and the attempts to workaround it described above. Included is a custom CA cert.  The server code dynamically issues a client cert with SANs bound to your IP/hostnames for ease of repro. \r\n\r\nClient Environment is Xamarin Android Native TLS 1.2 SSL/TLS implementation ([boringssl][1] aka btls), using System.Net.WebSockets.ClientWebSocket. This is running on an Android 7.0 device. Visual Studio 2017 15.8.1, Xamarin.Android 9.0.0.18.\r\n\r\nServer Environment is Windows .NET 4.7 running Fleck (WebSocket server) configured with TLS 1.2 using a certificate issued by a homemade (non-trusted anywhere on the globe) Certificate Authority (CA).\r\n\r\nThis was [posted to StackOverflow][10] 20 days ago, and since there are one or more potential bugs involved, I raised it here as well.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Enterprise 2017\r\nVersion 15.8.3\r\nVisualStudio.15.Release/15.8.3+28010.2019\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools 00369-60000-00001-AA256\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017 00369-60000-00001-AA256\r\nMicrosoft Visual C++ 2017\r\n\r\nASP.NET and Web Tools 2017 15.8.05077.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services 15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017 5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAtomineer Pro Documentation 1.0\r\nSource-code documentation-comment creation and maintenance, and other documentation-related tools.\r\n\r\nAzure App Service Tools v3.0.0 15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools 2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools 1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus 1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nGitHub.VisualStudio 2.5.5.3913\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nIntelliCode Extension 1.0\r\nIntelliCode Extension\r\n\r\nIntellicodePackage Extension 1.0\r\nIntellicodePackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service 2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System 2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.2.1 Build 182.0.20180829.63240\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio 0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger 1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager 1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger 1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards 1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers 1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package 1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension 1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio 4.11.8-pre (009db7d)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools 1.4.20802.1 Commit Hash:97e1085d8b4b8e3e51c398e910177f87e86d135e\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager 4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOzCode 1.0\r\nYour road to Magical Debugging. http://www.oz-code.com\r\n\r\nOzCodePackage Extension 1.0\r\nOzCodePackage Visual Studio Extension Detailed Info\r\n\r\nPendletron.Vsix.LocateInTFS 1.0\r\nOpens the source control explorer for the currently selected item\r\n\r\nProjectServicesPackage Extension 1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension 1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension 1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSandcastle Help File Builder SHFB\r\nVisual Studio integration for the Sandcastle Help File Builder.\r\nhttps://GitHub.com/EWSoftware/SHFB\r\n\r\nSQL Server Data Tools 15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQL Server Reporting Services 14.0.1016.285\r\nMicrosoft SQL Server Reporting Services Designers\r\nVersion 14.0.1016.285\r\n\r\nSQLite & SQL Server Compact Toolbox 4.7\r\nSQLite & SQL Server Compact Toolbox adds scripting, import, export, rename, query execution and much more to SQL Server Compact & SQLite Data Connections.\r\n\r\ntangible T4 Editor 2.4.0\r\ntangible engineering GmbH\r\n\r\nTFS Source Control Explorer Extension 1.0\r\nVisual Studio Extension for Team Foundation Server Source Control Explorer\r\n\r\nTypeScript Tools 15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Assist\r\nFor more information about Visual Assist, see the Whole Tomato Software website at http://www.WholeTomato.com. Copyright (c) 1997-2018 Whole Tomato Software, Inc.\r\n\r\nVisual Basic Tools 2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android) 15.0.27924.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS) 15.0.27825.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual F# Tools 10.2 for F# 4.5 15.8.0.0. Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package 1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova 15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for CMake 1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers 1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps 15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac 1.0\r\nMac Extension for Visual Studio\r\n\r\nWiX Toolset Visual Studio Extension 0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n\r\nXamarin 4.11.0.758 (d15-8-xcode10@309af5cf6)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer 4.14.253 (f2941f7cb)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates 1.1.116 (9619170)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK 9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK 11.99.3.539 (1d5c334)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\r\n  [1]: https://tirania.org/blog/archive/2016/Sep-30.html\r\n  [2]: https://github.com/StevenBonePgh/XamarinWebsocketTls\r\n  [3]: https://developer.android.com/training/articles/security-config\r\n  [4]: https://stackoverflow.com/questions/43486939/no-network-security-config-specified-using-platform-default\r\n  [5]: https://stackoverflow.com/questions/41365334/networksecurityconfig-no-network-security-config-specified-android-7-0-error/41365406#41365406\r\n  [6]: https://github.com/mono/mono/issues/8660\r\n  [7]: https://github.com/mono/mono/issues/8307\r\n  [8]: https://github.com/mono/mono/pull/10134\r\n  [9]: https://docs.microsoft.com/en-us/dotnet/api/system.net.websockets.clientwebsocket.options\r\n  [10]: https://stackoverflow.com/questions/51967177/xamarin-android-native-tls-clientwebsocket-with-custom-certificate-authority"},{"Id":"8248949371","Type":"IssuesEvent","CreatedAt":"2018-09-11T20:01:47","Actor":"StevenBonePgh","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2175","RelatedDescription":"Opened issue \"MethodInfo.ReturnParameter.IsDefined(type) throws IndexOutOfRangeException\" (#2175) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. MethodInfo.ReturnParameter.IsDefined(type) throws IndexOutOfRangeException\r\n```\r\nType type = typeof(object);\r\nMethodInfo method = type.GetMethod(\"ToString\");\r\nParameterInfo paramInfo = method.ReturnParameter;\r\nbool defined = paramInfo.IsDefined(typeof(Attribute)); //throws\r\n```\r\n### Expected Behavior\r\nFor the sample above, `defined` should be false.\r\n### Actual Behavior\r\nException thrown:\r\n```\r\n{System.IndexOutOfRangeException} \"Index was outside the bounds of the array.\"\r\n  at System.Attribute.InternalParamIsDefined (System.Reflection.ParameterInfo parameter, System.Type attributeType, System.Boolean inherit) [0x0003b] in <43dbbdc147f2482093d8409abb04c233>:0 \r\n  at System.Attribute.IsDefined (System.Reflection.ParameterInfo element, System.Type attributeType, System.Boolean inherit) [0x00071] in <43dbbdc147f2482093d8409abb04c233>:0 \r\n  at System.Attribute.IsDefined (System.Reflection.ParameterInfo element, System.Type attributeType) [0x00000] in <43dbbdc147f2482093d8409abb04c233>:0 \r\n  at System.Reflection.CustomAttributeExtensions.IsDefined (System.Reflection.ParameterInfo element, System.Type attributeType) [0x00000] in <43dbbdc147f2482093d8409abb04c233>:0 \r\n```\r\nFirst seen in issue [Code-Sharp/WampSharp/issues/268](https://github.com/Code-Sharp/WampSharp/issues/268). Workaround was to replace usage with `MethodInfo.ReturnParameter.GetCustomAttribute<>()` This is likely an issue with the underlying implementation on Mono, although I have only reported it here as I can reproduce it easily on current toolchain for Xamarin.Android and do not have a suitable Mono playground.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.3\r\nVisualStudio.15.Release/15.8.3+28010.2019\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA256\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-60000-00001-AA256\r\nMicrosoft Visual C++ 2017\r\n\r\nASP.NET and Web Tools 2017   15.8.05077.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAtomineer Pro Documentation   1.0\r\nSource-code documentation-comment creation and maintenance, and other documentation-related tools.\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nGitHub.VisualStudio   2.5.5.3913\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Extension\r\n\r\nIntellicodePackage Extension   1.0\r\nIntellicodePackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.2.1   Build 182.0.20180829.63240\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.8-pre (009db7d)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.20802.1 Commit Hash:97e1085d8b4b8e3e51c398e910177f87e86d135e\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOzCode   1.0\r\nYour road to Magical Debugging. http://www.oz-code.com\r\n\r\nOzCodePackage Extension   1.0\r\nOzCodePackage Visual Studio Extension Detailed Info\r\n\r\nPendletron.Vsix.LocateInTFS   1.0\r\nOpens the source control explorer for the currently selected item\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSandcastle Help File Builder   SHFB\r\nVisual Studio integration for the Sandcastle Help File Builder.\r\nhttps://GitHub.com/EWSoftware/SHFB\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQL Server Reporting Services   14.0.1016.285\r\nMicrosoft SQL Server Reporting Services Designers \r\nVersion 14.0.1016.285\r\n\r\nSQLite & SQL Server Compact Toolbox   4.7\r\nSQLite & SQL Server Compact Toolbox adds scripting, import, export, rename, query execution and much more to SQL Server Compact & SQLite Data Connections.\r\n\r\ntangible T4 Editor   2.4.0\r\ntangible engineering GmbH\r\n\r\nTFS Source Control Explorer Extension   1.0\r\nVisual Studio Extension for Team Foundation Server Source Control Explorer\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Assist   \r\nFor more information about Visual Assist, see the Whole Tomato Software website at http://www.WholeTomato.com. Copyright (c) 1997-2018 Whole Tomato Software, Inc.\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27924.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.27825.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWiX Toolset Visual Studio Extension   0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n\r\nXamarin   4.11.0.758 (d15-8-xcode10@309af5cf6)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.253 (f2941f7cb)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.116 (9619170)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.99.3.539 (1d5c334)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8250431955","Type":"IssuesEvent","CreatedAt":"2018-09-12T02:43:54","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3763","RelatedDescription":"Opened issue \"Gesture Commands do not fire in TitleView\" (#3763) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI can use a `TapGestureRecognizer` on my `Image` within `TitleView`, but only with the `Tapped` event. When using `Command` it doesn't fire.\r\n\r\n**Works:**\r\n```\r\n<NavigationPage.TitleView>\r\n        <StackLayout Orientation=\"Horizontal\" VerticalOptions=\"Center\" Spacing=\"10\">\r\n            <Image Source=\"iconXamagon.png\">\r\n                <Image.GestureRecognizers>\r\n                    <TapGestureRecognizer Tapped=\"Handle_Tapped\"/>\r\n                </Image.GestureRecognizers>\r\n            </Image>\r\n            <Label Text=\"3.2.0\" FontSize=\"16\" TextColor=\"Black\" VerticalTextAlignment=\"Center\" />\r\n        </StackLayout>\r\n        \r\n    </NavigationPage.TitleView>\r\n```\r\n\r\n**Does NOT Work:**\r\n```\r\n<NavigationPage.TitleView>\r\n        <StackLayout Orientation=\"Horizontal\" VerticalOptions=\"Center\" Spacing=\"10\">\r\n            <Image Source=\"iconXamagon.png\">\r\n                <Image.GestureRecognizers>\r\n                    <TapGestureRecognizer  \r\n                            Command=\"{Binding TapCommand, Mode=OneWay}\"\r\n                            CommandParameter=\"https://www.xamarin.com\"/>\r\n                </Image.GestureRecognizers>\r\n            </Image>\r\n            <Label Text=\"3.2.0\" FontSize=\"16\" TextColor=\"Black\" VerticalTextAlignment=\"Center\" />\r\n        </StackLayout>\r\n        \r\n    </NavigationPage.TitleView>\r\n```\r\n\r\nThe `TapCommand` above works elsewhere on the page. I would like it to work in this scenario also.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0-pre3\r\n- Tested iOS and Android\r\n\r\n"},{"Id":"8249844074","Type":"IssuesEvent","CreatedAt":"2018-09-11T23:21:27","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3758","RelatedDescription":"Closed issue \"Bindable property of the control is not updated, if the property in the view model is assigned to the BindableProperty of the control\" (#3758) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nBindable property of the control is not updated, if the property in the view model is assigned to the BindableProperty of the control\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample attached \r\n2. From the output, you could observe that ListView will be empty\r\n3. Now, comment the line in which ItemSource is set to the ListView and uncomment the line in which ItemsSource is binded to the property in the ViewModel.\r\n4. Now run the sample, you could find that the ListView will be populated.\r\n\r\n### Expected Behavior\r\nBindable property of the control **should be updated**, if the property in the view model is assigned to the BindableProperty of the control. \r\n### Actual Behavior\r\nBindable property of the control **is not updated**, if the property in the view model is assigned to the BindableProperty of the control. \r\n### Basic Information\r\n\r\n- Version with issue: 2.4.0.282\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: Xamarin.Forms\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[Demo.zip](https://github.com/xamarin/Xamarin.Forms/files/2370823/Demo.zip)\r\n\r\n"},{"Id":"8249569697","Type":"PullRequestEvent","CreatedAt":"2018-09-11T22:05:07","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3323","RelatedDescription":"Merged pull request \"[UWP] Fixes CollectionChanged events in ListView\" (#3323) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`CollectionChanged` events are fired, when collection changed in user code.\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #3273 \r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Platforms Affected ###\r\n\r\n- UWP\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8249569694","Type":"IssuesEvent","CreatedAt":"2018-09-11T22:05:07","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3273","RelatedDescription":"Closed issue \"UWP Regression: Drag and drop reordering not firing CollectionChanged\" (#3273) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nReordering UWP list view using drag and drop, CollectionChanged events are not fired. This appears to have regressed between 3.0.0.482510 and 3.0.0.530893. In 482510 it was firing both a Remove and an Add event. In 530893 it stopped firing any events on a drag and drop reorder. The latest 3.1 version does not fix the issue.\r\n\r\n### Steps to Reproduce\r\n1. Run the attached app using a UWP ListView renderer with drag and drop reordering enabled on build 482510. Note that Add and Remove events fire on a reorder.\r\n2. Run the attached app on build 530893. Note that **_no_** events fire on a reorder.\r\n\r\n### Expected Behavior\r\nAdd and Remove events should be dispatched on a drag and drop reorder.\r\n\r\n### Actual Behavior\r\nNo events are dispatched.\r\n\r\n### Basic Information\r\n- Version with issue: >= 3.0.0.530893\r\n- Last known good version: 3.0.0.482510\r\n- IDE: VS2017\r\n- Platform Target Frameworks: \r\n  - UWP:  10.0.16299.309\r\n- Nuget Packages: Xamarin.Forms\r\n- Affected Devices: UWP devices\r\n\r\n### Reproduction Link\r\n[ReorderNotCallingCollectionChanged.zip](https://github.com/xamarin/Xamarin.Forms/files/2181722/ReorderNotCallingCollectionChanged.zip)\r\n"},{"Id":"8249439418","Type":"IssuesEvent","CreatedAt":"2018-09-11T21:35:54","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3718","RelatedDescription":"Closed issue \"[Feedback] VS2017 enterprise check Budle Assemblies into Native Code, Localization not work\" (#3718) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\\r\\n\\r\\n\n<p>xamarin.forms , Currently when build release Xamarin Android Apk then install app on device,it is run well ,but Localization is not work, it is only show system language(chinese) and english,when I change language to Korean ,it is show english not\nKorean .\nwhen i not check Budle Assemblies into Native Code,it is run well for Localization .\n\nproject  See Attachment\n\nSteps:\n1.select release mode,check Budle Assemblies into \n   Native Code ,then generate project\n2.Archive the project and distribute\n3.Install app on device,then open app, change \n   language\n\n\nhope get help,thanks!</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/267954/vs2017-enterprise-check-budle-assemblies-into-nati-1.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/627183\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[661459](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/661459)"},{"Id":"8249332697","Type":"PullRequestEvent","CreatedAt":"2018-09-11T21:13:46","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3762","RelatedDescription":"Opened pull request \"WPF - Fix Unable to intercept back button\" (#3762) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n Fix  : Unable to intercept back button.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3689\r\n\r\n### Platforms Affected ### \r\n\r\n- WPF"},{"Id":"8249194713","Type":"PullRequestEvent","CreatedAt":"2018-09-11T20:47:44","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3761","RelatedDescription":"Opened pull request \"WPF - Fix Binding Icon in ToolbarItem in TabbedPage doesn't refresh\" (#3761) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFIX : Binding an icon in a ToolbarItem in a TabbedPage doesn't refresh when the binding changes. Even changing the icon directly doesn't work. Only way is to remove the ToolbarItem, change it and add it again.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3756\r\n\r\n### Platforms Affected ### \r\n\r\n- WPF"},{"Id":"8248905802","Type":"IssuesEvent","CreatedAt":"2018-09-11T19:53:44","Actor":"Jose7777","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3748","RelatedDescription":"Closed issue \"[iOS] EntryRenderer ArgumentNullException: Value cannot be null. Parameter name: fromPosition\" (#3748) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThere seems to be a problem with new SelectionLength functionality in XF 3.2\r\n\r\nMy solution opens a complex page from an initial page; for performance reasons i cache the instance of the complex page.\r\n\r\nWith 3.2-pre2, when i push the page a second time after editing an Entry with nonempty value, the application crashes.\r\nIf the entry is not edited there is no crash.\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo crash\r\n\r\n\r\n### Actual Behavior\r\n\r\nCrash with following stacktrace\r\n\r\nUnhandled Exception:\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: fromPosition\r\n  at UIKit.UITextField.GetPosition (UIKit.UITextPosition fromPosition, System.nint offset) [0x0003d] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UITextField.g.cs:574 \r\n  at Xamarin.Forms.Platform.iOS.EntryRenderer.UpdateCursorSelection () [0x00066] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\EntryRenderer.cs:345 \r\n  at Xamarin.Forms.Platform.iOS.EntryRenderer.OnElementChanged (Xamarin.Forms.Platform.iOS.ElementChangedEventArgs`1[TElement] e) [0x00124] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\EntryRenderer.cs:116 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x0012a] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.Vi\r\nsualElement element) [0x00000] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnChildAdded (Xamarin.Forms.VisualElement view) [0x0003d] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:97 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.Load () [0x0001e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:46 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x000de] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\r\n\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnChildAdded (Xamarin.Forms.VisualElement view) [0x0003d] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:97 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.Load () [0x0001e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:46 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x000de] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnChildAdded (Xamarin.Forms.VisualElement view) [0x0003d] in D:\\a\\1\\s\\Xamari\r\nn.Forms.Platform.iOS\\VisualElementPackager.cs:97 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.Load () [0x0001e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:46 \r\n  at Xamarin.Forms.Platform.iOS.PageRenderer.ViewDidLoad () [0x00086] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\PageRenderer.cs:123 \r\n  at (wrapper managed-to-native) ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper(intptr,intptr)\r\n  at UIKit.UIViewController.get_View () [0x0002a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UIViewController.g.cs:2938 \r\n  at Xamarin.Forms.Platform.iOS.PageRenderer.get_NativeView () [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\PageRenderer.cs:41 \r\n  at Xamarin.Forms.Platform.iOS.PageRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x0004f] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\PageRenderer.cs:56 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\\a\\1\\s\\Xama\r\nrin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.TabbedRenderer.SetupPage (Xamarin.Forms.Page page, System.Int32 index) [0x0000a] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\TabbedRenderer.cs:289 \r\n  at Xamarin.Forms.Platform.iOS.TabbedRenderer.Reset () [0x0001c] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\TabbedRenderer.cs:266 \r\n  at Xamarin.Forms.Internals.NotifyCollectionChangedEventArgsExtensions.Apply (System.Collections.Specialized.NotifyCollectionChangedEventArgs self, System.Action`3[T1,T2,T3] insert, System.Action`2[T1,T2] removeAt, System.Action reset) [0x001f9] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Internals\\NotifyCollectionChangedEventArgsExtensions.cs:79 \r\n  at Xamarin.Forms.Platform.iOS.TabbedRenderer.OnPagesChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\TabbedRenderer.cs:201 \r\n  at Xamarin.Forms.Platform.iOS.TabbedRenderer.SetElement (Xamarin.Forms.VisualElement el\r\nement) [0x0005b] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\TabbedRenderer.cs:66 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.NavigationRenderer.CreateViewControllerForPage (Xamarin.Forms.Page page) [0x00008] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\NavigationRenderer.cs:353 \r\n  at Xamarin.Forms.Platform.iOS.NavigationRenderer+<OnPushAsync>d__51.MoveNext () [0x0001d] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\NavigationRenderer.cs:340 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threa\r\n at Xamarin.Forms.NavigationPage+<PushAsyncInner>d__84.MoveNext () [0x00085] in D:\\a\\1\\s\\Xamarin.Forms.Core\\NavigationPage.cs:398 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservi\r\nding.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:357 \r\n \r\nces/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:113 \r\n  at Xamarin.Forms.NavigationPage+<PushAsync>d__55.MoveNext () [0x0014e] in D:\\a\\1\\s\\Xamarin.Forms.Core\\NavigationPage.cs:223 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.Compi\r\nlerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/r\r\nuntime/compilerservices/TaskAwaiter.cs:113 \r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2- pre2\r\n- Last known good version: 3.1\r\n- IDE: Visual Studio 2017\r\n- iOS:  11.10"},{"Id":"8248497860","Type":"IssuesEvent","CreatedAt":"2018-09-11T18:37:19","Actor":"GeoffreyFook","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3760","RelatedDescription":"Opened issue \"System.IndexOutOfRange: Index was outside the bounds of the array at Mono.Cecil.MetadataReader.ReadLocalConstant\" (#3760) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI am unable to debug my application. I am getting an \"IndexOutOfRangeException\" whenever the debugger hits one of my break points in android. The problem seems to go away if I avoid using linq or keep my code extremely simple. \r\n\r\nFor example:\r\n```\r\nif(someVariable == true)  ---> this does not break.\r\n{\r\n\r\n}\r\n\r\n```\r\ninstead of\r\n```\r\nif(someVariable) ----> This does.\r\n{\r\n}\r\n\r\n```\r\n### Steps to Reproduce\r\n\r\nI am unsure on the steps to reproduce this. I am running an emulator using haxm (I have tried multiple), Android 8.1 as target framework. Xamarin.forms version 3.1.0.697729.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: Unsure\r\n- IDE: Visual studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n\r\n  - Android: 8.1\r\n\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: \r\n\r\nAuth0.Oidc.Client.Android v2.3\r\nPlugin.CurrentActivity 2.1.04\r\nsqlite-net-pcl: 1.4.188\r\nXam.Plugin.Geolocator: 4.5.0.6\r\nXam.Plugin.Media: v4.0.1.5\r\nXam.Plugins.Forms.ImageCircle: v.3.0.0.5\r\nXamarin.Android.Support.Design: v.27.0.2.1\r\nXamarin.Android.Support.v4: v27.0.2.1\r\nXamarin.Android.Support.v7.AppCompat: v27.0.2.1\r\nXamarin.Android.Support.v7.CardView: v.27.0.2.1\r\nXamarin.Android.Support.v7.MediaRouter: v.27.0.2.1\r\nXamarin.Forms: v3.1.0.697729\r\nXamarin.Forms.Maps: v2.5.0.077107\r\nXamarin.GooglePlayServices.Maps: v60.1142.1\r\nXamarin.GooglePlayServices.Places: v60.1142.1\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/39644464/45380056-08492000-b602-11e8-9ccd-4ab1b7e7e8e7.png)\r\n\r\n### Reproduction Link\r\n\r\n"},{"Id":"8247867098","Type":"IssuesEvent","CreatedAt":"2018-09-11T16:42:49","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3755","RelatedDescription":"Closed issue \"[UWP] Xamarin forms entry buffering on fast keyboard entry\" (#3755) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nA xamarin forms page with simple entry component, type very fast, on UWP you will see characters are not being displayed, but will be displayed when subsequently entering keys.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create standard xamarin app with visual studio from template\r\n2. put entry component on mainpage.xaml\r\n3. deploy on windows device (tested on atom z2*** and z8*** family)\r\n\r\n### Expected Behavior\r\nexpected to see all entered characters\r\n\r\n### Actual Behavior\r\nslowly showing buffered characters.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.1.0697729\r\n- Last known good version: ??\r\n- IDE: Visual studio 2017\r\n- Platform Target Frameworks: \r\n  - iOS:  works fine\r\n  - Android: works fine\r\n  - UWP:  W10 pro 1803 build 17134\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: All standard from visual studio template\r\n- Affected Devices: Atom Z2*** and Z8*** family tablets.\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8250104827","Type":"PullRequestEvent","CreatedAt":"2018-09-12T00:49:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4787","RelatedDescription":"Merged pull request \"[d15-9] Bump Mono\" (#4787) at xamarin/xamarin-macios","RelatedBody":"Backport of #4779.\n\n/cc @directhex"},{"Id":"8249191600","Type":"PullRequestEvent","CreatedAt":"2018-09-11T20:47:08","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4789","RelatedDescription":"Opened pull request \"[healthkit] Add [NullAllowed] to RequestAuthorizationToShare\" (#4789) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8249164599","Type":"IssuesEvent","CreatedAt":"2018-09-11T20:42:01","Actor":"alexkblount","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4619","RelatedDescription":"Reopened issue \"Interface Builder - Not able to create outlets\" (#4619) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new Xamarin iOS Application\r\n2. Right Click Storyboard\r\n3. Open in Interface Builder\r\n4. Create a control in your ViewController\r\n5. Connect this to the code behind using CMD Drag\r\n\r\n### Expected Behavior\r\n\r\nOutlet should be created in the header file of the ViewController\r\n\r\n### Actual Behavior\r\n\r\nError: Could not insert new outlet connection: Could not find any information for the class ViewController\r\n\r\n### Environment\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.4 (build 3)\r\nInstallation UUID: 59e8a0c2-a674-42a6-b852-843de896e0eb\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.1.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Version: 2.1.301\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/blounty/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Enterprise)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705040003\r\nGit revision: 6ae731889c896d6733efb8ff5117f5bf5b17b509\r\nBuild date: 2018-07-19 13:07:45-04\r\nXamarin addins: 417fed09624e1e1f76ab0a11e8b97ffd8bbf91e1\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n<img width=\"1513\" alt=\"screen shot 2018-08-14 at 11 01 05 am\" src=\"https://user-images.githubusercontent.com/30159621/44109241-63689946-9fb1-11e8-94c7-613b646933a7.png\">\n\n> VS bug [#664435](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/664435)"},{"Id":"8249032438","Type":"IssuesEvent","CreatedAt":"2018-09-11T20:17:25","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4788","RelatedDescription":"Closed issue \"[iOS 12] Permissions error when attempting to access HKClinicalType data\" (#4788) at xamarin/xamarin-macios","RelatedBody":"I am attempting to utilize some of the new HealthKit features in a Xamarin.Forms app running on iOS. There was a prior issue (#4657) which has been resolved, and I am able to get the `HKClinicalType`, but when requesting access to the data via `RequestAuthorizationToShare` it throws an error:\r\n\r\n>Foundation.MonoTouchException: Objective-C exception thrown.  Name: NSInvalidArgumentException Reason: Authorization to read the following types is disallowed: HKClinicalTypeIdentifierAllergyRecord\r\nNative stack trace:\r\n\t0   CoreFoundation                      0x0000000117bf729b __exceptionPreprocess + 331\r\n\t1   libobjc.A.dylib                     0x0000000118933735 objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x0000000117bf70f5 +[NSException raise:format:] + 197\r\n\t3   HealthKit                           0x000000010fa57ec0 -[HKHealthStore _throwIfAuthorizationDisallowedForSharing:types:] + 540\r\n\t4   HealthKit                           0x000000010fa56912 -[HKHealthStore _validateAuthorizationRequestWithShareTypes:readTypes:] + 224\r\n\t5   HealthKit                           0x000000010fa56a82 -[HKHealthStore requestAuthorizationToShareTypes:readTypes:shouldPrompt:completion:] + 321\r\n\t6   HealthKit                           0x000000010fa5680f -[HKHealthStore requestAuthorizationToShareTypes:readTypes:completion:] + 77\r\n\t7   HealthRecordsSample.iOS             0x000000010a6f76e9 xamarin_dyn_objc_msgSend + 217\r\n\t8   ???                                 0x000000013d25413e 0x0 + 5320819006\r\n\r\nThe clinical types are read only, so they should be passed in as the second argument when requesting authorization, like so:\r\n\r\n`healthKitStore.RequestAuthorizationToShare(new NSSet(), new NSSet(new[] { allergyType }), ReactToHealthCarePermissions);`\r\n\r\nUsing older sample code and requesting types such as heart rate works (specifically using code from [these docs](https://docs.microsoft.com/en-us/xamarin/ios/platform/healthkit#permissions-walkthrough), so the entitlements and Info.plist values should presumably be correct (there is always a chance that this is not the case, however). The simulator and device (configured in provisioning to work with my iPhone X) both fail. \r\n\r\n[Apple's docs](https://developer.apple.com/documentation/healthkit/health_and_fitness_samples/accessing_health_records) for reference.\r\n\r\nI will attach two samples; one is the C# app in Xamarin.Forms (using a `DependencyService` to access the iOS feature), the other a Swift-based app.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run each app, respectively\r\n2. Click the button to request permissions\r\n\r\n### Expected Behavior\r\n\r\nBoth should request permissions for clinical data\r\n\r\n### Actual Behavior\r\n\r\nThe Xamarin.Forms app fails, and the Swift app does not\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.6.1 (build 7)\r\nInstallation UUID: 36f8475d-6533-435d-b0bf-f4b14538d280\r\nRuntime:\r\n\tMono 5.12.0.305 (2018-02/e0e035e3b14) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000305\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.0.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.2\r\n\t1.0.0-preview2-003131\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.0.18 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/paul/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.0\r\nSDK Build Tools Version: 26.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_91\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_91-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.12.2)\r\nBuild 10L232m\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.3.658 (Visual Studio Enterprise)\r\nHash: 1eefd4e3\r\nBranch: \r\nBuild date: 2018-08-21 15:01:53-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.3.538 (Visual Studio Enterprise)\r\nHash: 1eefd4e3\r\nBranch: HEAD\r\nBuild date: 2018-08-21 15:01:52-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706010007\r\nGit revision: 7c9e755fe667840f2eed42b2e7910ec18ef51b82\r\nBuild date: 2018-08-24 02:25:33+00\r\nBuild branch: release-7.6-xcode10\r\nXamarin extensions: 1196f085605a84ce99f390a1aaee0bf257d31a50\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nLiveXAML 1.3.31\r\nNuGet Package Management Extensions 0.13\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\n\r\nNone at this time.\r\n\r\n### Example Project (If Possible)\r\n\r\n[HealthRecordsSampleForms.zip](https://github.com/xamarin/xamarin-macios/files/2372516/HealthRecordsSampleForms.zip)\r\n\r\n[HealthRecordsTest.zip](https://github.com/xamarin/xamarin-macios/files/2372420/HealthRecordsTest.zip)\r\n"},{"Id":"8248801259","Type":"IssuesEvent","CreatedAt":"2018-09-11T19:33:51","Actor":"pauldipietro","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4788","RelatedDescription":"Opened issue \"[iOS 12] Permissions error when attempting to access HKClinicalType data\" (#4788) at xamarin/xamarin-macios","RelatedBody":"I am attempting to utilize some of the new HealthKit features in a Xamarin.Forms app running on iOS. There was a prior issue (#4657) which has been resolved, and I am able to get the `HKClinicalType`, but when requesting access to the data via `RequestAuthorizationToShare` it throws an error:\r\n\r\n>Foundation.MonoTouchException: Objective-C exception thrown.  Name: NSInvalidArgumentException Reason: Authorization to read the following types is disallowed: HKClinicalTypeIdentifierAllergyRecord\r\nNative stack trace:\r\n\t0   CoreFoundation                      0x0000000117bf729b __exceptionPreprocess + 331\r\n\t1   libobjc.A.dylib                     0x0000000118933735 objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x0000000117bf70f5 +[NSException raise:format:] + 197\r\n\t3   HealthKit                           0x000000010fa57ec0 -[HKHealthStore _throwIfAuthorizationDisallowedForSharing:types:] + 540\r\n\t4   HealthKit                           0x000000010fa56912 -[HKHealthStore _validateAuthorizationRequestWithShareTypes:readTypes:] + 224\r\n\t5   HealthKit                           0x000000010fa56a82 -[HKHealthStore requestAuthorizationToShareTypes:readTypes:shouldPrompt:completion:] + 321\r\n\t6   HealthKit                           0x000000010fa5680f -[HKHealthStore requestAuthorizationToShareTypes:readTypes:completion:] + 77\r\n\t7   HealthRecordsSample.iOS             0x000000010a6f76e9 xamarin_dyn_objc_msgSend + 217\r\n\t8   ???                                 0x000000013d25413e 0x0 + 5320819006\r\n\r\nThe clinical types are read only, so they should be passed in as the second argument when requesting authorization, like so:\r\n\r\n`healthKitStore.RequestAuthorizationToShare(new NSSet(), new NSSet(new[] { allergyType }), ReactToHealthCarePermissions);`\r\n\r\nUsing older sample code and requesting types such as heart rate works (specifically using code from [these docs](https://docs.microsoft.com/en-us/xamarin/ios/platform/healthkit#permissions-walkthrough), so the entitlements and Info.plist values should presumably be correct (there is always a chance that this is not the case, however). The simulator and device (configured in provisioning to work with my iPhone X) both fail. \r\n\r\n[Apple's docs](https://developer.apple.com/documentation/healthkit/health_and_fitness_samples/accessing_health_records) for reference.\r\n\r\nI will attach two samples; one is the C# app in Xamarin.Forms (using a `DependencyService` to access the iOS feature), the other a Swift-based app.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run each app, respectively\r\n2. Click the button to request permissions\r\n\r\n### Expected Behavior\r\n\r\nBoth should request permissions for clinical data\r\n\r\n### Actual Behavior\r\n\r\nThe Xamarin.Forms app fails, and the Swift app does not\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.6.1 (build 7)\r\nInstallation UUID: 36f8475d-6533-435d-b0bf-f4b14538d280\r\nRuntime:\r\n\tMono 5.12.0.305 (2018-02/e0e035e3b14) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000305\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.0.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.2\r\n\t1.0.0-preview2-003131\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.0.18 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/paul/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.0\r\nSDK Build Tools Version: 26.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_91\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_91-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.12.2)\r\nBuild 10L232m\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.3.658 (Visual Studio Enterprise)\r\nHash: 1eefd4e3\r\nBranch: \r\nBuild date: 2018-08-21 15:01:53-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.3.538 (Visual Studio Enterprise)\r\nHash: 1eefd4e3\r\nBranch: HEAD\r\nBuild date: 2018-08-21 15:01:52-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706010007\r\nGit revision: 7c9e755fe667840f2eed42b2e7910ec18ef51b82\r\nBuild date: 2018-08-24 02:25:33+00\r\nBuild branch: release-7.6-xcode10\r\nXamarin extensions: 1196f085605a84ce99f390a1aaee0bf257d31a50\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nLiveXAML 1.3.31\r\nNuGet Package Management Extensions 0.13\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\n\r\nNone at this time.\r\n\r\n### Example Project (If Possible)\r\n\r\n[HealthRecordsSampleForms.zip](https://github.com/xamarin/xamarin-macios/files/2372422/HealthRecordsSampleForms.zip)\r\n\r\n[HealthRecordsTest.zip](https://github.com/xamarin/xamarin-macios/files/2372420/HealthRecordsTest.zip)\r\n"},{"Id":"8248723313","Type":"PullRequestEvent","CreatedAt":"2018-09-11T19:18:41","Actor":"xamarin-jenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4787","RelatedDescription":"Opened pull request \"[d15-9] Bump Mono\" (#4787) at xamarin/xamarin-macios","RelatedBody":"Backport of #4779.\n\n/cc @directhex"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":75,"FavoriteCount":45,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":43,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":86,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":46,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-12T05:30:53.6318515Z","RunDurationInMilliseconds":3946}