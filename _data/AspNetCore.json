{"Data":{"Blog":{"FeedItems":[{"Title":"Learn how to do Image Recognition with Cognitive Services and ASP.NET","PublishedOn":"2018-02-05T21:27:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With all the talk about artificial intelligence (AI) and machine learning (ML) doing crazy things, it’s easy to be left wondering, “what are practical ways I can use this today?&#8221; It turns out...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/05/learn-how-to-do-image-recognition-with-cognitive-services-and-asp-net/","RawContent":null},{"Title":"ASP.NET Core 2.1 roadmap","PublishedOn":"2018-02-02T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five months ago, we shipped ASP.NET Core 2.0 as a foundational release for our high performance, cross-platform web framework for .NET and .NET Core. Since then we have been hard at work to deliver...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/","RawContent":null},{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7202509034","Type":"IssuesEvent","CreatedAt":"2018-02-06T04:25:54","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2679","RelatedDescription":"Closed issue \"QueryString.Create(...) excludes key when StringValues is empty\" (#2679) at aspnet/Home","RelatedBody":"_From @austindrenski on Thursday, November 16, 2017 3:49:22 PM_\r\n\r\n`QueryString.Create(IEnumerable<KeyValuePair<string, StringValues>> parameters)`  doesn't append a key unless it has associated values. \r\n\r\nThis was unexpected because it means that parsing an incoming query string into an `IEnumerable<KeyValuePair<string, StringValues>>` and then immediately reconstructing a `QueryString` results in information loss.\r\n\r\nWe ran across this after some new middleware attempted to validate parameter values (by treating all query string entries as `KeyValuePair<string, StringValues>`) and unexpectedly removed a key meant to be read as a switch/flag/indicator in the event no values are supplied.\r\n\r\nIs this behavior intentional or defined by a standard? \r\n\r\nhttps://github.com/aspnet/HttpAbstractions/blob/476333771cb7399af13c1368982e2b8abb4318ac/src/Microsoft.AspNetCore.Http.Abstractions/QueryString.cs#L153-L175\r\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#969_"},{"Id":"7201839711","Type":"IssuesEvent","CreatedAt":"2018-02-06T00:30:26","Actor":"livarcocc","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2852","RelatedDescription":"Opened issue \"dotnet SomeAssembly.dll not loading appsettings.json\" (#2852) at aspnet/Home","RelatedBody":"_From @giridharprakash on February 2, 2018 4:46_\n\n## Steps to reproduce\r\ncreate new dotnet core web api project\r\nGet some configuration from appsettings.json in Startup.cs like eg connection string\r\ndotnet publish -c Release\r\nNow go to publish directory and run dotnet Assembly.dll\r\n\r\n## Expected  behavior\r\nWhile debugging in visual studio everything working fine\r\nbut when i run from command line then it's not loading appsettings.json\r\n\r\n## Actual behavior\r\nIn startup.cs connection string is coming as null\r\nvar connectionString = Configuration[\"AppSettings:ConnectionString\"];\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n dotnet --info\r\n.NET Command Line Tools (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.4\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#8523_"},{"Id":"7201205562","Type":"IssuesEvent","CreatedAt":"2018-02-05T21:43:56","Actor":"HaoK","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2827","RelatedDescription":"Closed issue \"Case-insensitive authentication schemes\" (#2827) at aspnet/Home","RelatedBody":"Why are authentication schemes case-sensitive?\r\n\r\nThis means the following code (taken from [the ASP.NET Core 2.0 templates](https://github.com/aspnet/Templates/blob/4fc52aa79ec17511ccd8c1c14b2118797d4045a3/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L307-L313)) doesn't work:\r\n\r\n```csharp\r\npublic IActionResult ExternalLogin(string provider, string returnUrl = null)\r\n{\r\n    // Request a redirect to the external login provider.\r\n    var redirectUrl = Url.Action(nameof(ExternalLoginCallback), \"Account\", new { returnUrl });\r\n    var properties = _signInManager.ConfigureExternalAuthenticationProperties(provider, redirectUrl);\r\n    return Challenge(properties, provider); // <-- Will blow up because of case-sensitive matching.\r\n}\r\n```\r\n\r\nThe code above works for `/login/GitHub`, but not `/login/github`, which is pretty trippy.\r\n\r\nWould you be willing to make this configurable?"},{"Id":"7201101186","Type":"IssuesEvent","CreatedAt":"2018-02-05T21:21:52","Actor":"javiercn","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2411","RelatedDescription":"Closed issue \"SignoutAsync doesn't remove Antiforgery cookie\" (#2411) at aspnet/Home","RelatedBody":"_From @jchannon on Wednesday, November 1, 2017 9:19:52 AM_\r\n\r\nCalling `SignOutAsync(\"MyCookieMW\", authProperties);` only removes the authentication cookie in the app not the antiforgery cookie that is created. \r\n\r\n_Copied from original issue: aspnet/Antiforgery#167_"},{"Id":"7201088518","Type":"IssuesEvent","CreatedAt":"2018-02-05T21:19:03","Actor":"javiercn","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2415","RelatedDescription":"Closed issue \"Using Antiforgery with ASPNET Core API Login Action\" (#2415) at aspnet/Home","RelatedBody":"_From @patricknolan on Wednesday, July 26, 2017 8:38:21 PM_\r\n\r\nI have an ASPNET Core API \\ Angular app. My API needs to support cookies and tokens.\r\n\r\nAfter I login using my service the anti-forgery token returned is not valid as it was created based on a null user. I've tried setting ClaimsPrincipal after my PasswordSignInAsync and regenerating the anti-forgery token (see below) but that still does not work. Any ideas?\r\n\r\n```c#\r\npublic virtual async Task<IActionResult> Login([FromBody] AccountLoginModel model)\r\n{\r\n        var result = await this.SignInManager.PasswordSignInAsync(model.Email, model.Password, isPersistent: model.RememberMe, lockoutOnFailure: false);\r\n        if (!result.Succeeded)\r\n        {\r\n            return this.BadRequest();\r\n        }\r\n        var user = await this.UserManager.FindByEmailAsync(model.Email);\r\n\r\n        // Must manually set the HttpContext user claims to those of the logged\r\n        // in user. Otherwise MVC will still include a XSRF token for the \"null\"\r\n        // user and token validation will fail. (MVC appends the correct token for\r\n        // all subsequent reponses but this isn't good enough for a single page\r\n        // app.)\r\n        var principal = await this.PrincipalFactory.CreateAsync(user);\r\n        this.HttpContext.User = principal;\r\n\r\n        // Update XSRF token\r\n        var tokens = this.Antiforgery.GetAndStoreTokens(this.HttpContext);\r\n\r\n        return this.Ok();\r\n}\r\n```\r\n\r\n\r\n_Copied from original issue: aspnet/Antiforgery#155_"},{"Id":"7200209304","Type":"IssuesEvent","CreatedAt":"2018-02-05T18:17:30","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2851","RelatedDescription":"Opened issue \"[Diagnostics] Consider wrapping Response.OnStarting in error handling miodleware\" (#2851) at aspnet/Home","RelatedBody":"Based on discussion here - https://github.com/aspnet/Mvc/issues/7003#issuecomment-342986502. Mvc uses Response.OnStarting to serialize TempData in the event a ResourceFilter OnResourceExecuted did not get to it first (e.g. if an action directly wrote to the response body). In the event serializing TempData throws (for instance if the value is a type it does not support), the server will return an empty 500 and log the exception. This is because `OnStarting` occurs outside the middleware pipeline and any exception handling middleware has no opportunity to observe the error.\r\n\r\nOne possible solution to this is to wrap `Response.OnStarting` in our error handling middleware implementations and have them show the regular error page.\r\n"},{"Id":"7200183579","Type":"IssuesEvent","CreatedAt":"2018-02-05T18:12:09","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2850","RelatedDescription":"Closed issue \"Vue CLI SPA Template\" (#2850) at aspnet/Home","RelatedBody":"Hello ASP.NET Team,\r\n\r\nI'd like to work on updating the [existing Vue SPA template] to use the new `3.0` version of [`@vue/cli`]. \r\n\r\nBefore I just jumped in, I had some questions:\r\n\r\n- Does updating this template align with your roadmap? If so, what release should I target for/when should I start? I would assume at the very least once `@vue/cli` releases a stable version (it's currently at `3.0.0-alpha.8`), but if I can (or should) start earlier, that's fine as well.\r\n- As I understand, getting the Vue template to work with `@vue/cli` like the Angular and React templates do with their respective CLIs will require changes to both the [aspnet/Templating] and [aspnet/JavaScriptServices] repos. Is there any preferred way to coordinate these contributions? Should I send PRs to both repositories at the same time, or should I wait for one to be merged before sending the other?\r\n- Currently, it appears the Angular and React templates have a `ClientApp` folder consisting of pre-generated output from their respective CLIs. Is this how other SPA CLI-based templates should be created moving forward, or should I look into invoking Vue's CLI `create` command as part of template generation? This would give users more control over the output since `@vue/cli` already has [quite a few substantial choices users can make].\r\n- The Contributing Guide directs me to https://cla2.dotnetfoundation.org to sign the CLA, but that site appears to be down. Is that still the correct place for CLAs?\r\n\r\n[existing Vue SPA template]: https://github.com/aspnet/templating/tree/a4427f5263c78ce7203e727a0bae106f530f22bd/src/Microsoft.AspNetCore.SpaTemplates/content/Vue-CSharp\r\n[`@vue/cli`]: https://github.com/vuejs/vue-cli\r\n[aspnet/Templating]: https://github.com/aspnet/templating\r\n[aspnet/JavaScriptServices]: https://github.com/aspnet/JavaScriptServices\r\n[quite a few substantial choices users can make]: https://github.com/vuejs/vue-cli#creating-a-new-project"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7201930172","Type":"PullRequestEvent","CreatedAt":"2018-02-06T01:00:01","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1410","RelatedDescription":"Opened pull request \"Unskip tests\" (#1410) at aspnet/SignalR","RelatedBody":"@BrennanConroy Added some logging and other fixes so we want to see the results on TeamCity"},{"Id":"7201249759","Type":"PullRequestEvent","CreatedAt":"2018-02-05T21:53:32","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1409","RelatedDescription":"Opened pull request \"Increase ServerFixture startup timeout\" (#1409) at aspnet/SignalR","RelatedBody":"Also adds some code to capture logs during startup and add them to the exception message if the startup times out.\r\n\r\nIt looks like it just sometimes takes longer than 5 seconds to start up on AppVeyor. Given my own tests on a 2 core Azure VM, this isn't terribly surprising."},{"Id":"7201162910","Type":"IssuesEvent","CreatedAt":"2018-02-05T21:35:01","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/553","RelatedDescription":"Closed issue \"Connection ID as a token & date/time in each log line\" (#553) at aspnet/SignalR","RelatedBody":"- [x] - Client\r\n- [x] - Server\r\n- [x] - Remove date/time from logs\r\n- [x] - Add scope\r\n- [ ] - ~~Add log level to function names for readability e.g. `_logger.DebugInvocationReceived`~~"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7202082176","Type":"PullRequestEvent","CreatedAt":"2018-02-06T01:50:52","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7331","RelatedDescription":"Opened pull request \"Add ViewComponentResult helper methods to Page \\ PageModel\" (#7331) at aspnet/Mvc","RelatedBody":"Fixes #7051"},{"Id":"7201253956","Type":"IssuesEvent","CreatedAt":"2018-02-05T21:54:26","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7330","RelatedDescription":"Opened issue \"Consider replacing ActivatorUtilities for TagHelper activation\" (#7330) at aspnet/Mvc","RelatedBody":"For cases that need a new constructor for a class (additional param), in order to avoid a breaking change we add an overload. However, `ActivatorUtilities` does not allow multiple applicable constructors. \r\n\r\n```\r\nMessage: System.InvalidOperationException : Multiple constructors accepting all given argument types have been found in type \r\n'Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper'. There should only be one applicable constructor.\r\n```\r\nThis restricts `TagHelpers` from changing the constructors.\r\n\r\ncc @rynowak "},{"Id":"7200865786","Type":"IssuesEvent","CreatedAt":"2018-02-05T20:31:17","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7328","RelatedDescription":"Closed issue \"MultipartReader Instance Method (ReadNextSectionAsync) throws IOException: Unexpected end of Stream, Error.\" (#7328) at aspnet/Mvc","RelatedBody":"@pranavkm in ref #7227, I've created a sample solution with client and server. It reproduces the exception\r\n\r\n[MultipartReaderError.zip](https://github.com/aspnet/Mvc/files/1691823/MultipartReaderError.zip)\r\n\r\nI have two post urls, they do the same thing (read a multipart stream).\r\nThe only difference between the two methods is that the second as a DI [FromServices] parameter.\r\n\r\n```\r\n        [HttpPost]\r\n        [Route(\"upload\")]\r\n        public async Task<IActionResult> Upload()\r\n        {\r\n            try\r\n            {\r\n                Models.Document document = await this.GetDocumentFromRequest();\r\n            }\r\n            catch(Exception ex)\r\n            {\r\n                _logger.LogError(ex, ex.Message);\r\n                return StatusCode(StatusCodes.Status500InternalServerError);\r\n            }\r\n\r\n            return Ok();\r\n        }\r\n\r\n        [HttpPost]\r\n        [Route(\"upload_with_exception\")]\r\n        public async Task<IActionResult> UploadWithException([FromServices] DocumentService docSvc)\r\n        {\r\n            try\r\n            {\r\n                Models.Document document = await this.GetDocumentFromRequest();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                _logger.LogError(ex, ex.Message);\r\n                return StatusCode(StatusCodes.Status500InternalServerError);\r\n            }\r\n\r\n            return Ok();\r\n        }\r\n```"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7201373478","Type":"PullRequestEvent","CreatedAt":"2018-02-05T22:21:21","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1615","RelatedDescription":"Merged pull request \"Refresh user signin after updating their profile\" (#1615) at aspnet/Identity","RelatedBody":"See https://github.com/aspnet/templating/pull/199\r\n\r\nIdentity code has moved to this repo from templating\r\n\r\ncc @Eilon "},{"Id":"7201323090","Type":"IssuesEvent","CreatedAt":"2018-02-05T22:09:48","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1616","RelatedDescription":"Opened issue \"Replace SignIn with RefreshSignIn in UI \" (#1616) at aspnet/Identity","RelatedBody":"> Manage actions lose cookie info (persistent/external login claim) when they call SignInAsync instead of RefreshSignIn\r\n\r\nSee https://github.com/aspnet/Identity/pull/1615#issuecomment-363236876\r\n\r\ncc @HaoK "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7201818723","Type":"IssuesEvent","CreatedAt":"2018-02-06T00:23:30","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2271","RelatedDescription":"Reopened issue \"Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\" (#2271) at aspnet/KestrelHttpServer","RelatedBody":"`dotnet new web`\r\n\r\nSwitch from `Microsoft.AspNetCore.All` to `Microsoft.AspNetCore.App`.\r\n\r\n`dotnet restore`\r\n\r\n`dotnet run`\r\n\r\n```\r\nC:\\Users\\daroth\\Desktop\\test2>dotnet run\r\nUsing launch settings from C:\\Users\\daroth\\Desktop\\test2\\Properties\\launchSettings.json...\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to bind to https://localhost:44321 on the IPv4 loopback interface: 'Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to bind to https://localhost:44321 on the IPv6 loopback interface: 'Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.IO.IOException: Failed to bind to address https://localhost:44321. ---> System.AggregateException: One or more errors occurred. (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at System.Buffers.MemoryPool..ctor()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread..ctor(LibuvTransport transport)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n\r\nUnhandled Exception: System.IO.IOException: Failed to bind to address https://localhost:44321. ---> System.AggregateException: One or more errors occurred. (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at System.Buffers.MemoryPool..ctor()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread..ctor(LibuvTransport transport)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__5.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at test2.Program.Main(String[] args) in C:\\Users\\daroth\\Desktop\\test2\\Program.cs:line 17\r\n\r\nC:\\Users\\daroth\\Desktop\\test2>dotnet --info\r\n.NET Command Line Tools (2.1.300-preview2-008017)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview2-008017\r\n Commit SHA-1 hash:  f4a0d2db0e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008017\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-26123-02\r\n  Build    : b64cb46124df1f7e64d7b7cde1034f693b270ceb\r\n```"},{"Id":"7197706753","Type":"IssuesEvent","CreatedAt":"2018-02-05T10:05:48","Actor":"sabeersulaiman","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2292","RelatedDescription":"Closed issue \"Dotnet process thread count keeps on increasing creating overload\" (#2292) at aspnet/KestrelHttpServer","RelatedBody":"We have an ASPNetCore Web API application running on a development server. And recently it started showing some timeouts whenever there are many people testing the application. Upon inspection we found that the process is using about 8 GB RAM and the timeouts occur when CPU usage is very high. We tried some profiling and found out that there is a large amount of objects under\r\n```\r\n10525    332590464 System.Collections.Generic.Dictionary`2+Entry[[System.Threading.IAsyncLocal, System.Private.CoreLib],[System.Object, System.Private.CoreLib]][]\r\n```\r\nThis was taken from the dotnet instance when it hit 1.2 GB RAM usage. Only later did we notice the large amount of threads.\r\n![thread_issue](https://user-images.githubusercontent.com/10241860/35766937-0a03d770-0908-11e8-8fc2-c254a16c07ee.png)\r\n\r\nAfter debugging for a while, we also found that the same behavior is also present in the DEBUG mode running on over development machine. With every new request a new thread is created but the new thread is added on to a pile and never cleared. I am confused as to what could be the reason for this.\r\n\r\ndotnet version: 2.1.4\r\nIIS Version: 8.5.9600.16384"},{"Id":"7195987275","Type":"PullRequestEvent","CreatedAt":"2018-02-04T22:33:51","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2295","RelatedDescription":"Opened pull request \"Pass StringValues via in\" (#2295) at aspnet/KestrelHttpServer","RelatedBody":"Depends on https://github.com/aspnet/Common/pull/311 (for perf)"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7202510564","Type":"PullRequestEvent","CreatedAt":"2018-02-06T04:26:34","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2026","RelatedDescription":"Opened pull request \"Split arguments for the build server properly\" (#2026) at aspnet/Razor","RelatedBody":"Before this change, we were not splitting the response file arguments properly. E.g. `C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0-preview1-26115-03\\ref\\netcoreapp2.1\\System.Security.SecureString.dll` was being split in to `C:\\Program` and the rest.\r\n\r\nI'm now splitting the arguments by Newline instead of whitespace.\r\n\r\nFYI @mkArtakMSFT "},{"Id":"7202076525","Type":"PullRequestEvent","CreatedAt":"2018-02-06T01:48:54","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/1992","RelatedDescription":"Closed pull request \"Use result of AssignTargetPath to calculate output paths\" (#1992) at aspnet/Razor","RelatedBody":"Instead of performing path mangling, we'll use the established convention of using AssignTargetPath to calculate relative paths \\ output paths.\r\n\r\nThis resolves https://github.com/aspnet/Razor/issues/1847 https://github.com/aspnet/Razor/issues/1829"},{"Id":"7202076047","Type":"IssuesEvent","CreatedAt":"2018-02-06T01:48:44","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1999","RelatedDescription":"Closed issue \"Error on publish with .cshtml content files from a .nupkg\" (#1999) at aspnet/Razor","RelatedBody":"Reported to me via email by @vijayrkn \r\n\r\n-----------------\r\n\r\nWe are gettng the following error from Razor sdk while trying to publish an ASP.NET Core 2.1 (.NET framework) application.  Full log attached\r\n\r\nC:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.design\\2.1.0-preview1-28181\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(102,5): Error MSB3191: Unable to create directory \"obj\\Release\\net461\\Razor\\C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.identity.ui\\2.1.0-preview1-28181\\contentFiles\\any\\netstandard2.0\\Areas\\Identity\\Pages\\Account\\\". The given path's format is not supported.\r\n\r\nRepro steps:\r\n1. File > New Project >C# > Web >ASP.NET Core Web Application >.Net Framework, ASP.NET Core 2.1,Web Application > Change Authentication to Individual User Accounts > OK.\r\n2. Right click the project, rebuild.\r\n3. Publish\r\n\r\n----------------------------\r\n\r\nThere's a bug in this build of identity that cause all of the .cshtml files to be included in the .nupkg. Because of that we've had the opportunity to find a bug in the Razor build support.\r\n\r\nWe don't handle files correctly here: https://github.com/aspnet/Razor/blob/release/2.1/src/Microsoft.AspNetCore.Razor.Design/build/netstandard2.0/Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets#L86\r\n\r\nMvcPrecompilation ignores files that aren't under the project's root directory. We planned to have the same behavior for 2.1.0-preview1 and add proper support for this scenario in 2.1.0-preview2 but it looks like we're not very good at ignoring these files."},{"Id":"7202076037","Type":"IssuesEvent","CreatedAt":"2018-02-06T01:48:44","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1847","RelatedDescription":"Closed issue \"Move path munging in Microsoft.AspNetCore.Razor.GenerateTool into MSBuild \" (#1847) at aspnet/Razor","RelatedBody":"Right now `Microsoft.AspNetCore.Razor.GenerateTool` does a bunch of path manipulation to figure out what view engine paths and generated file names should be used. This should all live in MSBuild so it can be reused by a future design time build from Razor."},{"Id":"7202076032","Type":"IssuesEvent","CreatedAt":"2018-02-06T01:48:44","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1829","RelatedDescription":"Closed issue \"Razor MSBuild needs to handle linked files properly\" (#1829) at aspnet/Razor","RelatedBody":"Creating an item to track this because we don't do this correctly today for precompilation. \r\n\r\nThis is fundamentally a problem because precompilation looks at files on disk, rather than where a file is linked into the project. \r\n\r\nLinks 'just work' when you use runtime compilation, we need to make sure this works well at build-time and in VS."},{"Id":"7201665266","Type":"IssuesEvent","CreatedAt":"2018-02-05T23:35:29","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1824","RelatedDescription":"Closed issue \"ProjectManagerSnapshot infrastructure doesn't work at runtime in VS for Mac\" (#1824) at aspnet/Razor","RelatedBody":"This is because the IDE doesn't update the Roslyn representations of the world; it just forwards all calls to creation of documents, projects etc. to their own structures and don't bidirectionally show that data. Aka, Roslyn's Workspace will show 0 projects but the Ide's workspace (not Roslyn based) will show all the active projects.\r\n\r\nCreating this issue for tracking purposes."},{"Id":"7201644341","Type":"PullRequestEvent","CreatedAt":"2018-02-05T23:29:38","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2025","RelatedDescription":"Opened pull request \"Update GenerateMPACK to capture PDBs.\" (#2025) at aspnet/Razor","RelatedBody":"- VS Mac expects pdbs to sit side-by-side.\r\n\r\n@natemcmaster does our GenerateMPACK target run prior to the Portable => Full windows pdb conversion? We need the MPack PDBs to be portable is why I ask.\r\n\r\n#1968 \r\n\r\n/cc @KirillOsenkov "}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7187586381","Type":"IssuesEvent","CreatedAt":"2018-02-02T06:15:37","Actor":"simonpbond","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/292","RelatedDescription":"Closed issue \"Publish ASP.NET 5 Web Application to remote IIS \" (#292) at aspnet/Tooling","RelatedBody":"In Visual Studio 2015, I can successfully preview / publish to a remote IIS server with a 4.6 Web application. However, publishing fails when using an ASP.NET 5 template / web applications, it will not even provide a preview.\n\nIs it possible to publish an ASP.NET 5 web application at the current time using Visual Studio 2015 / Publish to a remote IIS server?\n\nIf so, is there any instructions on doing this? (not for local IIS).\n"},{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"},{"Id":"7107011065","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:28:07","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/522","RelatedDescription":"Closed issue \"Asp.Net project with Build platform x86 \" (#522) at aspnet/Tooling","RelatedBody":"Here are threads in CLI and MVC repo https://github.com/aspnet/Mvc/issues/4663 and  https://github.com/dotnet/cli/issues/3091 with no real answers. Thought it would be VS Tooling bug.\n\nI have a asp.net project that reference a native dll via Nuget package. This native DLL is only build for x86. I've changed my project.json to set buildOptions\n \"platform\": \"x86\"\n\nBut when I build this asp.net project via visual studio, it creates \"bin\\Debug\\net46\\win7-x64\" as oppose to \"win7-x86\". If I run the resulting \".exe\" file it would crash.\n\nI've tried to use \"dotnet build -r win7-x86\" and it would create the right folder \"bin\\Debug\\net46\\win7-x86\" and then I can run the \".exe\" file.\n\nStill cannot test the application in x86 mode.\n\nThen I've uninstalled Microsoft .NET Code 1.0.0 RC2 - SDK Preview 1 (x64) which was installed via \"VS 2015 Tooling Preview\" and installed the \"x86\" one, and everything seems to be working.\n\nI think it is not right. I should be have the option to install x64 and x86 and then via that buildOption I should be able to tell dotnet how to compile. Just like MSBuild and ASP.Net projects where I set the build options from Project Properties.\n"},{"Id":"7106985478","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:22:30","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/557","RelatedDescription":"Closed issue \"Question: Typescript with ASP.NET Core RC2\" (#557) at aspnet/Tooling","RelatedBody":"Is it possible to compile Typescript code directly in Visual Studio 2015 using the ASP.NET Core RC2 project templates?  This used to work in RC1, but since updating to RC2 I can't get Typescript and ASP.NET Core working together simultaneously.  If I create a .NET Core project (e.g., **ASP.NET Core Web Application (.NET Core)** template), then I don't see \"Typescript Build\" properties page in Project Properties (the only property pages available are Application, Build, Debug).  I can create a Typescript project (e.g., **HTML Application with Typescript** template, which uses the csproj format), and Typescript works as expected, but of course I can't use .NET Core in that project.\n\nI have confirmed that my .xproj file does include a reference to Microsoft.DotNet.Web.targets, which I understand is supposed to bring in Typescript support:\n\n```\n<Import Project=\"$(VSToolsPath)\\DotNet.Web\\Microsoft.DotNet.Web.targets\"\n        Condition=\"'$(VSToolsPath)' != ''\" />\n```\n\nIs the built-in Typescript compilation no longer supported with RC2, or am I missing something somewhere?\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7191689127","Type":"IssuesEvent","CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Opened issue \"ASP.NET Core 2.1 \" (#288) at aspnet/Announcements","RelatedBody":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/7193)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846"},{"Id":"7168812814","Type":"IssuesEvent","CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Opened issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287) at aspnet/Announcements","RelatedBody":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, and it now depends on *Microsoft.AspNetCore.App*, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"960654063133052928","CreatedAt":"2018-02-05T23:19:11+00:00","UserScreenname":"aspnet","Text":"Just blogged: Learn how to do Image Recognition with Cognitive Services and https://t.co/eFOzgs22K8 https://t.co/7PVAkBPFzq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":2,"RawContent":null},{"Id":"960617902268342272","CreatedAt":"2018-02-05T20:55:29+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup Feb 6 at 10 Pacific / 18 GMT with special guests @danroth27 and… https://t.co/6JlWLbKqut","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":7,"RawContent":null},{"Id":"958482115208781824","CreatedAt":"2018-01-30T23:28:38+00:00","UserScreenname":"aspnet","Text":"Starting soon: #ASPNET Community Standup at 3:45 PM Pacific / 23:45 GMT.\n\nToday's community links: https://t.co/Va4tu6Rv47","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":11,"RawContent":null},{"Id":"958121957295140864","CreatedAt":"2018-01-29T23:37:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup tomorrow at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":3,"RawContent":null},{"Id":"956668144784846849","CreatedAt":"2018-01-25T23:20:34+00:00","UserScreenname":"aspnet","Text":"Just blogged: @Azure Storage for Serverless .NET apps in Minutes.\nhttps://t.co/5vSYYtzt8p","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"956524881121771521","CreatedAt":"2018-01-25T13:51:17+00:00","UserScreenname":"aspnet","Text":"Jeff and Maira - improving https://t.co/y1SqotEH5B LIVE at 10am ET / 15:00 UTC.  Check it out! https://t.co/IXsNIkHfWB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"955862764530024448","CreatedAt":"2018-01-23T18:00:16+00:00","UserScreenname":"aspnet","Text":"Starting now: #ASPNET Community Standup with Ryan Nowak on HttpClientFactory\n\nhttps://t.co/3dFxSj11IQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":8,"RawContent":null},{"Id":"955790962739040256","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"aspnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BDz2cgCTrt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"955640761793495042","CreatedAt":"2018-01-23T03:18:07+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is Jan 23 10 AM PT / 1800 GMT with special guest Ryan Nowak talking about Htt… https://t.co/5a8Ga9AJNL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":10,"RawContent":null},{"Id":"954763537884372997","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"aspnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/0zBt67tqGg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"954724179403837440","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"aspnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/Y02invGhm1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"953279227012542464","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/PfmelAvxS2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":7,"RawContent":null},{"Id":"952185961147969537","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"aspnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/H2wBoF77Ri","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"950775244016332800","CreatedAt":"2018-01-09T17:04:17+00:00","UserScreenname":"aspnet","Text":"Join us for the @aspnet Community Standup at 10 AM Pacific / 18:00 UTC today. We've got special guest… https://t.co/o5WiTdUXQC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":18,"RawContent":null},{"Id":"949414507759124480","CreatedAt":"2018-01-05T22:57:12+00:00","UserScreenname":"aspnet","Text":"Announcing Preview 1 of #ASPNET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 https://t.co/xVYhW7ospD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":69,"RawContent":null},{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":5,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-02-06T05:30:09.5475228Z","RunDurationInMilliseconds":8116}