{"Data":{"Blog":{"FeedItems":[{"Title":"Visual Studio Mobile Developer Podcast: New Year – New Pod!","PublishedOn":"2019-01-18T18:59:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. This episode includes a discussion of...","Href":"https://blog.xamarin.com/visual-studio-mobile-developer-podcast-new-year-new-pod/","RawContent":null},{"Title":"Introducing the .NET Community Standup Series","PublishedOn":"2019-01-17T16:57:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We love our amazing .NET community that is filled with amazing developers writing fantastic blogs, libraries, presentations, and pull requests every week. We are always looking for ways to highlight...","Href":"https://blog.xamarin.com/introducing-the-net-community-standup-series/","RawContent":null},{"Title":"Xamarin.Forms 3.5: A Little Bindable Love","PublishedOn":"2019-01-11T18:06:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Andrei Nitescu, a mobile developer since 2013 and frequent contributor to Xamarin.Forms. He shares about his experiences with other developers on his blog, and...","Href":"https://blog.xamarin.com/xamarin-forms-3-5-a-little-bindable-love/","RawContent":null},{"Title":"Hackathon Superweapon: F# and Fabulous","PublishedOn":"2019-01-10T20:27:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, I participated in Hack for the Sea, a weekend devoted to applying tech to marine conservation. One of our local challenges was a “cross-platform mobile app for reporting marine debris.” A...","Href":"https://blog.xamarin.com/hackathon-superweapon-f-and-fabulous/","RawContent":null},{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8915398544","Type":"IssuesEvent","CreatedAt":"2019-01-19T05:21:22","Actor":"kkarakk","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2629","RelatedDescription":"Closed issue \"Am hitting an issue with JobService auto MD5 or non auto specific name attribute\" (#2629) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add JobService with or without name attribute in my app\r\n2. Build and deploy app \r\n3. Get exception when i try to run JobService via \r\n\r\n```\r\nvar jobParameters = new PersistableBundle();\r\n\t\t\t\tjobParameters.PutString(\"section\", \"fuel\");\r\n\t\t\t\tvar jobinfo = JobSchedulerHelpers.CreateJobBuilderUsingJobId<PhotoUploadService>(this, GRNJobId).SetExtras(jobParameters).SetMinimumLatency(1).SetOverrideDeadline(1) .Build();\r\n\t\t\t\tvar jobScheduler = (JobScheduler)GetSystemService(JobSchedulerService);\r\n\t\t\t\tvar scheduleResult = jobScheduler.Schedule(jobinfo);\r\n\t\t\t\t\r\n```\r\nand name decorator as\r\n\r\n```\r\n\t[Service(Name = \"com.kkarakk.kkarakkFuelManager.PhotoUploadService\",\r\n\t\t Permission = \"android.permission.BIND_JOB_SERVICE\")]\r\n\tclass PhotoUploadService : JobService\r\n\t{\r\n``` \r\n\r\n### Expected Behavior\r\nJobService will run\r\n### Actual Behavior\r\nafter job is added to jobscheduler(scheduleResult returns true)\r\n\r\n> Unhandled Exception:\r\n> \r\n> \r\n> System.NotSupportedException: Could not activate JNI Handle 0x7fed52fcb0 (key_handle 0x7e4b937) of Java type 'com/kkarakk/kkarakkFuelManager/PhotoUploadService' as managed type 'kkarakkFuelManager.PhotoUploadService'. occurred\r\n\r\nI am on the most recent version of xamarin 28 and latest version of VS community 2017 15.9.5\r\n\r\n\r\n**This error does not occur on a brand new project app but occurs in my production app so i am a bit mystified as to what the error is**\r\n\r\nWhen i do not add a name attribute to my Jobservice i get this exception:\r\n\r\n> Unhandled Exception:\r\n> System.NotSupportedException: Could not activate JNI Handle 0xffa6c978 (key_handle 0x49ea080) of Java type 'md5283cdca63fd880131a79bb9db1262b10/PhotoUploadService' as managed type 'kkarakkFuelManager.PhotoUploadService'. occurred.\r\n\r\n kkarakkFuelManager is the namespace. \r\n\r\nWhen i add \r\n\r\n```\r\n[Service(Name = \"kkarakkFuelManager.PhotoUploadService\",\r\n\t\t Permission = \"android.permission.BIND_JOB_SERVICE\")]\r\n\tclass PhotoUploadService : JobService\r\n\t{...}\r\n```\r\n\r\nthen i get \r\n\r\n> Unhandled Exception:\r\n> \r\n> System.NotSupportedException: Could not activate JNI Handle 0x7fed52fcb0 (key_handle 0x7e4b937) of Java type 'kkarakkFuelManager/PhotoUploadService' as managed type 'kkarakkFuelManager.PhotoUploadService'. occurred\r\n> \r\nI get the same error if i use the package name \"com.kkarakk.kkarakkFuelManager\" with\r\n\r\n```\r\n\t[Service(Name = \"com.kkarakk.kkarakkFuelManager.PhotoUploadService\",\r\n\t\t Permission = \"android.permission.BIND_JOB_SERVICE\")]\r\n\tclass PhotoUploadService : JobService\r\n\t{\r\n```\r\n\r\n> \r\n> Unhandled Exception:\r\n> \r\n> System.NotSupportedException: Could not activate JNI Handle 0xffa6c978 (key_handle 0x49ea080) of Java type 'com/bansal/BansalFuelManager/PhotoUploadService' as managed type 'BansalFuelManager.PhotoUploadService'. occurred\r\n> \r\n\r\nThis issue doesn't occur all the time, works fine in a newly created temp app but  only pops during testing in my production app. Any insight?  \r\n\r\n\r\nmy **generated** manifest when i add service name decorator as package.servicename is \r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.kkarakk.kkarakkFuelManager\" android:installLocation=\"internalOnly\" android:versionCode=\"27\" android:versionName=\"10.0.0\">\r\n  <uses-sdk android:minSdkVersion=\"19\" android:targetSdkVersion=\"27\" />\r\n  <uses-permission android:name=\"android.permission.INTERNET\" />\r\n  <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n  <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\r\n  <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n  <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\r\n  <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n  <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n  <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n  <uses-permission android:name=\"android.permission.WRITE_PROFILE\" />\r\n  <application android:allowBackup=\"true\" android:theme=\"@style/AppTheme\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:name=\"android.support.multidex.MultiDexApplication\" android:debuggable=\"true\">\r\n    _**<service android:name=\"com.kkarakk.kkarakkFuelManager.PhotoUploadService\" android:permission=\"android.permission.BIND_JOB_SERVICE\" />**_\r\n    <activity android:label=\"Login Detail\" android:noHistory=\"true\" android:screenOrientation=\"portrait\" android:name=\"md5283cdca63fd880131a79bb9db1262b10.LoginActivity\" />\r\n    <activity android:label=\"Update Fuel Detail\" android:screenOrientation=\"portrait\" android:name=\"md5283cdca63fd880131a79bb9db1262b10.MainActivity\" />\r\n    <activity android:label=\"kkarakk Construction\" android:screenOrientation=\"portrait\" android:name=\"md5283cdca63fd880131a79bb9db1262b10.VehicleListActivity\" />\r\n    <activity android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.BaseActivity\" />\r\n    <activity android:label=\"Add Fuel Detail\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.AddFuelDetailActivity\" />\r\n    <activity android:label=\"Check Activation\" android:noHistory=\"true\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.CheckActivationActivity\" />\r\n    <activity android:label=\"Data Downloading\" android:noHistory=\"true\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.DataDownloadingActivity\" />\r\n    <activity android:label=\"Fuel Detail\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.FuelDetailActivity\" />\r\n    <activity android:label=\"Fuel Dispenser\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.FuelDispenserActivity\" />\r\n    <activity android:label=\"Fuel Logs\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.FuelLogListActivity\" />\r\n    <activity android:label=\"Fuel Manager\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.FuelManagerActivity\" />\r\n    <activity android:label=\"Pending gate pass\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GatePassPendingActivity\" />\r\n    <activity android:label=\"Gate passed vehicles\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GatePassVehicleListActivity\" />\r\n    <activity android:label=\"Manage gate pass\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GatePassManagerActivity\" />\r\n    <activity android:label=\"GoodsReceivedNoteActivity\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GoodsReceivedNoteActivity\" />\r\n    <activity android:label=\"Goods Received Notes\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GoodsReceivedNoteLogListActivity\" />\r\n    <activity android:label=\"Material Issued List\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialIssuedListActivity\" />\r\n    <activity android:label=\"Manage issued material\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialIssuedManagerActivity\" />\r\n    <activity android:label=\"Gatepass\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GatePassActivity\" />\r\n    <activity android:label=\"kkarakk Construction\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.HomeActivity\" />\r\n    <activity android:label=\"Material Issued\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialIssuedActivity\" />\r\n    <activity android:label=\"Material received vehicles\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialReceivedListActivity\" />\r\n    <activity android:label=\"Manage received material\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialReceivedManagerActivity\" />\r\n    <activity android:label=\"Material Received\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialReceivedActivity\" />\r\n    <activity android:label=\"Pending material received\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialReceivedPendingActivity\" />\r\n    <activity android:label=\"View Photo\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.PhotoActivity\" />\r\n    <activity android:label=\"Weigh Bridge\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.WeightManagerActivity\" />\r\n    <activity android:label=\"Weighted vehicles\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.WeightListActivity\" />\r\n    <activity android:label=\"Pending Weight\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.WeightPendingActivity\" />\r\n    <activity android:label=\"Weight Vehicle\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.WeightVehicleActivity\" />\r\n    <activity android:label=\"Register\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.RegisterActivity\" />\r\n    <activity android:label=\"Fuel Log Date Selection\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.SelectFuelDetailDateActivity\" />\r\n    <activity android:noHistory=\"true\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Splash\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.SplashActivity\">\r\n      <intent-filter>\r\n        <action android:name=\"android.intent.action.MAIN\" />\r\n        <category android:name=\"android.intent.category.LAUNCHER\" />\r\n      </intent-filter>\r\n    </activity>\r\n    <activity android:label=\"Print\" android:screenOrientation=\"portrait\" android:name=\"md58ad032cadff5214532f6001aeada0c96.PrintActivity\" />\r\n    <service android:name=\"md56b6d09834b1ab33b3f61938ce9518305.LocationService\" />\r\n    <receiver android:name=\"md5dac2e97e87afaf5cf4b1ff027bf5a029.UploadServiceBroadCastReceiver\" />\r\n    <provider android:name=\"mono.MonoRuntimeProvider\" android:exported=\"false\" android:initOrder=\"2147483647\" android:authorities=\"com.kkarakk.kkarakkFuelManager.mono.MonoRuntimeProvider.__mono_init__\" />\r\n    <!--suppress ExportedReceiver-->\r\n    <receiver android:name=\"mono.android.Seppuku\">\r\n      <intent-filter>\r\n        <action android:name=\"mono.android.intent.action.SEPPUKU\" />\r\n        <category android:name=\"mono.android.intent.category.SEPPUKU.com.kkarakk.kkarakkFuelManager\" />\r\n      </intent-filter>\r\n    </receiver>\r\n  </application>\r\n</manifest>\r\n```"},{"Id":"8915397996","Type":"IssuesEvent","CreatedAt":"2019-01-19T05:20:55","Actor":"kkarakk","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2629","RelatedDescription":"Reopened issue \"Am hitting an issue with JobService auto MD5 or non auto specific name attribute\" (#2629) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add JobService with or without name attribute in my app\r\n2. Build and deploy app \r\n3. Get exception when i try to run JobService via \r\n\r\n```\r\nvar jobParameters = new PersistableBundle();\r\n\t\t\t\tjobParameters.PutString(\"section\", \"fuel\");\r\n\t\t\t\tvar jobinfo = JobSchedulerHelpers.CreateJobBuilderUsingJobId<PhotoUploadService>(this, GRNJobId).SetExtras(jobParameters).SetMinimumLatency(1).SetOverrideDeadline(1) .Build();\r\n\t\t\t\tvar jobScheduler = (JobScheduler)GetSystemService(JobSchedulerService);\r\n\t\t\t\tvar scheduleResult = jobScheduler.Schedule(jobinfo);\r\n\t\t\t\t\r\n```\r\nand name decorator as\r\n\r\n```\r\n\t[Service(Name = \"com.kkarakk.kkarakkFuelManager.PhotoUploadService\",\r\n\t\t Permission = \"android.permission.BIND_JOB_SERVICE\")]\r\n\tclass PhotoUploadService : JobService\r\n\t{\r\n``` \r\n\r\n### Expected Behavior\r\nJobService will run\r\n### Actual Behavior\r\nafter job is added to jobscheduler(scheduleResult returns true)\r\n\r\n> Unhandled Exception:\r\n> \r\n> \r\n> System.NotSupportedException: Could not activate JNI Handle 0x7fed52fcb0 (key_handle 0x7e4b937) of Java type 'com/kkarakk/kkarakkFuelManager/PhotoUploadService' as managed type 'kkarakkFuelManager.PhotoUploadService'. occurred\r\n\r\nI am on the most recent version of xamarin 28 and latest version of VS community 2017 15.9.5\r\n\r\n\r\n**This error does not occur on a brand new project app but occurs in my production app so i am a bit mystified as to what the error is**\r\n\r\nWhen i do not add a name attribute to my Jobservice i get this exception:\r\n\r\n> Unhandled Exception:\r\n> System.NotSupportedException: Could not activate JNI Handle 0xffa6c978 (key_handle 0x49ea080) of Java type 'md5283cdca63fd880131a79bb9db1262b10/PhotoUploadService' as managed type 'kkarakkFuelManager.PhotoUploadService'. occurred.\r\n\r\n kkarakkFuelManager is the namespace. \r\n\r\nWhen i add \r\n\r\n```\r\n[Service(Name = \"kkarakkFuelManager.PhotoUploadService\",\r\n\t\t Permission = \"android.permission.BIND_JOB_SERVICE\")]\r\n\tclass PhotoUploadService : JobService\r\n\t{...}\r\n```\r\n\r\nthen i get \r\n\r\n> Unhandled Exception:\r\n> \r\n> System.NotSupportedException: Could not activate JNI Handle 0x7fed52fcb0 (key_handle 0x7e4b937) of Java type 'kkarakkFuelManager/PhotoUploadService' as managed type 'kkarakkFuelManager.PhotoUploadService'. occurred\r\n> \r\nI get the same error if i use the package name \"com.kkarakk.kkarakkFuelManager\" with\r\n\r\n```\r\n\t[Service(Name = \"com.kkarakk.kkarakkFuelManager.PhotoUploadService\",\r\n\t\t Permission = \"android.permission.BIND_JOB_SERVICE\")]\r\n\tclass PhotoUploadService : JobService\r\n\t{\r\n```\r\n\r\n> \r\n> Unhandled Exception:\r\n> \r\n> System.NotSupportedException: Could not activate JNI Handle 0xffa6c978 (key_handle 0x49ea080) of Java type 'com/bansal/BansalFuelManager/PhotoUploadService' as managed type 'BansalFuelManager.PhotoUploadService'. occurred\r\n> \r\n\r\nThis issue doesn't occur all the time, works fine in a newly created temp app but  only pops during testing in my production app. Any insight?  \r\n\r\n\r\nmy **generated** manifest when i add service name decorator as package.servicename is \r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.kkarakk.kkarakkFuelManager\" android:installLocation=\"internalOnly\" android:versionCode=\"27\" android:versionName=\"10.0.0\">\r\n  <uses-sdk android:minSdkVersion=\"19\" android:targetSdkVersion=\"27\" />\r\n  <uses-permission android:name=\"android.permission.INTERNET\" />\r\n  <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n  <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\r\n  <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n  <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\r\n  <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n  <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n  <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n  <uses-permission android:name=\"android.permission.WRITE_PROFILE\" />\r\n  <application android:allowBackup=\"true\" android:theme=\"@style/AppTheme\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:name=\"android.support.multidex.MultiDexApplication\" android:debuggable=\"true\">\r\n    _**<service android:name=\"com.kkarakk.kkarakkFuelManager.PhotoUploadService\" android:permission=\"android.permission.BIND_JOB_SERVICE\" />**_\r\n    <activity android:label=\"Login Detail\" android:noHistory=\"true\" android:screenOrientation=\"portrait\" android:name=\"md5283cdca63fd880131a79bb9db1262b10.LoginActivity\" />\r\n    <activity android:label=\"Update Fuel Detail\" android:screenOrientation=\"portrait\" android:name=\"md5283cdca63fd880131a79bb9db1262b10.MainActivity\" />\r\n    <activity android:label=\"kkarakk Construction\" android:screenOrientation=\"portrait\" android:name=\"md5283cdca63fd880131a79bb9db1262b10.VehicleListActivity\" />\r\n    <activity android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.BaseActivity\" />\r\n    <activity android:label=\"Add Fuel Detail\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.AddFuelDetailActivity\" />\r\n    <activity android:label=\"Check Activation\" android:noHistory=\"true\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.CheckActivationActivity\" />\r\n    <activity android:label=\"Data Downloading\" android:noHistory=\"true\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.DataDownloadingActivity\" />\r\n    <activity android:label=\"Fuel Detail\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.FuelDetailActivity\" />\r\n    <activity android:label=\"Fuel Dispenser\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.FuelDispenserActivity\" />\r\n    <activity android:label=\"Fuel Logs\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.FuelLogListActivity\" />\r\n    <activity android:label=\"Fuel Manager\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.FuelManagerActivity\" />\r\n    <activity android:label=\"Pending gate pass\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GatePassPendingActivity\" />\r\n    <activity android:label=\"Gate passed vehicles\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GatePassVehicleListActivity\" />\r\n    <activity android:label=\"Manage gate pass\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GatePassManagerActivity\" />\r\n    <activity android:label=\"GoodsReceivedNoteActivity\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GoodsReceivedNoteActivity\" />\r\n    <activity android:label=\"Goods Received Notes\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GoodsReceivedNoteLogListActivity\" />\r\n    <activity android:label=\"Material Issued List\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialIssuedListActivity\" />\r\n    <activity android:label=\"Manage issued material\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialIssuedManagerActivity\" />\r\n    <activity android:label=\"Gatepass\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.GatePassActivity\" />\r\n    <activity android:label=\"kkarakk Construction\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.HomeActivity\" />\r\n    <activity android:label=\"Material Issued\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialIssuedActivity\" />\r\n    <activity android:label=\"Material received vehicles\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialReceivedListActivity\" />\r\n    <activity android:label=\"Manage received material\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialReceivedManagerActivity\" />\r\n    <activity android:label=\"Material Received\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialReceivedActivity\" />\r\n    <activity android:label=\"Pending material received\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.MaterialReceivedPendingActivity\" />\r\n    <activity android:label=\"View Photo\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.PhotoActivity\" />\r\n    <activity android:label=\"Weigh Bridge\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.WeightManagerActivity\" />\r\n    <activity android:label=\"Weighted vehicles\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.WeightListActivity\" />\r\n    <activity android:label=\"Pending Weight\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.WeightPendingActivity\" />\r\n    <activity android:label=\"Weight Vehicle\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Yellow\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.WeightVehicleActivity\" />\r\n    <activity android:label=\"Register\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.RegisterActivity\" />\r\n    <activity android:label=\"Fuel Log Date Selection\" android:screenOrientation=\"portrait\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.SelectFuelDetailDateActivity\" />\r\n    <activity android:noHistory=\"true\" android:screenOrientation=\"portrait\" android:theme=\"@style/AppTheme.Splash\" android:name=\"md508f2f9fa151d3b0a47088239fc9efd8b.SplashActivity\">\r\n      <intent-filter>\r\n        <action android:name=\"android.intent.action.MAIN\" />\r\n        <category android:name=\"android.intent.category.LAUNCHER\" />\r\n      </intent-filter>\r\n    </activity>\r\n    <activity android:label=\"Print\" android:screenOrientation=\"portrait\" android:name=\"md58ad032cadff5214532f6001aeada0c96.PrintActivity\" />\r\n    <service android:name=\"md56b6d09834b1ab33b3f61938ce9518305.LocationService\" />\r\n    <receiver android:name=\"md5dac2e97e87afaf5cf4b1ff027bf5a029.UploadServiceBroadCastReceiver\" />\r\n    <provider android:name=\"mono.MonoRuntimeProvider\" android:exported=\"false\" android:initOrder=\"2147483647\" android:authorities=\"com.kkarakk.kkarakkFuelManager.mono.MonoRuntimeProvider.__mono_init__\" />\r\n    <!--suppress ExportedReceiver-->\r\n    <receiver android:name=\"mono.android.Seppuku\">\r\n      <intent-filter>\r\n        <action android:name=\"mono.android.intent.action.SEPPUKU\" />\r\n        <category android:name=\"mono.android.intent.category.SEPPUKU.com.kkarakk.kkarakkFuelManager\" />\r\n      </intent-filter>\r\n    </receiver>\r\n  </application>\r\n</manifest>\r\n```"},{"Id":"8914200755","Type":"PullRequestEvent","CreatedAt":"2019-01-18T21:15:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2637","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Add `directBootAware` if needed. (#2621)\" (#2637) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2081\r\n\r\nContext? http://work.devdiv.io/727120\r\n\r\nThe [`//application/@android:directBootAware`][0] attribute *changes*\r\nhow process startup semantics work, in [non-obvious ways][1].\r\n\r\nConsider the following:\r\n\r\n 1. Start with an Android v7.0 Nougat device.\r\n 2. Build, Install, & Run the [Direct Boot Sample][2]\r\n 3. Create an alarm within the Direct Boot Sample app.\r\n 4. Reboot the Android device.\r\n 5. Wait for the alarm to go off without unlocking the device.\r\n\r\nExpected results: An alarm goes off.\r\n\r\nActual results: Nothing happens, and `adb logcat` contains:\r\n\r\n\tjava.lang.UnsatisfiedLinkError: No implementation found for void mono.android.Runtime.register(java.lang.String, java.lang.Class, java.lang.String) (tried Java_mono_android_Runtime_register and Java_mono_android_Runtime_register__Ljava_lang_String_2Ljava_lang_Class_2Ljava_lang_String_2)\r\n\t   at mono.android.Runtime.register(Native Method)\r\n\t   at md511db93b05d0fbee144be45ad6fb54d50.BootBroadcastReceiver.(BootBroadcastReceiver.java:15)\r\n\t   at java.lang.Class.newInstance(Native Method)\r\n\t   at android.app.ActivityThread.handleReceiver(ActivityThread.java:3671)\r\n\t   ...\r\n\r\nOne of the apparent changes when `directBootAware` is used is that\r\n`<provider/>`s must *also* \"opt-in\" to `directBootAware`.\r\nIf a `<provider/>` *isn't* also `directBootAware`, then the\r\n`<provider/>` can't be used before the device is unlocked.\r\n\r\nOur Bootstrap code within `MonoRuntimeProvider` is \"injected\" via\r\n`<provider/>`.  Meaning if the app uses `directBootAware` but the\r\n`MonoRuntimeProvider` *isn't* `directBootAware`, then the app can't\r\nuse any managed code before the device has been unlocked.\r\n\r\nWhich is why the `UnsatisfiedLinkError` is generated: the\r\n`MonoRuntimeProvider` hasn't been created, meaning `mono` hasn't been\r\ninitialized, meaning nothing can work *until the device is unlocked*.\r\n\r\nThe fix?  If *anything* within `AndroidManifest` sets\r\n`//*[@android:directBootAware='true']`, then add a\r\n`@android:directBootAware=\"true\"` attribute to the generated\r\n`<provider/>` for `mono.MonoRuntimeProvider`.  This will ensure that\r\nmanaged code is properly initialized and can execute after the device\r\nhas been rebooted and before the user has unlocked the device.\r\n\r\n[0]: https://developer.android.com/guide/topics/manifest/application-element#directBootAware\r\n[1]: https://android-developers.googleblog.com/2016/04/developing-for-direct-boot.html\r\n[2]: https://developer.xamarin.com/samples/monodroid/android-n/DirectBoot/"},{"Id":"8914172145","Type":"PullRequestEvent","CreatedAt":"2019-01-18T21:09:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2621","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add `directBootAware` if needed.\" (#2621) at xamarin/xamarin-android","RelatedBody":"Fixes #2081\r\n\r\nIf a user needs to use the `directBootAware` attribute on\r\nan `application`, `activity` or `service` we also need\r\nto include it on the `MonoRuntimeProvider` so that\r\nnative libraries can be resolved correctly. Not doing\r\nso results in the following\r\n\r\n\tjava.lang.UnsatisfiedLinkError: No implementation found for void mono.android.Runtime.register\r\n\r\nThis commit looks to see if any elements in the manifest\r\ncontain `directBootAware`. If there are , then we also\r\ninclude it in the `provider`."},{"Id":"8914172139","Type":"IssuesEvent","CreatedAt":"2019-01-18T21:09:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2081","RelatedDescription":"Closed issue \"DirectBoot execution fails with java.lang.UnsatisfiedLinkError\" (#2081) at xamarin/xamarin-android","RelatedBody":"When trying to use any Xamarin tool in the DirectBoot pre-login session I get:\r\n\r\n> 08-18 22:54:33.644 2722 2722 E AndroidRuntime: FATAL EXCEPTION: main\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: Process: com.xamarin.directboot, PID: 2722\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: java.lang.UnsatisfiedLinkError: No implementation found for void mono.android.Runtime.register(java.lang.String, java.lang.Class, java.lang.String) (tried Java_mono_android_Runtime_register and Java_mono_android_Runtime_register__Ljava_lang_String_2Ljava_lang_Class_2Ljava_lang_String_2)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at mono.android.Runtime.register(Native Method)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at md511db93b05d0fbee144be45ad6fb54d50.BootBroadcastReceiver.(BootBroadcastReceiver.java:15)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at java.lang.Class.newInstance(Native Method)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.app.ActivityThread.handleReceiver(ActivityThread.java:3671)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.app.ActivityThread.-wrap18(Unknown Source:0)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1979)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.os.Handler.dispatchMessage(Handler.java:108)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.os.Looper.loop(Looper.java:166)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.app.ActivityThread.main(ActivityThread.java:7425)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at java.lang.reflect.Method.invoke(Native Method)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:245)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:921)\r\n\r\n### Steps to Reproduce\r\n1. Make sure your phone has Nougat+ file based encryption enabled\r\n2. Download [this Xamarin sample](https://developer.xamarin.com/samples/monodroid/android-n/DirectBoot/) (though I get same error with my own attempts to implement DirectBoot)\r\n3. Build in release mode\r\n4. Deploy to phone\r\n5. Set an alarm in the app\r\n6. Reboot and wait for alarm time without logging on\r\n7. Nothing happens\r\n8. Check `logcat` and you'll find the error above\r\n\r\nAlso raised this issue against the sample https://github.com/xamarin/monodroid-samples/issues/277, but it looks more like a Xamarin bug to me.\r\n\r\nhttps://developer.xamarin.com/samples/monodroid/android-n/DirectBoot/DirectBoot.zip\r\n\r\n### Expected Behavior\r\nTo be able to use DirectBoot like other apps can. I've been able to use native apps like google clock and they work fine.\r\n\r\n### Actual Behavior\r\nXamarin actions such as simple notifications do not fire and an error is logged\r\n\r\n### Device\r\nMy phone is a Huawei Honor 9 with Android 8.0.0\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.1\r\nVisualStudio.15.Release/15.8.1+28010.2003\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05074.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.30625.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.8.18201.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nGitHub.VisualStudio   2.5.4.3349\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.1.4    Build 112.0.20180731.142027\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.38 (5b3c069)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   4.11.7-pre (8955b2a)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.20802.1 Commit Hash:97e1085d8b4b8e3e51c398e910177f87e86d135e\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOpen Command Line   2.1.216\r\nOpens a command line at the root of the project. Support for all consoles such as CMD, PowerShell, Bash etc. Provides syntax highlighting, Intellisense and execution of .cmd and .bat files.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.8.18201.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.8.18201.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.8.18201.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.8.18201.1\r\nProfiling support for Python projects.\r\n\r\nR Tools for Visual Studio   1.3.40517.1016\r\nProvides project system, R Interactive window, plotting, and more for the R programming language.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWiX Toolset Visual Studio Extension   0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n"},{"Id":"8914027817","Type":"PullRequestEvent","CreatedAt":"2019-01-18T20:38:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2624","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] SRM in <GetAdditionalResourcesFromAssemblies/>\" (#2624) at xamarin/xamarin-android","RelatedBody":"Just like in c22475d, we can use System.Reflection.Metadata in places\r\nover Mono.Cecil for performance benefits.\r\n\r\nOn such case is the `<GetAdditionalResourcesFromAssemblies/>` MSBuild\r\ntask, which only looks at custom attributes in assemblies:\r\n\r\n    Before\r\n    1st:          98 ms  GetAdditionalResourcesFromAssemblies       1 calls\r\n    Incremental: 105 ms  GetAdditionalResourcesFromAssemblies       1 calls\r\n\r\n    After\r\n    1st:          54 ms  GetAdditionalResourcesFromAssemblies       1 calls\r\n    Incremental:  53 ms  GetAdditionalResourcesFromAssemblies       1 calls\r\n\r\nThis was a straightforward port to SRM, which seems to save ~50ms on\r\nevery build."},{"Id":"8913942389","Type":"PullRequestEvent","CreatedAt":"2019-01-18T20:20:03","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2632","RelatedDescription":"Merged pull request \"Remove duplicate namespace using that causes build warning\" (#2632) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8913779763","Type":"PullRequestEvent","CreatedAt":"2019-01-18T19:47:15","Actor":"kzu","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2633","RelatedDescription":null,"RelatedBody":"VS2019 has moved to net472 a while ago, and all the MSBuild assemblies\r\nnow seem to target that framework too, which breaks the build."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8915318659","Type":"PullRequestEvent","CreatedAt":"2019-01-19T04:19:08","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5026","RelatedDescription":null,"RelatedBody":"### Description of Change ###\r\n\r\nMove material iOS renderers out to a separate dll and added a required an init call from the iOS platform. The effect of this is that if you don't want to use material components then the material Nuget dll and the material renderers dll won't get included into the app package. If the user forgets the init call then they should see a warning about needing to add the Init call for material\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5020\r\n\r\n### API Changes ###\r\n\r\nAdded required call to enable material on ios\r\n```C#\r\nFormsMaterial.Init()\r\n```\r\n\r\nAdded:\r\n - FormsMaterial.Init()\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n\r\n### Testing Procedure ###\r\n- Remove the FormsMaterial.Init() call from the app delegate on control gallery\r\n- verify that application still runs and material related dlls don't get added into the project\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard"},{"Id":"8915318579","Type":"PullRequestEvent","CreatedAt":"2019-01-19T04:19:03","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5026","RelatedDescription":"Closed pull request \"[iOS] Move Material iOS components to separate dll\" (#5026) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nMove material iOS renderers out to a separate dll and added a required an init call from the iOS platform. The effect of this is that if you don't want to use material components then the material Nuget dll and the material renderers dll won't get included into the app package. If the user forgets the init call then they should see a warning about needing to add the Init call for material\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5020\r\n\r\n### API Changes ###\r\n\r\nAdded required call to enable material on ios\r\n```C#\r\nFormsMaterial.Init()\r\n```\r\n\r\nAdded:\r\n - FormsMaterial.Init()\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n\r\n### Testing Procedure ###\r\n- Remove the FormsMaterial.Init() call from the app delegate on control gallery\r\n- verify that application still runs and material related dlls don't get added into the project\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard"},{"Id":"8915013708","Type":"PullRequestEvent","CreatedAt":"2019-01-19T01:10:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4912","RelatedDescription":"Merged pull request \"[UWP] Fixed disappearing Switch on SwitchCell in TableView\" (#4912) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixed bug where the switch in a `SwitchCell` in a `TableView` would disappear on UWP. The method for setting the default color was only called when it was in a `ListView`. Also renamed the method to be more clear.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #4903\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8915013702","Type":"IssuesEvent","CreatedAt":"2019-01-19T01:10:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4903","RelatedDescription":"Closed issue \"[UWP] SwitchCell in TableView disappears after toggling\" (#4903) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. In Control Gallery, navigate to SwitchCell Table Gallery Legacy\r\n2. Toggle the SwitchCell in the first row. Toggle it again.\r\n\r\n### Expected Behavior\r\n\r\nThe SwitchCell does not disappear.\r\n\r\n### Actual Behavior\r\n\r\nThe SwitchCell disappears.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0\r\n\r\n### Screenshots\r\n\r\n![2019-01-04_13-39-15](https://user-images.githubusercontent.com/538025/50709914-a08e6900-1026-11e9-92a8-e2b2b6779f8d.gif)\r\n\r\n"},{"Id":"8915013548","Type":"PullRequestEvent","CreatedAt":"2019-01-19T01:10:22","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5026","RelatedDescription":"Opened pull request \"[iOS] Move Material iOS components to separate dll\" (#5026) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nMove material iOS renderers out to a separate dll and added a required an init call. The effect of this is that if you don't want to use material components then the material Nuget dll and the material renderers dll won't get included into the app package\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5020\r\n\r\n### API Changes ###\r\n\r\nAdded required call to enable material on ios\r\n```C#\r\nFormsMaterial.Init()\r\n```\r\n\r\nAdded:\r\n - FormsMaterial.Init()\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n\r\n### Testing Procedure ###\r\n- Remove the FormsMaterial.Init() call from the app delegate on control gallery\r\n- verify that application still runs and material related dlls don't get added into the project\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard"},{"Id":"8914663550","Type":"IssuesEvent","CreatedAt":"2019-01-18T23:03:10","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5001","RelatedDescription":"Closed issue \"XF 3.4 FlexLayout.OnChildPropertyChanged null ref when changing control height\" (#5001) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen setting the HeightRequest of a control within a FlexLayout, on the WPF platform, a null reference exception can be thrown from Xamarin.Forms.FlexLayout.OnChildPropertyChanged(Object sender, PropertyChangedEventArgs e):347.\r\n\r\nThis may also be occurring on macOS.\r\n\r\n### Steps to Reproduce\r\nThis is quite difficult for me to reproduce. It doesn't occur reliably. For about two weeks, I was under the impression that I had resolved the problem, as it had stopped occurring. It was only today that I noticed it was coming from the Xamarin.Forms.Core assembly, so I stepped in and implemented a small fix.\r\n\r\n### Expected Behavior\r\nNot throwing a null ref.\r\n\r\n### Actual Behavior\r\nThrows a null ref, due to \"item\" being null.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4, looks like the current version of FlexLayout will exhibit the same issue.\r\n- Last known good version: Unknown, potentially none.\r\n- IDE: VS 15.9.4 Community\r\n- Platform Target Frameworks:\r\n  - WPF on Windows 10 1803, with Xamarin.Forms.Platform.WPF 3.4.0.1008975\r\n  - macOS on macOS 10.14\r\n\r\nI do not believe that I have encountered this in my Android app, however, it may be occurring in my macOS app. I'm not able to verify this at the moment, but I believe macOS is likely exhibiting the same issue, as it produces the same result in my layout and occurs in a similar area of the code.\r\n\r\n### StackTrace\r\n   at Xamarin.Forms.FlexLayout.OnChildPropertyChanged(Object sender, PropertyChangedEventArgs e) in C:\\Repos\\Xamarin.Forms-Forked\\Xamarin.Forms.Core\\FlexLayout.cs:line 347\r\n   at Xamarin.Forms.BindableObject.OnPropertyChanged(String propertyName) in C:\\Repos\\Xamarin.Forms-Forked\\Xamarin.Forms.Core\\BindableObject.cs:line 150\r\n   at Xamarin.Forms.Element.OnPropertyChanged(String propertyName) in C:\\Repos\\Xamarin.Forms-Forked\\Xamarin.Forms.Core\\Element.cs:line 370\r\n   at Xamarin.Forms.BindableObject.SetValueActual(BindableProperty property, BindablePropertyContext context, Object value, Boolean currentlyApplying, SetValueFlags attributes, Boolean silent) in C:\\Repos\\Xamarin.Forms-Forked\\Xamarin.Forms.Core\\BindableObject.cs:line 623\r\n   at Xamarin.Forms.BindableObject.SetValueCore(BindableProperty property, Object value, SetValueFlags attributes, SetValuePrivateFlags privateAttributes) in C:\\Repos\\Xamarin.Forms-Forked\\Xamarin.Forms.Core\\BindableObject.cs:line 417\r\n   at Xamarin.Forms.BindableObject.SetValue(BindableProperty property, Object value, Boolean fromStyle, Boolean checkAccess) in C:\\Repos\\Xamarin.Forms-Forked\\Xamarin.Forms.Core\\BindableObject.cs:line 573\r\n   at Xamarin.Forms.BindableObject.SetValue(BindableProperty property, Object value) in C:\\Repos\\Xamarin.Forms-Forked\\Xamarin.Forms.Core\\BindableObject.cs:line 99\r\n   at Xamarin.Forms.VisualElement.set_HeightRequest(Double value) in C:\\Repos\\Xamarin.Forms-Forked\\Xamarin.Forms.Core\\VisualElement.cs:line 291\r\n   at ClipboardEverywhere.UserControls.FileTransferControl_Compact.SetProgress() in C:\\Repos\\UC\\ClipboardEverywhere\\ClipboardEverywhere\\UserControls\\FileTransferControl_Compact.xaml.cs:line 140\r\n   at ClipboardEverywhere.UserControls.FileTransferControl_Compact.Bind(FileTransfer fileTransfer, Boolean inUse) in C:\\Repos\\UC\\ClipboardEverywhere\\ClipboardEverywhere\\UserControls\\FileTransferControl_Compact.xaml.cs:line 70\r\n   at ClipboardEverywhere.Pages.Files.AddFileTransfersToLayoutAndGetCombinedHeight(List`1 transfersToAdd, FlexLayout flexLayout, List`1 cache) in C:\\Repos\\UC\\ClipboardEverywhere\\ClipboardEverywhere\\Pages\\Files.xaml.cs:line 665\r\n   at ClipboardEverywhere.Pages.Files.<>c__DisplayClass40_1.<<UpdateLayout>b__4>d.MoveNext() in C:\\Repos\\UC\\ClipboardEverywhere\\ClipboardEverywhere\\Pages\\Files.xaml.cs:line 591\r\n\r\n### Proposed Solution\r\n\r\nPlease see the FlexLayout.cs changes from this commit to my fork: https://github.com/Liam2349/Xamarin.Forms/commit/50701ae198da0adcbf313d5c567ec2932dbec1b6\r\n\r\nI have resolved this by adding a null check. It looks like null checks were already in place for 3 of the 4 \"if\" statements, so I'm unsure why one of them was left without a null check, but that's why this issue is occurring.\r\n\r\nSince the \"item\" variable is used in each of the \"if\" statements, I also chose to define it at the beginning of the method, along with one null check, to reduce code duplication.\r\n\r\nPlease let me know what you think, and thanks for reading.\r\n\r\nLiam Foot"},{"Id":"8914663534","Type":"IssuesEvent","CreatedAt":"2019-01-18T23:03:09","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4789","RelatedDescription":"Closed issue \"[Android] No method with name='setClipBounds' crash in ImageElementManager\" (#4789) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nCrash `Java.Lang.LinkageError: no method with name='setClipBounds'` on Android 4.1/4.2.\r\n`ClipBounds` property on the `ImageView` is set _without_ an API check for >= API 18.\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/27f83582e9493c02058875deb7ca3d47e3b65e42/Xamarin.Forms.Platform.Android/FastRenderers/ImageElementManager.cs#L23\r\n\r\n**ClipBounds** property was added in API Level 18.\r\nhttps://developer.xamarin.com/api/property/Android.Views.View.ClipBounds/\r\n\r\nThis change was introduced with #4218 in the fast `ImageRenderer` and recently moved to `ImageElementManager`.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Enable fast renderers on the application.\r\n2. Use a `Xamarin.Forms.Image` control.\r\n\r\n### Expected Behavior\r\nApp should not crash.\r\n\r\n### Actual Behavior\r\nApp crash on an Android 4.1/4.2 device.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.4.0\r\n- Last known good version: XF 3.3.0 (introduced in XF 3.3.0 SR1)\r\n- Affected Devices: Android 4.1/4.2\r\n\r\n### Suggestion\r\n- Can we use the `ViewCompat` method available [here](https://android.googlesource.com/platform/frameworks/support/+/e5f75a851fbee9fbf1de31c738577fd86861a101/compat/java/android/support/v4/view/ViewCompat.java#1547) in Android.Support.V4.View?\r\n```"},{"Id":"8914614543","Type":"IssuesEvent","CreatedAt":"2019-01-18T22:49:29","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5025","RelatedDescription":"Opened issue \"[Feedback] Xamarin Forms ContentPresenter doesn't display correctly in Right-to-Left after rotation\" (#5025) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>In Xamarin Forms (using 3.3.0.967):\n\nIf you create a custom ContentView with a control template, the content assigned to the control does not display correctly after rotation if the FlowDirection is set to RightToLeft - regardless of whether it is from the device or if it is set explicitly.\n\nOn both iOS and Android (haven’t tested Windows yet), the contents shift to the right, extending past the edge of the screen.\n\nSteps to Reproduce:\n\n1.  Create a plain Xamarin Forms project supporting iOS and Android (and probably Windows)\n2.  Create a new Forms ContentView XAML object\n3.  Add a ControlTemplate with a ContentPresenter\n4.  In MainPage.xaml, put the newly created ContentView onto the page\n5.  Put content into the ContentView\n6.  Change the FlowDirection to Right-to-Left\n7.  Run the app and rotate it\n\nA sample that reproduces the problem can be found here:\nhttps://www.dropbox.com/s/3pak9ighagqzlr4/XamarinFormsTest.zip?dl=0</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/430041/xamarin-forms-contentpresenter-doesnt-display-corr.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/770470\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[772674](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/772674)"},{"Id":"8914614466","Type":"IssuesEvent","CreatedAt":"2019-01-18T22:49:28","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5024","RelatedDescription":"Opened issue \"[Feedback] xamarin OpenGLView gesturerecognizers events doesn't fire\" (#5024) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>I have a multiPlatform XamarinForms Vs2017 project (.NET standard, Android &amp; WPF).\n\nI'm using a DependencyService due to a custom OpenGL 3D library.\nI can set up OpenGLView correctly but i can't figure out how can track gestures.\n\nBoth GestureRecognizers applied to OpenGLView and its parent doesn't work as expected : events doesn't fire.\nI'm trying with Frame=&gt;OpenGlView but the problem seems to be the OpenGlView .\n\nThe question is: \n\nhas OpenGLView (WPF) the ability to handle touch events like any other Xamarin standard component (&quot;gesturerecognizers&quot;)?\nIf not, is there any workaround like this that does not works? (Https://forums.xamarin.com/discussion/26807/openglview-touch-event)\n\n\n Sources: http://davidemercanti.altervista.org/VEV/SydavHtml.zip\nImages: https://i.stack.imgur.com/MVQgB.png</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/429539/xamarin-openglview-gesturerecognizers-events-doesn.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/770218\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[772675](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/772675)"},{"Id":"8914614386","Type":"IssuesEvent","CreatedAt":"2019-01-18T22:49:27","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5023","RelatedDescription":"Opened issue \"[Feedback] Xamarin Forms ListView with ContextActions ItemTapped Problem\" (#5023) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>If you have a ListView with contextActions and you slide an item to the left and then back to the right the ItemTapped for this item does not longer work. It works for all other items but not for the slided one.</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/424097/xamarin-forms-listview-with-contextactions-itemtap.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/763686\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[772676](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/772676)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8914491986","Type":"IssuesEvent","CreatedAt":"2019-01-18T22:18:54","Actor":"mattleibow","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5444","RelatedDescription":"Opened issue \"BI0000 when using [Wrap] on property getters and setters\" (#5444) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\nTry bind something like this:\r\n\r\n```csharp\r\nSemanticColorScheme SemanticColorScheme {\r\n\t[Wrap (\"Runtime.GetNSObject<SemanticColorScheme> (ColorScheme.Handle, false)\")] get;\r\n\t[Wrap (\"ColorScheme = value\")] set;\r\n}\r\n```\r\n\r\nFull type:\r\n\r\n```csharp\r\n\t[BaseType (typeof (NSObject), Name = \"MDCCardScheme\")]\r\n\tinterface CardScheme : CardScheming {\r\n\t\t[Export (\"colorScheme\", ArgumentSemantic.Assign)]\r\n\t\tnew IColorScheming ColorScheme { get; set; }\r\n\r\n\t\t[Export (\"shapeScheme\", ArgumentSemantic.Assign)]\r\n\t\tnew IShapeScheming ShapeScheme { get; set; }\r\n\r\n\t\tSemanticColorScheme SemanticColorScheme {\r\n\t\t\t[Wrap (\"Runtime.GetNSObject<SemanticColorScheme> (ColorScheme.Handle, false)\")] get;\r\n\t\t\t[Wrap (\"ColorScheme = value\")] set;\r\n\t\t}\r\n\t}\r\n```\r\n\r\n### Expected Behavior\r\n\r\nNo error.\r\n\r\n### Actual Behavior\r\n\r\n💥 \r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/mattleibow/953050a4f599d3f7222633939786ad52\r\n\r\n### Build Logs\r\n\r\n```\r\n\r\nBuilding MaterialComponents (Debug|iPhoneSimulator)\r\n__________________________________________________\r\nProject \"/Users/matthew/Projects/XamarinComponents/iOS/MaterialComponents/source/MaterialComponents/MaterialComponents.csproj\" (Build target(s)):\r\n\r\n/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/bin/btouch-native /v /nostdlib /baselib:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Xamarin.iOS.dll /lib:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS /r:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/mscorlib.dll /unsafe /d:\"__UNIFIED__;__MOBILE__;__IOS__;DEBUG\" /Users/matthew/Projects/XamarinComponents/iOS/MaterialComponents/source/MaterialComponents/ApiDefinition.cs /s:/Users/matthew/Projects/XamarinComponents/iOS/MaterialComponents/source/MaterialComponents/Structs.cs -r /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/mscorlib.dll -r /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.dll -r /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Xamarin.iOS.dll /tmpdir:/Users/matthew/Projects/XamarinComponents/iOS/MaterialComponents/source/MaterialComponents/obj/Debug/ios/ /sourceonly:/Users/matthew/Projects/XamarinComponents/iOS/MaterialComponents/source/MaterialComponents/obj/Debug/ios/sources.list /target-framework=Xamarin.iOS,v1.0 \r\nApiDefinition.cs(1540,21): warning CS0618: 'FlatButton' is obsolete: 'This class will be deprecated soon. Consider using TextButtonThemer with a Button instead.'\r\nBTOUCH : error BI0000: Unexpected error - Please file a bug report at http://bugzilla.xamarin.com\r\nDone building project \"MaterialComponents.csproj\" -- FAILED.\r\n\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n\r\nBuild: 1 error, 1 warning\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8914103788","Type":"PullRequestEvent","CreatedAt":"2019-01-18T20:54:49","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5443","RelatedDescription":"Opened pull request \"[appkit] Add missing `[NullAllowed]` on `NSDocument` API. Fixes #5349\" (#5443) at xamarin/xamarin-macios","RelatedBody":"That's an old binding, predating the nullability information from\nheader files.\n\nreference: https://github.com/xamarin/xamarin-macios/issues/5349"},{"Id":"8913860689","Type":"IssuesEvent","CreatedAt":"2019-01-18T20:03:01","Actor":"tlhintoq","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5442","RelatedDescription":"Opened issue \"Request: MacOS Remote USB - please bring it back.\" (#5442) at xamarin/xamarin-macios","RelatedBody":"###Request###\r\nPlease re-active the MacOS remote debugging feature from 2016.  It worked great then just disappeared without a final release.\r\n\r\nThis feature got a standing ovation at Evolve 2016. It was around for about a week, then pulled.\r\nThere was a survey on Twitter that MANY people didn't know about. Then ... well .... hello ... nothing.\r\n\r\nThe thread for it on Xamarin Forums still has people wanting to know when this will be available again.\r\nhttps://forums.xamarin.com/discussion/comment/311153#Comment_311153\r\n\r\nPlease bring this back - when it was there it worked great.\r\n### Steps to Reproduce\r\n\r\n1. Nothing to reproduce\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nTo remotely use an iOS device connected to the Windows PC, as if it were connected directly to the Macintosh build host that is **commonly in a rack someplace other than the developer desk**.\r\n\r\n### Actual Behavior\r\nWorked great at Evolve 2016 - then disappeared.\r\n\r\n### Environment\r\nWindows has the iOS device connected by USB.\r\nMac sees the device as if it were connected directly to the mac.\r\n\r\n\r\n### Build Logs\r\nNothing to log\r\n\r\n### Example Project (If Possible)\r\nNo example required\r\n\r\nRelated to #[1360 ](https://github.com/xamarin/Xamarin.Forms/issues/1360) where it was simply closed as 'wrong area' but the closer didn't mention what would be the right area.  @johnhair suggested the iOS area.\r\n"},{"Id":"8913775299","Type":"PullRequestEvent","CreatedAt":"2019-01-18T19:46:23","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5434","RelatedDescription":"Merged pull request \"[d16-0-P3] Bump mono to latest 2018-08\" (#5434) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@725ba2a2523 Fix https://github.com/mono/mono/issues/12461.\r\n* mono/mono@1dee62626d4 [2018-08 Android,AOT] Support dumping AOT offsets with Android NDK r17+ (#12454) (#12465)\r\n* mono/mono@146c8191fb2 [x86] Set the LLVM data layout.\r\n* mono/mono@5d3077c7bcb [arm] Set the LLVM data layout, without it, opt seems to make incorrect optimizations.\r\n* mono/mono@5266e6a8f10 [2018-08][debugger][backport] Fix crash when there is a generic struct with a field that is an enumerator (#12410)\r\n* mono/mono@0d988bc696e Bump API snapshot submodule\r\n* mono/mono@e6285d015b9 Bump corefx\r\n* mono/mono@51c4f454022 [2018-08] [merp] Batch of fixes (#12095)\r\n* mono/mono@3bf37058fda [interp] use interp_lmf wrapper for interp2native on platforms with wonky sigcontext (#12348)\r\n* mono/mono@25a8be91115 Bump CoreFX to bring a fix for #12093\r\n* mono/mono@29e0e642da8 [Android] Fix build with NDK r18 (#11016) (#12291)\r\n* mono/mono@7b44d5719eb [tests] Remove an invalid assertion on System.IO.DriveInfo\r\n* mono/mono@3fad9a7a1cc Update DateTimeTest.cs\r\n* mono/mono@6b6fd890ee7 Update mono/metadata/culture-info-tables.h\r\n* mono/mono@8f50f96e8f7 Add tests\r\n* mono/mono@1edf795ae0f ko-* specific AM/PM designators\r\n\r\nDiff: https://github.com/mono/mono/compare/9671417e2181fe01d893103843a0dfda96f9a41a...725ba2a2523dffb962712695f16f2d3b0cb142ae"},{"Id":"8913774007","Type":"PullRequestEvent","CreatedAt":"2019-01-18T19:46:08","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5433","RelatedDescription":"Merged pull request \"[d16-0 P3] [macos] Always create new NSFont instance when surfacing (#5423)\" (#5433) at xamarin/xamarin-macios","RelatedBody":"- This is similar to what iOS does with UIFont\r\n- Found in iOS originally with https://bugzilla.xamarin.com/show_bug.cgi?id=25511"},{"Id":"8913435889","Type":"IssuesEvent","CreatedAt":"2019-01-18T18:40:39","Actor":"yevgeniy-seleznev","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5437","RelatedDescription":"Closed issue \"error MT0099 : Internal error persists in Release build with latest Mono\" (#5437) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\nThere has been a linker issue persisting in the Release configuration of our Seeing AI build for some time -- the last version to work was mono 5.8.1. We have thus been locked to this mono version in our production VSTS builds. The original bug  [4236]( https://github.com/xamarin/xamarin-macios/issues/4235) is now closed, reportedly fixed in xamarion.ios 12.0 but unfortunately we can still repro it and it seems to fail with the same MT0099 error. Creating a new bug per Rolf's request.\r\n\r\nWe are planning to drop a new version of Seeing AI to Apple soon and it would be great to be able to use the latest IDE bits.\r\n\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Install XI 12.2.1.11 or later\r\n2. Clone the SeeingAI app (internal)\r\n3. Build it in Release config\r\n\r\n### Expected Behavior\r\nSuccessful build\r\n\r\n### Actual Behavior\r\n\r\nerror MT0099 : Internal error : Not all assemblies for Xamarin.Sdk have link tasks. Please file a bug report with a test case (http://bugzilla.xamarin.com). [/Users/vsts/agent/2.144.0/work/1/s/iOS/App/SeeingAI.iOS.csproj\r\n\r\n### Environment\r\n\r\nOS X 10.13.6\r\nMono 5.16.0\r\nVisual Studio for Mac 7.7.1.15\r\n\r\n(from VSTS hosted macOS image. https://github.com/Microsoft/azure-pipelines-image-generation/blob/master/images/macos/macos-Readme.md#xamarin)\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n[BuildLog_LinkerError_Mono_5.16.txt](https://github.com/xamarin/xamarin-macios/files/2773184/BuildLog_LinkerError_Mono_5.16.txt)\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\nPlease contact Eugene, Harrison or Saqib from Seeing AI Team and we will get you access to the repo.\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"1085961073902129152","CreatedAt":"2019-01-17T18:04:30+00:00","UserScreenname":"xamarinhq","Text":"As the .NET community expands so should the community standups... We are pleased to introduce the expansion of the… https://t.co/EDO0vChQlR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":42,"FavoriteCount":20,"RawContent":null},{"Id":"1083829954515750923","CreatedAt":"2019-01-11T20:56:12+00:00","UserScreenname":"xamarinhq","Text":"...just posted on the Xamarin Blog, Andrei Nitescu shares one of his contributions to Xamarin.Forms, the bindable l… https://t.co/rp3eVPLbYl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":102,"FavoriteCount":43,"RawContent":null},{"Id":"1083399709526503424","CreatedAt":"2019-01-10T16:26:34+00:00","UserScreenname":"xamarinhq","Text":"Our very first Mobile .NET #CommunityStandup will be live in about 30 minutes at 9am Pacific! @maddyleger1,… https://t.co/vmFHIKZTIt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":270,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":154,"FavoriteCount":69,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":82,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":177,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":113,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null}]}},"RunOn":"2019-01-19T05:31:24.788125Z","RunDurationInMilliseconds":2506}