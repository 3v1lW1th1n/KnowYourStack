{"Data":{"GitHub":{"Issues":[{"Id":"570001079","IsPullRequest":false,"CreatedAt":"2020-02-24T17:18:12","Actor":"guybark","Number":"2907","RawContent":null,"Title":"A form resulting from a call to Form.ShowDialog() should be exposed programmatically as a dialog.","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nAccording to https://docs.microsoft.com/en-us/windows/win32/winauto/uiauto-automation-element-propids, UIA providers can set UIA_IsDialogPropertyId true on UI that's semantically a dialog. Based on that property, an assistive technology such as a screen reader can decide how best to convey the dialog's information to the customer. In the case of Narrator, today Narrator can decide to convey some contents of a dialog window when the window appears, beyond announcing only the focused control and the name of the dialog. When Form.ShowDialog() is called, the resulting window is not exposed as having a UIA IsDialog property of true, and so it is not being semantically exposed through UIA as being a dialog.\r\n\r\n**Describe the solution you'd like**\r\nThe UIA Window element associated with the form that appears in response to the Form.ShowDialog() call has a UIA IsDialog property of true.\r\n\r\n**Describe alternatives you've considered**\r\nAs far as I know, there's no straightforward and robust way for an app to get the IsDialog property set true on the form.\r\n\r\n**Will this feature affect UI controls?**\r\nYes.\r\n- Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\nNo.\r\n- What impact will it have on accessibility?\r\nThe form will programmatically be exposed as a dialog, which is the correct match for its semantics.\r\n- Will this feature need to be localized or be localizable?\r\nNo.\r\n","Url":"https://github.com/dotnet/winforms/issues/2907","RelatedDescription":"Open issue \"A form resulting from a call to Form.ShowDialog() should be exposed programmatically as a dialog.\" (#2907)"},{"Id":"569841531","IsPullRequest":true,"CreatedAt":"2020-02-24T13:21:48","Actor":"dotnet-maestro[bot]","Number":"2906","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200223.1\r\n- **Date Produced**: 2/23/2020 2:05 PM\r\n- **Commit**: 85d76351b1f0245c9f331f72219d12e8e2d48e72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20123.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20123.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2906)","Url":"https://github.com/dotnet/winforms/pull/2906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2906)"},{"Id":"569676043","IsPullRequest":true,"CreatedAt":"2020-02-24T09:45:29","Actor":"gpetrou","Number":"2905","RawContent":null,"Title":"Move IProvideClassInfo to Interop OleAut32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move IProvideClassInfo to Interop OleAut32.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2905)","Url":"https://github.com/dotnet/winforms/pull/2905","RelatedDescription":"Closed or merged PR \"Move IProvideClassInfo to Interop OleAut32\" (#2905)"},{"Id":"569675476","IsPullRequest":true,"CreatedAt":"2020-02-24T09:43:26","Actor":"gpetrou","Number":"2904","RawContent":null,"Title":"Add TTS enum in Interop ComCtl32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add TTS enum in Interop ComCtl32.\r\n- Remove TTS constants and replace their usages with the above enum values.\r\n- Remove unused TV and TTI constants.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2904)","Url":"https://github.com/dotnet/winforms/pull/2904","RelatedDescription":"Closed or merged PR \"Add TTS enum in Interop ComCtl32\" (#2904)"},{"Id":"568264381","IsPullRequest":true,"CreatedAt":"2020-02-24T05:46:36","Actor":"hughbe","Number":"2889","RawContent":null,"Title":"Add WebBrowser tests","State":"closed","Body":"## Proposed Changes\r\n- Add WebBrowser tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2889)","Url":"https://github.com/dotnet/winforms/pull/2889","RelatedDescription":"Closed or merged PR \"Add WebBrowser tests\" (#2889)"},{"Id":"567358637","IsPullRequest":true,"CreatedAt":"2020-02-24T05:44:39","Actor":"gpetrou","Number":"2881","RawContent":null,"Title":"Add CreateICW to Interop Gdi32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add CreateICW to Interop Gdi32.\r\n- Remove CreateIC from UnsafeNativeMethods and replace its usages.\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2881)","Url":"https://github.com/dotnet/winforms/pull/2881","RelatedDescription":"Closed or merged PR \"Add CreateICW to Interop Gdi32\" (#2881)"},{"Id":"568741043","IsPullRequest":true,"CreatedAt":"2020-02-24T05:43:48","Actor":"gpetrou","Number":"2896","RawContent":null,"Title":"Remove unused MSAA_MENU_SIG and MSAAMENUINFO","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove unused MSAA_MENU_SIG and MSAAMENUINFO.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2896)","Url":"https://github.com/dotnet/winforms/pull/2896","RelatedDescription":"Closed or merged PR \"Remove unused MSAA_MENU_SIG and MSAAMENUINFO\" (#2896)"},{"Id":"569070910","IsPullRequest":true,"CreatedAt":"2020-02-24T04:45:57","Actor":"hughbe","Number":"2900","RawContent":null,"Title":"Add UserControl and related tests","State":"closed","Body":"## Proposed Changes\r\n- Add UserControl and related tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2900)","Url":"https://github.com/dotnet/winforms/pull/2900","RelatedDescription":"Closed or merged PR \"Add UserControl and related tests\" (#2900)"},{"Id":"569375598","IsPullRequest":true,"CreatedAt":"2020-02-22T18:39:25","Actor":"JarLob","Number":"2903","RawContent":null,"Title":"Fix unintended checkbox (state icon) state change  in multi selection…","State":"open","Body":"… case with SHIFT+LeftMouseClick when clicked not on the first column\r\n\r\nFixes #2902\r\n\r\n## Proposed changes\r\n\r\nUse correct windows message and ignore the click if not on the first column.\r\n\r\n## Customer Impact\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\nLow, if any customer hooked the listview to workaround the bug they should not be affected by the fix.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nNot sure if a test can be written. I looked at existing test, but didn't find any that would send clicks to a list view. Suggestions are welcome.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2903)","Url":"https://github.com/dotnet/winforms/pull/2903","RelatedDescription":"Open PR \"Fix unintended checkbox (state icon) state change  in multi selection…\" (#2903)"},{"Id":"569374765","IsPullRequest":false,"CreatedAt":"2020-02-22T18:32:54","Actor":"JarLob","Number":"2902","RawContent":null,"Title":"Unintended checkbox (state icon) state change  in multi selection case with SHIFT+LeftMouseClick when clicked not on the first column","State":"open","Body":"* .NET Core Version:\r\n\r\nThe issue was found in .NET Framework, but I believe .NET Core inherited it as the identified source code cause is the same.\r\n\r\n* Have you experienced this same bug with .NET Framework?:\r\n\r\n Yes\r\n\r\n**Problem description:**\r\n\r\nSystem.Windows.Forms.ListView.WmNmClick implementation contains:\r\nhttps://github.com/dotnet/winforms/blob/8af8e84c51a0740c339a292263c94d25b46f5324/src/System.Windows.Forms/src/System/Windows/Forms/ListView.cs#L5547-L5551\r\n\r\nHowever the `LVHT.ONITEMSTATEICON` flag is not valid if clicked not on the first column. The method should call `LVM.SUBITEMHITTEST` instead and check subitem like:\r\n```cs\r\nint displayIndex = (int)User32.SendMessageW(this, (User32.WM)LVM.SUBITEMHITTEST, IntPtr.Zero, ref lvhi);\r\nif (displayIndex == -1 || lvhi.iSubItem != 0 || (lvhi.flags & LVHT.ONITEMSTATEICON) == 0)\r\n{\r\n    return;\r\n}\r\n```\r\nThe bug leads to checkboxes (state icons) change in multi selection case with SHIFT+LeftMouseClick when clicked not on the first column:\r\n\r\n![Demo](https://developercommunity.visualstudio.com/storage/attachments/29087-giphy.gif)\r\n\r\n**Expected behavior:**\r\n\r\nCheckboxes are not affected by the click.\r\n\r\n**Minimal repro:**\r\n\r\nThe [zip](https://developercommunity.visualstudio.com/storage/attachments/29088-winformslistviewbug.zip) contains repro VS project for .NET Framework.","Url":"https://github.com/dotnet/winforms/issues/2902","RelatedDescription":"Open issue \"Unintended checkbox (state icon) state change  in multi selection case with SHIFT+LeftMouseClick when clicked not on the first column\" (#2902)"},{"Id":"569331887","IsPullRequest":true,"CreatedAt":"2020-02-22T13:16:36","Actor":"dotnet-maestro[bot]","Number":"2901","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200221.6\r\n- **Date Produced**: 2/22/2020 12:56 AM\r\n- **Commit**: f83aa9749a531bf771a98e5bdace55b31a9bb2b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20121.6\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20121.6\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2901)","Url":"https://github.com/dotnet/winforms/pull/2901","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2901)"},{"Id":"568952302","IsPullRequest":true,"CreatedAt":"2020-02-21T13:22:39","Actor":"blowdart","Number":"2899","RawContent":null,"Title":"Create security.md","State":"open","Body":"Add security bug reporting instructions\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2899)","Url":"https://github.com/dotnet/winforms/pull/2899","RelatedDescription":"Open PR \"Create security.md\" (#2899)"},{"Id":"568941815","IsPullRequest":true,"CreatedAt":"2020-02-21T13:21:41","Actor":"dotnet-maestro[bot]","Number":"2898","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200220.2\r\n- **Date Produced**: 2/20/2020 10:40 PM\r\n- **Commit**: df24cd9b34682b5509df5a08ef8a8952e5a4f623\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20120.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20120.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2898)","Url":"https://github.com/dotnet/winforms/pull/2898","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2898)"},{"Id":"568856547","IsPullRequest":false,"CreatedAt":"2020-02-21T10:04:57","Actor":"vladimir-krestov","Number":"2897","RawContent":null,"Title":"[Accessibility] A control can have many tooltips","State":"open","Body":"* .NET Core Version: 5.0.100-alpha1-016143\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n\r\n**Problem description:**\r\n- A form can show several tooltips at the same time\r\n![image](https://user-images.githubusercontent.com/49272759/75023185-6db46800-54a8-11ea-9913-6713c97d2392.png)\r\n![image](https://user-images.githubusercontent.com/49272759/75022884-ecf56c00-54a7-11ea-9d99-a47016b48d27.png)\r\n- A form shows the latest added keyboard tooltip at the same time if a control has several tooltips (as expected)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n- A form should show one tooltip at the same time\r\n\r\n**Minimal repro:**\r\n- Create a .Net 5.0 app\r\n- Add a button to the app\r\n- Add several ToolTIp instances and associate with the button\r\n- Run and hover the button by mouse","Url":"https://github.com/dotnet/winforms/issues/2897","RelatedDescription":"Open issue \"[Accessibility] A control can have many tooltips\" (#2897)"},{"Id":"568262093","IsPullRequest":true,"CreatedAt":"2020-02-21T01:42:10","Actor":"hughbe","Number":"2888","RawContent":null,"Title":"Add MdiClient tests","State":"closed","Body":"## Proposed Changes\r\n- Add MdiClient tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2888)","Url":"https://github.com/dotnet/winforms/pull/2888","RelatedDescription":"Closed or merged PR \"Add MdiClient tests\" (#2888)"},{"Id":"568472426","IsPullRequest":true,"CreatedAt":"2020-02-21T00:11:33","Actor":"gpetrou","Number":"2894","RawContent":null,"Title":"Add NFR enum to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add NFR enum to Interop User32.\r\n- Remove NFR constants and replace their usages with the above enum values.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2894)","Url":"https://github.com/dotnet/winforms/pull/2894","RelatedDescription":"Closed or merged PR \"Add NFR enum to Interop User32\" (#2894)"},{"Id":"568535586","IsPullRequest":true,"CreatedAt":"2020-02-20T23:41:33","Actor":"Tanya-Solyanik","Number":"2895","RawContent":null,"Title":"removed DesignerCategory attribute from Form class","State":"closed","Body":"As @weltkante pointed out, DesignerCategory attribute is inheritable and if we have this attribute on Form class, we are enforsing this category on all user forms/controls and blocking designer. Thank you!\r\nI'm removing this attribute in this change. \r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2895)","Url":"https://github.com/dotnet/winforms/pull/2895","RelatedDescription":"Closed or merged PR \"removed DesignerCategory attribute from Form class\" (#2895)"},{"Id":"568085242","IsPullRequest":true,"CreatedAt":"2020-02-20T19:25:54","Actor":"Tanya-Solyanik","Number":"2887","RawContent":null,"Title":"show file in code view ","State":"closed","Body":"UserControl.cs has no content to show in the designer, thus setting the default editor to Code view.\r\nFormatControl and MaskedTextBox.TextEdtorDropDown, would load in the designer eventually, thus not changing the files, only removing association with designer in the project.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2887)","Url":"https://github.com/dotnet/winforms/pull/2887","RelatedDescription":"Closed or merged PR \"show file in code view \" (#2887)"},{"Id":"568468583","IsPullRequest":true,"CreatedAt":"2020-02-20T17:48:22","Actor":"gpetrou","Number":"2893","RawContent":null,"Title":"Add DTS enum to Interop ComCtl32","State":"open","Body":"## Proposed changes\r\n\r\n- Add DTS enum to Interop ComCtl32.\r\n- Remove DTS constants and replace their usages with the above enum values.\r\n- Remove unused DI_NORMAL constant.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2893)","Url":"https://github.com/dotnet/winforms/pull/2893","RelatedDescription":"Open PR \"Add DTS enum to Interop ComCtl32\" (#2893)"},{"Id":"568450638","IsPullRequest":true,"CreatedAt":"2020-02-20T17:14:52","Actor":"hughbe","Number":"2892","RawContent":null,"Title":"Cleanup attribute declarations","State":"open","Body":"## Proposed Changes\r\n- Cleanup attribute declarations\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2892)","Url":"https://github.com/dotnet/winforms/pull/2892","RelatedDescription":"Open PR \"Cleanup attribute declarations\" (#2892)"},{"Id":"568284131","IsPullRequest":true,"CreatedAt":"2020-02-20T13:21:46","Actor":"dotnet-maestro[bot]","Number":"2890","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200219.14\r\n- **Date Produced**: 2/20/2020 4:52 AM\r\n- **Commit**: 4660949bde1083e8b1efba3096dd145d590a0b17\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20119.14\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20119.14\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2890)","Url":"https://github.com/dotnet/winforms/pull/2890","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2890)"},{"Id":"568289193","IsPullRequest":false,"CreatedAt":"2020-02-20T13:10:48","Actor":"ygc369","Number":"2891","RawContent":null,"Title":"[Proposal] Add a new kind of dialog box ---- InputDialog","State":"open","Body":"InputDialog can be used to get user's input text. VB already has this kind of dialog box. I hope that C# winform can have a more powerful one. (Although C# can use VB's InputBox, but it is ugly.)","Url":"https://github.com/dotnet/winforms/issues/2891","RelatedDescription":"Open issue \"[Proposal] Add a new kind of dialog box ---- InputDialog\" (#2891)"},{"Id":"567784198","IsPullRequest":false,"CreatedAt":"2020-02-19T19:14:35","Actor":"filipnavara","Number":"2886","RawContent":null,"Title":"Runtime crash due to localization and the way designer serializes keyboard shortcuts","State":"open","Body":"* .NET Core Version: 3.1.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\nSteps to reproduce:\r\n- Create a blank .NET Framework WinForms application with a Form.\r\n- Set the Form to `Localizable = true` in the designer.\r\n- Add context menu with single item.\r\n- Set the `ShortcutKeys` on the item to `Control+C`.\r\n- Observe that the application works just fine on .NET Framework 4.8.\r\n- Switch locale at startup to German by `System.Threading.Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(\"de-DE\");`\r\n- Observe that the application still starts just fine on .NET Framework 4.8.\r\n- Change the application to target `netcoreapp31` and it immediately crashes on startup.\r\n\r\nThe reason for the crash is that the .resx file contains the shortcut key serialized as\r\n```\r\n  <data name=\"booToolStripMenuItem.ShortcutKeys\" type=\"System.Windows.Forms.Keys, System.Windows.Forms\">\r\n    <value>Ctrl+C</value>\r\n  </data>\r\n```\r\n\r\nNotice that the serialized value starts with `Ctrl`, not `Control`. It is produced and consumed by `KeysConverter` class that is [locale dependent](https://github.com/dotnet/winforms/blob/df89eb965dd59fd15341972e3a6ce33e51a86317/src/System.Windows.Forms/src/System/Windows/Forms/KeysConverter.cs#L44-L66). While the value `Control` would work in any locale due to the fallback to names in the `Keys` enum the value `Ctrl` is taken from a dictionary that contains localized names. On .NET Core 3.1 in the German localization the name for `Control` key is `Strg`. Thus the value `Ctrl+C` in the resource file is invalid and causes conversion error at runtime.\r\n\r\nNotably we migrated a large project from .NET Framework to .NET Core where we hit this issue. The .NET Framework also has similar issue in code but the localizations may differ which would explain why the problem is not hit.\r\n\r\nManually fixing the value in the .resx file to `Control+C` makes the application work in any locale but any further editing in the designer breaks it again.\r\n\r\n**Expected behavior:**\r\n\r\nNo crash. The resources generated by the designer should be locale independent.\r\n\r\n**Minimal repro:**\r\n\r\nHere's the sample app created using the steps above. It is multi-targeting both .NET Framework and .NET Core so it can run in both variation from inside Visual Studio.\r\n\r\n[WindowsFormsApp2.zip](https://github.com/dotnet/winforms/files/4226867/WindowsFormsApp2.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2886","RelatedDescription":"Open issue \"Runtime crash due to localization and the way designer serializes keyboard shortcuts\" (#2886)"},{"Id":"567554245","IsPullRequest":true,"CreatedAt":"2020-02-19T13:16:48","Actor":"dotnet-maestro[bot]","Number":"2885","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200218.1\r\n- **Date Produced**: 2/18/2020 2:20 PM\r\n- **Commit**: b40d0c89c230189b4c6aeb32c0a43218b4bc3359\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20118.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20118.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2885)","Url":"https://github.com/dotnet/winforms/pull/2885","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2885)"},{"Id":"567526912","IsPullRequest":false,"CreatedAt":"2020-02-19T12:11:56","Actor":"M-Lipin","Number":"2884","RawContent":null,"Title":"Update documentation and guides related to WinForms Accessibility","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\\\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nYes\r\n\r\n**Problem description:**\r\nWinForms documentation and guides do not fully describe the steps and options about setting accessibility properties:\r\n* https://github.com/dotnet/docs/blob/live/docs/framework/winforms/controls/providing-accessibility-information-for-controls-on-a-windows-form.md\r\n* https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.accessiblename?view=netframework-4.8\r\n* https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.accessibledefaultactiondescription?view=netframework-4.8\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nDocumentation and guides should be descriptive to allow app developers to implement accessible applications using WinForms controls.\r\n\r\n**Minimal repro:**\r\nCreate WinForms app, add several WinForms controls to the form, try to get information how to set up accessibility properties to make the application fully accessible.\r\nThere is no default information except the `AccessibleName` has default value 'null'.","Url":"https://github.com/dotnet/winforms/issues/2884","RelatedDescription":"Open issue \"Update documentation and guides related to WinForms Accessibility\" (#2884)"},{"Id":"567370280","IsPullRequest":true,"CreatedAt":"2020-02-19T08:01:46","Actor":"gpetrou","Number":"2883","RawContent":null,"Title":"Add NIF and NIIF enums to Interop Shell32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add NIF and NIIF enums to Interop Shell32.\r\n- Remove NIF and NIIF constants and replace their usages with the above enum values.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2883)","Url":"https://github.com/dotnet/winforms/pull/2883","RelatedDescription":"Closed or merged PR \"Add NIF and NIIF enums to Interop Shell32\" (#2883)"},{"Id":"567359529","IsPullRequest":true,"CreatedAt":"2020-02-19T07:29:15","Actor":"gpetrou","Number":"2882","RawContent":null,"Title":"Remove unused FADF constants","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove unused FADF constants.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2882)","Url":"https://github.com/dotnet/winforms/pull/2882","RelatedDescription":"Closed or merged PR \"Remove unused FADF constants\" (#2882)"},{"Id":"567353289","IsPullRequest":true,"CreatedAt":"2020-02-19T07:07:26","Actor":"RussKie","Number":"2880","RawContent":null,"Title":"Run tests in x86 and x64","State":"closed","Body":"Resolves #2879\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2880)","Url":"https://github.com/dotnet/winforms/pull/2880","RelatedDescription":"Closed or merged PR \"Run tests in x86 and x64\" (#2880)"},{"Id":"567321279","IsPullRequest":false,"CreatedAt":"2020-02-19T07:07:26","Actor":"RussKie","Number":"2879","RawContent":null,"Title":"Run CI tests in x86 and x64","State":"closed","Body":"Right now all our tests are run in \"Any CPU\" mode. However we have a number of interop API that are platform specific, and we are unable to test those.\r\n\r\nCI tests must run under x86 and x64. When time comes they will also must be run under arm64 as well.","Url":"https://github.com/dotnet/winforms/issues/2879","RelatedDescription":"Closed issue \"Run CI tests in x86 and x64\" (#2879)"},{"Id":"567288777","IsPullRequest":true,"CreatedAt":"2020-02-19T04:18:21","Actor":"RussKie","Number":"2878","RawContent":null,"Title":"Update branding","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2878)","Url":"https://github.com/dotnet/winforms/pull/2878","RelatedDescription":"Closed or merged PR \"Update branding\" (#2878)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-25T05:30:56.2230546Z","RunDurationInMilliseconds":1083}