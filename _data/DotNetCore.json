{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":93,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null},{"Title":".NET Core Source Code Analysis with Intel® VTune™ Amplifier","PublishedOn":"2018-10-23T21:04:49+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"This post was written by Varun Venkatesan, Li Tian, Denis Pravdin, who are engineers at Intel. They are excited to share .NET Core-specific enhancements that Intel has made to VTune Amplifier...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/net-core-source-code-analysis-with-intel-vtune-amplifier/","RawContent":null},{"Title":"Call For Participation: .NET and TypeScript at FOSDEM conference","PublishedOn":"2018-10-23T20:16:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The organizers of the FOSDEM 2019 conference have allocated a “Developer Room” on Saturday February 2nd 2019 for .NET and TypeScript discussions in Brussels Belgium.   FOSDEM is one of Europe’s most...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/call-for-participation-net-and-typescript-at-fosdem-conference/","RawContent":null},{"Title":".NET Framework October 2018 Preview of Quality Rollup","PublishedOn":"2018-10-18T20:44:34+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the October 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated Japanese dates that...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/18/net-framework-october-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 3","PublishedOn":"2018-10-18T01:03:01+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 3. We have made more improvements to the overall release that we would love to get your feedback on, either in the comments or at dotnet/core #2004....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-net-core-2-2-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 3","PublishedOn":"2018-10-17T20:10:48+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 3 available, together with a new preview of our data provider for Cosmos DB and updated spatial extensions for various providers. Preview 3 is going to be the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-entity-framework-core-2-2-preview-3/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8566727800","Type":"IssuesEvent","CreatedAt":"2018-11-10T02:14:31","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20909","RelatedDescription":"Closed issue \"LocalGC: Unable to initialize custom GC\" (#20909) at dotnet/coreclr","RelatedBody":"I am unable to compile DLL that will be accepted as custom GC - no matter what I try (Debug/Release, x86/x64) runtime seems to not like its binary format:\r\n\r\n```\r\n> dotnet run\r\nUsing launch settings from F:\\GithubProjects\\CoreCLR.ZeroGC\\src\\Samples.ConsoleApp\\Properties\\launchSettings.json...\r\nFailed to initialize CoreCLR, HRESULT: 0x80004005\r\n```\r\n\r\nAnd `launchSettings.json`:\r\n\r\n```\r\n{\r\n  \"profiles\": {\r\n    \"ConsoleApp\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"COMPlus_GCName\": \"f:\\\\GithubProjects\\\\CoreCLR.ZeroGC\\\\build\\\\ZeroGC.Calloc\\\\x64_Release\\\\ZeroGC.Calloc.dll\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nRepro should be possible from my project at https://github.com/kkokosa/CoreCLR.ZeroGC. I've double checked it on two completely different machines: Windows 10 Pro 1803 17134.345, .NET Core 2.1.400, Windows SDK 10.0.15063.0 and Windows Server 2016 1607 14393.1944 .NET Core 2.1.402, Windows SDK 10.0.16299.0. I've checked also the newest 2.1.5 with 2.1.403 SDK.\r\n\r\nUnderlying `LoadLibraryExW` just always returns `STATUS_INVALID_IMAGE_FORMAT`:\r\n\r\n![image](https://user-images.githubusercontent.com/11159779/48255938-66ca2900-e40e-11e8-8a21-83e95ef5e00b.png)\r\n\r\nI've double checked all possible dependencies - compiled x64 dll is indeed 64-bit and has only 64-bit dependencies (checked by Depends). Debug build does not help here as it is this system call that is failing...\r\n\r\nEdit: BTW, the same project was working during .NET Core 2.1 preview."},{"Id":"8566694317","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:54:48","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20907","RelatedDescription":"Merged pull request \"Add back support for deserialization of BinaryFormatted resources\" (#20907) at dotnet/coreclr","RelatedBody":"This adds back support for using BinaryFormatter to deserialize resources when loaded\r\nfrom assembly.\r\n\r\nWe conditionally load BinaryFormatter and will throw if asked to deserialize binary formatted\r\nresources and cannot find it.\r\n\r\nI'll put up a CoreFx PR shortly with tests."},{"Id":"8566683982","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:49:13","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20880","RelatedDescription":"Merged pull request \"Delete dead/unreachable code related to remoting\" (#20880) at dotnet/coreclr","RelatedBody":""},{"Id":"8566678097","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:46:07","Actor":"tarekgh","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20899","RelatedDescription":"Merged pull request \"Expose Index and Range types\" (#20899) at dotnet/coreclr","RelatedBody":"This change is exposing Index and Range types for C# 8.0 compiler support"},{"Id":"8566663765","Type":"IssuesEvent","CreatedAt":"2018-11-10T01:38:43","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20924","RelatedDescription":"Opened issue \"[Linux/arm64] System.Net.NameResolution.Tests randomly fail\" (#20924) at dotnet/coreclr","RelatedBody":"These four corefx tests are randomly failing on Linux/arm64 (with or without JitStress or JitStressRegs):\r\n\r\n* System.Net.NameResolution.Tests.GetHostEntryTest.Dns_GetHostEntry_HostString_Ok(hostName: \\\"\\\")\r\n* System.Net.NameResolution.Tests.GetHostEntryTest.Dns_GetHostEntryAsync_HostString_Ok(hostName: \\\"\\\")\r\n* System.Net.NameResolution.Tests.GetHostByNameTest.DnsObsoleteBeginEndGetHostByName_EmptyString_ReturnsHostName\r\n* System.Net.NameResolution.Tests.GetHostByNameTest.DnsObsoleteGetHostByName_EmptyString_ReturnsHostName\r\n\r\nI believe the root cause was always **System.Net.Internals.SocketExceptionFactory+ExtendedSocketException : Resource temporarily unavailable**\r\n\r\n```\r\nMESSAGE:\r\nSystem.Net.Internals.SocketExceptionFactory+ExtendedSocketException : Resource temporarily unavailable\r\n+++++++++++++++++++\r\nSTACK TRACE:\r\nat System.Net.Dns.InternalGetHostByName(String hostName) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 65 at System.Net.Dns.ResolveCallback(Object context) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 208 --- End of stack trace from previous location where exception was thrown --- at System.Net.Dns.HostResolutionEndHelper(IAsyncResult asyncResult) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 358 at System.Net.Dns.EndGetHostByName(IAsyncResult asyncResult) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 383 at System.Net.NameResolution.Tests.GetHostByNameTest.DnsObsoleteBeginEndGetHostByName_EmptyString_ReturnsHostName() in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/tests/FunctionalTests/GetHostByNameTest.cs:line 117\r\n```\r\n\r\n\r\n```\r\nStacktrace\r\nMESSAGE:\r\nSystem.AggregateException : One or more errors occurred. (One or more errors occurred. (Resource temporarily unavailable)) (One or more errors occurred. (Resource temporarily unavailable))\\n---- System.AggregateException : One or more errors occurred. (Resource temporarily unavailable)\\n-------- System.Net.Internals.SocketExceptionFactory+ExtendedSocketException : Resource temporarily unavailable\\n---- System.AggregateException : One or more errors occurred. (Resource temporarily unavailable)\\n-------- System.Net.Internals.SocketExceptionFactory+ExtendedSocketException : Resource temporarily unavailable\r\n+++++++++++++++++++\r\nSTACK TRACE:\r\nat System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 103 at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks, Int32 millisecondsTimeout) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 65 at System.Net.NameResolution.Tests.GetHostEntryTest.TestGetHostEntryAsync(Func`1 getHostEntryFunc) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/tests/FunctionalTests/GetHostEntryTest.cs:line 41 --- End of stack trace from previous location where exception was thrown --- ----- Inner Stack Trace #1 (System.AggregateException) ----- ----- Inner Stack Trace ----- at System.Net.Dns.InternalGetHostByName(String hostName) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 65 at System.Net.Dns.ResolveCallback(Object context) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 208 --- End of stack trace from previous location where exception was thrown --- at System.Net.Dns.HostResolutionEndHelper(IAsyncResult asyncResult) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 358 at System.Net.Dns.EndGetHostEntry(IAsyncResult asyncResult) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 500 at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization) --- End of stack trace from previous location where exception was thrown --- at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 77 ----- Inner Stack Trace #2 (System.AggregateException) ----- ----- Inner Stack Trace ----- at System.Net.Dns.InternalGetHostByName(String hostName) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 65 at System.Net.Dns.ResolveCallback(Object context) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 208 --- End of stack trace from previous location where exception was thrown --- at System.Net.Dns.HostResolutionEndHelper(IAsyncResult asyncResult) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 358 at System.Net.Dns.EndGetHostEntry(IAsyncResult asyncResult) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_prtest/_/fx/src/System.Net.NameResolution/src/System/Net/DNS.cs:line 500 at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n```\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_jitstressregs0x10_tst_prtest/8/\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_jitstress2_tst_prtest/9/\r\n\r\nhttps://github.com/dotnet/corefx/issues/24355 could be a related issue"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8566413608","Type":"IssuesEvent","CreatedAt":"2018-11-09T23:52:40","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10313","RelatedDescription":"Opened issue \"user facing string review for dotnet tool --install\" (#10313) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8566406889","Type":"PullRequestEvent","CreatedAt":"2018-11-09T23:50:11","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10312","RelatedDescription":"Opened pull request \"dotnet tool install local PACKAGEID\" (#10312) at dotnet/cli","RelatedBody":"fa04f82 and 83394e4 is set up for this change. Since bigger function like ToolPackageInstaller is a model all along . There are little `dotnet tool install -g` and `dotnet tool install --local` can share. So I renamed existing ToolInstallCommand to ToolInstallGlobalOrToolPathCommand and make ToolInstallCommand a simple class just to redirect -g or --local.\r\n\r\n873dc68 is to implement local install -- download the package, add to cache and add to manifest file\r\n"},{"Id":"8566371446","Type":"IssuesEvent","CreatedAt":"2018-11-09T23:37:49","Actor":"andreister","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10311","RelatedDescription":"Opened issue \"dotnet build --no-restore fails in Docker\" (#10311) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nCreate a console app:\r\n|-Dockerfile\r\n|-Example1.csproj\r\n|-Example1.sln\r\n|-Program.cs\r\n\r\nIn Dockerfile restore packages as a first step, and the build with `--no-restore` as a second step:\r\n```\r\nFROM microsoft/dotnet:2.1-sdk\r\nWORKDIR /app\r\n\r\n# create build image: (restore as distinct layer to speed up build, so we can use --no-restore below)\r\nCOPY ./Example1.sln ./\r\nCOPY ./*.csproj ./\r\nRUN dotnet restore \r\n\r\n# copy source code and build\r\nCOPY ./ ./\r\nRUN dotnet build -c Release -o out --no-restore\r\n```\r\n\r\n## Expected  behavior\r\nProject builds fine in Docker\r\n\r\n## Actual behavior\r\nBuild fails complaining about missing project.assets.json (notice `/app/C:/Users/andrew/` in the path)\r\n```\r\n/usr/share/dotnet/sdk/2.1.403/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(198,5): error NETSDK1004: Assets file '/app/C:/Users/andrew/source/repos/Example1/obj/project.assets.json' not found. Run a NuGet package restore to generate this file. [/app/Example1.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\n## Environment data\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8566137211","Type":"PullRequestEvent","CreatedAt":"2018-11-09T22:29:25","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/963","RelatedDescription":"Merged pull request \"Add ISOWeek\" (#963) at dotnet/standard","RelatedBody":"This fixes #956 "},{"Id":"8566137198","Type":"IssuesEvent","CreatedAt":"2018-11-09T22:29:24","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/956","RelatedDescription":"Closed issue \"Include System.Globalization.ISOWeek\" (#956) at dotnet/standard","RelatedBody":"I'd like to propose the inclusion of the new `System.Globalization.ISOWeek` APIs, added in https://github.com/dotnet/corefx/pull/30386.\r\n\r\nI would consider these pretty fundamental APIs that would be useful on all the current .NET platforms.\r\n\r\nThe implementation doesn't have a lot of dependencies and could probably be (more or less) copied to other platforms.\r\n\r\n```patch\r\ndiff --git a/netstandard/ref/System.Globalization.cs b/netstandard/ref/System.Globalization.cs\r\nindex 995ce25..4214d5a 100644\r\n--- a/netstandard/ref/System.Globalization.cs\r\n+++ b/netstandard/ref/System.Globalization.cs\r\n@@ -446,6 +446,15 @@ namespace System.Globalization\r\n         public string GetUnicode(string ascii, int index) { throw null; }\r\n         public string GetUnicode(string ascii, int index, int count) { throw null; }\r\n     }\r\n+    public static partial class ISOWeek\r\n+    {\r\n+        public static int GetWeekOfYear(System.DateTime date) { throw null; }\r\n+        public static int GetWeeksInYear(int year) { throw null; }\r\n+        public static int GetYear(System.DateTime date) { throw null; }\r\n+        public static System.DateTime GetYearEnd(int year) { throw null; }\r\n+        public static System.DateTime GetYearStart(int year) { throw null; }\r\n+        public static System.DateTime ToDateTime(int year, int week, System.DayOfWeek dayOfWeek) { throw null; }\r\n+    }\r\n     public partial class JapaneseCalendar : System.Globalization.Calendar\r\n     {\r\n         public JapaneseCalendar() { }\r\n```"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8566907282","Type":"PullRequestEvent","CreatedAt":"2018-11-10T04:22:32","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33386","RelatedDescription":"Opened pull request \"CI is failing after my last checkin, trying to revert the version\" (#33386) at dotnet/corefx","RelatedBody":"…change for System.Memory to try and repair.\r\n\r\n```\r\n19:30:06     Testing System.Windows.Extensions TFM=netcoreapp3.0 RID=win7-x64\r\n19:30:06     Testing System.Windows.Extensions TFM=netcoreapp3.0 RID=debian.8-x64\r\n19:30:07 D:\\j\\workspace\\windows-TGrou---0d2c9ac4\\artifacts\\bin\\testPkg\\packageTest.targets(69,5): error : Assembly 'System.Drawing.Common' has insufficient version for dependency 'System.Memory' : 4.1.0.0 < 4.2.0.0. [D:\\j\\workspace\\windows-TGrou---0d2c9ac4\\artifacts\\bin\\testPkg\\projects\\System.Windows.Extensions\\netcoreapp3.0\\project.csproj] [D:\\j\\workspace\\windows-TGrou---0d2c9ac4\\pkg\\test\\testPackages.proj]\r\n```\r\n\r\n"},{"Id":"8566804984","Type":"PullRequestEvent","CreatedAt":"2018-11-10T03:05:00","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33385","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview-27110-01, preview-27109-05, respectively (master)\" (#33385) at dotnet/corefx","RelatedBody":""},{"Id":"8566687433","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:51:06","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33384","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#33384) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8566669550","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:41:39","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33377","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to rtm-27109-02, rtm-27109-02, rtm-27109-04, respectively (release/2.2)\" (#33377) at dotnet/corefx","RelatedBody":""},{"Id":"8566632663","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:22:54","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33383","RelatedDescription":"Opened pull request \"Fix a couple System.Memory ref mistakes.\" (#33383) at dotnet/corefx","RelatedBody":""},{"Id":"8566609160","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:11:11","Actor":"maryamariyan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33382","RelatedDescription":"Opened pull request \"Ports ConfigurationPermission/ConfigurationPermissionAttribute as stubs\" (#33382) at dotnet/corefx","RelatedBody":"TODO: Add tests\r\n\r\ncc: @danmosemsft "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8566955295","Type":"PullRequestEvent","CreatedAt":"2018-11-10T05:01:20","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30944","RelatedDescription":"Merged pull request \"Fix gold-bar when an analyzer starts up, but not all references are restored/found\" (#30944) at dotnet/roslyn","RelatedBody":"Found while dogfooding.  I didn't take into account that even built-in types like System.String might come back as an error-type during VSLoading."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8566968610","Type":"PullRequestEvent","CreatedAt":"2018-11-10T05:11:55","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6550","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6550) at dotnet/corert","RelatedBody":"...mostly because I don't want us to forget to pick up the matching JitInterface change from dotnet/coreclr#20814. No JitInterface change this time.\r\n\r\nObject stack allocation doesn't work yet for R2R compilations because we seem to be pattern matching against `ALLOCOBJ  ref`, when in ready to run we have `CALL help ref    HELPER.CORINFO_HELP_READYTORUN_NEW`.\r\n\r\nIt doesn't seem like we need to port the changes in `getClassGClayout` because CoreRT class layout information includes the EEType field in reference types, whereas CoreCLR doesn't."},{"Id":"8566958738","Type":"IssuesEvent","CreatedAt":"2018-11-10T05:03:52","Actor":"gqqnbig","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6554","RelatedDescription":"Opened issue \"System.MissingMethodException : Method 'System.Xml.Serialization.XmlElementAttribute..ctor' not found.\" (#6554) at dotnet/corert","RelatedBody":"## Steps to reproduce:\r\n\r\n1. Create a .NET Core 2.1 Console project,\r\n2. Create a file as the following.\r\n\r\n```\r\nusing System;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar serializer = new XmlSerializer(typeof(C));\r\n\t\t\tvar c = new C(2);\r\n\t\t\tserializer.Serialize(Console.Out, c);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic class C\r\n\t{\r\n\t\t[XmlElement(\"Number\",typeof(int))]\r\n\t\tpublic int N { get; set; }\r\n\r\n\t\tpublic C(int n)\r\n\t\t{\r\n\t\t\tN = n;\r\n\t\t}\r\n\r\n\t\tpublic C()\r\n\t\t{\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n3. Compile the project against CoreRT revision 14c335f2547bbcae19ff2cc8adc1c571e4d219fa with command \r\n\r\n> dotnet publish -r win-x64 -c release\r\n> 用于 .NET Core 的 Microsoft (R) 生成引擎版本 15.8.166+gd4e8d81a88\r\n> 版权所有(C) Microsoft Corporation。保留所有权利。\r\n> \r\n> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : warning MSB4011: 无法再次导入“C:\\Program Files\\dotnet\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets”。可能已在“C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj (7,3)”处导入过它。这很可能是生成创作错误。将忽略此后续导入。\r\n> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : warning MSB4011: 无法再次导入“C:\\Program Files\\dotnet\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets”。可能已在“C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj (7,3)”处导入过它。这很可能是生成创作错误。将忽略此后续导入。\r\n>   C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj 的还原在 46.24 ms 内完成。\r\n> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : warning MSB4011: 无法再次导入“C:\\Program Files\\dotnet\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets”。可能已在“C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj (7,3)”处导入过它。这很可能是生成创作错误。将忽略此后续导入。\r\n>   ConsoleApp1 -> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\bin\\release\\netcoreapp2.1\\win-x64\\ConsoleApp1.dll\r\n>   Generating native code\r\n>   ConsoleApp1 -> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\bin\\release\\netcoreapp2.1\\win-x64\\publish\\\r\n\r\n4. Run ConsoleApp1.exe\r\n\r\n## What is expected\r\n\r\nConsoleApp1.exe runs without exception.\r\n\r\n## What happens actually\r\n\r\n> ConsoleApp1.exe\r\n> Unhandled Exception: System.InvalidOperationException: There was an error generating the XML document. ---> System.InvalidOperationException: There was an error reflecting type 'ConsoleApp1.C'. ---> System.MissingMethodException: Method 'System.Xml.Serialization.XmlElementAttribute..ctor' not found.\r\n>    at Internal.Reflection.Extensions.NonPortable.CustomAttributeInstantiator.Instantiate(CustomAttributeData) + 0x528\r\n>    at ConsoleApp1!<BaseAddress>+0x201f38\r\n>    at ConsoleApp1!<BaseAddress>+0x207bac\r\n>    at ConsoleApp1!<BaseAddress>+0x7b289\r\n>    at System.Xml.Serialization.XmlAttributes..ctor(ICustomAttributeProvider) + 0xe9\r\n>    at ConsoleApp1!<BaseAddress>+0x17bdfa\r\n>    at ConsoleApp1!<BaseAddress>+0x17e882\r\n>    at ConsoleApp1!<BaseAddress>+0x17dff0\r\n>    at ConsoleApp1!<BaseAddress>+0x17cd85\r\n> \r\n>    --- End of inner exception stack trace ---\r\n>    at ConsoleApp1!<BaseAddress>+0x17ce4e\r\n>    at ConsoleApp1!<BaseAddress>+0x17beb9\r\n>    at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type, XmlRootAttribute, String) + 0x7a\r\n>    at ConsoleApp1!<BaseAddress>+0x188f55\r\n>    at ConsoleApp1!<BaseAddress>+0x188e75\r\n>    at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter, Object, XmlSerializerNamespaces, String, String) + 0xc1\r\n> \r\n>    --- End of inner exception stack trace ---\r\n>    at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter, Object, XmlSerializerNamespaces, String, String) + 0x29a\r\n>    at System.Xml.Serialization.XmlSerializer.Serialize(TextWriter, Object, XmlSerializerNamespaces) + 0x5f\r\n>    at ConsoleApp1.Program.Main(String[]) + 0x66\r\n>    at ConsoleApp1!<BaseAddress>+0x206ba6\r\n> \r\n\r\n\r\nHow do I fix it?"},{"Id":"8566895128","Type":"IssuesEvent","CreatedAt":"2018-11-10T04:12:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6548","RelatedDescription":"Closed issue \"5 million  times of List<T>.Add will cause program hang in GC even memory usage was little\" (#6548) at dotnet/corert","RelatedBody":"5 million times of List<T>.Add will cause program to hang in GC even memory usage was little\r\n\r\n\r\n```\r\n\r\n\t    static void test()\r\n\t    {\r\n\r\n\t\t    List<Test2> test = new List<Test2>();\r\n\r\n\t\t    Test2 t2;\r\n\t\t    t2.y = 11;\r\n\r\n\t\t\tStopwatch stopwatch = new Stopwatch();\r\n\t\t    stopwatch.Start();\r\n\t\t    for (int i = 0; i < 5000000; i++)\r\n\t\t    {\r\n\r\n\t\t\t    //vectorEmplaceBack(vectorFunctions.pVector,&t2);\r\n\t\t\t    test.Add(t2);\r\n\t\t    }\r\n\t\t    stopwatch.Stop();\r\n\t\t    Console.WriteLine(\"c# time:\" + stopwatch.ElapsedMilliseconds);\r\n\r\n\t\t}\r\n```\r\n\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/48242821-ec060b80-e417-11e8-8bd9-3f7824369efe.png)\r\n\r\n\r\nmemory usage at the time of hang was 60MB in taskmgr\r\n\r\nwas static linked in C++ with x64 release ,however I believe it can reproduce in other cases"},{"Id":"8566699556","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:57:51","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6553","RelatedDescription":"Opened pull request \"WIP: wasm: add method reference for delegate parameters to pinvokes\" (#6553) at dotnet/corert","RelatedBody":"This change gets the delegate wrapper for the pinvoke added to the dependencies so the function is defined in the LLVM and not just declared.  This would resolve #6525 but, I think, it is subject to the same problem as #6415.  This is the stacktrace from the test included here which is similar:\r\n\r\n```\r\nexception thrown: abort() at jsStackTrace@http://localhost:6931/HelloWasm.js:1059:13\r\nstackTrace@http://localhost:6931/HelloWasm.js:1076:12\r\nabort@http://localhost:6931/HelloWasm.js:7982:44\r\n_abort@http://localhost:6931/HelloWasm.js:5751:7\r\n__Z6AssertPKcS0_jS0_@http://localhost:6931/HelloWasm.wasm:wasm-function[19635]:0x9d23da\r\n_RhGetCommonStubAddress@http://localhost:6931/HelloWasm.wasm:wasm-function[21362]:0xad0a87\r\n_S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal__AllocateThunk@http://localhost:6931/HelloWasm.wasm:wasm-function[2087]:0x15cc1b\r\n_S_P_CoreLib_System_Runtime_CompilerServices_ConditionalWeakTable_2_CreateValueCallback_S_P_CoreLib_System_Delegate__S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal_PInvokeDelegateThunk___InvokeOpenStaticThunk@http://localhost:6931/HelloWasm.wasm:wasm-function[2088]:0x15cf57\r\n_S_P_CoreLib_System_Runtime_CompilerServices_ConditionalWeakTable_2_CreateValueCallback_S_P_CoreLib_System_Delegate__S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal_PInvokeDelegateThunk___Invoke@http://localhost:6931/HelloWasm.wasm:wasm-function[3097]:0x1c76e7\r\n_S_P_CoreLib_System_Runtime_CompilerServices_ConditionalWeakTable_2_S_P_CoreLib_System_Delegate__S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal_PInvokeDelegateThunk___GetValueLocked@http://localhost:6931/HelloWasm.wasm:wasm-function[2091]:0x15d403\r\n_S_P_CoreLib_System_Runtime_CompilerServices_ConditionalWeakTable_2_S_P_CoreLib_System_Delegate__S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal_PInvokeDelegateThunk___GetValue@http://localhost:6931/HelloWasm.wasm:wasm-function[2089]:0x15d173\r\n_S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal__GetFunctionPointerForDelegate@http://localhost:6931/HelloWasm.wasm:wasm-function[1351]:0x117a5e\r\n_S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__GetFunctionPointerForDelegate@http://localhost:6931/HelloWasm.wasm:wasm-function[1349]:0x11765d\r\n_HelloWasm_Program__emscripten_set_main_loop@http://localhost:6931/HelloWasm.wasm:wasm-function[682]:0xd8c04\r\n_HelloWasm_Program__TestRegisterOfNativeCallback@http://localhost:6931/HelloWasm.wasm:wasm-function[675]:0xd887f\r\n_HelloWasm_Program__Main@http://localhost:6931/HelloWasm.wasm:wasm-function[344]:0xb2eb0\r\n_HelloWasm__Module___MainMethodWrapper@http://localhost:6931/HelloWasm.wasm:wasm-function[338]:0xaf2f2\r\n_StartupCodeMain@http://localhost:6931/HelloWasm.wasm:wasm-function[327]:0xaee49\r\n___managed__Main@http://localhost:6931/HelloWasm.wasm:wasm-function[19633]:0x9d238d\r\n_main@http://localhost:6931/HelloWasm.wasm:wasm-function[21492]:0xad74c0\r\nModule._main@http://localhost:6931/HelloWasm.js:7546:10\r\ncallMain@http://localhost:6931/HelloWasm.js:7855:15\r\ndoRun@http://localhost:6931/HelloWasm.js:7913:42\r\nrun/<@http://localhost:6931/HelloWasm.js:7924:7\r\n```\r\n\r\n@morganbr this also gets me closer to creating a PR for #5842 as it removes the undefined function so if you think its worthwhile it could be merged, without the test?"},{"Id":"8566059048","Type":"PullRequestEvent","CreatedAt":"2018-11-09T22:09:58","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6549","RelatedDescription":"Merged pull request \"Add WASM test for RVA static fields\" (#6549) at dotnet/corert","RelatedBody":"As requested in https://github.com/dotnet/corert/pull/6531#issuecomment-437121169."},{"Id":"8565662014","Type":"PullRequestEvent","CreatedAt":"2018-11-09T20:40:35","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6552","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#6552) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"8565657384","Type":"PullRequestEvent","CreatedAt":"2018-11-09T20:39:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6547","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#6547) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @tannergooding"},{"Id":"8564577908","Type":"PullRequestEvent","CreatedAt":"2018-11-09T17:07:23","Actor":"MarcoRossignoli","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6551","RelatedDescription":"Opened pull request \"[ILVerify]Add plumbing to verify types\" (#6551) at dotnet/corert","RelatedBody":"contributes to https://github.com/dotnet/corert/issues/6203\r\n\r\nAdded some plumbing to allow type verification.\r\n\r\n/cc @jkotas @MichalStrehovsky "},{"Id":"8564179756","Type":"PullRequestEvent","CreatedAt":"2018-11-09T16:02:55","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6550","RelatedDescription":"Opened pull request \"Update RyuJIT\" (#6550) at dotnet/corert","RelatedBody":"...mostly because I don't want us to forget to pick up the matching JitInterface change from dotnet/coreclr#20814. No JitInterface change this time.\r\n\r\nObject stack allocation doesn't work yet for R2R compilations because we seem to be pattern matching against `ALLOCOBJ  ref`, when in ready to run we have `CALL help ref    HELPER.CORINFO_HELP_READYTORUN_NEW`.\r\n\r\nIt doesn't seem like we need to port the changes in `getClassGClayout` because CoreRT class layout information includes the EEType field in reference types, whereas CoreCLR doesn't."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1055215025982398465","CreatedAt":"2018-10-24T21:50:41+00:00","UserScreenname":"dotnet","Text":"Bringing .NET application performance analysis to Linux https://t.co/jivjRwPVBM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":61,"RawContent":null},{"Id":"1054879096981704704","CreatedAt":"2018-10-23T23:35:50+00:00","UserScreenname":"dotnet","Text":".NET Core Source Code Analysis with Intel® VTune™ Amplifier https://t.co/2I1YLWYbKb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":27,"RawContent":null},{"Id":"1054829662738608128","CreatedAt":"2018-10-23T20:19:24+00:00","UserScreenname":"dotnet","Text":"Call For Participation: .NET and TypeScript at FOSDEM conference https://t.co/xjDh49lbko","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":12,"RawContent":null},{"Id":"1053032574933581824","CreatedAt":"2018-10-18T21:18:24+00:00","UserScreenname":"dotnet","Text":".NET Framework October 2018 Preview of Quality Rollup\n\nhttps://t.co/P6vAFbZLAa","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2018-11-10T05:30:29.800658Z","RunDurationInMilliseconds":7760}