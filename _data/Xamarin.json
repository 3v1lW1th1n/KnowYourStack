{"Data":{"Blog":{"FeedItems":[{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null},{"Title":"Xamarin.Forms and Zeplin: Speed Up Your Design to Development Process","PublishedOn":"2018-10-23T18:53:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Arnstein Johansen, a Norwegian software engineer interested in mobile and web development. He works for Itema AS, a consultant agency in Trondheim, Norway and a...","Href":"https://blog.xamarin.com/xamarin-forms-and-zeplin-speed-up-your-design-to-development-process/","RawContent":null},{"Title":"Xamarin.Forms 3.3.0: Little Things, Huge Difference","PublishedOn":"2018-10-18T19:06:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin.Forms team has been working closely with our open-source community to help fill in the “little things”. Things you’ve told us are important to building your mobile apps and being supremely...","Href":"https://blog.xamarin.com/xamarin-forms-3-3-0-little-things-huge-difference/","RawContent":null},{"Title":"Complex Animations in Xamarin.Forms using Finite State Machine","PublishedOn":"2018-10-16T17:32:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff, a Principal Engineer at Binwell. Microsoft MVP and Xamarin Certified experienced mobile cross-platform and native developer. Also, a previously...","Href":"https://blog.xamarin.com/complex-animations-xamarin-forms-using-finite-state-machine/","RawContent":null},{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8576960502","Type":"PullRequestEvent","CreatedAt":"2018-11-12T22:06:01","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2428","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] move $(AdbTarget) out of build.props\" (#2428) at xamarin/xamarin-android","RelatedBody":"`$(IntermediateOutputPath)build.props`, or\r\n`$(_AndroidBuildPropertiesCache)` is a file used as an `Input` to many\r\nMSBuild targets. We write many *important* properties in this file as\r\na mechanism to trigger most of the build to rerun. So for example, if\r\nyou enabled proguard, the `$(AndroidEnableProguard)` MSBuild property\r\nwould re-run a lot of the build, such as `_CompileJava`,\r\n`_CompileDex`, etc.\r\n\r\nRight now there are two problematic properties in this file:\r\n- `$(AdbTarget)`\r\n- `$(AdbOptions)`\r\n\r\nThis means if you switched from a different Android deploy target:\r\nemulator to device, or just a different device--it would run a full\r\nbuild! `$(AdbTarget)` and `$(AdbOptions)` need to trigger MSBuild\r\ntargets related to \"Fast Deployment\" to re-run, but not everything.\r\nWhat makes matters even worse, is sometimes design-time builds will\r\npass a blank `$(AdbTarget)`. This causes expensive targets to run\r\nagain.\r\n\r\nI've moved these properties to a new file:\r\n- `$(IntermediateOutputPath)adb.props` or\r\n- `$(_AdbPropertiesCache)`\r\n\r\nThen downstream in monodroid, there is a single line that needs to be\r\nchanged from `$(_AdbPropertiesCache)` to `$(_AdbPropertiesCache)`.\r\nThis will re-trigger the APK to be installed when devices change."},{"Id":"8576954313","Type":"PullRequestEvent","CreatedAt":"2018-11-12T22:04:42","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2424","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix Aar directory resolution.\" (#2424) at xamarin/xamarin-android","RelatedBody":"Fixed #2408\r\n\r\nAs part of the speed up process when extracting resources\r\nfrom assemblies and Aar files, we dont re-extract if\r\nthe stamp file is newer than the assembly.\r\n\r\nThe problem with that was in the case of Aar files we\r\nwere NOT adding the `res` or `asset` directories to\r\nthe list of resolved directories when we skipped extraction.\r\nAs a result we got less `res` directories on a second\r\nbuild.\r\n\r\nThis commit fixes that."},{"Id":"8576954303","Type":"IssuesEvent","CreatedAt":"2018-11-12T22:04:42","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2408","RelatedDescription":"Closed issue \"Resource directories missed in incremental builds with `AndroidAarLibrary` items\" (#2408) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Clone `https://github.com/xamarin/Xamarin.Forms.git` and switch to the branch `visual-preview6`\r\n2. `nuget.exe restore Xamarin.Forms.sln` \r\n3. `msbuild Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj /bl /t:rebuild` which builds successfully\r\n4. `msbuild Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj /bl` which now fails:\r\n\r\n```\r\n\"C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj\" (default target) (1) ->\r\n(_UpdateAndroidResgen target) ->\r\n  Resources\\values\\styles.xml(2): error APT0000: Error retrieving parent for item: No resource found that matches the given name 'Theme.MaterialComponents.Light'.\r\n[C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(3): error APT0000: No resource found that matches the given name: attr 'colorAccent'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Control\r\nGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'colorPrimary'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Contro\r\nlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'windowActionBar'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Con\r\ntrolGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: No resource found that matches the given name: attr 'windowActionModeOverlay'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.F\r\norms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'windowNoTitle'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Contr\r\nolGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: Error retrieving parent for item: No resource found that matches the given name 'Theme.AppCompat.Light.Dialog'. [C\r\n:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.ControlGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: No resource found that matches the given name: attr 'colorAccent'. [C:\\xamarin\\Xamarin.Forms\\Xamarin.Forms.Control\r\nGallery.Android\\Xamarin.Forms.ControlGallery.Android.csproj]\r\n```\r\nIt looks like the number of directories specified in the call to Aapt is missing a bunch of items in the incremental build vs the rebuild:\r\n![image](https://user-images.githubusercontent.com/271950/48207279-4e8ad900-e33e-11e8-80cc-f7bdef0ea8a8.png)\r\n\r\nThis appears to happen when we use Android Support library nuget packages (in this case `28.0.0-preview6` which have the .aar files directly included in them using the `AndroidAarLibrary` item group type.\r\n\r\nAttaching some binary logs of success/error builds for good measure:\r\n\r\n[binlogs.zip](https://github.com/xamarin/xamarin-android/files/2562283/binlogs.zip)\r\n\r\n "},{"Id":"8570875496","Type":"PullRequestEvent","CreatedAt":"2018-11-12T00:08:31","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2428","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] move $(AdbTarget) out of build.props\" (#2428) at xamarin/xamarin-android","RelatedBody":"`$(IntermediateOutputPath)build.props`, or\r\n`$(_AndroidBuildPropertiesCache)` is a file used as an `Input` to many\r\nMSBuild targets. We write many *important* properties in this file as\r\na mechanism to trigger most of the build to rerun. So for example, if\r\nyou enabled proguard, the `$(AndroidEnableProguard)` MSBuild property\r\nwould re-run a lot of the build, such as `_CompileJava`,\r\n`_CompileDex`, etc.\r\n\r\nRight now there are two problematic properties in this file:\r\n- `$(AdbTarget)`\r\n- `$(AdbOptions)`\r\n\r\nThis means if you switched from a different Android deploy target:\r\nemulator to device, or just a different device--it would run a full\r\nbuild! `$(AdbTarget)` and `$(AdbOptions)` need to trigger MSBuild\r\ntargets related to \"Fast Deployment\" to re-run, but not everything.\r\nWhat makes matters even worse, is sometimes design-time builds will\r\npass a blank `$(AdbTarget)`. This causes expensive targets to run\r\nagain.\r\n\r\nI've moved these properties to a new file:\r\n- `$(IntermediateOutputPath)adb.props` or\r\n- `$(_AdbPropertiesCache)`\r\n\r\nThen downstream in monodroid, there is a single line that needs to be\r\nchanged from `$(_AdbPropertiesCache)` to `$(_AdbPropertiesCache)`.\r\nThis will re-trigger the APK to be installed when devices change."},{"Id":"8570572502","Type":"PullRequestEvent","CreatedAt":"2018-11-11T21:22:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2423","RelatedDescription":"Merged pull request \"[docs] Correct a couple links in unix-instructions.md\" (#2423) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8570422417","Type":"IssuesEvent","CreatedAt":"2018-11-11T20:02:29","Actor":"rihadavid","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2427","RelatedDescription":"Opened issue \"Build sometimes fails without any error\" (#2427) at xamarin/xamarin-android","RelatedBody":"Sometimes when I want to build and debug my project, it fails without any error in Output windows or in log files. Next time it works without issues.\r\n\r\nThis is how my output window looks:\r\n```\r\n1>------ Build started: Project: MyApp.Android, Configuration: Debug Any CPU ------\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\r\n```\r\nAnd that's it. Note that I have it on a diagnostic verbosity.\r\n\r\nPlease let me know what can I do to get you more info, it's happening quite often, but conditions are unknown.\r\n\r\n### Version Information\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAWS Toolkit for Visual Studio 2017   1.14.4.1\r\nAWS Toolkit for Visual Studio 2017.\r\nCopyright 2011-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\nRelease notes: https://aws-vs-toolkit.s3.amazonaws.com/versioninfo.html\r\n\r\nThis software includes third party software subject to the following copyrights:\r\n- Logging from log4net, Apache License \r\n  [http://logging.apache.org/log4net/license.html]\r\n- Putty for PPK to PEM conversion, MIT license \r\n  [http://www.chiark.greenend.org.uk/~sgtatham/putty/licence.html]\r\n- NGit for AWS Elastic Beanstalk incremental push\r\n  [https://github.com/mono/ngit/blob/master/NGit.license.txt]\r\n- NSch dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/NSch.license.txt]\r\n- Sharpen dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/Sharpen/AssemblyInfo.cs]\r\n- ICSharpCode.SharpZipLib dependency for NGit\r\n  [http://www.icsharpcode.net/opensource/sharpziplib/]\r\n- Mono.Posix.dll and Mono.Security.dll dependencies for NGit\r\n  [http://mono-project.com/FAQ:_Licensing#Licensing]\r\n- MPFProj for Visual Studio Project Framework\r\n  [http://mpfproj10.codeplex.com/license]\r\n- JSON Checker for JSON validation\r\n  [http://www.raboof.com/projects/jsonchecker/]\r\n- Newtonsoft Json.NET\r\n  [http://www.newtonsoft.com/json] \r\n- YamlDotNet\r\n  [http://aaubry.net/pages/yamldotnet.html] \r\n    \r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```"},{"Id":"8570224812","Type":"IssuesEvent","CreatedAt":"2018-11-11T18:13:34","Actor":"bgavrilMS","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2426","RelatedDescription":"Opened issue \"Android Binding fails for com.microsoft.identity.client\" (#2426) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI am trying to create a bindings dll for the Microsoft Identity Client for Android, following the tutorial at https://docs.microsoft.com/en-us/xamarin/android/platform/binding-java-library/binding-an-aar \r\n\r\nArr available at: https://mvnrepository.com/artifact/com.microsoft.identity.client\r\nGitHub repo: https://github.com/AzureAD/microsoft-authentication-library-for-android/\r\n\r\n1. Create a bindings project and add msal-0.2.1.aar in the Jars directory, settings the build action to \"LibraryProjectZip\"\r\n2. Build this bindings project\r\n\r\n### Expected Behavior\r\nProject should build and a managed DLL should be created\r\n\r\n### Actual Behavior\r\n\r\nError\tCS0534\t'ApiEvent.Builder' does not implement inherited abstract member 'Event.Builder.Build()'\t[path]\\binding_aar\\obj\\Debug\\generated\\src\\Com.Microsoft.Identity.Client.Internal.Telemetry.ApiEvent.cs\t14\tActive\r\n\r\nValid Java code that the bindings project cannot work with: \r\nhttps://github.com/AzureAD/microsoft-authentication-library-for-android/blob/dev/msal/src/main/java/com/microsoft/identity/client/internal/telemetry/ApiEvent.java\r\n\r\n\r\n### Version Information\r\n\r\nVisual Studio 15.9.0 Preview 5\r\nBiding project targets Android 8.1 (also repros if I target Android 8.0)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nMicrosoft Visual Studio Enterprise 2017 Preview\r\nVersion 15.9.0 Preview 5.0\r\nVisualStudio.15.Preview/15.9.0-pre.5.0+28302.56\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA934\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-60000-00001-AA934\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.11009.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nGitHub.VisualStudio   2.5.2.2500\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Linux Development   1.0.9.28218\r\nVisual C++ for Linux Development\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.66 (d15-9@0e1288d9b)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.4 (128ba449c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.126 (0376172)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.0.38 (HEAD/61d16aa23)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.10 (f2a05ed)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8570044505","Type":"IssuesEvent","CreatedAt":"2018-11-11T16:36:05","Actor":"rihadavid","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2425","RelatedDescription":"Opened issue \"VS unresponsive when leaving unsaved layout file\" (#2425) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a sample single view Android App project\r\n2. Open `MainActivity.cs` and `activity_main.axml`\r\n3. Change anything in the axml code and do not save the file\r\n4. Switch to MainActivity.cs\r\n\r\n### Expected Behavior\r\nShould be instant\r\n\r\n### Actual Behavior\r\nWhile switching to the `.cs` file, VS becomes unresponsive for about a second. In my real (much bigger) project this is about 4 seconds.\r\nIt happens on every single switch from the `.axml` file to the `.cs` file, but only if the changes to `.axml` files are not saved.\r\nI believe this is not an intended behaviour, there is probably some stuff that needs to be done when leaving the file (but even that is questionable, since we did not save the file, what needs to be done?), but this should not be done on a UI thread, right?\r\n\r\n### Version Information\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAWS Toolkit for Visual Studio 2017   1.14.4.1\r\nAWS Toolkit for Visual Studio 2017.\r\nCopyright 2011-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\nRelease notes: https://aws-vs-toolkit.s3.amazonaws.com/versioninfo.html\r\n\r\nThis software includes third party software subject to the following copyrights:\r\n- Logging from log4net, Apache License \r\n  [http://logging.apache.org/log4net/license.html]\r\n- Putty for PPK to PEM conversion, MIT license \r\n  [http://www.chiark.greenend.org.uk/~sgtatham/putty/licence.html]\r\n- NGit for AWS Elastic Beanstalk incremental push\r\n  [https://github.com/mono/ngit/blob/master/NGit.license.txt]\r\n- NSch dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/NSch.license.txt]\r\n- Sharpen dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/Sharpen/AssemblyInfo.cs]\r\n- ICSharpCode.SharpZipLib dependency for NGit\r\n  [http://www.icsharpcode.net/opensource/sharpziplib/]\r\n- Mono.Posix.dll and Mono.Security.dll dependencies for NGit\r\n  [http://mono-project.com/FAQ:_Licensing#Licensing]\r\n- MPFProj for Visual Studio Project Framework\r\n  [http://mpfproj10.codeplex.com/license]\r\n- JSON Checker for JSON validation\r\n  [http://www.raboof.com/projects/jsonchecker/]\r\n- Newtonsoft Json.NET\r\n  [http://www.newtonsoft.com/json] \r\n- YamlDotNet\r\n  [http://aaubry.net/pages/yamldotnet.html] \r\n    \r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```"},{"Id":"8567068224","Type":"PullRequestEvent","CreatedAt":"2018-11-10T06:35:08","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2424","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix Aar directory resolution.\" (#2424) at xamarin/xamarin-android","RelatedBody":"Fixed #2408\r\n\r\nAs part of the speed up process when extracting resources\r\nfrom assemblies and Aar files, we dont re-extract if\r\nthe stamp file is newer than the assembly.\r\n\r\nThe problem with that was in the case of Aar files we\r\nwere NOT adding the `res` or `asset` directories to\r\nthe list of resolved directories when we skipped extraction.\r\nAs a result we got less `res` directories on a second\r\nbuild.\r\n\r\nThis commit fixes that."},{"Id":"8566573987","Type":"PullRequestEvent","CreatedAt":"2018-11-10T00:55:13","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2423","RelatedDescription":"Opened pull request \"[docs] Correct a couple links in unix-instructions.md\" (#2423) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8565990015","Type":"PullRequestEvent","CreatedAt":"2018-11-09T21:53:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2422","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] <ValidateJavaVersion/> needed for designer\" (#2422) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2410\r\n\r\nIn 3eb41a0, I added a good performance improvement for the initial\r\ndesign-time build (solution create).\r\n\r\nHowever, we have tests downstream in monodroid that check if MSBuild\r\ntargets called by the Android designer are working. Apparently, these\r\ntargets need `$(_JdkVersion)`, whoops! Glad we have that test!\r\n\r\nThe Android designer also sets\r\n`$(AndroidUseManagedDesignTimeResourceGenerator)` to `False`. We can\r\ncheck for this and allow the `<ValidateJavaVersion/>` MSBuild task to\r\nrun in this case."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8577732793","Type":"PullRequestEvent","CreatedAt":"2018-11-13T01:26:03","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4386","RelatedDescription":"Closed pull request \"Set up CI with Azure Pipelines\" (#4386) at xamarin/Xamarin.Forms","RelatedBody":""},{"Id":"8577705220","Type":"PullRequestEvent","CreatedAt":"2018-11-13T01:18:51","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4383","RelatedDescription":"Merged pull request \"[Core] Delete left over file\" (#4383) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nDelete empty file left over from ImageButton consolidation\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8577687270","Type":"IssuesEvent","CreatedAt":"2018-11-13T01:13:54","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4388","RelatedDescription":"Opened issue \"[macOS] Bugzilla40005 crashes on macOS with an NRE\" (#4388) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nIf you run Bugzilla40005 it crashes with an NRE\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Run Bugzilla40005\r\n2.  Crashes\r\n\r\n### Expected Behavior\r\ndoesn't crash\r\n\r\n### Actual Behavior\r\nCrashes\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - macOS: 10.14.2\r\n\r\n"},{"Id":"8577673589","Type":"IssuesEvent","CreatedAt":"2018-11-13T01:09:49","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4387","RelatedDescription":"Opened issue \"[MacOS] Appearing doesn't fire on MacOs when navigating backwards\" (#4387) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nIf you click the backbutton on MacOS the Appearing event doesn't fire on the page that becomes active\r\n\r\n### Steps to Reproduce\r\n\r\n1. Push two pages onto a NAvigationPAge\r\n2. subscribe to onappearing on the first page\r\n3. click the back button in the header bar\r\n\r\n### Expected Behavior\r\nOnAppearing should fire\r\n\r\n### Actual Behavior\r\nOnAppearing doesn't fire\r\n\r\n### Reproduction Link\r\n\r\nyou can use Bugzilla31688 in the control gallery. Just override OnAppearing on the pages that get inserted into the stack to test this issue\r\n"},{"Id":"8577661644","Type":"IssuesEvent","CreatedAt":"2018-11-13T01:06:06","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4030","RelatedDescription":"Closed issue \"[macOS] Unhandled exception when switching pages: System.InvalidOperationException: Stack empty.\" (#4030) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen switching to a new page, Android&iOS&GTK platforms work perfectly, but in macOS I receive this exception. (This used to work in the past, because I've run the macOS frontend before, so it must be a regression.)\r\n\r\n### Steps to Reproduce\r\n\r\n1. git clone https://github.com/diginex/geewallet.git\r\n2. change to branch \"frontend\" (cd geewallet && git checkout frontend)\r\n3. open solution in VS4Mac, choose the Mac project to be the starting project, hit the \"play\" button to debug it\r\n4. an initial page will appear, just file all the text fields with any random data, hit next\r\n\r\n### Expected Behavior\r\nthe \"Loading...\" page shows up, and after a little bit, the balances page shows up (like in the other frontends: iOS/Android/GTK)\r\n\r\n### Actual Behavior\r\nOnce it changes from the LoadingPage to the BalancesPage, it crashes with:\r\n\r\n```\r\nSystem.AggregateException: One or more errors occurred. ---> System.InvalidOperationException: Stack empty.\r\n  at System.Collections.Generic.Stack`1[T].ThrowForEmptyStack () [0x00000] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/external/corefx/src/System.Collections/src/System/Collections/Generic/Stack.cs:291\r\n  at System.Collections.Generic.Stack`1[T].Peek () [0x00008] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/external/corefx/src/System.Collections/src/System/Collections/Generic/Stack.cs:209\r\n  at Xamarin.Forms.Platform.MacOS.NavigationPageRenderer+<PopPageAsync>d__46.MoveNext () [0x0007c] in <465eddd2457e40ff9ec44c8184c8d2ce>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128\r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:357\r\n  at Xamarin.Forms.Platform.MacOS.NavigationPageRenderer+<OnPop>d__34.MoveNext () [0x0006e] in <465eddd2457e40ff9ec44c8184c8d2ce>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128\r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:357\r\n  at Xamarin.Forms.NavigationPage+<Xamarin-Forms-INavigationPageController-RemoveAsyncInner>d__65.MoveNext () [0x000cc] in <cd8254524c7047e9b77270e13d115193>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128\r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:357\r\n  at Xamarin.Forms.NavigationPage+<PopAsyncInner>d__64.MoveNext () [0x00093] in <cd8254524c7047e9b77270e13d115193>:0\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187\r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156\r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128\r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:357\r\n  at Xamarin.Forms.NavigationPage+<PopAsync>d__42.MoveNext () [0x00112] in <cd8254524c7047e9b77270e13d115193>:0\r\n  --- End of inner exception stack trace ---\r\n  at GWallet.Frontend.XF.FrontendHelpers+DoubleCheckCompletion@172-1[T].Invoke () [0x00002] in /Users/andres/Documents/Code/gwalletFRONTENDCLEAN/src/GWallet.Frontend.XF/FrontendHelpers.fs:173\r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00002] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/Foundation/NSAction.cs:152\r\n  at at (wrapper managed-to-native) AppKit.NSApplication.NSApplicationMain(int,string[])\r\n  at AppKit.NSApplication.Main (System.String[] args) [0x00040] in /Library/Frameworks/Xamarin.Mac.framework/Versions/5.0.0.0/src/Xamarin.Mac/AppKit/NSApplication.cs:100\r\n  at GWallet.Frontend.XamForms.Mac.main.main (System.String[] args) [0x00014] in /Users/andres/Documents/Code/gwalletFRONTENDCLEAN/src/GWallet.Frontend.XamForms.Mac/Main.fs:10\r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: repo has v.3.0.0.446417, but I've also tested it with versions 3.0.0.561731 and 3.2.0.871581.\r\n- Last known good version: not sure, maybe a 3.0 pre-release or the last 2.x version.\r\n- IDE: \r\n- Nuget Packages:\r\n- Affected Devices:\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.8 (build 38)\r\nInstallation UUID: fd06ff65-69de-47ae-8b99-ddf257032b7c\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.5\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.403/Sdks\r\nSDK Versions:\r\n\t2.1.403\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Community)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.15 (Visual Studio Community)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Community)\r\nAndroid SDK: /Users/andres/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t7.1   (API level 25)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706080038\r\nGit revision: f4178f550a4de7c03aa23678041abe4fc388cf72\r\nBuild date: 2018-09-28 14:21:41+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 051b653186a95ced1c127dfd8c358df1b9315d0d\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n```\r\n\r\n"},{"Id":"8577661651","Type":"PullRequestEvent","CreatedAt":"2018-11-13T01:06:06","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4242","RelatedDescription":"Merged pull request \"[MacOs] Implemented InsertPageBefore\" (#4242) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nImplemented InsertPageBefore method for Mac\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4030 \r\n\r\n### API Changes ###\r\nAdded: InsertPageBefore realization\r\n\r\n### Platforms Affected ### \r\n- MacOs\r\n\r\n### Behavioral/Visual Changes ###\r\nApp works properly with InsertPageBefore (no crash)\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nOpen TestCase 27378 on Mac and click button, see that no crash occurs\r\n\r\n"},{"Id":"8577570043","Type":"PullRequestEvent","CreatedAt":"2018-11-13T00:38:37","Actor":"azure-pipelines[bot]","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4386","RelatedDescription":"Opened pull request \"Set up CI with Azure Pipelines\" (#4386) at xamarin/Xamarin.Forms","RelatedBody":""},{"Id":"8577402992","Type":"PullRequestEvent","CreatedAt":"2018-11-12T23:50:11","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4384","RelatedDescription":"Opened pull request \"[Android] Fix brief display of incorrect keyboard\" (#4384) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nProposing this as an alternative to #4248 and a solution to #3647.\r\n\r\nRather than making `HandleKeyboardOnFocus` available to custom renderers, this change makes the `OnFocusChangeRequested` handler available and implements overrides in the appropriate classes for showing/hiding the keyboard (rather than handling it in `ViewRenderer`). \r\n\r\nThis change also posts requests to show the keyboard to the main looper queue, thus matching them up with the posted requests for control focus; this fixes the \"wrong keyboard briefly displayed\" bug. \r\n\r\nPreviously, the focus requests were delayed but the keyboard display happened within `OnFocusChangeRequested`; this meant that `ShowKeyboard` was called when the target control was not actually focused, and `ShowSoftInput` always failed, requiring a call to `ToggleSoftInput` to force the keyboard open. The `ToggleSoftInput` call caused the last or default keyboard to be displayed briefly until the main looper processed the focus request and displayed the correct keyboard for the input.\r\n\r\nBy posting the \"show keyboard\" requests to the queue after the \"focus\" requests, they happen in the correct order and `ShowKeyboard` is called with the correct control having focus; `ShowSoftInput` then runs successfully.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3647 \r\n\r\n### API Changes ###\r\n\r\nAndroid, ViewRenderer.cs:\r\n\r\n`internal virtual void OnFocusChangeRequested(object sender, VisualElement.FocusRequestArgs e)` ->\r\n`protected virtual void OnFocusChangeRequested(object sender, VisualElement.FocusRequestArgs e)`\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nProgrammatically switch focus between an Entry/Editor/SearchBar with a Numeric keyboard and an Entry/Editor/SearchBar with an Email keyboard several dozen times; verify that the incorrect keyboard does not flash briefly onscreen.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8577397692","Type":"PullRequestEvent","CreatedAt":"2018-11-12T23:48:39","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4263","RelatedDescription":"Merged pull request \"[iOS] ControlsGallery, shake gesture to navigate to the root page\" (#4263) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nI propose a new approach for navigating to the root page. **ctr**+**cmd**+**z** for simulator (shake gesture)\r\n\r\n\r\n### Issues Resolved ### \r\n- fixes #3724 \r\n\r\n### API Changes ###\r\nAdded:\r\nShake gesture to navigate to the root page\r\nRemoved:\r\n5 taps to navigate to the root page\r\n\r\n### Platforms Affected ### \r\n- iOS sample project\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nStart ControlGallery.iOS, go to any screen and try to shake real device or select shake gesture (CTRL + CMD + Z) for simulator.\r\n"},{"Id":"8577397687","Type":"IssuesEvent","CreatedAt":"2018-11-12T23:48:39","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3724","RelatedDescription":"Closed issue \"[iOS] Make the 5 click reset control gallery feature of iOS more explicit\" (#3724) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nCurrently on the control gallery in ios if you tap 5 times quick enough it causes the control gallery to reset. This feature is extremely helpful but can also be very confusing when testing things like gestures or just clicking buttons in general.\r\n\r\nIt would be useful to slightly modify this feature to lower the probability of the action matching up with testing procedures\r\n\r\nAdding a way to disable this feature, pop open a dialog instead of auto restart, or  possibly isolate the clicking to a specific region.\r\n\r\n"},{"Id":"8577330351","Type":"PullRequestEvent","CreatedAt":"2018-11-12T23:30:35","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4383","RelatedDescription":"Opened pull request \"[Core] Delete left over file\" (#4383) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nDelete empty file left over from ImageButton consolidation\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8576713510","Type":"IssuesEvent","CreatedAt":"2018-11-12T21:16:41","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4382","RelatedDescription":"Opened issue \"[Shell] Crash when switching Bottom Navigation Tabs too fast\" (#4382) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n```\r\n11-12 14:14:39.915 E/mono    ( 4794): Unhandled Exception:\r\n11-12 14:14:39.915 E/mono    ( 4794): System.ObjectDisposedException: Cannot access a disposed object.\r\n11-12 14:14:39.915 E/mono    ( 4794): Object name: 'Xamarin.Forms.Platform.Android.ColorChangeRevealDrawable'.\r\n11-12 14:14:39.915 E/mono    ( 4794):   at (wrapper dynamic-method) System.Object.25(intptr,intptr,intptr)\r\n11-12 14:14:39.915 E/mono-rt ( 4794): [ERROR] FATAL UNHANDLED EXCEPTION: System.ObjectDisposedException: Cannot access a disposed object.\r\n11-12 14:14:39.915 E/mono-rt ( 4794): Object name: 'Xamarin.Forms.Platform.Android.ColorChangeRevealDrawable'.\r\n11-12 14:14:39.915 E/mono-rt ( 4794):   at (wrapper dynamic-method) System.Object.25(intptr,intptr,intptr)\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n1.  pull down shell-3.4.0\r\n2. Run the Shell Control Gallery project \r\n3. click between the bottom tabs quickly\r\n\r\n### Expected Behavior\r\nNothing should crash\r\n\r\n### Actual Behavior\r\nIt Crashes\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1\r\n- Android Support Library Version: v27 and v28\r\n\r\n"},{"Id":"8576356133","Type":"PullRequestEvent","CreatedAt":"2018-11-12T20:07:18","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4290","RelatedDescription":"Merged pull request \"Update README.md\" (#4290) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\na few tiny changes to the README :)\r\n\r\n- XML tab size `4` -> `2`\r\n- `to your nuget` -> `to your NuGet`\r\n- `Nuget.exe` -> `nuget.exe`\r\n- `OSX` -> `macOS`\r\n- update `UWPMapsAuthKey` link\r\n- fix inconsistent markdown headers\r\n- clean up whitespace and newlines\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8577261449","Type":"PullRequestEvent","CreatedAt":"2018-11-12T23:13:26","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5123","RelatedDescription":"Opened pull request \"[mmp] Fix typo\" (#5123) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/5121"},{"Id":"8576584000","Type":"PullRequestEvent","CreatedAt":"2018-11-12T20:51:37","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5108","RelatedDescription":"Merged pull request \"Remove some [Sealed] in XAMCORE_4_0 where not necessary\" (#5108) at xamarin/xamarin-macios","RelatedBody":"- Added in https://github.com/xamarin/xamarin-macios/commit/7d88592a68618176454b63ef72c66bc59acf3ee3 but in XAMCORE_4_0 we don't need it since the \"bad\" binding won't be there."},{"Id":"8576580928","Type":"PullRequestEvent","CreatedAt":"2018-11-12T20:51:00","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5122","RelatedDescription":"Opened pull request \"[tests] enable msorlib with interpreter\" (#5122) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8576221894","Type":"IssuesEvent","CreatedAt":"2018-11-12T19:42:00","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5121","RelatedDescription":"Opened issue \"MM2108 Typo\" (#5121) at xamarin/xamarin-macios","RelatedBody":"This could break exisiting codesigning signatures => exisiting"},{"Id":"8576125610","Type":"IssuesEvent","CreatedAt":"2018-11-12T19:23:51","Actor":"rrrado","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5120","RelatedDescription":"Opened issue \"Deadlock in Xamarin.Mac\" (#5120) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nproblem occurs when my application (Xamarin.Mac) runs for a longer time. It is just periodically connecting to local HTTP server and updates the UI if needed. I start it from VS in debugger and I keep it running. When I check it after half day the debugger is disconnected with no message and application window is frozen. VS cannot attach to the application anymore, but I can attach in Xcode.\r\n\r\n### Expected Behavior\r\n\r\napplication should stay responsive\r\n\r\n### Actual Behavior\r\n\r\napplication halts in deadlock.\r\nSample callstacks:\r\n[https://justpaste.it/2srvx](https://justpaste.it/2srvx)\r\n[https://justpaste.it/6nuv3](https://justpaste.it/6nuv3)\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.9 (build 22)\r\nInstallation UUID: 1a82bda2-8f63-4499-be55-ab2d64a54dcc\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Community)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nXamarin.iOS not installed.\r\nCan't find mtouch or the Version file at /Library/Frameworks/Xamarin.iOS.framework/Versions/Current.\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706090022\r\nGit revision: 0a0ba3c4593e9adb1c6ff6324e641036146af376\r\nBuild date: 2018-10-05 16:38:51+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f7856b13f2c03a58e08381d3a5970bba18f5c7d7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nTeam Foundation Version Control for TFS and Azure DevOps 0.4.3.1\r\n```\r\n\r\n### Example Project (If Possible)\r\nUnfortunately I don't have simple project\r\n\r\n"},{"Id":"8566443505","Type":"PullRequestEvent","CreatedAt":"2018-11-10T00:03:26","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5119","RelatedDescription":"Opened pull request \"[QuickLook] Add [ThreadSafe] to `QLThumbnailReply`\" (#5119) at xamarin/xamarin-macios","RelatedBody":"`QLThumbnailReply` members are called from a background thread\r\nwithin `QLThumbnailProvider` extension so our check on\r\n`UIApplication.EnsureUIThread ()` is not needed.\r\n\r\nFixes xamarin/xamarin-macios#5117"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":22,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":28,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":18,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":27,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":36,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":31,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":125,"FavoriteCount":80,"RawContent":null}]}},"RunOn":"2018-11-13T05:30:52.7704578Z","RunDurationInMilliseconds":4067}