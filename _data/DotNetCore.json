{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework June 27, 2019 Cumulative Update for Windows 10 version 1903","PublishedOn":"2019-06-27T18:01:46+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we released the June 2019 Cumulative Update for .NET Framework 3.5 and 4.8 on Windows 10 version 1903.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-27-2019-cumulative-update-for-windows-10-version-1903/","RawContent":null},{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Apache Spark™ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet try a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"The Evolving Infrastructure of .NET Core","PublishedOn":"2019-06-18T18:11:59+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6 out the door, we thought it would be useful to take a brief look at the history of our infrastructure systems and the significant improvements that have been made in the...","Href":"https://devblogs.microsoft.com/dotnet/the-evolving-infrastructure-of-net-core/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 6 and Entity Framework 6.3 Preview 6","PublishedOn":"2019-06-13T20:35:52+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"New previews of the next versions of EF Core and EF 6 are now available on NuGet.Org.\nWhat is new in EF Core 3.0 Preview 6\nIn recent months, a lot of our efforts have been focused on a new LINQ...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-6-and-entity-framework-6-3-preview-6/","RawContent":null},{"Title":"Try the new System.Text.Json APIs","PublishedOn":"2019-06-13T17:39:05+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"For .NET Core 3.0, we&#8217;re shipping a brand new namespace called System.Text.Json with support for a reader/writer, a document object model (DOM), and a serializer. In this blog post, I&#8217;m...","Href":"https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:14+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/","RawContent":null},{"Title":"Announcing ML.NET 1.1 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-06-11T17:16:17+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers.\nML.NET offers Model Builder Model Builder (a simple UI tool for Visual Studio) and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-1-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9911139873","Type":"PullRequestEvent","CreatedAt":"2019-06-28T04:29:48","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25465","RelatedDescription":"Merged pull request \"Move coreclr-corefx pipelines into their own files\" (#25465) at dotnet/coreclr","RelatedBody":""},{"Id":"9910694253","Type":"PullRequestEvent","CreatedAt":"2019-06-28T02:14:43","Actor":"andy-ms","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25469","RelatedDescription":"Opened pull request \"WIP: Getting GC settings from runtimeconfig\" (#25469) at dotnet/coreclr","RelatedBody":""},{"Id":"9910627793","Type":"IssuesEvent","CreatedAt":"2019-06-28T01:54:26","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25468","RelatedDescription":"Opened issue \"Test failed: System.Runtime.Serialization.Formatters.Tests.EqualityExtensions.IsEqual\" (#25468) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190627.1/workItem/System.Runtime.Serialization.Formatters.Tests/analysis/xunit/System.Runtime.Serialization.Formatters.Tests.BinaryFormatterTests~2FRoundtripManyObjectsInOneStream\r\n\r\n**Failed tests:**\r\nSystem.Runtime.Serialization.Formatters.Tests.EqualityExtensions.IsEqual\r\n\r\n**Log:**\r\n```\r\nAssert.Equal() Failure\r\nExpected: 103469184\r\nActual:   103439960\r\n```\r\n"},{"Id":"9910589277","Type":"IssuesEvent","CreatedAt":"2019-06-28T01:42:31","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25467","RelatedDescription":"Opened issue \"Exit code was 127 but it should have been 42\" (#25467) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190626.1/workItem/System.Net.Http.Unit.Tests/analysis/xunit/System.Net.Http.Tests.HttpEnvironmentProxyTest~2FHttpProxy_EnvironmentProxy_Loaded\r\n\r\n**Log:**\r\n```\r\nExit code was 127 but it should have been 42\r\nExpected: True\r\nActual:   False\r\n\r\nat Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose(Boolean disposing) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Microsoft.DotNet.RemoteExecutor/RemoteInvokeHandle.cs:line 163\r\n   at Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose() in /_/src/Microsoft.DotNet.RemoteExecutor/src/Microsoft.DotNet.RemoteExecutor/RemoteInvokeHandle.cs:line 55\r\n   at System.Net.Http.Tests.HttpEnvironmentProxyTest.HttpProxy_EnvironmentProxy_Loaded() in /_/src/System.Net.Http/tests/UnitTests/HttpEnvironmentProxyTest.cs:line 45\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9911248368","Type":"PullRequestEvent","CreatedAt":"2019-06-28T05:04:06","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11654","RelatedDescription":"Opened pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11654) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.12\r\n- **Date Produced**: 6/28/2019 5:03 AM\r\n- **Commit**: 33849f3381125e697008c846ac78bd0c0fd32e29\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.12\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9910983601","Type":"PullRequestEvent","CreatedAt":"2019-06-28T03:40:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11653","RelatedDescription":"Merged pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11653) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.11\r\n- **Date Produced**: 6/28/2019 3:04 AM\r\n- **Commit**: 1c0014c5390385ec1c6351f0a2dcc498f34faa1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.11\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9910866177","Type":"PullRequestEvent","CreatedAt":"2019-06-28T03:05:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11653","RelatedDescription":"Opened pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11653) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.11\r\n- **Date Produced**: 6/28/2019 3:04 AM\r\n- **Commit**: 1c0014c5390385ec1c6351f0a2dcc498f34faa1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.11\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9910543956","Type":"PullRequestEvent","CreatedAt":"2019-06-28T01:28:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11652","RelatedDescription":"Merged pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11652) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 12:52 AM\r\n- **Commit**: 82149f92ed212fd1889f66201ab2deac811e4847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.9\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9910435237","Type":"PullRequestEvent","CreatedAt":"2019-06-28T00:52:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11652","RelatedDescription":"Opened pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11652) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 12:52 AM\r\n- **Commit**: 82149f92ed212fd1889f66201ab2deac811e4847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.9\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9910425466","Type":"IssuesEvent","CreatedAt":"2019-06-28T00:49:37","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11651","RelatedDescription":"Opened issue \"SDK resolver should flow traced errors from hostfxr to msbuild\" (#11651) at dotnet/cli","RelatedBody":"Follow up to https://github.com/dotnet/core-setup/issues/6970\r\n\r\nWe can set an error writer on hostfxr and then return the errors to msbuild.\r\n\r\nSee https://github.com/dotnet/core-setup/blob/1a10af88e3904b1d9790be38450c23eea683d6ae/src/corehost/cli/fxr/hostfxr.cpp#L391\r\n\r\ncc @peterhuene \r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"9910287863","Type":"IssuesEvent","CreatedAt":"2019-06-28T00:06:57","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/11643","RelatedDescription":"Closed issue \"program hangs unexpectedly\" (#11643) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nClone https://github.com/dotnet/coreclr (to say d:/repos/coreclr)\r\nClone https://github.com/AndyAyersMS/jitutils (to say d:/repos/jitutils)\r\n  change to the MutateTest branch of jitutils\r\nInstall 3.0 Preview 6 \r\n\r\ncd to d:/repos/jitutils/src/MutateTest\r\n\r\ndotnet run -c Release --  --ehStress --recursive d:\\repos\\coreclr\\tests\\src\\jit\\jit64 --quiet\r\n\r\nProcessing 537 test files\r\n// d:\\repos\\coreclr\\tests\\src\\jit\\jit64\\eh\\basics\\loopEH.cs: 29 variants, all passed\r\n// d:\\repos\\coreclr\\tests\\src\\jit\\jit64\\eh\\Common\\common.cs: did not compile successfully\r\n// d:\\repos\\coreclr\\tests\\src\\jit\\jit64\\eh\\FinallyExec\\nestedTryRegionsWithSameOffset1.cs: did not compile successfully\r\n...  more output like this ...\r\n\r\n## Expected  behavior\r\n\r\nProgram processes all 537 files and exits\r\n\r\n## Actual behavior\r\n\r\nHangs eventually, amount of progress before hang varies\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18917\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview4-010309 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19111-10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27412-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview4-27411-23 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9906082428","Type":"PullRequestEvent","CreatedAt":"2019-06-27T13:08:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1288","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1288) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.15\r\n- **Date Produced**: 6/27/2019 8:28 AM\r\n- **Commit**: 6d723b8e5ae3129c0a94252292322fc19673478f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19326.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9906004146","Type":"PullRequestEvent","CreatedAt":"2019-06-27T12:58:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1288","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1288) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.15\r\n- **Date Produced**: 6/27/2019 8:28 AM\r\n- **Commit**: 6d723b8e5ae3129c0a94252292322fc19673478f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19326.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9905687960","Type":"PullRequestEvent","CreatedAt":"2019-06-27T12:14:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1287","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1287) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9905621329","Type":"PullRequestEvent","CreatedAt":"2019-06-27T12:04:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1287","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1287) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9901865415","Type":"PullRequestEvent","CreatedAt":"2019-06-26T23:31:35","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1019","RelatedDescription":"Merged pull request \"Require support for default implementations of interfaces\" (#1019) at dotnet/standard","RelatedBody":"This marker will require all implementations of .NET Standard 2.1 to support default implementations of interfaces. Needless to say that this has runtime impact. The benefit of doing this in the standard is that it allows library authors to use this feature for their interfaces. The downside is that that this is potentially a lot of runtime work. I'm curious to how the board feels about absorbing that change for .NET Standard 2.1, especially @dotnet/nsboard-xamarin and @dotnet/nsboard-unity.\r\n\r\nThis also includes the new runtime exception `AmbiguousImplementationException` that will be thrown in cases where the runtime can't decide between conflicting default implementations in the diamond case (https://github.com/dotnet/corefx/issues/34124). \r\n\r\n"},{"Id":"9900822065","Type":"PullRequestEvent","CreatedAt":"2019-06-26T20:09:27","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1285","RelatedDescription":"Merged pull request \"[automated] Merge branch 'master' => 'release/3.0'\" (#1285) at dotnet/standard","RelatedBody":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @42748379+dotnet-maestro[bot]\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"9900477841","Type":"PullRequestEvent","CreatedAt":"2019-06-26T19:14:40","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1286","RelatedDescription":"Merged pull request \"Update branding to preview8 in master\" (#1286) at dotnet/standard","RelatedBody":"CC @terrajobst"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9911214044","Type":"PullRequestEvent","CreatedAt":"2019-06-28T04:53:23","Actor":"ghuntley-testing","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39022","RelatedDescription":"Opened pull request \"testing the cla process, please ignore\" (#39022) at dotnet/corefx","RelatedBody":"howdy folks https://github.com/ghuntley here.\r\napologies for the PR spam, will close immediately once open."},{"Id":"9911187243","Type":"IssuesEvent","CreatedAt":"2019-06-28T04:44:26","Actor":"cston","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/36720","RelatedDescription":"Closed issue \"System.Linq.Expressions.Expression.GetType() returns Expression1`1 instead of Expression`1\" (#36720) at dotnet/corefx","RelatedBody":"### Issue\r\n\r\nI have a class in my project which is responsible for simple object mapping operations, each member is a pure+static method to return an expression so I can use it in EF\r\n```\r\npublic static Expression<Func<Image, UploadDescriptorModel>> ImageToDescriptorModel()\r\n{\r\n    return image => new UploadDescriptorModel\r\n    {\r\n        Id = image.Id,\r\n        Name = image.Name,\r\n        FileName = image.FileName,\r\n        Order = image.Order\r\n    };\r\n}\r\n```\r\nI was trying to add a dynamic method to find the member with desired type signature and compile it to Func so the mapping is available outside of the EF\r\nBut first I cached all of the members in an static field called `AdapterCache` defined as `IDictionary<Type, Expression> AdapterCache`\r\n```\r\nAdapterCache = typeof(Adapters).GetMethods(BindingFlags.Static | BindingFlags.Public)\r\n      .Select(method => (Expression) method.Invoke(null, new object[0]))\r\n      .ToDictionary(expression => expression.GetType());\r\n```\r\nHere's the `GetAdapter` code:\r\n```\r\npublic static Func<TEntity, TModel> GetAdapter<TEntity, TModel>()\r\n{\r\n    if (AdapterFuncCache.TryGetValue(typeof(Func<TEntity, TModel>), out var func))\r\n    {\r\n        return (Func<TEntity, TModel>) func;\r\n    }\r\n\r\n    if (AdapterCache.TryGetValue(typeof(Expression<Func<TEntity, TModel>>), out var value))\r\n    {\r\n        var compiledFunc = ((Expression<Func<TEntity, TModel>>) value).Compile();\r\n        AdapterFuncCache.Add(typeof(Func<TEntity, TModel>), compiledFunc);\r\n        return compiledFunc;\r\n    }\r\n\r\n    throw new InvalidOperationException();\r\n}\r\n```\r\nThe function kept failing despite that I was sure that it was correct, when I checked the cache I noticed that types are showing as Expression1'1 instead of Expression'1\r\n\r\n### I created some tests:\r\n```\r\nExpression<Func<Product, ProductResponseModel>> exp = Adapters.ProductToProductResponseModel();\r\nDebug.Assert(typeof(Expression<Func<Product, ProductResponseModel>>) == exp.GetType(), \"FAIL\");\r\n// >>>>> it's failing\r\n```\r\n```\r\nDebug.Write(\"typeof(Expression<Func<Product, ProductResponseModel>>).Name.GetHashCode():\");\r\nDebug.WriteLine(typeof(Expression<Func<Product, ProductResponseModel>>).Name.GetHashCode());\r\n\r\nDebug.Write(\"exp.GetType().Name.GetHashCode():\");\r\nDebug.WriteLine(exp.GetType().Name.GetHashCode());\r\n//typeof(Expression<Func<Product, ProductResponseModel>>).Name.GetHashCode():-182679955\r\n//exp.GetType().Name.GetHashCode():-547687512\r\n```\r\n\r\nI'm on ArchLinux so I don't have the latest version of dotnet and I'm not sure that it got fixed or not but with the search I've done I found nothing about this bug.\r\n\r\n### My Stats\r\nLinux version 4.19.29-1-lts\r\ndotnet-host 2.2.3+105-1                                                               \r\ndotnet-runtime 2.2.3+105-1\r\ndotnet-sdk 2.2.3+105-1"},{"Id":"9910743845","Type":"PullRequestEvent","CreatedAt":"2019-06-28T02:29:28","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39021","RelatedDescription":"Opened pull request \"Add standalone HTTP stress test\" (#39021) at dotnet/corefx","RelatedBody":"This is a simple standalone stress test that launches Kestrel in-proc, creates an HttpClient, and then concurrently makes lots of requests of varying kinds from the client to the server.  It's already discovered a plethora of issues in our HTTP/2 implementation, so I'm checking it in hopes that it can help to enable others to discover more.\r\n\r\ncc: @geoffkizer, @davidsh, @marklio, @wfurt, @scalablecory \r\n\r\nContributes to https://github.com/dotnet/corefx/issues/38911\r\nRelated to https://github.com/dotnet/corefx/issues/39016, https://github.com/dotnet/corefx/issues/39014, https://github.com/dotnet/corefx/issues/39013, https://github.com/dotnet/corefx/issues/39005, https://github.com/dotnet/corefx/issues/38990, https://github.com/dotnet/corefx/issues/38974, https://github.com/dotnet/corefx/issues/38968, https://github.com/dotnet/corefx/issues/38989, https://github.com/dotnet/corefx/pull/39011, https://github.com/dotnet/corefx/pull/38995, https://github.com/dotnet/corefx/pull/38991"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9911129003","Type":"IssuesEvent","CreatedAt":"2019-06-28T04:26:32","Actor":"rwecho","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36856","RelatedDescription":"Opened issue \" csc.exe crash when I use System.Text.Json.Serialization\" (#36856) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\ndotnet core 3.0 preview6\r\nvs2019 preview  version 16.2.0 preview3.0\r\n\r\ncrash code \r\n``` csharp\r\n  class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.ReadLine();\r\n        }\r\n\r\n        private static async Task Serialize()\r\n        {\r\n            System.Text.Json.Serialization.JsonSerializer.Parse<string>(await TestAsync());\r\n        }\r\n\r\n        private static Task<byte[]> TestAsync()\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n```\r\nExpected Behavior:\r\nExpected a successfully compiled program\r\n\r\nActual Behavior:\r\nCrashes with an hard error and exitcode -2146232797\r\n\r\nThe stacktrace :\r\n> Application: csc.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NotImplementedException: The method or operation is not implemented.\r\n   at Microsoft.CodeAnalysis.CSharp.BoundNode.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitReadOnlySpanFromArray(BoundReadOnlySpanFromArray node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitCall(BoundCall node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitExpressionStatement(BoundExpressionStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitSequencePoint(BoundSequencePoint node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Analysis.ScopeTreeBuilder.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Analysis.ScopeTreeBuilder.Build()\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Analysis.ScopeTreeBuilder.Build(BoundNode node, MethodSymbol topLevelMethod, HashSet`1 methodsConvertedToDelegates, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Analysis.Analyze(BoundNode node, MethodSymbol method, Int32 topLevelMethodOrdinal, MethodSymbol substitutedSourceMethod, VariableSlotAllocator slotAllocatorOpt, TypeCompilationState compilationState, ArrayBuilder`1 closureDebugInfo, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Rewrite(BoundStatement loweredBody, NamedTypeSymbol thisType, ParameterSymbol thisParameter, MethodSymbol method, Int32 methodOrdinal, MethodSymbol substitutedSourceMethod, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, VariableSlotAllocator slotAllocatorOpt, TypeCompilationState compilationState, DiagnosticBag diagnostics, HashSet`1 assignLocals)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.BoundNode.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitReadOnlySpanFromArray(Microsoft.CodeAnalysis.CSharp.BoundReadOnlySpanFromArray)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitCall(Microsoft.CodeAnalysis.CSharp.BoundCall)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitSequencePoint(Microsoft.CodeAnalysis.CSharp.BoundSequencePoint)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter+Analysis+ScopeTreeBuilder.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter+Analysis+ScopeTreeBuilder.Build()\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter+Analysis+ScopeTreeBuilder.Build(Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>, Microsoft.CodeAnalysis.DiagnosticBag)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter+Analysis.Analyze(Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.DiagnosticBag)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.DiagnosticBag, System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Boolean, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\n   at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n"},{"Id":"9910748277","Type":"PullRequestEvent","CreatedAt":"2019-06-28T02:30:43","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36834","RelatedDescription":"Merged pull request \"Fix formatting issues being flagged by the analyzer\" (#36834) at dotnet/roslyn","RelatedBody":"This doesn't fix all the issues: I'm filing bugs for the other ones where things seem broken."},{"Id":"9910741404","Type":"PullRequestEvent","CreatedAt":"2019-06-28T02:28:43","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36842","RelatedDescription":"Merged pull request \"Bump master to 3.3.0-beta2\" (#36842) at dotnet/roslyn","RelatedBody":""},{"Id":"9910740015","Type":"PullRequestEvent","CreatedAt":"2019-06-28T02:28:18","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36843","RelatedDescription":"Merged pull request \"Update PublishData.json\" (#36843) at dotnet/roslyn","RelatedBody":""},{"Id":"9910646862","Type":"PullRequestEvent","CreatedAt":"2019-06-28T02:00:13","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36849","RelatedDescription":"Merged pull request \"Merge master to features/lspSupport\" (#36849) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9910630633","Type":"PullRequestEvent","CreatedAt":"2019-06-28T01:55:20","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36855","RelatedDescription":"Opened pull request \"Fix code actions projects\" (#36855) at dotnet/roslyn","RelatedBody":"Fix the server handlers to respond to updates in the LSP package."},{"Id":"9910625131","Type":"PullRequestEvent","CreatedAt":"2019-06-28T01:53:39","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36854","RelatedDescription":"Opened pull request \"Top-level types enumeration refactoring\" (#36854) at dotnet/roslyn","RelatedBody":""},{"Id":"9910551171","Type":"PullRequestEvent","CreatedAt":"2019-06-28T01:30:30","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36848","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#36848) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9910549674","Type":"PullRequestEvent","CreatedAt":"2019-06-28T01:30:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36851","RelatedDescription":"Merged pull request \"Merge master to features/param-nullchecking\" (#36851) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9910470517","Type":"IssuesEvent","CreatedAt":"2019-06-28T01:04:20","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36692","RelatedDescription":"Closed issue \"IDE0067 fires for using declaration with escape \" (#36692) at dotnet/roslyn","RelatedBody":"**Version Used**: 16.2.0-pre.2.0+29006.145\r\n\r\n**Steps to Reproduce**:\r\n\r\nIDE0067 \"disposable object never disposed\" should not fire in `M1` and does not fire in `M2`.\r\n\r\n```c#\r\nvoid M1(string path)\r\n{\r\n    using var stream = File.OpenRead(path); // IDE0067 fires\r\n    S(stream);\r\n}\r\n\r\nvoid M2(string path)\r\n{\r\n    using (var stream = File.OpenRead(path)) // IDE0067 does not fire here\r\n        S(stream);\r\n}\r\n\r\nstatic void S(Stream s)\r\n{\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo diagnostic.\r\n\r\n**Actual Behavior**:\r\n\r\nDiagnostic."},{"Id":"9910425250","Type":"PullRequestEvent","CreatedAt":"2019-06-28T00:49:32","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36853","RelatedDescription":"Opened pull request \"Throw exception in PlaceCaret\" (#36853) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9910355102","Type":"PullRequestEvent","CreatedAt":"2019-06-28T00:27:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7564","RelatedDescription":"Merged pull request \"Fix ARM build break\" (#7564) at dotnet/corert","RelatedBody":""},{"Id":"9910169532","Type":"PullRequestEvent","CreatedAt":"2019-06-27T23:32:56","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7564","RelatedDescription":"Opened pull request \"Fix ARM build break\" (#7564) at dotnet/corert","RelatedBody":""},{"Id":"9909328209","Type":"IssuesEvent","CreatedAt":"2019-06-27T20:39:30","Actor":"csnewman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7563","RelatedDescription":"Opened issue \"arm registers do not fit into unw_context_t\" (#7563) at dotnet/corert","RelatedBody":"```\r\nIn file included from /home/csnewman/corert/src/Native/Runtime/unix/UnwindHelpers.cpp:22:\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2328:3: error: static_assert failed \"arm registers do not fit into unw_context_t\"\r\n  static_assert((check_fit<Registers_arm, unw_context_t>::does_fit),\r\n  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2444:32: error: out-of-line definition of 'getRegisterLocation' does not match any\r\n      declaration in 'libunwind::Registers_arm'\r\ninline uint32_t Registers_arm::getRegisterLocation(int regNum) const {\r\n                               ^~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/UnwindHelpers.cpp.o] Error 1\r\n\r\n```"},{"Id":"9906208988","Type":"PullRequestEvent","CreatedAt":"2019-06-27T13:24:44","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7561","RelatedDescription":"Merged pull request \"Fix ETW GCEvents\" (#7561) at dotnet/corert","RelatedBody":""},{"Id":"9904367948","Type":"IssuesEvent","CreatedAt":"2019-06-27T09:01:30","Actor":"OmerRaviv","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7562","RelatedDescription":"Opened issue \"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API\" (#7562) at dotnet/corert","RelatedBody":"I find that one of the biggest challenges in working with the CLR Profiling API is attempting to mitigate the risk that a bug in my IL-rewriting logic may produce invalid IL, which would in turn produce catastrophic results at runtime (ExecutionEngineException, InvalidProgramException, etc). \r\n\r\nI think it could be extremely helpful if profiler vendors had a documented way to run ILVerify/PEVerify on assemblies after preforming IL-rewriting / ReJIT. This method could be used as part of integration testing, and also as a very useful debugging aid.\r\n\r\n[Someone asked on stackoverflow](https://stackoverflow.com/questions/55793865/creating-a-pe-file-using-imetadataemitsave-tomemory-tostream) if this could be accomplished using `IMetadataEmit::SaveToStream`, but unfortunately that method would only write out the .NET module, not a complete PE that can then be fed to ILVerify/PEVerify.\r\n\r\nIf anyone has an idea how this could be accomplished, I’d be more than happy to attempt it, and then once I succeed, to open-source/document the approach.\r\n\r\n/cc  @noahfalk @davmason @jkotas "},{"Id":"9904309113","Type":"PullRequestEvent","CreatedAt":"2019-06-27T08:54:05","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7560","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7560) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @stephentoub @jkotas"},{"Id":"9904307398","Type":"PullRequestEvent","CreatedAt":"2019-06-27T08:53:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7561","RelatedDescription":"Opened pull request \"Fix ETW GCEvents\" (#7561) at dotnet/corert","RelatedBody":""},{"Id":"9903389975","Type":"PullRequestEvent","CreatedAt":"2019-06-27T06:30:48","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7560","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7560) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9903381433","Type":"PullRequestEvent","CreatedAt":"2019-06-27T06:29:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7558","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7558) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky @Gnbrkm41 @tannergooding @safern @jkotas @tarekgh @stephentoub @benaadams"},{"Id":"9902635603","Type":"PullRequestEvent","CreatedAt":"2019-06-27T03:11:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7558","RelatedDescription":null,"RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky @Gnbrkm41 @tannergooding @safern @jkotas @tarekgh @stephentoub @benaadams"},{"Id":"9902635492","Type":"PullRequestEvent","CreatedAt":"2019-06-27T03:11:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7558","RelatedDescription":"Closed pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7558) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky @Gnbrkm41 @tannergooding @safern @jkotas @tarekgh @stephentoub @benaadams"},{"Id":"9902635054","Type":"PullRequestEvent","CreatedAt":"2019-06-27T03:11:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7559","RelatedDescription":"Merged pull request \"Try VS2019 CI queue\" (#7559) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9910536534","Type":"PullRequestEvent","CreatedAt":"2019-06-28T01:25:44","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3359","RelatedDescription":"Merged pull request \"Require manifests in runtime and targeting packs\" (#3359) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"461789512","IsPullRequest":true,"CreatedAt":"2019-06-28T04:29:48","Actor":"BruceForstall","Number":"25465","RawContent":null,"Title":"Move coreclr-corefx pipelines into their own files","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25465","RelatedDescription":"Closed or merged PR \"Move coreclr-corefx pipelines into their own files\" (#25465)"},{"Id":"461823340","IsPullRequest":true,"CreatedAt":"2019-06-28T02:14:43","Actor":"andy-ms","Number":"25469","RawContent":null,"Title":"WIP: Getting GC settings from runtimeconfig","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25469","RelatedDescription":"Open PR \"WIP: Getting GC settings from runtimeconfig\" (#25469)"},{"Id":"461819533","IsPullRequest":false,"CreatedAt":"2019-06-28T01:54:26","Actor":"VincentBu","Number":"25468","RawContent":null,"Title":"Test failed: System.Runtime.Serialization.Formatters.Tests.EqualityExtensions.IsEqual","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190627.1/workItem/System.Runtime.Serialization.Formatters.Tests/analysis/xunit/System.Runtime.Serialization.Formatters.Tests.BinaryFormatterTests~2FRoundtripManyObjectsInOneStream\r\n\r\n**Failed tests:**\r\nSystem.Runtime.Serialization.Formatters.Tests.EqualityExtensions.IsEqual\r\n\r\n**Log:**\r\n```\r\nAssert.Equal() Failure\r\nExpected: 103469184\r\nActual:   103439960\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/25468","RelatedDescription":"Open issue \"Test failed: System.Runtime.Serialization.Formatters.Tests.EqualityExtensions.IsEqual\" (#25468)"},{"Id":"461817344","IsPullRequest":false,"CreatedAt":"2019-06-28T01:42:30","Actor":"VincentBu","Number":"25467","RawContent":null,"Title":"Exit code was 127 but it should have been 42","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190626.1/workItem/System.Net.Http.Unit.Tests/analysis/xunit/System.Net.Http.Tests.HttpEnvironmentProxyTest~2FHttpProxy_EnvironmentProxy_Loaded\r\n\r\n**Log:**\r\n```\r\nExit code was 127 but it should have been 42\r\nExpected: True\r\nActual:   False\r\n\r\nat Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose(Boolean disposing) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Microsoft.DotNet.RemoteExecutor/RemoteInvokeHandle.cs:line 163\r\n   at Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose() in /_/src/Microsoft.DotNet.RemoteExecutor/src/Microsoft.DotNet.RemoteExecutor/RemoteInvokeHandle.cs:line 55\r\n   at System.Net.Http.Tests.HttpEnvironmentProxyTest.HttpProxy_EnvironmentProxy_Loaded() in /_/src/System.Net.Http/tests/UnitTests/HttpEnvironmentProxyTest.cs:line 45\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25467","RelatedDescription":"Open issue \"Exit code was 127 but it should have been 42\" (#25467)"},{"Id":"461660259","IsPullRequest":true,"CreatedAt":"2019-06-27T23:58:02","Actor":"dotnet-maestro[bot]","Number":"25455","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9d917c39-9eee-4aa5-f8e9-08d6910be5f1)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:9d917c39-9eee-4aa5-f8e9-08d6910be5f1)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25455","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#25455)"},{"Id":"461796815","IsPullRequest":true,"CreatedAt":"2019-06-27T23:56:29","Actor":"jkotas","Number":"25466","RawContent":null,"Title":"Try VS2019 Queues","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25466","RelatedDescription":"Open PR \"Try VS2019 Queues\" (#25466)"},{"Id":"461756799","IsPullRequest":true,"CreatedAt":"2019-06-27T23:16:08","Actor":"VSadov","Number":"25460","RawContent":null,"Title":"removed unnecessary WriteLine form a test","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25460","RelatedDescription":"Closed or merged PR \"removed unnecessary WriteLine form a test\" (#25460)"},{"Id":"461781997","IsPullRequest":true,"CreatedAt":"2019-06-27T22:50:33","Actor":"jkotas","Number":"25464","RawContent":null,"Title":"Reenable test for dotnet/corefx#37886","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25464","RelatedDescription":"Open PR \"Reenable test for dotnet/corefx#37886\" (#25464)"},{"Id":"461772477","IsPullRequest":false,"CreatedAt":"2019-06-27T22:14:15","Actor":"tommcdon","Number":"25463","RawContent":null,"Title":"Diagnostics Server IPC thread causes 20-40ms shutdown delays on Windows","State":"open","Body":"The Diagnostics Server IPC thread on Windows blocks in IpcStream::DiagnosticsIpc::Accept during shutdown.  The blocking call resulting in the shutdown delay is located here:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/b388f6cd87d87f4a07fe966aaa1bc92f245165d9/src/debug/debug-pal/win/diagnosticsipc.cpp#L64","Url":"https://github.com/dotnet/coreclr/issues/25463","RelatedDescription":"Open issue \"Diagnostics Server IPC thread causes 20-40ms shutdown delays on Windows\" (#25463)"},{"Id":"461772026","IsPullRequest":true,"CreatedAt":"2019-06-27T22:12:56","Actor":"sywhang","Number":"25462","RawContent":null,"Title":"Add test for IncrementingEventCounter","State":"open","Body":"Part of #23217 ","Url":"https://github.com/dotnet/coreclr/pull/25462","RelatedDescription":"Open PR \"Add test for IncrementingEventCounter\" (#25462)"},{"Id":"461771689","IsPullRequest":false,"CreatedAt":"2019-06-27T22:11:54","Actor":"AndyAyersMS","Number":"25461","RawContent":null,"Title":"Assert failure: !\"Debugger doesn't support OOM scenarios.\"","State":"open","Body":"Compile the following program\r\n```C#\r\nusing System;\r\n\r\nclass M\r\n{\r\n    public static int F1(int k)\r\n    {\r\n        try\r\n        {\r\n            throw new Exception();\r\n        }\r\n        catch (Exception)\r\n        {\r\n            if (k < 3)\r\n            return 1;\r\n            return F1(k - 1) + F1(k - 2);\r\n        }\r\n    } \r\n    \r\n    public static int Main()\r\n    {\r\n        return F1(27);\r\n    }\r\n}\r\n```\r\nRun it on a checked CLR via corerun. It will complete normally.\r\n\r\nNow run on checked CLR, and while running, attach VS2019 to corerun to debug. Doing so produces the following assert stream, and causes the program to fail with a stack overflow.\r\n```\r\nAssert failure(PID 19844 [0x00004d84], Thread: 16956 [0x423c]): !\"Debugger doesn't support OOM scenarios.\"\r\n\r\nCORECLR! Debugger::ExceptionHandle + 0x32D (0x00007fff`d2faaf7d)\r\nCORECLR! ExceptionTracker::MakeCallbacksRelatedToHandler + 0x163 (0x00007fff`d2754c6f)\r\nCORECLR! ExceptionTracker::CallHandler + 0x86 (0x00007fff`d274bc4e)\r\nCORECLR! ExceptionTracker::CallCatchHandler + 0x433 (0x00007fff`d274bb23)\r\nCORECLR! ProcessCLRException + 0xB51 (0x00007fff`d275b8b1)\r\nNTDLL! chkstk + 0x19F (0x00007ff8`499916df)\r\nNTDLL! RtlUnwindEx + 0x54F (0x00007ff8`4991fe3f)\r\nCORECLR! ClrUnwindEx + 0x41 (0x00007fff`d274c115)\r\nCORECLR! ProcessCLRException + 0xAE3 (0x00007fff`d275b843)\r\nNTDLL! chkstk + 0x11F (0x00007ff8`4999165f)\r\n    File: D:\\repos\\coreclr\\src\\debug\\ee\\debugger.cpp Line: 8585\r\n    Image: D:\\repos\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n\r\n\r\nAssert failure(PID 19844 [0x00004d84], Thread: 16956 [0x423c]): CONTRACT VIOLATION by ProcessCLRException at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 1269\r\n\r\nCoop->preemp->coop switch attempted in a GC_NOTRIGGER scope\r\n\r\nVIOLATED-->  CONTRACT in Debugger::ExceptionHandle at \"D:\\repos\\coreclr\\src\\debug\\ee\\debugger.cpp\" @ 8566\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        CONTRACT in ExceptionTracker::CallCatchHandler at \"D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp\" @ 604\r\n                        ...\r\n\r\n    File: D:\\repos\\coreclr\\src\\vm\\exceptionhandling.cpp Line: 1269\r\n    Image: D:\\repos\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n\r\n\r\nAssert failure(PID 19844 [0x00004d84], Thread: 16956 [0x423c]): !GCForbidden()\r\n    File: D:\\repos\\coreclr\\src\\vm\\threads.h Line: 2063\r\n    Image: D:\\repos\\coreclr\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n\r\n... more of those ...\r\nStack overflow.\r\n```\r\n\r\nLabelling as diagnostics for now....","Url":"https://github.com/dotnet/coreclr/issues/25461","RelatedDescription":"Open issue \"Assert failure: !\"Debugger doesn't support OOM scenarios.\"\" (#25461)"},{"Id":"461712819","IsPullRequest":true,"CreatedAt":"2019-06-27T19:38:10","Actor":"sywhang","Number":"25459","RawContent":null,"Title":"Don't return TRUE on tracepoint_enabled if LTTng library does not exist","State":"open","Body":"Address #25178 ","Url":"https://github.com/dotnet/coreclr/pull/25459","RelatedDescription":"Open PR \"Don't return TRUE on tracepoint_enabled if LTTng library does not exist\" (#25459)"},{"Id":"461703342","IsPullRequest":true,"CreatedAt":"2019-06-27T19:13:18","Actor":"EgorBo","Number":"25458","RawContent":null,"Title":"Optimize u>=1 to u!=0 and u<1 to u==0 ","State":"open","Body":"JIT already applies these tricks for signed types. This PR adds support for unsigned (extends existing logic). The diff looks big because I removed the surrounding if-else block\r\n```csharp\r\nusing System.Runtime.CompilerServices;\r\n\r\nclass MyTests\r\n{\r\n    // make sure my changes don't regress signed types:\r\n    bool C1(int a) => a >= 1;   // to \"a != 0\"\r\n    bool C2(int a) => a < 1;    // to \"a <= 0\"\r\n    bool C3(int a) => a <= -1;  // to \"a < 0\"\r\n    bool C4(int a) => a > -1;   // to \"a >= 0\"\r\n\r\n    // new cases:\r\n    bool UC1(uint a) => a >= 1; // to \"a != 0\"\r\n    bool UC2(uint a) => a < 1;  // to \"a == 0\"\r\n}\r\n```\r\n\r\n```diff\r\n; Method MyTests:C1(int):bool:this\r\nG_M54558_IG02:\r\n       test     edx, edx\r\n       setg     al\r\n       movzx    rax, al\r\n; Total bytes of code: 9\r\n\r\n\r\n; Method MyTests:C2(int):bool:this\r\nG_M54557_IG02:\r\n       test     edx, edx\r\n       setle    al\r\n       movzx    rax, al\r\n; Total bytes of code: 9\r\n\r\n\r\n; Method MyTests:C3(int):bool:this\r\nG_M54556_IG02:\r\n       test     edx, edx\r\n       setl     al                  ; LLVM generates shr eax, 31\r\n       movzx    rax, al\r\n; Total bytes of code: 9\r\n\r\n\r\n; Method MyTests:C4(int):bool:this\r\nG_M54555_IG02:\r\n       test     edx, edx\r\n       setge    al\r\n       movzx    rax, al\r\n; Total bytes of code: 9\r\n\r\n\r\n; Method MyTests:UC1(int):bool:this\r\nG_M19883_IG02:\r\n-      cmp      edx, 1\r\n-      setae    al\r\n+      test     edx, edx\r\n+      setne    al\r\n       movzx    rax, al\r\n-; Total bytes of code: 10\r\n+; Total bytes of code: 9\r\n\r\n\r\n; Method MyTests:UC2(int):bool:this\r\nG_M19880_IG02:\r\n-      cmp      edx, 1\r\n-      setb     al\r\n+      test     edx, edx\r\n+      sete     al\r\n       movzx    rax, al\r\n-; Total bytes of code: 10\r\n+; Total bytes of code: 9\r\n```\r\n/cc: @mikedn ","Url":"https://github.com/dotnet/coreclr/pull/25458","RelatedDescription":"Open PR \"Optimize u>=1 to u!=0 and u<1 to u==0 \" (#25458)"},{"Id":"461144416","IsPullRequest":true,"CreatedAt":"2019-06-27T18:35:15","Actor":"CarolEidt","Number":"25441","RawContent":null,"Title":"Don't reload or spill for keepAliveThis","State":"closed","Body":"Fix #25433","Url":"https://github.com/dotnet/coreclr/pull/25441","RelatedDescription":"Closed or merged PR \"Don't reload or spill for keepAliveThis\" (#25441)"},{"Id":"461684698","IsPullRequest":true,"CreatedAt":"2019-06-27T18:29:19","Actor":"josalem","Number":"25457","RawContent":null,"Title":"Add EventPipe/DiagnosticsIpc tests","State":"open","Body":"* Add Microsoft.Diagnostics.Tools.RuntimeClient to dependencies.props\r\n* add EventPipe tests for provider coherence, buffer size resilience, and rundown event presence\r\n\r\nInitial work on satisfying #25090.  I'm going to keep this as a draft PR for now as I am looking for feedback on the test structure.\r\n\r\nCC @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/25457","RelatedDescription":"Open PR \"Add EventPipe/DiagnosticsIpc tests\" (#25457)"},{"Id":"461671733","IsPullRequest":true,"CreatedAt":"2019-06-27T18:02:56","Actor":"VSadov","Number":"25456","RawContent":null,"Title":"Fix SIGSEGV in GC when dealing with large double[] on ARM32 (#25403)","State":"open","Body":"* Fix for #25252\r\n* revert to special casing 8-alignement for double[] in GC helpers for x86","Url":"https://github.com/dotnet/coreclr/pull/25456","RelatedDescription":"Open PR \"Fix SIGSEGV in GC when dealing with large double[] on ARM32 (#25403)\" (#25456)"},{"Id":"461504507","IsPullRequest":true,"CreatedAt":"2019-06-27T17:49:53","Actor":"dotnet-maestro[bot]","Number":"25453","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.15\r\n- **Date Produced**: 6/27/2019 8:28 AM\r\n- **Commit**: 6d723b8e5ae3129c0a94252292322fc19673478f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19326.15\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19326.15\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25453","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25453)"},{"Id":"461640700","IsPullRequest":true,"CreatedAt":"2019-06-27T16:54:44","Actor":"cshung","Number":"25454","RawContent":null,"Title":"[WIP] Avoid the multiplication generated by mc.exe","State":"open","Body":"Fixes #25324\r\n\r\nI started the investigation by running a dummy app and collect a memory dump using PerfView. Here are a couple of interesting findings.\r\n\r\n1. HeapDump.exe hit this [this assertion](https://github.com/microsoft/perfview/blob/cdca02e376ae8b87ade242fe1216860ba6c9905f/src/TraceEvent/Parsers/ClrTraceEventParser.cs#L2928) in TraceEvent, and\r\n2. [`FireEtwBulkType`](https://github.com/dotnet/coreclr/blob/68f6fd0b3294894d2d39357eff895b5a6b11433f/src/vm/eventtrace.cpp#L1688) is called four times while [`GCBulkTypeTraceData.Validate()`](https://github.com/microsoft/perfview/blob/cdca02e376ae8b87ade242fe1216860ba6c9905f/src/TraceEvent/Parsers/ClrTraceEventParser.cs#L2926) is called only once.\r\n\r\nThe first assertion leads me to believe there is a data integrity issue, so I tried to validate it. It appears that the payload is mostly valid, the only wrong piece is the `EventDataLength`, which comes from `eventRecord->UserDataLength`. The `eventRecord` pointer is passed to us through the Windows callback. The value coming from Windows is 1029, while the expected value is 347. \r\n\r\nWith some investigation, I figured where the values come from. According to the [manifest](https://github.com/dotnet/coreclr/blob/c671a7f1356b0ee25a661c0925c8ead88fb19a42/src/vm/ClrEtwAll.man#L2183), the BulkType event has 4 bytes for `Count`, 2 bytes for `ClrInstanceId`. The rest is for `Value`. Since the correct size of the whole event is 347, the correct size of `Value` is 341. This agrees with the `iSize` parameter we passed into `FireEtwBulkType`, so I believe this is good. The only mystery is where does the wrong number 1029 come from.\r\n\r\nWith further investigation, I figure where the wrong number comes from, it is calculated in the generated code. Below I have the generated code responsible for calling into Windows for writing out the event before my change:\r\n\r\n`coreclr\\bin\\obj\\Windows_NT.x64.Debug\\src\\inc\\etw\\ClrEtwAll.h`\r\n\r\n```c++\r\n//\r\n//Template from manifest : BulkType\r\n//\r\n#ifndef McTemplateCoU0qhNR0_def\r\n#define McTemplateCoU0qhNR0_def\r\nETW_INLINE\r\nULONG\r\nMcTemplateCoU0qhNR0(\r\n    _In_ PMCGEN_TRACE_CONTEXT Context,\r\n    _In_ PCEVENT_DESCRIPTOR Descriptor,\r\n    _In_ const unsigned int  _Arg0,\r\n    _In_ const unsigned short  _Arg1,\r\n    _In_ ULONG _Arg2_Len_,\r\n    _In_ const void*  _Arg2\r\n    )\r\n{\r\n#define McTemplateCoU0qhNR0_ARGCOUNT 3\r\n    ULONG Error = 0;\r\n\r\n    EVENT_DATA_DESCRIPTOR EventData[McTemplateCoU0qhNR0_ARGCOUNT + 1];\r\n\r\n    EventDataDescCreate(&EventData[1],&_Arg0, sizeof(const unsigned int)  );\r\n\r\n    EventDataDescCreate(&EventData[2],&_Arg1, sizeof(const unsigned short)  );\r\n\r\n    EventDataDescCreate(&EventData[3],_Arg2, _Arg0 * _Arg2_Len_);\r\n\r\n    Error = McGenEventWrite(Context, Descriptor, NULL, McTemplateCoU0qhNR0_ARGCOUNT + 1, EventData);\r\n\r\n#ifdef MCGEN_CALLOUT\r\nMCGEN_CALLOUT(Context->RegistrationHandle,\r\n              Descriptor,\r\n              McTemplateCoU0qhNR0_ARGCOUNT,\r\n              &EventData[1]);\r\n#endif // MCGEN_CALLOUT\r\n\r\n    return Error;\r\n}\r\n#endif // McTemplateCoU0qhNR0_def\r\n```\r\nNote the multiplication during the creation of `EventData[3]`, this is where we multiplied 341 by 3, leading to 341 x 3 + 6 = 1029. That explains where does the wrong number come from.\r\n\r\nReading the manifest again it isn't hard to figure out why `mc.exe` generate that multiplication. The manifest tells the code generator `Value` repeated `Count` times, no wonder it takes the size of the Value and multiplies it by `Count` times. This will never work because each Value has a different size depending on the `TypeParameters`.\r\n\r\nI tried various things, but there is no easy way to get `mc.exe` to understand the concept of a struct array where every struct instance has a different size. Leveraging the fact that the substring `_Arg0 * _Arg2_Len_` appeared only once in the generated header, I simply hacked it so that it avoids the multiplication.  With the hack, I confirmed that HeapDump works on the fixed build. This surprised me as we haven't solved the problem for missed events. Turn out the missed event was missed because they contain many types (around 100k of them, and the multiplication overflowed the size parameter, causing Windows to throttle. Windows does return `ERROR_MORE_DATA` from [`EventWriteTransfer`](https://docs.microsoft.com/en-us/windows/desktop/api/evntprov/nf-evntprov-eventwritetransfer) which we didn't check.\r\n\r\nThe hack is really dirty, yet it isn't the first time we do something like this. Back in 2016, we did something similar for Lttng in this [commit](https://github.com/dotnet/coreclr/commit/cd64b4884d639ce90e4192975533f5e873bd1cb3). I guess this is just how we will deal with it.\r\n\r\nI am all for a better fix if it is technically feasible. The _wrong_ manifest is concerning because it is meant to be automatically decoded using [TDH](https://docs.microsoft.com/en-us/windows/desktop/ETW/retrieving-event-data-using-tdh).","Url":"https://github.com/dotnet/coreclr/pull/25454","RelatedDescription":"Open PR \"[WIP] Avoid the multiplication generated by mc.exe\" (#25454)"},{"Id":"461458997","IsPullRequest":true,"CreatedAt":"2019-06-27T10:50:58","Actor":"kouvel","Number":"25452","RawContent":null,"Title":"Fix a mutex abandon case with WaitHandle.WaitAll in the PAL","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/25108\r\n- Upon a `WaitAll` when all waits are already satisfied, the abandoned flag is overwritten with the abandoned state of the last wait object in the array\r\n- So if the first wait object is an abandoned mutex and the second wait object is a signaled event, the `WaitAll` succeeds and does not report that anything was abandoned\r\n- Fixed to accumulate into the flag instead of overwriting it","Url":"https://github.com/dotnet/coreclr/pull/25452","RelatedDescription":"Open PR \"Fix a mutex abandon case with WaitHandle.WaitAll in the PAL\" (#25452)"},{"Id":"461421219","IsPullRequest":true,"CreatedAt":"2019-06-27T09:30:49","Actor":"sywhang","Number":"25451","RawContent":null,"Title":"Enable parsing multiple providers for LTTngConfig variable","State":"open","Body":"This addresses https://github.com/dotnet/coreclr/issues/25421. ","Url":"https://github.com/dotnet/coreclr/pull/25451","RelatedDescription":"Open PR \"Enable parsing multiple providers for LTTngConfig variable\" (#25451)"},{"Id":"461230062","IsPullRequest":false,"CreatedAt":"2019-06-27T07:55:48","Actor":"EgorBo","Number":"25448","RawContent":null,"Title":"Normalize X >= C to X > C-1 ","State":"closed","Body":"Let's say I have:\r\n```csharp\r\n[MethodImpl(MethodImplOptions.AggressiveOptimization)]\r\nbool Test1(uint a)\r\n{\r\n    return a >= 1;\r\n}\r\n\r\n[MethodImpl(MethodImplOptions.AggressiveOptimization)]\r\nbool Test2(uint a)\r\n{\r\n    return a == 1 || a > 1;\r\n}\r\n\r\n[MethodImpl(MethodImplOptions.AggressiveOptimization)]\r\nbool Test3(uint a)\r\n{\r\n    return a > 0;\r\n}\r\n```\r\n\r\nI expect them all to generate the same asm (see [godbolt](https://godbolt.org/z/IiY8Q_)), at least the 1st and the 3rd cases, but instead I get:\r\n```asm\r\n; Method PP:Test1(int):bool:this\r\nG_M35066_IG02:\r\n       cmp      edx, 1\r\n       setae    al\r\n       movzx    rax, al\r\n; Total bytes of code: 10\r\n\r\n\r\n; Method PP:Test2(int):bool:this\r\nG_M35065_IG02:\r\n       cmp      edx, 1\r\n       je       SHORT G_M35065_IG04\r\n       cmp      edx, 1\r\n       seta     al\r\n       movzx    rax, al\r\nG_M35065_IG03:\r\n       ret      \r\nG_M35065_IG04:\r\n       mov      eax, 1\r\n; Total bytes of code: 21\r\n\r\n\r\n; Method PP:Test3(int):bool:this\r\nG_M35064_IG02:\r\n       test     edx, edx\r\n       setne    al\r\n       movzx    rax, al\r\n; Total bytes of code: 9\r\n```\r\n\r\nif we normalize `X>=C` to `X>C-1` we can get for free bound check eliminations for cases like this (see https://github.com/dotnet/coreclr/issues/21408):\r\n```csharp\r\nvoid WriteTrue1(char[] a)\r\n{\r\n    if ((uint)a.Length >= 4) // bounds checks are removed only if we use '> 5' here\r\n    {\r\n        a[0] = 'T';\r\n        a[1] = 'r';\r\n        a[2] = 'u';\r\n        a[3] = 'e';\r\n    }\r\n}\r\n```\r\n\r\nSomething similar is already done for signed comparisons, see https://github.com/dotnet/coreclr/blob/master/src/jit/morph.cpp#L12778-L12783 \r\n(but only for C=1).\r\nso\r\n```csharp\r\nbool Test1(int a)\r\n{\r\n    return a >= 1;\r\n}\r\n\r\nbool Test3(int a)\r\n{\r\n    return a > 0;\r\n}\r\n```\r\nboth generate the same asm with `test edx, edx`.","Url":"https://github.com/dotnet/coreclr/issues/25448","RelatedDescription":"Closed issue \"Normalize X >= C to X > C-1 \" (#25448)"},{"Id":"461324808","IsPullRequest":true,"CreatedAt":"2019-06-27T05:41:07","Actor":"jorive","Number":"25450","RawContent":null,"Title":"Fix getting rundown events during EventPipe::Shutdown","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25450","RelatedDescription":"Open PR \"Fix getting rundown events during EventPipe::Shutdown\" (#25450)"},{"Id":"461200388","IsPullRequest":true,"CreatedAt":"2019-06-27T03:41:43","Actor":"wtgodbe","Number":"25444","RawContent":null,"Title":"Hardcode LKG version of ucrtbased.dll","State":"closed","Body":"Should unblock CI errors that look like:\r\n\r\n> F:\\workspace_work\\1\\s.dotnet\\sdk\\3.0.100-preview6-012264\\Microsoft.Common.CurrentVersion.targets(4583,5): error MSB3030: Could not copy the file \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.18362.0\\Redist\\Debug\\x64\\ucrtbased.dll\" because it was not found. \r\n\r\n@MattGal and I investigated this, it appears to be a bug with the new version of VS that incorrectly sets `UCRTVersion` to a version that isn't installed on the machine. This workaround hard-codes the LKG version until the bug gets resolved (or permanently, if we decide that we don't want to risk getting broken like this again).\r\n\r\n@MattGal @hoyosjs @BruceForstall @jkoritzinsky @AaronRobinsonMSFT PTAL","Url":"https://github.com/dotnet/coreclr/pull/25444","RelatedDescription":"Closed or merged PR \"Hardcode LKG version of ucrtbased.dll\" (#25444)"},{"Id":"461254727","IsPullRequest":false,"CreatedAt":"2019-06-27T01:49:42","Actor":"xspeed1989","Number":"25449","RawContent":null,"Title":"CoreConsole.exe issue!","State":"closed","Body":"Unhandled exception. System.IO.FileNotFoundException: Could not load file or assembly 'G:\\tmp\\coreclr\\bin\\Product\\Windows_NT.x64.Release\\CoreConsole.dll'.","Url":"https://github.com/dotnet/coreclr/issues/25449","RelatedDescription":"Closed issue \"CoreConsole.exe issue!\" (#25449)"},{"Id":"461148391","IsPullRequest":true,"CreatedAt":"2019-06-27T01:25:22","Actor":"jkotas","Number":"25442","RawContent":null,"Title":"Fix typo & make the code leaner","State":"closed","Body":"Enum.HasFlag generates bigger IL and depends on complex JIT optimization for a good code.\r\nThe classic bit check is strongly preferred accross CoreCLR and CoreFX.","Url":"https://github.com/dotnet/coreclr/pull/25442","RelatedDescription":"Closed or merged PR \"Fix typo & make the code leaner\" (#25442)"},{"Id":"461186072","IsPullRequest":true,"CreatedAt":"2019-06-27T01:02:20","Actor":"stephentoub","Number":"25443","RawContent":null,"Title":"Tweak nullable attributes per API review","State":"closed","Body":"cc: @dotnet/nullablefc, @terrajobst ","Url":"https://github.com/dotnet/coreclr/pull/25443","RelatedDescription":"Closed or merged PR \"Tweak nullable attributes per API review\" (#25443)"},{"Id":"461225369","IsPullRequest":true,"CreatedAt":"2019-06-26T23:47:05","Actor":"jkotas","Number":"25446","RawContent":null,"Title":"Update docs","State":"closed","Body":"- Delete references to Jenkins CI\r\n- Add note on Squash&Merge","Url":"https://github.com/dotnet/coreclr/pull/25446","RelatedDescription":"Closed or merged PR \"Update docs\" (#25446)"},{"Id":"461226633","IsPullRequest":false,"CreatedAt":"2019-06-26T23:38:56","Actor":"wtgodbe","Number":"25447","RawContent":null,"Title":"Remove workaround for UCRTVersion","State":"open","Body":"https://github.com/dotnet/coreclr/pull/25444 added a hard-coded version of `UCRTVersion`, since a bug in the .13 dot update of VS 2017 caused that Env Var to be incorrectly set to a version that isn't installed on the machine. We should remove that workaround once the bug is resolved.\r\n\r\nCC @RussKeldorph @MattGal @hoyosjs @BruceForstall @jkoritzinsky ","Url":"https://github.com/dotnet/coreclr/issues/25447","RelatedDescription":"Open issue \"Remove workaround for UCRTVersion\" (#25447)"},{"Id":"461211260","IsPullRequest":true,"CreatedAt":"2019-06-26T22:35:47","Actor":"briansull","Number":"25445","RawContent":null,"Title":"Fix GCStress issue on x86 and Arm","State":"open","Body":"  When we write one of the new gc stress instruction, such as INTERRUPT_INSTR_PROTECT_FIRST_RET\r\n  we might be writing it in the epilog region on x86 or ARM as a direct call can be the last\r\n  instruction before an epilog.  On x64 we always add an extra Nop, so this never occurs there.\r\n This fix expands the set of instructions we are allowed by IsMarkerInstr() to include these\r\n newly added gc stress instructions.\r\n\r\nAlthough this is a DEBUG only fix, the running of GCSTRESS requires the use of a Checked build, \r\nso the GCSTRESS failures we are seeing are due to these asserts failures.","Url":"https://github.com/dotnet/coreclr/pull/25445","RelatedDescription":"Open PR \"Fix GCStress issue on x86 and Arm\" (#25445)"},{"Id":"461141993","IsPullRequest":false,"CreatedAt":"2019-06-26T19:26:40","Actor":"GrabYourPitchforks","Number":"25440","RawContent":null,"Title":"Assert failure in controller.cpp when calling Debugger.Launch under debug coreclr","State":"open","Body":"Repro: On my local machine, I introduced into the corefx repo (in my case, `System.Text.Encodings.Tests`) a unit test with the below contents.\r\n\r\n```cs\r\n[Fact]\r\npublic static void DoLaunch()\r\n{\r\n    Debugger.Launch();\r\n}\r\n```\r\n\r\nWhen running this test from the command line (`dotnet msbuild /t:buildandtest`), it launches the \"choose your VS debugger\" window as normal. After selecting a VS instance and hitting OK, the dotnet.exe process crashes and dumps the following assertion to the console.\r\n\r\n```txt\r\n    Discovering: System.Text.Encoding.Tests (method display = ClassAndMethod, method display options = None)\r\n    Discovered:  System.Text.Encoding.Tests (found 266 test cases)\r\n    Starting:    System.Text.Encoding.Tests (parallel test collections = on, max threads = 8)\r\n\r\n  Assert failure(PID 19156 [0x00004ad4], Thread: 13984 [0x36a0]): pOldContext == NULL\r\n\r\n  CORECLR! DebuggerController::DispatchNativeException + 0x8E3 (0x00007ffa`3c9d0d23)\r\n  CORECLR! Debugger::FirstChanceNativeException + 0x4ED (0x00007ffa`3c980bad)\r\n  CORECLR! IsDebuggerFault + 0x98 (0x00007ffa`3bd0f898)\r\n  CORECLR! CLRVectoredExceptionHandlerPhase2 + 0x1DB (0x00007ffa`3bcf986b)\r\n  CORECLR! CLRVectoredExceptionHandler + 0x2B2 (0x00007ffa`3bcf9652)\r\n  CORECLR! CLRVectoredExceptionHandlerShim + 0x2D7 (0x00007ffa`3bcfa297)\r\n  NTDLL! RtlIsGenericTableEmpty + 0x1A6 (0x00007ffa`9cbd85d6)\r\n  NTDLL! RtlRaiseException + 0x1E6 (0x00007ffa`9cbca076)\r\n  NTDLL! KiUserExceptionDispatcher + 0x2E (0x00007ffa`9cbffe0e)\r\n  KERNELBASE! DebugBreak + 0x2 (0x00007ffa`99de0562)\r\n      File: C:\\coreclr\\src\\debug\\ee\\controller.cpp Line: 4200\r\n      Image: C:\\corefx\\artifacts\\bin\\testhost\\netcoreapp-Windows_NT-Debug-x64\\dotnet.exe\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25440","RelatedDescription":"Open issue \"Assert failure in controller.cpp when calling Debugger.Launch under debug coreclr\" (#25440)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"461857103","IsPullRequest":true,"CreatedAt":"2019-06-28T05:04:03","Actor":"dotnet-maestro[bot]","Number":"11654","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.12\r\n- **Date Produced**: 6/28/2019 5:03 AM\r\n- **Commit**: 33849f3381125e697008c846ac78bd0c0fd32e29\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.12\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11654","RelatedDescription":"Open PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11654)"},{"Id":"461833430","IsPullRequest":true,"CreatedAt":"2019-06-28T03:40:29","Actor":"dotnet-maestro[bot]","Number":"11653","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.11\r\n- **Date Produced**: 6/28/2019 3:04 AM\r\n- **Commit**: 1c0014c5390385ec1c6351f0a2dcc498f34faa1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.11\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11653","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11653)"},{"Id":"461808401","IsPullRequest":true,"CreatedAt":"2019-06-28T01:28:12","Actor":"dotnet-maestro[bot]","Number":"11652","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 12:52 AM\r\n- **Commit**: 82149f92ed212fd1889f66201ab2deac811e4847\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19327.9\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11652)"},{"Id":"461807858","IsPullRequest":false,"CreatedAt":"2019-06-28T00:49:37","Actor":"nguerrera","Number":"11651","RawContent":null,"Title":"SDK resolver should flow traced errors from hostfxr to msbuild","State":"open","Body":"Follow up to https://github.com/dotnet/core-setup/issues/6970\r\n\r\nWe can set an error writer on hostfxr and then return the errors to msbuild.\r\n\r\nSee https://github.com/dotnet/core-setup/blob/1a10af88e3904b1d9790be38450c23eea683d6ae/src/corehost/cli/fxr/hostfxr.cpp#L391\r\n\r\ncc @peterhuene \r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11651","RelatedDescription":"Open issue \"SDK resolver should flow traced errors from hostfxr to msbuild\" (#11651)"},{"Id":"461633765","IsPullRequest":false,"CreatedAt":"2019-06-28T00:06:56","Actor":"AndyAyersMS","Number":"11643","RawContent":null,"Title":"program hangs unexpectedly","State":"closed","Body":"## Steps to reproduce\r\n\r\nClone https://github.com/dotnet/coreclr (to say d:/repos/coreclr)\r\nClone https://github.com/AndyAyersMS/jitutils (to say d:/repos/jitutils)\r\n  change to the MutateTest branch of jitutils\r\nInstall 3.0 Preview 6 \r\n\r\ncd to d:/repos/jitutils/src/MutateTest\r\n\r\ndotnet run -c Release --  --ehStress --recursive d:\\repos\\coreclr\\tests\\src\\jit\\jit64 --quiet\r\n\r\nProcessing 537 test files\r\n// d:\\repos\\coreclr\\tests\\src\\jit\\jit64\\eh\\basics\\loopEH.cs: 29 variants, all passed\r\n// d:\\repos\\coreclr\\tests\\src\\jit\\jit64\\eh\\Common\\common.cs: did not compile successfully\r\n// d:\\repos\\coreclr\\tests\\src\\jit\\jit64\\eh\\FinallyExec\\nestedTryRegionsWithSameOffset1.cs: did not compile successfully\r\n...  more output like this ...\r\n\r\n## Expected  behavior\r\n\r\nProgram processes all 537 files and exits\r\n\r\n## Actual behavior\r\n\r\nHangs eventually, amount of progress before hang varies\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18917\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview4-010309 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19111-10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27412-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview4-27411-23 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11643","RelatedDescription":"Closed issue \"program hangs unexpectedly\" (#11643)"},{"Id":"461224329","IsPullRequest":true,"CreatedAt":"2019-06-27T22:57:03","Actor":"nguerrera","Number":"11639","RawContent":null,"Title":"Use live code flow for corefx dependency and react to S.T.Json breaks","State":"closed","Body":"Fix #11520 -- We no longer require a cyclical stage 0 update to consume corefx changes\r\n\r\nWIP: Tests aren't picking up the newer runtime we're acquiring yet. Also need to make similar change in toolset, and make sure darc subscriptions get updated.","Url":"https://github.com/dotnet/cli/pull/11639","RelatedDescription":"Closed or merged PR \"Use live code flow for corefx dependency and react to S.T.Json breaks\" (#11639)"},{"Id":"461716689","IsPullRequest":false,"CreatedAt":"2019-06-27T19:48:16","Actor":"DamianEdwards","Number":"11650","RawContent":null,"Title":"Randomly get 'The \"CreateAppHost\" task failed unexpectedly' error when doing CLI build of a new web app","State":"open","Body":"## Steps to reproduce\r\n1. Create a new web app: `dotnet new webapp`\r\n1. Repeatedly build the app from the CLI with no changes: `dotnet build`\r\n\r\n## Expected  behavior\r\nNo errors\r\n\r\n## Actual behavior\r\nRandomly see the following error (twice in the last 20 builds just now):\r\n```\r\nC:\\src\\local\\BuildPerf\\WebApp3.0> dotnet build                                                                                     Microsoft (R) Build Engine version 16.3.0-preview-19325-02+eca7818b1 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 19.81 ms for C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018: Microsoft.NET.Build.Tasks.ResourceUpdater+HResultException: 8007006E [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.ThrowExceptionForLastWin32Error() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResourceUpdater.cs:line 436 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.Update() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResourceUpdater.cs:line 324 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.AppHost.Create(String appHostSourceFilePath, String appHostDestinationFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String intermediateAssembly, Logger log) in /_/src/Tasks/Microsoft.NET.Build.Tasks/AppHost.cs:line 82 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/CreateAppHost.cs:line 38 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018: Microsoft.NET.Build.Tasks.ResourceUpdater+HResultException: 8007006E [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.ThrowExceptionForLastWin32Error() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResourceUpdater.cs:line 436 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.Update() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResourceUpdater.cs:line 324 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.AppHost.Create(String appHostSourceFilePath, String appHostDestinationFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String intermediateAssembly, Logger log) in /_/src/Tasks/Microsoft.NET.Build.Tasks/AppHost.cs:line 82 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/CreateAppHost.cs:line 38 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(358,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\src\\local\\BuildPerf\\WebApp3.0\\WebApp3.0.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.58\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012649\r\n Commit:    3f4ab7f5c5\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012649\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-04\r\n  Commit:  5c4d829254\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012649 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19326.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11650","RelatedDescription":"Open issue \"Randomly get 'The \"CreateAppHost\" task failed unexpectedly' error when doing CLI build of a new web app\" (#11650)"},{"Id":"461697020","IsPullRequest":true,"CreatedAt":"2019-06-27T18:56:56","Actor":"livarcocc","Number":"11649","RawContent":null,"Title":"Update MSBuild to 16.2.0-preview-19310-01","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11649","RelatedDescription":"Open PR \"Update MSBuild to 16.2.0-preview-19310-01\" (#11649)"},{"Id":"461696394","IsPullRequest":true,"CreatedAt":"2019-06-27T18:55:30","Actor":"livarcocc","Number":"11648","RawContent":null,"Title":"Updating msbuild to 16.2.0-preview-19310-01","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11648","RelatedDescription":"Open PR \"Updating msbuild to 16.2.0-preview-19310-01\" (#11648)"},{"Id":"461646119","IsPullRequest":true,"CreatedAt":"2019-06-27T18:35:21","Actor":"dotnet-bot","Number":"11647","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11647","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#11647)"},{"Id":"461646057","IsPullRequest":true,"CreatedAt":"2019-06-27T17:06:24","Actor":"dotnet-bot","Number":"11646","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11646","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11646)"},{"Id":"461645992","IsPullRequest":true,"CreatedAt":"2019-06-27T17:06:16","Actor":"dotnet-bot","Number":"11645","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11645","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11645)"},{"Id":"461645871","IsPullRequest":true,"CreatedAt":"2019-06-27T17:06:03","Actor":"dotnet-bot","Number":"11644","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11644","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#11644)"},{"Id":"461579119","IsPullRequest":true,"CreatedAt":"2019-06-27T15:51:50","Actor":"dotnet-maestro[bot]","Number":"11642","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190626.10\r\n- **Date Produced**: 6/27/2019 8:44 AM\r\n- **Commit**: fd9ad7f8c5a21543b5c0ca4e2197a25ce67068b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19326.10\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11642","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11642)"},{"Id":"461490185","IsPullRequest":true,"CreatedAt":"2019-06-27T12:41:14","Actor":"dotnet-maestro[bot]","Number":"11641","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190626.5\r\n- **Date Produced**: 6/27/2019 4:54 AM\r\n- **Commit**: bc5ef9f7d32f3e5d443100671b1f427fe738b318\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19326.5\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11641","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11641)"},{"Id":"461490009","IsPullRequest":true,"CreatedAt":"2019-06-27T12:05:31","Actor":"dotnet-maestro[bot]","Number":"11640","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11640","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#11640)"},{"Id":"461188698","IsPullRequest":true,"CreatedAt":"2019-06-27T03:02:09","Actor":"wli3","Number":"11637","RawContent":null,"Title":"Remove experiment on collecting UseWPF and UseWinform","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11637","RelatedDescription":"Closed or merged PR \"Remove experiment on collecting UseWPF and UseWinform\" (#11637)"},{"Id":"461224143","IsPullRequest":true,"CreatedAt":"2019-06-26T23:58:17","Actor":"dotnet-maestro[bot]","Number":"11638","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190626.6\r\n- **Date Produced**: 6/26/2019 11:27 PM\r\n- **Commit**: 785cd9abb1fa2178ae99d0f22ca25b246352ec34\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19326.6\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11638","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11638)"},{"Id":"460931226","IsPullRequest":true,"CreatedAt":"2019-06-26T22:56:27","Actor":"dotnet-maestro[bot]","Number":"11635","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190625.3\r\n- **Date Produced**: 6/26/2019 3:53 AM\r\n- **Commit**: 87eeda589c34ebfd245fcb52ad63ae6ce97bad30\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19325.3\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11635","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11635)"},{"Id":"460826552","IsPullRequest":true,"CreatedAt":"2019-06-26T22:55:55","Actor":"dotnet-maestro[bot]","Number":"11632","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190625.8\r\n- **Date Produced**: 6/26/2019 8:16 AM\r\n- **Commit**: 9f52639909df27efa01017e777ca9703dc77a2ab\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19325.8\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11632","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11632)"},{"Id":"460928158","IsPullRequest":false,"CreatedAt":"2019-06-26T16:55:32","Actor":"gthvidsten","Number":"11634","RawContent":null,"Title":"\"dotnet restore\" fails if \"nuget\" folder doesn't exist","State":"closed","Body":"## Steps to reproduce\r\n\r\nI cloned a repo, but restore of NuGet packages (`dotnet restore`) failed with the following message:\r\n\r\n> C:\\Program Files\\dotnet\\sdk\\2.2.101\\NuGet.targets(114,5): error : The local source 'C:\\ClonedRepo\\nuget' doesn't exist. [C:\\ClonedRepo\\src\\SomeProject\\src\\SomeProject.csproj]\r\n\r\nI manually created `C:\\ClonedRepo\\nuget` and ran `dotnet restore` again, and now it worked just fine.\r\n\r\n## Expected  behavior\r\n\r\n`dotnet restore` should create the `nuget` folder if it doesn't exist.\r\n\r\n## Actual behavior\r\n\r\n`dotnet restore` fails because it can't find non-existing folder\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11634","RelatedDescription":"Closed issue \"\"dotnet restore\" fails if \"nuget\" folder doesn't exist\" (#11634)"},{"Id":"461041029","IsPullRequest":false,"CreatedAt":"2019-06-26T16:54:53","Actor":"richlander","Number":"11636","RawContent":null,"Title":"Multiple instances of Preview warning","State":"closed","Body":"When building some projects, I see multiple instances of `You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview`, right after one another. It would be great if this was only displayed once. I have seen this on multiple projects.\r\n\r\n```console\r\nC:\\git\\dotnet-core-website\\src\\netlandingpage>dotnet build\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19321-02+a5a222491 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 146.9 ms for C:\\git\\dotnet-core-website\\src\\DotnetDownloads\\DotnetDownloads.csproj.\r\n  Restore completed in 345.23 ms for C:\\git\\dotnet-core-website\\src\\DotnetLearning\\DotnetLearning.csproj.\r\n  Restore completed in 827.01 ms for C:\\git\\dotnet-core-website\\src\\netlandingpage\\netlandingpage.csproj.\r\n  Restore completed in 1.4 sec for C:\\git\\dotnet-core-website\\src\\netlandingpage\\netlandingpage.csproj.\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n  You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n  DotnetDownloads -> C:\\git\\dotnet-core-website\\src\\DotnetDownloads\\bin\\Debug\\netcoreapp3.0\\DotnetDownloads.dll\r\n  DotnetLearning -> C:\\git\\dotnet-core-website\\src\\DotnetLearning\\bin\\Debug\\netcoreapp3.0\\DotnetLearning.dll\r\n```\r\n\r\nI am using the .NET Core 3.0 Preview 7 SDK on Windows.\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11636","RelatedDescription":"Closed issue \"Multiple instances of Preview warning\" (#11636)"},{"Id":"460843426","IsPullRequest":false,"CreatedAt":"2019-06-26T16:34:25","Actor":"Jepson109","Number":"11633","RawContent":null,"Title":"Dotnet run a web project failed with Unhandled expection after isntall .NET Core 3.0 Preview 7","State":"closed","Body":"## Steps to reproduce\r\n1.Install .NET Core 3.0 Preview 6 build 3.0.100-preview7-012621\r\n2.Open Cmd, create a c# ASP.NET Core web project\r\n3.Dotnet run \r\n\r\n## Expected  behavior\r\nDotnet  run succeeded.\r\n\r\n## Actual behavior\r\nDotnet run failed\r\n![image](https://user-images.githubusercontent.com/38854445/60165775-804fa200-9832-11e9-94e4-97268c7b4f15.png)\r\n\r\nNote:\r\n    1.This issue is repro when we create webapi/mvc， also repro on f#\r\n    2. Dotnet restore and dotnet build works fine\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012621​\r\n Commit:    629a4be4f6​\r\n​\r\nRuntime Environment:​\r\n OS Name:     Mac OS X​\r\n OS Version:  10.14​\r\n OS Platform: Darwin​\r\n RID:         osx.10.14-x64​\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview7-012621/​\r\n​\r\nHost (useful for support):​\r\n  Version: 3.0.0-preview7-27825-10​\r\n  Commit:  2954215e45​\r\n​\r\n.NET Core SDKs installed:​\r\n  3.0.100-preview7-012621 [/usr/local/share/dotnet/sdk]​\r\n​\r\n.NET Core runtimes installed:​\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19325.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]​\r\n  Microsoft.NETCore.App 3.0.0-preview7-27825-10 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]​\r\n​\r\nTo install additional .NET Core runtimes or SDKs:​\r\n  https://aka.ms/dotnet-download​","Url":"https://github.com/dotnet/cli/issues/11633","RelatedDescription":"Closed issue \"Dotnet run a web project failed with Unhandled expection after isntall .NET Core 3.0 Preview 7\" (#11633)"},{"Id":"460625749","IsPullRequest":true,"CreatedAt":"2019-06-26T06:49:36","Actor":"dotnet-maestro[bot]","Number":"11631","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190625.7\r\n- **Date Produced**: 6/26/2019 6:16 AM\r\n- **Commit**: fe796b216e9a47c24a2d23bf77905056651acfc8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19325.7\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11631)"},{"Id":"460615556","IsPullRequest":true,"CreatedAt":"2019-06-25T20:07:45","Actor":"damageboy","Number":"11630","RawContent":null,"Title":"Add support for downloading archives with aria2c","State":"open","Body":"This PR adds support for using aria2c (and preferring it over `curl`/`wget` when available).\r\n\r\n[aria2](https://aria2.github.io/) is notably preferable (when available) due to the fact it support \"Multi-Connection Download\" out of the box.\r\n\r\nThis allows, as shown in this PR, for downloading the dotnet binary packages with 4 chunks (currenty hardcoded) which greatly speeds up the download speed, especially for people accessing the download server(s) over long distances ([High Badwidth-Delay scenarios](https://en.wikipedia.org/wiki/Bandwidth-delay_product))\r\n\r\nskip ci please ","Url":"https://github.com/dotnet/cli/pull/11630","RelatedDescription":"Open PR \"Add support for downloading archives with aria2c\" (#11630)"},{"Id":"460611086","IsPullRequest":true,"CreatedAt":"2019-06-25T19:56:36","Actor":"damageboy","Number":"11629","RawContent":null,"Title":"Don't let dotnet-install.sh fail with 'Text file busy'","State":"open","Body":"fixes #11626\r\n\r\nskip ci please\r\n","Url":"https://github.com/dotnet/cli/pull/11629","RelatedDescription":"Open PR \"Don't let dotnet-install.sh fail with 'Text file busy'\" (#11629)"},{"Id":"460503690","IsPullRequest":true,"CreatedAt":"2019-06-25T19:04:16","Actor":"dotnet-maestro[bot]","Number":"11627","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190625.2\r\n- **Date Produced**: 6/25/2019 6:28 PM\r\n- **Commit**: bf95c946ec1f8f78a1581e725480fe1c64ee83b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19325.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11627","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11627)"},{"Id":"460556826","IsPullRequest":true,"CreatedAt":"2019-06-25T18:53:26","Actor":"nguerrera","Number":"11628","RawContent":null,"Title":"Add repo-specific target emptying file for source build","State":"closed","Body":"Incorporate patch from source build.\r\n\r\nFix #11518 \r\n\r\n(None of the other patches should be incorporated.)","Url":"https://github.com/dotnet/cli/pull/11628","RelatedDescription":"Closed or merged PR \"Add repo-specific target emptying file for source build\" (#11628)"},{"Id":"460384029","IsPullRequest":true,"CreatedAt":"2019-06-25T16:02:16","Actor":"dotnet-maestro[bot]","Number":"11625","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190624.2\r\n- **Date Produced**: 6/25/2019 4:22 AM\r\n- **Commit**: e00f4025fd1fb7c69450b27a6160ddcd0245ff5f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19324.2\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11625","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11625)"},{"Id":"460501360","IsPullRequest":false,"CreatedAt":"2019-06-25T15:42:52","Actor":"damageboy","Number":"11626","RawContent":null,"Title":"dotnet-install.sh fail with a `Text file busy` error when dotnet process is running in background","State":"open","Body":"## Steps to reproduce\r\nrun dotnet-install.sh on linux while a background dotnet process is running (for example background compiler)\r\n\r\n## Expected  behavior\r\ndotnet-install.sh should succeed\r\n\r\n## Actual behavior\r\ndotnet-install.sh will fail during the `cp -R` phase with a `Text file busy` error:\r\n\r\n```bash\r\ndotnet-install.sh -c master -i ~/dotnet/\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-preview7-012601/dotnet-sdk-3.0.100-preview7-012601-linux-x64.tar.gz\r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-preview7-012601/dotnet-sdk-3.0.100-preview7-012601-linux-x64.tar.gz\r\ncp: cannot create regular file '/home/dmg/dotnet/dotnet': Text file busy\r\n```\r\n\r\nThis is pretty common in Unix, and normally, to avoid this, most installers (such as dpkg, for example) will first remove the file (delete it) only then copy a new file instead of it.\r\n\r\nI will submit a PR for this, I just wanted to report this separately and close via PR\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```bash\r\n.NET Core SDK (reflecting any global.json): Version:   3.0.100-preview7-012601\r\n Commit:    6fedcd8ebd\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04 OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /home/dmg/dotnet/sdk/3.0.100-preview7-012601/\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27824-03  Commit:  e1d780539e\r\n\r\n.NET Core SDKs installed:  2.1.700 [/home/dmg/dotnet/sdk]\r\n  3.0.100-preview6-012264 [/home/dmg/dotnet/sdk]\r\n  3.0.100-preview7-012601 [/home/dmg/dotnet/sdk]\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.10 [/home/dmg/dotnet/shared/Microsoft.AspNetCore.All]  Microsoft.AspNetCore.All 2.1.11 [/home/dmg/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.10 [/home/dmg/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [/home/dmg/dotnet/shared/Microsoft.AspNetCore.App]  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [/home/dmg/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19324.10 [/home/dmg/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.10 [/home/dmg/dotnet/shared/Microsoft.NETCore.App]  Microsoft.NETCore.App 2.1.11 [/home/dmg/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [/home/dmg/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27824-03 [/home/dmg/dotnet/shared/Microsoft.NETCore.App]\r\nTo install additional .NET Core runtimes or SDKs:\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11626","RelatedDescription":"Open issue \"dotnet-install.sh fail with a `Text file busy` error when dotnet process is running in background\" (#11626)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"461514630","IsPullRequest":true,"CreatedAt":"2019-06-27T13:08:53","Actor":"dotnet-maestro[bot]","Number":"1288","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.15\r\n- **Date Produced**: 6/27/2019 8:28 AM\r\n- **Commit**: 6d723b8e5ae3129c0a94252292322fc19673478f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19326.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1288","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1288)"},{"Id":"461489560","IsPullRequest":true,"CreatedAt":"2019-06-27T12:14:35","Actor":"dotnet-maestro[bot]","Number":"1287","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1287","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1287)"},{"Id":"461135035","IsPullRequest":true,"CreatedAt":"2019-06-26T20:09:26","Actor":"dotnet-maestro-bot","Number":"1285","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @42748379+dotnet-maestro[bot]\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1285","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1285)"},{"Id":"461136908","IsPullRequest":true,"CreatedAt":"2019-06-26T19:14:40","Actor":"wtgodbe","Number":"1286","RawContent":null,"Title":"Update branding to preview8 in master","State":"closed","Body":"CC @terrajobst","Url":"https://github.com/dotnet/standard/pull/1286","RelatedDescription":"Closed or merged PR \"Update branding to preview8 in master\" (#1286)"},{"Id":"461045281","IsPullRequest":true,"CreatedAt":"2019-06-26T15:39:21","Actor":"roji","Number":"1284","RawContent":null,"Title":"Add feature detection properties to DbProviderFactory","State":"open","Body":"CanCreateDataAdapter, CanCreateCommandBuilder\r\n\r\nSee https://github.com/dotnet/corefx/issues/35564\r\n\r\n/cc @divega @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1284","RelatedDescription":"Open PR \"Add feature detection properties to DbProviderFactory\" (#1284)"},{"Id":"461018856","IsPullRequest":true,"CreatedAt":"2019-06-26T14:51:16","Actor":"roji","Number":"1283","RawContent":null,"Title":"Add async methods in System.Data.Common, implement IAsyncDisposable","State":"open","Body":"This brings over https://github.com/dotnet/corefx/issues/35012 (already merged for .NET Core 3.0) to .NET Standard 2.1.\r\n\r\nOne thing I noticed, is that in the corefx implementation the types have been updated to implement IAsyncDisposable, but in the ref they have not (although `DisposeAsync()` has been added). Can someone please confirm whether the interface should get added there?\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1283","RelatedDescription":"Open PR \"Add async methods in System.Data.Common, implement IAsyncDisposable\" (#1283)"},{"Id":"460955255","IsPullRequest":true,"CreatedAt":"2019-06-26T13:07:21","Actor":"dotnet-maestro[bot]","Number":"1282","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 10:31 AM\r\n- **Commit**: 219b67118e3a2d539afc1ff3bb2c10e1bc7b03d2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19326.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19326.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19326.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1282","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1282)"},{"Id":"460930584","IsPullRequest":true,"CreatedAt":"2019-06-26T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1281","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 8:36 AM\r\n- **Commit**: 4b3d46cc75969c4e2de5786ec2b10a430b26dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1281","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1281)"},{"Id":"460410476","IsPullRequest":true,"CreatedAt":"2019-06-25T13:10:58","Actor":"dotnet-maestro[bot]","Number":"1280","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190624.8\r\n- **Date Produced**: 6/25/2019 7:00 AM\r\n- **Commit**: 60d8aa31a4c1ffa0e125bd7941aca171439a2f72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19324.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19324.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19324.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1280","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1280)"},{"Id":"460383422","IsPullRequest":true,"CreatedAt":"2019-06-25T12:13:57","Actor":"dotnet-maestro[bot]","Number":"1278","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190624.24\r\n- **Date Produced**: 6/25/2019 1:31 AM\r\n- **Commit**: 062febd818fa51e82c7192782a6b6e6429cc81c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19324.24\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1278)"},{"Id":"460383487","IsPullRequest":false,"CreatedAt":"2019-06-25T12:04:02","Actor":"Rajesht2305","Number":"1279","RawContent":null,"Title":"System.PlatformNotSupportedException: 'Windows Principal functionality is not supported on this platform.'","State":"open","Body":"Hello Team,\r\nwe are using .net standard libraries in .net framework application. trying to access network share by using Impersonation but windows identity is throwing not supported exception. \r\n\r\nCode snippet: \r\n\r\n public void RunImpersonated(Action action)\r\n        {\r\n            using (WindowsIdentity identity = new WindowsIdentity(_token))\r\n            {\r\n                WindowsIdentity.RunImpersonated(identity.AccessToken, action);\r\n                //_context = identity.Impersonate();\r\n            }\r\n        }\r\n\r\n.net standard dll versions:\r\n.net standard -version 2.0\r\nSystem.Security.Principal.Windows - version: 4.1.1.1\r\n.net framework version -4.7.2\r\n\r\nany support to resolve this issue?","Url":"https://github.com/dotnet/standard/issues/1279","RelatedDescription":"Open issue \"System.PlatformNotSupportedException: 'Windows Principal functionality is not supported on this platform.'\" (#1279)"},{"Id":"459877781","IsPullRequest":true,"CreatedAt":"2019-06-24T13:09:35","Actor":"dotnet-maestro[bot]","Number":"1277","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190623.4\r\n- **Date Produced**: 6/24/2019 1:16 AM\r\n- **Commit**: 2861ef06530df06b70f17a91616d979c8f18f75e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19323.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19323.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19323.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1277","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1277)"},{"Id":"459852547","IsPullRequest":true,"CreatedAt":"2019-06-24T12:13:59","Actor":"dotnet-maestro[bot]","Number":"1276","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190623.4\r\n- **Date Produced**: 6/24/2019 7:07 AM\r\n- **Commit**: 9946534da4f73e6242ca105f6798ab58119c9ab0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19323.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1276","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1276)"},{"Id":"459599516","IsPullRequest":false,"CreatedAt":"2019-06-23T17:33:09","Actor":"hankir","Number":"1275","RawContent":null,"Title":"Date type needed","State":"open","Body":"DateTime type is useful, but of some cases require different types for Date and DateTime. Sometimes time is not filled and equal 00:00:00.\r\nBut how detect case when timezone offset take 00:00:00 from date with time.\r\nFor example, 04:00 (UTC +04:00) AM will be 00:00 when it convert to UTC for store in database.\r\n\r\nCan do lot of implementations for solve this problem. For example, use NodeTime, but i think that this type should be in .Net Standad.\r\n\r\nWhat do you think?","Url":"https://github.com/dotnet/standard/issues/1275","RelatedDescription":"Open issue \"Date type needed\" (#1275)"},{"Id":"459597750","IsPullRequest":false,"CreatedAt":"2019-06-23T17:13:19","Actor":"hankir","Number":"1274","RawContent":null,"Title":"Reflections on Enum","State":"open","Body":"In java enum is more useful. Just look at this:\r\n\r\npublic enum DayOfWeek {\r\n   SUNDAY (\"Sunday\"),\r\n   MONDAY (\"Monday\"),\r\n   TUESDAY (\"Tuesday\"),\r\n   WEDNESDAY (\"Wednesday\"),\r\n   THURSDAY (\"Thursday\"),\r\n   FRIDAY (\"Friday\"),\r\n   SATURDAY (\"Saturday\");\r\n\r\n   private String title;\r\n\r\n   DayOfWeek(String title) {\r\n       this.title = title;\r\n   }\r\n\r\n   public String getTitle() {\r\n       return title;\r\n   }\r\n\r\n   @Override\r\n   public String toString() {\r\n       return \"DayOfWeek{\" +\r\n               \"title='\" + title + '\\'' +\r\n               '}';\r\n   }\r\n}\r\n\r\nWhat do you think about this way?\r\nIt is powerful when use DDD practice and in other cases.","Url":"https://github.com/dotnet/standard/issues/1274","RelatedDescription":"Open issue \"Reflections on Enum\" (#1274)"},{"Id":"459573820","IsPullRequest":true,"CreatedAt":"2019-06-23T13:12:01","Actor":"dotnet-maestro[bot]","Number":"1273","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190622.7\r\n- **Date Produced**: 6/23/2019 6:08 AM\r\n- **Commit**: 3b39190472c73ef0c4da485bfba0aa57f9ae3b37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19322.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19322.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19322.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1273","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1273)"},{"Id":"459568213","IsPullRequest":true,"CreatedAt":"2019-06-23T12:14:03","Actor":"dotnet-maestro[bot]","Number":"1272","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190622.2\r\n- **Date Produced**: 6/22/2019 12:46 PM\r\n- **Commit**: 48aed493ffa093728bc9ffd17be0e5957f77aade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19322.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1272","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1272)"},{"Id":"459472124","IsPullRequest":true,"CreatedAt":"2019-06-22T13:11:49","Actor":"dotnet-maestro[bot]","Number":"1271","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.8\r\n- **Date Produced**: 6/22/2019 7:52 AM\r\n- **Commit**: d7631df16a92da0e21bcb64240d5007f0dab95ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1271","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1271)"},{"Id":"459467523","IsPullRequest":true,"CreatedAt":"2019-06-22T12:13:58","Actor":"dotnet-maestro[bot]","Number":"1270","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1270","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1270)"},{"Id":"459389350","IsPullRequest":false,"CreatedAt":"2019-06-21T22:08:19","Actor":"tstuts","Number":"1269","RawContent":null,"Title":"Visual Studio for Mac update leads to \"You must add a reference to assembly 'netstandard,...'\"","State":"open","Body":"I'm not sure where this issue should be reported, but since it is somewhat related to dotnet/standard#542, I figured I'd start here. This week, some of my team installed the latest updates in Visual Studio for Mac and after doing so they now encounter errors when trying to build. I've created a simple reproduction at https://github.com/tstuts/net-standard-test using a Xamarin.Mac app and a .NET Standard library.\r\n\r\n<br>\r\n\r\n#### Working Configuration:\r\n```\r\nVisual Studio: 8.0.9.5\r\nMono: 5.18.1.3\r\n```\r\n(Full details in https://github.com/tstuts/net-standard-test/blob/master/WorkingOlderConfig.txt)\r\n<br>\r\n\r\n#### Broken Configuration:\r\n```\r\nVisual Studio: 8.1.1.27\r\nMono: 5.18.1.28\r\n```\r\n(Full details in https://github.com/tstuts/net-standard-test/blob/master/BrokenUpdatedConfig.txt)\r\nThis configuration produces the following error:\r\n```\r\nError CS0012: The type 'Guid' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. (CS0012) (NetStandardTestApp)\r\n```","Url":"https://github.com/dotnet/standard/issues/1269","RelatedDescription":"Open issue \"Visual Studio for Mac update leads to \"You must add a reference to assembly 'netstandard,...'\"\" (#1269)"},{"Id":"459187249","IsPullRequest":true,"CreatedAt":"2019-06-21T13:13:31","Actor":"dotnet-maestro[bot]","Number":"1268","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.1\r\n- **Date Produced**: 6/21/2019 9:37 AM\r\n- **Commit**: e5aa6a5b6df5593e17b794dfcf5cf7ec87e9ef1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1268","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1268)"},{"Id":"459162783","IsPullRequest":true,"CreatedAt":"2019-06-21T12:11:02","Actor":"dotnet-maestro[bot]","Number":"1267","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190620.1\r\n- **Date Produced**: 6/20/2019 9:31 AM\r\n- **Commit**: b21c24996a73aa62b7a1ee69f546b9d2eb084f29\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19320.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1267","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1267)"},{"Id":"458616891","IsPullRequest":true,"CreatedAt":"2019-06-20T17:51:33","Actor":"dotnet-maestro[bot]","Number":"1265","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.25\r\n- **Date Produced**: 6/19/2019 10:49 PM\r\n- **Commit**: bd50b2bcc787a8c62e2e114fb54704b645cc1c3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19319.25\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1265","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1265)"},{"Id":"458647611","IsPullRequest":true,"CreatedAt":"2019-06-20T13:17:30","Actor":"dotnet-maestro[bot]","Number":"1266","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190619.10\r\n- **Date Produced**: 6/20/2019 3:08 AM\r\n- **Commit**: eaa0079941923b4f903344130315f4cd332b84fe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19319.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19319.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19319.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1266","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1266)"},{"Id":"458053294","IsPullRequest":false,"CreatedAt":"2019-06-19T15:42:32","Actor":"mokhabadi","Number":"1264","RawContent":null,"Title":"socket.AcceptAsync doesn't trigger socketAsyncEventArgs.Completed","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1264","RelatedDescription":"Closed issue \"socket.AcceptAsync doesn't trigger socketAsyncEventArgs.Completed\" (#1264)"},{"Id":"458003284","IsPullRequest":true,"CreatedAt":"2019-06-19T13:17:26","Actor":"dotnet-maestro[bot]","Number":"1263","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:48 AM\r\n- **Commit**: 721a570b005c53a839947603dcf76f8a3e5fc56a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19319.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1263","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1263)"},{"Id":"457973212","IsPullRequest":true,"CreatedAt":"2019-06-19T12:14:09","Actor":"dotnet-maestro[bot]","Number":"1262","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1262","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1262)"},{"Id":"457962610","IsPullRequest":false,"CreatedAt":"2019-06-19T11:39:36","Actor":"GammaFour","Number":"1261","RawContent":null,"Title":"Expression.Call exception on sorting with .NET native tool chain.","State":"open","Body":"I have an extension method which sorts an **ObservableCollection&lt;T&gt;** using a dynamic property.  Here's the original code:\r\n\r\n```\r\n       public static List<T> OrderByField<T>(this ObservableCollection<T> observableCollection, string sortField, string sortDirection)\r\n        {\r\n            // Sort the collection based on the name of the parameter.\r\n            IQueryable<T> queryable = observableCollection.AsQueryable();\r\n            string method = sortDirection == \"Asc\" ? \"OrderBy\" : \"OrderByDescending\";\r\n            var parameter = Expression.Parameter(queryable.ElementType, \"p\");\r\n            var property = Expression.Property(parameter, sortField);\r\n            var expression = Expression.Lambda(property, parameter);\r\n            Type[] types = new Type[] { queryable.ElementType, expression.Body.Type };\r\n            var methodCallExpression = Expression.Call(typeof(Queryable), method, types, queryable.Expression, expression);\r\n            return queryable.Provider.CreateQuery<T>(methodCallExpression).ToList();\r\n        }\r\n\r\n```\r\nThis works great in my debug build, but crashes when I set '**Compile with .Net Native tool chain**' with the message: \r\n\r\n> No generic method 'OrderBy' on type 'System.Linq.Queryable' is compatible with the supplied type arguments and arguments. No type arguments should be provided if the method is non-generic.\r\n\r\nFurther testing showed that if I called the 'OrderBy' methods explicitly, rather than dynamically, before I performed the dynamic '**Expression.Call**' it would work with the **.Net Native tool chain** setting.  So I distilled the method down to this (this is not a fix, this just illustrates the problem):\r\n\r\n```\r\n        public static List<T> OrderByField<T>(this ObservableCollection<T> observableCollection, string sortField, string sortDirection)\r\n        {\r\n            // [HACK] This fixes it so that the call to Expression.Call doesn't crash.\r\n            IQueryable<T> queryable1 = new ObservableCollection<T>().AsQueryable();\r\n            Queryable.OrderBy<T, int>(queryable1, p => p.GetHashCode());\r\n            Queryable.OrderByDescending<T, int>(queryable1, p => p.GetHashCode());\r\n\r\n            // Sort the collection based on the name of the parameter.\r\n            IQueryable<T> queryable = observableCollection.AsQueryable();\r\n            string method = sortDirection == \"Asc\" ? \"OrderBy\" : \"OrderByDescending\";\r\n            var parameter = Expression.Parameter(queryable.ElementType, \"p\");\r\n            var property = Expression.Property(parameter, sortField);\r\n            var expression = Expression.Lambda(property, parameter);\r\n            Type[] types = new Type[] { queryable.ElementType, expression.Body.Type };\r\n            var methodCallExpression = Expression.Call(typeof(Queryable), method, types, queryable.Expression, expression);\r\n            return queryable.Provider.CreateQuery<T>(methodCallExpression).ToList();\r\n        }\r\n\r\n```\r\nThere is some strange bug in the dynamic **Expression.Call** that only expresses itself when compiled with the **.NET Native tool chain**.  Initializing the library by calling the functions explicitly seems to 'prime' the pump and allow the method to work as intended.","Url":"https://github.com/dotnet/standard/issues/1261","RelatedDescription":"Open issue \"Expression.Call exception on sorting with .NET native tool chain.\" (#1261)"},{"Id":"457672725","IsPullRequest":true,"CreatedAt":"2019-06-18T20:10:06","Actor":"dotnet-maestro-bot","Number":"1260","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1260","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1260)"},{"Id":"457468774","IsPullRequest":true,"CreatedAt":"2019-06-18T13:13:08","Actor":"dotnet-maestro[bot]","Number":"1259","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190618.1\r\n- **Date Produced**: 6/18/2019 9:46 AM\r\n- **Commit**: 1fca079ddec2aabf56e256dab03e39b31b5036c7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19318.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19318.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19318.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1259","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1259)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"461826372","IsPullRequest":true,"CreatedAt":"2019-06-28T02:29:27","Actor":"stephentoub","Number":"39021","RawContent":null,"Title":"Add standalone HTTP stress test","State":"open","Body":"This is a simple standalone stress test that launches Kestrel in-proc, creates an HttpClient, and then concurrently makes lots of requests of varying kinds from the client to the server.  It's already discovered a plethora of issues in our HTTP/2 implementation, so I'm checking it in hopes that it can help to enable others to discover more.\r\n\r\ncc: @geoffkizer, @davidsh, @marklio, @wfurt, @scalablecory \r\n\r\nTo run:\r\n```\r\ncd src\\System.Net.Http\\tests\\StressTests\\HttpStress\r\ndotnet run -c Release\r\n```\r\nYou can enable HTTP tracing and have it dumped to the console via:\r\n```\r\ndotnet run -c Release -t\r\n```\r\nthough that does significantly slow it down and produces a ton of output, or do:\r\n```\r\ndotnet run -c Release -t d:\\log.txt\r\n```\r\nto have the logging output dumped into that file path instead.\r\n\r\nConfiguration via the command-line is limited right now; more things can be tweaked by modifying the code, e.g. changing various consts, commenting out or adding client operations to the client operations array, etc.\r\n\r\nContributes to https://github.com/dotnet/corefx/issues/38911\r\nRelated to https://github.com/dotnet/corefx/issues/39016, https://github.com/dotnet/corefx/issues/39014, https://github.com/dotnet/corefx/issues/39013, https://github.com/dotnet/corefx/issues/39005, https://github.com/dotnet/corefx/issues/38990, https://github.com/dotnet/corefx/issues/38974, https://github.com/dotnet/corefx/issues/38968, https://github.com/dotnet/corefx/issues/38989, https://github.com/dotnet/corefx/pull/39011, https://github.com/dotnet/corefx/pull/38995, https://github.com/dotnet/corefx/pull/38991","Url":"https://github.com/dotnet/corefx/pull/39021","RelatedDescription":"Open PR \"Add standalone HTTP stress test\" (#39021)"},{"Id":"461792374","IsPullRequest":true,"CreatedAt":"2019-06-28T01:24:49","Actor":"stephentoub","Number":"39011","RawContent":null,"Title":"Add more HTTP2 tracing","State":"closed","Body":"@geoffkizer and I added this as we were debugging several issues.","Url":"https://github.com/dotnet/corefx/pull/39011","RelatedDescription":"Closed or merged PR \"Add more HTTP2 tracing\" (#39011)"},{"Id":"461807406","IsPullRequest":true,"CreatedAt":"2019-06-28T00:46:52","Actor":"dotnet-maestro[bot]","Number":"39020","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190627.2\r\n- **Date Produced**: 6/28/2019 12:43 AM\r\n- **Commit**: ac4ab6c990d5ebee49dc03397a2e199241021f26\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview7.19327.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19327.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19327.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39020","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#39020)"},{"Id":"461800617","IsPullRequest":true,"CreatedAt":"2019-06-28T00:12:59","Actor":"wfurt","Number":"39019","RawContent":null,"Title":"fix cancelation tests to work with http2","State":"open","Body":"this is test only change.\r\nThis updates tests to use GenericLoopback. \r\nRemoved obsolete special cases for IsNetfxHandler.\r\nAttempt to improve AcceptConnectionAsync. I think this did not work before because of missing .ConfigureAwait(false)\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39019","RelatedDescription":"Open PR \"fix cancelation tests to work with http2\" (#39019)"},{"Id":"461798386","IsPullRequest":false,"CreatedAt":"2019-06-28T00:02:59","Actor":"HakanL","Number":"39018","RawContent":null,"Title":"TryValidateObject should use fluent model builder configuration","State":"open","Body":"Currently TryValidateObject is only using the data annotation attributes on the models, but since it's perfectly valid to use fluent configuration (the Scaffold-DbContext command is using that for example) I think the TryValidateObject should be able to use the fluent metadata in EF Core (like HasMaxLength, etc) to validate the model as well.","Url":"https://github.com/dotnet/corefx/issues/39018","RelatedDescription":"Open issue \"TryValidateObject should use fluent model builder configuration\" (#39018)"},{"Id":"461797028","IsPullRequest":true,"CreatedAt":"2019-06-27T23:57:32","Actor":"carlossanlop","Number":"39017","RawContent":null,"Title":"Re-add removed Packaging.props lines related to IntelliSense packages","State":"open","Body":"Back in Preview 6, the build process was properly placing the nuget intellisense xml files next to the built dlls, but [a recent change](https://github.com/dotnet/corefx/commit/c4c1985531cc1f25c805bbc4801b85c98e0dfee0#diff-ba98fbb097dbdca16daf37fed8c21357) removed the lines in Packaging.props necessary for this task.","Url":"https://github.com/dotnet/corefx/pull/39017","RelatedDescription":"Open PR \"Re-add removed Packaging.props lines related to IntelliSense packages\" (#39017)"},{"Id":"461794927","IsPullRequest":false,"CreatedAt":"2019-06-27T23:47:23","Actor":"geoffkizer","Number":"39016","RawContent":null,"Title":"HTTP2: Cancel while sending request body causes RST_STREAM to be sent twice","State":"open","Body":"Found as part of #38911 \r\n\r\nIf cancellation occurs while we are sending the request body, we will send RST_STREAM twice on the stream.\r\n\r\nOne occurs here: https://github.com/dotnet/corefx/blob/1833ec4769749dfce2b6dadad5882f208b499796/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Stream.cs#L142\r\n\r\nThe other occurs here: https://github.com/dotnet/corefx/blob/1833ec4769749dfce2b6dadad5882f208b499796/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs#L1522\r\n\r\nIt seems like we only need one of these, but I'm not sure which is the correct one.\r\n\r\nWe need to ensure that the cancellation tests:\r\n(a) validate that RST_STREAM is only sent once\r\n(b) validate that nothing else is sent on the stream after RST_STREAM\r\n(c) validate that the connection itself is still usable after the cancellation, i.e. a new request on the same connection succeeds.\r\n\r\n@wfurt Can you take a look at this?\r\n\r\n(edit: fix first code link)","Url":"https://github.com/dotnet/corefx/issues/39016","RelatedDescription":"Open issue \"HTTP2: Cancel while sending request body causes RST_STREAM to be sent twice\" (#39016)"},{"Id":"461793823","IsPullRequest":true,"CreatedAt":"2019-06-27T23:42:00","Actor":"JeremyKuhne","Number":"39015","RawContent":null,"Title":"Use Uri.OriginalString when serializing","State":"open","Body":"We want to be lossless if possible when round tripping (outside of escaping). To do so we need to write OriginalString instead of using ToString().\r\n\r\nRemoving pending issue reference as it was closed (we won't be adding a Uri parser to the reader).\r\n\r\nAdd user reported scenario. #38568","Url":"https://github.com/dotnet/corefx/pull/39015","RelatedDescription":"Open PR \"Use Uri.OriginalString when serializing\" (#39015)"},{"Id":"461793655","IsPullRequest":false,"CreatedAt":"2019-06-27T23:41:12","Actor":"geoffkizer","Number":"39014","RawContent":null,"Title":"HTTP2: Abort streams on server disconnect after GOAWAY","State":"open","Body":"Found as part of #38911\r\n\r\nIf the server sends a GOAWAY and then disconnects, we are not currently aborting the in-flight requests (i.e. ones that are not retryable). Instead the requests just timeout eventually.\r\n\r\nThe problem seems to be here: https://github.com/dotnet/corefx/blob/1833ec4769749dfce2b6dadad5882f208b499796/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs#L274\r\n\r\nReceiving the GOAWAY will cause the connection to set _disposed = true. It probably shouldn't.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/39014","RelatedDescription":"Open issue \"HTTP2: Abort streams on server disconnect after GOAWAY\" (#39014)"},{"Id":"461792576","IsPullRequest":false,"CreatedAt":"2019-06-27T23:35:51","Actor":"geoffkizer","Number":"39013","RawContent":null,"Title":"HTTP2: Retry on GOAWAY","State":"open","Body":"When we receive a GOAWAY, we should retry any requests with stream ID > the \"last stream ID\" parameter received as part of the GOAWAY. We're not doing this currently. We're aborting the streams without allowing them to be retried.\r\n\r\nhttps://tools.ietf.org/html/rfc7540#section-6.8\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/39013","RelatedDescription":"Open issue \"HTTP2: Retry on GOAWAY\" (#39013)"},{"Id":"461792525","IsPullRequest":true,"CreatedAt":"2019-06-27T23:35:38","Actor":"scalablecory","Number":"39012","RawContent":null,"Title":"Fix Ping.Send() to return correct PingReply status","State":"open","Body":"Resolves #38770. This fixes a behavior change between 2.x/3.0.\r\n\r\nIn 2.2, `Send()` will return a `PingReply` with e.g. `IPStatus.TimedOut` if a ping is not successful.\r\nIn 3.0, we updated `Send()` to have a truly sync implementation (previously wrapped async) but ended up throwing an incorrect exception rather than returning a `PingReply`.\r\n\r\nThis PR restores the behavior from 2.2.","Url":"https://github.com/dotnet/corefx/pull/39012","RelatedDescription":"Open PR \"Fix Ping.Send() to return correct PingReply status\" (#39012)"},{"Id":"461694362","IsPullRequest":true,"CreatedAt":"2019-06-27T23:30:12","Actor":"stephentoub","Number":"38995","RawContent":null,"Title":"Fix HTTP2 duplex communication with Expect: 100-continue","State":"closed","Body":"Duplex communication (allowing the request body to continue sending as the response body is processed) is currently broken with Expect: 100-continue: it's waiting for the request body to send before it'll return the stream for the response body to the caller.  The fix is to simplify the code, and minimize the special handling for Expect: 100-continue to just control if/when the request body is sent, rather than forking all of the logic around the handling of the request/response.\r\n\r\nAs part of diagnosing this, I added a lot more tracing, which I'm also including.\r\n\r\nI also streamlined the CreditManager's wait list to make it slimmer.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/38968\r\ncc: @geoffkizer, @davidsh, @scalablecory, @wfurt","Url":"https://github.com/dotnet/corefx/pull/38995","RelatedDescription":"Closed or merged PR \"Fix HTTP2 duplex communication with Expect: 100-continue\" (#38995)"},{"Id":"461751120","IsPullRequest":false,"CreatedAt":"2019-06-27T23:28:23","Actor":"VincentBu","Number":"39004","RawContent":null,"Title":"[x64] System.InvalidOperationException : Cannot process request because the process has exited.","State":"closed","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress2-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190615.1/workItem/System.Diagnostics.Process.Tests/analysis/xunit/System.Diagnostics.Tests.ProcessTests~2FTestProcessorAffinity\r\n\r\n**Failed tests:**\r\n System.Diagnostics.Tests.ProcessTests/TestProcessorAffinity \r\n\r\n**Log:**\r\n```\r\nSystem.InvalidOperationException : Cannot process request because the process (10611) has exited.\r\n   at System.Diagnostics.Process.ThrowIfExited(Boolean refresh) in /_/src/System.Diagnostics.Process/src/System/Diagnostics/Process.Unix.cs:line 343\r\n   at System.Diagnostics.Process.EnsureState(State state) in /_/src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs:line 940\r\n   at System.Diagnostics.Process.set_ProcessorAffinity(IntPtr value) in /_/src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs:line 536\r\n   at System.Diagnostics.Tests.ProcessTests.TestProcessorAffinity() in /_/src/System.Diagnostics.Process/tests/ProcessTests.cs:line 865\r\n```","Url":"https://github.com/dotnet/corefx/issues/39004","RelatedDescription":"Closed issue \"[x64] System.InvalidOperationException : Cannot process request because the process has exited.\" (#39004)"},{"Id":"461728029","IsPullRequest":true,"CreatedAt":"2019-06-27T23:27:58","Actor":"stephentoub","Number":"39002","RawContent":null,"Title":"Change CreateProcessLong test helper to use 5m rather than 30s sleep","State":"closed","Body":"The ProcessTestBase.CreateProcessLong helper function is used in situations where we effectively want an infinitely running process, which we then terminate when the test creating it completes.  But we also don't want the process to live in forever if something goes wrong with killing it, such as if the parent hangs or is itself terminated.  So we instead have it sleep for a \"long\" period of time, currently 30s.  However, in stress runs, that may not be long enough.  This bumps it to 5m.\r\n\r\nIf this ends up being insufficient, we can come up with another scheme.\r\n\r\ncc: @CarolEidt, @wtgodbe, @krwq\r\nhttps://github.com/dotnet/coreclr/issues/25191","Url":"https://github.com/dotnet/corefx/pull/39002","RelatedDescription":"Closed or merged PR \"Change CreateProcessLong test helper to use 5m rather than 30s sleep\" (#39002)"},{"Id":"461780588","IsPullRequest":false,"CreatedAt":"2019-06-27T22:44:46","Actor":"hughbe","Number":"39010","RawContent":null,"Title":"new EventHandlerList().AddHandlers(null) throws NRE","State":"open","Body":"Should be ANE\r\n\r\n```cs\r\nnew EventHandlerList().AddHandlers(null)\r\n```","Url":"https://github.com/dotnet/corefx/issues/39010","RelatedDescription":"Open issue \"new EventHandlerList().AddHandlers(null) throws NRE\" (#39010)"},{"Id":"461780337","IsPullRequest":false,"CreatedAt":"2019-06-27T22:43:47","Actor":"hughbe","Number":"39009","RawContent":null,"Title":"new InvalidEnumArgumentException(\"argumentName\", 1, null) throws NRE","State":"open","Body":"Should be ANE\r\n\r\n```cs\r\nnew InvalidEnumArgumentException(\"argumentName\", 1, null)\r\n```","Url":"https://github.com/dotnet/corefx/issues/39009","RelatedDescription":"Open issue \"new InvalidEnumArgumentException(\"argumentName\", 1, null) throws NRE\" (#39009)"},{"Id":"461771975","IsPullRequest":true,"CreatedAt":"2019-06-27T22:12:46","Actor":"krwq","Number":"39008","RawContent":null,"Title":"Harden System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.Dispose_ProcessingResponse_OK","State":"open","Body":"Very likely fixes: https://github.com/dotnet/corefx/issues/38859\r\n\r\nThis PR fixes two problems in this test:\r\n- race between updating totalSent and Assert checking if totalSent matches received (note that last totalSent update is happening after the response is sent which means that client could have previously finish the loop before that value got updated which could have caused referenced issue) - this is likely fixing https://github.com/dotnet/corefx/issues/38859 but I was not able to get this specific issue repro locally\r\n- When server sends a lot of data before client had a chance to to receive anything the client could have overfilled the receive window which could have caused random issue (I've removed the delay in the test now to make it more likely to introduce the first issue but it made this issue re-surface)\r\n\r\nwith those fixes I was able to run this test without any failures for around an hour already (previously it was failing relatively consistently with the second issue)","Url":"https://github.com/dotnet/corefx/pull/39008","RelatedDescription":"Open PR \"Harden System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.Dispose_ProcessingResponse_OK\" (#39008)"},{"Id":"461762631","IsPullRequest":false,"CreatedAt":"2019-06-27T21:43:00","Actor":"paulomorgado","Number":"39007","RawContent":null,"Title":"Consider adding Count to ImmutableArrayExtensions","State":"open","Body":"[ImmutableArrayExtensions](https://github.com/dotnet/corefx/blob/master/src/System.Collections.Immutable/src/System/Linq/ImmutableArrayExtensions.cs) has implementations that can leverage the `Length` property like `Any()` or `Last()` but doesn't have `Count()`.","Url":"https://github.com/dotnet/corefx/issues/39007","RelatedDescription":"Open issue \"Consider adding Count to ImmutableArrayExtensions\" (#39007)"},{"Id":"461754973","IsPullRequest":false,"CreatedAt":"2019-06-27T21:21:11","Actor":"saixiaohui","Number":"39006","RawContent":null,"Title":"System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: Resource temporarily unavailable","State":"open","Body":"I am running Azure Kubernetes container on VM ScaleSet with Public IP address for .net core 2.2. Each container will create 20k TCP connections between itself and Azure IoT hub. I am getting the following transient error message when trying to open connection to IoT Hub. We will definitely retry on this exception. However, this happens a lot and it's very annoying. I saw we have a similar issue opened long time ago but it has been closed. Here is the link for existing issue. \r\nhttps://github.com/dotnet/corefx/issues/17434\r\n\r\n```\r\nMicrosoft.Azure.IoT.Simulation.Common.Exceptions.WrapperSimulationException: Error connecting device car.000143949 ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: Resource temporarily unavailable\r\n at System.Net.Dns.InternalGetHostByName(String hostName)\r\n at System.Net.Dns.ResolveCallback(Object context)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n at System.Net.Dns.HostResolutionEndHelper(IAsyncResult asyncResult)\r\n at System.Net.Dns.EndGetHostAddresses(IAsyncResult asyncResult)\r\n at System.Net.Dns.<>c.<GetHostAddressesAsync>b__25_1(IAsyncResult asyncResult)\r\n at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n at Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportHandler.OpenAsyncInternal(CancellationToken cancellationToken)\r\n at Microsoft.Azure.Devices.Client.Transport.Mqtt.MqttTransportHandler.OpenAsync(CancellationToken cancellationToken)\r\n at Microsoft.Azure.Devices.Client.Transport.ProtocolRoutingDelegatingHandler.OpenAsync(CancellationToken cancellationToken)\r\n at Microsoft.Azure.Devices.Client.Transport.ErrorDelegatingHandler.<>c__DisplayClass22_0.<<ExecuteWithErrorHandlingAsync>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n at Microsoft.Azure.Devices.Client.Transport.ErrorDelegatingHandler.ExecuteWithErrorHandlingAsync[T](Func`1 asyncOperation)\r\n at Microsoft.Azure.Devices.Client.Transport.RetryDelegatingHandler.<>c__DisplayClass32_0.<<OpenAsyncInternal>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n at Microsoft.Azure.Devices.Client.Transport.RetryDelegatingHandler.EnsureOpenedAsync(CancellationToken cancellationToken)\r\n at Microsoft.Azure.IoT.Simulation.DeviceClients.IoTHubSimulatedDeviceClient.ConnectAsync(CancellationToken cancellationToken) in /src/DeviceClients/IoTHub/IoTHubSimulatedDevice.cs:line 105\r\n --- End of inner exception stack trace ---\r\n at Microsoft.Azure.IoT.Simulation.DeviceClients.IoTHubSimulatedDeviceClient.ConnectAsync(CancellationToken cancellationToken) in /src/DeviceClients/IoTHub/IoTHubSimulatedDevice.cs:line 137\r\n at Microsoft.Azure.IoT.Simulation.Runner.DeviceConnection.DeviceConnectionActor.ConnectAsync(CancellationToken cancellationToken) in /src/Runner/DeviceConnection/DeviceConnectionActor.cs:line 123\r\n```","Url":"https://github.com/dotnet/corefx/issues/39006","RelatedDescription":"Open issue \"System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: Resource temporarily unavailable\" (#39006)"},{"Id":"461659541","IsPullRequest":true,"CreatedAt":"2019-06-27T21:15:20","Actor":"dotnet-maestro[bot]","Number":"38994","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19326.44\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19326.44\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38994","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#38994)"},{"Id":"461752071","IsPullRequest":false,"CreatedAt":"2019-06-27T21:13:25","Actor":"geoffkizer","Number":"39005","RawContent":null,"Title":"HTTP2: Retry on REFUSED_STREAM error","State":"open","Body":"See original details in #38911 \r\n\r\nREFUSED_STREAM explicitly allows the request to be retried. In particular, this is used to deal with the race between the server lowering SETTINGS_MAX_CONCURRENT_STREAMS and the client creating new streams. If the new streams exceed the new limit, the server will send REFUSED_STREAM on these streams, allowing the client to retry the requests (subject to the new limit, of course).\r\n\r\nREFUSED_STREAM can also be used when GOAWAY is sent by the server, in a similar manner.\r\n\r\nWhen we receive a REFUSED_STREAM, we should retry the request, similar to if we receive a GOAWAY that explicitly allows the request to be retried. Depending on whether we previously received a new SETTINGS_MAX_CONCURRENT_STREAMS or a GOAWAY, this retry will happen either subject to the new limit, or on a new connection.\r\n","Url":"https://github.com/dotnet/corefx/issues/39005","RelatedDescription":"Open issue \"HTTP2: Retry on REFUSED_STREAM error\" (#39005)"},{"Id":"461749922","IsPullRequest":true,"CreatedAt":"2019-06-27T21:08:03","Actor":"joperezr","Number":"39003","RawContent":null,"Title":"Fixing small issue with reference assemblies not setting BaseIntermediateOutputPath","State":"open","Body":"cc: @ViktorHofer @ericstj \r\n\r\nEric and I found that there was a small bug causing restore re-running on incremental builds due to the project.assets.json file for the src\\*.csproj having the same path as the ref\\*.csproj. This meant that when you restored both the ref and src projects during a build, if you try re-running restore it wouldn't be a no-op since the assets file will be regenerated. This small change will ensure that ref\\*.csproj assets.json files are unique.","Url":"https://github.com/dotnet/corefx/pull/39003","RelatedDescription":"Open PR \"Fixing small issue with reference assemblies not setting BaseIntermediateOutputPath\" (#39003)"},{"Id":"461722247","IsPullRequest":true,"CreatedAt":"2019-06-27T20:01:52","Actor":"layomia","Number":"39001","RawContent":null,"Title":"Add support for types derived from supported BCL collections","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/38767.\r\nFixes https://github.com/dotnet/corefx/issues/38521.","Url":"https://github.com/dotnet/corefx/pull/39001","RelatedDescription":"Open PR \"Add support for types derived from supported BCL collections\" (#39001)"},{"Id":"461716113","IsPullRequest":true,"CreatedAt":"2019-06-27T19:46:45","Actor":"hughbe","Number":"39000","RawContent":null,"Title":"Fix System.ComponentModel.Primitives NREs","State":"open","Body":"Fixes #38999\r\nFixes #38998\r\nFixes #38997\r\nFixes #39009\r\nFixes #39010","Url":"https://github.com/dotnet/corefx/pull/39000","RelatedDescription":"Open PR \"Fix System.ComponentModel.Primitives NREs\" (#39000)"},{"Id":"461712277","IsPullRequest":false,"CreatedAt":"2019-06-27T19:36:34","Actor":"hughbe","Number":"38999","RawContent":null,"Title":"new CategoryAttribute(null).Equals(new CategoryAttribute(\"category\")) throws NRE","State":"open","Body":"Should return false","Url":"https://github.com/dotnet/corefx/issues/38999","RelatedDescription":"Open issue \"new CategoryAttribute(null).Equals(new CategoryAttribute(\"category\")) throws NRE\" (#38999)"},{"Id":"461712049","IsPullRequest":false,"CreatedAt":"2019-06-27T19:36:03","Actor":"hughbe","Number":"38998","RawContent":null,"Title":"new CategoryAttribute(null).GetHashCode() throws NRE","State":"open","Body":"Should return 0","Url":"https://github.com/dotnet/corefx/issues/38998","RelatedDescription":"Open issue \"new CategoryAttribute(null).GetHashCode() throws NRE\" (#38998)"},{"Id":"461711956","IsPullRequest":false,"CreatedAt":"2019-06-27T19:35:48","Actor":"hughbe","Number":"38997","RawContent":null,"Title":"new CategoryAttribute(null).IsDefaultAttribute throws NRE","State":"open","Body":"Should return `false`","Url":"https://github.com/dotnet/corefx/issues/38997","RelatedDescription":"Open issue \"new CategoryAttribute(null).IsDefaultAttribute throws NRE\" (#38997)"},{"Id":"461705062","IsPullRequest":true,"CreatedAt":"2019-06-27T19:17:46","Actor":"qmfrederik","Number":"38996","RawContent":null,"Title":"Consolidate Graphics across Windows & Unix","State":"open","Body":"A lot of the methods in `Graphics` are thin wrappers around GDI+.\r\n\r\nThis PR attempts to consolidate a lot of the code shared between `Graphics.Windows.cs` and `Graphics.Unix.cs` into `Graphics.cs`","Url":"https://github.com/dotnet/corefx/pull/38996","RelatedDescription":"Open PR \"Consolidate Graphics across Windows & Unix\" (#38996)"},{"Id":"461646148","IsPullRequest":true,"CreatedAt":"2019-06-27T17:06:35","Actor":"Dotnet-GitSync-Bot","Number":"38993","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @tarekgh @sywhang @adamsitnik @marek-safar @benaadams","Url":"https://github.com/dotnet/corefx/pull/38993","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#38993)"},{"Id":"461645118","IsPullRequest":false,"CreatedAt":"2019-06-27T17:04:27","Actor":"NinoFloris","Number":"38992","RawContent":null,"Title":"Add Task.Wait(TimeSpan, CancellationToken) api","State":"open","Body":"The current api might tempt people to directly cast `TimeSpan.TotalMilliseconds` to int (guilty) without realizing that there may be super rare cases where this truncates high ranges.\r\n\r\nThere is a `Task.Wait(TimeSpan)` overload to pair with the `Task.Wait(int)` method so it would only be good if the same would be true for `Task.Wait(int, CancellationToken)`.\r\n\r\nThis came up in a review of an Npgsql PR https://github.com/npgsql/npgsql/pull/2508#discussion_r298261063","Url":"https://github.com/dotnet/corefx/issues/38992","RelatedDescription":"Open issue \"Add Task.Wait(TimeSpan, CancellationToken) api\" (#38992)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"461849430","IsPullRequest":false,"CreatedAt":"2019-06-28T04:26:32","Actor":"rwecho","Number":"36856","RawContent":null,"Title":" csc.exe crash when I use System.Text.Json.Serialization","State":"open","Body":"**Version Used**: \r\ndotnet core 3.0 preview6\r\nvs2019 preview  version 16.2.0 preview3.0\r\n\r\ncrash code \r\n``` csharp\r\n  class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.ReadLine();\r\n        }\r\n\r\n        private static async Task Serialize()\r\n        {\r\n            System.Text.Json.Serialization.JsonSerializer.Parse<string>(await TestAsync());\r\n        }\r\n\r\n        private static Task<byte[]> TestAsync()\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n```\r\nExpected Behavior:\r\nExpected a successfully compiled program\r\n\r\nActual Behavior:\r\nCrashes with an hard error and exitcode -2146232797\r\n\r\nThe stacktrace :\r\n> Application: csc.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NotImplementedException: The method or operation is not implemented.\r\n   at Microsoft.CodeAnalysis.CSharp.BoundNode.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitReadOnlySpanFromArray(BoundReadOnlySpanFromArray node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitCall(BoundCall node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitExpressionStatement(BoundExpressionStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitSequencePoint(BoundSequencePoint node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Analysis.ScopeTreeBuilder.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Analysis.ScopeTreeBuilder.Build()\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Analysis.ScopeTreeBuilder.Build(BoundNode node, MethodSymbol topLevelMethod, HashSet`1 methodsConvertedToDelegates, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Analysis.Analyze(BoundNode node, MethodSymbol method, Int32 topLevelMethodOrdinal, MethodSymbol substitutedSourceMethod, VariableSlotAllocator slotAllocatorOpt, TypeCompilationState compilationState, ArrayBuilder`1 closureDebugInfo, DiagnosticBag diagnostics)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Rewrite(BoundStatement loweredBody, NamedTypeSymbol thisType, ParameterSymbol thisParameter, MethodSymbol method, Int32 methodOrdinal, MethodSymbol substitutedSourceMethod, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, VariableSlotAllocator slotAllocatorOpt, TypeCompilationState compilationState, DiagnosticBag diagnostics, HashSet`1 assignLocals)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.BoundNode.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitReadOnlySpanFromArray(Microsoft.CodeAnalysis.CSharp.BoundReadOnlySpanFromArray)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitCall(Microsoft.CodeAnalysis.CSharp.BoundCall)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitSequencePoint(Microsoft.CodeAnalysis.CSharp.BoundSequencePoint)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter+Analysis+ScopeTreeBuilder.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter+Analysis+ScopeTreeBuilder.Build()\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter+Analysis+ScopeTreeBuilder.Build(Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol>, Microsoft.CodeAnalysis.DiagnosticBag)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter+Analysis.Analyze(Microsoft.CodeAnalysis.CSharp.BoundNode, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.DiagnosticBag)\r\n   at Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.DiagnosticBag, System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Boolean, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0()\r\n   at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n","Url":"https://github.com/dotnet/roslyn/issues/36856","RelatedDescription":"Open issue \" csc.exe crash when I use System.Text.Json.Serialization\" (#36856)"},{"Id":"461716285","IsPullRequest":true,"CreatedAt":"2019-06-28T02:30:42","Actor":"jasonmalinowski","Number":"36834","RawContent":null,"Title":"Fix formatting issues being flagged by the analyzer","State":"closed","Body":"This doesn't fix all the issues: I'm filing bugs for the other ones where things seem broken.","Url":"https://github.com/dotnet/roslyn/pull/36834","RelatedDescription":"Closed or merged PR \"Fix formatting issues being flagged by the analyzer\" (#36834)"},{"Id":"461774424","IsPullRequest":true,"CreatedAt":"2019-06-28T02:28:42","Actor":"RikkiGibson","Number":"36842","RawContent":null,"Title":"Bump master to 3.3.0-beta2","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36842","RelatedDescription":"Closed or merged PR \"Bump master to 3.3.0-beta2\" (#36842)"},{"Id":"461775415","IsPullRequest":true,"CreatedAt":"2019-06-28T02:28:18","Actor":"RikkiGibson","Number":"36843","RawContent":null,"Title":"Update PublishData.json","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36843","RelatedDescription":"Closed or merged PR \"Update PublishData.json\" (#36843)"},{"Id":"461798176","IsPullRequest":true,"CreatedAt":"2019-06-28T02:00:13","Actor":"dotnet-bot","Number":"36849","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36849","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36849)"},{"Id":"461819678","IsPullRequest":true,"CreatedAt":"2019-06-28T01:55:19","Actor":"dibarbet","Number":"36855","RawContent":null,"Title":"Fix code actions projects","State":"open","Body":"Fix the server handlers to respond to updates in the LSP package.","Url":"https://github.com/dotnet/roslyn/pull/36855","RelatedDescription":"Open PR \"Fix code actions projects\" (#36855)"},{"Id":"461819398","IsPullRequest":true,"CreatedAt":"2019-06-28T01:53:38","Actor":"tmat","Number":"36854","RawContent":null,"Title":"Top-level types enumeration refactoring","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36854","RelatedDescription":"Open PR \"Top-level types enumeration refactoring\" (#36854)"},{"Id":"461798147","IsPullRequest":true,"CreatedAt":"2019-06-28T01:30:29","Actor":"dotnet-bot","Number":"36848","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36848","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36848)"},{"Id":"461798269","IsPullRequest":true,"CreatedAt":"2019-06-28T01:30:06","Actor":"dotnet-bot","Number":"36851","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36851","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36851)"},{"Id":"461807841","IsPullRequest":true,"CreatedAt":"2019-06-28T00:49:32","Actor":"JoeRobich","Number":"36853","RawContent":null,"Title":"Throw exception in PlaceCaret","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36853","RelatedDescription":"Open PR \"Throw exception in PlaceCaret\" (#36853)"},{"Id":"461801428","IsPullRequest":false,"CreatedAt":"2019-06-28T00:16:28","Actor":"gigajew","Number":"36852","RawContent":null,"Title":"Proposal: Support for static classes to implement from interfaces","State":"open","Body":"I have this issue where I need a static class to implement from an interface. Appearently the IL has support for it but C# compiler / language does not.\r\n\r\n```c#\r\npublic class Program {\r\n  public static void Main(string[] argv) {\r\n    LittleEndian.WriteUInt(new MemoryStream(), (ushort)2);\r\n  }\r\n}\r\n\r\npublic interface Endianness {\r\n  void WriteUInt16(Stream stream, ushort value);\r\n}\r\npublic class LittleEndian : Endianness {\r\n  public void WriteUInt16(Stream stream, ushort value) {\r\n    stream.WriteByte((byte)(value & 0xff));\r\n    stream.WriteByte((byte)((value >> 8) & 0xff));\r\n  }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36852","RelatedDescription":"Open issue \"Proposal: Support for static classes to implement from interfaces\" (#36852)"},{"Id":"461798212","IsPullRequest":true,"CreatedAt":"2019-06-28T00:02:16","Actor":"dotnet-bot","Number":"36850","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36850","RelatedDescription":"Open PR \"Merge master-vs-deps to features/razorSupport2\" (#36850)"},{"Id":"461798122","IsPullRequest":true,"CreatedAt":"2019-06-28T00:01:52","Actor":"dotnet-bot","Number":"36847","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36847","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36847)"},{"Id":"461797968","IsPullRequest":true,"CreatedAt":"2019-06-28T00:01:13","Actor":"dotnet-bot","Number":"36846","RawContent":null,"Title":"Merge release/dev16.3-preview1-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.3-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36846","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1-vs-deps to master-vs-deps\" (#36846)"},{"Id":"461797762","IsPullRequest":true,"CreatedAt":"2019-06-28T00:00:35","Actor":"dotnet-bot","Number":"36845","RawContent":null,"Title":"Merge release/dev16.3-preview1 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36845","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1 to master\" (#36845)"},{"Id":"461782058","IsPullRequest":false,"CreatedAt":"2019-06-27T22:50:53","Actor":"333fred","Number":"36844","RawContent":null,"Title":"Verify snapshots are being created for all relevant BoundNodes","State":"open","Body":"Currently we miss some BoundNodes when creating snapshots. We need to verify that we're creating snapshots for everything that we should be. Currently, the known list of nodes is:\r\n* `BoundArrayInitialization`\r\n* `BoundLambda`\r\n* `BoundConversion`\r\n* Patterns\r\n* `BoundMethodGroup`\r\n* `BoundTypeExpression`\r\n\r\nThese nodes are likely being visited directly by a visitor and not passing through the standard mechanisms, and so we're not creating a snapshot for the. Re-enable the assert in `NullableWalker.DebugVerifier.Visit`.","Url":"https://github.com/dotnet/roslyn/issues/36844","RelatedDescription":"Open issue \"Verify snapshots are being created for all relevant BoundNodes\" (#36844)"},{"Id":"461753653","IsPullRequest":true,"CreatedAt":"2019-06-27T21:17:42","Actor":"333fred","Number":"36841","RawContent":null,"Title":"Small Compiler Refactors","State":"open","Body":"Did a couple of small refactors as separate commits.\r\n\r\nCommit 1: Unify our two EnumerableExtensions static classes. Fixes https://github.com/dotnet/roslyn/issues/36590\r\nCommit 2: Add DebuggerHidden or DebuggerStepThrough to more visitor boilerplate methods to allow for easier debugging.\r\n\r\n@jcouv this is what I mentioned in Teams earlier.","Url":"https://github.com/dotnet/roslyn/pull/36841","RelatedDescription":"Open PR \"Small Compiler Refactors\" (#36841)"},{"Id":"461750591","IsPullRequest":false,"CreatedAt":"2019-06-27T21:09:47","Actor":"CyrusNajmabadi","Number":"36840","RawContent":null,"Title":"cannot build latest master","State":"open","Body":"I get this error:\r\n\r\n```\r\n1>------ Build started: Project: Microsoft.CodeAnalysis, Configuration: Debug Any CPU ------\r\n1>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(257,7): error MSB4064: The \"DesignTimeBuild\" parameter is not supported by the \"ResolvePackageAssets\" task. Verify the parameter exists on the task, and it is a settable public instance property.\r\n1>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5): error MSB4063: The \"ResolvePackageAssets\" task could not be initialized with its input parameters.\r\n1>Done building project \"Microsoft.CodeAnalysis.csproj\" -- FAILED.\r\n2>------ Build started: Project: Microsoft.CodeAnalysis.Workspaces, Configuration: Debug Any CPU ------\r\n2>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(257,7): error MSB4064: The \"DesignTimeBuild\" parameter is not supported by the \"ResolvePackageAssets\" task. Verify the parameter exists on the task, and it is a settable public instance property.\r\n2>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5): error MSB4063: The \"ResolvePackageAssets\" task could not be initialized with its input parameters.\r\n2>Done building project \"Microsoft.CodeAnalysis.Workspaces.csproj\" -- FAILED.\r\n```\r\n\r\nI have cleaned and restored.  I am on:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/60301020-37a4f100-98e5-11e9-8cf7-2b8238845868.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/36840","RelatedDescription":"Open issue \"cannot build latest master\" (#36840)"},{"Id":"461746664","IsPullRequest":false,"CreatedAt":"2019-06-27T20:59:33","Actor":"jasonmalinowski","Number":"36839","RawContent":null,"Title":"IDE0055 tries to move a ternary operator a strange place","State":"open","Body":"This line:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/e65f0cb2a986fc7176e5221e31521c804135c88b/src/Compilers/CSharp/Portable/Symbols/Source/SourceMemberContainerSymbol_ImplementationChecks.cs#L1051\r\n\r\nis flagged by IDE0055. When applying the fix it wants to outdent that : a lot, which doesn't make any sense at all.","Url":"https://github.com/dotnet/roslyn/issues/36839","RelatedDescription":"Open issue \"IDE0055 tries to move a ternary operator a strange place\" (#36839)"},{"Id":"461645105","IsPullRequest":true,"CreatedAt":"2019-06-27T20:58:39","Actor":"dotnet-bot","Number":"36828","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36828","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36828)"},{"Id":"461745455","IsPullRequest":false,"CreatedAt":"2019-06-27T20:56:39","Actor":"jasonmalinowski","Number":"36838","RawContent":null,"Title":"Pattern matching is giving IDE0055 formatting around operators","State":"open","Body":"In code like this:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/e65f0cb2a986fc7176e5221e31521c804135c88b/src/Compilers/CSharp/Portable/FlowAnalysis/NullableWalker.cs#L1401\r\n\r\nWe're saying there's something wrong with the space between the } and the && which doesn't really make sense.\r\n\r\nFull list of issues I think:\r\n\r\n    F:\\Projects\\Roslyn\\src\\Compilers\\CSharp\\Portable\\FlowAnalysis\\NullableWalker.cs(1401,118): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Compilers\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.csproj]\r\n    F:\\Projects\\Roslyn\\src\\Compilers\\CSharp\\Portable\\Binder\\DecisionDagBuilder.cs(1035,115): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Compilers\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.csproj]\r\n    F:\\Projects\\Roslyn\\src\\Compilers\\CSharp\\Portable\\Binder\\DecisionDagBuilder.cs(1036,112): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Compilers\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.csproj]\r\n\r\nFYI to @heejaechang and @sharwell.","Url":"https://github.com/dotnet/roslyn/issues/36838","RelatedDescription":"Open issue \"Pattern matching is giving IDE0055 formatting around operators\" (#36838)"},{"Id":"461731135","IsPullRequest":true,"CreatedAt":"2019-06-27T20:23:08","Actor":"ryzngard","Number":"36836","RawContent":null,"Title":"Fix header reading for Narrator on Pull Members Up dialog","State":"open","Body":"With a StackPanel in the custom header, Narrator reads the StackPanel class name. We could implement [ITableItemProvider](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.automation.provider.itableitemprovider) with a custom user control to correctly handle this, or just use a `CheckBox.Content` property to display the text. Now Narrator correctly reads the checkbox content when the header value needs to be read. ","Url":"https://github.com/dotnet/roslyn/pull/36836","RelatedDescription":"Open PR \"Fix header reading for Narrator on Pull Members Up dialog\" (#36836)"},{"Id":"461721938","IsPullRequest":false,"CreatedAt":"2019-06-27T20:01:15","Actor":"jasonmalinowski","Number":"36835","RawContent":null,"Title":"IDE0055 flagging on uses of pattern matching with expression bodied members","State":"open","Body":"In Roslyn.sln right now there's a bunch of these:\r\n\r\n\tF:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\CodeGeneration\\CSharpSyntaxGenerator.cs(1591,9): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\CodeGeneration\\CSharpSyntaxGenerator.cs(1592,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\CodeGeneration\\CSharpSyntaxGenerator.cs(1593,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\CodeGeneration\\CSharpSyntaxGenerator.cs(1594,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\CodeGeneration\\CSharpSyntaxGenerator.cs(1595,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\CodeGeneration\\CSharpSyntaxGenerator.cs(1596,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\CodeGeneration\\CSharpSyntaxGenerator.cs(1597,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\CodeGeneration\\CSharpSyntaxGenerator.cs(1598,9): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\MisplacedUsingDirectives\\MisplacedUsingDirectivesCodeFixProvider.cs(249,9): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\MisplacedUsingDirectives\\MisplacedUsingDirectivesCodeFixProvider.cs(250,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\MisplacedUsingDirectives\\MisplacedUsingDirectivesCodeFixProvider.cs(251,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\MisplacedUsingDirectives\\MisplacedUsingDirectivesCodeFixProvider.cs(252,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\MisplacedUsingDirectives\\MisplacedUsingDirectivesCodeFixProvider.cs(253,9): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(82,9): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\Microsoft.CodeAnalysis.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(83,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\Microsoft.CodeAnalysis.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(84,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\Microsoft.CodeAnalysis.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(85,13): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\Microsoft.CodeAnalysis.Features.csproj]\r\n\tF:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\MoveToNamespace\\AbstractMoveToNamespaceCodeAction.cs(86,9): warning IDE0055: Fix formatting [F:\\Projects\\Roslyn\\src\\Features\\Core\\Portable\\Microsoft.CodeAnalysis.Features.csproj]\r\n\r\nAn example is here:\r\n\r\nhttps://github.com/dotnet/roslyn/blob/e65f0cb2a986fc7176e5221e31521c804135c88b/src/Features/CSharp/Portable/MisplacedUsingDirectives/MisplacedUsingDirectivesCodeFixProvider.cs#L247-L253\r\n\r\nThe analyzer is firing I guess insisting that the code shouldn't be indented so much. Ignoring what the style is, I couldn't actually *fix* it and make the warning go away; the code fix also didn't really work.","Url":"https://github.com/dotnet/roslyn/issues/36835","RelatedDescription":"Open issue \"IDE0055 flagging on uses of pattern matching with expression bodied members\" (#36835)"},{"Id":"461644959","IsPullRequest":true,"CreatedAt":"2019-06-27T19:59:47","Actor":"dotnet-bot","Number":"36827","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36827","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36827)"},{"Id":"461688663","IsPullRequest":true,"CreatedAt":"2019-06-27T18:37:17","Actor":"333fred","Number":"36833","RawContent":null,"Title":"Wire GetSpeculativeTypeInfo with nullability information","State":"open","Body":"@dotnet/roslyn-compiler @chsienki for review. /cc @jasonmalinowski @ryzngard \r\n\r\nFixes https://github.com/dotnet/roslyn/issues/35037","Url":"https://github.com/dotnet/roslyn/pull/36833","RelatedDescription":"Open PR \"Wire GetSpeculativeTypeInfo with nullability information\" (#36833)"},{"Id":"461688515","IsPullRequest":true,"CreatedAt":"2019-06-27T18:36:58","Actor":"fayrose","Number":"36832","RawContent":null,"Title":"Nullchecked Lambdas and Local Functions + Constructor Tests","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36832","RelatedDescription":"Open PR \"Nullchecked Lambdas and Local Functions + Constructor Tests\" (#36832)"},{"Id":"461686450","IsPullRequest":true,"CreatedAt":"2019-06-27T18:32:44","Actor":"AmadeusW","Number":"36831","RawContent":null,"Title":"[WIP] Allow completion to be triggered from background thread","State":"open","Body":"_PR For Personal Review Only_\r\n\r\nExperiment with initializing completion on the worker thread","Url":"https://github.com/dotnet/roslyn/pull/36831","RelatedDescription":"Open PR \"[WIP] Allow completion to be triggered from background thread\" (#36831)"},{"Id":"461654970","IsPullRequest":false,"CreatedAt":"2019-06-27T17:25:47","Actor":"cston","Number":"36830","RawContent":null,"Title":"Debug.Assert() does not change tracked nullability of field","State":"open","Body":"```C#\r\nusing System.Diagnostics;\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nclass C<T>\r\n{\r\n    [AllowNull, MaybeNull] T F = default!;\r\n\r\n    void M()\r\n    {\r\n        Debug.Assert(F != null);\r\n        F.ToString();\r\n    }\r\n}\r\n```\r\n```\r\n(11,9): warning CS8602: Dereference of a possibly null reference.\r\n```\r\ncc @safern","Url":"https://github.com/dotnet/roslyn/issues/36830","RelatedDescription":"Open issue \"Debug.Assert() does not change tracked nullability of field\" (#36830)"},{"Id":"461653838","IsPullRequest":false,"CreatedAt":"2019-06-27T17:23:13","Actor":"asoifer","Number":"36829","RawContent":null,"Title":"[IOperation] Provide an abstraction for invocations to external methods","State":"open","Body":"Hello, I will provide an example of something that I can't analyze using the IOperation abstraction today.\r\n\r\nSource code under analysis:\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n   int i = Method_Name(...);            \r\n}\r\n\r\n[DllImport(\"[Name]\", CallingConvention = CallingConvention.Cdecl)]\r\npublic static extern int Method_Name(...);\r\n```\r\n\r\nWhen you want to get the IOperation instance from the invocation syntax expression you get an Invalid Operation. Even more, you can't get the declared symbol. \r\n\r\nThe most that I can do today is try to get the symbol info, and I get the following information:\r\n* Symbol: null\r\n* CandidateSymbol: Method System.Int32 MyNamespace.Program.Method_Name(...)\r\n* CandidateReason: OverloadResolutionFailure\r\n\r\nI suppose that is not possible to obtain the real symbol due to the dynamic behavior of this. \r\nBut I guess if we can do something more than providing an Invalid Operation.\r\nProbably, we can consider adding another abstraction like ExtenalInvocationOperation.\r\n\r\nThanks in advance for your feedback. \r\nRegards, \r\nAlex. \r\n","Url":"https://github.com/dotnet/roslyn/issues/36829","RelatedDescription":"Open issue \"[IOperation] Provide an abstraction for invocations to external methods\" (#36829)"},{"Id":"461743288","IsPullRequest":false,"CreatedAt":"2019-04-03T00:21:23","Actor":"fforjan","Number":"36837","RawContent":null,"Title":"Reference of type 'Microsoft.CodeAnalysis.UnresolvedMetadataReference' is not valid for this compilation when generating metrics.","State":"open","Body":"#### Analyzer package\r\nMicrosoft.CodeAnalysis.Metrics\r\n\r\n#### Package Version\r\nv2.9.1\r\n\r\n#### Repro steps\r\n1. Run the program in command line :\r\n\"C:\\Users\\ISYS36005\\TFSWorkspaces\\Dev\\Source\\packages\\SchneiderElectric.Software.CodeMetrics.2.0.0\\Metrics\\metrics.exe\" /project:\"C:\\Users\\ISYS36005\\TFSWorkspaces\\Dev\\Source\\Ourproject\\OurProject.csproj\" /OUT:\"C:\\Users\\ISYS36005\\TFSWorkspaces\\Dev\\Source\\Ourproject\\bin\\Debug\\OurProject.dll.CodeMetrics.xml\"\r\n\r\n#### Expected behavior\r\nit should generate the code metrics and if failing, give more details about what is wrong !\r\n\r\n#### Actual behavior\r\nLoading OurProject.csproj...\r\nComputing code metrics for OurProject.csproj...\r\nReference of type 'Microsoft.CodeAnalysis.UnresolvedMetadataReference' is not valid for this compilation.\r\n  Parameter name: references[0]","Url":"https://github.com/dotnet/roslyn/issues/36837","RelatedDescription":"Open issue \"Reference of type 'Microsoft.CodeAnalysis.UnresolvedMetadataReference' is not valid for this compilation when generating metrics.\" (#36837)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"461791927","IsPullRequest":true,"CreatedAt":"2019-06-28T00:27:04","Actor":"jkotas","Number":"7564","RawContent":null,"Title":"Fix ARM build break","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7564","RelatedDescription":"Closed or merged PR \"Fix ARM build break\" (#7564)"},{"Id":"461738560","IsPullRequest":false,"CreatedAt":"2019-06-27T20:39:30","Actor":"csnewman","Number":"7563","RawContent":null,"Title":"arm registers do not fit into unw_context_t","State":"open","Body":"```\r\nIn file included from /home/csnewman/corert/src/Native/Runtime/unix/UnwindHelpers.cpp:22:\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2328:3: error: static_assert failed \"arm registers do not fit into unw_context_t\"\r\n  static_assert((check_fit<Registers_arm, unw_context_t>::does_fit),\r\n  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2444:32: error: out-of-line definition of 'getRegisterLocation' does not match any\r\n      declaration in 'libunwind::Registers_arm'\r\ninline uint32_t Registers_arm::getRegisterLocation(int regNum) const {\r\n                               ^~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/UnwindHelpers.cpp.o] Error 1\r\n\r\n```","Url":"https://github.com/dotnet/corert/issues/7563","RelatedDescription":"Open issue \"arm registers do not fit into unw_context_t\" (#7563)"},{"Id":"461402520","IsPullRequest":true,"CreatedAt":"2019-06-27T13:24:43","Actor":"jkotas","Number":"7561","RawContent":null,"Title":"Fix ETW GCEvents","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7561","RelatedDescription":"Closed or merged PR \"Fix ETW GCEvents\" (#7561)"},{"Id":"461406438","IsPullRequest":false,"CreatedAt":"2019-06-27T09:01:30","Actor":"OmerRaviv","Number":"7562","RawContent":null,"Title":"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API","State":"open","Body":"I find that one of the biggest challenges in working with the CLR Profiling API is attempting to mitigate the risk that a bug in my IL-rewriting logic may produce invalid IL, which would in turn produce catastrophic results at runtime (ExecutionEngineException, InvalidProgramException, etc). \r\n\r\nI think it could be extremely helpful if profiler vendors had a documented way to run ILVerify/PEVerify on assemblies after preforming IL-rewriting / ReJIT. This method could be used as part of integration testing, and also as a very useful debugging aid.\r\n\r\n[Someone asked on stackoverflow](https://stackoverflow.com/questions/55793865/creating-a-pe-file-using-imetadataemitsave-tomemory-tostream) if this could be accomplished using `IMetadataEmit::SaveToStream`, but unfortunately that method would only write out the .NET module, not a complete PE that can then be fed to ILVerify/PEVerify.\r\n\r\nIf anyone has an idea how this could be accomplished, I’d be more than happy to attempt it, and then once I succeed, to open-source/document the approach.\r\n\r\n/cc  @noahfalk @davmason @jkotas ","Url":"https://github.com/dotnet/corert/issues/7562","RelatedDescription":"Open issue \"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API\" (#7562)"},{"Id":"461341179","IsPullRequest":true,"CreatedAt":"2019-06-27T08:54:05","Actor":"Dotnet-GitSync-Bot","Number":"7560","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @stephentoub @jkotas","Url":"https://github.com/dotnet/corert/pull/7560","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7560)"},{"Id":"461084607","IsPullRequest":true,"CreatedAt":"2019-06-27T06:29:12","Actor":"Dotnet-GitSync-Bot","Number":"7558","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky @Gnbrkm41 @tannergooding @safern @jkotas @tarekgh @stephentoub @benaadams","Url":"https://github.com/dotnet/corert/pull/7558","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7558)"},{"Id":"461233093","IsPullRequest":true,"CreatedAt":"2019-06-27T03:11:36","Actor":"jkotas","Number":"7559","RawContent":null,"Title":"Try VS2019 CI queue","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7559","RelatedDescription":"Closed or merged PR \"Try VS2019 CI queue\" (#7559)"},{"Id":"460640977","IsPullRequest":true,"CreatedAt":"2019-06-26T19:49:25","Actor":"trylek","Number":"7557","RawContent":null,"Title":"Small SuperIlc fix for wrong architecture identifier","State":"closed","Body":"When analyzing the Pri#1 CPAOT results I noticed that some of the\r\n\"issues.targets\" exclusions got silently ignored and I tracked it\r\ndown to incorrect architecture specification - I apparently used\r\n\"amd64\" instead of the expected \"x64\".\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7557","RelatedDescription":"Closed or merged PR \"Small SuperIlc fix for wrong architecture identifier\" (#7557)"},{"Id":"460638909","IsPullRequest":true,"CreatedAt":"2019-06-26T19:44:15","Actor":"trylek","Number":"7556","RawContent":null,"Title":"Remove the Crossgen-specific VSD flag from CPAOT","State":"closed","Body":"Based on JanK's advice I have slightly refactored CPAOT to free it\r\nfrom blindly reusing the Crossgen hack of using a special bit flag\r\nto pass information around within the ZAP logic. As part of the cleanup\r\nI have also removed the AppendMangledName override in\r\nDelayLoadMethodHelperImport as it wasn't adding any extra\r\nuseful information.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7556","RelatedDescription":"Closed or merged PR \"Remove the Crossgen-specific VSD flag from CPAOT\" (#7556)"},{"Id":"459991969","IsPullRequest":true,"CreatedAt":"2019-06-24T21:18:56","Actor":"Dotnet-GitSync-Bot","Number":"7555","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @safern @HermanEldering @Marusyk @siriak @MarcoRossignoli","Url":"https://github.com/dotnet/corert/pull/7555","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7555)"},{"Id":"459900202","IsPullRequest":false,"CreatedAt":"2019-06-24T13:43:53","Actor":"kvittokonito","Number":"7554","RawContent":null,"Title":"NuGet package not being built","State":"open","Body":"As far as I can tell, no new NuGet package has been deployed to MyGet for months, is this intentional?\r\n\r\nI would rather not have to built and deploy CoreRT from source into our CI/CD pipeline to take advantage of fixes like #7526.","Url":"https://github.com/dotnet/corert/issues/7554","RelatedDescription":"Open issue \"NuGet package not being built\" (#7554)"},{"Id":"459595649","IsPullRequest":true,"CreatedAt":"2019-06-23T20:12:48","Actor":"Suchiman","Number":"7553","RawContent":null,"Title":" Clear stacktrace before throwing exceptions","State":"closed","Body":"fixes #5183","Url":"https://github.com/dotnet/corert/pull/7553","RelatedDescription":"Closed or merged PR \" Clear stacktrace before throwing exceptions\" (#7553)"},{"Id":"459515304","IsPullRequest":true,"CreatedAt":"2019-06-23T20:11:58","Actor":"timmydo","Number":"7551","RawContent":null,"Title":"add StaticallyLinked csproj property for unix","State":"closed","Body":"Add `<StaticallyLinked>true</StaticallyLinked>` to your csproj to compile a statically liked binary. ","Url":"https://github.com/dotnet/corert/pull/7551","RelatedDescription":"Closed or merged PR \"add StaticallyLinked csproj property for unix\" (#7551)"},{"Id":"459515874","IsPullRequest":true,"CreatedAt":"2019-06-23T19:18:22","Actor":"timmydo","Number":"7552","RawContent":null,"Title":"Devcontainer files for vscode cross-platform development.","State":"closed","Body":"https://code.visualstudio.com/docs/remote/containers is a feature that makes it a lot easier to do linux development from a windows machine in vs code. Basically, when you launch VS Code in the corert directory, it will create a docker image with the appropriate tools installed so you can run `./build.sh` without needing to install any pre-reqs.","Url":"https://github.com/dotnet/corert/pull/7552","RelatedDescription":"Closed or merged PR \"Devcontainer files for vscode cross-platform development.\" (#7552)"},{"Id":"458971234","IsPullRequest":true,"CreatedAt":"2019-06-23T03:18:19","Actor":"Suchiman","Number":"7545","RawContent":null,"Title":"Implement GetTotalAllocatedBytes","State":"closed","Body":"Implements `GetTotalAllocatedBytes`\r\ncontributes to #5680","Url":"https://github.com/dotnet/corert/pull/7545","RelatedDescription":"Closed or merged PR \"Implement GetTotalAllocatedBytes\" (#7545)"},{"Id":"459508048","IsPullRequest":true,"CreatedAt":"2019-06-23T02:46:21","Actor":"Suchiman","Number":"7550","RawContent":null,"Title":"Ports dotnet/coreclr#25216 to CoreRT","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/pull/25216 (gc only port)","Url":"https://github.com/dotnet/corert/pull/7550","RelatedDescription":"Closed or merged PR \"Ports dotnet/coreclr#25216 to CoreRT\" (#7550)"},{"Id":"459481444","IsPullRequest":true,"CreatedAt":"2019-06-22T14:53:11","Actor":"MichalStrehovsky","Number":"7549","RawContent":null,"Title":"Add support for x86/x64 hardware intrinsics","State":"open","Body":"RyuJIT has had support for HW intrinsics for a while but we didn't enable them (besides SSE/SSE2) because the way RyuJIT implements them only suits JIT environments: RyuJIT is not able to generate code that switches based on the intrinsics supported by the CPU at runtime - the intrinsic support level is hardcoded at compilation time. This works for a JIT, but not so well for AOT.\r\n\r\nFollowing scheme is used to adapt this for AOT compilation:\r\n* We tell RyuJIT all non-VEX intrinsics are supported.\r\n* We intercept the `IsSupported` property calls on the individual intrinsic classes and instead of telling RyuJIT the `IsSupported` methods are intrinsics (that RyuJIT would expand to a constant `true` based on the flags we passed to RyuJIT), we treat them as normal method calls.\r\n* We rewrite the IL of the `IsSupported` method to read a value from an RVA static field and check for a bit (each bit representing a different ISA extension).\r\n* At process startup we initialize the RVA static field with bits based on a CPUID check.","Url":"https://github.com/dotnet/corert/pull/7549","RelatedDescription":"Open PR \"Add support for x86/x64 hardware intrinsics\" (#7549)"},{"Id":"459366444","IsPullRequest":false,"CreatedAt":"2019-06-22T01:28:46","Actor":"tim241","Number":"7548","RawContent":null,"Title":"async issue","State":"closed","Body":"I'm developing an application which uses `youtube-dl` for some of it's functionality\r\n\r\nhowever, I get a different result when using a build from `dotnet build -c Release`  and the corert,\r\n\r\n`dotnet build -c Release`:\r\n![cmd_dj5LUjFmF3](https://user-images.githubusercontent.com/18737914/59950014-196a6b80-9475-11e9-9bee-5238114dd27e.png)\r\n\r\ncorert:\r\n![cmd_aFvdtYM0vh](https://user-images.githubusercontent.com/18737914/59950038-29824b00-9475-11e9-845f-38d77661cc5a.png)\r\n\r\nrelevant code:\r\n[main](https://github.com/tim241/corert-async-bug/blob/master/AudioControlServer/Program.cs)\r\n[async function](https://github.com/tim241/corert-async-bug/blob/master/YoutubeCandyWrapper/AudioDownloader.cs#L72-L108)\r\n\r\n# How to reproduce\r\n* `git clone https://github.com/tim241/corert-async-bug`\r\n* install youtube-dl and add it to PATH\r\n* use `dotnet publish -c Release -r win-x64` (in the `AudioControlServer` folder) to build for the corert\r\n\r\nI'm not sure why the corert is giving me a different result, maybe it doesn't fill the `JsonList`?","Url":"https://github.com/dotnet/corert/issues/7548","RelatedDescription":"Closed issue \"async issue\" (#7548)"},{"Id":"459012632","IsPullRequest":true,"CreatedAt":"2019-06-21T14:12:31","Actor":"jkotas","Number":"7547","RawContent":null,"Title":"Make acquiring cache size optional","State":"closed","Body":"Contributes to #7524","Url":"https://github.com/dotnet/corert/pull/7547","RelatedDescription":"Closed or merged PR \"Make acquiring cache size optional\" (#7547)"},{"Id":"458992661","IsPullRequest":true,"CreatedAt":"2019-06-21T14:09:17","Actor":"jkotas","Number":"7546","RawContent":null,"Title":"Port dotnet/coreclr#25130 to CoreRT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7546","RelatedDescription":"Closed or merged PR \"Port dotnet/coreclr#25130 to CoreRT\" (#7546)"},{"Id":"458955125","IsPullRequest":true,"CreatedAt":"2019-06-21T13:49:14","Actor":"jkotas","Number":"7544","RawContent":null,"Title":"Rename task name to avoid collisions with ILLinker task name","State":"closed","Body":"Fixes #7543","Url":"https://github.com/dotnet/corert/pull/7544","RelatedDescription":"Closed or merged PR \"Rename task name to avoid collisions with ILLinker task name\" (#7544)"},{"Id":"458913296","IsPullRequest":false,"CreatedAt":"2019-06-21T13:49:14","Actor":"Suchiman","Number":"7543","RawContent":null,"Title":"Instructions on how to use CoreRT don't work anymore","State":"closed","Body":"https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built\r\n```\r\nMicrosoft.NETCore.Native.Publish.targets(82,5): error MSB4064:\r\nThe DotNetAppHostExecutableName parameter is not supported by the ComputeManagedAssemblies task.\r\nMake sure the parameter is present in the task and it is a definable public instance property.\r\n```\r\nWould also be nice to update the instructions for `netcoreapp3.0` at the same time.","Url":"https://github.com/dotnet/corert/issues/7543","RelatedDescription":"Closed issue \"Instructions on how to use CoreRT don't work anymore\" (#7543)"},{"Id":"458791412","IsPullRequest":true,"CreatedAt":"2019-06-20T19:20:57","Actor":"Dotnet-GitSync-Bot","Number":"7542","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @safern @stephentoub","Url":"https://github.com/dotnet/corert/pull/7542","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7542)"},{"Id":"458713096","IsPullRequest":false,"CreatedAt":"2019-06-20T17:25:31","Actor":"hhblaze","Number":"7541","RawContent":null,"Title":"XML DeSerializazion error","State":"closed","Body":"Only after running native executable (standard .NetCore works)\r\n\r\n```\r\npublic class SerClass\r\n    {\r\n        public SerClass()\r\n        {\r\n            Name = String.Empty;\r\n            MinimalVersion = \"0\";\r\n            MaximalVersion = \"40001212180000\";\r\n            Version = \"200810101800\";\r\n            Path = String.Empty;\r\n            Minimal = 0;\r\n        }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public string MinimalVersion { get; set; }\r\n\r\n\r\n        public string MaximalVersion { get; set; }\r\n\r\n        public string Version { get; set; }\r\n\r\n\r\n        public string Path { get; set; }\r\n\r\n\r\n        public byte[] Zipped { get; set; }\r\n\r\n\r\n        public long Minimal { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n static void TestXmlSerialization()\r\n        {\r\n            try\r\n            {\r\n                SerClass ai = new SerClass()\r\n                {\r\n                    Minimal = 4568654,\r\n                    Name = \"addinname\",\r\n                    Path = \"pathtozipfile\",\r\n                    MaximalVersion = \"smv\",\r\n                    MinimalVersion = \"sminvc\",\r\n                    Version = \" dsfsdf\",\r\n                    Zipped = new byte[] { 1, 2, 3 }\r\n                };\r\n\r\n                Console.WriteLine(\"---se\");\r\n                var sxml = SerializeXml(ai);\r\n                Console.WriteLine(sxml);\r\n                Console.WriteLine(\"---de\");\r\n                var ai1 = DeserializeXml<SerClass>(sxml);\r\n                Console.WriteLine(\"---done\");\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex.ToString());\r\n            }\r\n\r\n            Console.ReadLine();\r\n           \r\n        }\r\n```\r\n```\r\n\r\n  public static string SerializeXml(this object objectForSerialization)\r\n        {\r\n            try\r\n            {\r\n                System.Xml.Serialization.XmlSerializer xs = new System.Xml.Serialization.XmlSerializer(objectForSerialization.GetType());\r\n\r\n                string r = String.Empty;\r\n\r\n                using (System.IO.StringWriter wr = new System.IO.StringWriter())\r\n                {\r\n                    xs.Serialize(wr, objectForSerialization);\r\n                    r = wr.GetStringBuilder().ToString();\r\n                    wr.Close();\r\n                }\r\n\r\n                return r;\r\n            }\r\n            catch (Exception ex)\r\n            {                \r\n                throw ex;\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        public static T DeserializeXml<T>(this string str)\r\n        {\r\n            try\r\n            {\r\n                System.Xml.Serialization.XmlSerializer xs = new System.Xml.Serialization.XmlSerializer(typeof(T));\r\n\r\n                object r = null;\r\n                using (System.IO.StringReader sr = new System.IO.StringReader(str))\r\n                {\r\n                    r = xs.Deserialize(new System.IO.StringReader(str));\r\n                    sr.Close();\r\n                }\r\n\r\n                return (T)r;\r\n            }\r\n            catch (Exception ex)\r\n            {                \r\n                throw ex;\r\n            }\r\n            \r\n        }\r\n```\r\n\r\n\r\nResult:\r\n\r\n```\r\n---se\r\n<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<SerClass xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Name>addinname</Name>\r\n  <MinimalVersion>sminvc</MinimalVersion>\r\n  <MaximalVersion>smv</MaximalVersion>\r\n  <Version> dsfsdf</Version>\r\n  <Path>pathtozipfile</Path>\r\n  <Zipped>AQID</Zipped>\r\n  <Minimal>4568654</Minimal>\r\n</SerClass>\r\n---de\r\nSystem.InvalidOperationException: There is an error in XML document (2, 2). ---> EETypeRva:0x018729F8(System.Reflection.MissingRuntimeArtifactException): MakeGenericMethod() cannot create this generic method instantiation because the instantiation was not metadata-enabled: 'System.Xml.Serialization.ReflectionXmlSerializationReaderHelper.GetSetMemberValueDelegateWithType<GpsCarControl.LicenceServer.SerClass,System.Int64>(System.Reflection.MemberInfo)' For more information, please visit http://go.microsoft.com/fwlink/?LinkID=616868\r\n   at Internal.Reflection.Core.Execution.ExecutionEnvironment.GetMethodInvoker(RuntimeTypeInfo, QMethodDefinition, RuntimeTypeInfo[], MemberInfo) + 0x148\r\n   at System.Reflection.Runtime.MethodInfos.NativeFormat.NativeFormatMethodCommon.GetUncachedMethodInvoker(RuntimeTypeInfo[], MemberInfo) + 0x50\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeMethodInfo.get_MethodInvoker() + 0xa8\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeNamedMethodInfo`1.MakeGenericMethod(Type[]) + 0x104\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.GetSetMemberValueDelegate(Object, String) + 0x152\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteLiteralStructMethod(StructMapping, Boolean, Boolean, String) + 0x905\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteElement(ElementAccessor, Boolean, Boolean, Boolean, String, Int32, Int32, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.Member) + 0x462\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElementsIf(ReflectionXmlSerializationReader.Member[], ReflectionXmlSerializationReader.Member, UnknownNodeAction, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.CheckTypeSource) + 0x30e\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.GenerateTypeElement(XmlTypeMapping) + 0x1a9\r\n   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader, String, XmlDeserializationEvents) + 0x2e0\r\n```","Url":"https://github.com/dotnet/corert/issues/7541","RelatedDescription":"Closed issue \"XML DeSerializazion error\" (#7541)"},{"Id":"457614786","IsPullRequest":false,"CreatedAt":"2019-06-19T15:50:46","Actor":"forestbat","Number":"7539","RawContent":null,"Title":"There is a IL2CPP compiler on tap","State":"closed","Body":"The origin maintainer of the compiler has abandoned this project，so I fork it and made some small changes。\r\nIt's dependency is still .NET Framework and its built-in clang and llvm-linker should be updated to 8.0.\r\nPlease see this and hope your reply。\r\nhttps://github.com/forestbat/il2cpp","Url":"https://github.com/dotnet/corert/issues/7539","RelatedDescription":"Closed issue \"There is a IL2CPP compiler on tap\" (#7539)"},{"Id":"457362196","IsPullRequest":false,"CreatedAt":"2019-06-19T11:37:53","Actor":"hhblaze","Number":"7537","RawContent":null,"Title":"\"Hello World\" compilation fails: Ubuntu 19.04 Clang-6.0 .NetCore 2.2.204","State":"closed","Body":"```\r\nosboxes@osboxes:~/Documents/HelloWorld$ export CppCompilerAndLinker=clang-6.0\r\nosboxes@osboxes:~/Documents/HelloWorld$ dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 123.17 ms for /home/osboxes/Documents/HelloWorld/HelloWorld.csproj.\r\n  HelloWorld -> /home/osboxes/Documents/HelloWorld/bin/release/netcoreapp2.2/linux-x64/HelloWorld.dll\r\n  /usr/bin/clang-6.0\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/osboxes/Documents/HelloWorld/HelloWorld.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/osboxes/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/build/Microsoft.NETCore.Native.targets(248,5): error MSB3073: The command \"\"/home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/ilc\" @\"obj/release/netcoreapp2.2/linux-x64/native/HelloWorld.ilc.rsp\"\" exited with code 1. [/home/osboxes/Documents/HelloWorld/HelloWorld.csproj]\r\n\r\nosboxes@osboxes:~/Documents/HelloWorld$ uname -a\r\nLinux osboxes 5.0.0-13-generic #14-Ubuntu SMP Mon Apr 15 14:59:14 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nldd /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/objwriter.so\r\nldd: /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/objwriter.so: No such file or directory\r\n\r\nosboxes@osboxes:~/Documents/HelloWorld$ ls /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools\r\ncreatedump\r\nilc\r\nilc.deps.json\r\nilc.dll\r\nILCompiler.Compiler.dll\r\nILCompiler.CppCodeGen.dll\r\nILCompiler.DependencyAnalysisFramework.dll\r\nILCompiler.MetadataTransform.dll\r\nILCompiler.MetadataWriter.dll\r\nILCompiler.ReadyToRun.dll\r\nILCompiler.RyuJit.dll\r\nILCompiler.TypeSystem.dll\r\nILCompiler.WebAssembly.dll\r\nilc.runtimeconfig.json\r\njitinterface.so\r\nlibclrjitilc.so\r\nlibclrjit.so\r\nlibcoreclr.so\r\nlibcoreclrtraceptprovider.so\r\nlibdbgshim.so\r\nlibhostfxr.so\r\nlibhostpolicy.so\r\nlibLLVM.so\r\nlibmscordaccore.so\r\nlibmscordbi.so\r\nlibobjwriter.so\r\nlibsosplugin.so\r\nlibsos.so\r\nLLVMSharp.dll\r\nMicrosoft.CSharp.dll\r\nMicrosoft.DiaSymReader.dll\r\nMicrosoft.VisualBasic.dll\r\nMicrosoft.Win32.Primitives.dll\r\nMicrosoft.Win32.Registry.dll\r\nmscorlib.dll\r\nnetstandard.dll\r\nsosdocsunix.txt\r\nSOS.NETCore.dll\r\nSystem.AppContext.dll\r\nSystem.Buffers.dll\r\nSystem.Collections.Concurrent.dll\r\nSystem.Collections.dll\r\nSystem.Collections.Immutable.dll\r\nSystem.Collections.NonGeneric.dll\r\nSystem.Collections.Specialized.dll\r\nSystem.CommandLine.dll\r\nSystem.ComponentModel.Annotations.dll\r\nSystem.ComponentModel.DataAnnotations.dll\r\nSystem.ComponentModel.dll\r\nSystem.ComponentModel.EventBasedAsync.dll\r\nSystem.ComponentModel.Primitives.dll\r\nSystem.ComponentModel.TypeConverter.dll\r\nSystem.Configuration.dll\r\nSystem.Console.dll\r\nSystem.Core.dll\r\nSystem.Data.Common.dll\r\nSystem.Data.dll\r\nSystem.Diagnostics.Contracts.dll\r\nSystem.Diagnostics.Debug.dll\r\nSystem.Diagnostics.DiagnosticSource.dll\r\nSystem.Diagnostics.FileVersionInfo.dll\r\nSystem.Diagnostics.Process.dll\r\nSystem.Diagnostics.StackTrace.dll\r\nSystem.Diagnostics.TextWriterTraceListener.dll\r\nSystem.Diagnostics.Tools.dll\r\nSystem.Diagnostics.TraceSource.dll\r\nSystem.Diagnostics.Tracing.dll\r\nSystem.dll\r\nSystem.Drawing.dll\r\nSystem.Drawing.Primitives.dll\r\nSystem.Dynamic.Runtime.dll\r\nSystem.Globalization.Calendars.dll\r\nSystem.Globalization.dll\r\nSystem.Globalization.Extensions.dll\r\nSystem.Globalization.Native.so\r\nSystem.IO.Compression.Brotli.dll\r\nSystem.IO.Compression.dll\r\nSystem.IO.Compression.FileSystem.dll\r\nSystem.IO.Compression.Native.a\r\nSystem.IO.Compression.Native.so\r\nSystem.IO.Compression.ZipFile.dll\r\nSystem.IO.dll\r\nSystem.IO.FileSystem.AccessControl.dll\r\nSystem.IO.FileSystem.dll\r\nSystem.IO.FileSystem.DriveInfo.dll\r\nSystem.IO.FileSystem.Primitives.dll\r\nSystem.IO.FileSystem.Watcher.dll\r\nSystem.IO.IsolatedStorage.dll\r\nSystem.IO.MemoryMappedFiles.dll\r\nSystem.IO.Pipes.AccessControl.dll\r\nSystem.IO.Pipes.dll\r\nSystem.IO.UnmanagedMemoryStream.dll\r\nSystem.Linq.dll\r\nSystem.Linq.Expressions.dll\r\nSystem.Linq.Parallel.dll\r\nSystem.Linq.Queryable.dll\r\nSystem.Memory.dll\r\nSystem.Native.a\r\nSystem.Native.so\r\nSystem.Net.dll\r\nSystem.Net.Http.dll\r\nSystem.Net.HttpListener.dll\r\nSystem.Net.Http.Native.a\r\nSystem.Net.Http.Native.so\r\nSystem.Net.Mail.dll\r\nSystem.Net.NameResolution.dll\r\nSystem.Net.NetworkInformation.dll\r\nSystem.Net.Ping.dll\r\nSystem.Net.Primitives.dll\r\nSystem.Net.Requests.dll\r\nSystem.Net.Security.dll\r\nSystem.Net.Security.Native.a\r\nSystem.Net.Security.Native.so\r\nSystem.Net.ServicePoint.dll\r\nSystem.Net.Sockets.dll\r\nSystem.Net.WebClient.dll\r\nSystem.Net.WebHeaderCollection.dll\r\nSystem.Net.WebProxy.dll\r\nSystem.Net.WebSockets.Client.dll\r\nSystem.Net.WebSockets.dll\r\nSystem.Numerics.dll\r\nSystem.Numerics.Vectors.dll\r\nSystem.ObjectModel.dll\r\nSystem.Private.CoreLib.dll\r\nSystem.Private.DataContractSerialization.dll\r\nSystem.Private.Uri.dll\r\nSystem.Private.Xml.dll\r\nSystem.Private.Xml.Linq.dll\r\nSystem.Reflection.DispatchProxy.dll\r\nSystem.Reflection.dll\r\nSystem.Reflection.Emit.dll\r\nSystem.Reflection.Emit.ILGeneration.dll\r\nSystem.Reflection.Emit.Lightweight.dll\r\nSystem.Reflection.Extensions.dll\r\nSystem.Reflection.Metadata.dll\r\nSystem.Reflection.Primitives.dll\r\nSystem.Reflection.TypeExtensions.dll\r\nSystem.Resources.Reader.dll\r\nSystem.Resources.ResourceManager.dll\r\nSystem.Resources.Writer.dll\r\nSystem.Runtime.CompilerServices.Unsafe.dll\r\nSystem.Runtime.CompilerServices.VisualC.dll\r\nSystem.Runtime.dll\r\nSystem.Runtime.Extensions.dll\r\nSystem.Runtime.Handles.dll\r\nSystem.Runtime.InteropServices.dll\r\nSystem.Runtime.InteropServices.RuntimeInformation.dll\r\nSystem.Runtime.InteropServices.WindowsRuntime.dll\r\nSystem.Runtime.Loader.dll\r\nSystem.Runtime.Numerics.dll\r\nSystem.Runtime.Serialization.dll\r\nSystem.Runtime.Serialization.Formatters.dll\r\nSystem.Runtime.Serialization.Json.dll\r\nSystem.Runtime.Serialization.Primitives.dll\r\nSystem.Runtime.Serialization.Xml.dll\r\nSystem.Security.AccessControl.dll\r\nSystem.Security.Claims.dll\r\nSystem.Security.Cryptography.Algorithms.dll\r\nSystem.Security.Cryptography.Cng.dll\r\nSystem.Security.Cryptography.Csp.dll\r\nSystem.Security.Cryptography.Encoding.dll\r\nSystem.Security.Cryptography.Native.OpenSsl.a\r\nSystem.Security.Cryptography.Native.OpenSsl.so\r\nSystem.Security.Cryptography.OpenSsl.dll\r\nSystem.Security.Cryptography.Primitives.dll\r\nSystem.Security.Cryptography.X509Certificates.dll\r\nSystem.Security.dll\r\nSystem.Security.Principal.dll\r\nSystem.Security.Principal.Windows.dll\r\nSystem.Security.SecureString.dll\r\nSystem.ServiceModel.Web.dll\r\nSystem.ServiceProcess.dll\r\nSystem.Text.Encoding.dll\r\nSystem.Text.Encoding.Extensions.dll\r\nSystem.Text.RegularExpressions.dll\r\nSystem.Threading.dll\r\nSystem.Threading.Overlapped.dll\r\nSystem.Threading.Tasks.Dataflow.dll\r\nSystem.Threading.Tasks.dll\r\nSystem.Threading.Tasks.Extensions.dll\r\nSystem.Threading.Tasks.Parallel.dll\r\nSystem.Threading.Thread.dll\r\nSystem.Threading.ThreadPool.dll\r\nSystem.Threading.Timer.dll\r\nSystem.Transactions.dll\r\nSystem.Transactions.Local.dll\r\nSystem.ValueTuple.dll\r\nSystem.Web.dll\r\nSystem.Web.HttpUtility.dll\r\nSystem.Windows.dll\r\nSystem.Xml.dll\r\nSystem.Xml.Linq.dll\r\nSystem.Xml.ReaderWriter.dll\r\nSystem.Xml.Serialization.dll\r\nSystem.Xml.XDocument.dll\r\nSystem.Xml.XmlDocument.dll\r\nSystem.Xml.XmlSerializer.dll\r\nSystem.Xml.XPath.dll\r\nSystem.Xml.XPath.XDocument.dll\r\nWindowsBase.dll\r\n\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7537","RelatedDescription":"Closed issue \"\"Hello World\" compilation fails: Ubuntu 19.04 Clang-6.0 .NetCore 2.2.204\" (#7537)"},{"Id":"457733189","IsPullRequest":true,"CreatedAt":"2019-06-19T00:16:53","Actor":"jkotas","Number":"7540","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7540","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7540)"},{"Id":"457279660","IsPullRequest":true,"CreatedAt":"2019-06-18T21:27:44","Actor":"jkotas","Number":"7536","RawContent":null,"Title":"Ensure ObjectWriter package does not get used on ObjWriterBuild mode","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7536","RelatedDescription":"Closed or merged PR \"Ensure ObjectWriter package does not get used on ObjWriterBuild mode\" (#7536)"},{"Id":"457470464","IsPullRequest":false,"CreatedAt":"2019-06-18T13:35:21","Actor":"hhblaze","Number":"7538","RawContent":null,"Title":"Win10, NetCore 2.2, simple \"HelloWorld\" with Google.Cloud.Datastore.V1 dependency fails to compile (with Firestore all is good)","State":"closed","Body":"Content of HelloWorld.csproj\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Google.Cloud.Datastore.V1\" Version=\"2.1.0\" />\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nCompilation output\r\n\r\n```\r\nH:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld>dotnet publish -r win-x64 -c release\r\nMicrosoft (R) Build Engine 16.1.76+g14b0a930a7 для .NET Core\r\n(C) (Microsoft Corporation). \r\n\r\n  Restore completed в 1,7 sec для H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj.\r\n  HelloWorld -> H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\bin\\release\\netcoreapp2.2\\win-x64\\HelloWorld.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : Method `[System.Interactive.Async]System.Linq.AsyncEnumerable+CatchAsyncIterator`2+<MoveNextCore>d__7<System.__Canon,System.__Canon>.MoveNext()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramDefault: [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\n\r\nHelloWorld.obj : error LNK2001: unresolved external symbol dlopen [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nHelloWorld.obj : error LNK2001: unresolved external symbol dlsym [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nbin\\release\\netcoreapp2.2\\win-x64\\native\\HelloWorld.exe : fatal error LNK1120: 2 unresolved externals [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nC:\\Users\\blaze\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27818-01\\build\\Microsoft.NETCore.Native.targets(342,5): error MSB3073: comand output \"\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64\\link.exe\"  @\"obj\\release\\netcoreapp2.2\\win-x64\\native\\link.rsp\"\" wit code 1120. [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/7538","RelatedDescription":"Closed issue \"Win10, NetCore 2.2, simple \"HelloWorld\" with Google.Cloud.Datastore.V1 dependency fails to compile (with Firestore all is good)\" (#7538)"},{"Id":"457178956","IsPullRequest":true,"CreatedAt":"2019-06-18T00:18:01","Actor":"Dotnet-GitSync-Bot","Number":"7535","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @jkotas @tarekgh @sywhang @marek-safar @adamsitnik @benaadams @ViktorHofer","Url":"https://github.com/dotnet/corert/pull/7535","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7535)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"461375402","IsPullRequest":true,"CreatedAt":"2019-06-28T01:25:44","Actor":"dsplaisted","Number":"3359","RawContent":null,"Title":"Require manifests in runtime and targeting packs","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3359","RelatedDescription":"Closed or merged PR \"Require manifests in runtime and targeting packs\" (#3359)"},{"Id":"461489674","IsPullRequest":true,"CreatedAt":"2019-06-27T18:49:34","Actor":"dotnet-maestro[bot]","Number":"3360","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3360","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3360)"},{"Id":"461682812","IsPullRequest":false,"CreatedAt":"2019-06-27T18:25:33","Actor":"heng-liu","Number":"3367","RawContent":null,"Title":"\"dotnet publish\" failed when GeneratePackageOnBuild is true (version 3.0.100-preview6-012264)","State":"open","Body":"Running \"dotnet publish\" on a console projects failed when GeneratePackageOnBuild is true.\r\ndotnet --version                                                                                                                                                                                                                                                                                          3.0.100-preview6-012264\r\nIt seems Microsoft.NET.Publish.targets skips build when  GeneratePackageOnBuild is true.\r\n\r\n**Steps to reproduce:**\r\n1.install .NETCore SDK 3.0.100-preview6-012264\r\n2.run \"dotnet new console\" to create a project A\r\n3.add \"`<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`\" in A.csproj PropertyGroup and save.\r\n4.run \"dotnet publish A.csproj\"\r\n\r\n**Expected behavior:**\r\nPublish successfully.\r\n**Actual behavior:**\r\nFailed with following error messages:\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp3.0\\A.dll\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\bin\\Debug\\netcoreapp3.0\\A.deps.json\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp3.0\\A.pdb\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\bin\\Debug\\netcoreapp3.0\\A.runtimeconfig.json\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\obj\\Debug\\netcoreapp3.0\\A.exe\" because it was not found. [C:\\repos\\A\\A.csproj]","Url":"https://github.com/dotnet/sdk/issues/3367","RelatedDescription":"Open issue \"\"dotnet publish\" failed when GeneratePackageOnBuild is true (version 3.0.100-preview6-012264)\" (#3367)"},{"Id":"461681875","IsPullRequest":false,"CreatedAt":"2019-06-27T18:23:37","Actor":"terrajobst","Number":"3366","RawContent":null,"Title":"Preview 7 still requires a private feed","State":"open","Body":"In tactics @livarcocc said that Preview 7 shouldn't require a private feed. However, you can't build `xunit` right now:\r\n\r\n> $ dotnet new xunit -o xunit30\r\n> The template \"xUnit Test Project\" was created successfully.\r\n> \r\n> Processing post-creation actions...\r\n> Running 'dotnet restore' on xunit30\\xunit30.csproj...\r\n> T:\\xunit30\\xunit30.csproj : error NU1102: Unable to find package Microsoft.NETCore.App with version (>= 3.0.0-preview7-27826-04)\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 70 version(s) in nuget.org [ Nearest version: 3.0.0-preview6-27804-01 ]\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 0 version(s) in dotnet.myget.org roslyn\r\n> Restore failed in 952.45 ms for T:\\xunit30\\xunit30.csproj.\r\n> \r\n> Restore failed.\r\n> Post action failed.\r\n> Description: Restore NuGet packages required by this project.\r\n> Manual instructions: Run 'dotnet restore'\r\n\r\nThat seems like a bug, right?\r\n\r\nNote, these templates work:\r\n\r\n* Restore completed in 32.51 ms for T:\\netcore3\\console\\console.csproj.\r\n* Restore completed in 40.65 ms for T:\\netcore3\\classlib\\classlib.csproj.\r\n* Restore completed in 32.51 ms for T:\\netcore3\\winforms\\winforms.csproj.\r\n* Restore completed in 32.48 ms for T:\\netcore3\\wpf\\wpf.csproj.\r\n* Restore completed in 32.49 ms for T:\\netcore3\\mvc\\mvc.csproj.\r\n\r\n<details>\r\n<summary>dotnet --info</summary>\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012650\r\n Commit:    b959696aad\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18912\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012650\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-04\r\n  Commit:  5c4d829254\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012650 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19326.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</details>","Url":"https://github.com/dotnet/sdk/issues/3366","RelatedDescription":"Open issue \"Preview 7 still requires a private feed\" (#3366)"},{"Id":"461680983","IsPullRequest":false,"CreatedAt":"2019-06-27T18:21:55","Actor":"pranavkm","Number":"3365","RawContent":null,"Title":"Dotnet publish for project with P2P references fails when GeneratePackageOnBuild is true","State":"open","Body":"Based on https://github.com/aspnet/AspNetCore/issues/11636.\r\n\r\nhttps://github.com/dotnet/sdk/pull/3255 causes publish to fail when a project has project references. Treating `NoBuild` and `GeneratePackageOnBuild` as equivalent causes project references to [stop building](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L74-L78).\r\n\r\nRepro steps:\r\n\r\n* Clone https://github.com/pranavkm/repro/tree/publish-p2p/\r\n* Call `dotnet publish` on mvcapp\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3365","RelatedDescription":"Open issue \"Dotnet publish for project with P2P references fails when GeneratePackageOnBuild is true\" (#3365)"},{"Id":"461651868","IsPullRequest":false,"CreatedAt":"2019-06-27T17:19:02","Actor":"fadimounir","Number":"3364","RawContent":null,"Title":"Block R2R compilation for library projects","State":"open","Body":"Publish on library is a strange case already and trips people up a lot.\r\n\r\nIt could also be a source of problems if some lib developer publishes R2R for a certain platform/arch, and another app developer uses that lib on a different target","Url":"https://github.com/dotnet/sdk/issues/3364","RelatedDescription":"Open issue \"Block R2R compilation for library projects\" (#3364)"},{"Id":"461646733","IsPullRequest":true,"CreatedAt":"2019-06-27T17:07:51","Actor":"dotnet-bot","Number":"3363","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3363","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3363)"},{"Id":"461617180","IsPullRequest":false,"CreatedAt":"2019-06-27T16:04:24","Actor":"ericstj","Number":"3362","RawContent":null,"Title":"Conflict resolution broken for self-contained APP when packages have same version as shared framework","State":"open","Body":"The hardcoded list here is now broken:\r\nhttps://github.com/dotnet/sdk/blob/ec0d2190853afd6c6a8a410d7dc386a9f1ca391b/src/Tasks/Microsoft.NET.Build.Tasks/ResolveTargetingPackAssets.cs#L133-L135\r\n\r\nThis causes bad behavior from conflict resolution:\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.win32.registry\\4.6.0-preview7.19326.1\\runtimes\\win\\lib\\netstandard2.0\\Microsoft.Win32.Registry.dll' and 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll'. Choosing 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll' arbitrarily as both items are copy-local and have equal file and assembly versions.\r\n```\r\n\r\nHappening because the items now have the runtime pack package ID:\r\n```\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll\r\n    AssetType = runtime\r\n    CopyLocal = true\r\n    DestinationSubPath = Microsoft.Win32.Registry.dll\r\n    IsTrimmable = true\r\n    PackageName = Microsoft.NETCore.App.Runtime.win-x64\r\n    PackageVersion = 3.0.0-preview7-27826-01\r\n    RuntimeIdentifier = win-x64\r\n```\r\n\r\nBut the preferred packages refer to the old runtime nuget packages, due to that hardcoded list.\r\n\r\nWe cannot ship like this.  Please remove the hardcoding and compute this from the list of RIDs supported by the REFPack.  I couldn't find where this list of RIDs is stored... hopefully that isn't hardcoded too.\r\n\r\nI noticed https://github.com/dotnet/cli/issues/10581 mentions one way that this might be addressed, but I'm not convinced it handles this scenario.\r\n\r\nRepro project:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeFrameworkVersion>3.0.0-preview7-27826-01</RuntimeFrameworkVersion>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <!-- SDK doesn't honor RuntimeFrameworkVersion for targeting pack-->\r\n    <KnownFrameworkReference Update=\"Microsoft.NETCore.App\" TargetingPackVersion=\"$(RuntimeFrameworkVersion)\" />\r\n\r\n    <!-- Temporary till SDK supports transitive framework references. -->\r\n    <KnownFrameworkReference Remove=\"Microsoft.AspNetCore.App\" />\r\n    <KnownFrameworkReference Remove=\"Microsoft.WindowsDesktop.App\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Win32.Registry\" Version=\"4.6.0-preview7.19326.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRestore and build it to observe the issue.\r\n","Url":"https://github.com/dotnet/sdk/issues/3362","RelatedDescription":"Open issue \"Conflict resolution broken for self-contained APP when packages have same version as shared framework\" (#3362)"},{"Id":"461567502","IsPullRequest":false,"CreatedAt":"2019-06-27T14:36:05","Actor":"vitek-karas","Number":"3361","RawContent":null,"Title":"Self-contained apps should include RID fallback graph in .deps.json","State":"open","Body":"With the introduction of `AssemblyDependencyResolver` in 3.0 we're making it relatively easy to dynamically load components with their entire dependency trees. Such components can be portable in the sense that they include RID specific assets (for example different asset for Windows and Linux).\r\n\r\nIn order to correctly resolve dependencies of such component, the `AssemblyDependencyResolver` must have a RID fallback graph to follow (so that when we're running on `win10-x64`, we know that we should also look for assets which are `win-x64` or even `win`). The component itself should not carry the RID fallback graph with it (it would need to have the graph of all the RIDs there are and it would need to be updated with every addition).\r\n\r\nJust like framework dependent apps which rely on the framework to provide the RID fallback graph, the component should rely on the host app to provide the RID fallback graph.\r\n\r\nSo if the host app is a framework dependent app, the RID fallback graph comes from the core framework `Microsoft.NETCore.App`. In this case everything works fine.\r\n\r\nIf the host app is a self-contained app, it in itself it doesn't need a RID fallback graph since it's been built/published for one specific RID and thus it only carries assets which are necessary for that RID. But if a portable component is about to be loaded into such app, the RID fallback graph is necessary.\r\n\r\nThe proposal is to modify the SDK to include the RID fallback graph in self-contained app's `.deps.json`. It should be the graph filtered by the RID the app is targeting (just like what we do for the shared framework).\r\n\r\nThe problem is also discussed in https://github.com/dotnet/core-setup/issues/6960","Url":"https://github.com/dotnet/sdk/issues/3361","RelatedDescription":"Open issue \"Self-contained apps should include RID fallback graph in .deps.json\" (#3361)"},{"Id":"458409021","IsPullRequest":true,"CreatedAt":"2019-06-27T13:43:32","Actor":"v-zbsail","Number":"3346","RawContent":null,"Title":"LOC CHECKIN | dotnet/sdk release/3.0.1xx | 20190620","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3346","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/sdk release/3.0.1xx | 20190620\" (#3346)"},{"Id":"461190450","IsPullRequest":true,"CreatedAt":"2019-06-27T03:45:22","Actor":"johnbeisner","Number":"3358","RawContent":null,"Title":"Update the stage0 SDK version","State":"closed","Body":"Update the stage0 SDK version","Url":"https://github.com/dotnet/sdk/pull/3358","RelatedDescription":"Closed or merged PR \"Update the stage0 SDK version\" (#3358)"},{"Id":"461189443","IsPullRequest":true,"CreatedAt":"2019-06-27T03:02:05","Actor":"wli3","Number":"3357","RawContent":null,"Title":"Remove experiment on collecting UseWPF and UseWinform","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3357","RelatedDescription":"Closed or merged PR \"Remove experiment on collecting UseWPF and UseWinform\" (#3357)"},{"Id":"460561752","IsPullRequest":true,"CreatedAt":"2019-06-26T17:39:54","Actor":"nguerrera","Number":"3353","RawContent":null,"Title":"Retarget from netcoreapp2.0 to netcoreapp2.1 for source-build","State":"closed","Body":"Fix #3317 \r\n","Url":"https://github.com/dotnet/sdk/pull/3353","RelatedDescription":"Closed or merged PR \"Retarget from netcoreapp2.0 to netcoreapp2.1 for source-build\" (#3353)"},{"Id":"460930778","IsPullRequest":true,"CreatedAt":"2019-06-26T13:50:24","Actor":"dotnet-maestro[bot]","Number":"3356","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 8:36 AM\r\n- **Commit**: 4b3d46cc75969c4e2de5786ec2b10a430b26dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19326.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3356","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3356)"},{"Id":"460676784","IsPullRequest":true,"CreatedAt":"2019-06-25T22:37:30","Actor":"dsplaisted","Number":"3355","RawContent":null,"Title":"Provide ResolvedFrameworkReferences for VS to populate Solution Explorer","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3355","RelatedDescription":"Open PR \"Provide ResolvedFrameworkReferences for VS to populate Solution Explorer\" (#3355)"},{"Id":"460663845","IsPullRequest":false,"CreatedAt":"2019-06-25T22:17:47","Actor":"heng-liu","Number":"3354","RawContent":null,"Title":"msbuild /t:build failed with \" error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\" , but dotnet build succeed.","State":"closed","Body":"When I install SDK 3.0.100-preview6-012264, the msbuild /t:build starts to fail for: \r\nerror NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized.\r\nBut the dotnet build is successful. \r\nWhen I uninstall SDK 3.0.100-preview6-012264 and used SDK 3.0.100-preview5-011568 instead, there is no error and build is successful. (also changed global.json file accordingly)\r\nI already updated the VS to latest preview3 and the msbuild version is 16.200.19.31001 in advance.\r\n\r\nSo here is the matrix:\r\n                              SDK 3.0.100-preview6-012264   SDK 3.0.100-preview5-011568\r\nmsbuild /t:build      failed                                            successful\r\ndotnet build            successful                                    successful\r\n\r\n**Steps to reproduce:**\r\n1. go to NuGet.Client repos and checkout branch dev-hengliu-addNetStandard2.1ForPackaging\r\nhttps://github.com/NuGet/NuGet.Client/tree/dev-hengliu-addNetStandard2.1ForPackaging\r\n2. install SDK 3.0.100-preview6-012264 and make sure msbuild(VS) version is the latest.\r\n3. go to the local repos contains the code from step1(open NuGet.Client folder), run following command in developer command prompt:\r\nmsbuild /t:build .\\test\\NuGet.Core.Tests\\NuGet.LibraryModel.Tests\\NuGet.LibraryModel.Tests.csproj\r\n\r\nNote: if you want to test preview5, you need to change the version in .\\test\\global.json first.\r\n\r\n**Expected behavior:**\r\nBuild successfully.\r\n**Actual behavior:**\r\nBuild failed for : error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized ","Url":"https://github.com/dotnet/sdk/issues/3354","RelatedDescription":"Closed issue \"msbuild /t:build failed with \" error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\" , but dotnet build succeed.\" (#3354)"},{"Id":"459399549","IsPullRequest":true,"CreatedAt":"2019-06-25T18:13:14","Actor":"dsplaisted","Number":"3348","RawContent":null,"Title":"Unify more build and publish logic","State":"closed","Body":"Implement some of the unification in #3311, but without changing the product behavior.\r\n\r\nDetermines which assets should be copied local for both build and publish in the `ResolvePackageAssets` task.","Url":"https://github.com/dotnet/sdk/pull/3348","RelatedDescription":"Closed or merged PR \"Unify more build and publish logic\" (#3348)"},{"Id":"459399758","IsPullRequest":true,"CreatedAt":"2019-06-25T03:02:28","Actor":"wli3","Number":"3349","RawContent":null,"Title":"Upload to PerfCommand","State":"closed","Body":"Instead of benchview. And changed the format of the result.\r\nUse a csproj and dotnet run in Helix to do convert and uploading instead of python scripts","Url":"https://github.com/dotnet/sdk/pull/3349","RelatedDescription":"Closed or merged PR \"Upload to PerfCommand\" (#3349)"},{"Id":"460148296","IsPullRequest":false,"CreatedAt":"2019-06-25T00:08:55","Actor":"cbiesinger","Number":"3352","RawContent":null,"Title":"Allow building without internet connection when only using builtin modules","State":"open","Body":"I am in a situation where I would like to build some C# source code on a build machine that can install .deb packages but does not otherwise allow internet connections. I am only using builtin modules.\r\n\r\nHowever, it seems that the dotnet SDK insists on downloading at least the linux-x64 runtime *even* when not compiling a standalone app.\r\n\r\nWould it be possible to change the SDK to make it possible to compile non-standalone apps without needing to download anything?","Url":"https://github.com/dotnet/sdk/issues/3352","RelatedDescription":"Open issue \"Allow building without internet connection when only using builtin modules\" (#3352)"},{"Id":"460131005","IsPullRequest":false,"CreatedAt":"2019-06-24T22:54:41","Actor":"wli3","Number":"3351","RawContent":null,"Title":"flaky test \"It_stores_when_targeting_netcoreapp3\"","State":"open","Body":"The test is checked in 5 month ago. But it started to become flaky recently\r\n\r\n![image](https://user-images.githubusercontent.com/6993335/60057121-3d59c700-9698-11e9-936e-9496acccd461.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3351","RelatedDescription":"Open issue \"flaky test \"It_stores_when_targeting_netcoreapp3\"\" (#3351)"},{"Id":"458918161","IsPullRequest":true,"CreatedAt":"2019-06-24T22:09:59","Actor":"fadimounir","Number":"3347","RawContent":null,"Title":"Silence R2R compiler warnings by default","State":"closed","Body":"They can be re-enabled by setting `PublishReadyToRunShowWarnings` to true.\r\nIf warnings are detected when the property is not set, a single message will be displayed to inform of the presence of warnings.","Url":"https://github.com/dotnet/sdk/pull/3347","RelatedDescription":"Closed or merged PR \"Silence R2R compiler warnings by default\" (#3347)"},{"Id":"460071309","IsPullRequest":true,"CreatedAt":"2019-06-24T20:46:01","Actor":"wli3","Number":"3350","RawContent":null,"Title":"WIP no merge debug CI","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3350","RelatedDescription":"Closed or merged PR \"WIP no merge debug CI\" (#3350)"},{"Id":"458091414","IsPullRequest":true,"CreatedAt":"2019-06-21T17:11:48","Actor":"rainersigwald","Number":"3342","RawContent":null,"Title":"Use preserialized resources to target Core 3","State":"closed","Body":"Opts into the new System.Resources.Extensions approach to resource\r\nserialization when targeting .NET Core 3.0+/.NET Standard 2.1+.\r\n\r\nRespects project setting if the project explicitly sets the property, to\r\nallow opting .NET Framework-targeting applications to opt in.\r\n\r\nThis is my stake-in-the ground proposal: light this up automatically for the folks who definitely need it. Happy to have discussion about other times when we should set this.\r\n\r\nImportant factors include:\r\n* TF of the project, including whether that TF has S.R.Extensions guaranteed\r\n* runtime of the building MSBuild (Core MSBuild can't support the legacy approach needed for targeting full without adding the S.R.Extensions reference to the project)\r\n\r\n@nguerrera @livarcocc @ericstj @merriemcgaw @dreddy-work\r\n\r\n(this property does nothing but is harmless until it runs in conjunction with https://github.com/microsoft/msbuild/pull/4420; posting this now to review in parallel)","Url":"https://github.com/dotnet/sdk/pull/3342","RelatedDescription":"Closed or merged PR \"Use preserialized resources to target Core 3\" (#3342)"},{"Id":"458276977","IsPullRequest":true,"CreatedAt":"2019-06-20T23:13:07","Actor":"wli3","Number":"3343","RawContent":null,"Title":"add wpf and winform large perf tests","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3343","RelatedDescription":"Closed or merged PR \"add wpf and winform large perf tests\" (#3343)"},{"Id":"458294573","IsPullRequest":true,"CreatedAt":"2019-06-20T22:25:50","Actor":"nguerrera","Number":"3345","RawContent":null,"Title":"Fix dotnet store for netcoreapp3.0","State":"closed","Body":"Also fix msbuild batching error that caused O(N^2) redundant work, and flakiness due to race conditions between the redundant workers.\r\n\r\nAnd replace ContinueOnError=WarnAndContinue with just ignoring standard error format on exec of crossgen. crossgen prior to 3.0 is notorious for spewing noise and the only thing that is reliable is the exit code. The previous approach around it was way too big of a hammer.\r\n\r\nThis is the \"minimal fix\" for 3.0. I am still working on a major re-design and simplification of dotnet store, but that will not likely be ready for 3.0 preview 7 and we want to have these issues fixed before then.\r\n\r\nIt is also not clear yet if we would be able to use the simplified design for all TFMs or only on netcoreapp3.0. That is because the crux of the re-design is to use the new PublishReadyToRun code as the foundation.","Url":"https://github.com/dotnet/sdk/pull/3345","RelatedDescription":"Closed or merged PR \"Fix dotnet store for netcoreapp3.0\" (#3345)"},{"Id":"458283215","IsPullRequest":true,"CreatedAt":"2019-06-20T03:28:03","Actor":"nguerrera","Number":"3344","RawContent":null,"Title":"Fix crash in case of fallback from package cache to memory","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3344","RelatedDescription":"Closed or merged PR \"Fix crash in case of fallback from package cache to memory\" (#3344)"},{"Id":"457991662","IsPullRequest":false,"CreatedAt":"2019-06-19T12:44:05","Actor":"onovotny","Number":"3341","RawContent":null,"Title":"Incorrect warning about WindowsDesktop SDK","State":"open","Body":"I have a project that has some libraries/exe that use WPF and some that don't. The ones that do use the WindowsDesktop SDK. The ones that don't use the default SDK to prevent accidental WPF references.\r\n\r\nI have a directory.build.props file that sets `UseWPF` to `true` so that I don't need them in all places.\r\n\r\nIn Preview 7, I now get this warning:\r\n\r\n```\r\n1>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012503\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.DefaultItems.targets(340,5): warning NETSDK1107: Microsoft.NET.Sdk.WindowsDesktop is required to build Windows desktop applications. 'UseWpf' and 'UseWindowsForms' are not supported by the current SDK.\r\n```\r\n\r\nThat's coming from `Microsoft.NET.Sdk.DefaultItems.targets`. The check is being too aggressive.","Url":"https://github.com/dotnet/sdk/issues/3341","RelatedDescription":"Open issue \"Incorrect warning about WindowsDesktop SDK\" (#3341)"},{"Id":"457688407","IsPullRequest":true,"CreatedAt":"2019-06-19T04:40:21","Actor":"nguerrera","Number":"3340","RawContent":null,"Title":"Fix small build issues","State":"closed","Body":"Three separate small issues in three commits:\r\n\r\n\r\n1. Fix incremental build in VS when only target files change. This had been driving me crazy causing tests to run without my targets changes. Fixed the other two while I was playing around nearby.\r\n\r\n2. Remove outdated workaround\r\n\r\n3. Auto-bump version of task assemblies. Fix #2953. Follows [Arcade recommendation](https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/Versioning.md#recommanded-settings). ","Url":"https://github.com/dotnet/sdk/pull/3340","RelatedDescription":"Closed or merged PR \"Fix small build issues\" (#3340)"},{"Id":"457564494","IsPullRequest":false,"CreatedAt":"2019-06-18T17:34:22","Actor":"lzganec","Number":"3338","RawContent":null,"Title":"SatelliteResourceLanguages property doesn't filter all resources when publishing test projects","State":"closed","Body":"Having a dependency to Microsoft.CodeCoverage (which comes from Microsoft.NET.Test.Sdk) leaves Microsoft.VisualStudio.TraceDataCollector.resources.dll localized resource satellite assembly in the publish output using .NET Core version 2.2.","Url":"https://github.com/dotnet/sdk/issues/3338","RelatedDescription":"Closed issue \"SatelliteResourceLanguages property doesn't filter all resources when publishing test projects\" (#3338)"},{"Id":"457573123","IsPullRequest":false,"CreatedAt":"2019-06-18T16:12:55","Actor":"vitek-karas","Number":"3339","RawContent":null,"Title":"Add ability to differentiate framework assemblies in self-contained apps","State":"open","Body":"In .NET Core 3.0 we're introducing `AssemblyDependencyResolver` which is a managed API to basically parse and process a `.deps.json` for a component (think plugin). The API uses existing algorithms in `hostpolicy` which are executed during application startup to process the `.deps.json` for the app.\r\n\r\nApps are allowed to contain assemblies which are also part of a framework which the app relies on. As an example app which relies on ASP.NET framework can also have a package reference for `System.Threading.Channels` (assembly which is part of the ASP.NET framework). The current behavior is:\r\n* For self-contained apps, the SDK will pick the higher version of the two and copy it into the app (so if the package reference is higher it overwrites the one in the framework, otherwise the one from framework wins).\r\n* For framework-dependent apps, the SDK will make the package assembly part of the app and it will write the assembly and file versions into the `.deps.json`. At runtime `hostpolicy` uses the version information to compare the assembly from the app against the one in the framework and it picks the one with the higher version.\r\n\r\nApplying this logic to dynamically loaded components means that we would want the \"framework dependent\" behavior for components as well (we don't support self-contained components - that sort of doesn't make sense). Note that during component dependency resolution we intentionally ignore the assemblies from the app itself (this is to enable component isolation), but we do want to consider the frameworks (as frameworks are assumed to always be shared between the app and the components).\r\n\r\nIf the component is loaded into a framework dependent app, this is easy to solve as `hostpolicy` will apply the exact same logic and compare assembly and file versions for framework assemblies.\r\n\r\nThe problem is if the component is loaded into a self-contained app, there's no way to tell which assemblies are from a framework and which belong to the app itself. As noted above we want to consider the framework assemblies, but ignore the app assemblies.\r\n\r\nThe ask here is to add some information somewhere such that the dependency resolution could always tell which assemblies are framework assemblies, even in self-contained apps. For the hosting layer, putting this information into `.deps.json` would make a lot of sense, but if it makes sense to put it elsewhere, it might work as well.\r\n\r\nThe problem is also discussed here: https://github.com/dotnet/core-setup/issues/6826\r\n\r\nWe would be OK for this to not be solved in 3.0 as we probably don't have enough time to make the necessary hosting changes to support the new information coming from the SDK.","Url":"https://github.com/dotnet/sdk/issues/3339","RelatedDescription":"Open issue \"Add ability to differentiate framework assemblies in self-contained apps\" (#3339)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1144288349022085120","CreatedAt":"2019-06-27T16:56:16+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":10,"FavoriteCount":1,"RawContent":null},{"Id":"1143896700047646727","CreatedAt":"2019-06-26T15:00:00+00:00","UserScreenname":"dotnet","Text":"Run samples and tutorials using Try .NET global tool \nhttps://t.co/xxmNIK7SVd https://t.co/yhtPGPTKds","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":61,"FavoriteCount":27,"RawContent":null},{"Id":"1143254803008458753","CreatedAt":"2019-06-24T20:29:20+00:00","UserScreenname":"dotnet","Text":"Care about AI &amp; Machine Learning? Check out this interview with @zeeshantweets, who is a developer on #MLNET. https://t.co/NuaAjE4Kod","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":21,"RawContent":null},{"Id":"1143242317358178304","CreatedAt":"2019-06-24T19:39:43+00:00","UserScreenname":"dotnet","Text":"#dotnetconf Call for papers is open! Are you interested in speaking about .NET at our annual, free, virtual event?… https://t.co/q9IU7uUg4d","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":162,"FavoriteCount":101,"RawContent":null},{"Id":"1142109925474107392","CreatedAt":"2019-06-21T16:40:00+00:00","UserScreenname":"dotnet","Text":"We get an update on the Blazor programming model in .NET Core 3 and beyond from @danroth27\nin this episode of On .N… https://t.co/VqA8j8IEcC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":17,"RawContent":null},{"Id":"1142092310009638912","CreatedAt":"2019-06-21T15:30:00+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core\n\nhttps://t.co/Gbt97muw4j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":22,"RawContent":null},{"Id":"1141752346860347394","CreatedAt":"2019-06-20T16:59:06+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1141115444708823040","CreatedAt":"2019-06-18T22:48:17+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":7,"RawContent":null},{"Id":"1141074032273453056","CreatedAt":"2019-06-18T20:03:44+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core https://t.co/modbwJLbCR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":319,"FavoriteCount":156,"RawContent":null}]}},"RunOn":"2019-06-28T05:30:35.6790116Z","RunDurationInMilliseconds":14831}