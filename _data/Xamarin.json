{"Data":{"Blog":{"FeedItems":[{"Title":"Debugging Xamarin Open Source Frameworks: Xamarin.Forms Part 1","PublishedOn":"2018-03-21T18:59:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At some point while working with Xamarin to build awesome mobile apps, you may have received an exception or error notification from the Xamarin framework code, Mono runtime, or Base Class Library...","Href":"https://blog.xamarin.com/debugging-xamarin-forms/","RawContent":null},{"Title":"Creating Cloud-Connected Mobile Apps with Xamarin + Azure","PublishedOn":"2018-03-19T17:56:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In Case You Missed It A few weeks ago, we announced “Your Guide to Azure Services for Apps Built with Xamarin” on the Visual Studio blog to help you identify which cloud-connected services in Azure...","Href":"https://blog.xamarin.com/cloud-connected-apps-xamarin-azure/","RawContent":null},{"Title":"Add Cloud Storage to Xamarin Apps with Azure Blob Storage","PublishedOn":"2018-03-16T18:17:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Cloud Storage has become a must-have feature for mobile apps. It gives developers the ability to store large files in the cloud and securely distribute them to all mobile app users. Moving these large...","Href":"https://blog.xamarin.com/xamarin-plus-azure-blob-cloud-storage/","RawContent":null},{"Title":"Xamarin Joins docs.microsoft.com","PublishedOn":"2018-03-14T17:22:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#8217;re beginning a new chapter in mobile developer documentation: Xamarin docs are now live on docs.microsoft.com/xamarin! Here are a few highlights of the new documentation experience:...","Href":"https://blog.xamarin.com/xamarin-joins-docs-microsoft-com/","RawContent":null},{"Title":"Podcast: Visual Studio 2017 version 15.6, AR with UrhoSharp, and ML with CoreML","PublishedOn":"2018-03-12T18:43:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the fun new features in the Visual Studio 2017 version 15.6 stable release, including macOS environment setup and iOS WiFi...","Href":"https://blog.xamarin.com/podcast-visual-studio-2017-version-15-6-ar-urhosharp-ml-coreml/","RawContent":null},{"Title":"Contributing to Xamarin.iOS and Xamarin.Mac","PublishedOn":"2018-03-08T19:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Two years ago this month, we made some exciting announcements about the future of Xamarin. One of those announcements detailed the open sourcing of the Xamarin.iOS and Xamarin.Mac SDK. Open source is...","Href":"https://blog.xamarin.com/contributing-to-xamarin-ios-xamarin-mac/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Now Available!","PublishedOn":"2018-03-06T20:17:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Our last release, Visual Studio 2017 version 15.5, featured awesome new updates, such as the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android emulators with...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-now-available/","RawContent":null},{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7415551623","Type":"PullRequestEvent","CreatedAt":"2018-03-21T21:07:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1457","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add Locking for processing aapt output.\" (#1457) at xamarin/xamarin-android","RelatedBody":"We got a bug report where Aapt crashes with the following\r\n\r\n\tUnhandled Exception: System.ArgumentOutOfRangeException: capacity was less than the current size.\r\n\tParameter name: value\r\n\t   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\r\n\t   at System.Collections.Generic.List`1.set_Capacity(Int32 value)\r\n\t   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)\r\n\t   at System.Collections.Generic.List`1.Add(T item)\r\n\t   at Xamarin.Android.Tasks.Aapt.<>c__DisplayClass134_0.<RunAapt>b__0(Object sender, DataReceivedEventArgs e)\r\n\r\nThis looks like a problem were the StdOut and StdError message handlers\r\nare being called a the same time. As a result they try to add and\r\nitem at the same time causing this problem when the collection tries\r\nto grow.\r\n\r\nSo lets put in some locks to ensure that only one message handler\r\ncan add an item at a time.\r\n"},{"Id":"7414831395","Type":"PullRequestEvent","CreatedAt":"2018-03-21T18:45:05","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1121","RelatedDescription":"Closed pull request \"[linker] Update linker sources location\" (#1121) at xamarin/xamarin-android","RelatedBody":"Recent changes in linker https://github.com/mono/linker/commit/10f4163fb4fa17e77a98f266e28e283ea6d45739 moved the source files around.\r\n\r\nAlso add `MarkingHelpers.cs` to the linker sources."},{"Id":"7414825553","Type":"IssuesEvent","CreatedAt":"2018-03-21T18:44:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1162","RelatedDescription":"Closed issue \"ResolveAssemblies task wrongly uses reference assemblies\" (#1162) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Get and Build repro https://github.com/marcominerva/XamarinAndroidIssue\r\n\r\nIf you instead the build log you will see that \r\n\r\n```\r\nUsing \"ResolveAssemblies\" task from assembly \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Build.Tasks.dll\".\r\n```\r\n\r\nhas few `...ref/netstandard2.0/...` references which is wrong as they should never be used as an input to linker or any post compilation processing\r\n\r\nThis issue is possibly related to #1154 \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nNo error during execution.\r\n\r\n### Actual Behavior\r\n\r\n[Mono] Assembly Loader probing location: 'System.Memory'.\r\n[monodroid-assembly] Could not load assembly 'System.Memory' during startup registration.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nXamarin.Android\r\nVersion: 8.1.0.25 (Visual Studio Community)\r\nAndroid SDK: /Users/marek/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 25.0.5\r\nSDK Build Tools Version: 25.0.3\r\n\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n   ```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1500,2): warning : Ignoring /Users/marek/.nuget/packages/system.buffers/4.4.0/ref/netstandard2.0 as it is a Reference Assembly\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1500,2): warning : Ignoring /Users/marek/.nuget/packages/system.memory/4.4.0-preview2-25405-01/ref/netstandard2.0 as it is a Reference Assembly\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1500,2): warning : Ignoring /Users/marek/.nuget/packages/system.runtime.compilerservices.unsafe/4.4.0/ref/netstandard2.0 as it is a Reference Assembly\r\n```\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#585873](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/585873)"},{"Id":"7414824537","Type":"PullRequestEvent","CreatedAt":"2018-03-21T18:43:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1356","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Better support for netstandard libraries.\" (#1356) at xamarin/xamarin-android","RelatedBody":"Fixes #1154, #1162\r\n\r\nNetstandard packages sometimes ship with both reference and\r\nimplementation assemblies. The Nuget build task `ResolveNuGetPackageAssets`\r\nonly resolves the `ref` version of the assemblies. There does\r\nnot seem to be away way to FORCE Nuget to resolve the lib one.\r\nHow .net Core manages to do this is still a mistery. That said\r\nthe Nuget `ResolveNuGetPackageAssets` does give us a hint as to\r\nhow to use the `project.assets.json` file to figure out what\r\n`lib` version of the package we should be including.\r\n\r\nThis commit reworks `ResolveAssemblies` to attempt to map the\r\n`ref` to a `lib` if we find a Referenece Assembly. Historically\r\nwe just issue a warning (which will probably be ignored), but\r\nnow we will use the `project.assets.json` file to find the\r\nimplementation version of the `ref` assembly.\r\n\r\nWe need to be using `Nuget.ProjectModel` since it an API for \r\nquerying the `project.assets.json`. We make use of the Nuget build properties\r\n`$(ProjectLockFile)` for the location of the `project.assets.json`\r\n, `$(NuGetPackageRoot)` for the root folder of the Nuget packages\r\nand `$(NuGetTargetMoniker)` for resolving which `TargetFrameworks` \r\nwe are looking for. All of these properties should be set by Nuget.\r\nIf they are not we should fallback to the default behaviour and just issue the warning.\r\n\r\n\t{\r\n  \t\t\"version\": 3,\r\n  \t\t\"targets\": {\r\n    \t\t\t\"MonoAndroid,Version=v8.1\": {\r\n\t\t\t\t\"System.IO.Packaging/4.4.0\": {\r\n\t\t\t\t\t\"type\": \"package\",\r\n\t\t\t\t\t\"compile\": {\r\n\t\t\t\t\t\t\"ref/netstandard1.3/System.IO.Packaging.dll\": {}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"runtime\": {\r\n\t\t\t\t\t\t\"lib/netstandard1.3/System.IO.Packaging.dll\": {}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\nThe code above is a cut down sample of the `project.assets.json`. So our\r\ncode will first resolve the `targets`. We use `$(NuGetTargetMoniker)` to\r\ndo this. For an android project this should have a value of\r\n`MonoAndroid,Version=v8.1`. Note we do NOT need to worry about the version\r\nhere. When Nuget restores the packages it creates the file so it will\r\nuse the correct version.\r\nNext we try to find the `System.IO.Packaging`. We need to look at the\r\n`lockFile.Libraries` to get information about the install path in the \r\nNuget folder, and then `target.Libraries` to pick out the  `runtime`\r\nitem.\r\nOnce we have resolved the path we need to then combine that with the \r\n`$(NuGetPackageRoot)` to get the full path to the new library. If at any \r\npoint during all of this code we don't get what we expect (i.e a null) we \r\nshould abort and just issue the warning.\r\n\r\nThe only real concern with this is if the format of the `project.assets.json`\r\nfile changes. It is not ment to be edited by a human so there is the\r\npossibiltity that the Nuget team will decide to either change the schema or\r\neven migrate to a new file format. Hopefully we can just update the `Nuget`\r\nnuggets if that happens."},{"Id":"7414824470","Type":"IssuesEvent","CreatedAt":"2018-03-21T18:43:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1154","RelatedDescription":"Closed issue \"System.IO.Packaging not resolved correctly\" (#1154) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nWe're having an issue with a Xamarin project, which as we added System.IO.Packaging 4.4.1 nuget package dependency, the reference is resolved as the ref/netstandard1.3 DLL, a reference assembly. It seems that because of that, the Xamarin app fails to start because this DLL does not get packaged, and so the app fails to start with this common xamarin error https://forums.xamarin.com/discussion/63584/android-could-not-load-assembly-xxx-during-startup-registration\r\n\r\nThere seems to be an issue open related to that https://github.com/dotnet/corefx/issues/23830\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe application starts correctly.\r\n### Actual Behavior\r\nThe application fails to start with the \"Could not load assembly 'xxx' during startup registration\" error.\r\n### Version Information\r\nVS 15.5.2\r\nXamarin 4.8\r\nXamarin.Android 8.1\n\n> VS bug [#580833](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/580833)"},{"Id":"7414753302","Type":"PullRequestEvent","CreatedAt":"2018-03-21T18:30:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1455","RelatedDescription":"Merged pull request \"[create-vsix] Properly install $(AndroidFirstFrameworkVersion)\" (#1455) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1454\r\n\r\nCommit cdaa52b3 had a thinko: it updated `@(ReferenceAssemblies)` so\r\nthat e.g. `Mono.Android.Export.dll` and `OpenTK-1.0.dll` would only be\r\ninstalled *once*, into `$(AndroidFirstFrameworkVersion)` -- instead of\r\nhaving a copy in *each* framework version -- but\r\n`%(ReferenceAssemblies.VSIXSubPath)` had the wrong value.\r\n\r\nConsequently, the files were being installed into the wrong directory.\r\n\r\nFix `%(ReferenceAssemblies.VSIXSubPath)` so that instead of the\r\nincorrect `Microsoft/Framework/$(AndroidFirstFrameworkVersion)/` it's\r\n`Microsoft/Framework/MonoAndroid/$(AndroidFirstFrameworkVersion)/`."},{"Id":"7414753258","Type":"IssuesEvent","CreatedAt":"2018-03-21T18:30:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1454","RelatedDescription":"Closed issue \"Certain assemblies are no longer being installed into the correct location on Windows\" (#1454) at xamarin/xamarin-android","RelatedBody":"\r\nI'm seeing `Mono.Android.Export.dll`, `OpenTk.dll` and `OpenTk-1.0 .dll` and their relevant pdbs and xml files being installed into:\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\v2.3\r\n\r\nHowever the correct path should be (if I am not mistaken):\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v2.3\r\n\r\n\r\n### Version Information\r\nXA 15.7 (8.3.0.6)\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#587123](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/587123)"},{"Id":"7414729470","Type":"PullRequestEvent","CreatedAt":"2018-03-21T18:26:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1458","RelatedDescription":"Opened pull request \"[api-compatibility] Only check stable API levels\" (#1458) at xamarin/xamarin-android","RelatedBody":"[xamarin-android build #915][0] reports various api-compatibility\r\nfailures, such as:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/915/consoleText\r\n\r\n\t<h1>### API BREAK BETWEEN v8.1 and v8.1.99</h1>\r\n\t<!-- start namespace Android.Telephony --> <div>\r\n\t<h2>Namespace Android.Telephony</h2>\r\n\t<!-- start type CellIdentityCdma --> <div>\r\n\t<h3>Type Changed: Android.Telephony.CellIdentityCdma</h3>\r\n\tModified base type: <span class='removed removed-inline removed-breaking-inline'>Java.Lang.Object</span> <span class='added '>Android.Telephony.CellIdentity</span>\r\n\r\nWe want to ignore these for now, as these changes are against an\r\n*unstable* API level, and we don't want to have to ensure\r\nintra-API-stability for unstable API levels. (In part becuase we\r\nhaven't enumified unstable API levels, because they're in flux.)\r\n\r\nUpdate `$(STABLE_API_LEVELS)` so that it includes API-27 -- which\r\nshould have been done in f41afb61 -- and update\r\n`make run-api-compatibility-tests` so that it only checks\r\n`$(STABLE_FRAMEWORKS)`, not *all* frameworks."},{"Id":"7414567195","Type":"PullRequestEvent","CreatedAt":"2018-03-21T17:57:53","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1457","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Add Locking for processing aapt output.\" (#1457) at xamarin/xamarin-android","RelatedBody":"We got a bug report where Aapt crashes with the following\r\n\r\n\tUnhandled Exception: System.ArgumentOutOfRangeException: capacity was less than the current size.\r\nParameter name: value\r\n   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\r\n   at System.Collections.Generic.List`1.set_Capacity(Int32 value)\r\n   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)\r\n   at System.Collections.Generic.List`1.Add(T item)\r\n   at Xamarin.Android.Tasks.Aapt.<>c__DisplayClass134_0.<RunAapt>b__0(Object sender, DataReceivedEventArgs e)\r\n   at System.Diagnostics.Process.OutputReadNotifyUser(String data)\r\n   at System.Diagnostics.AsyncStreamReader.FlushMessageQueue()\r\n   at System.Diagnostics.AsyncStreamReader.GetLinesFromStringBuilder()\r\n   at System.Diagnostics.AsyncStreamReader.ReadBuffer(IAsyncResult ar)\r\n   at System.IO.Stream.ReadWriteTask.InvokeAsyncCallback(Object completedTask)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.IO.Stream.ReadWriteTask.System.Threading.Tasks.ITaskCompletionAction.Invoke(Task completingTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean bPreventDoubleExecution)\r\n   at System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n\r\nThis looks like a problem were the StdOut and StdError message handlers\r\nare being called a the same time. As a result they try to add and\r\nitem at the same time causing this problem when the collection tries\r\nto grow.\r\n\r\nSo lets put in some locks to ensure that only one message handler\r\ncan add an item at a time."},{"Id":"7413361676","Type":"IssuesEvent","CreatedAt":"2018-03-21T14:51:10","Actor":"garuma","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1456","RelatedDescription":"Opened issue \"Exception with Aapt MSBuild task\" (#1456) at xamarin/xamarin-android","RelatedBody":"Compiling an Android project I get the following exception: \r\n\r\n```\r\n_SetLatestTargetFrameworkVersion:\r\n  Found Java SDK version 1.8.0.\r\n_ResolveMonoAndroidSdks:\r\n  MonoAndroid Tools: C:\\Program Files (x86)\\Microsoft Visual Studio\\Dogfood\\Enterprise\\MSBuild\\Xamarin\\Android\\\r\n  Android Platform API level: 27\r\n  TargetFrameworkVersion: v8.1\r\n  Android NDK: C:\\Program Files (x86)\\Android\\android-ndk-r12b\\\r\n  Android SDK: C:\\Program Files (x86)\\Android\\android-sdk\\\r\n  Android SDK Build Tools: C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\27.0.3\\\r\n  Java SDK: C:\\Program Files\\Java\\jdk1.8.0_161\\\r\n_GetPrimaryCpuAbi:\r\n  _PrimaryCpuAbi=\r\n_CheckInstantRunCondition:\r\n  Dex Fast Deployment Enabled: False\r\n_SetupInstantRun:\r\n  Android Java Class for Fast Deployment:\r\n_SetupApplicationJavaClass:\r\n  Application Java class: android.app.Application\r\n_ValidateAndroidPackageProperties:\r\n    PackageName: AndroidCustomControlsClass.AndroidCustomControlsClass\r\n_ResolveLibraryProjectImports:\r\nSkipping target \"_ResolveLibraryProjectImports\" because all output files are up-to-date with respect to the input files.\r\n_BuildLibraryImportsCache:\r\nSkipping target \"_BuildLibraryImportsCache\" because all output files are up-to-date with respect to the input files.\r\n_BuildAdditionalResourcesCache:\r\nSkipping target \"_BuildAdditionalResourcesCache\" because all output files are up-to-date with respect to the input files.\r\n_CreateAdditionalResourceCache:\r\nSkipping target \"_CreateAdditionalResourceCache\" because it has no outputs.\r\n_GenerateAndroidResourceDir:\r\nSkipping target \"_GenerateAndroidResourceDir\" because all output files are up-to-date with respect to the input files.\r\n_GenerateCodeBehindForLayout:\r\nSkipping target \"_GenerateCodeBehindForLayout\" because it has no outputs.\r\n_DefineBuildTargetAbis:\r\n  Build target ABI: arm64-v8a;armeabi;armeabi-v7a;x86;x86_64\r\n_UpdateAndroidResgen:\r\nSkipping target \"_UpdateAndroidResgen\" because all output files are up-to-date with respect to the input files.\r\n_CreateManagedLibraryResourceArchive:\r\nSkipping target \"_CreateManagedLibraryResourceArchive\" because all output files are up-to-date with respect to the input files.\r\n_CreateAdditionalResourceCache:\r\nSkipping target \"_CreateAdditionalResourceCache\" because it has no outputs.\r\n_GenerateJavaDesignerForComponent:\r\nSkipping target \"_GenerateJavaDesignerForComponent\" because it has no inputs.\r\nGenerateTargetFrameworkMonikerAttribute:\r\nSkipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\nCoreCompile:\r\nSkipping target \"CoreCompile\" because all output files are up-to-date with respect to the input files.\r\nCopyFilesToOutputDirectory:\r\n  AndroidCustomControlsClass -> C:\\Git\\designer\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner.Tests\\AndroidCustomControlsClass\\bin\\Debug\\AndroidCustomControlsClass.dll\r\nDone Building Project \"C:\\Git\\designer\\Xamarin.Designer.Android\\Xamarin.AndroidDesigner.Tests\\AndroidCustomControlsClass\\AndroidCustomControlsClass.csproj\" (default targets).\r\n\r\n_ResolveMonoAndroidSdks:\r\n  MonoAndroid Tools: C:\\Program Files (x86)\\Microsoft Visual Studio\\Dogfood\\Enterprise\\MSBuild\\Xamarin\\Android\\\r\n  Android Platform API level: 27\r\n  TargetFrameworkVersion: v8.1\r\n  Android NDK: C:\\Program Files (x86)\\Android\\android-ndk-r12b\\\r\n  Android SDK: C:\\Program Files (x86)\\Android\\android-sdk\\\r\n  Android SDK Build Tools: C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\27.0.3\\\r\n  Java SDK: C:\\Program Files\\Java\\jdk1.8.0_161\\\r\n_GetPrimaryCpuAbi:\r\n  _PrimaryCpuAbi=\r\n_CheckInstantRunCondition:\r\n  Dex Fast Deployment Enabled: False\r\n_SetupInstantRun:\r\n  Android Java Class for Fast Deployment:\r\n_SetupApplicationJavaClass:\r\n  Application Java class: android.app.Application\r\n_ResolveLibraryProjectImports:\r\nSkipping target \"_ResolveLibraryProjectImports\" because all output files are up-to-date with respect to the input files.\r\n_BuildLibraryImportsCache:\r\nSkipping target \"_BuildLibraryImportsCache\" because all output files are up-to-date with respect to the input files.\r\n_BuildAdditionalResourcesCache:\r\nSkipping target \"_BuildAdditionalResourcesCache\" because all output files are up-to-date with respect to the input files.\r\n_CreateAdditionalResourceCache:\r\nSkipping target \"_CreateAdditionalResourceCache\" because it has no outputs.\r\n_GenerateAndroidResourceDir:\r\nSkipping target \"_GenerateAndroidResourceDir\" because all output files are up-to-date with respect to the input files.\r\n_GenerateCodeBehindForLayout:\r\nSkipping target \"_GenerateCodeBehindForLayout\" because it has no outputs.\r\n_DefineBuildTargetAbis:\r\n  Build target ABI: arm64-v8a;armeabi;armeabi-v7a;x86;x86_64\r\nVectorDrawableCheckBuildToolsVersionTask:\r\n  Checking Android SDK Build-tools version...\r\n  Selected Android SDK Build Tools Path: C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\27.0.3\\\r\n  Selected Android SDK Build Tools Version: 27.0.3\r\n  Android SDK Build Tools Version: 27.0.3 meets minimum requirements for Vector Drawables. OK.\r\n  Finished Checking Android SDK Build-tools version.\r\n\r\nUnhandled Exception: System.ArgumentOutOfRangeException: capacity was less than the current size.\r\nParameter name: value\r\n   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\r\n   at System.Collections.Generic.List`1.set_Capacity(Int32 value)\r\n   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)\r\n   at System.Collections.Generic.List`1.Add(T item)\r\n   at Xamarin.Android.Tasks.Aapt.<>c__DisplayClass134_0.<RunAapt>b__0(Object sender, DataReceivedEventArgs e)\r\n   at System.Diagnostics.Process.OutputReadNotifyUser(String data)\r\n   at System.Diagnostics.AsyncStreamReader.FlushMessageQueue()\r\n   at System.Diagnostics.AsyncStreamReader.GetLinesFromStringBuilder()\r\n   at System.Diagnostics.AsyncStreamReader.ReadBuffer(IAsyncResult ar)\r\n   at System.IO.Stream.ReadWriteTask.InvokeAsyncCallback(Object completedTask)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.IO.Stream.ReadWriteTask.System.Threading.Tasks.ITaskCompletionAction.Invoke(Task completingTask)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean bPreventDoubleExecution)\r\n   at System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n```\r\n\r\nIt seems like it could be possible in the current code both handler to `Process` could be run at the same time on different threading causing this issue: https://github.com/xamarin/xamarin-android/blob/1826ec21d5ac9e64d53896ad9cc24c53b5afb3d5/src/Xamarin.Android.Build.Tasks/Tasks/Aapt.cs#L131-L142\r\n\r\nTested on 15-7 Visual Studio/MSBuild builds with Xamarin.Android from 1a8ed53884354fd57ba486aa4dda09538e7e722b"},{"Id":"7413010865","Type":"PullRequestEvent","CreatedAt":"2018-03-21T13:58:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1455","RelatedDescription":"Opened pull request \"[create-vsix] Properly install $(AndroidFirstFrameworkVersion)\" (#1455) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1454\r\n\r\nCommit cdaa52b3 had a thinko: it updated `@(ReferenceAssemblies)` so\r\nthat e.g. `Mono.Android.Export.dll` and `OpenTK-1.0.dll` would only be\r\ninstalled *once*, into `$(AndroidFirstFrameworkVersion)` -- instead of\r\nhaving a copy in *each* framework version -- but\r\n`%(ReferenceAssemblies.VSIXSubPath)` had the wrong value.\r\n\r\nConsequently, the files were being installed into the wrong directory.\r\n\r\nFix `%(ReferenceAssemblies.VSIXSubPath)` so that instead of the\r\nincorrect `Microsoft/Framework/$(AndroidFirstFrameworkVersion)/` it's\r\n`Microsoft/Framework/MonoAndroid/$(AndroidFirstFrameworkVersion)/`."},{"Id":"7412996352","Type":"IssuesEvent","CreatedAt":"2018-03-21T13:56:17","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1454","RelatedDescription":"Opened issue \"Certain assemblies are no longer being installed into the correct location on Windows\" (#1454) at xamarin/xamarin-android","RelatedBody":"\r\nI'm seeing `Mono.Android.Export.dll`, `OpenTk.dll` and `OpenTk-1.0 .dll` and their relevant pdbs and xml files being installed into:\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\v2.3\r\n\r\nHowever the correct path should be (if I am not mistaken):\r\n> C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v2.3\r\n\r\n\r\n### Version Information\r\nXA 15.7 (8.3.0.6)\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7412821206","Type":"PullRequestEvent","CreatedAt":"2018-03-21T13:27:32","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1445","RelatedDescription":"Merged pull request \"Bump to java.interop/master/56e978f\" (#1445) at xamarin/xamarin-android","RelatedBody":"Needed for #1418 "},{"Id":"7412802805","Type":"PullRequestEvent","CreatedAt":"2018-03-21T13:24:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1453","RelatedDescription":"Merged pull request \"[xabuild.exe] better fix for multi-process file access\" (#1453) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1497421&tab=ms.vss-test-web.test-result-details\r\n\r\nThe fix in #1411 was not quite good enough. It works \"most of the time\",\r\nbut I found a couple instances where a random test failed on VSTS due to\r\nthis issue. I could also test this scenario by clearing the symlinks and\r\n`.__sys_links.txt` and running the `BuildTest.RunXABuildInParallel`\r\ntest. This test would pass most times, but you could see something odd by\r\nlooking at the contents of `.__sys_links.txt`, it would have duplicate\r\nsymlink names listed.\r\n\r\nSo I took another approach:\r\n1. Before checking for the existance of the symlinks, hold the\r\n`.__sys_links.txt` file open\r\n2. Check for each missing symlink, create it if needed\r\n2. Write to `.__sys_links.txt` after each check is made\r\n3. Close the file after the loop\r\n\r\nAs long as step 1 has the same `catch IOException` and retry logic, this\r\nseems to be a much better approach. The `.__sys_links.txt` file contents\r\nare correct, and do not contain any duplicates. There is a lot less\r\ncongestion against opening the `.__sys_links.txt` file.\r\n\r\nThis also shouldn't prevent `xabuild.exe` from running in parallel, it\r\njust has a pseudo multi-process lock around the symlink creation."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7416793284","Type":"IssuesEvent","CreatedAt":"2018-03-22T03:18:55","Actor":"orangeoctopus","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2162","RelatedDescription":"Opened issue \"removing multiple pages then popasync flashes through those \"removed\" pages - ANDROID only\" (#2162) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nAndroid only phones - when attempting to navigate to a page multiple pages back it flashes the previous screens before arriving at intended page. This is when Navigation.RemovePage BEFORE pushing the intended page (the \"removed\" pages flash for a brief moment).\r\n\r\n### Steps to Reproduce\r\nANDROID only\r\n1. open project linked\r\n2. tap \"next Page\" Button\r\n3. tap \"next Page\" Button\r\n4. tap \"next Page\" Button\r\n5. tap \"insert page before page 3\" Button\r\n6. tap \"pop 4 pages\" Button\r\n\r\n### Expected Behavior\r\nshould see it go straight to the first page that just says \"Next Page\"\r\n### Actual Behavior\r\nvisibly flashes back through all the pages before showing the first page.\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- IDE: Visual Studio Community 2017 for Mac\r\nVersion 7.2 (build 636)\r\n- Platform Target Frameworks: \r\n  - Android: Version: 8.0.0.33 \r\n- nuget: 4.3.1.4445\r\n\r\n### Reproduction Link\r\n\r\nzip file of sample project (its based off the sample code for working with navigation):\r\nhttps://www.dropbox.com/s/2jpu8cxbq5lxnxn/Hierarchical.zip?dl=0\r\n"},{"Id":"7416533886","Type":"PullRequestEvent","CreatedAt":"2018-03-22T01:48:59","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2161","RelatedDescription":"Opened pull request \"Enable Entry.IsTextPredicationEnabled property on Tizen\" (#2161) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n This PR is extension of [#2038](https://github.com/xamarin/Xamarin.Forms/pull/2038) for tizen backend. \r\n\r\n AutoComplete of `ElmSharp.Entry` is enabled if Keyboard is`CustomKeyboard` and has (Suggestions or Spellcheck) flags or Keyboard is not `CustomKeyboard` and (`IsSpellCheckEnabled` and `IsTextPredictionEnabled`) are true. Otherwise, AutoComplete of `ElmSharp.Entry` is off.\r\n\r\n| CustomKeyboard | KeyboardFlags. Suggestions | KeyboardFlags. Spellcheck | Entry. IsSpellCheckEnabled | Entry. IsTextPredictionEnabled | Tizen Native Entry AutoComplete |\r\n| --- | --- | --- | --- | --- | --- |\r\n| True | True | True | - | - | **True** |\r\n| True | True | False | - | - | **True** |\r\n| True | False | True | - | - | **True** |\r\n| True | False | False | - | - | **False** |\r\n| False | - | - | True | True | **True** |\r\n| False | - | - | True | False | **False** |\r\n| False | - | - | False | True | **False** |\r\n| False | - | - | False | False | **False** |\r\n\r\n![image](https://user-images.githubusercontent.com/1029155/37746589-55a2b766-2dbe-11e8-8d6c-e8b477f525c6.gif)\r\n\r\n\r\n### Bugs Fixed ###\r\n Fixes #1677 [Enhancement] Entry: Control over text-prediction\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7416024729","Type":"PullRequestEvent","CreatedAt":"2018-03-21T22:58:56","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2031","RelatedDescription":"Merged pull request \"Add UI Test for B60699\" (#2031) at xamarin/Xamarin.Forms","RelatedBody":"UITest Only"},{"Id":"7415608540","Type":"PullRequestEvent","CreatedAt":"2018-03-21T21:19:02","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2160","RelatedDescription":"Opened pull request \"touch repository\" (#2160) at xamarin/Xamarin.Forms","RelatedBody":"NULL PR to test CI"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7416734074","Type":"IssuesEvent","CreatedAt":"2018-03-22T02:58:17","Actor":"LeeCenY","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3797","RelatedDescription":"Opened issue \"Failed to launch the application using the instruments service. Will try launching the app using gdb service.\" (#3797) at xamarin/xamarin-macios","RelatedBody":"https://github.com/mono/monodevelop/issues/4225\r\n：This is a bug in https://github.com/xamarin/xamarin-macios and should be re-filed there.\r\nI don't think GitHub provides a way for us to move the bug report over.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Visual Studio Run application\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\nAutomatically launch the mobile application\r\n\r\n```\r\nLaunched application 'com.test.sss' on 'iphone' with pid 9007\r\n```\r\n### Actual Behavior\r\n\r\nAfter the output of the following statement, it will not run, I need to manually start the application, will continue to run\r\n```\r\nwarning MT1043: Failed to launch the application using the instruments service. Will try launching the app using gdb service.\r\nLaunching 'com.test.sss on the device 'iphone'\r\nerror MT0000: Unexpected error - Please file a bug report at bugzilla.xamarin.com\r\nerror HE0032: Could not mount developer tools on 'iphone': Object reference not set to an instance of an object\r\n```\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 891dc29f-4210-4ba9-a91b-9564b6fea41d\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\n版本: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\n运行时: /usr/local/share/dotnet/dotnet\r\n运行时版本:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK 版本:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDK: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n版本: 1.6.1\r\n位置:/Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Android ===\r\n\r\n版本: 8.2.0.15 (Visual Studio Community)\r\nAndroid SDK: /Users/ttlgzmac6/Library/Developer/Xamarin/android-sdk-macosx\r\n\t受支持的 Android 版本:\r\n\t\t2.3   (API 级别 10)\r\n\t\t4.0.3 (API 级别 15)\r\n\t\t4.4   (API 级别 19)\r\n\t\t5.0   (API 级别 21)\r\n\t\t6.0   (API 级别 23)\r\n\t\t7.0   (API 级别 24)\r\n\t\t7.1   (API 级别 25)\r\n\t\t8.1   (API 级别 27)\r\n\r\nSDK 工具版本: 25.2.5\r\nSDK 平台工具版本: 27.0.1\r\nSDK 生成工具版本: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL 代码在此处提供:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.0\r\nDarwin 17.0.0 Darwin Kernel Version 17.0.0\r\n    Thu Aug 24 21:48:19 PDT 2017\r\n    root:xnu-4570.1.46~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7416397623","Type":"PullRequestEvent","CreatedAt":"2018-03-22T01:00:24","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3796","RelatedDescription":"Merged pull request \"[mmp][mtouch] Better guard framework SDK checks (#3757)\" (#3796) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/3725\r\n- These frameworks \"CoreAudioKit Metal MetalKit MetalPerformanceShaders CoreNFC DeviceCheck\"\r\n were special cased, but that special case did do an SDK check.\r\n- Create a helper method to share check\r\n- Add test for MM0135"},{"Id":"7415682243","Type":"IssuesEvent","CreatedAt":"2018-03-21T21:34:29","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3762","RelatedDescription":"Reopened issue \"IWKNavigationDelegate has two interface methods, only show one code completion method\" (#3762) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.   mvWebView.NavigationDelegate = this;\r\n2.   IWKNavigationDelegate\r\n3.  decidePolicy\r\n4.  decidePolicy\r\n\r\n### Expected Behavior\r\n\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\n[Export(\"webView:decidePolicyForNavigationAction:decisionHandler:\")]\r\n\r\n```\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\npublic void DecidePolicy(WKWebView webView, WKNavigationResponse navigationResponse, Action<WKNavigationResponsePolicy> decisionHandler)\r\n{\r\n   throw new System.NotImplementedException();\r\n}\r\n```\r\n```\r\n[Export(\"webView:decidePolicyForNavigationAction:decisionHandler:\")]\r\npublic void DecidePolicy(WKWebView webView, WKNavigationAction navigationAction, Action<WKNavigationActionPolicy> decisionHandler)\r\n{\r\n    throw new System.NotImplementedException();\r\n}\r\n```\r\n### Actual Behavior\r\n\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\n\r\n```\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\npublic void DecidePolicy(WKWebView webView, WKNavigationResponse navigationResponse, Action<WKNavigationResponsePolicy> decisionHandler)\r\n{\r\n   throw new System.NotImplementedException();\r\n}\r\n```\r\n```\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\npublic void DecidePolicy(WKWebView webView, WKNavigationResponse navigationResponse, Action<WKNavigationResponsePolicy> decisionHandler)\r\n{\r\n   throw new System.NotImplementedException();\r\n}\r\n```\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 891dc29f-4210-4ba9-a91b-9564b6fea41d\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\n版本: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\n运行时: /usr/local/share/dotnet/dotnet\r\n运行时版本:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK 版本:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDK: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n版本: 1.6.1\r\n位置:/Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Android ===\r\n\r\n版本: 8.2.0.15 (Visual Studio Community)\r\nAndroid SDK: /Users/ttlgzmac6/Library/Developer/Xamarin/android-sdk-macosx\r\n\t受支持的 Android 版本:\r\n\t\t2.3   (API 级别 10)\r\n\t\t4.0.3 (API 级别 15)\r\n\t\t4.4   (API 级别 19)\r\n\t\t5.0   (API 级别 21)\r\n\t\t6.0   (API 级别 23)\r\n\t\t7.0   (API 级别 24)\r\n\t\t7.1   (API 级别 25)\r\n\t\t8.1   (API 级别 27)\r\n\r\nSDK 工具版本: 25.2.5\r\nSDK 平台工具版本: 27.0.1\r\nSDK 生成工具版本: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL 代码在此处提供:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.0\r\nDarwin 17.0.0 Darwin Kernel Version 17.0.0\r\n    Thu Aug 24 21:48:19 PDT 2017\r\n    root:xnu-4570.1.46~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\n\n> VS bug [#585126](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/585126)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"976537324434706432","CreatedAt":"2018-03-21T19:13:35+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/OLQs53P4vY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":21,"RawContent":null},{"Id":"976489364602617859","CreatedAt":"2018-03-21T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/lu400TXBl2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"976110617575780353","CreatedAt":"2018-03-20T14:58:01+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/FllQaROslT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":38,"RawContent":null},{"Id":"975795670622892032","CreatedAt":"2018-03-19T18:06:31+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":12,"RawContent":null},{"Id":"975467903750426626","CreatedAt":"2018-03-18T20:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/oyG6oJ6UN2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":213,"FavoriteCount":86,"RawContent":null},{"Id":"975154821358608384","CreatedAt":"2018-03-17T23:40:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/jHWAbLK0zw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":76,"FavoriteCount":24,"RawContent":null},{"Id":"974742352538558464","CreatedAt":"2018-03-16T20:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/g1O7qUdDb7 https://t.co/KYZ5XlPeGr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":19,"RawContent":null},{"Id":"974673649277001729","CreatedAt":"2018-03-16T15:48:01+00:00","UserScreenname":"xamarinhq","Text":"Add sound to your #XamarinForms app with the open-source SimpleAudioPlayer #NuGet plugin: https://t.co/r8NSFRpl33 https://t.co/dtAlgRSysQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":17,"RawContent":null},{"Id":"974310000062533632","CreatedAt":"2018-03-15T15:43:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to make your #XamarinForms apps adaptive based on screen size, device type, and orientation: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":14,"RawContent":null},{"Id":"973975762419224577","CreatedAt":"2018-03-14T17:34:52+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin joins https://t.co/zGGlEXOMrE! Learn more: https://t.co/dYZuo1IFIk https://t.co/a0BJMelbL9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":130,"FavoriteCount":68,"RawContent":null},{"Id":"973950886191030273","CreatedAt":"2018-03-14T15:56:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #XamarinAndroid Device Manager Preview: https://t.co/4cTyPaFfMb https://t.co/HF0W9uigKU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":16,"RawContent":null},{"Id":"973590055234228224","CreatedAt":"2018-03-13T16:02:12+00:00","UserScreenname":"xamarinhq","Text":"The #CSharp developer’s guide to shipping better apps with #VSAppCenter: https://t.co/jU0cnONnM8 https://t.co/5UiJzLeMBf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":37,"RawContent":null},{"Id":"973272277876752385","CreatedAt":"2018-03-12T18:59:28+00:00","UserScreenname":"xamarinhq","Text":"Start your week off with the @XamarinPodcast, featuring discussion of #VS2017 version 15.6, AR with UrhoSharp, and… https://t.co/xgDtF4E72X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":8,"RawContent":null},{"Id":"973226616020176896","CreatedAt":"2018-03-12T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/MkadlSMfqL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":10,"RawContent":null},{"Id":"972993579109974016","CreatedAt":"2018-03-12T00:32:01+00:00","UserScreenname":"xamarinhq","Text":"The open source suite of SmartHotel360 reference apps includes mobile and desktop apps for business travelers, a we… https://t.co/i9MWn6ypXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":140,"FavoriteCount":45,"RawContent":null},{"Id":"972643544832856065","CreatedAt":"2018-03-11T01:21:06+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #Xamarin Live Player for iOS: https://t.co/jQnSvYwtB1 https://t.co/sa0DV2n2aD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":97,"FavoriteCount":57,"RawContent":null},{"Id":"972152285550862336","CreatedAt":"2018-03-09T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/hDELQELDqc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":147,"FavoriteCount":57,"RawContent":null},{"Id":"971835801377091585","CreatedAt":"2018-03-08T19:51:25+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/FGappPLbxT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":26,"RawContent":null},{"Id":"971796730722377729","CreatedAt":"2018-03-08T17:16:10+00:00","UserScreenname":"xamarinhq","Text":"An introduction to #tvOS with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/Qafo4W8L3m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-03-22T05:30:41.4625638Z","RunDurationInMilliseconds":4745}