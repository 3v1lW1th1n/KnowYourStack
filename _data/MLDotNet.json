{"Data":{"GitHub":{"Issues":[{"Id":"431244182","IsPullRequest":true,"CreatedAt":"2019-04-09T23:52:09","Actor":"zeahmed","Number":"3268","RawContent":null,"Title":" Updated CopyColumns, DropColumns and SelectColumns samples.","State":"open","Body":"Related to #1209.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3268","RelatedDescription":"Open PR \" Updated CopyColumns, DropColumns and SelectColumns samples.\" (#3268)"},{"Id":"431225574","IsPullRequest":true,"CreatedAt":"2019-04-09T23:02:17","Actor":"codemzs","Number":"3267","RawContent":null,"Title":"Remove Microsoft.ML prefix from namespaces in samples binary.","State":"closed","Body":"fixes #3266\r\nfixes #3205","Url":"https://github.com/dotnet/machinelearning/pull/3267","RelatedDescription":"Closed or merged PR \"Remove Microsoft.ML prefix from namespaces in samples binary.\" (#3267)"},{"Id":"431225243","IsPullRequest":false,"CreatedAt":"2019-04-09T23:02:17","Actor":"codemzs","Number":"3266","RawContent":null,"Title":"Remove Microsoft.ML prefix from namespaces in Samples binary","State":"closed","Body":"This forces the samples to include Microsoft.ML namespace.","Url":"https://github.com/dotnet/machinelearning/issues/3266","RelatedDescription":"Closed issue \"Remove Microsoft.ML prefix from namespaces in Samples binary\" (#3266)"},{"Id":"431221151","IsPullRequest":true,"CreatedAt":"2019-04-09T22:19:10","Actor":"wschin","Number":"3265","RawContent":null,"Title":"Ensable the uses of SSE and OpenMP in LIBMF","State":"open","Body":"Fix #1408 by compiling LIBMF with SSE and OpenMP.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3265","RelatedDescription":"Open PR \"Ensable the uses of SSE and OpenMP in LIBMF\" (#3265)"},{"Id":"431219234","IsPullRequest":true,"CreatedAt":"2019-04-09T22:12:24","Actor":"sfilipi","Number":"3264","RawContent":null,"Title":"Release cherry picks for ","State":"open","Body":"Cherry picking the following PRs:\r\n\r\nhttps://github.com/dotnet/machinelearning/pull/3211\r\nhttps://github.com/dotnet/machinelearning/pull/3187\r\nhttps://github.com/dotnet/machinelearning/pull/3223\r\nhttps://github.com/dotnet/machinelearning/pull/3167","Url":"https://github.com/dotnet/machinelearning/pull/3264","RelatedDescription":"Open PR \"Release cherry picks for \" (#3264)"},{"Id":"431205203","IsPullRequest":true,"CreatedAt":"2019-04-09T21:29:12","Actor":"wschin","Number":"3263","RawContent":null,"Title":"Get back images as C# objects","State":"open","Body":"Fix #3162 by considering image type in our bridge code.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3263","RelatedDescription":"Open PR \"Get back images as C# objects\" (#3263)"},{"Id":"431161794","IsPullRequest":true,"CreatedAt":"2019-04-09T19:53:58","Actor":"zeahmed","Number":"3262","RawContent":null,"Title":"Updated sample for Concatenate API.","State":"open","Body":"Related to #1209.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3262","RelatedDescription":"Open PR \"Updated sample for Concatenate API.\" (#3262)"},{"Id":"430685773","IsPullRequest":true,"CreatedAt":"2019-04-09T18:37:34","Actor":"codemzs","Number":"3249","RawContent":null,"Title":"Fix runtime exception in ImageClassification.","State":"closed","Body":"fixes #3248\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3249","RelatedDescription":"Closed or merged PR \"Fix runtime exception in ImageClassification.\" (#3249)"},{"Id":"430685471","IsPullRequest":false,"CreatedAt":"2019-04-09T18:37:34","Actor":"codemzs","Number":"3248","RawContent":null,"Title":"Fix runtime exception in Image classification sample.","State":"closed","Body":"This sample throws an exception for two reasons 1) model not found, should download the mode and unzip 2) even if the model exist it needs to set addBatchDimensionInput to true.","Url":"https://github.com/dotnet/machinelearning/issues/3248","RelatedDescription":"Closed issue \"Fix runtime exception in Image classification sample.\" (#3248)"},{"Id":"431083732","IsPullRequest":true,"CreatedAt":"2019-04-09T18:11:19","Actor":"codemzs","Number":"3259","RawContent":null,"Title":"Fix SDCA sample runtime exception.","State":"closed","Body":"fixes #3258","Url":"https://github.com/dotnet/machinelearning/pull/3259","RelatedDescription":"Closed or merged PR \"Fix SDCA sample runtime exception.\" (#3259)"},{"Id":"431083614","IsPullRequest":false,"CreatedAt":"2019-04-09T18:11:19","Actor":"codemzs","Number":"3258","RawContent":null,"Title":"Fix runtime exception in SDCA sample","State":"closed","Body":"Throws exception because it cannot find features and probability column. ","Url":"https://github.com/dotnet/machinelearning/issues/3258","RelatedDescription":"Closed issue \"Fix runtime exception in SDCA sample\" (#3258)"},{"Id":"431096074","IsPullRequest":false,"CreatedAt":"2019-04-09T17:47:17","Actor":"markusweimer","Number":"3260","RawContent":null,"Title":"Add a .vsconfig file","State":"open","Body":"Visual Studio 2019 allows for a new mechanism to communicate requirements for the build: `.vsconfig` files. They contain information about which workloads and features of Visual Studio must be installed for a given project. You can tread more about them in ths [this blog post](https://devblogs.microsoft.com/setup/configure-visual-studio-across-your-organization-with-vsconfig/).\r\n\r\nIt would be nice to have such a file in the ML.NET repository to make it easier for people to check out & build the code.","Url":"https://github.com/dotnet/machinelearning/issues/3260","RelatedDescription":"Open issue \"Add a .vsconfig file\" (#3260)"},{"Id":"431061564","IsPullRequest":true,"CreatedAt":"2019-04-09T17:38:50","Actor":"codemzs","Number":"3257","RawContent":null,"Title":"Fix LightGBM Ranking sample runtime exception.","State":"closed","Body":"fixes #3256","Url":"https://github.com/dotnet/machinelearning/pull/3257","RelatedDescription":"Closed or merged PR \"Fix LightGBM Ranking sample runtime exception.\" (#3257)"},{"Id":"431061343","IsPullRequest":false,"CreatedAt":"2019-04-09T17:38:50","Actor":"codemzs","Number":"3256","RawContent":null,"Title":"LightGBM Ranking sample runtime exception","State":"closed","Body":"LightGBM ranking sample throws an exception because group column name is not specified. ","Url":"https://github.com/dotnet/machinelearning/issues/3256","RelatedDescription":"Closed issue \"LightGBM Ranking sample runtime exception\" (#3256)"},{"Id":"431057383","IsPullRequest":false,"CreatedAt":"2019-04-09T16:19:39","Actor":"glebuk","Number":"3255","RawContent":null,"Title":"Complete term review of all sources","State":"open","Body":"Need to ensure that source content complies to term policies ","Url":"https://github.com/dotnet/machinelearning/issues/3255","RelatedDescription":"Open issue \"Complete term review of all sources\" (#3255)"},{"Id":"430821002","IsPullRequest":false,"CreatedAt":"2019-04-09T07:57:01","Actor":"samueleresca","Number":"3254","RawContent":null,"Title":"expected Expected float or float vector of known size, got Vec<R4>","State":"open","Body":"### System information\r\n\r\n```\r\n dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview3-010431/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27606-03\r\n  Commit:  39eb528ff8\r\n```\r\n### Issue\r\n\r\n- **What did you do?**\r\nI've implemented the project by following the [GitHubLabeler](https://github.com/dotnet/machinelearning-samples/tree/master/samples/fsharp/end-to-end-apps/MulticlassClassification-GitHubLabeler) sample. \r\n- **What happened?**\r\nWhen I run the code, I'm getting the following error:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentOutOfRangeException: Schema mismatch for input column 'ArtistFeaturized_CharExtractor': expected Expected float or float vector of known size, got Vec<R4>\r\nParameter name: inputSchema\r\n   at Microsoft.ML.Transforms.LpNormalizingTransformer.CheckInputColumn(DataViewSchema inputSchema, Int32 col, Int32 srcCol)\r\n   at Microsoft.ML.Data.OneToOneTransformerBase.OneToOneMapperBase..ctor(IHost host, OneToOneTransformerBase parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.LpNormalizingTransformer.Mapper..ctor(LpNormalizingTransformer parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.LpNormalizingTransformer.MakeRowMapper(DataViewSchema schema)\r\n   at Microsoft.ML.Data.RowToRowTransformerBase.MakeDataTransform(IDataView input)\r\n   at Microsoft.ML.Transforms.Text.TextFeaturizingEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.TrainCatalogBase.<>c__DisplayClass7_0.<CrossValidateTrain>b__0(Int32 fold)\r\n   at Microsoft.ML.TrainCatalogBase.CrossValidateTrain(IDataView data, IEstimator`1 estimator, Int32 numFolds, String samplingKeyColumn, Nullable`1 seed)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.CrossValidate(IDataView data, IEstimator`1 estimator, Int32 numFolds, String labelColumn, String samplingKeyColumn, Nullable`1 seed)\r\n   at Program.buildAndTrainTheModel(String dataSetLocation, String modelPath) in /Users/samuele.resca/Projects/LyricsClassifier/LyricsClassifier/Program.fs:line 72\r\n   at Program.main(String[] _argv) in /Users/samuele.resca/Projects/LyricsClassifier/LyricsClassifier/Program.fs:line 130\r\n```\r\n\r\n- **What did you expect?**\r\nIt seems that the training model expects only ` float or float vector of known size`.\r\n Why in the case of the  [GitHubLabeler](https://github.com/dotnet/machinelearning-samples/tree/master/samples/fsharp/end-to-end-apps/MulticlassClassification-GitHubLabeler) \r\nwhich almost has the same data schema, doesn't perform any data transformation?\r\n\r\n### Source code / logs\r\n[LyricsClassifier](https://github.com/samueleresca/LyricsClassifier)","Url":"https://github.com/dotnet/machinelearning/issues/3254","RelatedDescription":"Open issue \"expected Expected float or float vector of known size, got Vec<R4>\" (#3254)"},{"Id":"430718769","IsPullRequest":true,"CreatedAt":"2019-04-09T00:55:22","Actor":"singlis","Number":"3253","RawContent":null,"Title":"Fixing ONNX test","State":"open","Body":"The test pipeline for consuming an ONNX model would fail due to the Score column being named \"Score0\". The ONNX model will rename the output columns by design, therefore a different class with the ColumnName of \"Score0\" is needed. This fixes the test pipeline to address this issue.\r\n\r\nFixes #2981\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3253","RelatedDescription":"Open PR \"Fixing ONNX test\" (#3253)"},{"Id":"430704356","IsPullRequest":true,"CreatedAt":"2019-04-08T23:42:26","Actor":"glebuk","Number":"3252","RawContent":null,"Title":"Renamed WhatTheFeature and their abbreviations  to FeatureContributionScorer.","State":"open","Body":"### Change: \r\nWe need to rename some outdated component names to fit the term review policy.  Specifically we need to rename all instances of WhatTheFeature to the FutureContributionScorer for it and all abbreviations.  The change cleans up the last instances of old name of this feature.\r\n\r\n### Impact:\r\nNote that this change will break model compatibility for all previous versions of models containing FCC scorer.  \r\n\r\n### Workaround:\r\nThe workaround for legacy models exists.  It requires users to open the model ZIP file and manually rename the binary model file identifier string that contains the FCC model from \"WTF SCBI\" to \"FCC SCBI\"","Url":"https://github.com/dotnet/machinelearning/pull/3252","RelatedDescription":"Open PR \"Renamed WhatTheFeature and their abbreviations  to FeatureContributionScorer.\" (#3252)"},{"Id":"430703014","IsPullRequest":true,"CreatedAt":"2019-04-08T23:36:01","Actor":"wschin","Number":"3251","RawContent":null,"Title":"[WIP] Matrix factorization transformer","State":"open","Body":"In addition to a scorer, matrix factorization also commonly acts like a featurizer. It can map matrix row/column index to its representation. If we factorize matrix `R` into `P^TQ`, then the row index u's latent representation is defined as the u-th column of P. Similarly, the column index v's latent representation is the v-th column of Q. In addition, this transformer can find columns/rows similar to the given row/column by computing the inner products between row/column and all other columns/rows. The following data structure summarizes this transformer's output schema.\r\n```csharp\r\n        private class LatentVectorAndNeighbors\r\n        {\r\n            [VectorType(2)]\r\n            public float[] ColumnLatentVector { get; set; }\r\n\r\n            [VectorType(2)]\r\n            public float[] RowLatentVector { get; set; }\r\n\r\n            [VectorType(1)]\r\n            [KeyType(_oneClassMatrixRowCount)]\r\n            public uint[] SimilarRows { get; set; }\r\n\r\n            [VectorType(1)]\r\n            [KeyType(_oneClassMatrixColumnCount)]\r\n            public uint[] SImilarColumns { get; set; }\r\n        }\r\n```\r\nThis PR fix partially #1795 because we still need another evaluator.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3251","RelatedDescription":"Open PR \"[WIP] Matrix factorization transformer\" (#3251)"},{"Id":"430701461","IsPullRequest":true,"CreatedAt":"2019-04-08T23:28:49","Actor":"sfilipi","Number":"3250","RawContent":null,"Title":"[WIP] Exposing the confusion matrix","State":"open","Body":"Fixes #2009 by exposing the confusion matrix. ","Url":"https://github.com/dotnet/machinelearning/pull/3250","RelatedDescription":"Open PR \"[WIP] Exposing the confusion matrix\" (#3250)"},{"Id":"430679199","IsPullRequest":true,"CreatedAt":"2019-04-08T22:04:55","Actor":"rogancarr","Number":"3247","RawContent":null,"Title":"Update Permutation Feature Importance Samples","State":"open","Body":"This PR updates the samples for `PermutationFeatureImportance` and adds samples for `MulticlassClassification` and `Ranking` tasks.\r\n\r\nFixes #3242 ","Url":"https://github.com/dotnet/machinelearning/pull/3247","RelatedDescription":"Open PR \"Update Permutation Feature Importance Samples\" (#3247)"},{"Id":"430674219","IsPullRequest":true,"CreatedAt":"2019-04-08T21:49:19","Actor":"ganik","Number":"3246","RawContent":null,"Title":"[WIP] Add NaiveBayes sample","State":"open","Body":"repros #3226","Url":"https://github.com/dotnet/machinelearning/pull/3246","RelatedDescription":"Open PR \"[WIP] Add NaiveBayes sample\" (#3246)"},{"Id":"430671588","IsPullRequest":true,"CreatedAt":"2019-04-08T21:41:55","Actor":"ganik","Number":"3245","RawContent":null,"Title":"[WIP] NaiveBayes sample added","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3245","RelatedDescription":"Closed or merged PR \"[WIP] NaiveBayes sample added\" (#3245)"},{"Id":"430662559","IsPullRequest":true,"CreatedAt":"2019-04-08T21:16:21","Actor":"Ivanidzo4ka","Number":"3244","RawContent":null,"Title":"Normalize documentation","State":"open","Body":"towards #1209 ","Url":"https://github.com/dotnet/machinelearning/pull/3244","RelatedDescription":"Open PR \"Normalize documentation\" (#3244)"},{"Id":"430655782","IsPullRequest":false,"CreatedAt":"2019-04-08T20:58:58","Actor":"zeahmed","Number":"3243","RawContent":null,"Title":"SchemaShape.Column constructor is internal???","State":"open","Body":"`IEstimator` is a public interface that allows to create new estimators in ML.NET using NuGet only. The interface is public which defines two methods `Fit` and `GetOutputSchema`.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/1724da898d8cff88543fcf9e7b356ef0989b7bf7/src/Microsoft.ML.Core/Data/IEstimator.cs#L301\r\n\r\nThe `GetOutputSchema` method takes `SchemaShape` as input. The only way to create `SchemaShape` is through its constructor that takes `SchemaShape.Column` as input.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/1724da898d8cff88543fcf9e7b356ef0989b7bf7/src/Microsoft.ML.Core/Data/IEstimator.cs#L129\r\n\r\nHowever, the only constructor of `SchemaShape.Column`  is internal which blocks external user to create new estimators.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/1724da898d8cff88543fcf9e7b356ef0989b7bf7/src/Microsoft.ML.Core/Data/IEstimator.cs#L62\r\n\r\nHow can I create a new estimator using NuGet only?","Url":"https://github.com/dotnet/machinelearning/issues/3243","RelatedDescription":"Open issue \"SchemaShape.Column constructor is internal???\" (#3243)"},{"Id":"430653508","IsPullRequest":false,"CreatedAt":"2019-04-08T20:53:06","Actor":"rogancarr","Number":"3242","RawContent":null,"Title":"Clean up PFI Documentation","State":"open","Body":"The current documentation for Permutation Feature Importance does not cover a few use cases, and uses an old style.\r\n\r\nRelated to #1209","Url":"https://github.com/dotnet/machinelearning/issues/3242","RelatedDescription":"Open issue \"Clean up PFI Documentation\" (#3242)"},{"Id":"430652379","IsPullRequest":true,"CreatedAt":"2019-04-08T20:50:17","Actor":"rogancarr","Number":"3241","RawContent":null,"Title":"Update Feature Contribution Calculation Samples","State":"open","Body":"This PR cleans up the samples for FCC and creates a new one specifically for calibrated learners.\r\n\r\nFixes #3233 ","Url":"https://github.com/dotnet/machinelearning/pull/3241","RelatedDescription":"Open PR \"Update Feature Contribution Calculation Samples\" (#3241)"},{"Id":"430651595","IsPullRequest":true,"CreatedAt":"2019-04-08T20:48:27","Actor":"zeahmed","Number":"3240","RawContent":null,"Title":"Cherry pick for samples (Text)","State":"open","Body":"This PR cherry picks the following commits from the master related to text transforms.\r\n\r\n#3120\r\n#3123\r\n#3133\r\n#3142\r\n#3156\r\n#3177\r\n#3183\r\n#3191","Url":"https://github.com/dotnet/machinelearning/pull/3240","RelatedDescription":"Open PR \"Cherry pick for samples (Text)\" (#3240)"},{"Id":"430627192","IsPullRequest":false,"CreatedAt":"2019-04-08T19:48:49","Actor":"eerhardt","Number":"3239","RawContent":null,"Title":"Make it easier to use ML.NET in an ASP.NET app/service","State":"open","Body":"## Problem\r\nWith `1.0.0-preview` bits, it is currently harder than it needs to be to use ML.NET inside an ASP.NET service or application. The first problem users hit is whether they can cache a `PredictionEngine` statically and reuse it for multiple requests. As described in #1789, you cannot use a PredictionEngine on multiple threads at the same time. Doing so will cause problems in your application.\r\n\r\nThus the recommendation is to use a pooling technique, but writing one from scratch is rather hard and potentially error prone.\r\n\r\nAlso, by default the MLContext's Log operation is not aware of any logging infrastructure currently used by ASP.NET apps/services. Thus the log goes nowhere, and is lost.\r\n\r\n## Proposal\r\nWe propose to add a new library (`Microsoft.ML.Extensions?`, `Microsoft.Extensions.ML?`) that is aware of both `Microsoft.ML` and `Microsoft.Extensions.DependencyInjection`/`Microsoft.Extensions.Logging` and glues the two together. This should make it much easier to consume ML.NET models inside ASP.NET apps/services, as well as any other app model that integrates with the `Microsoft.Extensions.*` libraries.\r\n\r\n### Usage\r\nAdding a new ML.NET model into an ASP.NET application could be as simple as two steps:\r\n\r\n1. Add a PredictionEnginePool in your Startup.cs:\r\n\r\n```C#\r\n    // This method gets called by the runtime. Use this method to add services to the container.\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services\r\n            .AddPredictionEnginePool<SentimentIssue, SentimentPrediction>(\"SentimentModel.zip\");\r\n\r\n        // other service configuration\r\n    }\r\n```\r\n\r\n2. In any controller that needs to make a prediction, inject the PredictionEngine pool in the constructor, and use it where necessary:\r\n\r\n```C#\r\n[ApiController]\r\npublic class PredictionController : ControllerBase\r\n{\r\n    private PredictionEnginePool<SentimentIssue, SentimentPrediction> _predictionEnginePool;\r\n\r\n    public PredictionController(PredictionEnginePool<SentimentIssue, SentimentPrediction> predictionEnginePool)\r\n    {\r\n        _predictionEnginePool = predictionEnginePool;\r\n    }\r\n\r\n    [HttpGet()]\r\n    public ActionResult<SentimentPrediction> GetSentiment([FromQuery]SentimentIssue input)\r\n    {\r\n        return _predictionEnginePool.Predict(input);\r\n    }\r\n}\r\n```\r\n\r\n### Other potential scenarios\r\n1. Being able to add a model `.zip` file from sources other than a file path\r\n    1. Azure Blob Storage\r\n    2. A SQL Database\r\n    3. Any URL\r\n2. Being able to automatically reload an updated model, if the file/URL changes (using FileWatcher or ETag or some other mechanism).\r\n3. Being able to have different \"named\" models for scenarios like A/B testing where you want 90% of users to get Model A and 10% to get Model B.\r\n\r\n@glennc @CESARDELATORRE @glebuk @TomFinley ","Url":"https://github.com/dotnet/machinelearning/issues/3239","RelatedDescription":"Open issue \"Make it easier to use ML.NET in an ASP.NET app/service\" (#3239)"},{"Id":"430599088","IsPullRequest":false,"CreatedAt":"2019-04-08T18:38:29","Actor":"Ivanidzo4ka","Number":"3238","RawContent":null,"Title":"GetNormalizerModelParameters would be nice to accept name of column instead of index","State":"open","Body":"```\r\nvar normalize = mlContext.Transforms.NormalizeMinMax(new InputOutputColumnPair[] { new InputOutputColumnPair(\"ANorm\", \"A\"), new InputOutputColumnPair(\"BNorm\", \"B\") }, fixZero: false);\r\n```\r\n\r\nSo right now in order to get parameters for `BNorm` column I need to do this:\r\n```\r\n (normalizeTransform.GetNormalizerModelParameters(1) as Microsoft.ML.Transforms.NormalizingTransformer.AffineNormalizerModelParameters<ImmutableArray<float>>);\r\n```\r\n\r\nCan we have another function which would accept name of column instead of index in `InputOutputColumnPair` array?\r\n\r\n```\r\n (normalizeTransform.GetNormalizerModelParameters(\"BNorm\") as Microsoft.ML.Transforms.NormalizingTransformer.AffineNormalizerModelParameters<ImmutableArray<float>>);\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3238","RelatedDescription":"Open issue \"GetNormalizerModelParameters would be nice to accept name of column instead of index\" (#3238)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-10T05:30:33.2587319Z","RunDurationInMilliseconds":619}