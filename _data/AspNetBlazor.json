{"Data":{"GitHubIssues":{"Issues":[{"Id":"340475493","IsPullRequest":false,"CreatedAt":"2018-07-12T03:20:21","Actor":"yangyang80","Number":"1121","RawContent":null,"Title":"Is there a way to get the relationship between a child component and its parent component? ","State":"open","Body":"Hi,\r\n\r\nI am a newer for Blazor. My component is as the following:\r\n`<mycomponent>`\r\n`<complexproperty1 propertya=\"true\" propertyb=\"1\"></complexproperty1>`\r\n`<complexproperty2 propertya=\"true\" propertyb=\"1\"></complexproperty2>`\r\n`</mycomponent>`\r\nThe child components are some complex properties of mycomponent. I want to get the relationship between the child component and its parent. For example, I want to get the parent component instance in complexproperty1. The complexproperty1 component has no dom element for it. But I cannot find a way to do that. Is there any way to get that? Any help would be appreciated.\r\nBTW, I don't know if it is correct way to implement a Blazor component in this way.","Url":"https://github.com/aspnet/Blazor/issues/1121","RelatedDescription":"Open issue \"Is there a way to get the relationship between a child component and its parent component? \" (#1121)"},{"Id":"340429683","IsPullRequest":false,"CreatedAt":"2018-07-11T22:37:32","Actor":"Lupusa87","Number":"1120","RawContent":null,"Title":"How to wait when image load is completed","State":"open","Body":"I need to load image in canvas, than to do another drawings.\r\nWhen I call js function from blazor it is not waiting image load and continues execution, in result my logic is mismached.\r\n\r\nInside javascript when we set src property js continues execution and fires onload when image is completely loaded.\r\n```\r\n    var img = new Image();\r\n    img.onload = function () {\r\n    };\r\n    img.src = imgPath;\r\n```\r\nIt looks like js itself is starting async task and calls callback when it's done.\r\n\r\nActually I need exactly to know (in c# code) when image is loaded, to do next steps.\r\nSo I need force c# or js to wait till img.onload fires.\r\n\r\nCan't find correct way for this, tried several approaches (including js interop async calls) no one was successful.\r\n\r\nOne solution (with I didn't tried) can be to call .net method from img.onload as callback, but to be honest I don't need to have callback hell in my blazor code.\r\n\r\nCan js interop solve this case already?\r\nIf not is it possible to implement this functional?\r\n\r\nMaybe I am doing or saying something wrong, or this is not correct place for asking.\r\nIn this case I am sorry and we can close issue.","Url":"https://github.com/aspnet/Blazor/issues/1120","RelatedDescription":"Open issue \"How to wait when image load is completed\" (#1120)"},{"Id":"340287942","IsPullRequest":false,"CreatedAt":"2018-07-11T21:00:43","Actor":"budoray","Number":"1117","RawContent":null,"Title":"Hosted template fails to render when adding Microsoft.AspNetCore.Signalr.Client","State":"closed","Body":"Create a new ASP.NET Core Web Application ==> Blazor (ASP.NET Core hosted)\r\nUpdate Microsoft.AspNetCore.App to v2.1.2 via Nuget for Server application\r\nInstall Microsoft.AspNetCore.SignalR v1.0.2 via Nuget for Server application\r\nRun IIS Express\r\nSample template renders fine.\r\nInstall Microsoft.AspNetCore.SignalR.Client via Nuget for Client application\r\nRun IIS Express\r\n'Loading...' text from Client index.html renders fine\r\nLoading text disappears and nothing else is rendered.\r\n\r\nNo error messages. Removed the SignalR.Client package and the site renders just fine. \r\n\r\nUsing Chrome DevTools reveals a nice long stacktrace.\r\n\r\nUncaught (in promise) Error: System.MissingMethodException: Method not found: bool System.Collections.Generic.ISet`1.Add(!0) ....\r\n\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.5\r\nVisualStudio.15.Release/15.7.5+27703.2042\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nASP.NET Core Blazor Language Services   0.4.0-rtm-10319\r\n","Url":"https://github.com/aspnet/Blazor/issues/1117","RelatedDescription":"Closed issue \"Hosted template fails to render when adding Microsoft.AspNetCore.Signalr.Client\" (#1117)"},{"Id":"340299121","IsPullRequest":false,"CreatedAt":"2018-07-11T20:58:41","Actor":"cores-system","Number":"1118","RawContent":null,"Title":"Blazor does not see a change if they are made through JavaScript","State":"closed","Body":"Hello, if you make changes through JavaScript, then in blazor the data does not change.\r\n**Example**: https://youtu.be/kHkkLWsMSF8\r\n\r\n```\r\n@page \"/testpage\"\r\n@layout TestLayout\r\n\r\n<div>\r\n    <select bind=\"@value\" style=\"width: 300px;\">\r\n        <option value=\"None\" selected=\"\">None</option>\r\n        <option value=\"GoogleAuth\">Google Authenticator</option>\r\n        <option value=\"Email\">Email</option>\r\n        <option value=\"Sms\">Sms</option>\r\n    </select>\r\n</div>\r\n\r\n<div style=\"position:  absolute; margin-top: 25px;\">\r\n    <b>bind</b>: @value\r\n</div>\r\n\r\n@functions\r\n{\r\n    string value;\r\n}\r\n```\r\n","Url":"https://github.com/aspnet/Blazor/issues/1118","RelatedDescription":"Closed issue \"Blazor does not see a change if they are made through JavaScript\" (#1118)"},{"Id":"340392317","IsPullRequest":false,"CreatedAt":"2018-07-11T20:24:16","Actor":"RemiBou","Number":"1119","RawContent":null,"Title":"ElementRef not changed not html element when passed to InvokeAsync","State":"open","Body":"### ElementRef not changed not html element when passed to InvokeAsync\r\nIf we want to send an ElementRef to a js async method, the parameter is seen as the json holding the ref id instead of html element\r\n\r\n### Minimal repro steps\r\n1. Create an async js function excpecting an html element\r\n2. Register it with Blazor.registerFunction (Blazor 0.4)\r\n3. Call this method from C# with an ElementRef\r\n\r\n### Expected result\r\nThe js function should be able to do what it wants with the html element\r\n\r\n### Actual result\r\nThe parameter is not an html element.\r\n\r\nI just looked at the dev branch and it seems this bug was fixed in JSRuntime. But I just want to be sure.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1119","RelatedDescription":"Open issue \"ElementRef not changed not html element when passed to InvokeAsync\" (#1119)"},{"Id":"340100110","IsPullRequest":true,"CreatedAt":"2018-07-11T05:47:18","Actor":"rynowak","Number":"1116","RawContent":null,"Title":"[WIP] Blazor on the server","State":"open","Body":"Putting this out there for early feedback. \r\n\r\nThings are basically in the right places, and rendering and event handling works. I still have some issues to work out with how our client code deals with HTTP clients.\r\n\r\nI haven't made any serious attempts at error handling yet.","Url":"https://github.com/aspnet/Blazor/pull/1116","RelatedDescription":"Open PR \"[WIP] Blazor on the server\" (#1116)"},{"Id":"339150513","IsPullRequest":false,"CreatedAt":"2018-07-10T23:27:08","Actor":"Lupusa87","Number":"1095","RawContent":null,"Title":"Blazor component custom event","State":"closed","Body":"I have Blazor custom component, want to add **custom event** and than to subscribe for it where it will be consumed.\r\nPlease see [my project](https://lupusablazordemos.azurewebsites.net/)\r\nFor example I am adding **several** Custom components on index page, my custom component has **delete icon**, when user clicks on particular components delete icon it will **invoke delete event**.\r\nWhen I add component to index page I need to **subscribe** for this event and when it will be fired to remove this component, in subscribed method will be found this component (from eventArgs ), remove it from list and refresh UI.\r\nHave tried some ways but **can't find solution** till now.\r\nThinking to make parent component (also Blazor custom component) where will happen adding child components and to do it **from code** with RenderTreeBuilder, so in this case I think will able to subscribe on custom event. I was not able to override BuildRenderTree in index page, guess because it is not blazor component.\r\nWhen I add custom component to UI and try to subscribe it **can't see my custom event**.\r\nPlease see some code:\r\n```\r\npublic class Component1_Logic : BlazorComponent\r\n{\r\n        public event EventHandler onDelete;\r\n\r\n        void RiseOnDelete()\r\n        {\r\n           onDelete?.Invoke(this, EventArgs.Empty);\r\n        }\r\n\r\n\r\n       //called from delete icon\r\n        void cmd_delete()\r\n        {\r\n           RiseOnDelete();\r\n        } \r\n}\r\n```\r\nIndex page UI\r\n// can't see onDelete event\r\n`<Component1 onDelete=\"@someMethod\"/>`\r\n\r\nI am not sure how correct is this text but hope you understand what I aim to achieve.\r\n\r\nAlso related issue:\r\n How to bind custom component direct way?\r\n```\r\n @foreach (var city in Components_List)\r\n    {\r\n        <div>\r\n          // regular way\r\n           <Component1 city_Name=\"@city.Name\" canvas_WidthAndHeight=\"@city.WidthAndHeight\" time_Diff=\"@city.TimeDiff\"/>\r\n\r\n         // desired syntax, here city is custom component\r\n           @city\r\n        </div>\r\n    }\r\n```\r\n\r\nThank you!","Url":"https://github.com/aspnet/Blazor/issues/1095","RelatedDescription":"Closed issue \"Blazor component custom event\" (#1095)"},{"Id":"339983067","IsPullRequest":false,"CreatedAt":"2018-07-10T20:16:37","Actor":"KlausEvenEnevoldsen","Number":"1115","RawContent":null,"Title":"HttpClient for communication between client and server?","State":"closed","Body":"Hi\r\n\r\nWhat are your plans regarding communication between client and server in Blazor?\r\n\r\nIn the current template you use HttpClient which is pretty low-level. Maybe the shared project could be used for something. I think that in 2018 we should not spend time writing code that use HttpClient when we control the code on both the client and the server. There has to be a better way, do you agree? :-)\r\n\r\nBR Klaus Even Enevoldsen","Url":"https://github.com/aspnet/Blazor/issues/1115","RelatedDescription":"Closed issue \"HttpClient for communication between client and server?\" (#1115)"},{"Id":"339769774","IsPullRequest":false,"CreatedAt":"2018-07-10T14:51:10","Actor":"Suchiman","Number":"1113","RawContent":null,"Title":"MyGet Feed broken since rename of dev to master","State":"closed","Body":"It seems that the renaming of the dev branch to master broke CI to https://dotnet.myget.org/gallery/blazor-dev","Url":"https://github.com/aspnet/Blazor/issues/1113","RelatedDescription":"Closed issue \"MyGet Feed broken since rename of dev to master\" (#1113)"},{"Id":"339859021","IsPullRequest":false,"CreatedAt":"2018-07-10T14:07:30","Actor":"RSIFormation","Number":"1114","RawContent":null,"Title":"SVG propertie binding failed","State":"open","Body":"Binding svg element properties does not work. Here, I just try to bind Height and Width properties :\r\n\r\n```\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n     height=\"@Height\"\r\n     width=\"@Width\">\r\n    <ellipse cx=\"200\"\r\n             cy=\"80\"\r\n             rx=\"100\"\r\n             ry=\"50\"\r\n             style=\"fill:@Color;stroke:purple;stroke-width:@Thickness\" />\r\n</svg>\r\n\r\n<br />\r\n\r\nNew Height ? <input type=\"number\" bind=\"@Height\" />\r\nNew Width ? <input type=\"number\" bind=\"@Width\" />\r\n\r\n@functions\r\n{\r\n    private int Width {get; set;} = 200;\r\n    private int Height {get; set;} = 200;\r\n    private string Color {get; set;} = \"Green\";\r\n    private int Thickness { get; set; } = 2;\r\n}\r\n```\r\n\r\nOn first display, the SVG rendering is ok; binded properties values are used to render the SVG item (eg Width=200 & Height=200). But, when updating Width or Height values through INPUT control, following exception is thrown :\r\n\r\nSCRIPT5022: Microsoft.AspNetCore.Blazor.Browser.Interop.JavaScriptException: Cannot set attribute on non-element child\r\nError: Cannot set attribute on non-element child\r\n   at BrowserRenderer.prototype.applyEdits (http://localhost:59792/_framework/blazor.js:988:25)\r\n   at BrowserRenderer.prototype.updateComponent (http://localhost:59792/_framework/blazor.js:948:9)\r\n   at renderBatch (http://localhost:59792/_framework/blazor.js:347:9)\r\n   at Anonymous function (http://localhost:59792/_framework/wasm/mono.js:1:24341)\r\n   at _emscripten_asm_const_iiiiii (http://localhost:59792/_framework/wasm/mono.js:1:25665)\r\n   at Module[_mono_wasm_invoke_method] (http://localhost:59792/_framework/wasm/mono.js:1:172790)\r\n   at callMethod (http://localhost:59792/_framework/blazor.js:620:13)\r\n   at raiseEvent (http://localhost:59792/_framework/blazor.js:1220:5)\r\n   at Anonymous function (http://localhost:59792/_framework/blazor.js:937:13)\r\n   at EventDelegator.prototype.onGlobalEvent (http://localhost:59792/_framework/blazor.js:1374:21)\r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,T2,TRes] (System.String identifier, T0 arg0, T1 arg1, T2 arg2) <0x1b45e00 + 0x00054> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Interop.RegisteredFunction.InvokeUnmarshalled[T0,T1,TRes] (System.String identifier, T0 arg0, T1 arg1) <0x1b45d18 + 0x00022> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.UpdateDisplay (Microsoft.AspNetCore.Blazor.Rendering.RenderBatch& batch) <0x1b45c30 + 0x0001c> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.ProcessRenderQueue () <0x1a03ea0 + 0x000a0> in <72270648a3b54698885c6ba1c18107cc>:0 \r\n  at Microsoft.AspNetCore.Blazor.Rendering.Renderer.DispatchEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1e3e518 + 0x00074> in <72270648a3b54698885c6ba1c18107cc>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRenderer.DispatchBrowserEvent (System.Int32 componentId, System.Int32 eventHandlerId, Microsoft.AspNetCore.Blazor.UIEventArgs eventArgs) <0x1e3b378 + 0x00020> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\n  at Microsoft.AspNetCore.Blazor.Browser.Rendering.BrowserRendererEventDispatcher.DispatchEvent (System.String eventDescriptorJson, System.String eventArgsJson) <0x1dff9f0 + 0x0005a> in <7da830e0eabd429898584695ab9fd9e5>:0 ","Url":"https://github.com/aspnet/Blazor/issues/1114","RelatedDescription":"Open issue \"SVG propertie binding failed\" (#1114)"},{"Id":"339752076","IsPullRequest":false,"CreatedAt":"2018-07-10T08:58:42","Actor":"Daendel","Number":"1112","RawContent":null,"Title":"Absolute file paths in Blazor DLLs","State":"open","Body":"I created a client-server blazor app that that runs the server and client at once. It can be run by using the following .BAT command:\r\nexplorer.exe \"http://localhost:5000\"\r\ndotnet.exe \"C:\\BlazorExample.Server\\bin\\Release\\netcoreapp2.1\\BlazorExample.Server.dll\"\r\n\r\nThis works as expected. Only I cannot change the location of the DLLs. If I do so I get the following error:\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using 'C:\\Users\\m.bergman\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\nApplication startup exception: System.ArgumentException: The directory name 'T:\\_zooi\\Max\\BlazorTest\\Server-client\\BlazorExample.Client\\bin\\Release\\netstandard2.0\\dist\\' does not exist.\r\nParameter name: path\r\n   at System.IO.FileSystemWatcher..ctor(String path, String filter)\r\n   at System.IO.FileSystemWatcher..ctor(String path)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider.CreateFileWatcher(String root, ExclusionFilters filters)\r\n   at Microsoft.AspNetCore.Builder.BlazorAppBuilderExtensions.UseBlazor(IApplicationBuilder applicationBuilder, BlazorOptions options)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.ArgumentException: The directory name 'T:\\_zooi\\Max\\BlazorTest\\Server-client\\BlazorExample.Client\\bin\\Release\\netstandard2.0\\dist\\' does not exist.\r\nParameter name: path\r\n   at System.IO.FileSystemWatcher..ctor(String path, String filter)\r\n   at System.IO.FileSystemWatcher..ctor(String path)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider.CreateFileWatcher(String root, ExclusionFilters filters)\r\n   at Microsoft.AspNetCore.Builder.BlazorAppBuilderExtensions.UseBlazor(IApplicationBuilder applicationBuilder, BlazorOptions options)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n\r\nUnhandled Exception: System.ArgumentException: The directory name 'T:\\_zooi\\Max\\BlazorTest\\Server-client\\BlazorExample.Client\\bin\\Release\\netstandard2.0\\dist\\' does not exist.\r\nParameter name: path\r\n   at System.IO.FileSystemWatcher..ctor(String path, String filter)\r\n   at System.IO.FileSystemWatcher..ctor(String path)\r\n   at Microsoft.Extensions.FileProviders.PhysicalFileProvider.CreateFileWatcher(String root, ExclusionFilters filters)\r\n   at Microsoft.AspNetCore.Builder.BlazorAppBuilderExtensions.UseBlazor(IApplicationBuilder applicationBuilder, BlazorOptions options)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token, String shutdownMessage)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at BlazorExample.Server.Program.Main(String[] args) in T:\\_zooi\\Max\\BlazorTest\\Server-client\\BlazorExample.Server\\Program.cs:line 12\r\n```\r\n\r\nShouldn't the file paths in the DLL be relative?\r\n\r\nBy the way: is this a good way to run a Blazor app (including server) locally? If not, I hope you have some suggestions. Thanks in advance.","Url":"https://github.com/aspnet/Blazor/issues/1112","RelatedDescription":"Open issue \"Absolute file paths in Blazor DLLs\" (#1112)"},{"Id":"339447285","IsPullRequest":true,"CreatedAt":"2018-07-10T08:56:01","Actor":"SteveSandersonMS","Number":"1105","RawContent":null,"Title":"Avoid globally unique BrowserRenderer IDs","State":"closed","Body":"I'm going through all teh codez to check for places where we're falsely assuming there's only a single user. For example, anywhere we use `static` to store per-user state. Any such code needs to be changed so it's safe for remote rendering. Fortunately there only appears to be two places where this applied, addressed by this PR and by #1103.\r\n\r\nThis PR is a partial step towards not letting users interfere with each other by dispatching events with somebody else's browserRendererId. The fix is not to have globally-unique IDs at all, but rather store the `BrowserRenderer` instances in user-scoped state. We still have browser renderer IDs, but they are per-circuit, which also has the benefit that we won't overflow the int value in the long run.\r\n\r\nI can't yet really put in the user-scoped state because that depends on the work in #1092. Somehow when there are incoming JS interop calls, we need to set the correct `IJSRuntime` for that user, plus maybe we need an equivalent context to have the correct `IServiceProvider` for that user. Will discuss with @rynowak.\r\n\r\nIn the meantime this PR just simplifies and clarifies where the per-user storage needs to be plugged in.","Url":"https://github.com/aspnet/Blazor/pull/1105","RelatedDescription":"Closed or merged PR \"Avoid globally unique BrowserRenderer IDs\" (#1105)"},{"Id":"339433302","IsPullRequest":true,"CreatedAt":"2018-07-10T08:52:20","Actor":"SteveSandersonMS","Number":"1103","RawContent":null,"Title":"Change ElementRef IDs to be strings, not ints","State":"closed","Body":"We don't want to use ints for elementref IDs for remote rendering, because:\r\n\r\n1. Eventually we could run out of them. A few billion isn't enough.\r\n2. Having a global static incrementing sequence discloses cross-user state (number of IDs assigned)\r\n\r\nThis PR changes the IDs to be strings.\r\n\r\nThen for non-WebAssembly scenarios we use GUIDs. For WebAssembly we use an incrementing sequence of long values (with `.ToString()`), just because there's no need to go through all the GUID code paths. That's just an internal implementation detail though. Consumers just treat the IDs as opaque strings.","Url":"https://github.com/aspnet/Blazor/pull/1103","RelatedDescription":"Closed or merged PR \"Change ElementRef IDs to be strings, not ints\" (#1103)"},{"Id":"339691512","IsPullRequest":false,"CreatedAt":"2018-07-10T04:52:48","Actor":"irperez","Number":"1111","RawContent":null,"Title":"@functions section be flexible enough to be placed in a separate file","State":"closed","Body":"While it may be ideal to have the \"@functions\" section all on one single file, it may not scale well with a complex component or page.\r\n\r\nJust like we can with JavaScript, it may be ideal to have an option to have the logic/code in a separate file.  In fact, if its in a separate file, i'd imagine intellisense and tooling is probably easier.","Url":"https://github.com/aspnet/Blazor/issues/1111","RelatedDescription":"Closed issue \"@functions section be flexible enough to be placed in a separate file\" (#1111)"},{"Id":"339614001","IsPullRequest":false,"CreatedAt":"2018-07-09T23:34:00","Actor":"arapinha","Number":"1110","RawContent":null,"Title":"HttpClient PostJsonAsync","State":"closed","Body":"Is it possible to use PostJsonAsync but return HttpResponseMessage instead of an object?","Url":"https://github.com/aspnet/Blazor/issues/1110","RelatedDescription":"Closed issue \"HttpClient PostJsonAsync\" (#1110)"},{"Id":"339526161","IsPullRequest":false,"CreatedAt":"2018-07-09T23:15:42","Actor":"mkArtakMSFT","Number":"1106","RawContent":null,"Title":"How To Use Blazor With MVC","State":"closed","Body":"_From @Sheko007 on July 9, 2018 2:14_\n\nFeature request?:\r\n\r\n\r\n\r\n\r\n#### Description of the problem:\r\n\r\nCan't Use Blazor With MVC \r\n\r\n Microsoft.AspNetCore.App \r\n\r\n\n\n_Copied from original issue: aspnet/Mvc#8033_","Url":"https://github.com/aspnet/Blazor/issues/1106","RelatedDescription":"Closed issue \"How To Use Blazor With MVC\" (#1106)"},{"Id":"339591703","IsPullRequest":false,"CreatedAt":"2018-07-09T22:09:28","Actor":"Lupusa87","Number":"1109","RawContent":null,"Title":"Blazor binding issue","State":"closed","Body":"I have simple component to display two propeties.\r\nOn index page I generate this components from list with option to delete.\r\nWhen I delete first one, seconds name is not updating, staying old value.\r\nYou can see [video](https://www.youtube.com/watch?time_continue=0&v=E25LA4MFzZo) too: \r\n\r\nComponent\r\n```\r\n<div class=\"my-component\">\r\n    <h2>ID: @ID</h2>\r\n    <h2>Name: @Name</h2>\r\n</div>\r\n\r\n@functions\r\n{\r\n    [Parameter]\r\n    private int ID { get; set; }\r\n    public string Name  = Guid.NewGuid().ToString(\"d\").Substring(1, 8);\r\n}\r\n```\r\nIndex Page\r\n```\r\n@addTagHelper *, BlazorLib1\r\n@using BlazorLib1;\r\n@page \"/\"\r\n\r\n\r\n<div>\r\n\r\n    @foreach (var item in tmp_list)\r\n    {\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" onclick=@(() => RemoveItem(item))>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n\r\n        <div>\r\n            <Component1 ID=\"@item.id\" ref=\"item.component\" />\r\n        </div>\r\n    }\r\n\r\n    <button class=\"btn btn-primary\" onclick=\"@refresh\">Refresh</button>\r\n\r\n</div>\r\n\r\n@functions\r\n{\r\n\r\n    List<myClass> tmp_list = new List<myClass>() {\r\n          new myClass() { id = 1},\r\n          new myClass() { id = 2} };\r\n\r\n    public void refresh()\r\n    {\r\n        foreach (var item in tmp_list)\r\n        {\r\n            Console.WriteLine(item.id + \": \" + item.component.Name);\r\n        }\r\n        Console.WriteLine(\"        ----          \");\r\n        this.StateHasChanged();\r\n    }\r\n\r\n    public void RemoveItem(myClass a)\r\n    {\r\n        tmp_list.Remove(a);\r\n        this.StateHasChanged();\r\n    }\r\n\r\n    public class myClass\r\n    {\r\n        public int id { get; set; }\r\n        public Component1 component { get; set; }\r\n    }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1109","RelatedDescription":"Closed issue \"Blazor binding issue\" (#1109)"},{"Id":"339555113","IsPullRequest":true,"CreatedAt":"2018-07-09T18:16:12","Actor":"RemiBou","Number":"1108","RawContent":null,"Title":"trying to fix 1009 by changing the AssignToProperties method behavior","State":"open","Body":"So here is my other attempt on fixing this bug, I'll let the blazor team decide which way they prefer to go","Url":"https://github.com/aspnet/Blazor/pull/1108","RelatedDescription":"Open PR \"trying to fix 1009 by changing the AssignToProperties method behavior\" (#1108)"},{"Id":"339103562","IsPullRequest":true,"CreatedAt":"2018-07-09T18:13:28","Actor":"rynowak","Number":"1092","RawContent":null,"Title":"Add startup for client/mono Blazor","State":"closed","Body":"This change adds a host builder, and the startup pattern for client-side\r\nBlazor apps running in mono/wasm. This will help us align better with\r\nserver side Blazor.","Url":"https://github.com/aspnet/Blazor/pull/1092","RelatedDescription":"Closed or merged PR \"Add startup for client/mono Blazor\" (#1092)"},{"Id":"339535407","IsPullRequest":false,"CreatedAt":"2018-07-09T17:12:48","Actor":"joshpearce","Number":"1107","RawContent":null,"Title":"Build failing for MVC Deployment","State":"open","Body":"OSX, running \"dotnet build\"\r\nDOTNET VERSION: 2.1.301\r\n\r\nBlazor app project file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <RunCommand>dotnet</RunCommand>\r\n    <RunArguments>blazor serve</RunArguments>\r\n    <LangVersion>7.3</LangVersion>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Browser\" Version=\"0.5.0-preview1-10334\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Build\" Version=\"0.5.0-preview1-10334\" />\r\n    <DotNetCliToolReference Include=\"Microsoft.AspNetCore.Blazor.Cli\" Version=\"0.5.0-preview1-10334\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nMVC app project file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Sqlite\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Server\" Version=\"0.5.0-preview1-10334\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\blazorApp\\blazorApp.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nError upon MVC app publish:\r\n\r\nJPMB:mvcApp joshuapearce$ dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /Users/joshuapearce/Dev/captainProton/mvcApp/mvcApp.csproj...\r\n  Restore completed in 19.64 ms for /Users/joshuapearce/Dev/captainProton/blazorApp/blazorApp.csproj.\r\n  Restore completed in 44.73 ms for /Users/joshuapearce/Dev/captainProton/blazorApp/blazorApp.csproj.\r\n  Restore completed in 638.92 ms for /Users/joshuapearce/Dev/captainProton/mvcApp/mvcApp.csproj.\r\n  blazorApp -> /Users/joshuapearce/Dev/captainProton/blazorApp/bin/Debug/netstandard2.0/blazorApp.dll\r\n  Blazor Build result -> 17 files in /Users/joshuapearce/Dev/captainProton/blazorApp/bin/Debug/netstandard2.0/dist\r\n/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.aspnetcore.razor.design/2.1.1/build/netstandard2.0/Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(69,5): error MSB4062: The \"Microsoft.AspNetCore.Razor.Tasks.RazorTagHelper\" task could not be loaded from the assembly /usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.aspnetcore.razor.design/2.1.1/build/netstandard2.0/../../tasks/netstandard2.0/Microsoft.AspNetCore.Razor.Tasks.dll. Assembly with same name is already loaded Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [/Users/joshuapearce/Dev/captainProton/mvcApp/mvcApp.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.aspnetcore.razor.design/2.1.1/build/netstandard2.0/Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets(69,5): error MSB4062: The \"Microsoft.AspNetCore.Razor.Tasks.RazorTagHelper\" task could not be loaded from the assembly /usr/local/share/dotnet/sdk/NuGetFallbackFolder/microsoft.aspnetcore.razor.design/2.1.1/build/netstandard2.0/../../tasks/netstandard2.0/Microsoft.AspNetCore.Razor.Tasks.dll. Assembly with same name is already loaded Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [/Users/joshuapearce/Dev/captainProton/mvcApp/mvcApp.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.71\r\n","Url":"https://github.com/aspnet/Blazor/issues/1107","RelatedDescription":"Open issue \"Build failing for MVC Deployment\" (#1107)"},{"Id":"339174864","IsPullRequest":false,"CreatedAt":"2018-07-09T15:29:29","Actor":"simonziegler","Number":"1098","RawContent":null,"Title":"MessagePack not supported by MonoPlatform?","State":"closed","Body":"I have experimented with using MessagePack (https://github.com/neuecc/MessagePack-CSharp) with Blazor to speed up serialization and deserialization over Http from server to client. I have checked that I can serialize and deserialize on the server with success, and that the byte array as it is created on the server is correctly decoded on the client (same sized array and the first and last bytes are the same).\r\n\r\nHowever it looks like Mono doesn't support MessagePack for use on the Blazor client -  see screen shot of Firefox's console output below. Anybody got any views? Am I doing something wrong (I hope so), or is this just unsupported stuff?\r\n\r\nThanks,     Simon\r\n\r\n![image](https://user-images.githubusercontent.com/11708435/42414646-42b81d54-8231-11e8-84a1-275b1a678183.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1098","RelatedDescription":"Closed issue \"MessagePack not supported by MonoPlatform?\" (#1098)"},{"Id":"339282794","IsPullRequest":false,"CreatedAt":"2018-07-09T15:27:01","Actor":"Sheko007","Number":"1100","RawContent":null,"Title":"How To Use it With MVC","State":"closed","Body":"How To Use Blazor with asp.net core MVC  ","Url":"https://github.com/aspnet/Blazor/issues/1100","RelatedDescription":"Closed issue \"How To Use it With MVC\" (#1100)"},{"Id":"339314252","IsPullRequest":false,"CreatedAt":"2018-07-09T15:24:42","Actor":"Thaina","Number":"1101","RawContent":null,"Title":"Native Blazor?","State":"closed","Body":"This might be weird approach but I wish we could have blazor compile project as native mobile app like cordova and nativescript instead of using Xamarin\r\n\r\nActually I think it would be possible to have wasm build from from blazor to plug inside nativescript toolchain\r\n\r\nIs it possible in anyway? or is it already in a future plan?","Url":"https://github.com/aspnet/Blazor/issues/1101","RelatedDescription":"Closed issue \"Native Blazor?\" (#1101)"},{"Id":"339324797","IsPullRequest":false,"CreatedAt":"2018-07-09T15:22:28","Actor":"doga6488","Number":"1102","RawContent":null,"Title":"Is there a way to use DOM elements in Blazor","State":"closed","Body":"Hi. Does Blazor provide to manipulate DOM elements ?(without js Interop).\r\n\r\nLike the javascript code below :\r\nvar x = document.getElementById(\"myText\");\r\ndocument.getElementById(\"myText\").value = \"Johnny Bravo\";\r\nThanks in advance.","Url":"https://github.com/aspnet/Blazor/issues/1102","RelatedDescription":"Closed issue \"Is there a way to use DOM elements in Blazor\" (#1102)"},{"Id":"339444161","IsPullRequest":false,"CreatedAt":"2018-07-09T15:19:03","Actor":"doga6488","Number":"1104","RawContent":null,"Title":"What is Javascript Glue code and what does it do?","State":"closed","Body":"I am researching architecture of Blazor and web assembly.I have a question about following illustrations:\r\nWhat is js glue code in this illustration(I guess it is a linker or something like that)\r\n![wasm-chain](https://user-images.githubusercontent.com/26219239/42452060-b476b28c-8391-11e8-845f-995ec76816a2.png)\r\n\r\nAnd where can we place it on this illustration, Does GlueCode correspond to blazor.js/mono.js ?\r\n![blazor](https://user-images.githubusercontent.com/26219239/42452339-64b5f75c-8392-11e8-89bb-f69b93ad1064.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1104","RelatedDescription":"Closed issue \"What is Javascript Glue code and what does it do?\" (#1104)"},{"Id":"339186019","IsPullRequest":true,"CreatedAt":"2018-07-09T12:47:07","Actor":"jnm2","Number":"1099","RawContent":null,"Title":"Removed trailing space from template survey link","State":"closed","Body":"Before:\r\n<img src=\"https://user-images.githubusercontent.com/8040367/42415716-bcfb6118-8225-11e8-95da-72fc089502ae.png\" width=\"50%\" />\r\n\r\nAfter:\r\n<img src=\"https://user-images.githubusercontent.com/8040367/42415715-b903541c-8225-11e8-94d9-35f7d1f77f98.png\" width=\"50%\" />","Url":"https://github.com/aspnet/Blazor/pull/1099","RelatedDescription":"Closed or merged PR \"Removed trailing space from template survey link\" (#1099)"},{"Id":"339163639","IsPullRequest":false,"CreatedAt":"2018-07-07T21:28:50","Actor":"MihaMarkic","Number":"1096","RawContent":null,"Title":"A directory of 3rd party Blazor components","State":"closed","Body":"I'm sure this question has been asked before, but right now I can't find it:\r\nis there a directory of 3rd party Blazor components.\r\n\r\nIt'd be certainly nice to have one.","Url":"https://github.com/aspnet/Blazor/issues/1096","RelatedDescription":"Closed issue \"A directory of 3rd party Blazor components\" (#1096)"},{"Id":"339166765","IsPullRequest":false,"CreatedAt":"2018-07-07T18:58:02","Actor":"ctrl-alt-d","Number":"1097","RawContent":null,"Title":"Error: \"The terminfo database is invalid.\" following instructions.","State":"closed","Body":"I just follow startup instructions and `Unhandled Exception: System.InvalidOperationException: The terminfo database is invalid.` error occurs:\r\n\r\n```\r\n[dani@localhost tmp]$ dotnet --version\r\n2.1.301\r\n[dani@localhost tmp]$ dotnet new -i Microsoft.AspNetCore.Blazor.Templates\r\n  Restoring packages for /home/dani/.templateengine/dotnetcli/v2.1.301/scratch/restore.csproj...\r\n  Installing Microsoft.AspNetCore.Blazor.Templates 0.4.0.\r\n  Generating MSBuild file /home/dani/.templateengine/dotnetcli/v2.1.301/scratch/obj/restore.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/dani/.templateengine/dotnetcli/v2.1.301/scratch/obj/restore.csproj.nuget.g.targets.\r\n  Restore completed in 2.73 sec for /home/dani/.templateengine/dotnetcli/v2.1.301/scratch/restore.csproj.\r\n...\r\n\r\n[dani@localhost tmp]$ dotnet new blazor -o BlazorApp1\r\nThe template \"Blazor (standalone)\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on BlazorApp1/BlazorApp1.csproj...\r\n  Restoring packages for /tmp/BlazorApp1/BlazorApp1.csproj...\r\n  Restore completed in 46.1 ms for /tmp/BlazorApp1/BlazorApp1.csproj.\r\n  Generating MSBuild file /tmp/BlazorApp1/obj/BlazorApp1.csproj.nuget.g.props.\r\n  Generating MSBuild file /tmp/BlazorApp1/obj/BlazorApp1.csproj.nuget.g.targets.\r\n  Restore completed in 141.32 ms for /tmp/BlazorApp1/BlazorApp1.csproj.\r\n\r\nRestore succeeded.\r\n\r\n[dani@localhost tmp]$ cd BlazorApp1\r\n[dani@localhost BlazorApp1]$ dotnet run\r\n\r\nUnhandled Exception: System.InvalidOperationException: The terminfo database is invalid.\r\n   at System.TermInfo.Database..ctor(String term, Byte[] data)\r\n   at System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\n   at System.TermInfo.Database.ReadDatabase(String term)\r\n   at System.TermInfo.Database.ReadActiveDatabase()\r\n   at System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\n   at System.Lazy`1.CreateValue()\r\n   at System.ConsolePal.EnsureInitializedCore()\r\n   at System.ConsolePal.ControlCHandlerRegistrar.Register()\r\n   at System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.AttachCtrlcSigtermShutdown(CancellationTokenSource cts, ManualResetEventSlim resetEvent, String shutdownMessage)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at Microsoft.AspNetCore.Blazor.Cli.Program.Main(String[] args)\r\n```\r\n\r\nRuns right with razor ( `dotnet new razor` )","Url":"https://github.com/aspnet/Blazor/issues/1097","RelatedDescription":"Closed issue \"Error: \"The terminfo database is invalid.\" following instructions.\" (#1097)"},{"Id":"339145168","IsPullRequest":false,"CreatedAt":"2018-07-07T13:13:37","Actor":"uazo","Number":"1094","RawContent":null,"Title":"Implementation of RenderFragment<T>","State":"open","Body":"I would like to submit a possible implementation of `RenderFragment<T>` to the Blazor community. Source code is here: https://github.com/uazo/Blazor/tree/dev-experimental-templated-component. \r\nThis time before doing a pull request I ask here :)\r\n\r\nAn example is worth a thousand words:\r\n\r\n```\r\n<ComponentTemplateTest>\r\n    <ComponentTemplateTest.Template>\r\n        test simple template\r\n    </ComponentTemplateTest.Template>\r\n\r\n    <ComponentTemplateTest.TemplateWithInt WithParams=\"param1\">\r\n        @param1\r\n    </ComponentTemplateTest.TemplateWithInt>\r\n\r\n    <ComponentTemplateTest.TemplateWithObject WithParams=\"paramObject\">\r\n        <div>\r\n            propint = @paramObject.PropInt\r\n        </div>\r\n        <div>\r\n            PropString = @paramObject.PropString\r\n        </div>\r\n    </ComponentTemplateTest.TemplateWithObject>\r\n\r\n    <div>this is childcontent (1)</div>\r\n    <div>this is childcontent (2)</div>\r\n</ComponentTemplateTest>\r\n```\r\n\r\nwill be renderer as\r\n\r\n```\r\nbuilder.OpenComponent<StandaloneApp.Pages.testtemplated.ComponentTemplateTest>(3);\r\nbuilder.AddAttribute(4, \"ChildContent\", (Microsoft.AspNetCore.Blazor.RenderFragment)((builder2) => {\r\n    builder2.OpenElement(5, \"div\");\r\n    builder2.AddContent(6, \"this is childcontent (1)\");\r\n    builder2.CloseElement();\r\n    builder2.OpenElement(7, \"div\");\r\n    builder2.AddContent(8, \"this is childcontent (2)\");\r\n    builder2.CloseElement();\r\n}\r\n));\r\nbuilder.AddAttribute(9, \"Template\", (Microsoft.AspNetCore.Blazor.RenderFragment)((builder2) => {\r\n    builder2.AddContent(10, \"\\n        test simple template\\n    \");\r\n}\r\n));\r\nbuilder.AddAttribute(11, \"TemplateWithInt\", (Microsoft.AspNetCore.Blazor.RenderFragment<System.Int32>)((builder2, param1) => {\r\n    builder2.AddContent(12, \"\\n        \");\r\n    builder2.AddContent(13, param1);\r\n    builder2.AddContent(14, \"\\n    \");\r\n}\r\n));\r\nbuilder.AddAttribute(15, \"TemplateWithObject\", (Microsoft.AspNetCore.Blazor.RenderFragment<StandaloneApp.Pages.testtemplated.ComponentTemplateTest.TestObject>)((builder2, paramObject) => {\r\n    builder2.AddContent(16, \"\\n        \");\r\n    builder2.OpenElement(17, \"div\");\r\n    builder2.AddContent(18, \"\\n            propint = \");\r\n    builder2.AddContent(19, paramObject.PropInt);\r\n    builder2.AddContent(20, \"\\n        \");\r\n    builder2.CloseElement();\r\n    builder2.AddContent(21, \"\\n        \");\r\n    builder2.OpenElement(22, \"div\");\r\n    builder2.AddContent(23, \"\\n            PropString = \");\r\n    builder2.AddContent(24, paramObject.PropString);\r\n    builder2.AddContent(25, \"\\n        \");\r\n    builder2.CloseElement();\r\n    builder2.AddContent(26, \"\\n    \");\r\n}\r\n));\r\nbuilder.CloseComponent();\r\n```\r\n\r\nand to use simple as\r\n\r\n```\r\n<div>Template with parameter (int): @TemplateWithInt?.Render(testobject.PropInt)</div>\r\n```\r\n\r\na complete example is provided in StandaloneApp.\r\n\r\nI'm using `<ComponentTemplateTest.Template>` to define the value of RenderFragment property but it isn't mandatory. We can use only `<Template>` but if there is a component with that name it will not work. In this way the possibility of homonyms is excluded.\r\nThe attribute `WithParams` is used to specify the name of the local variable, so that it is the developer who uses the component to decide the name.\r\n\r\nThe changes are all in the extension.\r\nI have not introduced any breaking changes, so ChildContent keeps working.\r\nThe test cases are missing, but I could not find those related to ChildContent to understand how they work (never done test cases before!)\r\n\r\nUnfortunately there are some imperfections in intellisense that I can not fix:\r\n\r\n1) I can not stop showing all the standard helpers tags (defined in BindTagHelperDescriptorProvider.cs) for the new template tags. I think it's a limitation of TagMatchingRule that does not allow to define tags to be excluded. If \"Microsoft.VisualStudio.Web.Editors.Razor\" would expose \"TagHelperScriptOrStyleTagNameService\" I could edit \"TagHelperFactsService\" and introduce new rules, but I did not understand how.\r\n\r\n2) When writing `<ComponentTemplateTest.Template>` Intellisense shows comments in the popups that I can not hide.\r\n\r\nHowever it seems to work.\r\nI would be happy to contribute to this wonderful project: if there is something to change or improve I am available for sure.","Url":"https://github.com/aspnet/Blazor/issues/1094","RelatedDescription":"Open issue \"Implementation of RenderFragment<T>\" (#1094)"},{"Id":"339130345","IsPullRequest":false,"CreatedAt":"2018-07-07T08:58:17","Actor":"danieldegtyarev","Number":"1093","RawContent":null,"Title":"Parent component","State":"open","Body":"Please investigate introducing ability to access parent component.\r\nIt is slightly advanced, and it mostly required for UI controls developers.\r\nI would suggest similar syntax as for `ChildContent`:\r\n\r\n``` cs\r\n...\r\n[Parameter]\r\nBlazorComponent Parent {get;set;}\r\n...\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1093","RelatedDescription":"Open issue \"Parent component\" (#1093)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-07-12T05:30:02.990031Z","RunDurationInMilliseconds":1471}