{"Data":{"GitHub":{"Issues":[{"Id":"541901810","IsPullRequest":false,"CreatedAt":"2019-12-23T21:00:31","Actor":"dgxhubbard","Number":"2357","RawContent":null,"Title":"WPF App InitializeComponent is missing","State":"open","Body":"I am running VS 2019 16.4.1 on net core 3.1. I select create new project\r\n\"WPF App (Net Core\" and the project is generated. Then I want my own startup\r\nobject, I select create new class \"EntryPoint\" and place the code below in it. Then I select \r\nproject entry point \"EntryPoint\" and compile. I get the error:\r\n\r\n'App' does not contain a definition for 'InitializeComponent' and no accessible extension method 'InitializeComponent' accepting a first argument of type 'App' could be found (are you missing a using directive or an assembly reference?)\t\r\n\r\nI looked at App.g.cs and even though I replaced the startup object with mine I still see a main being generated. How do I get InitializeComponent to be generated?\r\n\r\n\r\n**App.g.cs**\r\n\r\n`        /// <summary>\r\n        /// Application Entry Point.\r\n        /// </summary>\r\n        [System.STAThreadAttribute()]\r\n        [System.Diagnostics.DebuggerNonUserCodeAttribute()]\r\n        [System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"4.8.1.0\")]\r\n        public static void Main() {\r\n            Gt.ServerConnect.App app = new Gt.ServerConnect.App();\r\n            app.Run();\r\n        }\r\n`\r\n\r\n\r\n**EntryPoint**\r\n\r\n`using System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Globalization;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing System.Windows;\r\n\r\n\r\nnamespace Gt.ServerConnect\r\n{\r\n    public class EntryPoint\r\n    {\r\n        public static string Name\r\n        {\r\n            get { return \"Gt.Lite\"; }\r\n        }\r\n\r\n\r\n\r\n        // All WPF applications should execute on a single-threaded apartment (STA) thread\r\n        [STAThread]\r\n        public static void Main ( string [] args )\r\n        {\r\n\r\n            var app = new App ();\r\n            if ( app == null )\r\n                throw new NullReferenceException ( \"Failed to create app\" );\r\n\r\n\r\n            app.DispatcherUnhandledException += new System.Windows.Threading.DispatcherUnhandledExceptionEventHandler ( Current_DispatcherUnhandledException );\r\n            AppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler ( CurrentDomain_UnhandledException );\r\n\r\n            try\r\n            {\r\n                app.InitializeComponent ();\r\n\r\n\r\n                app.MainWindow = new MainWindow ();\r\n\r\n\r\n                app.Run ();\r\n            }\r\n            catch ( Exception ex )\r\n            {\r\n                string msg = ex.Message;\r\n                Debug.WriteLine ( \"Exception: \" + msg );\r\n\r\n            }\r\n\r\n\r\n            Process.GetCurrentProcess ().Kill ();\r\n        }\r\n\r\n\r\n        #region Internal Exception Handlers\r\n\r\n\r\n        static object _classLock = new object ();\r\n        static object ClassLock\r\n        {\r\n            get { return _classLock; }\r\n        }\r\n\r\n        static bool _closing = false;\r\n        static bool Closing\r\n        {\r\n            get\r\n            {\r\n                bool closing = false;\r\n\r\n                lock ( ClassLock )\r\n                {\r\n                    closing = _closing;\r\n                }\r\n\r\n                return closing;\r\n            }\r\n\r\n            set\r\n            {\r\n                lock ( ClassLock )\r\n                {\r\n                    _closing = value;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        private static void Current_DispatcherUnhandledException ( object sender, System.Windows.Threading.DispatcherUnhandledExceptionEventArgs e )\r\n        {\r\n            e.Handled = true;\r\n\r\n            var ex = e.Exception;\r\n\r\n            if ( ex.InnerException != null )\r\n                ex = ex.InnerException;\r\n\r\n            if ( Closing )\r\n                return;\r\n\r\n            Application.Current.Shutdown ();\r\n        }\r\n\r\n        public static void CurrentDomain_UnhandledException ( object sender, UnhandledExceptionEventArgs e )\r\n        {\r\n            var ex = e.ExceptionObject as Exception;\r\n\r\n            if ( ex.InnerException != null )\r\n                ex = ex.InnerException;\r\n\r\n            Application.Current.Shutdown ();\r\n        }\r\n\r\n        #endregion\r\n    }\r\n\r\n}\r\n`","Url":"https://github.com/dotnet/wpf/issues/2357","RelatedDescription":"Open issue \"WPF App InitializeComponent is missing\" (#2357)"},{"Id":"541765592","IsPullRequest":true,"CreatedAt":"2019-12-23T14:10:25","Actor":"dotnet-maestro[bot]","Number":"2356","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191223.1\r\n- **Date Produced**: 12/23/2019 1:37 PM\r\n- **Commit**: c5b6178391100689e03fc909dce89cf1cc991efe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19623.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2356","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2356)"},{"Id":"541750648","IsPullRequest":true,"CreatedAt":"2019-12-23T13:27:06","Actor":"dotnet-maestro[bot]","Number":"2355","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191222.6\r\n- **Date Produced**: 12/23/2019 12:14 AM\r\n- **Commit**: 34d9715c169f69390fd4c38f83d011fb7e96acd7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19622.6\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2355","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2355)"},{"Id":"541454109","IsPullRequest":true,"CreatedAt":"2019-12-22T14:05:24","Actor":"dotnet-maestro[bot]","Number":"2354","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191222.1\r\n- **Date Produced**: 12/22/2019 1:32 PM\r\n- **Commit**: c15a0d95cf910c9120f60d22bc71a7fa68122851\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19622.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2354","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2354)"},{"Id":"541449928","IsPullRequest":true,"CreatedAt":"2019-12-22T13:38:56","Actor":"dotnet-maestro[bot]","Number":"2353","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191221.8\r\n- **Date Produced**: 12/22/2019 12:37 AM\r\n- **Commit**: b39b93574c4dfa6f022fc60ae841b79c80b67660\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19621.8\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2353","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2353)"},{"Id":"541351099","IsPullRequest":false,"CreatedAt":"2019-12-21T17:33:23","Actor":"AlgorithmsAreCool","Number":"2352","RawContent":null,"Title":"Suggestion : Simplify dependency property registration","State":"open","Body":"I've recently gotten back into WPF and now I'm relearning the fun of defining DependencyProperties. \r\n\r\n### Existing Behavior\r\n\r\nLets look at the current way of defining some DPs;\r\n\r\n```csharp\r\npublic class MyViewModel : DependencyObject\r\n{\r\n    public Brush Fill\r\n    {\r\n        get => (Brush)GetValue(FillProperty);\r\n        set => SetValue(FillProperty, value);\r\n    }\r\n\r\n    public Brush Foreground\r\n    {\r\n        get => (Brush)GetValue(ForegroundProperty);\r\n        set => SetValue(ForegroundProperty, value);\r\n    }\r\n\r\n    public string Text\r\n    {\r\n        get => (string)GetValue(TextProperty);\r\n        set => SetValue(TextProperty, value);\r\n    }\r\n\r\n    public static readonly DependencyProperty FillProperty = DependencyProperty.Register(nameof(Fill), typeof(Brush), typeof(MyViewModel), new PropertyMetadata(Brushes.White));\r\n    public static readonly DependencyProperty ForegroundProperty = DependencyProperty.Register(nameof(Foreground), typeof(Brush), typeof(MyViewModel), new PropertyMetadata(Brushes.Black));\r\n    public static readonly DependencyProperty TextProperty = DependencyProperty.Register(nameof(Text), typeof(string), typeof(MyViewModel), new PropertyMetadata(\"\"));\r\n}\r\n```\r\n\r\nI always found the process clunky and very verbose. In particular, we have to keep repeating `typeof(MyViewModel)` on each declaration.\r\nWe also have to be careful of copy/paste errors on the property types as well as the default values passed into the property metadata.\r\n\r\n### Proposed Behavior\r\n\r\nI tried to reduce this pain by defining two helper types.\r\n\r\n```csharp\r\npublic readonly struct DependencyProperty<T>\r\n{\r\n    public DependencyProperty(DependencyProperty property)\r\n    {\r\n        Property = property;\r\n    }\r\n\r\n    public DependencyProperty Property { get; }\r\n\r\n    public static implicit operator DependencyProperty(DependencyProperty<T> dependencyProperty) \r\n        => dependencyProperty.Property;\r\n} \r\n```\r\n\r\n\r\n```csharp\r\npublic class DependencyObject<TSelf> : DependencyObject\r\n    where TSelf : DependencyObject<TSelf>\r\n{\r\n    public T Get<T>(DependencyProperty<T> property) => (T)GetValue(property.Property);\r\n\r\n    public void Set<T>(DependencyProperty<T> property, T value) => SetValue(property.Property, value);\r\n\r\n    public static DependencyProperty<T> RegisterProperty<T>(string name) \r\n        => new DependencyProperty<T>(DependencyProperty.Register(name, typeof(T), typeof(TSelf)));\r\n        \r\n    public static DependencyProperty<T> RegisterProperty<T>(string name, T defaultValue) \r\n        => new DependencyProperty<T>(DependencyProperty.Register(name, typeof(T), typeof(TSelf), new PropertyMetadata(defaultValue)));\r\n\r\n\r\n    public static DependencyProperty<T> RegisterProperty<T>(Expression<Func<TSelf, T>> propertyExpression) \r\n        => RegisterProperty<T>(GetPropertyNameFromExpression(propertyExpression));\r\n\r\n    public static DependencyProperty<T> RegisterProperty<T>(Expression<Func<TSelf, T>> propertyExpression, T defaultValue)\r\n        => RegisterProperty(GetPropertyNameFromExpression(propertyExpression), defaultValue);\r\n\r\n    private static string GetPropertyNameFromExpression<T>(Expression<Func<TSelf, T>> propertyExpression)\r\n    {\r\n       //sample implementation ommited for brevity...\r\n    }\r\n}\r\n```\r\n`DependencyProperty<T>` is a wrapper struct that associates a strong type with the underlying DependencyProperty. \r\n`DependencyObject<T>` is a new type that you would derive from instead of directly from `DependencyObject`. \r\nIt has simpler helpers that make defining dependency easier and less error prone.\r\n\r\nWith these changes we can now define our view model like this:\r\n\r\n```csharp\r\npublic class MyViewModel : DependencyObject<MyViewModel>\r\n{\r\n    public Brush Fill\r\n    {\r\n        get => Get(FillProperty);\r\n        set => Set(FillProperty, value);\r\n    }\r\n\r\n    public Brush Foreground\r\n    {\r\n        get => Get(ForegroundProperty);\r\n        set => Set(ForegroundProperty, value);\r\n    }\r\n\r\n    public string Text\r\n    {\r\n        get => Get(TextProperty);\r\n        set => Set(TextProperty, value);\r\n    }\r\n\r\n    public static readonly DependencyProperty<Brush> FillProperty = RegisterProperty<Brush>(nameof(Fill), Brushes.White);\r\n    public static readonly DependencyProperty<Brush> ForegroundProperty = RegisterProperty<Brush>(nameof(Foreground), Brushes.Black);\r\n    public static readonly DependencyProperty<string> TextProperty = RegisterProperty(nameof(Text), \"\");\r\n}\r\n```\r\nThere are two main benefits. \r\n- First, type correctness is enforced at compile time.\r\n- Second, the registration is simpler and easier to read.\r\n\r\nCompare:\r\n```csharp\r\nDependencyProperty.Register(nameof(Fill), typeof(Brush), typeof(MyViewModel), new PropertyMetadata(Brushes.White));\r\n```\r\nto \r\n```csharp\r\nRegisterProperty<Brush>(nameof(Fill), Brushes.White);\r\n```\r\n\r\nAlternatively, we can also use a lambda to register the property like this\r\n```csharp\r\nRegisterProperty(self => self.Fill, Brushes.White);\r\n```\r\n\r\n### Drawbacks\r\nI'm using the C# version of [CRTP](https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern) to make this work. It's perfectly legal syntax, but if you haven't seen it before it can be very confusing at first. But it saves me from having to always specify the owning type of the property.\r\n\r\nThis also my just be too little, too late and it might not be worth the added confusion.","Url":"https://github.com/dotnet/wpf/issues/2352","RelatedDescription":"Open issue \"Suggestion : Simplify dependency property registration\" (#2352)"},{"Id":"541330340","IsPullRequest":true,"CreatedAt":"2019-12-21T14:25:27","Actor":"dotnet-maestro[bot]","Number":"2351","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191221.1\r\n- **Date Produced**: 12/21/2019 1:30 PM\r\n- **Commit**: 1fc81bcbe0a789d8ef1f8b3172e1071b0a9f8393\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19621.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2351","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2351)"},{"Id":"541326334","IsPullRequest":true,"CreatedAt":"2019-12-21T13:30:13","Actor":"dotnet-maestro[bot]","Number":"2350","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191220.12\r\n- **Date Produced**: 12/21/2019 1:30 AM\r\n- **Commit**: 7e8051e8f85af2ea93ef0995ad21182b1d688b5d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19620.12\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2350","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2350)"},{"Id":"541237995","IsPullRequest":false,"CreatedAt":"2019-12-20T23:06:52","Actor":"Mrxx99","Number":"2349","RawContent":null,"Title":"Editable ComboBox shows wrong decimal separator for selected item","State":"open","Body":"* .NET Core Version: 3.1 and 3.0\r\n* Windows version: 10 - 1909 (but should be independant)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No \r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nComboBox when set to IsEditable=\"True\" shows decimal separator of system language for selected value in textbox when bound to double values instead of the one set via the XAML Language property or even the UICulture set in code. If you also bind the Text property of the ComboBox to a double value the decimal separator is completely dropped (eg. making \"2.3\" to \"23\") which also only happens if the decimal separator is different between selected and system culture.\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nMy windows culture is set to German and I set the Language property of the window to \"en\" and the double values in the dropdown correctly show the . as decimal separator. But if I select a value it shows the decimal separator in the textbox of the editable ComboBox. (A TextBox bound to the same selected item does show the right decimal separator)\r\n \r\n **Expected behavior:**\r\nA selected bound double value in a editable ComboBox picks up the same language as every other control in WPF set by the language property.\r\n \r\n **Minimal repro:**\r\n1) Set windows culture to German.\r\n2) Create a ComboBox in XAML and bind it's ItemsSource to a collection of double values.\r\n3) Set IsEditable=\"True\" on the ComboBox\r\n3) Change the Language property of the window to a culture that uses the dot (.) as decimal separator (e.g. English) (Language=\"en\")\r\n4) If you now select a value from the dropdown it is shown with the comma as decimal separator int the ComboBox textbox.\r\n5) If you now add a binding of a double property to the Text property of the ComboBox the value is shown without decimal separator\r\n\r\nMinimum reproducable project can be found here: https://github.com/Mrxx99/WpfComboBoxCultureIssue","Url":"https://github.com/dotnet/wpf/issues/2349","RelatedDescription":"Open issue \"Editable ComboBox shows wrong decimal separator for selected item\" (#2349)"},{"Id":"541231600","IsPullRequest":true,"CreatedAt":"2019-12-20T22:50:22","Actor":"dotnet-maestro[bot]","Number":"2348","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191220.3\r\n- **Date Produced**: 12/20/2019 10:21 PM\r\n- **Commit**: d6b1f700c79e7a8da79258c2c690db06c7c23c20\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19620.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2348","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2348)"},{"Id":"541218062","IsPullRequest":true,"CreatedAt":"2019-12-20T22:10:25","Actor":"dotnet-maestro[bot]","Number":"2347","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191220.2\r\n- **Date Produced**: 12/20/2019 9:28 PM\r\n- **Commit**: 36ade24adabe783e6b75f91c613babd26fca6f35\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19620.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2347","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2347)"},{"Id":"540989859","IsPullRequest":true,"CreatedAt":"2019-12-20T13:31:41","Actor":"dotnet-maestro[bot]","Number":"2346","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191220.4\r\n- **Date Produced**: 12/20/2019 11:34 AM\r\n- **Commit**: 96c8099e1006473f4e25fa8e0c579a6fa3738383\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19620.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2346","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2346)"},{"Id":"540831093","IsPullRequest":true,"CreatedAt":"2019-12-20T08:00:27","Actor":"dotnet-maestro[bot]","Number":"2345","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191219.7\r\n- **Date Produced**: 12/20/2019 7:22 AM\r\n- **Commit**: 46d6088ed7e43ec18e4a1f838a921b5beb0e4118\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19619.7\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2345","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2345)"},{"Id":"540542852","IsPullRequest":false,"CreatedAt":"2019-12-20T07:11:06","Actor":"gdunit","Number":"2341","RawContent":null,"Title":"BitmapImage issue: Reference to type 'Freezable' claims it is defined in 'WindowsBase'","State":"closed","Body":"**.NET Core Version:** \r\n3.1\r\n**Windows version:** \r\nv1903\r\n**Does the bug reproduce also in WPF for .NET Framework 4.8?:** \r\nNo\r\n**Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)?** \r\nNo\r\n\r\n**Problem description:**\r\nWhen creating a new .net core console app (3.1) and using BitmapImage class BeginInit() or EndInit() methods, compiler errors are generated relating to the type Freezable missing from WindowsBase.dll.\r\n\r\n**Minimal repro:**\r\n- Create a new .net core console app (3.1) \r\n- Add references to PresentationCore.dll and WindowsBase.dll (tried framework 4.7.2 and 4.8 versions)\r\n- Add the following code:\r\n            BitmapImage bi = new BitmapImage();\r\n            bi.BeginInit();\r\n- The following compiler error is generated:\r\nCS7069\tReference to type 'Freezable' claims it is defined in 'WindowsBase', but it could not be found","Url":"https://github.com/dotnet/wpf/issues/2341","RelatedDescription":"Closed issue \"BitmapImage issue: Reference to type 'Freezable' claims it is defined in 'WindowsBase'\" (#2341)"},{"Id":"540781786","IsPullRequest":true,"CreatedAt":"2019-12-20T06:21:31","Actor":"dotnet-maestro[bot]","Number":"2344","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191219.4\r\n- **Date Produced**: 12/20/2019 4:36 AM\r\n- **Commit**: 7368fbf8727fdfaa40be633582fd109cafbf6fed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19619.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2344","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2344)"},{"Id":"540757908","IsPullRequest":true,"CreatedAt":"2019-12-20T05:55:26","Actor":"dotnet-maestro[bot]","Number":"2343","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191219.3\r\n- **Date Produced**: 12/20/2019 4:35 AM\r\n- **Commit**: ae87104875885cc735571ca4d13a0df99f143800\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19619.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2343","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2343)"},{"Id":"540732432","IsPullRequest":true,"CreatedAt":"2019-12-20T03:45:25","Actor":"dotnet-maestro[bot]","Number":"2342","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191219.2\r\n- **Date Produced**: 12/20/2019 3:17 AM\r\n- **Commit**: 41c1e408a874cedd9038da52deb5fd368f0a4669\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19619.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2342","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2342)"},{"Id":"540278270","IsPullRequest":false,"CreatedAt":"2019-12-19T16:24:24","Actor":"EmaginationStore","Number":"2339","RawContent":null,"Title":"CMYK Tif with transparency","State":"closed","Body":"* .NET Core Version: 3.1 & 3.0\r\n* Windows version: 1903 (108362.239)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No \r\n **Problem description:**\r\nI have a tif image which is saved using CMYK colour space and contains transparency. \r\nIf placed in an image control on a window, It shows in Visual Studio designer but does not show when debugging the app.\r\n \r\n **Actual behavior:** \r\nImage does not show\r\n \r\n **Expected behavior:**\r\nThe image to be visible\r\n \r\n **Minimal repro:**\r\n\r\n```\r\n<Window ...\r\n    <Grid>\r\n        <Image Source=\"Untitled-1.tif\" />\r\n    </Grid>\r\n</Window>\r\n```\r\ntif attached in zip file\r\n[Untitled-1.zip](https://github.com/dotnet/wpf/files/3983518/Untitled-1.zip)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/2339","RelatedDescription":"Closed issue \"CMYK Tif with transparency\" (#2339)"},{"Id":"540306324","IsPullRequest":true,"CreatedAt":"2019-12-19T13:24:34","Actor":"dotnet-maestro[bot]","Number":"2340","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191219.2\r\n- **Date Produced**: 12/19/2019 12:16 PM\r\n- **Commit**: 9ed5625c193467beff15bcc1ab63d313f4c86dda\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19619.2\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2340","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2340)"},{"Id":"540238296","IsPullRequest":false,"CreatedAt":"2019-12-19T10:56:16","Actor":"Gosha24","Number":"2338","RawContent":null,"Title":"Publish self-contained configuration","State":"open","Body":"* .NET Core Version: 3.1\r\n* Windows version: 10\r\n \r\n **Problem description:**\r\n \r\nPublish WPF \r\nConfiguration Release|Any CPU\r\nTarget FrameWork netcoreapp3.1\r\nDeployment mode self-contained\r\ntarget-runtime winx64\r\nPublish:\r\nAn error occured\r\n\r\n19-Dec-19 12:24:09\r\nSystem.AggregateException: One or more errors occurred. ---> System.Exception: Publish has encountered an error. We were unable to determine the cause of the error. Check the output log for more details. \r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at Microsoft.Publish.Framework.Model.DefaultPublishSteps.<>c__DisplayClass26_0.<IsBuildCompletedSuccessfully>b__2()\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Publish.Framework.Model.DefaultPublishSteps.<DefaultCorePublishStep>d__23.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Publish.Framework.ViewModel.ProfileSelectorViewModel.<RunPublishTaskAsync>d__213.MoveNext()\r\n---> (Inner Exception #0) System.Exception: Publish has encountered an error. We were unable to determine the cause of the error. Check the output log for more details. <---\r\n\r\nSystem.Exception: Publish has encountered an error. We were unable to determine the cause of the error. Check the output log for more details. \r\n\r\nThe same error was mentioned in StackOverflow. I deleted Profile and create new one nothing helps","Url":"https://github.com/dotnet/wpf/issues/2338","RelatedDescription":"Open issue \"Publish self-contained configuration\" (#2338)"},{"Id":"540006675","IsPullRequest":true,"CreatedAt":"2019-12-19T01:10:51","Actor":"dotnet-maestro[bot]","Number":"2337","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191218.9\r\n- **Date Produced**: 12/19/2019 12:24 AM\r\n- **Commit**: 1f4dab10474a75c7a5068dd6997caedc27d93092\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19618.9\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2337","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2337)"},{"Id":"540001150","IsPullRequest":true,"CreatedAt":"2019-12-19T00:50:09","Actor":"dotnet-maestro[bot]","Number":"2336","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191218.6\r\n- **Date Produced**: 12/18/2019 11:47 PM\r\n- **Commit**: 09e58e65bd9541a5e43357f0473695bd689011f2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19618.6\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2336","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2336)"},{"Id":"539993845","IsPullRequest":true,"CreatedAt":"2019-12-19T00:30:09","Actor":"dotnet-maestro[bot]","Number":"2335","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191218.5\r\n- **Date Produced**: 12/18/2019 11:38 PM\r\n- **Commit**: 1dbf4b81553f9c5593d34b1120f61af1dd7d54df\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19618.5\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2335","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2335)"},{"Id":"539989219","IsPullRequest":true,"CreatedAt":"2019-12-19T00:05:26","Actor":"dotnet-maestro[bot]","Number":"2334","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191218.4\r\n- **Date Produced**: 12/18/2019 11:30 PM\r\n- **Commit**: d8e986e4655a8374ed047616fe17507593d94e8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19618.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2334","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2334)"},{"Id":"539973847","IsPullRequest":true,"CreatedAt":"2019-12-18T23:20:28","Actor":"dotnet-maestro[bot]","Number":"2333","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191218.2\r\n- **Date Produced**: 12/18/2019 10:42 PM\r\n- **Commit**: 6b7b8ed9f2c2d7b246bd38c940197c4ef97f1e3f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19618.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2333","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2333)"},{"Id":"539695995","IsPullRequest":true,"CreatedAt":"2019-12-18T14:05:29","Actor":"dotnet-maestro[bot]","Number":"2332","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191218.1\r\n- **Date Produced**: 12/18/2019 1:31 PM\r\n- **Commit**: fd4fe746a535c379ecd1144c6f8f8325336b0100\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19618.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2332","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2332)"},{"Id":"539676446","IsPullRequest":true,"CreatedAt":"2019-12-18T13:31:36","Actor":"dotnet-maestro[bot]","Number":"2331","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191218.2\r\n- **Date Produced**: 12/18/2019 11:57 AM\r\n- **Commit**: 835194c0ece36978f6c3d91fe03b0cffa0c00144\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19618.2\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2331","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2331)"},{"Id":"539459191","IsPullRequest":true,"CreatedAt":"2019-12-18T05:35:25","Actor":"dotnet-maestro[bot]","Number":"2330","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191217.2\r\n- **Date Produced**: 12/18/2019 5:11 AM\r\n- **Commit**: 4f73ec385c229e28a645b596b149979a3d8f3938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19617.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2330","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2330)"},{"Id":"539227219","IsPullRequest":false,"CreatedAt":"2019-12-17T18:07:43","Actor":"SamBent","Number":"2329","RawContent":null,"Title":"[Test] Mouse-move injection is slightly off on multi-monitor systems","State":"open","Body":"* .NET Core Version: 3.1\r\n* Windows version: 1909\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? no\r\n \r\n **Problem description:**\r\n The code that simulates user input to move the mouse sometimes ends up one pixel away from the intended position.  This surely has to do with the translation to virtual desktop coordinates.  It works fine when only one monitor is attached, but not in multi-monitor.  Well, at least not in my configuration:  2160x3840 (200%) and 3440x1440 (100%):\r\n\r\n![image](https://user-images.githubusercontent.com/15221213/71020246-d0f0db00-20b0-11ea-8109-71da662ae6d9.png)\r\n\r\nThis is not urgent, as our standard testing is done on single-monitor machines.  But it will need to be fixed before making the tests public, as contributors will surely run tests in multi-monitor, and will get false failures.\r\n\r\nNote:  There are at least two copies of this code in the test repo - one used by DRTs, another by feature tests.\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n Mouse sometimes ends up one pixel away from the intended position.  It depends on the position, and how the actual pixels align with the virtual-desktop coordinates.  Thus the test results can be different on repeated attempts, depending on where the OS chooses to display the test's main window.\r\n\r\n **Expected behavior:**\r\n Mouse moves to the intended position.\r\n\r\n **Minimal repro:**\r\n1. DrtWindowResizeGripFlowDirection\r\n\"Did not get correct Height after changing FlowDirection and resizing through ResizeGrip. expected:350 -- actual:351\"\r\n(The mouse drag to resize the window ended one pixel below the intended.)\r\n\r\n2. DrtControls -suite Menu.Capture\r\n\" ASSERT failed [Suite: Menu.Capture  Test: CaptureTest]   AutoClose popup should be open\"\r\n(Test intended to move the mouse to the top-left of an open popup, and click to close a nested ComboBox and restore capture to the popup.  Instead the mouse moved just off the popup, and the click closed the popup.)\r\n\r\n3. Presumably many more false failures in feature tests.","Url":"https://github.com/dotnet/wpf/issues/2329","RelatedDescription":"Open issue \"[Test] Mouse-move injection is slightly off on multi-monitor systems\" (#2329)"},{"Id":"539080960","IsPullRequest":true,"CreatedAt":"2019-12-17T14:05:25","Actor":"dotnet-maestro[bot]","Number":"2328","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191217.1\r\n- **Date Produced**: 12/17/2019 1:31 PM\r\n- **Commit**: b58173e9c1806d96ccf65cf2cd5ce15481f24cc0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19617.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2328","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2328)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-24T05:30:57.8403591Z","RunDurationInMilliseconds":821}