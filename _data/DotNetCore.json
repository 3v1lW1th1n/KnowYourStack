{"Data":{"Blog":{"FeedItems":[{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null},{"Title":".NET Core is the Future of .NET ","PublishedOn":"2019-05-06T22:22:54+00:00","CommentsCount":104,"FacebookCount":0,"Summary":"We introduced .NET Core 1.0 on November 2014. The goal with .NET Core was to take the learning from our experience building, shipping and servicing .NET Framework over the previous 12 years and build...","Href":"https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9689242687","Type":"PullRequestEvent","CreatedAt":"2019-05-24T04:24:46","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24600","RelatedDescription":"Merged pull request \"Delete RETURNTYPE and change how we get ReturnKind for gccover.\" (#24600) at dotnet/coreclr","RelatedBody":"There are several places where we need to know the return type for a call:\r\n1. `HijackFrame::GcScanRoots`, it uses `vm\\threadsuspend.cpp::GetReturnKind` that gets correct kind it from `EECodeInfo` that points to a compiled method (it can't be a prestub), so code in `HijackFrame::GcScanRoots` is our role model: https://github.com/dotnet/coreclr/blob/bdb995987178231ba541f22143cb3cab56309daa/src/vm/frames.cpp#L1080\r\n\r\n**question**: can hijacking happen when we are in a compile stub and EECodeInfo is invalid?\r\n\r\n2. `GcCover.cpp` needs to know when to protect call return values when imitating Hijacking, but it doesn't have `EECodeInfo` (because most `MethodDescriptor` point to uncompiled code and `PCODEs` point to compile stubs, so we can't get `EECodeInfo->gcInfoToken`), so we have to restore `ReturnKind` from method descriptor. This PR changes `MethodDesc::ReturnsObject` to return precise information using code that was in `ReturnKind GetReturnKindFromMethodTable(Thread *pThread, EECodeInfo *codeInfo)` as example.\r\nUsing this `ReturnKind` we can correctly understand when we need to protect first/second/both return registers on x64 Unix/arm64 and, for example, do not use `INTERRUPT_INSTR_PROTECT_RET` in tricky cases.\r\n\r\nHowever,   `ReturnKind GetReturnKindFromMethodTable` supports only x64 Unix and doesn't support arm64. So if we call it on arm64 with a method that return 16 bytes struct it fails with assert:\r\nhttps://github.com/dotnet/coreclr/blob/221dc73878027e95b515d0c46cad0266331e538d/src/vm/method.cpp#L1266-L1278\r\n\r\nand there is comment: \r\nhttps://github.com/dotnet/coreclr/blob/883a27180106affebd45814f5b6fc236c9d7eab2/src/vm/threadsuspend.cpp#L5767-L5769\r\nthat says that it is not a simple restriction.\r\n\r\n**question**: how can we get the necessary information for arm64?\r\n\r\n3. `ComPlusMethodFrame::GcScanRoots` needs to know which registers to protect but has the same issues as `GCCoder`, but  this method is not stress testing specific, so I assume it can cause gc holes in a real app that uses COM methods that return struct on arm64 Windows (we can't have COM on Unix).\r\n\r\n**question**: What should we do in this case?\r\n\r\n\r\nThis PR is preparation for https://github.com/dotnet/coreclr/issues/23199. With that change, I have correct kind in `GCCover` and can use different instruction to mark which registers I need to restore.\r\n\r\nChanges by commits:\r\n0af5c9698a: Move GetReturnKindFromMethodTable to method.hpp.\r\n\r\nWe would need this in other places in the next commits.\r\n\r\n2b0b08d41e: Delete unnecessary checks from callhelpers.\r\n\r\n56e4ad897e: Do not check return types in CanDeduplicateCode.\r\n\r\nGC info v.2 has this information and it is checked in another place.\r\n\r\nf96c1a0083: Change ComPlusMethodFrame to use the new function.\r\n\r\n92708d4b34: Change gccover.cpp to use GetReturnKindFromMethodTable.\r\n\r\n69307803a5: Delete RETURNTYPE.\r\n\r\nfcb3ee4573: Add check to ComPlusMethodFrame.\r\n\r\n2e6011d683: Delete check from threadsuspend.\r\n\r\ncodeInfo->GetCodeManager()->GetReturnKind(gcInfoToken) must always return a valid kind nowdays (it could return an invalid lind only when GC Info v2 was not available)."},{"Id":"9689033975","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:18:35","Actor":"josalem","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24582","RelatedDescription":"Merged pull request \"Diagnostics IPC\" (#24582) at dotnet/coreclr","RelatedBody":"CLR side of work to implement dotnet/diagnostics#198.\r\n\r\nFor a detailed description of the intended behavior of this change, please read the spec linked above.\r\n\r\nThese are **breaking changes** for the preview5 diagnostics tools.  dotnet/diagnostics#271 is the mirror of these changes for the diagnostics tools.\r\n\r\nThese changes will formalize an IPC protocol for the Diagnostics Server in the runtime.  The current main use of this server is EventPipe functionality.  This work will make it more predictable and uniform for internal and potentially external developers to interact with EventPipe and future diagnostics services offered on the Diagnostics Server.\r\n\r\nCC - @MarioHewardt @tommcdon "},{"Id":"9688901727","Type":"PullRequestEvent","CreatedAt":"2019-05-24T02:39:06","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21388","RelatedDescription":"Closed pull request \"Move the perf jobs to Windows.10.Amd64.ClientRS4.DevEx.15.8.Open\" (#21388) at dotnet/coreclr","RelatedBody":"Ports the change from master to release/2.1."},{"Id":"9688898209","Type":"PullRequestEvent","CreatedAt":"2019-05-24T02:38:02","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/19282","RelatedDescription":"Closed pull request \"WIP Update base services tests to SDK style projects\" (#19282) at dotnet/coreclr","RelatedBody":"Update all the tests in baseservices to be SDK style projects"},{"Id":"9688884004","Type":"PullRequestEvent","CreatedAt":"2019-05-24T02:33:53","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/11291","RelatedDescription":"Merged pull request \"Re-enable queryperformancecounter PAL test\" (#11291) at dotnet/coreclr","RelatedBody":"I was unable to reproduce an issue with the test locally on OSX and my recent testing has shown that it doesn't repro in the CI either. It seems it was specific to the version of OSX we were using in the CI in the past when the issue started to occur.\r\n\r\nClose #10209"},{"Id":"9688883986","Type":"IssuesEvent","CreatedAt":"2019-05-24T02:33:53","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/10209","RelatedDescription":"Closed issue \"Fix paltest_queryperformancecounter_test1\" (#10209) at dotnet/coreclr","RelatedBody":"This test started failing in CI after upgrading the CI machines to Sierra. It was disabled in https://github.com/dotnet/coreclr/pull/10173 to get the upgrade unblocked."},{"Id":"9688740252","Type":"PullRequestEvent","CreatedAt":"2019-05-24T01:51:46","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24755","RelatedDescription":"Opened pull request \"Remove dependency on IEEMemoryManager\" (#24755) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9689161323","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:58:28","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11419","RelatedDescription":"Opened pull request \"Remove using the explicit Build target with `dotnet build`.\" (#11419) at dotnet/cli","RelatedBody":"This commit prevents the `dotnet build` command from always passing the\r\n`/t:Build` option to MSBuild.\r\n\r\nUsers expect `dotnet build /t:<target>` to work like MSBuild does.  However,\r\nbecause `dotnet build` was implicitly adding `/t:Build`, instead of only the\r\nuser's target being run, the `Build` target runs first and then the user's\r\ntarget runs.\r\n\r\nThis change makes the `dotnet build` command more consistent with\r\n`dotnet msbuild` and desktop MSBuild.\r\n\r\nNote: this is a breaking change, although it only impacts projects that do not\r\nuse `Build` as the default target, which will now be the target invoked by\r\n`dotnet build`.  The workaround for those projects would be to pass `/t:Build`\r\nto `dotnet build` to restore the previous behavior.\r\n\r\nFixes #4815."},{"Id":"9688949020","Type":"PullRequestEvent","CreatedAt":"2019-05-24T02:53:09","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11418","RelatedDescription":"Opened pull request \"Adding installation script tests\" (#11418) at dotnet/cli","RelatedBody":"When we materially change the way the installation scripts install the SDK for 3.0 and beyond - these tests, and the ability to add more installation script tests, will assist with development. \r\n"},{"Id":"9688386138","Type":"PullRequestEvent","CreatedAt":"2019-05-24T00:01:56","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11417","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#11417) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9688385970","Type":"PullRequestEvent","CreatedAt":"2019-05-24T00:01:54","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11416","RelatedDescription":"Opened pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#11416) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9687477180","Type":"PullRequestEvent","CreatedAt":"2019-05-23T20:46:21","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/10235","RelatedDescription":"Closed pull request \"add FreeBSD to build platforms\" (#10235) at dotnet/cli","RelatedBody":"This may not be complete fix yet but when running build on FreeBSD it sets targetGroup/targetOS to Linux. This at least add detection to FreeBSD and it also adds it to isUnix family. "},{"Id":"9687472205","Type":"PullRequestEvent","CreatedAt":"2019-05-23T20:45:36","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11153","RelatedDescription":"Merged pull request \"Update manpages with dotnet/docs master branch\" (#11153) at dotnet/cli","RelatedBody":"This PR updates manpages for .NET Core using latest pandoc on Debian 9; following the instructions described here: https://github.com/dotnet/cli/tree/2995f33f/Documentation/manpages/tool#ubuntu-example-from-scratch.\r\n\r\n@nguerrera, @mmitche, can it be plugged into the CI pipeline? One clean approach would be to mount a volume on prebuilt docker container, with required pandoc version and other dependencies installed, run it in CI job and push a commit to PR with `dotnet-mastero` as author. Here is a similar example of this idea in action: https://github.com/maxmind/GeoIP2-dotnet/blob/master/Makefile#L6-L27."},{"Id":"9687455078","Type":"PullRequestEvent","CreatedAt":"2019-05-23T20:42:59","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/pull/11224","RelatedDescription":null,"RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n"},{"Id":"9687454760","Type":"PullRequestEvent","CreatedAt":"2019-05-23T20:42:55","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/11224","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11224) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9684150937","Type":"PullRequestEvent","CreatedAt":"2019-05-23T13:11:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1206","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1206) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190522.8\r\n- **Date Produced**: 5/23/2019 6:40 AM\r\n- **Commit**: daa005b23d4954d4a41b1663171d6ada2d960bd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19272.8\r\n\r\n"},{"Id":"9684070982","Type":"PullRequestEvent","CreatedAt":"2019-05-23T13:01:04","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1206","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1206) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190522.8\r\n- **Date Produced**: 5/23/2019 6:40 AM\r\n- **Commit**: daa005b23d4954d4a41b1663171d6ada2d960bd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19272.8\r\n\r\n"},{"Id":"9683737765","Type":"PullRequestEvent","CreatedAt":"2019-05-23T12:15:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1205","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1205) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19272.13\r\n\r\n"},{"Id":"9683665094","Type":"PullRequestEvent","CreatedAt":"2019-05-23T12:05:42","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1205","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1205) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19272.13\r\n\r\n"},{"Id":"9678571748","Type":"PullRequestEvent","CreatedAt":"2019-05-22T19:20:47","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1192","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1192) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.4\r\n- **Date Produced**: 5/16/2019 7:11 PM\r\n- **Commit**: 61cc7d4d347300835925ce5245bfc3ecb6b621d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190517.7\r\n- **Date Produced**: 5/18/2019 4:34 AM\r\n- **Commit**: 55ce2900743cb609e51e2c6487e87e42eb627880\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19267.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190518.2\r\n- **Date Produced**: 5/18/2019 3:22 PM\r\n- **Commit**: 6d0514d3da59137630b9add5b5e619bce2631f02\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19268.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 8:30 AM\r\n- **Commit**: e913fb3b02d4089a91ff91c041c5f6e7c29038b0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.2\r\n- **Date Produced**: 5/20/2019 1:26 PM\r\n- **Commit**: 3b0760f8789d5d4bd146b36bd9051696d7a56bfa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19271.7\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9689165953","Type":"IssuesEvent","CreatedAt":"2019-05-24T03:59:58","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37794","RelatedDescription":"Closed issue \"Remove UTF-16 encoding text within the docs for ReadOnlySpan<char> overloaded APIs on Utf8JsonWriter\" (#37794) at dotnet/corefx","RelatedBody":"See https://github.com/dotnet/corefx/pull/37789#discussion_r285431754 for context\r\n\r\nFor example, remove the text that specifies UTF-16 text from summary/param docs:\r\nhttps://github.com/dotnet/corefx/blob/27dae83598c87e3cf4b139c8c981c13fe8e9a81e/src/System.Text.Json/src/System/Text/Json/Writer/Utf8JsonWriter.WriteProperties.String.cs#L71-L74\r\n\r\nSimilarly, update the string-based overloads as well (the summary text is fine, but param tags need to be updated):\r\nhttps://github.com/dotnet/corefx/blob/27dae83598c87e3cf4b139c8c981c13fe8e9a81e/src/System.Text.Json/src/System/Text/Json/Writer/Utf8JsonWriter.WriteProperties.String.cs#L53-L57\r\n\r\ncc @bartonjs "},{"Id":"9689165042","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:59:40","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37866","RelatedDescription":"Merged pull request \"Address #37794 by removing \"UTF-16\" when not needed in System.Text.Json docs\" (#37866) at dotnet/corefx","RelatedBody":"This addresses #37794 by removing \"UTF-16\" when not needed in the various System.Text.Json documentation comments. All overloads on `Utf8JsonWriter` and `JsonEncodedText` which took `string` or `ReadOnlySpan<char>` have been updated."},{"Id":"9689122957","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:45:59","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/37920","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corert\" (#37920) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"9689120630","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:45:14","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37913","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#37913) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @davidwrighton"},{"Id":"9689120098","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:45:05","Actor":"anurse","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/37919","RelatedDescription":"Opened pull request \"fix #36798 by updating PipeReader doc comment\" (#37919) at dotnet/corefx","RelatedBody":"Fixes #36798\r\n\r\nCorrects an inaccurate doc comment in System.IO.Pipelines.PipeReader.\r\n\r\nBased this on the existing comment for `PipeWriter.OnReaderCompleted`:\r\n\r\nhttps://github.com/dotnet/corefx/blob/af562e84b8b5a4a335ceb5006886a6c42c1c023e/src/System.IO.Pipelines/src/System/IO/Pipelines/PipeWriter.cs#L29-L32\r\n\r\ncc @AArnott "},{"Id":"9689021260","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:14:52","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37917","RelatedDescription":"Merged pull request \"Fix typo in JsonSerializer api documentation.\" (#37917) at dotnet/corefx","RelatedBody":"Noticed typo when reviewing https://github.com/dotnet/corefx/pull/37912."},{"Id":"9688821817","Type":"IssuesEvent","CreatedAt":"2019-05-24T02:15:33","Actor":"RobertBouillon","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/37918","RelatedDescription":"Opened issue \"Update the File System API and add BCL support for hierarchies\" (#37918) at dotnet/corefx","RelatedBody":"I'd like to propose a revision to the System.IO namespace for file handling, and an addition to the BCL to support hierarchies. I'd separate them into two issues, but I believe they complement each other and should be considered together. Specifically, I'd like to address 4 issues:\r\n\r\n1. When I require a file or directory as an argument, I'm forced to pass a string as a path. This not only makes my argument ambiguous with other string arguments I may have, but all of the related functionality I need to manipulate or validate the target file and path are in static classes (File, Directory, and Path).\r\n2. A path and a file should be distinct. Sometimes my argument should be a path. Other times, it should be a file or directory. While a file _can_ be represented by a path, I want to use the type to communicate to the developer what my method expects. I then have immediate access to type-specific functionality within my method.\r\n3. A path is a sequence of unique IDs that points to a distinct element in a hierarchy. A string is not a path - it's a representation of the path - a representation of each unique element separated by a delimiter. Path manipulation currently requires a lot of string parsing that tends to be slow, verbose, error-prone, and redundant. It seems logical to create a Path class to contain path-related functionality, and to store the path as what it is: a sequence of ID's.\r\n4. Since a Path is hierarchy-specific, it's worth looking at what kind of support we can add for hierarchies to the BCL. A hierarchy is essentially two entities: Leaves and Branches. A branch is technically a leaf that has children. This is pretty easy to represent as interfaces. This is useful when dealing with hierarchies that may have completely different implementations, such as a local directory structure, and one stored in the cloud.\r\n\r\nPlease consider the following API and Proof-of-Concept. This is not a complete representation of my vision, but I'd like to kick the idea around before putting too much work into it. \r\n\r\n```csharp\r\nusing System;\r\nusing System.Linq;\r\nusing System.Collections.Generic;\r\nusing System.Collections.Hierarchy;\r\n\r\nnamespace Sandbox.Hierarchy.IO\r\n{\r\n  public static class Program\r\n  {\r\n    public static void Main()\r\n    {\r\n      var folder = new Directory(@\"C:\\temp\");\r\n      var file = folder[new FileSystemPath(@\"foo\\bar.txt\")] as File;\r\n\r\n      Console.WriteLine(file.ReadAllText());\r\n      Console.WriteLine(file.Extension);\r\n\r\n      foreach (var child in folder.Traverse())\r\n        Console.WriteLine(child.Name);\r\n\r\n      Console.WriteLine(file.Root.AvailableFreeSpace);\r\n    }\r\n  }\r\n}\r\n\r\nnamespace System.Collections.Hierarchy\r\n{\r\n  public interface ILeaf<T>\r\n  {\r\n    Path<T> Path { get; }\r\n    T ID { get; }\r\n    IBranch<T> Parent { get; }\r\n    ILeaf<T> Root { get; }\r\n  }\r\n  \r\n  public interface IBranch<T> : ILeaf<T>\r\n  {\r\n    IEnumerable<ILeaf<T>> Children { get; }\r\n    ILeaf<T> this[T child] { get; }\r\n    ILeaf<T> this[Path<T> path] { get; }\r\n\r\n    IEnumerable<ILeaf<T>> Traverse();\r\n\r\n    event EventHandler<LeafEventArgs<T>> ChildAdded;\r\n    event EventHandler<LeafEventArgs<T>> ChildRemoved;\r\n  }\r\n\r\n  public class LeafEventArgs<T> : EventArgs\r\n  {\r\n    public ILeaf<T> Leaf { get; private set; }\r\n    public LeafEventArgs(ILeaf<T> leaf) => Leaf = leaf ?? throw new ArgumentNullException(nameof(leaf));\r\n  }\r\n  \r\n  public class Path<T>\r\n  {\r\n    public List<T> Parts { get; }\r\n    public virtual T Root => Parts.First();\r\n    public virtual T Leaf => Parts.Last();\r\n    public int Depth => Parts.Count;\r\n\r\n    public Path(IEnumerable<T> parts) => Parts = (parts ?? throw new ArgumentNullException(nameof(parts))).ToList();\r\n\r\n    public Path<T> Append(Path<T> append) => new Path<T>(Parts.Concat(append.Parts));\r\n    public Path<T> Append(T append) => new Path<T>(Parts.Concat(new[] { append }));\r\n    public Path<T> RemoveLevel(int levels = 1) => new Path<T>(Parts.Take(Parts.Count - levels));\r\n    public override string ToString() => ToString('\\\\');\r\n    public string ToString(char delimiter) => String.Join(delimiter, Parts);\r\n\r\n    public static Path<T> operator +(Path<T> a, Path<T> b) => a.Append(b);\r\n    public static Path<T> operator +(Path<T> a, T b) => a.Append(b);\r\n  }\r\n}\r\n\r\nnamespace Sandbox.Hierarchy.IO\r\n{\r\n  public abstract class FileSystemEntity : ILeaf<String>\r\n  {\r\n    public static Path<string> ParsePath(string path) => new Path<string>(path.Split(System.IO.Path.DirectorySeparatorChar));\r\n    public FileSystemEntity Create(string path) => Create(ParsePath(path));\r\n\r\n    public FileSystemEntity Create(Path<String> path)\r\n    {\r\n      var fullname = path.ToString();\r\n      if (path.Depth == 1)\r\n        return new Mount(path);\r\n      if (System.IO.Directory.Exists(fullname))\r\n        return new Directory(path);\r\n      else if (System.IO.File.Exists(fullname))\r\n        return new File(path);\r\n      else\r\n        throw new System.IO.FileNotFoundException(path.ToString(System.IO.Path.DirectorySeparatorChar));\r\n    }\r\n\r\n    public bool IsDirectory => System.IO.Directory.Exists(FullPath);\r\n    public bool IsFile => System.IO.File.Exists(FullPath);\r\n    public bool Exists => IsDirectory || IsFile;\r\n    public string FullPath => Path.ToString(System.IO.Path.DirectorySeparatorChar);\r\n    public virtual Mount Root => Parent.Root;\r\n\r\n    public Path<String> Path { get; }\r\n    public string Name => Path.Leaf;\r\n    public Directory Parent => Path.Depth == 1 ? null : Create(Path.RemoveLevel()) as Directory;\r\n    public string Extension => System.IO.Path.GetExtension(FullPath);\r\n    public string NameWithoutExtension => System.IO.Path.GetFileNameWithoutExtension(FullPath);\r\n\r\n    protected FileSystemEntity(Path<String> path) => Path = path ?? throw new ArgumentNullException(nameof(path));\r\n\r\n    public System.IO.FileSystemWatcher Watch(string filter = null) => new System.IO.FileSystemWatcher(FullPath, filter);\r\n    public override string ToString() => Path.ToString(System.IO.Path.DirectorySeparatorChar);\r\n\r\n    Path<string> ILeaf<string>.Path => Path;\r\n    string ILeaf<string>.ID => Name;\r\n    IBranch<string> ILeaf<string>.Parent => Parent;\r\n    ILeaf<string> ILeaf<string>.Root => Root;\r\n  }\r\n\r\n  public class File : FileSystemEntity\r\n  {\r\n    public File(string path) : base(ParsePath(path)) { }\r\n    public File(Path<String> path) : base(path) { }\r\n\r\n    public System.IO.FileStream OpenRead() => System.IO.File.OpenRead(FullPath);\r\n    public System.IO.FileStream OpenWrite() => System.IO.File.OpenWrite(FullPath);\r\n    public string ReadAllText() => System.IO.File.ReadAllText(FullPath);\r\n    public System.IO.FileInfo GetInfo() => new System.IO.FileInfo(FullPath);\r\n  }\r\n  \r\n  public class Mount : Directory\r\n  {\r\n    public long Size => GetInfo().TotalSize;\r\n    public long TotalFreeSpace => GetInfo().TotalFreeSpace;\r\n    public long AvailableFreeSpace => GetInfo().AvailableFreeSpace;\r\n    public long Label => GetInfo().TotalSize;\r\n\r\n    public Mount(string name) : base(ParsePath(name)) { }\r\n    internal Mount(Path<String> path) : base(path) { }\r\n\r\n    public new System.IO.DriveInfo GetInfo() => new System.IO.DriveInfo(Name);\r\n    public override Mount Root => this;\r\n  }\r\n\r\n  public class Directory : FileSystemEntity, IBranch<String>, IDisposable\r\n  {\r\n    private System.IO.FileSystemWatcher _watcher;\r\n\r\n    public Directory(string path) : base(ParsePath(path)) { }\r\n    public Directory(Path<String> path) : base(path) { }\r\n\r\n    public FileSystemEntity this[string child] => Create(Path + child);\r\n    public FileSystemEntity this[Path<String> path] => Create(Path + path);\r\n\r\n    public IEnumerable<FileSystemEntity> Children => System.IO.Directory.GetFileSystemEntries(FullPath).Select(x => Create(ParsePath(x)));\r\n\r\n    public void EnableEvents()\r\n    {\r\n      _watcher = Watch();\r\n      _watcher.Deleted += (x, y) => ChildRemoved?.Invoke(this, new LeafEventArgs<string>(Create(y.FullPath)));\r\n      _watcher.Created += (x, y) => ChildAdded?.Invoke(this, new LeafEventArgs<string>(Create(y.FullPath)));\r\n    }\r\n\r\n    public void DisableEvents()\r\n    {\r\n      _watcher.Dispose();\r\n      _watcher = null;\r\n    }\r\n\r\n    public IEnumerable<FileSystemEntity> Traverse() => Children.OfType<Directory>().SelectMany(x => x.Traverse()).Concat(Children);\r\n    public System.IO.DirectoryInfo GetInfo() => new System.IO.DirectoryInfo(FullPath);\r\n\r\n    public event EventHandler<LeafEventArgs<string>> ChildAdded;\r\n    public event EventHandler<LeafEventArgs<string>> ChildRemoved;\r\n\r\n    IEnumerable<ILeaf<string>> IBranch<string>.Children => Children;\r\n    ILeaf<string> IBranch<string>.this[Path<string> path] => this[path];\r\n    ILeaf<string> IBranch<string>.this[string child] => this[child];\r\n    IEnumerable<ILeaf<string>> IBranch<string>.Traverse() => Traverse();\r\n\r\n    public void Dispose() => _watcher?.Dispose();\r\n  }\r\n\r\n  public class FileSystemPath : Path<String>\r\n  {\r\n    public FileSystemPath(string path) : base(path.Split(System.IO.Path.DirectorySeparatorChar)) { }\r\n    public FileSystemPath(Path<String> source) : base(source.Parts) { }\r\n    public FileSystemPath(IEnumerable<String> source) : base(source) { }\r\n\r\n    public new FileSystemPath Append(Path<string> append) => Append(new FileSystemPath(append));\r\n    public FileSystemPath Append(FileSystemPath append) => new FileSystemPath(Parts.Concat(append.Parts));\r\n    public static FileSystemPath operator +(FileSystemPath a, FileSystemPath b) => a.Append(b);\r\n    public static FileSystemPath operator +(FileSystemPath a, Path<String> b) => a.Append(b);\r\n\r\n    public override string ToString() => ToString(System.IO.Path.DirectorySeparatorChar);\r\n  }\r\n}\r\n```"},{"Id":"9688820714","Type":"PullRequestEvent","CreatedAt":"2019-05-24T02:15:15","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/37917","RelatedDescription":"Opened pull request \"Fix typo in JsonSerializer api documentation.\" (#37917) at dotnet/corefx","RelatedBody":"Noticed typo when reviewing https://github.com/dotnet/corefx/pull/37912."},{"Id":"9688745809","Type":"IssuesEvent","CreatedAt":"2019-05-24T01:53:28","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37916","RelatedDescription":"Closed issue \"CamelCase option not working for property names set using JsonPropertyName attribute\" (#37916) at dotnet/corefx","RelatedBody":"CamelCase option not working for property names set using JsonPropertyName attribute\r\n```csharp\r\npublic class JsonIgnoreJsonPropertyNameTestClass\r\n{\r\n    private int _property = 21;\r\n    private int _ignoredProperty = 12;\r\n\r\n    [JsonPropertyName(\"TheField\")]\r\n    public int Field { get; set; }\r\n\r\n    public int Property\r\n    {\r\n        get { return _property; }\r\n    }\r\n\r\n    public int IgnoredField;\r\n\r\n    [JsonIgnore] \r\n    public int IgnoredProperty\r\n    {\r\n         get { return _ignoredProperty; }\r\n    }\r\n}\r\n[Fact]\r\npublic void JsonSerializer_OverrideSpecifiedName()\r\n{\r\n    JsonIgnoreJsonPropertyNameTestClass obj = new JsonIgnoreJsonPropertyNameTestClass ();\r\n    obj.Field = int.MinValue;\r\n\r\n    string s = JsonSerializer.ToString<JsonIgnoreJsonPropertyNameTestClass>(obj,  new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase });\r\n    \r\n    Assert.Equal(s, @\"{\"\"theField\"\":-2147483648,\"\"property\"\":21}\");\r\n}\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9688871700","Type":"PullRequestEvent","CreatedAt":"2019-05-24T02:30:13","Actor":"shyamnamboodiripad","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35921","RelatedDescription":"Merged pull request \"Expose internal service for tested by code lens indicator\" (#35921) at dotnet/roslyn","RelatedBody":""},{"Id":"9688769167","Type":"PullRequestEvent","CreatedAt":"2019-05-24T02:00:19","Actor":"dpoeschl","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35539","RelatedDescription":"Merged pull request \"Add Generate Parameter Code Fix\" (#35539) at dotnet/roslyn","RelatedBody":"![image](https://user-images.githubusercontent.com/29174528/57248363-15f06180-703a-11e9-853e-55a5d590a975.png)\r\n\r\nFix to https://github.com/dotnet/roslyn/issues/35496"},{"Id":"9688768580","Type":"PullRequestEvent","CreatedAt":"2019-05-24T02:00:13","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35929","RelatedDescription":"Merged pull request \"Merge release/dev16.1 to release/dev16.1-vs-deps\" (#35929) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.1-vs-deps\ngit reset --hard upstream/release/dev16.1-vs-deps\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9688749165","Type":"PullRequestEvent","CreatedAt":"2019-05-24T01:54:28","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35935","RelatedDescription":"Opened pull request \"Update azure-pipelines.yml\" (#35935) at dotnet/roslyn","RelatedBody":""},{"Id":"9688649589","Type":"PullRequestEvent","CreatedAt":"2019-05-24T01:24:18","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35759","RelatedDescription":"Merged pull request \"include exception type in CommonObjectFormatter for scripting/interactive\" (#35759) at dotnet/roslyn","RelatedBody":"At the moment the exception formatter swallows the exception type (doesn't show it anywhere in the formatted exception output). \r\n\r\nThis works reasonably well for most BCL exceptions, where the exception messages are mostly quite informative. However, for some of BCL types as well as tons of custom/3rd party code exceptions, where exception messages are often not of great quality, this is not ideal. The proposed change includes the exception type in the formatted exception output.\r\n\r\nAs a result, instead of\r\n\r\n```\r\n> string s = null;\r\n> \"foo\".IndexOf(s)\r\nValue cannot be null.\r\nParameter name: value\r\n  + string.IndexOf(string, int, int, System.StringComparison)\r\n  + string.IndexOf(string)\r\n```\r\n\r\nWe now get:\r\n\r\n```\r\n> string s = null;\r\n> \"foo\".IndexOf(s)\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: value\r\n  + string.IndexOf(string, int, int, System.StringComparison)\r\n  + string.IndexOf(string)\r\n```\r\n\r\nHere is an example with a custom exception. Instead of\r\n\r\n```\r\n>  var processor = new ItemProcessor();\r\n> processor.Process(item);\r\nError occurred\r\n  + ProcessingEngine.ItemProcessor.Process(object)\r\n```\r\n\r\nWe now get:\r\n\r\n```\r\n> var processor = new ItemProcessor();\r\n> processor.Process(item)\r\nProcessingEngine.StateValidationException: Error occurred\r\n  + ProcessingEngine.ItemProcessor.Process(object)\r\n```"},{"Id":"9688635581","Type":"PullRequestEvent","CreatedAt":"2019-05-24T01:20:07","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35934","RelatedDescription":"Opened pull request \"VSSDK update\" (#35934) at dotnet/roslyn","RelatedBody":""},{"Id":"9688633323","Type":"PullRequestEvent","CreatedAt":"2019-05-24T01:19:23","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35924","RelatedDescription":"Merged pull request \"DevDivInsertionFiles: Fix dependency error reporting\" (#35924) at dotnet/roslyn","RelatedBody":"Two issues:\r\n1) Replace `AfterTargets=\"Build\"` with `BeforeTargets=\"AfterBuild\"`\r\n   Workaround for https://github.com/microsoft/msbuild/issues/3345\r\n2) System.ValueTuple\r\n   Seems like the System.ValueTuple package is missing `lib/net472/_._`, so `lib/net47/System.ValueTuple.dll` is identified as a runtime dependency although it is not.\r\n\r\nhttps://github.com/dotnet/roslyn/issues/34558."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9689123441","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:46:09","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7446","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7446) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9689117668","Type":"PullRequestEvent","CreatedAt":"2019-05-24T03:44:16","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7445","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7445) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @davidwrighton"},{"Id":"9688703026","Type":"PullRequestEvent","CreatedAt":"2019-05-24T01:40:30","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7444","RelatedDescription":"Merged pull request \"Update CoreCLR and framework for R2R tests\" (#7444) at dotnet/corert","RelatedBody":"In Preview5, the R2R format version was bumped to 3.0. Roll forward to 3.0 and test against a more recent runtime that supports 3.0 ready-to-run image format."},{"Id":"9688247977","Type":"PullRequestEvent","CreatedAt":"2019-05-23T23:22:17","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7445","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7445) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9687110233","Type":"PullRequestEvent","CreatedAt":"2019-05-23T19:48:35","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7444","RelatedDescription":"Opened pull request \"Update CoreCLR and framework for R2R tests\" (#7444) at dotnet/corert","RelatedBody":"In Preview5, the R2R format version was bumped to 3.0. Roll forward to 3.0 and test against a more recent runtime that supports 3.0 ready-to-run image format."},{"Id":"9686616041","Type":"PullRequestEvent","CreatedAt":"2019-05-23T18:31:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7442","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7442) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @marek-safar"},{"Id":"9686515216","Type":"PullRequestEvent","CreatedAt":"2019-05-23T18:16:54","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7443","RelatedDescription":"Opened pull request \"CPAOT large version bubble bugfixes\" (#7443) at dotnet/corert","RelatedBody":"I have finally identified the reason for various recent inconsistencies\r\nwe were recently hitting in large version bubble testing. As the\r\nR2R major version number was recently bumped to 3 in CoreCLR, it\r\ngot out of sync with the value 2 we have in CoreClrRuntime used\r\nfor CPAOT testing in the CoreRT repo. For this reason all recent\r\ntesting performed against the CoreCLR version of Core_Root was\r\nsilently switching over to JIT; this included my recent local\r\nlarge version bubble testing - while R2RDump was dumping the R2R\r\nfile content correctly and let me fix most issues, some problems\r\nnaturally remained and only popped up at runtime:\r\n\r\n1) NewArrayFixupSignature wasn't properly switching over to the\r\ninner signature context when emitting the array type signature.\r\n\r\n2) SignatureBuilder was emitting incorrect signature for fields\r\non instantiated types (this only popped up after inlining parts\r\nof CoreLib into the unit test).\r\n\r\n3) In SignatureContext, we should call the token resolution logic\r\nwhen determining field tokens as for fields encoded using refs\r\nthe reference module is the module containing the ref, not\r\nnecessarily the reference module for its owning type.\r\n\r\n4) In CorInfoImpl.ReadyToRun, the logic for encoding string literals\r\nwas incorrect in large version bubble mode in the presence of\r\ninlining - we need to use the context module passed along with the\r\nstring token, not the input module.\r\n\r\n5) ManifestMetadataTableNode was incorrectly encoding public key\r\ntokens for the AssemblyRefs.\r\n\r\n6) I previously overlooked the fact that the BadImageFormatException\r\nthrown for native assemblies is a variation of the type local\r\nto TypeSystemException.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. With this change the CoreCLR JIT test suite has about 93% pass\r\nrate. I suspect I understand some of the remaining failures but\r\nI wanted to send this our early as I'm going to be mostly OOF\r\nfor the rest of this week.\r\n"},{"Id":"9680349815","Type":"PullRequestEvent","CreatedAt":"2019-05-23T01:25:13","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Merged pull request \"Initial script changes to enable CPAOT on Linux\" (#7437) at dotnet/corert","RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9679541180","Type":"PullRequestEvent","CreatedAt":"2019-05-22T21:56:28","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7442","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7442) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"9678743876","Type":"PullRequestEvent","CreatedAt":"2019-05-22T19:48:19","Actor":"tannergooding","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7441","RelatedDescription":"Opened pull request \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03\" (#7441) at dotnet/corert","RelatedBody":"CC. @jaredpar, @agocke, @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2856 and https://github.com/dotnet/buildtools/pull/2256"},{"Id":"9677949155","Type":"PullRequestEvent","CreatedAt":"2019-05-22T17:41:09","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":null,"RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9677946957","Type":"PullRequestEvent","CreatedAt":"2019-05-22T17:40:47","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Closed pull request \"Initial script changes to enable CPAOT on Linux\" (#7437) at dotnet/corert","RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9677928738","Type":"PullRequestEvent","CreatedAt":"2019-05-22T17:37:50","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":null,"RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9677928514","Type":"PullRequestEvent","CreatedAt":"2019-05-22T17:37:48","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Closed pull request \"Initial script changes to enable CPAOT on Linux\" (#7437) at dotnet/corert","RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9688387944","Type":"PullRequestEvent","CreatedAt":"2019-05-24T00:02:26","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3264","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#3264) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9688387737","Type":"PullRequestEvent","CreatedAt":"2019-05-24T00:02:23","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3263","RelatedDescription":"Opened pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#3263) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"447943842","IsPullRequest":true,"CreatedAt":"2019-05-24T01:51:46","Actor":"jkotas","Number":"24755","RawContent":null,"Title":"Remove JIT dependency on IEEMemoryManager","State":"open","Body":"This is next step in untangling the SQL hosting abstractions that are useless in .NET Core.","Url":"https://github.com/dotnet/coreclr/pull/24755","RelatedDescription":"Open PR \"Remove JIT dependency on IEEMemoryManager\" (#24755)"},{"Id":"447933335","IsPullRequest":true,"CreatedAt":"2019-05-24T00:57:13","Actor":"davidwrighton","Number":"24754","RawContent":null,"Title":"Convert go_through_object macros to be a lambda in checked and debug …","State":"open","Body":"…builds of gc\r\n\r\n- Lambda conversion for release builds did not provide significant diagnostic improvements\r\n- However, for debug builds there are visible improvements\r\n- This change is focussed on doing the best job possible for debug cases","Url":"https://github.com/dotnet/coreclr/pull/24754","RelatedDescription":"Open PR \"Convert go_through_object macros to be a lambda in checked and debug …\" (#24754)"},{"Id":"447911195","IsPullRequest":true,"CreatedAt":"2019-05-24T00:40:46","Actor":"richlander","Number":"24752","RawContent":null,"Title":"Create THIRD-PARTY-NOTICES.TXT","State":"closed","Body":"TPN for https://github.com/dotnet/coreclr/blob/a9074bce5e3814db67dbec1c56f477202164d162/tests/src/sizeondisk/sodbench/SoDBench.cs#L738","Url":"https://github.com/dotnet/coreclr/pull/24752","RelatedDescription":"Closed or merged PR \"Create THIRD-PARTY-NOTICES.TXT\" (#24752)"},{"Id":"447869962","IsPullRequest":true,"CreatedAt":"2019-05-24T00:39:31","Actor":"safern","Number":"24747","RawContent":null,"Title":"Make AppDomain.GetThreadPrincipal() internal","State":"closed","Body":"While generating System.Runtime.Extensions reference assembly I noticed that this API is public but not exposed. It was made public because Thread uses it. However Thread was pushed down to Corelib already and there seem to be no other usages of this API in corefx/corert. \r\n\r\nI built corefx locally and it built fine.\r\n\r\ncc: @jkotas @stephentoub ","Url":"https://github.com/dotnet/coreclr/pull/24747","RelatedDescription":"Closed or merged PR \"Make AppDomain.GetThreadPrincipal() internal\" (#24747)"},{"Id":"447823634","IsPullRequest":true,"CreatedAt":"2019-05-24T00:38:52","Actor":"jkotas","Number":"24746","RawContent":null,"Title":"Delete FEATURE_TESTHOOK","State":"closed","Body":"The test hooks were primarily focused on white box testing of appdomain unloading that we do not have anymore.","Url":"https://github.com/dotnet/coreclr/pull/24746","RelatedDescription":"Closed or merged PR \"Delete FEATURE_TESTHOOK\" (#24746)"},{"Id":"447820811","IsPullRequest":true,"CreatedAt":"2019-05-24T00:38:43","Actor":"jkotas","Number":"24745","RawContent":null,"Title":"Delete unused file","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24745","RelatedDescription":"Closed or merged PR \"Delete unused file\" (#24745)"},{"Id":"447818902","IsPullRequest":true,"CreatedAt":"2019-05-24T00:38:29","Actor":"jkotas","Number":"24744","RawContent":null,"Title":"Delete unused PredefinedTlsSlots","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24744","RelatedDescription":"Closed or merged PR \"Delete unused PredefinedTlsSlots\" (#24744)"},{"Id":"447926225","IsPullRequest":false,"CreatedAt":"2019-05-24T00:19:00","Actor":"jorive","Number":"24753","RawContent":null,"Title":"[EventPipe] A follow up to \"Create the Concept of Multiple EventPipe Sessions #24417\"","State":"open","Body":"## Follow up to https://github.com/dotnet/coreclr/pull/24417\r\n\r\n### Fixme:\r\n\r\n- [ ] EventPipe::Shutdown seems to be called more than once\r\n- [ ] Review if it is safe to call `EventPipe::Disable` on `EventPipe::Shutdown` (`EventPipe::Disable` removes the session from the container we are iterating on `EventPipe::Shutdown`)\r\n- [ ] Review why `EventPipe::WriteEvent` seems to be called after `EventPipe::Shutdown`\r\n- [ ] Need to make thread safe iterating over the `EventPipe::s_pSessions` under `EventPipe::WriteEventInternal`\r\n- [ ] Review EventPipe debug CONTRACTS: GC TRIGGER/NO TRIGGER, THROWS/NOTHROW, MODE PREEMTIVE/COOP/ANY, and made them more restrictive.\r\n- [ ] Add appropriate contracts to `EventPipeThread::SetBufferList` and `EventPipeThread::SetWriteBuffer`. Currently there is a TRY/CATCH/IGNORE in those two methods because they are called from a method with a NOTHROW contract. Should we add STRESS_LOG to the catch block? What's appropriate?\r\n- [ ] Provider Keywords' are of type INT64 and UINT64. We should make them all UINT64.\r\n- [ ] Improve the `PlatformSleep` used on the `EventPipeSession::ThreadProc` method. It is a naïve sleep that could be changed to a sleep the \"remaining time\", so that events are written to the IPC in a timely manner.\r\n- [ ] Add a mechanism that can notify EventPipe when there is an error on an active session, so it can be disposed properly from the list of active sessions.\r\n- [ ] Review why \"catch all\" providers set NULL as provider name, when user needs to specify `\"*\"`\r\n- [ ] Add better error handling to SampleProfiler: on `SampleProfiler::Initialize`, the call to `EventPipe::CreateProvider` could return NULL (potential AV lines below); on `SampleProfiler::Enable` the call to `LoadDependencies()` could fail and there is no error checking.\r\n\r\n### Todo\r\n\r\n- [ ] Consider adding a COMPLUS_* variable to control the SampleProfiler sampling rate (currently hardcoded). This would be for testing.\r\n- [ ] Allow user input to set the `rundownEnabled` parameter for a session.\r\n- [ ] Track active listening sessions on `EventPipeEvent` (using a 64-bit mask). Currently, providers track listening session by using a 64-bit bitmask. We should track at the event level instead, so sessions will listen to the events they requested.\r\n- [ ] Break the lock when doing `EventPipe::Disable`, otherwise disabling a session will be able to block all other sessions from doing work for a long time.\r\n- [ ] On `EventPipe::DisableInternal` we send process info globally (to all active sessions). Maybe we could only send it to the session that it's been disabled (only once)?\r\n- [ ] When calling `EventPipeConfiguration::Disable` we need to do a better job on reseting all keywords and levels for the remaining active sessions.\r\n- [ ] Maybe revert back EventPipeSessionID to be address of the pointer instead of the bit mask: https://github.com/dotnet/coreclr/pull/24417#discussion_r286384780","Url":"https://github.com/dotnet/coreclr/issues/24753","RelatedDescription":"Open issue \"[EventPipe] A follow up to \"Create the Concept of Multiple EventPipe Sessions #24417\"\" (#24753)"},{"Id":"447898881","IsPullRequest":true,"CreatedAt":"2019-05-23T23:42:08","Actor":"elinor-fung","Number":"24750","RawContent":null,"Title":"Fix restoring internal tools","State":"closed","Body":"When restoring internal tools through the DotNetCroeCLI task, there isn't a simple way to specify additional arguments while also relying on a config and external feed credentials. The projects under optdata should now always build with Arcade, so add a Directory.Build.props in that folder such that `ArcadeBuild` is always set to true for those projects instead of having to pass it as an argument.\r\n\r\nAs we onboard more to Arcade, the way we do IBC merge should really be changed so that we rely on the system provided by Arcade: set `UsingToolIbcOptimization` and restore using the Tools project in eng/, set `IbcOptimizationDataDir` (other required properties) and rely on the `ApplyOptimizations` target provided by Arcade, remove ibcmerge.csproj","Url":"https://github.com/dotnet/coreclr/pull/24750","RelatedDescription":"Closed or merged PR \"Fix restoring internal tools\" (#24750)"},{"Id":"447908243","IsPullRequest":false,"CreatedAt":"2019-05-23T22:57:54","Actor":"elinor-fung","Number":"24751","RawContent":null,"Title":"IBC merge should be switched to the Arcade system","State":"open","Body":"There is currently a separate project (`src/.nuget/optdata/ibcmerge.csproj`) just for restoring and getting the version for the IBC merge package. Then, the build script uses that version to determine the path to that package and uses the contents of that package directly.\r\n\r\nThe above should be removed and coreclr should rely on the system provided by Arcade for IBC merge:\r\n- set `UsingToolIbcOptimization`\r\n- restore using the Tools project in eng/\r\n- set `IbcOptimizationDataDir` (and other required properties)\r\n- rely on the `ApplyOptimizations` target\r\n\r\nSee [Arcade doc](https://github.com/dotnet/arcade/blob/master/Documentation/ArcadeSdk.md#ibc-optimization-data-embedding)","Url":"https://github.com/dotnet/coreclr/issues/24751","RelatedDescription":"Open issue \"IBC merge should be switched to the Arcade system\" (#24751)"},{"Id":"447888723","IsPullRequest":false,"CreatedAt":"2019-05-23T22:28:54","Actor":"ibasin","Number":"24748","RawContent":null,"Title":"AsyncLocal<> does not play nice with IAsyncDisposable interface","State":"closed","Body":"AsyncLocal which is supposed to represent \"ambient data that is local to a given asynchronous control flow, such as an asynchronous method\" does not work when IAsyncDisposable interface is used. Changes to the Value of an AsyncLocal<> that are made inside the DisposeAsync() method do not persist outside of the DisposeAsync() method meaning that they are counted as running is a separate logical context.\r\n\r\nThe issue is easy to reproduce. Create a new .NET Core Console app and replace the content of Program.cs with the code in the attached Program.txt. When you run it, the expected result is 0 1 0 0, while the program produces 0 1 0 1 (because changes made in DisposeAsync() do not persist). \r\n\r\nThis is a significant bug that prevents us using the ambient content pattern. I see no workaround as CallContext is not supported in .Net Core. \r\n\r\nPlease help!\r\n\r\nP.S. I am using VS2019 Preview and .NET Core 3.0 Preview5\r\n\r\nIlya Basin\r\n262-893-9741\r\n\r\n[Program.txt](https://github.com/dotnet/coreclr/files/3214283/Program.txt)\r\n","Url":"https://github.com/dotnet/coreclr/issues/24748","RelatedDescription":"Closed issue \"AsyncLocal<> does not play nice with IAsyncDisposable interface\" (#24748)"},{"Id":"447890448","IsPullRequest":true,"CreatedAt":"2019-05-23T21:54:56","Actor":"sandreenko","Number":"24749","RawContent":null,"Title":"Try to allocate 2 processors per test in helix.","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24749","RelatedDescription":"Open PR \"Try to allocate 2 processors per test in helix.\" (#24749)"},{"Id":"447813499","IsPullRequest":true,"CreatedAt":"2019-05-23T20:55:21","Actor":"Dotnet-GitSync-Bot","Number":"24743","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/24743","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#24743)"},{"Id":"447422154","IsPullRequest":true,"CreatedAt":"2019-05-23T18:47:40","Actor":"hoyosjs","Number":"24739","RawContent":null,"Title":"Consolidate native versioning","State":"closed","Body":"@elinor-fung I've cherry picked most of your change and tried to unify the versioning. Does this look right?\r\n","Url":"https://github.com/dotnet/coreclr/pull/24739","RelatedDescription":"Closed or merged PR \"Consolidate native versioning\" (#24739)"},{"Id":"447640253","IsPullRequest":true,"CreatedAt":"2019-05-23T18:24:12","Actor":"dotnet-maestro[bot]","Number":"24741","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190522.02\r\n- **Date Produced**: 5/22/2019 9:17 PM\r\n- **Commit**: 4573cea18beb40dc9a41014798060e48ff044c63\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27722-02\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24741","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#24741)"},{"Id":"447398863","IsPullRequest":true,"CreatedAt":"2019-05-23T17:51:19","Actor":"elinor-fung","Number":"24735","RawContent":null,"Title":"Fix missing version numbers in packaged files and getting IBC merge version in official build","State":"closed","Body":"Thanks @hoyosjs for pointing out issues happening in official build.","Url":"https://github.com/dotnet/coreclr/pull/24735","RelatedDescription":"Closed or merged PR \"Fix missing version numbers in packaged files and getting IBC merge version in official build\" (#24735)"},{"Id":"447788572","IsPullRequest":false,"CreatedAt":"2019-05-23T17:35:18","Actor":"stephentoub","Number":"24742","RawContent":null,"Title":"Tracing for dynamic assembly loading?","State":"open","Body":"It seems we don't have a good way to debug why assembly loads fail, e.g. what probing was done by the runtime when an Assembly.Load(string) fails to find the target assembly.","Url":"https://github.com/dotnet/coreclr/issues/24742","RelatedDescription":"Open issue \"Tracing for dynamic assembly loading?\" (#24742)"},{"Id":"447420245","IsPullRequest":true,"CreatedAt":"2019-05-23T17:35:16","Actor":"AndyAyersMS","Number":"24738","RawContent":null,"Title":"Add missing pin to two tests and re-enable for GC stress","State":"closed","Body":"Test was evidently assuming that because an object that referred to an array\r\nwas pinned, so was the array. Failure was intermittent, GC is not guaranteed\r\nto move objects or to render their former contents inaccessible.\r\n\r\nFixes #24173.\r\nFixes #24464.","Url":"https://github.com/dotnet/coreclr/pull/24738","RelatedDescription":"Closed or merged PR \"Add missing pin to two tests and re-enable for GC stress\" (#24738)"},{"Id":"447450874","IsPullRequest":true,"CreatedAt":"2019-05-23T15:14:39","Actor":"jkotas","Number":"24740","RawContent":null,"Title":"Reenable all CoreFX tests","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24740","RelatedDescription":"Closed or merged PR \"Reenable all CoreFX tests\" (#24740)"},{"Id":"447412631","IsPullRequest":true,"CreatedAt":"2019-05-23T07:28:10","Actor":"davmason","Number":"24737","RawContent":null,"Title":"Prevent duplicate class addition when a profiler adds a type","State":"closed","Body":"My previous change to allow profilers to add classes to R2R images had a flaw in it. We would call `LazyPopulateAvailableClassHash` and then `AddAvailableClass`, but the first call to `LazyPopulateAvailableClassHash` would populate the class hash with everything that was already in metadata, leading to an BadImageFormat exception when we tried to add a duplicate type in `AddAvailableClass`. It happened to work in my testing because `ICorProfilerInfo4::ApplyMetadata` would swallow exceptions. \r\n\r\nIf a profiler adds types in `ModuleLoadFinished` the exception won't be swallowed though and it will tear down the process.","Url":"https://github.com/dotnet/coreclr/pull/24737","RelatedDescription":"Closed or merged PR \"Prevent duplicate class addition when a profiler adds a type\" (#24737)"},{"Id":"447395697","IsPullRequest":true,"CreatedAt":"2019-05-23T04:28:50","Actor":"mikem8361","Number":"24734","RawContent":null,"Title":"Add warning banner and sos threads -special fix","State":"closed","Body":"Issue https://github.com/dotnet/diagnostics/issues/38","Url":"https://github.com/dotnet/coreclr/pull/24734","RelatedDescription":"Closed or merged PR \"Add warning banner and sos threads -special fix\" (#24734)"},{"Id":"447409340","IsPullRequest":true,"CreatedAt":"2019-05-23T01:34:16","Actor":"hoyosjs","Number":"24736","RawContent":null,"Title":"[WIP] Bump arcade version, SDK version, and consolidate native version sources","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24736","RelatedDescription":"Closed or merged PR \"[WIP] Bump arcade version, SDK version, and consolidate native version sources\" (#24736)"},{"Id":"447348382","IsPullRequest":true,"CreatedAt":"2019-05-23T01:19:21","Actor":"sandreenko","Number":"24731","RawContent":null,"Title":"Change timeouts for outerloop job and move one test to longRunningGc.","State":"closed","Body":"6d46cf4711: Change outerloop timeout per collection.\r\n\r\nWe have different test collections timeouts on Alpine.38.Amd64, examples:\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190521.780/workItem/JIT.jit64.hfa/wilogs\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190521.779/workItem/PayloadGroup0/wilogs\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fr2r~2Fcli~2F/20190521.783/workItem/Loader.classloader.TypeGeneratorTests.TypeGeneratorTest0-299/wilogs\r\n\r\n3f0922e778: Move _il_relthread-race to pri1 and mark as long running GC test.\r\nThe test is using 4 threads and calls GC.Collect while waiting for them.\r\n\r\nLink https://github.com/dotnet/coreclr/issues/23624.","Url":"https://github.com/dotnet/coreclr/pull/24731","RelatedDescription":"Closed or merged PR \"Change timeouts for outerloop job and move one test to longRunningGc.\" (#24731)"},{"Id":"447376805","IsPullRequest":true,"CreatedAt":"2019-05-23T00:51:01","Actor":"sdmaclea","Number":"24732","RawContent":null,"Title":"ComponentActivator GetType must throwOnError","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24732","RelatedDescription":"Closed or merged PR \"ComponentActivator GetType must throwOnError\" (#24732)"},{"Id":"447388600","IsPullRequest":true,"CreatedAt":"2019-05-22T23:43:47","Actor":"josalem","Number":"24733","RawContent":null,"Title":"Add COMPlus_DisableLttngLibraryLoad environment variable","State":"open","Body":"Adds a `COMPlus_DisableLttngLibraryLoad` environment variable for preventing LTTng from being loaded.  This doesn't change any default behavior and this library load can safely be skipped.\r\n\r\nShould hopefully unblock people stuck on #15693.\r\n\r\nCC - @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/24733","RelatedDescription":"Open PR \"Add COMPlus_DisableLttngLibraryLoad environment variable\" (#24733)"},{"Id":"447298004","IsPullRequest":true,"CreatedAt":"2019-05-22T22:13:23","Actor":"sywhang","Number":"24729","RawContent":null,"Title":"put lttng probe check under FEATURE_EVENT_TRACE","State":"closed","Body":"See https://github.com/dotnet/coreclr/commit/4685a1e008ad7cf4118e8778d89e63d87ca5b7b6#r33557088\r\n\r\n/cc @AntonLapounov ","Url":"https://github.com/dotnet/coreclr/pull/24729","RelatedDescription":"Closed or merged PR \"put lttng probe check under FEATURE_EVENT_TRACE\" (#24729)"},{"Id":"447266996","IsPullRequest":true,"CreatedAt":"2019-05-22T21:20:12","Actor":"cshung","Number":"24726","RawContent":null,"Title":"Relax the assertion for FieldDesc::GetBase","State":"closed","Body":"In [`proftoeeinterfaceimpl.cpp`](https://github.com/dotnet/coreclr/blob/96e8c58d77762497a8333e675db2fd396887decb/src/vm/proftoeeinterfaceimpl.cpp#L3303), we are calling [`FieldDesc.GetBase()`](https://github.com/dotnet/coreclr/blob/96e8c58d77762497a8333e675db2fd396887decb/src/vm/field.h#L454) under the [assumption](https://github.com/dotnet/coreclr/blob/96e8c58d77762497a8333e675db2fd396887decb/src/vm/proftoeeinterfaceimpl.cpp#L3203) that it will not throw or trigger GC, but the [contract](https://github.com/dotnet/coreclr/blob/96e8c58d77762497a8333e675db2fd396887decb/src/vm/field.h#L458) on `FieldDesc.GetBase()` seems to imply otherwise. \r\n\r\nAfter careful reading through the code, it appears that the contract of `FieldDesc.GetBase()` is wrong, the implementation of it won't throw or trigger GC, therefore I updated the contract to reflect what it is.","Url":"https://github.com/dotnet/coreclr/pull/24726","RelatedDescription":"Closed or merged PR \"Relax the assertion for FieldDesc::GetBase\" (#24726)"},{"Id":"447345104","IsPullRequest":true,"CreatedAt":"2019-05-22T21:11:30","Actor":"jbevain","Number":"24730","RawContent":null,"Title":"Add Arm64 to ImageFileMachine and ProcessorArchitecture","State":"open","Body":"This all started when a C++ Unity application referencing an ARM64 winmd failed to build using MSBuild.\r\n\r\nMSBuild currently has a dependency on `System.Reflection.ProcessorArchitecture`, and needs to support arm64 binaries. Here's a proposed PR:\r\n\r\nhttps://github.com/microsoft/msbuild/pull/4389\r\n\r\nThe current proposed fix is to use a direct integer constant value as ProcessorArchitecture, but ideally we'd like to avoid the enum values to diverge if somebody adds another enum entry for another architecture.\r\n\r\nAny comment on the approach or interest in this?","Url":"https://github.com/dotnet/coreclr/pull/24730","RelatedDescription":"Open PR \"Add Arm64 to ImageFileMachine and ProcessorArchitecture\" (#24730)"},{"Id":"447288636","IsPullRequest":false,"CreatedAt":"2019-05-22T18:46:42","Actor":"sywhang","Number":"24728","RawContent":null,"Title":"Improve logging for EventSource.WriteEvent parameter mismatch","State":"open","Body":"See: https://github.com/dotnet/coreclr/issues/24724#issuecomment-494913143\r\n\r\nWhen WriteEvent() is called with an incorrect number of parameters, we log a message to the debugger but it doesn't contain any info about the EventSource or EventId or the argument passed, which would be helpful when diagnosing which call to WriteEvent failed: https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/shared/System/Diagnostics/Tracing/EventSource.cs#L2084\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24728","RelatedDescription":"Open issue \"Improve logging for EventSource.WriteEvent parameter mismatch\" (#24728)"},{"Id":"447286226","IsPullRequest":false,"CreatedAt":"2019-05-22T18:40:54","Actor":"arcooke","Number":"24727","RawContent":null,"Title":"Run crashes without output. Internal CLR error 0x80131506 after clean.","State":"open","Body":"Hi.  I am running core 3 preview on two linux systems.  Same versions, same projects, both installed with snaps.  The runtime crashes on Solus, but not on KDE Neon (Ubuntu 18.04) \r\n\r\n**DOES** crash:\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     solus\r\n OS Version:  4.0\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /snap/dotnet-sdk/37/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [/snap/dotnet-sdk/37/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/snap/dotnet-sdk/37/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/snap/dotnet-sdk/37/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nDoes **NOT** crash:\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     neon\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /snap/dotnet-sdk/37/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [/snap/dotnet-sdk/37/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/snap/dotnet-sdk/37/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/snap/dotnet-sdk/37/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n---\r\n\r\n(the rest of this is related only to the Solus system)\r\n\r\nThe first issue I encountered is `dotnet run` was crashing without any output.  See a screen recording here: \r\n\r\nhttps://i.imgur.com/T0cbkZY.gifv\r\n\r\nAfter a bit of testing, I got an internal CLR error at the end of a `dotnet clean`.. but this only happened once.  I can't get that error to come back.  I'm not certain if this is related.\r\n\r\n```\r\n$ dotnet clean\r\nMicrosoft (R) Build Engine version 16.0.462+g62fb89029d for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 5/22/2019 12:29:45 PM.\r\n     1>Project \"/home/adam/Source/cura/cura-api/cura-api.csproj\" on node 1 (Clean target(s)).\r\n     1>_CheckForNETCoreSdkIsPreview:\r\n       /snap/dotnet-sdk/current/sdk/3.0.100-preview5-011568/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/home/adam/Source/cura/cura-api/cura-api.csproj]\r\n       CoreClean:\r\n         Deleting file ... blah blah ...\r\n         Deleting file ... blah blah ...\r\n         ...\r\n         ...\r\n         ...\r\n         Deleting file ... blah blah ...\r\n         Deleting file ... blah blah ...         \r\n     1>Done Building Project \"/home/adam/Source/cura/cura-api/cura-api.csproj\" (Clean target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.64\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.LinuxNetworkInterface.GetLinuxNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)\r\n```\r\n\r\nIf there is a log file somewhere that might help, just let me know where to find it and I will provide that.  Thanks","Url":"https://github.com/dotnet/coreclr/issues/24727","RelatedDescription":"Open issue \"Run crashes without output. Internal CLR error 0x80131506 after clean.\" (#24727)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"447968434","IsPullRequest":true,"CreatedAt":"2019-05-24T03:58:28","Actor":"peterhuene","Number":"11419","RawContent":null,"Title":"Remove using the explicit Build target with `dotnet build`.","State":"open","Body":"This commit prevents the `dotnet build` command from always passing the\r\n`/t:Build` option to MSBuild.\r\n\r\nUsers expect `dotnet build /t:<target>` to work like MSBuild does.  However,\r\nbecause `dotnet build` was implicitly adding `/t:Build`, instead of only the\r\nuser's target being run, the `Build` target runs first and then the user's\r\ntarget runs.\r\n\r\nThis change makes the `dotnet build` command more consistent with\r\n`dotnet msbuild` and desktop MSBuild.\r\n\r\nNote: this is a breaking change, although it only impacts projects that do not\r\nuse `Build` as the default target, which will now be the target invoked by\r\n`dotnet build`.  The workaround for those projects would be to pass `/t:Build`\r\nto `dotnet build` to restore the previous behavior.\r\n\r\nFixes #4815.","Url":"https://github.com/dotnet/cli/pull/11419","RelatedDescription":"Open PR \"Remove using the explicit Build target with `dotnet build`.\" (#11419)"},{"Id":"447956016","IsPullRequest":true,"CreatedAt":"2019-05-24T02:53:08","Actor":"johnbeisner","Number":"11418","RawContent":null,"Title":"Adding installation script tests","State":"open","Body":"When we materially change the way the installation scripts install the SDK for 3.0 and beyond - these tests, and the ability to add more installation script tests, will assist with development. \r\n","Url":"https://github.com/dotnet/cli/pull/11418","RelatedDescription":"Open PR \"Adding installation script tests\" (#11418)"},{"Id":"447922399","IsPullRequest":true,"CreatedAt":"2019-05-24T00:01:56","Actor":"dotnet-bot","Number":"11417","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11417","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11417)"},{"Id":"447922389","IsPullRequest":true,"CreatedAt":"2019-05-24T00:01:53","Actor":"dotnet-bot","Number":"11416","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11416","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11416)"},{"Id":"447339998","IsPullRequest":true,"CreatedAt":"2019-05-23T20:00:59","Actor":"livarcocc","Number":"11404","RawContent":null,"Title":"Update NuGet to 5.2.0-preview2.6020","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11404","RelatedDescription":"Closed or merged PR \"Update NuGet to 5.2.0-preview2.6020\" (#11404)"},{"Id":"447578329","IsPullRequest":false,"CreatedAt":"2019-05-23T17:52:27","Actor":"wmorian","Number":"11412","RawContent":null,"Title":"dotnet-list-package in a UnitTest project returns an error","State":"closed","Body":"## Steps to reproduce\r\ncreate a new xunit project:\r\n  `dotnet new xunit`\r\n\r\nThe referenced packages are:\r\n```xml \r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"16.0.1\" />\r\n    <PackageReference Include=\"xunit\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.0\" />\r\n</ItemGroup>\r\n```\r\n\r\nrestore project:\r\n`dotnet restore`\r\n\r\nlist all packages\r\n`dotnet list package`\r\n\r\n\r\n## Expected  behavior\r\n```\r\nλ  dotnet list package\r\nProject 'ListPackageUnitTest' has the following package references\r\n   [netcoreapp2.2]:\r\n   Top-level Package                   Requested   Resolved\r\n   > Microsoft.NETCore.App       (A)   [2.2.0, )   2.2.0\r\n   > xunit                             2.4.0       2.4.0\r\n   > xunit.runner.visualstudio         2.4.0       2.4.0\r\n```\r\n\r\n## Actual behavior\r\n```\r\nλ  dotnet list package\r\nerror: Sequence contains more than one element\r\n```\r\n\r\n## Note\r\nIf I comment out Microsoft.NET.Test.Sdk, then I got no error!\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\nλ  dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  1.0.1 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11412","RelatedDescription":"Closed issue \"dotnet-list-package in a UnitTest project returns an error\" (#11412)"},{"Id":"446579538","IsPullRequest":true,"CreatedAt":"2019-05-23T17:40:48","Actor":"dotnet-bot","Number":"11391","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11391","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11391)"},{"Id":"446579500","IsPullRequest":true,"CreatedAt":"2019-05-23T17:40:25","Actor":"dotnet-bot","Number":"11390","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11390","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11390)"},{"Id":"447625683","IsPullRequest":true,"CreatedAt":"2019-05-23T12:50:09","Actor":"dotnet-maestro[bot]","Number":"11415","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190522.1\r\n- **Date Produced**: 5/22/2019 1:26 PM\r\n- **Commit**: 18ccbe7678012c2001b13fc8838b87044eb82dc7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19272.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11415","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11415)"},{"Id":"447621995","IsPullRequest":true,"CreatedAt":"2019-05-23T12:43:34","Actor":"dotnet-maestro[bot]","Number":"11414","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190522.2\r\n- **Date Produced**: 5/22/2019 10:35 PM\r\n- **Commit**: adc956024076713234e69d41a11b0253fdfd90f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19272.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11414","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11414)"},{"Id":"447621711","IsPullRequest":true,"CreatedAt":"2019-05-23T12:07:36","Actor":"dotnet-maestro[bot]","Number":"11413","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11413","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#11413)"},{"Id":"447435416","IsPullRequest":true,"CreatedAt":"2019-05-23T03:35:46","Actor":"scottaddie","Number":"11411","RawContent":null,"Title":"Remove ef command from help output","State":"open","Body":"The `dotnet ef` command was removed from the .NET Core SDK as of 3.0 Preview 4 (per https://docs.microsoft.com/ef/core/what-is-new/ef-core-3.0/breaking-changes#the-ef-core-command-line-tool-dotnet-ef-is-no-longer-part-of-the-net-core-sdk). This PR removes `ef` from the `dotnet --help` output. It also removes 2 related tests.\r\n\r\nRelated to the discussion in https://github.com/aspnet/EntityFrameworkCore/issues/14016.","Url":"https://github.com/dotnet/cli/pull/11411","RelatedDescription":"Open PR \"Remove ef command from help output\" (#11411)"},{"Id":"447397296","IsPullRequest":false,"CreatedAt":"2019-05-23T00:26:23","Actor":"dsplaisted","Number":"11410","RawContent":null,"Title":"Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced","State":"open","Body":"For the 3.0 release, we plan to not support building Windows Forms and WPF apps on non-Windows operating systems.  (We may consider supporting it later, see for example https://github.com/dotnet/wpf/issues/688).\r\n\r\nMost WPF apps will use Microsoft.NET.Sdk.WindowsDesktop, and the experience for that on non-Windows is covered here: https://github.com/dotnet/cli/issues/10842\r\n\r\nHowever, some projects may not use the WindowsDesktop SDK, but will still have a WindowsDesktop FrameworkReference (either explicitly or via a PackageReference).  In that case, we should also fail gracefully.  This means:\r\n\r\n- On non-Windows, don't pre-emptively download WindowsDesktop targeting or runtime packs (which we normally do in case we encounter a transitive FrameworkReference)\r\n- When we encounter a WindowsDesktop FrameworkReference on non-Windows, generate an error message stating that the project can only be built on Windows (instead of the generic error message).","Url":"https://github.com/dotnet/cli/issues/11410","RelatedDescription":"Open issue \"Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced\" (#11410)"},{"Id":"447395763","IsPullRequest":true,"CreatedAt":"2019-05-23T00:18:14","Actor":"KevinRansom","Number":"11409","RawContent":null,"Title":"Update nunit test dependencies","State":"open","Body":"update nunit template","Url":"https://github.com/dotnet/cli/pull/11409","RelatedDescription":"Open PR \"Update nunit test dependencies\" (#11409)"},{"Id":"447101102","IsPullRequest":true,"CreatedAt":"2019-05-22T23:57:09","Actor":"dotnet-maestro[bot]","Number":"11400","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/22/2019 4:36 AM\r\n- **Commit**: 7e9c6d6aef7962c25a8a0ad1f9be9fc5c3f00ca9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19271.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11400","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11400)"},{"Id":"447097835","IsPullRequest":true,"CreatedAt":"2019-05-22T23:56:43","Actor":"dotnet-maestro[bot]","Number":"11399","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190521.2\r\n- **Date Produced**: 5/22/2019 7:08 AM\r\n- **Commit**: a67433ffadecd0c6848de330914a7928806d1240\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19271.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11399","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11399)"},{"Id":"447372742","IsPullRequest":true,"CreatedAt":"2019-05-22T23:17:03","Actor":"dotnet-maestro[bot]","Number":"11407","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11407","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#11407)"},{"Id":"447357917","IsPullRequest":true,"CreatedAt":"2019-05-22T23:17:02","Actor":"wli3","Number":"11405","RawContent":null,"Title":"Change to find current muxer","State":"closed","Body":"fix https://github.com/dotnet/cli/issues/11380 more discussion in the issue\r\n\r\nWhy we essentially move back to the original implementation in https://github.com/dotnet/cli/issues/2489 ?\r\n\r\nIt is more relate to the usage of corehost [CoreHost.cs](https://github.com/dotnet/cli/blob/342cf7949037a17f4bf18a59faf6fcff6a4d25b1/src/Microsoft.DotNet.Cli.Utils/CoreHost.cs)\r\n\r\nMuxer share the same logic with Muxer.GetDataFromAppDomain, by the time majority of the logic of [Publish](https://github.com/dotnet/cli/blob/342cf7949037a17f4bf18a59faf6fcff6a4d25b1/src/dotnet/commands/dotnet-publish/PublishCommand.cs) is in CLI and it need corehost to find correct asset location.\r\n\r\nAs part of the work. It changed to the current way of finding FX location. But I believe it was a mistake to assume dotnet.exe will be in the parent directory (we did not count multi level loop up in). Since there is no more corehost.cs and publish is in SDK. We should use the simple and correct solution.\r\n\r\nTryResolverMuxerFromPath is used when it was a separate library. And self contain app can get result from it. But it is also no longer needed.\r\n","Url":"https://github.com/dotnet/cli/pull/11405","RelatedDescription":"Closed or merged PR \"Change to find current muxer\" (#11405)"},{"Id":"447374440","IsPullRequest":true,"CreatedAt":"2019-05-22T22:46:37","Actor":"wli3","Number":"11408","RawContent":null,"Title":"Update arcade script","State":"closed","Body":"I need https://github.com/dotnet/arcade/pull/2836 to get in CLI.\r\n\r\nI just did a manual copy paste.\r\n","Url":"https://github.com/dotnet/cli/pull/11408","RelatedDescription":"Closed or merged PR \"Update arcade script\" (#11408)"},{"Id":"447360056","IsPullRequest":false,"CreatedAt":"2019-05-22T22:23:50","Actor":"wli3","Number":"11406","RawContent":null,"Title":"DotNetCoreInstaller@1` task failed with non-zero exit code when switch to 1","State":"closed","Body":"From @AArnott \r\n\r\nActually, [my PR to switch to use `UseDotNet@2`](https://github.com/microsoft/vs-streamjsonrpc/pull/283) can't complete because 3 PR builds in a row have failed in the `dotnet test` step. [All tests pass, but `dotnet.exe` returns a nonzero exit code](https://dev.azure.com/azure-public/vside/_build/results?buildId=6240&view=logs&jobId=2d2b3007-3c5c-5840-9bb0-2b1ea49925f3&taskId=ea74d3ec-af51-57bf-65e6-f50dd234a1e5&lineStart=1163&lineEnd=1177&colStart=1&colEnd=1).\r\n\r\n```\r\n\r\nTotal tests: 246. Passed: 246. Failed: 0. Skipped: 0.\r\nTest Run Successful.\r\nTest execution time: 10.1186 Seconds\r\n     1>Done Building Project \"d:\\a\\1\\s\\src\\StreamJsonRpc.Tests\\StreamJsonRpc.Tests.csproj\" (VSTest target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:22.63\r\n##[error]Error: The process 'C:\\hostedtoolcache\\windows\\dotnet\\dotnet.exe' failed with exit code 1\r\n##[warning]Invalid results file. Make sure the result format of the file 'd:\\a\\_temp\\VssAdministrator_fv-az48_2019-05-22_04_51_17.trx' matches 'VSTest' test results format.\r\n##[error]Dotnet command failed with non-zero exit code on the following projects : d:\\a\\1\\s\\src\\StreamJsonRpc.Tests\\StreamJsonRpc.Tests.csproj\r\n```\r\n\r\nAs you can see it also emits a warning about the .trx file. None of this happens when I use the `DotNetCoreInstaller@0` task. I wonder why in the world switching installer tasks would cause this problem. ","Url":"https://github.com/dotnet/cli/issues/11406","RelatedDescription":"Closed issue \"DotNetCoreInstaller@1` task failed with non-zero exit code when switch to 1\" (#11406)"},{"Id":"446935452","IsPullRequest":true,"CreatedAt":"2019-05-22T22:23:19","Actor":"wli3","Number":"11396","RawContent":null,"Title":"Delete flaky test","State":"closed","Body":" This load test like test style is not good for unit test. The error is likely caused by timeout since there are [instance](https://dev.azure.com/dnceng/public/_build/results?buildId=196283&view=ms.vss-test-web.build-test-results-tab&runId=4765564&resultId=100004) that it ran 24 seconds (cap 50 seconds). And it is fault positive. The deadlock has not been seen in product.\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11396","RelatedDescription":"Closed or merged PR \"Delete flaky test\" (#11396)"},{"Id":"447113862","IsPullRequest":false,"CreatedAt":"2019-05-22T21:13:05","Actor":"PDostalek","Number":"11401","RawContent":null,"Title":"[loc][Query][Cli] Localizability of \"ValueMustBeAnObject\" ","State":"closed","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\nThe property '{0}' must be an object if it is specified.\r\n\r\nFile Name:\r\ndotnet\\commands\\dotnet-run\\xlf\\LocalizableStrings.xlf\r\n\r\n==========================================\r\nQuery:\r\nPlease clarify if \"it\" stands for the property or the object.","Url":"https://github.com/dotnet/cli/issues/11401","RelatedDescription":"Closed issue \"[loc][Query][Cli] Localizability of \"ValueMustBeAnObject\" \" (#11401)"},{"Id":"447114913","IsPullRequest":false,"CreatedAt":"2019-05-22T21:12:50","Actor":"PDostalek","Number":"11402","RawContent":null,"Title":" [loc][Query][Cli] Localizability of \"CouldNotConvertToString\" ","State":"closed","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\nCould not convert the value of property '{0}' to a string.\r\n\r\nFile Name:\r\ndotnet\\commands\\dotnet-run\\xlf\\LocalizableStrings.xlf\r\n\r\n==========================================\r\nQuery:\r\nPlease, define what will placeholder be replaced by.","Url":"https://github.com/dotnet/cli/issues/11402","RelatedDescription":"Closed issue \" [loc][Query][Cli] Localizability of \"CouldNotConvertToString\" \" (#11402)"},{"Id":"447310981","IsPullRequest":false,"CreatedAt":"2019-05-22T19:44:43","Actor":"dasMulli","Number":"11403","RawContent":null,"Title":"Failure in Telemetry sending should not be printed to output","State":"open","Body":"## Steps to reproduce\r\n* macOS\r\n* .NET Core 3.0 preview 5\r\n* call an unknown `dotnet` command\r\n\r\n## Expected  behavior\r\nCommand is run or error message is written that a command is not found\r\n\r\n## Actual behavior\r\n```\r\n╰─ dotnet asdfs\r\nCould not execute because the specified command or file was not found.\r\nPossible reasons for this include:\r\n  * You misspelled a built-in dotnet command.\r\n  * You intended to execute a .NET Core program, but dotnet-asdfs does not exist.\r\n  * You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH.\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties.GetGatewayAddresses(Int32)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties..ctor(System.Net.NetworkInformation.BsdNetworkInterface, Int32)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface..ctor(System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetOrCreate(System.Collections.Generic.Dictionary`2<System.String,System.Net.NetworkInformation.BsdNetworkInterface>, System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface+<>c__DisplayClass5_0.<GetBsdNetworkInterfaces>b__2(System.String, LinkLayerAddressInfo*)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetBsdNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)                                         \r\n```\r\n\r\n## Environment data\r\n`netstat -nr` output:\r\n```\r\nRouting tables\r\n\r\nInternet:\r\nDestination        Gateway            Flags        Refs      Use   Netif Expire\r\ndefault            10.0.20.1          UGSc          212        0     en0       \r\n10.0.20/24         link#10            UCS             3        0     en0      !\r\n10.0.20.1/32       link#10            UCS             1        0     en0      !\r\n10.0.20.1          88:f7:c7:19:af:38  UHLWIir        53       63     en0   1183\r\n10.0.20.21         74:81:14:3e:b8:82  UHLWIi          1       99     en0   1071\r\n10.0.20.25/32      link#10            UCS             1        0     en0      !\r\n10.0.20.25         f0:18:98:2a:14:55  UHLWIi          3    26429     lo0       \r\n10.0.20.153        40:9c:28:55:70:55  UHLWIi          2    29726     en0   1097\r\n10.0.20.255        ff:ff:ff:ff:ff:ff  UHLWbI          0        2     en0      !\r\n127                127.0.0.1          UCS             0        0     lo0       \r\n127.0.0.1          127.0.0.1          UH              4    99561     lo0       \r\n169.254            link#10            UCS             2        0     en0      !\r\n169.254.164.251    70:56:81:c7:5d:3e  UHLSW           0       12     en0      !\r\n224.0.0/4          link#10            UmCS            3        0     en0      !\r\n224.0.0.251        1:0:5e:0:0:fb      UHmLWI          0      119     en0       \r\n224.0.0.252        1:0:5e:0:0:fc      UHmLWI          0      106     en0       \r\n239.255.255.250    1:0:5e:7f:ff:fa    UHmLWI          0      724     en0       \r\n255.255.255.255/32 link#10            UCS             1        0     en0      !\r\n255.255.255.255    ff:ff:ff:ff:ff:ff  UHLWbI          0        2     en0      !\r\n\r\nInternet6:\r\nDestination                             Gateway                         Flags         Netif Expire\r\ndefault                                 fe80::%utun0                    UGcI          utun0       \r\ndefault                                 fe80::%utun1                    UGcI          utun1       \r\ndefault                                 fe80::%utun2                    UGcI          utun2       \r\n::1                                     ::1                             UHL             lo0       \r\nfe80::%lo0/64                           fe80::1%lo0                     UcI             lo0       \r\nfe80::1%lo0                             link#2                          UHLI            lo0       \r\nfe80::%en5/64                           link#8                          UCI             en5       \r\nfe80::aede:48ff:fe00:1122%en5           ac:de:48:0:11:22                UHLI            lo0       \r\nfe80::aede:48ff:fe33:4455%en5           ac:de:48:33:44:55               UHLWIi          en5       \r\nfe80::%awdl0/64                         link#12                         UCI           awdl0       \r\nfe80::dcd9:4cff:fef2:f19e%awdl0         de:d9:4c:f2:f1:9e               UHLI            lo0       \r\nfe80::%utun0/64                         fe80::1bde:11de:239f:14e8%utun0 UcI           utun0       \r\nfe80::1bde:11de:239f:14e8%utun0         link#18                         UHLI            lo0       \r\nfe80::%utun1/64                         fe80::570:21dd:179:a871%utun1   UcI           utun1       \r\nfe80::570:21dd:179:a871%utun1           link#20                         UHLI            lo0       \r\nfe80::%utun2/64                         fe80::8be:f0d8:93e3:7e3c%utun2  UcI           utun2       \r\nfe80::8be:f0d8:93e3:7e3c%utun2          link#21                         UHLI            lo0       \r\nff01::%lo0/32                           ::1                             UmCI            lo0       \r\nff01::%en5/32                           link#8                          UmCI            en5       \r\nff01::%awdl0/32                         link#12                         UmCI          awdl0       \r\nff01::%utun0/32                         fe80::1bde:11de:239f:14e8%utun0 UmCI          utun0       \r\nff01::%utun1/32                         fe80::570:21dd:179:a871%utun1   UmCI          utun1       \r\nff01::%utun2/32                         fe80::8be:f0d8:93e3:7e3c%utun2  UmCI          utun2       \r\nff02::%lo0/32                           ::1                             UmCI            lo0       \r\nff02::%en5/32                           link#8                          UmCI            en5       \r\nff02::%awdl0/32                         link#12                         UmCI          awdl0       \r\nff02::%utun0/32                         fe80::1bde:11de:239f:14e8%utun0 UmCI          utun0       \r\nff02::%utun1/32                         fe80::570:21dd:179:a871%utun1   UmCI          utun1       \r\nff02::%utun2/32                         fe80::8be:f0d8:93e3:7e3c%utun2  UmCI          utun2  \r\n```\r\n\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.302 [/usr/local/share/dotnet/sdk]\r\n  2.1.403 [/usr/local/share/dotnet/sdk]\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  2.2.100-rtm-009602 [/usr/local/share/dotnet/sdk]\r\n  2.2.100 [/usr/local/share/dotnet/sdk]\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n  2.2.104 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n  2.2.106 [/usr/local/share/dotnet/sdk]\r\n  2.2.202 [/usr/local/share/dotnet/sdk]\r\n  2.2.203 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview3-010431 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-rtm-35673 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-rtm-35673 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-rtm-27109-04 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11403","RelatedDescription":"Open issue \"Failure in Telemetry sending should not be printed to output\" (#11403)"},{"Id":"446971389","IsPullRequest":false,"CreatedAt":"2019-05-22T07:18:36","Actor":"AriNuer","Number":"11398","RawContent":null,"Title":"Installation components are over translated on sdk installation wizard with Chinese","State":"open","Body":"## Steps to reproduce\r\n1. Open SDK 3.0.100-preview6-012031 on Win10-x64 CHN\r\n2. Observe the installation completion page of the installation wizard \r\n\r\n## Expected  behavior\r\nThe installation components should show in English rather than Chinese\r\n\r\n## Actual behavior\r\nOver translation occurs on installation components\r\n![image](https://user-images.githubusercontent.com/42136111/58154354-0745b380-7ca4-11e9-80a3-2a074812c838.png)\r\n\r\nNote:\r\nRelated components show in English during installation, take .net core runtime for example\r\n![image](https://user-images.githubusercontent.com/42136111/58154466-4116ba00-7ca4-11e9-9ae6-3988eccd72d3.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   3.0.100-preview6-012031\r\n Commit:    f84d1b7f66\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x86\r\n Base Path:   C:\\Program Files (x86)\\dotnet\\sdk\\3.0.100-preview6-012031\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27720-09\r\n  Commit:  c3145b06ba\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview6-012031 [C:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11398","RelatedDescription":"Open issue \"Installation components are over translated on sdk installation wizard with Chinese\" (#11398)"},{"Id":"446960503","IsPullRequest":false,"CreatedAt":"2019-05-22T06:47:27","Actor":"Jepson109","Number":"11397","RawContent":null,"Title":"Button \"install\" is truncated on the SDK installation wizard with Japanese","State":"open","Body":"## Steps to reproduce\r\n1.Open the sdk installation file (.NET core sdk 3.0.100-preview6-012031).\r\n2.Observe the button \"インストール\" .\r\n\r\n## Expected  behavior\r\nButton content isn't truncated\r\n\r\n## Actual behavior\r\nButton content is truncated\r\n![image](https://user-images.githubusercontent.com/38854445/58152836-23dfec80-7ca0-11e9-8d90-c524ea6022cc.png)\r\n![image](https://user-images.githubusercontent.com/38854445/58152967-73261d00-7ca0-11e9-9b51-58181604cb22.png)\r\n\r\n## Environment data\r\nVS Version: 16.2.0 Preview 2.0 [28921.339.d16.2stg]\r\n`dotnet --info` output:\r\n.NET Core SDK (global.json を反映):\r\n Version:   3.0.100-preview6-012031\r\n Commit:    f84d1b7f66\r\n\r\nランタイム環境:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012031\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27720-09\r\n  Commit:  c3145b06ba\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012031 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11397","RelatedDescription":"Open issue \"Button \"install\" is truncated on the SDK installation wizard with Japanese\" (#11397)"},{"Id":"446782608","IsPullRequest":true,"CreatedAt":"2019-05-22T05:27:23","Actor":"dsplaisted","Number":"11392","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"Includes NuGet update which should unblock #11366 ","Url":"https://github.com/dotnet/cli/pull/11392","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#11392)"},{"Id":"446922390","IsPullRequest":false,"CreatedAt":"2019-05-22T04:02:04","Actor":"Jepson109","Number":"11395","RawContent":null,"Title":"Hotkey conflict on the SDK installation wizard with Turkish","State":"open","Body":"## Steps to reproduce\r\n1.Open  the sdk installation file (.NET core sdk 3.0.100-preview6-012031)\r\n2.Tap \"Alt\" key to observe the hotkey on installation wizard\r\n\r\n## Expected  behavior\r\nHotkeys work fine on the installation wizard\r\n\r\n## Actual behavior\r\nHotkey \"k\" is conflicted on the installation wizard\r\n![Untitled](https://user-images.githubusercontent.com/38854445/58146582-5500f280-7c89-11e9-805c-36128951e94e.png)\r\n## Environment data\r\nVS Version: 16.2.0 Preview 2.0 [28920.75.d16.2stg ]\r\n`dotnet --info` output:\r\n.NET Core SDK (varsa global.json'u yansıtır):\r\n Version:   3.0.100-preview6-012031\r\n Commit:    f84d1b7f66\r\n\r\nÇalışma Zamanı Ortamı:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012031\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27720-09\r\n  Commit:  c3145b06ba\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012031 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11395","RelatedDescription":"Open issue \"Hotkey conflict on the SDK installation wizard with Turkish\" (#11395)"},{"Id":"446877660","IsPullRequest":true,"CreatedAt":"2019-05-22T03:57:15","Actor":"livarcocc","Number":"11394","RawContent":null,"Title":"Merge 2.2.3xx into 2.2.4xx","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11394","RelatedDescription":"Closed or merged PR \"Merge 2.2.3xx into 2.2.4xx\" (#11394)"},{"Id":"446876975","IsPullRequest":true,"CreatedAt":"2019-05-22T03:56:15","Actor":"livarcocc","Number":"11393","RawContent":null,"Title":"Merge 2.1.7xx into release 2.1.8xx","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11393","RelatedDescription":"Closed or merged PR \"Merge 2.1.7xx into release 2.1.8xx\" (#11393)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"447649294","IsPullRequest":true,"CreatedAt":"2019-05-23T13:11:12","Actor":"dotnet-maestro[bot]","Number":"1206","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190522.8\r\n- **Date Produced**: 5/23/2019 6:40 AM\r\n- **Commit**: daa005b23d4954d4a41b1663171d6ada2d960bd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19272.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1206","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1206)"},{"Id":"447620634","IsPullRequest":true,"CreatedAt":"2019-05-23T12:15:47","Actor":"dotnet-maestro[bot]","Number":"1205","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19272.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1205","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1205)"},{"Id":"444399962","IsPullRequest":true,"CreatedAt":"2019-05-22T19:20:47","Actor":"dotnet-maestro[bot]","Number":"1192","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.4\r\n- **Date Produced**: 5/16/2019 7:11 PM\r\n- **Commit**: 61cc7d4d347300835925ce5245bfc3ecb6b621d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190517.7\r\n- **Date Produced**: 5/18/2019 4:34 AM\r\n- **Commit**: 55ce2900743cb609e51e2c6487e87e42eb627880\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19267.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190518.2\r\n- **Date Produced**: 5/18/2019 3:22 PM\r\n- **Commit**: 6d0514d3da59137630b9add5b5e619bce2631f02\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19268.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 8:30 AM\r\n- **Commit**: e913fb3b02d4089a91ff91c041c5f6e7c29038b0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.2\r\n- **Date Produced**: 5/20/2019 1:26 PM\r\n- **Commit**: 3b0760f8789d5d4bd146b36bd9051696d7a56bfa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19271.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1192","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1192)"},{"Id":"447122667","IsPullRequest":true,"CreatedAt":"2019-05-22T13:15:56","Actor":"dotnet-maestro[bot]","Number":"1204","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1204)"},{"Id":"445645996","IsPullRequest":true,"CreatedAt":"2019-05-21T22:04:59","Actor":"terrajobst","Number":"1198","RawContent":null,"Title":"Add missing members to MemoryMarshal","State":"closed","Body":"This fixes #1193.","Url":"https://github.com/dotnet/standard/pull/1198","RelatedDescription":"Closed or merged PR \"Add missing members to MemoryMarshal\" (#1198)"},{"Id":"444621714","IsPullRequest":false,"CreatedAt":"2019-05-21T22:04:59","Actor":"wtgodbe","Number":"1193","RawContent":null,"Title":"Fix APICompat issues with netstandard2.0 System.Memory","State":"closed","Body":"After adding a shim for `System.Memory` to netstandard2.1, we uncovered an incompatibility with netstandard2.0:\r\n\r\nhttps://github.com/dotnet/standard/blob/d3413ee9ec761bdf067114a498b9da3ebf0149df/src/apicompat/baselines/ApiCompatBaseline.netstandard2.0.txt#L72-L74\r\n\r\nIndeed, these members exist in CoreFx's ref, but are missing in Standard:  https://github.com/dotnet/corefx/blob/1f9b84a0804e868c7e0f37a3c10fbaf7c735ae14/src/System.Memory/ref/System.Memory.cs#L471\r\n\r\n@terrajobst we should add these missing members to the surface area for `netstandard2.1`","Url":"https://github.com/dotnet/standard/issues/1193","RelatedDescription":"Closed issue \"Fix APICompat issues with netstandard2.0 System.Memory\" (#1193)"},{"Id":"446749048","IsPullRequest":true,"CreatedAt":"2019-05-21T19:26:08","Actor":"ericstj","Number":"1203","RawContent":null,"Title":"Fix public key of ns2.0 shims","State":"closed","Body":"System.Buffers, System.Memory, and System.Threading.Tasks.Extensions all use\r\nthe open key.  Ensure we use the same key here.","Url":"https://github.com/dotnet/standard/pull/1203","RelatedDescription":"Closed or merged PR \"Fix public key of ns2.0 shims\" (#1203)"},{"Id":"446608759","IsPullRequest":true,"CreatedAt":"2019-05-21T14:48:22","Actor":"dotnet-maestro[bot]","Number":"1202","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/21/2019 9:31 AM\r\n- **Commit**: 51a1f16ee2aaded4ce1fca6847471b58f7ffa160\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1202","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1202)"},{"Id":"445640404","IsPullRequest":true,"CreatedAt":"2019-05-20T20:27:35","Actor":"terrajobst","Number":"1197","RawContent":null,"Title":"Add asymmetric key import/export APIs","State":"closed","Body":"This fixes #1178.","Url":"https://github.com/dotnet/standard/pull/1197","RelatedDescription":"Closed or merged PR \"Add asymmetric key import/export APIs\" (#1197)"},{"Id":"440265255","IsPullRequest":false,"CreatedAt":"2019-05-20T20:27:35","Actor":"bartonjs","Number":"1178","RawContent":null,"Title":"Consider asymmetric key import/export API for NS2.1","State":"closed","Body":"https://github.com/dotnet/corefx/issues/20414 significantly helps .NET applications work with asymmetric keys \"the Linux way\", as well as other generally useful in hybrid environments scenarios.\r\n\r\nTypes to diff against corefx/3.0:\r\n* System.Security.Cryptography.AsymmetricAlgorithm\r\n* System.Security.Cryptography.RSA\r\n* System.Security.Cryptography.ECDsa\r\n* System.Security.Cryptography.ECDiffieHellman\r\n\r\n(and potentially the deriving types, for their `override`s)","Url":"https://github.com/dotnet/standard/issues/1178","RelatedDescription":"Closed issue \"Consider asymmetric key import/export API for NS2.1\" (#1178)"},{"Id":"445635400","IsPullRequest":true,"CreatedAt":"2019-05-20T20:22:04","Actor":"terrajobst","Number":"1196","RawContent":null,"Title":"Enable C# mode command line diff","State":"closed","Body":"When diffing on the command line, enabling this ensures that hunk headers will use the containing construct (i.e. method, type, or namespace).\r\n\r\nFor example, instead of this (pay attention to the `@@` line):\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex 9f68653..19d239a 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -101,8 +101,20 @@ namespace System.Security.Cryptography\r\n         public virtual byte[] ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan<char> password, System.Security.Cryptography.PbeParameters pbeParameters) { throw null; }\r\n         public virtual byte[] ExportPkcs8PrivateKey() { throw null; }\r\n+        public virtual byte[] ExportSubjectPublicKeyInfo() { throw null; }\r\n         public virtual void FromXmlString(string xmlString) { }\r\n     }\r\n     public abstract partial class AsymmetricKeyExchangeDeformatter\r\n     {\r\n```\r\n\r\nYou'll see this:\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex 9f68653..19d239a 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -101,8 +101,20 @@ public abstract partial class AsymmetricAlgorithm : System.IDisposable\r\n         public virtual byte[] ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan<char> password, System.Security.Cryptography.PbeParameters pbeParameters) { throw null; }\r\n         public virtual byte[] ExportPkcs8PrivateKey() { throw null; }\r\n+        public virtual byte[] ExportSubjectPublicKeyInfo() { throw null; }\r\n         public virtual void FromXmlString(string xmlString) { }\r\n     }\r\n     public abstract partial class AsymmetricKeyExchangeDeformatter\r\n     {\r\n```","Url":"https://github.com/dotnet/standard/pull/1196","RelatedDescription":"Closed or merged PR \"Enable C# mode command line diff\" (#1196)"},{"Id":"446103850","IsPullRequest":true,"CreatedAt":"2019-05-20T13:38:53","Actor":"dotnet-maestro[bot]","Number":"1201","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 11:22 AM\r\n- **Commit**: e58b35cd0f8fe6caa194ca7e48388d8d59854fe0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19270.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1201","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1201)"},{"Id":"445816606","IsPullRequest":true,"CreatedAt":"2019-05-19T13:14:40","Actor":"dotnet-maestro[bot]","Number":"1200","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190518.5\r\n- **Date Produced**: 5/18/2019 11:19 PM\r\n- **Commit**: 36ad1c62d4bb753a489d4c055b909af2cb6d407f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19268.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1200","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1200)"},{"Id":"445713531","IsPullRequest":true,"CreatedAt":"2019-05-18T13:13:40","Actor":"dotnet-maestro[bot]","Number":"1199","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190517.12\r\n- **Date Produced**: 5/18/2019 4:32 AM\r\n- **Commit**: c671ce2be16ae3c6086a061d9d94b81005217735\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19267.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19267.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19267.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1199","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1199)"},{"Id":"445427447","IsPullRequest":true,"CreatedAt":"2019-05-17T14:02:55","Actor":"dotnet-maestro[bot]","Number":"1195","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190516.12\r\n- **Date Produced**: 5/17/2019 8:31 AM\r\n- **Commit**: 6f9570e012054bf407778c0b07632e7733ecbb13\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19266.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19266.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19266.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1195","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1195)"},{"Id":"444869749","IsPullRequest":false,"CreatedAt":"2019-05-16T10:11:58","Actor":"KexyBiscuit","Number":"1194","RawContent":null,"Title":"Is ValueTask<> missing in latest NetStandard?","State":"open","Body":"```\r\nerror CS0012: The type 'ValueTask<>' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nMight be related to #1180?\r\n\r\n```\r\n> dotnet --version\r\n3.0.100-preview6-011910\r\n```\r\n\r\n```\r\n<TargetFramework>netstandard2.1</TargetFramework>\r\n<NetStandardImplicitPackageVersion>2.1.0-prerelease.19265.2</NetStandardImplicitPackageVersion>\r\n```","Url":"https://github.com/dotnet/standard/issues/1194","RelatedDescription":"Open issue \"Is ValueTask<> missing in latest NetStandard?\" (#1194)"},{"Id":"442461759","IsPullRequest":true,"CreatedAt":"2019-05-15T21:27:47","Actor":"terrajobst","Number":"1183","RawContent":null,"Title":"Seal types that cannot be inherited","State":"closed","Body":"These changes are related to #1176 and address the same problem.\r\n\r\nFixes #1171.","Url":"https://github.com/dotnet/standard/pull/1183","RelatedDescription":"Closed or merged PR \"Seal types that cannot be inherited\" (#1183)"},{"Id":"441943870","IsPullRequest":true,"CreatedAt":"2019-05-15T19:22:33","Actor":"wtgodbe","Number":"1180","RawContent":null,"Title":"Add shims to netstandard2.1 for types that used to have OOB packages","State":"closed","Body":"Resolves https://github.com/dotnet/corefx/issues/36719 & https://github.com/dotnet/standard/issues/1063. These TypeForward files were generated with `GenApi`, using the `netstandard2.0` assets from the packages I added to `netstandard.depproj`. \r\n\r\nStill to do:\r\n- Add a DARC subscription from CoreFx -> Standard\r\n- Add a placeholder file for `netstandard2.1` to the `System.Reflection.Emit*` packages in CoreFx - will be done by https://github.com/dotnet/corefx/pull/37532\r\n\r\n@ericstj @terrajobst PTAL\r\n\r\nCC @bartonjs ","Url":"https://github.com/dotnet/standard/pull/1180","RelatedDescription":"Closed or merged PR \"Add shims to netstandard2.1 for types that used to have OOB packages\" (#1180)"},{"Id":"442864446","IsPullRequest":true,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1185","RawContent":null,"Title":"Fail CI build if APICompat baseline files would change","State":"closed","Body":"Currently, if a change in Arcade would cause changes in the APICompat baseline files, the baseline files are rewritten without throwing an error. If somebody makes such a change without checking in the changes to the APICompat baselines, the CI should fail. This change achieves that. Resolves https://github.com/dotnet/standard/issues/1184.\r\n\r\n@ericstj @terrajobst PTAL","Url":"https://github.com/dotnet/standard/pull/1185","RelatedDescription":"Closed or merged PR \"Fail CI build if APICompat baseline files would change\" (#1185)"},{"Id":"442475952","IsPullRequest":false,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1184","RawContent":null,"Title":"Fail CI when APICompat Baseline files change","State":"closed","Body":"Right now, when a change to Standard causes a change to the APICompat baseline(s), the build succeeds, and the baseline files are re-written with the change. In CI, we should fail the build on changes to the APICompat baseline files (rather than silently rewriting them).\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1184","RelatedDescription":"Closed issue \"Fail CI when APICompat Baseline files change\" (#1184)"},{"Id":"443876288","IsPullRequest":true,"CreatedAt":"2019-05-14T12:39:27","Actor":"dotnet-maestro[bot]","Number":"1191","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19263.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1191","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1191)"},{"Id":"443629557","IsPullRequest":true,"CreatedAt":"2019-05-14T00:00:25","Actor":"JohnTortugo","Number":"1189","RawContent":null,"Title":"Update azure-pipelines.yml","State":"closed","Body":"Related to: https://github.com/dotnet/core-eng/issues/6291","Url":"https://github.com/dotnet/standard/pull/1189","RelatedDescription":"Closed or merged PR \"Update azure-pipelines.yml\" (#1189)"},{"Id":"443632814","IsPullRequest":false,"CreatedAt":"2019-05-13T22:41:56","Actor":"yangsong2828","Number":"1190","RawContent":null,"Title":"HttpModule with Microsoft.AspNetCore.Http","State":"open","Body":"We have multiple projects depend on one common IIS module, say Logging module.\r\nHowever, we can't move all projects to asp.net core at one shot. But we want to move one at a time.\r\nIf I port it to middleware, it can't be used by legacy IIS projects any more.\r\nSo what is your recommendation to move those common piece to asp .net core? Thanks.","Url":"https://github.com/dotnet/standard/issues/1190","RelatedDescription":"Open issue \"HttpModule with Microsoft.AspNetCore.Http\" (#1190)"},{"Id":"443361033","IsPullRequest":true,"CreatedAt":"2019-05-13T12:19:21","Actor":"dotnet-maestro[bot]","Number":"1188","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:58 PM\r\n- **Commit**: 30682cda0dd7ca1765463749dd91ec3cfec75eb9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19262.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1188","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1188)"},{"Id":"443096722","IsPullRequest":true,"CreatedAt":"2019-05-12T12:18:57","Actor":"dotnet-maestro[bot]","Number":"1187","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 1:13 PM\r\n- **Commit**: 136dfbfa8a6173dadc107bf7393bdeaceecb4d3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19261.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1187","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1187)"},{"Id":"442986105","IsPullRequest":true,"CreatedAt":"2019-05-11T12:28:56","Actor":"dotnet-maestro[bot]","Number":"1186","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19260.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1186","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1186)"},{"Id":"442425601","IsPullRequest":true,"CreatedAt":"2019-05-09T21:41:45","Actor":"joperezr","Number":"1182","RawContent":null,"Title":"Fix official build which is failing when trying to publish the packages to BAR","State":"closed","Body":"cc: @wtgodbe \r\n\r\nOfficial builds are failing when trying to publish packages to BAR because the AssetsManifest file isn't being generated any longer. This was caused because of a breaking change in Arcade. These changes will fix this issue.","Url":"https://github.com/dotnet/standard/pull/1182","RelatedDescription":"Closed or merged PR \"Fix official build which is failing when trying to publish the packages to BAR\" (#1182)"},{"Id":"442368786","IsPullRequest":true,"CreatedAt":"2019-05-09T19:01:19","Actor":"joperezr","Number":"1181","RawContent":null,"Title":"Move WithCancellation/ConfigureAwait extension methods to TaskAsyncEnumerableExtensions","State":"closed","Body":"cc: @stephentoub @terrajobst \r\n\r\nResponding to changes made by https://github.com/dotnet/corefx/pull/37367 where the extnsion methods where moved to a new type. This is the first time I make a change like this so please do let me know if I missed anything.","Url":"https://github.com/dotnet/standard/pull/1181","RelatedDescription":"Closed or merged PR \"Move WithCancellation/ConfigureAwait extension methods to TaskAsyncEnumerableExtensions\" (#1181)"},{"Id":"441500740","IsPullRequest":false,"CreatedAt":"2019-05-08T00:36:05","Actor":"PHuhn","Number":"1179","RawContent":null,"Title":"System.ComponentModel.Annotations V4.5.0 attributes in .Net Standard library not working in .Net framework","State":"open","Body":"Thanks for creating .Net Standard...\r\n\r\nI am attempting to migrate my .Net Framework libraries to .Net Standard, so my libraries will be available in .Net Framework and .Net Core. One of the libraries is using DataAnnotations as follows:\r\n```\r\npublic partial class LogData\r\n{\r\n    [Key, Column(Order = 1)]\r\n    [Required(ErrorMessage = \"Id is required.\")]\r\n    public long Id { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Date is required.\")]\r\n    public DateTime Date { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Application is required.\"), MaxLength(30, ErrorMessage = \"'Application' must be 30 or less characters.\")]\r\n    public string Application { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Method is required.\"), MaxLength(255, ErrorMessage = \"'Method' must be 255 or less characters.\")]\r\n    public string Method { get; set; }\r\n\r\n    [Required(ErrorMessage = \"LogLevel is required.\")]\r\n    [Range(typeof(byte), \"0\", \"4\", ErrorMessage = \"'LogLevel' must be between 0 and 4\")]\r\n    public byte LogLevel { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Level is required.\"), MaxLength(8, ErrorMessage = \"'Level' must be 8 or less characters.\")]\r\n    public string Level { get; set; }\r\n\r\n    [Required(ErrorMessage = \"UserAccount is required.\"), MaxLength(255, ErrorMessage = \"'UserAccount' must be 255 or less characters.\")]\r\n    public string UserAccount { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Message is required.\"), MaxLength(4000, ErrorMessage = \"'Message' must be 4000 or less characters.\")]\r\n    public string Message { get; set; }\r\n\r\n    [MaxLength(4000, ErrorMessage = \"'Exception' must be 4000 or less characters.\")]\r\n    public string Exception { get; set; }\r\n}\r\n```\r\nThe migration **up** method in the .Net Core console applications is as follows:\r\n```\r\nmigrationBuilder.CreateTable(\r\n    name: \"Logs\",\r\n    columns: table => new\r\n    {\r\n        Id = table.Column<long>(nullable: false)\r\n            .Annotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn),\r\n        Date = table.Column<DateTime>(nullable: false),\r\n        Application = table.Column<string>(maxLength: 30, nullable: false),\r\n        Method = table.Column<string>(maxLength: 255, nullable: false),\r\n        LogLevel = table.Column<byte>(nullable: false),\r\n        Level = table.Column<string>(maxLength: 8, nullable: false),\r\n        UserAccount = table.Column<string>(maxLength: 255, nullable: false),\r\n        Message = table.Column<string>(maxLength: 4000, nullable: false),\r\n        Exception = table.Column<string>(maxLength: 4000, nullable: true)\r\n    },\r\n    constraints: table =>\r\n    {\r\n        table.PrimaryKey(\"PK_Logs\", x => x.Id);\r\n    });\r\n```\r\nThis as I would expect it to be.\r\n\r\nThe migration **up** method in the .Net Framework console applications is as follows:\r\n```\r\nCreateTable(\r\n    \"dbo.Logs\",\r\n    c => new\r\n        {\r\n            Id = c.Long(nullable: false, identity: true),\r\n            Date = c.DateTime(nullable: false),\r\n            Application = c.String(),\r\n            Method = c.String(),\r\n            LogLevel = c.Byte(nullable: false),\r\n            Level = c.String(),\r\n            UserAccount = c.String(),\r\n            Message = c.String(),\r\n            Exception = c.String(),\r\n        })\r\n    .PrimaryKey(t => t.Id);\r\n```\r\nThis is lacking the various length constraints.  Is this the intended output?\r\n\r\nI have attached a test solution. It has three projects as follows:\r\n*\tNSG.LogData (.NetStandard library containing annotated-data class),\r\n*\tNSG.ConsoleCore (.Net Core console project, that includes NSG.LogData library, and creates a code-first database),\r\n*\tNSG.ConsoleNet (.Net Framework console project, that includes NSG.LogData library, and creates a code-first database).\r\n\r\nPackage installation for NSG.ConsoleCore:\r\n\r\n\tInstall-Package Microsoft.EntityFrameworkCore.SqlServer\r\n\tInstall-Package Microsoft.EntityFrameworkCore.Tools\r\n\r\nMigration command for NSG.ConsoleCore:\r\n\r\n\tEntityFrameworkCore\\Add-Migration -name InitialCreate -Project NSG.ConsoleCore -StartupProject NSG.ConsoleCore\r\n\r\nMigration command for NSG.ConsoleNet:\r\n\r\n\tEntityFramework\\Add-Migration -name InitialCreate -Project NSG.ConsoleNet -StartupProject NSG.ConsoleNet\r\n\r\n\r\n\r\n\r\n[NSG.DataAnnotations.zip](https://github.com/dotnet/standard/files/3154973/NSG.DataAnnotations.zip)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1179","RelatedDescription":"Open issue \"System.ComponentModel.Annotations V4.5.0 attributes in .Net Standard library not working in .Net framework\" (#1179)"},{"Id":"439822079","IsPullRequest":true,"CreatedAt":"2019-05-03T16:58:36","Actor":"mmitche","Number":"1177","RawContent":null,"Title":"Move to Azure DevOps for public CI","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1177","RelatedDescription":"Closed or merged PR \"Move to Azure DevOps for public CI\" (#1177)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"447966142","IsPullRequest":true,"CreatedAt":"2019-05-24T03:45:59","Actor":"Dotnet-GitSync-Bot","Number":"37920","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @safern","Url":"https://github.com/dotnet/corefx/pull/37920","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr,corert\" (#37920)"},{"Id":"447913921","IsPullRequest":true,"CreatedAt":"2019-05-24T03:45:14","Actor":"Dotnet-GitSync-Bot","Number":"37913","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @davidwrighton","Url":"https://github.com/dotnet/corefx/pull/37913","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#37913)"},{"Id":"447965985","IsPullRequest":true,"CreatedAt":"2019-05-24T03:45:04","Actor":"anurse","Number":"37919","RawContent":null,"Title":"fix #36798 by updating PipeReader doc comment","State":"open","Body":"Fixes #36798\r\n\r\nCorrects an inaccurate doc comment in System.IO.Pipelines.PipeReader.\r\n\r\nBased this on the existing comment for `PipeWriter.OnReaderCompleted`:\r\n\r\nhttps://github.com/dotnet/corefx/blob/af562e84b8b5a4a335ceb5006886a6c42c1c023e/src/System.IO.Pipelines/src/System/IO/Pipelines/PipeWriter.cs#L29-L32\r\n\r\ncc @AArnott ","Url":"https://github.com/dotnet/corefx/pull/37919","RelatedDescription":"Open PR \"fix #36798 by updating PipeReader doc comment\" (#37919)"},{"Id":"447948408","IsPullRequest":true,"CreatedAt":"2019-05-24T03:14:51","Actor":"ahsonkhan","Number":"37917","RawContent":null,"Title":"Fix typo in JsonSerializer api documentation.","State":"closed","Body":"Noticed typo when reviewing https://github.com/dotnet/corefx/pull/37912.","Url":"https://github.com/dotnet/corefx/pull/37917","RelatedDescription":"Closed or merged PR \"Fix typo in JsonSerializer api documentation.\" (#37917)"},{"Id":"447948477","IsPullRequest":false,"CreatedAt":"2019-05-24T02:15:33","Actor":"RobertBouillon","Number":"37918","RawContent":null,"Title":"Update the File System API and add BCL support for hierarchies","State":"open","Body":"I'd like to propose a revision to the System.IO namespace for file handling, and an addition to the BCL to support hierarchies. I'd separate them into two issues, but I believe they complement each other and should be considered together. Specifically, I'd like to address 4 issues:\r\n\r\n1. When I require a file or directory as an argument, I'm forced to pass a string as a path. This not only makes my argument ambiguous with other string arguments I may have, but all of the related functionality I need to manipulate or validate the target file and path are in static classes (File, Directory, and Path).\r\n2. A path and a file should be distinct. Sometimes my argument should be a path. Other times, it should be a file or directory. While a file _can_ be represented by a path, I want to use the type to communicate to the developer what my method expects. I then have immediate access to type-specific functionality within my method.\r\n3. A path is a sequence of unique IDs that points to a distinct element in a hierarchy. A string is not a path - it's a representation of the path - a representation of each unique element separated by a delimiter. Path manipulation currently requires a lot of string parsing that tends to be slow, verbose, error-prone, and redundant. It seems logical to create a Path class to contain path-related functionality, and to store the path as what it is: a sequence of ID's.\r\n4. Since a Path is hierarchy-specific, it's worth looking at what kind of support we can add for hierarchies to the BCL. A hierarchy is essentially two entities: Leaves and Branches. A branch is technically a leaf that has children. This is pretty easy to represent as interfaces. This is useful when dealing with hierarchies that may have completely different implementations, such as a local directory structure, and one stored in the cloud.\r\n\r\nPlease consider the following API and Proof-of-Concept. This is not a complete representation of my vision, but I'd like to kick the idea around before putting too much work into it. \r\n\r\nCreate a file at `C:\\temp\\foo\\bar.txt` to run.\r\n\r\n```csharp\r\nusing System;\r\nusing System.Linq;\r\nusing System.Collections.Generic;\r\nusing System.Collections.Hierarchy;\r\n\r\nnamespace Sandbox.Hierarchy.IO\r\n{\r\n  public static class Program\r\n  {\r\n    public static void Main()\r\n    {\r\n      var folder = new Directory(@\"C:\\temp\");\r\n      var file = folder[new FileSystemPath(@\"foo\\bar.txt\")] as File;\r\n\r\n      Console.WriteLine(file.ReadAllText());\r\n      Console.WriteLine(file.Extension);\r\n\r\n      foreach (var child in folder.Traverse())\r\n        Console.WriteLine(child.FullPath);\r\n\r\n      Console.WriteLine(file.Root.AvailableFreeSpace);\r\n      Save(file, true);\r\n    }\r\n\r\n    public static void Save(File target, bool overwrite)\r\n    {\r\n      if (target.Exists)\r\n        if (overwrite)\r\n          target.Delete();\r\n        else\r\n          throw new Exception(\"File already exists\");\r\n\r\n      if (target.Extension == \".txt\")\r\n        target.WriteAllText(\"OMG a text file!\");\r\n      else\r\n        throw new Exception($\"{target.Extension} not supported\");\r\n    }\r\n  }\r\n}\r\n\r\nnamespace System.Collections.Hierarchy\r\n{\r\n  public interface ILeaf<T>\r\n  {\r\n    Path<T> Path { get; }\r\n    T ID { get; }\r\n    IBranch<T> Parent { get; }\r\n    ILeaf<T> Root { get; }\r\n  }\r\n\r\n  public interface IBranch<T> : ILeaf<T>\r\n  {\r\n    IEnumerable<ILeaf<T>> Children { get; }\r\n    ILeaf<T> this[T child] { get; }\r\n    ILeaf<T> this[Path<T> path] { get; }\r\n\r\n    IEnumerable<ILeaf<T>> Traverse();\r\n\r\n    event EventHandler<LeafEventArgs<T>> ChildAdded;\r\n    event EventHandler<LeafEventArgs<T>> ChildRemoved;\r\n  }\r\n\r\n  public class LeafEventArgs<T> : EventArgs\r\n  {\r\n    public ILeaf<T> Leaf { get; private set; }\r\n    public LeafEventArgs(ILeaf<T> leaf) => Leaf = leaf ?? throw new ArgumentNullException(nameof(leaf));\r\n  }\r\n\r\n  public class Path<T>\r\n  {\r\n    public List<T> Parts { get; }\r\n    public virtual T Root => Parts.First();\r\n    public virtual T Leaf => Parts.Last();\r\n    public int Depth => Parts.Count;\r\n\r\n    public Path(IEnumerable<T> parts) => Parts = (parts ?? throw new ArgumentNullException(nameof(parts))).ToList();\r\n\r\n    public Path<T> Append(Path<T> append) => new Path<T>(Parts.Concat(append.Parts));\r\n    public Path<T> Append(T append) => new Path<T>(Parts.Concat(new[] { append }));\r\n    public Path<T> RemoveLevel(int levels = 1) => new Path<T>(Parts.Take(Parts.Count - levels));\r\n    public override string ToString() => ToString('\\\\');\r\n    public string ToString(char delimiter) => String.Join(delimiter, Parts);\r\n\r\n    public static Path<T> operator +(Path<T> a, Path<T> b) => a.Append(b);\r\n    public static Path<T> operator +(Path<T> a, T b) => a.Append(b);\r\n  }\r\n}\r\n\r\nnamespace Sandbox.Hierarchy.IO\r\n{\r\n  public abstract class FileSystemEntity : ILeaf<String>\r\n  {\r\n    public static Path<string> ParsePath(string path) => new Path<string>(path.Split(System.IO.Path.DirectorySeparatorChar));\r\n    public FileSystemEntity Create(string path) => Create(ParsePath(path));\r\n\r\n    public FileSystemEntity Create(Path<String> path)\r\n    {\r\n      var fullname = path.ToString();\r\n      if (path.Depth == 1)\r\n        return new Mount(path);\r\n      if (System.IO.Directory.Exists(fullname))\r\n        return new Directory(path);\r\n      else if (System.IO.File.Exists(fullname))\r\n        return new File(path);\r\n      else\r\n        throw new System.IO.FileNotFoundException(path.ToString(System.IO.Path.DirectorySeparatorChar));\r\n    }\r\n\r\n    public bool IsDirectory => System.IO.Directory.Exists(FullPath);\r\n    public bool IsFile => System.IO.File.Exists(FullPath);\r\n    public bool Exists => IsDirectory || IsFile;\r\n    public string FullPath => Path.ToString(System.IO.Path.DirectorySeparatorChar);\r\n    public virtual Mount Root => Parent.Root;\r\n\r\n    public Path<String> Path { get; }\r\n    public string Name => Path.Leaf;\r\n    public Directory Parent => Path.Depth == 1 ? null : Create(Path.RemoveLevel()) as Directory;\r\n    public string Extension => System.IO.Path.GetExtension(FullPath);\r\n    public string NameWithoutExtension => System.IO.Path.GetFileNameWithoutExtension(FullPath);\r\n\r\n    protected FileSystemEntity(Path<String> path) => Path = path ?? throw new ArgumentNullException(nameof(path));\r\n\r\n    public System.IO.FileSystemWatcher Watch(string filter = null) => new System.IO.FileSystemWatcher(FullPath, filter);\r\n    public override string ToString() => Path.ToString(System.IO.Path.DirectorySeparatorChar);\r\n    public abstract void Delete();\r\n\r\n    Path<string> ILeaf<string>.Path => Path;\r\n    string ILeaf<string>.ID => Name;\r\n    IBranch<string> ILeaf<string>.Parent => Parent;\r\n    ILeaf<string> ILeaf<string>.Root => Root;\r\n  }\r\n\r\n  public class File : FileSystemEntity\r\n  {\r\n    public File(string path) : base(ParsePath(path)) { }\r\n    public File(Path<String> path) : base(path) { }\r\n\r\n    public System.IO.FileStream OpenRead() => System.IO.File.OpenRead(FullPath);\r\n    public System.IO.FileStream OpenWrite() => System.IO.File.OpenWrite(FullPath);\r\n    public override void Delete() => System.IO.File.Delete(FullPath);\r\n    public string ReadAllText() => System.IO.File.ReadAllText(FullPath);\r\n    public void WriteAllText(string text) => System.IO.File.WriteAllText(FullPath, text);\r\n    public System.IO.FileInfo GetInfo() => new System.IO.FileInfo(FullPath);\r\n  }\r\n\r\n  public class Mount : Directory\r\n  {\r\n    public long Size => GetInfo().TotalSize;\r\n    public long TotalFreeSpace => GetInfo().TotalFreeSpace;\r\n    public long AvailableFreeSpace => GetInfo().AvailableFreeSpace;\r\n    public long Label => GetInfo().TotalSize;\r\n\r\n    public Mount(string name) : base(ParsePath(name)) { }\r\n    internal Mount(Path<String> path) : base(path) { }\r\n\r\n    public new System.IO.DriveInfo GetInfo() => new System.IO.DriveInfo(Name);\r\n    public override Mount Root => this;\r\n  }\r\n\r\n  public class Directory : FileSystemEntity, IBranch<String>, IDisposable\r\n  {\r\n    private System.IO.FileSystemWatcher _watcher;\r\n\r\n    public Directory(string path) : base(ParsePath(path)) { }\r\n    public Directory(Path<String> path) : base(path) { }\r\n\r\n    public FileSystemEntity this[string child] => Create(Path + child);\r\n    public FileSystemEntity this[Path<String> path] => Create(Path + path);\r\n\r\n    public IEnumerable<FileSystemEntity> Children => System.IO.Directory.GetFileSystemEntries(FullPath).Select(x => Create(ParsePath(x)));\r\n\r\n    public void EnableEvents()\r\n    {\r\n      _watcher = Watch();\r\n      _watcher.Deleted += (x, y) => ChildRemoved?.Invoke(this, new LeafEventArgs<string>(Create(y.FullPath)));\r\n      _watcher.Created += (x, y) => ChildAdded?.Invoke(this, new LeafEventArgs<string>(Create(y.FullPath)));\r\n    }\r\n\r\n    public void DisableEvents()\r\n    {\r\n      _watcher.Dispose();\r\n      _watcher = null;\r\n    }\r\n\r\n    public IEnumerable<FileSystemEntity> Traverse() => Children.OfType<Directory>().SelectMany(x => x.Traverse()).Concat(Children);\r\n    public System.IO.DirectoryInfo GetInfo() => new System.IO.DirectoryInfo(FullPath);\r\n    public override void Delete() => System.IO.Directory.Delete(FullPath);\r\n\r\n    public event EventHandler<LeafEventArgs<string>> ChildAdded;\r\n    public event EventHandler<LeafEventArgs<string>> ChildRemoved;\r\n\r\n    IEnumerable<ILeaf<string>> IBranch<string>.Children => Children;\r\n    ILeaf<string> IBranch<string>.this[Path<string> path] => this[path];\r\n    ILeaf<string> IBranch<string>.this[string child] => this[child];\r\n    IEnumerable<ILeaf<string>> IBranch<string>.Traverse() => Traverse();\r\n\r\n    public void Dispose() => _watcher?.Dispose();\r\n  }\r\n\r\n  public class FileSystemPath : Path<String>\r\n  {\r\n    public FileSystemPath(string path) : base(path.Split(System.IO.Path.DirectorySeparatorChar)) { }\r\n    public FileSystemPath(Path<String> source) : base(source.Parts) { }\r\n    public FileSystemPath(IEnumerable<String> source) : base(source) { }\r\n\r\n    public new FileSystemPath Append(Path<string> append) => Append(new FileSystemPath(append));\r\n    public FileSystemPath Append(FileSystemPath append) => new FileSystemPath(Parts.Concat(append.Parts));\r\n    public static FileSystemPath operator +(FileSystemPath a, FileSystemPath b) => a.Append(b);\r\n    public static FileSystemPath operator +(FileSystemPath a, Path<String> b) => a.Append(b);\r\n\r\n    public override string ToString() => ToString(System.IO.Path.DirectorySeparatorChar);\r\n  }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/37918","RelatedDescription":"Open issue \"Update the File System API and add BCL support for hierarchies\" (#37918)"},{"Id":"447933793","IsPullRequest":false,"CreatedAt":"2019-05-24T01:53:28","Actor":"buyaa-n","Number":"37916","RawContent":null,"Title":"CamelCase option not working for property names set using JsonPropertyName attribute","State":"closed","Body":"CamelCase option not working for property names set using JsonPropertyName attribute\r\n```csharp\r\npublic class JsonIgnoreJsonPropertyNameTestClass\r\n{\r\n    private int _property = 21;\r\n    private int _ignoredProperty = 12;\r\n\r\n    [JsonPropertyName(\"TheField\")]\r\n    public int Field { get; set; }\r\n\r\n    public int Property\r\n    {\r\n        get { return _property; }\r\n    }\r\n\r\n    public int IgnoredField;\r\n\r\n    [JsonIgnore] \r\n    public int IgnoredProperty\r\n    {\r\n         get { return _ignoredProperty; }\r\n    }\r\n}\r\n[Fact]\r\npublic void JsonSerializer_OverrideSpecifiedName()\r\n{\r\n    JsonIgnoreJsonPropertyNameTestClass obj = new JsonIgnoreJsonPropertyNameTestClass ();\r\n    obj.Field = int.MinValue;\r\n\r\n    string s = JsonSerializer.ToString<JsonIgnoreJsonPropertyNameTestClass>(obj,  new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase });\r\n    \r\n    Assert.Equal(s, @\"{\"\"theField\"\":-2147483648,\"\"property\"\":21}\");\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/37916","RelatedDescription":"Closed issue \"CamelCase option not working for property names set using JsonPropertyName attribute\" (#37916)"},{"Id":"447929508","IsPullRequest":false,"CreatedAt":"2019-05-24T00:35:37","Actor":"natemcmaster","Number":"37915","RawContent":null,"Title":"System.Data.SqlClient throws \"System.InvalidOperationException : Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool. \"","State":"open","Body":"In ASP.NET Core tests, we started getting persistent errors in our tests that use SQL Server Local DB 2016, .NET Core 3, and System.Data.SqlClient.\r\n\r\n```\r\nError Message:\r\n System.InvalidOperationException : Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached.\r\nStack Trace:\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n```\r\n\r\nThis error seemed to only affect Windows 7 and Windows 8.1.\r\nhttps://mc.dot.net/#/user/aspnetcore/pr~2Faspnet~2Faspnetcore/ci/20190522.38/workItem/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test~2Fnetcoreapp3.0\r\n\r\nThis error was encountered as a result of a dependency-flow PR into AspNetCore https://github.com/aspnet/AspNetCore/pull/10434. This PR attempted to move System.Data.SqlClient from 4.7.0-preview6.19264.9 to 4.7.0-preview6.19270.12, and included these changes: https://github.com/dotnet/corefx/compare/a28176b5ec68b6da1472934fe9493790d1665cae...ef1a5aa730098b6c3350977a991232c1ff11cfe3.\r\n\r\ncc @ajcvickers @Pilchie ","Url":"https://github.com/dotnet/corefx/issues/37915","RelatedDescription":"Open issue \"System.Data.SqlClient throws \"System.InvalidOperationException : Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool. \"\" (#37915)"},{"Id":"447923561","IsPullRequest":true,"CreatedAt":"2019-05-24T00:07:14","Actor":"safern","Number":"37914","RawContent":null,"Title":"Re-generate System.Runtime.InteropServices ref source against implementation","State":"open","Body":"cc: @stephentoub @jkotas @danmosemsft @tannergooding @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/37914","RelatedDescription":"Open PR \"Re-generate System.Runtime.InteropServices ref source against implementation\" (#37914)"},{"Id":"447912570","IsPullRequest":true,"CreatedAt":"2019-05-23T23:16:27","Actor":"Anipik","Number":"37912","RawContent":null,"Title":"Rename ToBytes to ToUtf8Bytes","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/37898","Url":"https://github.com/dotnet/corefx/pull/37912","RelatedDescription":"Open PR \"Rename ToBytes to ToUtf8Bytes\" (#37912)"},{"Id":"447906526","IsPullRequest":true,"CreatedAt":"2019-05-23T22:51:09","Actor":"maryamariyan","Number":"37911","RawContent":null,"Title":"[Draft] Add TextEquals APIs","State":"open","Body":"Fixes: https://github.com/dotnet/corefx/issues/37751\r\n","Url":"https://github.com/dotnet/corefx/pull/37911","RelatedDescription":"Open PR \"[Draft] Add TextEquals APIs\" (#37911)"},{"Id":"447890141","IsPullRequest":true,"CreatedAt":"2019-05-23T21:53:58","Actor":"krwq","Number":"37910","RawContent":null,"Title":"Update xml doc comment for JsonSerializerOptions.IgnoreReadOnlyProperties","State":"open","Body":"Fixes: https://github.com/dotnet/corefx/issues/37844\r\n\r\ncc: @carlossanlop in case we need to update the generated docs","Url":"https://github.com/dotnet/corefx/pull/37910","RelatedDescription":"Open PR \"Update xml doc comment for JsonSerializerOptions.IgnoreReadOnlyProperties\" (#37910)"},{"Id":"447889906","IsPullRequest":true,"CreatedAt":"2019-05-23T21:53:12","Actor":"steveharter","Number":"37909","RawContent":null,"Title":"Cache the escaped property names","State":"open","Body":"Some clean-up of ifdef'd code and small perf gain (within margin of error) due to not having to check if the property name needs escaping.\r\n\r\nMost of the converter changes will likely be removed in the future when\\if we can set the property name independently.\r\n\r\nBefore:\r\n```\r\n|               Method |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------------- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|    SerializeToString | 35.76 us | 0.8167 us | 0.9078 us | 35.64 us | 34.34 us | 37.96 us |      6.0069 |      0.4291 |           - |             25488 B |\r\n| SerializeToUtf8Bytes | 33.20 us | 0.5414 us | 0.5065 us | 33.03 us | 32.34 us | 34.23 us |      3.0914 |           - |           - |             13016 B |\r\n|    SerializeToStream | 32.17 us | 0.7758 us | 0.8301 us | 31.83 us | 31.40 us | 34.06 us |           - |           - |           - |               432 B |\r\n```\r\nAfter:\r\n```\r\n|               Method |     Mean |     Error |    StdDev |   Median |      Min |      Max | Gen 0/1k Op | Gen 1/1k Op | Gen 2/1k Op | Allocated Memory/Op |\r\n|--------------------- |---------:|----------:|----------:|---------:|---------:|---------:|------------:|------------:|------------:|--------------------:|\r\n|    SerializeToString | 34.79 us | 0.6817 us | 0.6377 us | 34.62 us | 34.07 us | 36.45 us |      6.0573 |           - |           - |             25568 B |\r\n| SerializeToUtf8Bytes | 33.11 us | 0.4332 us | 0.3382 us | 33.15 us | 32.27 us | 33.61 us |      3.0371 |           - |           - |             12976 B |\r\n|    SerializeToStream | 31.27 us | 0.4164 us | 0.3477 us | 31.13 us | 30.88 us | 32.13 us |           - |           - |           - |               432 B |\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37909","RelatedDescription":"Open PR \"Cache the escaped property names\" (#37909)"},{"Id":"447886490","IsPullRequest":false,"CreatedAt":"2019-05-23T21:42:34","Actor":"Gnbrkm41","Number":"37908","RawContent":null,"Title":"Consider documenting the official stance on whether `Dispose` method should dispose of the passed in `IDisposable`s","State":"open","Body":"Related: https://github.com/dotnet/iot/issues/419, https://github.com/dotnet/corefx/issues/37873, https://github.com/dotnet/corefx/issues/37701\r\n\r\nI have been noticing a few issues that discuss about whether to dispose `IDisposable` types that are passed in to the types through constructor (e.g. various `Stream` types that accept another `Stream`) when `Dispose()` method is called. Looking up on `Framework Design Guidelines` and MS Docs article on Dispose method, it mentions that all the unmanaged resources that are allocated & held within the instance should be disposed of when `Dispose` is called, however it does not mention the ones that are passed in from outside. (Or maybe I can't just find it... definitely possible.)\r\n\r\nI think it would be great if it could be unified (at least for new types that are introduced into CoreFX / other repositories). What would be the recommendation on this? Should such types\r\n* Dispose of the passed in `IDisposable`s when `Dispose` is called by default?\r\n* Provide a boolean parameter upon construction that determines whether to dispose of the parameters on disposal?\r\n   * Should it be `true` for dispose? (e.g. `bool shouldDispose`) or `true` for leave open? (e.g. `bool leaveOpen`)","Url":"https://github.com/dotnet/corefx/issues/37908","RelatedDescription":"Open issue \"Consider documenting the official stance on whether `Dispose` method should dispose of the passed in `IDisposable`s\" (#37908)"},{"Id":"447868123","IsPullRequest":false,"CreatedAt":"2019-05-23T20:52:33","Actor":"vcsjones","Number":"37907","RawContent":null,"Title":"Unable to build on Ubuntu 18.04","State":"open","Body":"I'm struggling to build on Ubuntu 18.04 recently. Things get going for a few minutes and then:\r\n\r\n<details>\r\n<summary>MSBUILD : error MSB1025: An internal failure occurred while running MSBuild.</summary>\r\n<pre>\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: array\r\n   at Microsoft.Build.Execution.BuildManager.EndBuild()\r\n   at Microsoft.Build.CommandLine.MSBuildApp.BuildProject(String projectFile, String[] targets, String toolsVersion, Dictionary`2 globalProperties, Dictionary`2 restoreProperties, ILogger[] loggers, LoggerVerbosity verbosity, DistributedLoggerRecord[] distributedLoggerRecords, Int32 cpuCount, Boolean enableNodeReuse, TextWriter preprocessWriter, Boolean detailedSummary, ISet`1 warningsAsErrors, ISet`1 warningsAsMessages, Boolean enableRestore, ProfilerLogger profilerLogger, Boolean enableProfiler, Boolean interactive, Boolean isolateProjects, Boolean graphBuild, String[] inputResultsCaches, String outputResultsCache)\r\n</pre>\r\n</details>\r\n\r\nI'm not sure if this is related to #37868 or not, but on the surface it seems like two different issues.\r\n\r\nThis error always occurs after this in the build log:\r\n\r\n```\r\nVerifying closure of runtime.linux-x64.Microsoft.Private.CoreFx.NETCoreApp runtime assemblies\r\nVerifying no duplicate types in runtime.linux-x64.Microsoft.Private.CoreFx.NETCoreApp runtime assemblies\r\nMicrosoft.Private.CoreFx.NETCoreApp -> /code/personal/corefx/artifacts/packages/Debug/specs/runtime.linux-x64.Microsoft.Private.CoreFx.NETCoreApp.nuspec\r\nruntime.native.System.IO.Ports -> /code/personal/corefx/artifacts/packages/Debug/specs/runtime.native.System.IO.Ports.nuspec\r\nruntime.native.System.IO.Ports -> /code/personal/corefx/artifacts/packages/Debug/specs/runtime.linux-x64.runtime.native.System.IO.Ports.nuspec\r\n💥\r\n```","Url":"https://github.com/dotnet/corefx/issues/37907","RelatedDescription":"Open issue \"Unable to build on Ubuntu 18.04\" (#37907)"},{"Id":"447861716","IsPullRequest":true,"CreatedAt":"2019-05-23T20:36:31","Actor":"lpereira","Number":"37906","RawContent":null,"Title":"Use getrandom(2), if available, to implement Interop.GetRandomBytes()","State":"open","Body":"(These changes are based on similar changes I made in coreclr.)\r\n\r\nThe getrandom(2) system call, introduced in Linux 3.17, allows one to obtain numbers from the same pool exported as /dev/urandom (if called with the GRND_NONBLOCK flag).  The main advantage is that there's no need to keep a file descriptor open, but this also means that a good source of entropy is always available, even if /dev isn't present (such as in a tight chroot environment).\r\n\r\nRefactor how the method to obtain random numbers by using an ifunc, which will continue to prefer arc4random_buf(), if available, and pick between getrandom(2) or reading from /dev/urandom.  Falling back to lrand48(3) happens if either of these last two methods fail for whatever reason.\r\n\r\nIt's important to note that the entropy quality for /dev/urandom and whatever getrandom(2) returns is already pretty good, so it might not be a good idea to XOR it with values from lrand48(3).  Since we're not dealing with a CSPRNG here, though, it's good to leave that as the fallback mechanism.\r\n","Url":"https://github.com/dotnet/corefx/pull/37906","RelatedDescription":"Open PR \"Use getrandom(2), if available, to implement Interop.GetRandomBytes()\" (#37906)"},{"Id":"447851045","IsPullRequest":true,"CreatedAt":"2019-05-23T20:10:08","Actor":"safern","Number":"37905","RawContent":null,"Title":"Add nullable annotations to System.Runtime.Extensions ref","State":"open","Body":"cc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/37905","RelatedDescription":"Open PR \"Add nullable annotations to System.Runtime.Extensions ref\" (#37905)"},{"Id":"447811406","IsPullRequest":true,"CreatedAt":"2019-05-23T20:02:46","Actor":"safern","Number":"37901","RawContent":null,"Title":"Add nowarns for reference assemblies to be annotated with nullable warnings","State":"closed","Body":"Since I'm starting to add nullable annotations to multiple ref assemblies at a time, I'd like to add this nowarns in a separate PR so that I don't have to wait for 1 of them to be approved, merged and then rebase on top of master. This also avoids duplication on the diffs.\r\n\r\ncc: @stephentoub @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/37901","RelatedDescription":"Closed or merged PR \"Add nowarns for reference assemblies to be annotated with nullable warnings\" (#37901)"},{"Id":"447835501","IsPullRequest":false,"CreatedAt":"2019-05-23T19:29:41","Actor":"Yucked","Number":"37904","RawContent":null,"Title":"JsonSerializer throwing TargetInvocationException and IndexOutOfRangeException exceptions.","State":"open","Body":"When using `JsonSerializer.Parse<T>()` an `IndexOutOfRangeException` is thrown. Can't really figure out what's the cause of this.\r\n\r\nIt's throwing at [line 28](https://github.com/Yucked/Frostbyte/blob/d66727ff9107584f9812b1c04fd5a9a9e2b315be/Sources/YoutubeSource.cs#L28) and the [entity](https://github.com/Yucked/Frostbyte/blob/master/Entities/YouTubeResult.cs) that I'm trying to parse.\r\n\r\nStackTrace:\r\n```\r\nSystem.IndexOutOfRangeException\r\n  HResult=0x80131508\r\n  Message=Index was outside the bounds of the array.\r\n  Source=System.Text.Json\r\n  StackTrace:\r\n   at System.Text.Json.Serialization.JsonClassInfo.GetProperty(JsonSerializerOptions options, ReadOnlySpan`1 propertyName, ReadStackFrame& frame)\r\n   at System.Text.Json.Serialization.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& state)\r\n   at System.Text.Json.Serialization.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\n   at System.Text.Json.Serialization.JsonSerializer.ParseCore(ReadOnlySpan`1 utf8Json, Type returnType, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.JsonSerializer.Parse[TValue](ReadOnlySpan`1 utf8Json, JsonSerializerOptions options)\r\n   at Frostbyte.Sources.YoutubeSource.<PrepareResponseAsync>d__3.MoveNext() in D:\\Projects\\Frostbyte\\Sources\\YoutubeSource.cs:line 29\r\n```\r\n\r\nAnother exception that often comes up is `TargetInvocationException` when using the `JsonSerializer.ToBytes(object)` method.\r\n\r\n```ArgumentException: Cannot bind to the target method because its signature is not compatible with that of the delegate type.```\r\n\r\nStackTrace: \r\n```\r\nSystem.Reflection.TargetInvocationException\r\n  HResult=0x80131604\r\n  Message=Exception has been thrown by the target of an invocation.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n   at System.Text.Json.Serialization.JsonClassInfo.CreateProperty(Type declaredPropertyType, Type runtimePropertyType, PropertyInfo propertyInfo, Type parentClassType, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.JsonClassInfo.AddProperty(Type propertyType, PropertyInfo propertyInfo, Type classType, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.JsonClassInfo..ctor(Type type, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.JsonSerializerOptions.GetOrAddClass(Type classType)\r\n   at System.Text.Json.Serialization.JsonSerializer.HandleObject(JsonSerializerOptions options, Utf8JsonWriter writer, WriteStack& state)\r\n   at System.Text.Json.Serialization.JsonSerializer.WriteObject(JsonSerializerOptions options, Utf8JsonWriter writer, WriteStack& state)\r\n   at System.Text.Json.Serialization.JsonSerializer.Write(Utf8JsonWriter writer, Int32 flushThreshold, JsonSerializerOptions options, WriteStack& state)\r\n   at System.Text.Json.Serialization.JsonSerializer.WriteCore(PooledBufferWriter`1 output, Object value, Type type, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.JsonSerializer.WriteCoreBytes(Object value, Type type, JsonSerializerOptions options)\r\n   at Frostbyte.Websocket.WsServer.<CollectStatsAsync>d__16.MoveNext() in D:\\Projects\\Frostbyte\\Websocket\\WSServer.cs:line 181\r\n\r\nInner Exception 1:\r\nArgumentException: Cannot bind to the target method because its signature is not compatible with that of the delegate type.\r\n```\r\n\r\nThat class that I'm trying to serialize also includes a method, not sure if that could be the cause of that? [The class itself](https://github.com/Yucked/Frostbyte/blob/master/Entities/Packets/StatisticPacket.cs).\r\n\r\nLet me know if there is anything else I can provide.","Url":"https://github.com/dotnet/corefx/issues/37904","RelatedDescription":"Open issue \"JsonSerializer throwing TargetInvocationException and IndexOutOfRangeException exceptions.\" (#37904)"},{"Id":"447816785","IsPullRequest":false,"CreatedAt":"2019-05-23T18:44:19","Actor":"cbenard","Number":"37903","RawContent":null,"Title":"Installer-related classes missing","State":"open","Body":"ServiceController was added to corefx, but many framework classes are lacking. With the deprecation of .NET Framework, I've been looking at Portability Analyzer and one of our significant issues is installer-related. We have a custom base service DLL we use in all of our services that handle installation of various things (event log sources, the assemblies themselves, service registration, etc) as well as uninstallation.\r\n\r\nIt uses the following classes which are missing. I haven't been able to find them in compat packs, NuGet, or corefx. Also, even looking for `ServiceProcessInstaller`, it doesn't appear to be in the reference source. Its signature is there, like an interface, but not the implementation.\r\n\r\nCan anyone provide guidance on replacing the following classes missing from .NET Core/5?\r\n\r\n* System.Diagnostics.EventLogInstaller\r\n* System.Configuration.Install.InstallContext\r\n* System.ServiceProcess.ServiceInstaller\r\n* System.Configuration.Install.Installer\r\n* System.ServiceProcess.ServiceProcessInstaller\r\n* System.Configuration.Install.InstallerCollection\r\n* System.Configuration.Install.TransactedInstaller\r\n* System.Configuration.Install.InstallException\r\n* System.ServiceProcess.ServiceAccount\r\n* System.Configuration.Install.UninstallAction\r\n\r\nThe examples with Windows Services they now support have shown MS staff using `sc` to create the services manually (presumably xcopying the binaries manually too). This seems weird since there was built in support for registering services before and Core now officially supports services. Why are these classes still missing?","Url":"https://github.com/dotnet/corefx/issues/37903","RelatedDescription":"Open issue \"Installer-related classes missing\" (#37903)"},{"Id":"447813567","IsPullRequest":true,"CreatedAt":"2019-05-23T18:37:26","Actor":"Dotnet-GitSync-Bot","Number":"37902","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/37902","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#37902)"},{"Id":"447791405","IsPullRequest":true,"CreatedAt":"2019-05-23T17:42:28","Actor":"ViktorHofer","Number":"37900","RawContent":null,"Title":"Move dotnet-tools config","State":"open","Body":"Unfortunately the CLI team decided to place that file into a new \".config\" folder. @tmat and I decided to keep the default location but provided feedback to @KathleenDollard that the repo root would probably be a better location.","Url":"https://github.com/dotnet/corefx/pull/37900","RelatedDescription":"Open PR \"Move dotnet-tools config\" (#37900)"},{"Id":"447789971","IsPullRequest":false,"CreatedAt":"2019-05-23T17:38:59","Actor":"safern","Number":"37899","RawContent":null,"Title":"ServerAsyncAuthenticateTest.ServerAsyncAuthenticate_MismatchProtocols_Fails test failure","State":"open","Body":"I just saw this test failed in one CI run:\r\n\r\n> Assert.IsAssignableFrom() Failure\\nExpected: typeof(System.Security.Authentication.AuthenticationException)\\nActual: typeof(System.TimeoutException)\r\n\r\nStack Trace\r\n```\r\nat System.Net.Security.Tests.ServerAsyncAuthenticateTest.ServerAsyncAuthenticate_MismatchProtocols_Fails(SslProtocols serverProtocol, SslProtocols clientProtocol, Type expectedException) in /_/src/System.Net.Security/tests/FunctionalTests/ServerAsyncAuthenticateTest.cs:line 62\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=198444&view=ms.vss-test-web.build-test-results-tab&runId=4812722&resultId=483559&paneView=debug\r\n\r\nFailed on: https://github.com/dotnet/corefx/pull/37888\r\ncc: @ViktorHofer @stephentoub @wfurt ","Url":"https://github.com/dotnet/corefx/issues/37899","RelatedDescription":"Open issue \"ServerAsyncAuthenticateTest.ServerAsyncAuthenticate_MismatchProtocols_Fails test failure\" (#37899)"},{"Id":"447789928","IsPullRequest":false,"CreatedAt":"2019-05-23T17:38:53","Actor":"ahsonkhan","Number":"37898","RawContent":null,"Title":"Rename JsonSerializer.ToBytes to ToUtf8Bytes","State":"open","Body":"**Motivation:**\r\nUsers might get confused that `ToBytes` implies some sort of text to binary conversion, but it is still text, just encoded as UTF-8. Hence, follow our existing pattern for type/parameter names and rename to `ToUtf8Bytes`.\r\n\r\n**Current API:**\r\nhttps://github.com/dotnet/corefx/blob/510ab9e6433ff0df29e0ae080140f4f2c1b69abd/src/System.Text.Json/ref/System.Text.Json.cs#L385-L386\r\n```C#\r\npublic static byte[] ToBytes(object value, System.Type type, System.Text.Json.Serialization.JsonSerializerOptions options = null) { throw null; }\r\npublic static byte[] ToBytes<TValue>(TValue value, System.Text.Json.Serialization.JsonSerializerOptions options = null) { throw null; }\r\n```\r\n\r\n**Proposed:**\r\n```C#\r\npublic static byte[] ToUtf8Bytes(object value, System.Type type, System.Text.Json.Serialization.JsonSerializerOptions options = null) { throw null; }\r\npublic static byte[] ToUtf8Bytes<TValue>(TValue value, System.Text.Json.Serialization.JsonSerializerOptions options = null) { throw null; }\r\n```\r\n\r\ncc @steveharter ","Url":"https://github.com/dotnet/corefx/issues/37898","RelatedDescription":"Open issue \"Rename JsonSerializer.ToBytes to ToUtf8Bytes\" (#37898)"},{"Id":"447789288","IsPullRequest":false,"CreatedAt":"2019-05-23T17:37:08","Actor":"Gnbrkm41","Number":"37897","RawContent":null,"Title":"Segfault in CI System.Security.Cryptography.X509Certificates.Tests, corefx-ci (MacOS x64_Debug) ","State":"open","Body":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F37876~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190523.1/workItem/System.Security.Cryptography.X509Certificates.Tests/wilogs\r\n\r\n```\r\nExecuted on dci-macpro-12.local\r\n+ ./RunTests.sh --runtime-path /Users/dotnet-bot/dotnetbuild/work/5d378479-e6b6-4fa0-90d3-e2e7d8da3cff/Payload --dotnet-root /Users/dotnet-bot/dotnetbuild/work/5d378479-e6b6-4fa0-90d3-e2e7d8da3cff/Payload\r\n----- start 01:50:04 =============== To repro directly: =====================================================\r\npushd .\r\n/Users/dotnet-bot/dotnetbuild/work/5d378479-e6b6-4fa0-90d3-e2e7d8da3cff/Payload/dotnet xunit.console.dll System.Security.Cryptography.X509Certificates.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonosxtests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\npopd\r\n===========================================================================================================\r\n~/dotnetbuild/work/5d378479-e6b6-4fa0-90d3-e2e7d8da3cff/Work/b8ab81c6-3702-490a-b4f3-4a7fbbce4a1f/Exec ~/dotnetbuild/work/5d378479-e6b6-4fa0-90d3-e2e7d8da3cff/Work/b8ab81c6-3702-490a-b4f3-4a7fbbce4a1f/Exec\r\n  Discovering: System.Security.Cryptography.X509Certificates.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Security.Cryptography.X509Certificates.Tests (found 421 of 479 test cases)\r\n  Starting:    System.Security.Cryptography.X509Certificates.Tests (parallel test collections = on, max threads = 8)\r\n./RunTests.sh: line 175: 51074 Segmentation fault: 11  (core dumped) \"$RUNTIME_PATH/dotnet\" xunit.console.dll System.Security.Cryptography.X509Certificates.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonosxtests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing $RSP_FILE\r\n~/dotnetbuild/work/5d378479-e6b6-4fa0-90d3-e2e7d8da3cff/Work/b8ab81c6-3702-490a-b4f3-4a7fbbce4a1f/Exec\r\n----- end 01:50:27 ----- exit code 139 ----------------------------------------------------------\r\nexit code 139 means SIGSEGV Illegal memory access. Deref invalid pointer, overrunning buffer, stack overflow etc. Core dumped.\r\n```","Url":"https://github.com/dotnet/corefx/issues/37897","RelatedDescription":"Open issue \"Segfault in CI System.Security.Cryptography.X509Certificates.Tests, corefx-ci (MacOS x64_Debug) \" (#37897)"},{"Id":"447788729","IsPullRequest":false,"CreatedAt":"2019-05-23T17:35:41","Actor":"ahsonkhan","Number":"37896","RawContent":null,"Title":"Move JsonSerializer to the root namespace - System.Text.Json","State":"open","Body":"**Motivation:**\r\nSince `JsonSerializer` is the more commonly used API, move it to the root namespace. This means move `JsonSerializer` and `JsonSerializerOptions` into the root namespace, `System.Text.Json`:\r\n\r\n**Proposed API surface:**\r\nhttps://github.com/dotnet/corefx/blob/510ab9e6433ff0df29e0ae080140f4f2c1b69abd/src/System.Text.Json/ref/System.Text.Json.cs#L349\r\n\r\n```diff\r\nnamespace System.Text.Json\r\nJsonCommentHandling\r\nJsonDocument\r\nJsonElement\r\nJsonEncodedText\r\nJsonException\r\nJsonProperty\r\nJsonReaderOptions\r\nJsonReaderState\r\nJsonTokenType\r\nJsonValueType\r\nJsonWriterOptions\r\nUtf8JsonReader\r\nUtf8JsonWriter \r\n+ JsonNamingPolicy\r\n+ JsonSerializer\r\n+ JsonSerializerOptions\r\n\r\nSystem.Text.Json.Serialization\r\nJsonAttribute \r\nJsonExtensionDataAttribute \r\nJsonIgnoreAttribute \r\n- JsonNamingPolicy\r\nJsonPropertyNameAttribute \r\n- JsonSerializer\r\n- JsonSerializerOptions\r\n```\r\n\r\n**Questions:**\r\n1) Rename `System.Text.Json.Serialization` to something to indicate \"extensibility\". Maybe `Converters` given we plan to add `JsonConverter` there? Custom?\r\n2) Should we move reader/writer to a nested namespace?\r\n\r\ncc @steveharter ","Url":"https://github.com/dotnet/corefx/issues/37896","RelatedDescription":"Open issue \"Move JsonSerializer to the root namespace - System.Text.Json\" (#37896)"},{"Id":"447766089","IsPullRequest":true,"CreatedAt":"2019-05-23T16:41:45","Actor":"maryamariyan","Number":"37895","RawContent":null,"Title":"[Tests]: JsonSerializer.Parse for json strings containing Enum","State":"open","Body":"Related to: #37735\r\n\r\ncc: @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/37895","RelatedDescription":"Open PR \"[Tests]: JsonSerializer.Parse for json strings containing Enum\" (#37895)"},{"Id":"447762624","IsPullRequest":true,"CreatedAt":"2019-05-23T16:33:18","Actor":"steveharter","Number":"37894","RawContent":null,"Title":"Update float converter and related tests","State":"open","Body":"Per discussion, here is the updated float\\single converter that uses the reader support directly instead of wrapping double.\r\n\r\nAlso I removed the \"todos\" in the tests and assume these should not throw.\r\n","Url":"https://github.com/dotnet/corefx/pull/37894","RelatedDescription":"Open PR \"Update float converter and related tests\" (#37894)"},{"Id":"447720330","IsPullRequest":false,"CreatedAt":"2019-05-23T15:10:04","Actor":"TonyValenti","Number":"37893","RawContent":null,"Title":"System.Runtime.Caching - Object Keys","State":"open","Body":"Hi All,\r\nI am looking for a GC-friendly caching solution that allows me to cache items using objects as keys instead of strings.  I'd ideally like an API that I can use similar to this:\r\n````\r\nvar CachedValue1 = cache.GetOrSet(\r\n  value: ()=>...,\r\n  key: CacheKey,\r\n  expiresIn: TimeSpan.FromMinutes(30)\r\n);\r\n...\r\n\r\nvar CachedValueN = cache.GetOrAdd(\r\n  value: ()=>...,\r\n  key: CacheKeyN,\r\n  expiresIn: TimeSpan.FromMinutes(30),\r\n  dependsOn: new[]{ CachedValue1, CachedValue2, CachedValue3, CachedValue12 }\r\n);\r\n````\r\n\r\nI've taken a look at System.Runtime.Caching but appears to do all its caching using string-based cache keys and I am working with complex objects that aren't easily boiled down to a simple string.  Any thoughts?\r\n","Url":"https://github.com/dotnet/corefx/issues/37893","RelatedDescription":"Open issue \"System.Runtime.Caching - Object Keys\" (#37893)"},{"Id":"447703320","IsPullRequest":false,"CreatedAt":"2019-05-23T14:40:42","Actor":"adrianoc-unity3d","Number":"37892","RawContent":null,"Title":"Is moving field to base type really binary compatible?","State":"open","Body":"In the [Breaking changes rules doc](https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/breaking-change-rules.md#members)  the following paragraph looks incorrect:\r\n\r\n> Moving a member onto a class higher in the hierarchy tree of the type from which it was removed\r\n\r\njust to be clear,  the scenario described looks to be something like:\r\n\r\n```CSharp\r\n// A & B declared in SomeLib.dll\r\npublic class A\r\n{\r\n}\r\n\r\npublic class B : A\r\n{\r\n\tpublic int field;\r\n}\r\n\r\n// C declared in SomProgram.exe\r\npublic class C\r\n{\r\n    public static void Main()\r\n    {\r\n        B b = new B();\r\n        System.Console.WriteLine(b.field);\r\n    }\r\n}\r\n```\r\n[The generated IL](https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxASwDYB8D0OAEAgvgGT4BC+AJnAMYYQJxX5oB2+AygPZhwAyaYADoqGDAFgAUAAEAzPhkAmItIDe0gL7Tp8xSsohVUjVICQe9jHwAzNHAxUA3Fp1S8+AMLU6DJi3YuXhkARgB2YTgADzhdBWUvdWl8FMV4kIA2RQAWfABZCHYACgBKZNTTVKqKfGB8AF58NjgAdwpSlylq1NDhUIBOIpE7ByoSzqrtKU0gA===) has a reference to B.field. I don't see how moving *field* to *A* can be *binary compatible*\r\n\r\nAlso, *peverify* complains about that change and I get an exception  at runtime.\r\n\r\nAm I missing something ?","Url":"https://github.com/dotnet/corefx/issues/37892","RelatedDescription":"Open issue \"Is moving field to base type really binary compatible?\" (#37892)"},{"Id":"447662962","IsPullRequest":true,"CreatedAt":"2019-05-23T13:28:03","Actor":"dotnet-maestro[bot]","Number":"37891","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190523.1\r\n- **Date Produced**: 5/23/2019 1:18 PM\r\n- **Commit**: 8ddc1bb4b52a5bcd7a5b10c70117695d83f9b481\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19273.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190523.2\r\n- **Date Produced**: 5/23/2019 1:52 PM\r\n- **Commit**: f54fdb36db84b97cd2277d7ced64920d8a5f5608\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19273.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37891","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/standard\" (#37891)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"447880957","IsPullRequest":true,"CreatedAt":"2019-05-24T02:30:13","Actor":"shyamnamboodiripad","Number":"35921","RawContent":null,"Title":"Expose internal service for tested by code lens indicator","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35921","RelatedDescription":"Closed or merged PR \"Expose internal service for tested by code lens indicator\" (#35921)"},{"Id":"447922149","IsPullRequest":true,"CreatedAt":"2019-05-24T02:00:12","Actor":"dotnet-bot","Number":"35929","RawContent":null,"Title":"Merge release/dev16.1 to release/dev16.1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.1-vs-deps\ngit reset --hard upstream/release/dev16.1-vs-deps\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35929","RelatedDescription":"Closed or merged PR \"Merge release/dev16.1 to release/dev16.1-vs-deps\" (#35929)"},{"Id":"447944339","IsPullRequest":true,"CreatedAt":"2019-05-24T01:54:27","Actor":"RikkiGibson","Number":"35935","RawContent":null,"Title":"Update azure-pipelines.yml","State":"open","Body":"Trying out the public pool for the build.","Url":"https://github.com/dotnet/roslyn/pull/35935","RelatedDescription":"Open PR \"Update azure-pipelines.yml\" (#35935)"},{"Id":"447937374","IsPullRequest":true,"CreatedAt":"2019-05-24T01:20:06","Actor":"ivanbasov","Number":"35934","RawContent":null,"Title":"VSSDK update","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35934","RelatedDescription":"Open PR \"VSSDK update\" (#35934)"},{"Id":"447903199","IsPullRequest":true,"CreatedAt":"2019-05-24T01:19:23","Actor":"tmat","Number":"35924","RawContent":null,"Title":"DevDivInsertionFiles: Fix dependency error reporting","State":"closed","Body":"Two issues:\r\n1) Replace `AfterTargets=\"Build\"` with `BeforeTargets=\"AfterBuild\"`\r\n   Workaround for https://github.com/microsoft/msbuild/issues/3345\r\n2) System.ValueTuple\r\n   Seems like the System.ValueTuple package is missing `lib/net472/_._`, so `lib/net47/System.ValueTuple.dll` is identified as a runtime dependency although it is not.\r\n\r\nhttps://github.com/dotnet/roslyn/issues/34558.","Url":"https://github.com/dotnet/roslyn/pull/35924","RelatedDescription":"Closed or merged PR \"DevDivInsertionFiles: Fix dependency error reporting\" (#35924)"},{"Id":"447925468","IsPullRequest":false,"CreatedAt":"2019-05-24T00:15:38","Actor":"333fred","Number":"35933","RawContent":null,"Title":"ITypeSymbol Equality should ignore nullability","State":"open","Body":"ITypeSymbol equality should only consider things that were available in C# 7.3 by default, and we need to expose a new set of equality comparers to allow for customization in how symbols are compared, including nested nullability.","Url":"https://github.com/dotnet/roslyn/issues/35933","RelatedDescription":"Open issue \"ITypeSymbol Equality should ignore nullability\" (#35933)"},{"Id":"447922262","IsPullRequest":true,"CreatedAt":"2019-05-24T00:01:18","Actor":"dotnet-bot","Number":"35932","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35932","RelatedDescription":"Open PR \"Merge master-vs-deps to features/razorSupport2\" (#35932)"},{"Id":"447922218","IsPullRequest":true,"CreatedAt":"2019-05-24T00:01:07","Actor":"dotnet-bot","Number":"35931","RawContent":null,"Title":"Merge master to features/lspSupport","State":"open","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35931","RelatedDescription":"Open PR \"Merge master to features/lspSupport\" (#35931)"},{"Id":"447922170","IsPullRequest":true,"CreatedAt":"2019-05-24T00:00:56","Actor":"dotnet-bot","Number":"35930","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35930","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#35930)"},{"Id":"447922020","IsPullRequest":true,"CreatedAt":"2019-05-24T00:00:19","Actor":"dotnet-bot","Number":"35928","RawContent":null,"Title":"Merge release/dev16.1 to release/dev16.2-preview1","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.1 into release/dev16.2-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-to-release/dev16.2-preview1\ngit reset --hard upstream/release/dev16.2-preview1\ngit merge upstream/release/dev16.1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-to-release/dev16.2-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35928","RelatedDescription":"Open PR \"Merge release/dev16.1 to release/dev16.2-preview1\" (#35928)"},{"Id":"447917080","IsPullRequest":false,"CreatedAt":"2019-05-23T23:36:11","Actor":"gafter","Number":"35927","RawContent":null,"Title":"rename TypeArgumentsNullableAnnotations to TypeArgumentNullableAnnotations","State":"open","Body":"This word has two \"s\"s each of which indicates it is a plural.  It only needs one \"s\" to be plural (at the end).","Url":"https://github.com/dotnet/roslyn/issues/35927","RelatedDescription":"Open issue \"rename TypeArgumentsNullableAnnotations to TypeArgumentNullableAnnotations\" (#35927)"},{"Id":"447826429","IsPullRequest":true,"CreatedAt":"2019-05-23T23:17:03","Actor":"CyrusNajmabadi","Number":"35916","RawContent":null,"Title":"Do not suggest converting from using-statement to using-local form if it would cause a variable collision.","State":"closed","Body":"Fixes https://github.com/dotnet/roslyn/issues/35879","Url":"https://github.com/dotnet/roslyn/pull/35916","RelatedDescription":"Closed or merged PR \"Do not suggest converting from using-statement to using-local form if it would cause a variable collision.\" (#35916)"},{"Id":"447909516","IsPullRequest":false,"CreatedAt":"2019-05-23T23:03:14","Actor":"vsfeedback","Number":"35926","RawContent":null,"Title":"Codelens for internal static variables is not showing up","State":"open","Body":"VSF_TYPE_MARKDOWNI have _internal static class_ and declared some _internal static variables_ at class level. The codelens is not working for this particular variables. Seems to me its a bug.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/542962/codelens-for-internal-static-variables-is-not-show.html\nVSTS ticketId: 853984_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 4/23/2019, 01:15 AM (30 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35926","RelatedDescription":"Open issue \"Codelens for internal static variables is not showing up\" (#35926)"},{"Id":"447907613","IsPullRequest":false,"CreatedAt":"2019-05-23T22:55:31","Actor":"vsfeedback","Number":"35925","RawContent":null,"Title":"Dictionary of tuple shows wrong value while debugging","State":"open","Body":"VSF_TYPE_MARKDOWNI have a Dictionary&lt;string,(tupletype)&gt;, where the tupletype has two named items inside. When I debug the application, if I have an expression that references an element from this dictionary and then from the tuple, the value is shown wrong. If I dive into the dictionary from the dictionary object, the value is correct. \n\nHere is a code to reproduce the issue:\n\n```\n    class Program {\n        static void Main(string[] args) {\n            Dictionary&lt;string, (DateTimeOffset Expiry, SomeClass Token)&gt; dict = \n                new Dictionary&lt;string, (DateTimeOffset Expiry, SomeClass Token)&gt;();\n\ndict. Add(&quot;yaayoo&quot;, (DateTimeOffset.Now, new SomeClass { Id = 1, Foobar = &quot;Barbarian&quot; }));\n\nConsole.WriteLine(dict[&quot;yaayoo&quot;]. Expiry);\n        }\n    }\n\nclass SomeClass {\n        public int Id { get; set; }\n        public string Foobar { get; set; }\n    }\n```\n\nPlace a breakpoint on the `WriteLine` line. Observe that the currect value is printed to the console. Now hover over `Expiry`. It will show `1.1.0001`, or the MinValue for the `DateTimeOffset` member. \n\nNow hover over the dict object. As you open up the only item inside, you can see the tuple and the values correctly.\n\nSame happens in the Watch window. If you add `dict[&quot;yaayoo&quot;]. Expiry` it will show `MinValue`, but if you add just `dict` and open it up, the correct values are displayed.\n\nSee also attached screenshot.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/578571/dictionary-of-tuple-shows-wrong-value-while-debugg.html\nVSTS ticketId: 897034_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/23/2019, 01:52 AM (14 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 5/23/2019, 09:52 AM (6 hours ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35925","RelatedDescription":"Open issue \"Dictionary of tuple shows wrong value while debugging\" (#35925)"},{"Id":"447901879","IsPullRequest":true,"CreatedAt":"2019-05-23T22:32:51","Actor":"JoeRobich","Number":"35923","RawContent":null,"Title":"Update EditorFeatures.WPF dependencies","State":"open","Body":"Fixes #35897","Url":"https://github.com/dotnet/roslyn/pull/35923","RelatedDescription":"Open PR \"Update EditorFeatures.WPF dependencies\" (#35923)"},{"Id":"447887388","IsPullRequest":false,"CreatedAt":"2019-05-23T21:45:26","Actor":"vsfeedback","Number":"35922","RawContent":null,"Title":"[C#] No intellisense on fall-through switch when the code block following is in curly braces","State":"open","Body":"VSF_TYPE_MARKDOWN\r\n```\r\nenum Foo { Bar, Baz }\r\n\r\n...\r\n\r\nswitch( Foo.Bar )\r\n{\r\n    case Foo.Bar:\r\n    case <x>\r\n    {\r\n        break;\r\n    }\r\n}\r\n```\r\nWhen typing at location &lt;x&gt; there is no intellisense/auto-complete if the block following is wrapped in curly braces. Attempting to hint by typing _Foo._ also fails to trigger intellisense. If the curly braces are removed intellisense works as expected and shows members of the Foo enum.\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/579118/c-no-intellisense-on-fall-through-switch-when-the.html\r\nVSTS ticketId: 897321_\r\n_These are the original issue comments:_\r\n\r\nVisual Studio Feedback System on 5/23/2019, 01:59 AM (12 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n_These are the original issue solutions:_\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35922","RelatedDescription":"Open issue \"[C#] No intellisense on fall-through switch when the code block following is in curly braces\" (#35922)"},{"Id":"447870288","IsPullRequest":false,"CreatedAt":"2019-05-23T20:58:18","Actor":"sharwell","Number":"35920","RawContent":null,"Title":"Access violation in NativeDkmClrRuntimeInstance","State":"open","Body":"Occurred during integration testing:\r\n\r\n```\r\nEvent Time (UTC): 5/23/2019 8:22:07 PM\r\nEvent ID: 1026\r\nData: Application: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: exception code c0000005, exception address 5CEA944F\r\nStack:\r\n   at Microsoft.VisualStudio.Debugger.Clr.NativeDkmClrRuntimeInstance.Proc49F49E75832DB0CFA04009B1EA0F608F(IntPtr, IntPtr, IntPtr, Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags, UInt32, IntPtr, IntPtr, Int32 ByRef)\r\n   at Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance.ContinueForFuncEval(Microsoft.VisualStudio.Debugger.DkmThread, Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval, Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags, UInt32, System.String, Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress)\r\n   at VSDebugEngine.ClrInspector.VilHelper.ContinueForFuncEval(Microsoft.VisualStudio.Debugger.DkmThread, Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags, System.Object, UInt32, System.String, Microsoft.VisualStudio.Debugger.Metadata.MethodBase)\r\n   at VSDebugEngine.ClrInspector.VilCallback.ContinueForFuncEval(Microsoft.VisualStudio.Debugger.DkmThread, Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags, System.Object, UInt32, System.String, Microsoft.VisualStudio.Debugger.Metadata.MethodBase)\r\n   at Microsoft.VisualStudio.VIL.VisualStudioHost.VSGlobalContext.WaitForFuncEvalCompleteConcord(Microsoft.VisualStudio.VIL.DebuggerHost.CorEval, Microsoft.VisualStudio.VIL.VisualStudioHost.LocalContextWrapper, Microsoft.VisualStudio.VIL.DebuggerHost.EvaluationFlags, Microsoft.VisualStudio.Debugger.Metadata.MethodBase)\r\n   at Microsoft.VisualStudio.VIL.VisualStudioHost.VSGlobalContext.WaitForFuncEvalComplete(Microsoft.VisualStudio.VIL.DebuggerHost.CorEval, Microsoft.VisualStudio.VIL.DebuggerHost.LocalContext, Microsoft.VisualStudio.VIL.DebuggerHost.EvaluationFlags, Microsoft.VisualStudio.Debugger.Metadata.MethodBase)\r\n   at Microsoft.VisualStudio.VIL.DebuggerHost.RealFuncEval.DoRealFuncEval(Microsoft.VisualStudio.Debugger.Metadata.MethodBase, Ilrun.CallArgs)\r\n   at Microsoft.VisualStudio.VIL.VisualStudioHost.InspectionHook.TryRealFuncEval(Microsoft.VisualStudio.VIL.VisualStudioHost.VSGlobalContext, Microsoft.VisualStudio.VIL.VisualStudioHost.LocalContextWrapper, Microsoft.VisualStudio.Debugger.Metadata.MethodBase, Ilrun.CallArgs)\r\n   at Microsoft.VisualStudio.VIL.VisualStudioHost.InspectionHook.Hook_TryRealFuncEval(Ilrun.VirtualMachine, Microsoft.VisualStudio.Debugger.Metadata.MethodBase, Ilrun.CallArgs)\r\n   at Microsoft.VisualStudio.VIL.VisualStudioHost.InspectionHook.Hook_CallFromRootFrame(Ilrun.VirtualMachine, Microsoft.VisualStudio.Debugger.Metadata.MethodBase, Ilrun.CallArgs)\r\n   at Ilrun.VirtualMachine2.ExecuteHookedMethod(Ilrun.HookedMethod, Ilrun.CallArgs)\r\n   at Ilrun.VirtualMachine2.ForwardLoop()\r\n   at Ilrun.VirtualMachine2.RunForward()\r\n   at Ilrun.VirtualMachine2.ExecuteMethodInternal(Microsoft.VisualStudio.Debugger.Metadata.MethodBase, Ilrun.CallArgs, Ilrun.IVirtualStackFrame)\r\n   at Ilrun.VirtualMachine2.ExecuteInspectionQuery(Microsoft.VisualStudio.Debugger.Metadata.MethodBase, Ilrun.IVirtualStackFrame)\r\n   at Microsoft.VisualStudio.VIL.VisualStudioHost.VilEvaluationServices.InterpretInspectionQuery(Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession, Microsoft.VisualStudio.Debugger.DkmWorkList, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags, Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags, UInt32, Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame, Microsoft.VisualStudio.Debugger.Metadata.Assembly, System.String, System.String, System.String, Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags, Microsoft.VisualStudio.VIL.VisualStudioHost.VilEvaluationResult, Microsoft.VisualStudio.Debugger.Metadata.Type, Microsoft.VisualStudio.VIL.VisualStudioHost.InspectionQueryUserContext, System.String ByRef, Microsoft.VisualStudio.Debugger.Metadata.MethodInfo ByRef)\r\n   at VSDebugEngine.ClrInspector.VilHelper.ExecuteQueryInternal(Microsoft.VisualStudio.Debugger.Metadata.Assembly, System.String, System.String, Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType, Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags, Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo, Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext, Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame, System.String, System.String, System.Collections.ObjectModel.ReadOnlyCollection`1<System.String>, Microsoft.VisualStudio.Debugger.DkmWorkList, VSDebugEngine.ClrInspector.EvaluationResultContinuation)\r\n   at VSDebugEngine.ClrInspector.VilHelper.ExecuteInspectionQuery(Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery, Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext, Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame, System.String, Microsoft.VisualStudio.Debugger.DkmWorkList, VSDebugEngine.ClrInspector.EvaluationResultContinuation)\r\n   at VSDebugEngine.ClrInspector.EntryPoint.Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrInspectionQueryProcessor.Execute(Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery, Microsoft.VisualStudio.Debugger.DkmWorkList, Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext, Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext, System.String, Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteClrInspectionQueryAsyncResult>)\r\n   at Microsoft.VisualStudio.Debugger.EntryPoint.IDkmClrInspectionQueryProcessor_Execute(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35920","RelatedDescription":"Open issue \"Access violation in NativeDkmClrRuntimeInstance\" (#35920)"},{"Id":"447853392","IsPullRequest":false,"CreatedAt":"2019-05-23T20:15:59","Actor":"CyrusNajmabadi","Number":"35919","RawContent":null,"Title":"CI failing with: update ExpectedDependency list: System.ValueTuple","State":"open","Body":"See https://dev.azure.com/dnceng/public/_build/results?buildId=198851&view=logs&jobId=6a7d83c1-6850-57a3-ff09-22192451ed19 as an example.  ","Url":"https://github.com/dotnet/roslyn/issues/35919","RelatedDescription":"Open issue \"CI failing with: update ExpectedDependency list: System.ValueTuple\" (#35919)"},{"Id":"447754218","IsPullRequest":false,"CreatedAt":"2019-05-23T20:13:14","Actor":"mirsaeedi","Number":"35908","RawContent":null,"Title":"C# Tuples - Tuple type is inferred as dynamic type in the caller when passing dynamic parameters to the callee","State":"closed","Body":"**Version Used**: 7.3\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\n class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            dynamic input = \"\";\r\n            var val = Test(input);\r\n            // val is dynamic here instead of (int X, int y). \r\n            // you cannot use val.X or val.Y\r\n            // instead you should use val.Item1 or val.Item2\r\n        }\r\n\r\n        public static (int X, int y) Test(string x)\r\n        {\r\n            return (0, 0);\r\n        }\r\n    }\r\n```\r\n**Expected Behavior**:\r\nWe expect that _val_ be a tuple with strongly typed properties named X and Y, respectively.\r\n\r\n**Actual Behavior**:\r\n_val_ is inferred as a dynamic instance. Moreover, CLR cannot access _val_'s properties through X and Y instead we should use Item1 and Item2.\r\n","Url":"https://github.com/dotnet/roslyn/issues/35908","RelatedDescription":"Closed issue \"C# Tuples - Tuple type is inferred as dynamic type in the caller when passing dynamic parameters to the callee\" (#35908)"},{"Id":"447754745","IsPullRequest":false,"CreatedAt":"2019-05-23T19:51:30","Actor":"tmat","Number":"35909","RawContent":null,"Title":"Integration test CPSProject_GeneralPropertyGroupUpdated failed in CI","State":"closed","Body":"https://dev.azure.com/dnceng/public/_build/results?buildId=197521&view=ms.vss-test-web.build-test-results-tab&runId=4796290&paneView=debug&resultId=100389\r\n\r\n```\r\nAssert.Contains() Failure\\r\\nNot found: (filter expression)\\r\\nIn value: WhereEnumerableIterator<XElement> [<PropertyGroup>\\r\\n <TargetFramework>netstandard2.0</TargetFramework>\\r\\n</PropertyGroup>]\r\n\r\nStack trace\r\n   at Roslyn.VisualStudio.IntegrationTests.AbstractUpdateProjectTest.VerifyPropertyOutsideConfiguration(XElement projectElement, String name, String value) in /_/src/VisualStudio/IntegrationTest/IntegrationTests/AbstractUpdateProjectTest.cs:line 31\r\n   at Roslyn.VisualStudio.IntegrationTests.CSharp.CSharpUpdateProjectToAllowUnsafe.CPSProject_GeneralPropertyGroupUpdated() in /_/src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpUpdateProjectToAllowUnsafe.cs:line 44\r\nBuild 20190522.24 Failed\r\n\r\nShowing filters 1 through 3\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35909","RelatedDescription":"Closed issue \"Integration test CPSProject_GeneralPropertyGroupUpdated failed in CI\" (#35909)"},{"Id":"447730806","IsPullRequest":true,"CreatedAt":"2019-05-23T19:51:30","Actor":"sharwell","Number":"35907","RawContent":null,"Title":"Update SuggestedAction to track successful application","State":"closed","Body":"Fixes #35909 by silently retrying to apply a code fix if the application failed due to concurrent changes in the workspace.","Url":"https://github.com/dotnet/roslyn/pull/35907","RelatedDescription":"Closed or merged PR \"Update SuggestedAction to track successful application\" (#35907)"},{"Id":"447828766","IsPullRequest":false,"CreatedAt":"2019-05-23T19:13:20","Actor":"ryzngard","Number":"35918","RawContent":null,"Title":"Explicit conversion in foreach is incorrect","State":"open","Body":"See https://github.com/dotnet/roslyn/pull/35095#discussion_r277894589 for context \r\n\r\nFor an explicit conversion from foreach, the expected value should be `NoConversion` when the current type is explicit and the enumerable type is unknown","Url":"https://github.com/dotnet/roslyn/issues/35918","RelatedDescription":"Open issue \"Explicit conversion in foreach is incorrect\" (#35918)"},{"Id":"447826700","IsPullRequest":true,"CreatedAt":"2019-05-23T19:08:13","Actor":"kendrahavens","Number":"35917","RawContent":null,"Title":"Add recently added features list","State":"open","Body":"\r\nThis came from a need to easily search our growing feature list all in one place. Currently in the Visual Studio release notes one must navigate to several different pages to get an idea of what has been added recently.\r\n\r\n@tmat @jinujoseph \r\n","Url":"https://github.com/dotnet/roslyn/pull/35917","RelatedDescription":"Open PR \"Add recently added features list\" (#35917)"},{"Id":"447814421","IsPullRequest":false,"CreatedAt":"2019-05-23T18:38:36","Actor":"AlekseyTs","Number":"35915","RawContent":null,"Title":"Consider improving diagnostics when all equally specific implementation candidates are re-abstractions","State":"open","Body":"```\r\n        [Fact]\r\n        public void MethodReAbstraction_09()\r\n        {\r\n            var source1 =\r\n@\"\r\npublic interface I1\r\n{\r\n    void M1() {} \r\n}\r\n\r\npublic interface I2 : I1\r\n{\r\n    abstract void I1.M1();\r\n}\r\n\r\npublic interface I3 : I1\r\n{\r\n    abstract void I1.M1();\r\n}\r\n\";\r\n\r\n            var source2 =\r\n@\"\r\nclass Test1 : I2, I3\r\n{\r\n}\r\n\";\r\n            ValidateMethodReAbstraction_09(source1, source2);\r\n        }\r\n\r\n        private void ValidateMethodReAbstraction_09(string source1, string source2)\r\n        {\r\n            var compilation1 = CreateCompilation(source2 + source1, options: TestOptions.DebugDll,\r\n                                                 parseOptions: TestOptions.Regular,\r\n                                                 targetFramework: TargetFramework.NetStandardLatest);\r\n            validate(compilation1.SourceModule);\r\n\r\n            var expected = new DiagnosticDescription[]\r\n                {\r\n                    // (2,15): error CS8705: Interface member 'I1.M1()' does not have a most specific implementation. Neither 'I2.I1.M1()', nor 'I3.I1.M1()' are most specific.\r\n                    // class Test1 : I2, I3\r\n                    Diagnostic(ErrorCode.ERR_MostSpecificImplementationIsNotFound, \"I2\").WithArguments(\"I1.M1()\", \"I2.I1.M1()\", \"I3.I1.M1()\").WithLocation(2, 15)\r\n                };\r\n\r\n            compilation1.VerifyDiagnostics(expected);\r\n\r\n            var compilation2 = CreateCompilation(source1, options: TestOptions.DebugDll,\r\n                                                 parseOptions: TestOptions.Regular,\r\n                                                 targetFramework: TargetFramework.NetStandardLatest);\r\n            compilation2.VerifyDiagnostics();\r\n\r\n            foreach (var reference in new[] { compilation2.ToMetadataReference(), compilation2.EmitToImageReference() })\r\n            {\r\n                var compilation3 = CreateCompilation(source2, options: TestOptions.DebugDll, references: new[] { reference },\r\n                                                     parseOptions: TestOptions.Regular,\r\n                                                     targetFramework: TargetFramework.NetStandardLatest);\r\n                validate(compilation3.SourceModule);\r\n                compilation3.VerifyDiagnostics(expected);\r\n            }\r\n\r\n            static void validate(ModuleSymbol m)\r\n            {\r\n                var test1 = m.GlobalNamespace.GetTypeMember(\"Test1\");\r\n                var i1m1 = test1.InterfacesNoUseSiteDiagnostics().First().ContainingNamespace.GetTypeMember(\"I1\").GetMember<MethodSymbol>(\"M1\");\r\n                Assert.Equal(\"void I1.M1()\", i1m1.ToTestDisplayString());\r\n\r\n                Assert.Null(test1.FindImplementationForInterfaceMember(i1m1));\r\n            }\r\n        }\r\n```\r\n\r\nObserved:\r\n```\r\n                    // (2,15): error CS8705: Interface member 'I1.M1()' does not have a most specific implementation. Neither 'I2.I1.M1()', nor 'I3.I1.M1()' are most specific.\r\n                    // class Test1 : I2, I3\r\n                    Diagnostic(ErrorCode.ERR_MostSpecificImplementationIsNotFound, \"I2\").WithArguments(\"I1.M1()\", \"I2.I1.M1()\", \"I3.I1.M1()\").WithLocation(2, 15)\r\n```\r\n\r\nSuggested: Perhaps we should simply say that I1.M1() is not implemented as long as all conflicting candidates are re-abstractions.","Url":"https://github.com/dotnet/roslyn/issues/35915","RelatedDescription":"Open issue \"Consider improving diagnostics when all equally specific implementation candidates are re-abstractions\" (#35915)"},{"Id":"447813332","IsPullRequest":true,"CreatedAt":"2019-05-23T18:36:05","Actor":"dibarbet","Number":"35914","RawContent":null,"Title":"Fix declaration name completion when local functions present.","State":"open","Body":"Resolves https://github.com/dotnet/roslyn/issues/35891\r\n","Url":"https://github.com/dotnet/roslyn/pull/35914","RelatedDescription":"Open PR \"Fix declaration name completion when local functions present.\" (#35914)"},{"Id":"447812266","IsPullRequest":true,"CreatedAt":"2019-05-23T18:33:26","Actor":"heejaechang","Number":"35913","RawContent":null,"Title":"add value tuple dependency","State":"open","Body":"move ValueTuple dependency back in. \r\n\r\nhttps://github.com/dotnet/roslyn/pull/34860 (streamjsonrpc 2.0) turns out still require ValueTuple dependency","Url":"https://github.com/dotnet/roslyn/pull/35913","RelatedDescription":"Open PR \"add value tuple dependency\" (#35913)"},{"Id":"447776697","IsPullRequest":false,"CreatedAt":"2019-05-23T17:06:26","Actor":"kendrahavens","Number":"35912","RawContent":null,"Title":"Codestyle: Require comments on specified members","State":"open","Body":"[Original developer community](https://developercommunity.visualstudio.com/idea/551465/对editorconfig-的-net-编码约定设置增加注释规则.html?childToView=579424#comment-579424\r\n)\r\n\r\n> Add annotation rules to the .NET encoding convention settings of Editorconfig\r\n> if a field, property, or method is missing a comment, vs can have suggestions, warnings, or incorrect configuration.\r\n\r\nExample:\r\n```\r\ndotnet_style_require_comments.applicable_kinds = field, method, property\r\ndotnet_style_require_comments = true:suggestion\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/35912","RelatedDescription":"Open issue \"Codestyle: Require comments on specified members\" (#35912)"},{"Id":"447775092","IsPullRequest":false,"CreatedAt":"2019-05-23T17:02:26","Actor":"AlekseyTs","Number":"35911","RawContent":null,"Title":"An attempt to embed an interface with a re-abstraction of a method from base should produce an error","State":"open","Body":"```\r\n        [Fact]\r\n        public void NoPia_10()\r\n        {\r\n            var attributes = CreateCompilation(NoPiaAttributes, options: TestOptions.ReleaseDll, targetFramework: TargetFramework.NetStandardLatest);\r\n            var attributesRef = attributes.EmitToImageReference();\r\n\r\n            string pia = @\"\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\nusing System.Runtime.CompilerServices;\r\n\r\n[assembly: PrimaryInteropAssemblyAttribute(1,1)]\r\n[assembly: Guid(\"\"f9c2d51d-4f44-45f0-9eda-c9d599b58257\"\")]\r\n\r\n[ComImport()]\r\n[Guid(\"\"f9c2d51d-4f44-45f0-9eda-c9d599b58279\"\")]\r\npublic interface ITest33\r\n{\r\n    void M1();\r\n}\r\n\r\n[ComImport()]\r\n[Guid(\"\"f9c2d51d-4f44-45f0-9eda-c9d599b58280\"\")]\r\npublic interface ITest44 : ITest33\r\n{\r\n    abstract void ITest33.M1();\r\n}\r\n\";\r\n\r\n            var piaCompilation = CreateCompilation(pia, options: TestOptions.ReleaseDll, references: new[] { attributesRef }, targetFramework: TargetFramework.NetStandardLatest);\r\n\r\n            CompileAndVerify(piaCompilation, verify: VerifyOnMonoOrCoreClr);\r\n\r\n            string consumer = @\"\r\nclass UsePia\r\n{\r\n    public static void Main(ITest44 x)\r\n    {\r\n        x.M1();\r\n    }\r\n} \r\n\";\r\n\r\n            foreach (var reference in new[] { piaCompilation.ToMetadataReference(embedInteropTypes: true), piaCompilation.EmitToImageReference(embedInteropTypes: true) })\r\n            {\r\n                var compilation1 = CreateCompilation(consumer, options: TestOptions.ReleaseDll, references: new[] { reference, attributesRef }, targetFramework: TargetFramework.NetStandardLatest);\r\n\r\n                compilation1.VerifyEmitDiagnostics(\r\n                    // (4,29): error CS8711: Type 'ITest44' cannot be embedded because it has a non-abstract member. Consider setting the 'Embed Interop Types' property to false.\r\n                    //     public static void Main(ITest44 x)\r\n                    Diagnostic(ErrorCode.ERR_DefaultInterfaceImplementationInNoPIAType, \"ITest44\").WithArguments(\"ITest44\").WithLocation(4, 29)\r\n                    );\r\n            }\r\n        }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35911","RelatedDescription":"Open issue \"An attempt to embed an interface with a re-abstraction of a method from base should produce an error\" (#35911)"},{"Id":"447763617","IsPullRequest":false,"CreatedAt":"2019-05-23T16:35:42","Actor":"ektrah","Number":"35910","RawContent":null,"Title":"Unsafe.AsRef<T>(in T) loses nullability of T","State":"open","Body":"*(Duplicated from https://github.com/dotnet/corefx/issues/37861)*\r\n\r\nIt seems that passing a nullable-reference-type reference to System.Runtime.CompilerServices.Unsafe.AsRef<T>(in T) turns it into a non-nullable-reference-type reference:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/4752078/58172275-66053000-7c98-11e9-91a4-32682db50d26.png)\r\n\r\nCuriously, this doesn't happen when assigning to the reference...\r\n\r\n![screenshot2](https://user-images.githubusercontent.com/4752078/58172814-e6786080-7c99-11e9-9e57-f29963ecf12f.png)\r\n\r\n...unless the previously referenced value isn't null:\r\n\r\n![screenshot3](https://user-images.githubusercontent.com/4752078/58172829-f3954f80-7c99-11e9-863d-d5ce9c88c187.png)\r\n\r\nNot sure if this is an issue with System.Runtime.CompilerServices.Unsafe (lack of nullability annotations?) or Roslyn or both...\r\n\r\nI'm using Visual Studio 16.1.0 with .NET Core 3.0.100-preview5-011568.\r\n\r\n<details>\r\n<summary>Full code (click to expand)</summary>\r\n\r\n```csharp\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            string? s = \"Hello World\";\r\n\r\n            ref string? r1 = ref s;\r\n\r\n            ref string? r2 = ref Unsafe.AsRef(in s);\r\n\r\n            DangerousUpdate(in s);\r\n\r\n            DangerousUpdateIfNotNull(in s);\r\n        }\r\n\r\n        static void DangerousUpdate(in string? s)\r\n        {\r\n            Unsafe.AsRef(in s) = null;\r\n        }\r\n\r\n        static void DangerousUpdateIfNotNull(in string? s)\r\n        {\r\n            if (s == null)\r\n                throw new InvalidOperationException();\r\n\r\n            Unsafe.AsRef(in s) = null;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableContextOptions>enable</NullableContextOptions>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Runtime.CompilerServices.Unsafe\" Version=\"4.6.0-preview6.19259.10\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n</details>\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35910","RelatedDescription":"Open issue \"Unsafe.AsRef<T>(in T) loses nullability of T\" (#35910)"},{"Id":"447720937","IsPullRequest":false,"CreatedAt":"2019-05-23T15:11:08","Actor":"cston","Number":"35906","RawContent":null,"Title":"Avoid initializing fields to `null` in IL","State":"open","Body":"The compiler should avoid generating IL for fields that are explicitly initialized to `null`.\r\n\r\nThis is particularly important for non-nullable fields because it may be necessary to explicitly initialize those fields with `= null!` to suppress the nullable warning. The compiler should not generate extra code for those cases.\r\n\r\n```C#\r\nclass Program\r\n{\r\n    object Field = null!;\r\n}\r\n```\r\nThe IL for `Program..ctor` (from ildasm):\r\n```\r\n  .method public hidebysig specialname rtspecialname \r\n          instance void  .ctor() cil managed\r\n  {\r\n    // Code size       15 (0xf)\r\n    .maxstack  8\r\n    IL_0000:  ldarg.0\r\n    IL_0001:  ldnull\r\n    IL_0002:  stfld      object Program::Field\r\n    IL_0007:  ldarg.0\r\n    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()\r\n    IL_000d:  nop\r\n    IL_000e:  ret\r\n  }\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/35906","RelatedDescription":"Open issue \"Avoid initializing fields to `null` in IL\" (#35906)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"447966173","IsPullRequest":true,"CreatedAt":"2019-05-24T03:46:09","Actor":"Dotnet-GitSync-Bot","Number":"7446","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @safern","Url":"https://github.com/dotnet/corert/pull/7446","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7446)"},{"Id":"447913967","IsPullRequest":true,"CreatedAt":"2019-05-24T03:44:16","Actor":"Dotnet-GitSync-Bot","Number":"7445","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @davidwrighton","Url":"https://github.com/dotnet/corert/pull/7445","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7445)"},{"Id":"447842862","IsPullRequest":true,"CreatedAt":"2019-05-24T01:40:30","Actor":"nattress","Number":"7444","RawContent":null,"Title":"Update CoreCLR and framework for R2R tests","State":"closed","Body":"In Preview5, the R2R format version was bumped to 3.0. Roll forward to 3.0 and test against a more recent runtime that supports 3.0 ready-to-run image format.","Url":"https://github.com/dotnet/corert/pull/7444","RelatedDescription":"Closed or merged PR \"Update CoreCLR and framework for R2R tests\" (#7444)"},{"Id":"447361022","IsPullRequest":true,"CreatedAt":"2019-05-23T18:31:54","Actor":"Dotnet-GitSync-Bot","Number":"7442","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @marek-safar","Url":"https://github.com/dotnet/corert/pull/7442","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7442)"},{"Id":"447805291","IsPullRequest":true,"CreatedAt":"2019-05-23T18:16:53","Actor":"trylek","Number":"7443","RawContent":null,"Title":"CPAOT large version bubble bugfixes","State":"open","Body":"I have finally identified the reason for various recent inconsistencies\r\nwe were recently hitting in large version bubble testing. As the\r\nR2R major version number was recently bumped to 3 in CoreCLR, it\r\ngot out of sync with the value 2 we have in CoreClrRuntime used\r\nfor CPAOT testing in the CoreRT repo. For this reason all recent\r\ntesting performed against the CoreCLR version of Core_Root was\r\nsilently switching over to JIT; this included my recent local\r\nlarge version bubble testing - while R2RDump was dumping the R2R\r\nfile content correctly and let me fix most issues, some problems\r\nnaturally remained and only popped up at runtime:\r\n\r\n1) NewArrayFixupSignature wasn't properly switching over to the\r\ninner signature context when emitting the array type signature.\r\n\r\n2) SignatureBuilder was emitting incorrect signature for fields\r\non instantiated types (this only popped up after inlining parts\r\nof CoreLib into the unit test).\r\n\r\n3) In SignatureContext, we should call the token resolution logic\r\nwhen determining field tokens as for fields encoded using refs\r\nthe reference module is the module containing the ref, not\r\nnecessarily the reference module for its owning type.\r\n\r\n4) In CorInfoImpl.ReadyToRun, the logic for encoding string literals\r\nwas incorrect in large version bubble mode in the presence of\r\ninlining - we need to use the context module passed along with the\r\nstring token, not the input module.\r\n\r\n5) ManifestMetadataTableNode was incorrectly encoding public key\r\ntokens for the AssemblyRefs.\r\n\r\n6) I previously overlooked the fact that the BadImageFormatException\r\nthrown for native assemblies is a variation of the type local\r\nto TypeSystemException.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. With this change the CoreCLR JIT test suite has about 93% pass\r\nrate. I suspect I understand some of the remaining failures but\r\nI wanted to send this our early as I'm going to be mostly OOF\r\nfor the rest of this week.\r\n","Url":"https://github.com/dotnet/corert/pull/7443","RelatedDescription":"Open PR \"CPAOT large version bubble bugfixes\" (#7443)"},{"Id":"446206809","IsPullRequest":true,"CreatedAt":"2019-05-23T01:25:12","Actor":"trylek","Number":"7437","RawContent":null,"Title":"Initial script changes to enable CPAOT on Linux","State":"closed","Body":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Closed or merged PR \"Initial script changes to enable CPAOT on Linux\" (#7437)"},{"Id":"447312328","IsPullRequest":true,"CreatedAt":"2019-05-22T19:48:18","Actor":"tannergooding","Number":"7441","RawContent":null,"Title":"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03","State":"open","Body":"CC. @jaredpar, @agocke, @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2856 and https://github.com/dotnet/buildtools/pull/2256","Url":"https://github.com/dotnet/corert/pull/7441","RelatedDescription":"Open PR \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03\" (#7441)"},{"Id":"446926910","IsPullRequest":true,"CreatedAt":"2019-05-22T15:34:12","Actor":"Dotnet-GitSync-Bot","Number":"7440","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @mikernet","Url":"https://github.com/dotnet/corert/pull/7440","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7440)"},{"Id":"446854506","IsPullRequest":true,"CreatedAt":"2019-05-22T04:25:11","Actor":"Dotnet-GitSync-Bot","Number":"7439","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7439","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7439)"},{"Id":"445642704","IsPullRequest":true,"CreatedAt":"2019-05-21T22:34:36","Actor":"Suchiman","Number":"7434","RawContent":null,"Title":"Port GC changes from coreclr - 9","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7416\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/5e82b75a22e9f1ee379beab45c2ddc6146132aab):**\r\n- https://github.com/dotnet/coreclr/commit/7eb6865565fbd3c45ca58e398a72750fa43c432e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/59f2a57563b7488779a9b93220a9dfe5c6a45700 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bdf219c364e15cae908f9c87446ff4ae26a9fe1e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/55ce686a6092cf38458d2dce6da18aef8eab7c43 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bed0a5e263324d3e035a2140c24cc70f1e143d93 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/fa01b864246bb588e5088be36dbfe3af833b266f (skipped)\r\n- https://github.com/dotnet/coreclr/commit/8acf6c9f7e33b1bfe77205cd2e61f2c60e8c00ce (manual port)\r\n- https://github.com/dotnet/coreclr/commit/1eea080a7b3a13110975b92034a22e4fc473df46 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9f38303221294f45740feefc1b6ddf72347ff882 (gc only port)\r\n","Url":"https://github.com/dotnet/corert/pull/7434","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 9\" (#7434)"},{"Id":"446251764","IsPullRequest":true,"CreatedAt":"2019-05-21T22:33:34","Actor":"Dotnet-GitSync-Bot","Number":"7438","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AArnott","Url":"https://github.com/dotnet/corert/pull/7438","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7438)"},{"Id":"445072772","IsPullRequest":true,"CreatedAt":"2019-05-20T07:44:09","Actor":"trylek","Number":"7428","RawContent":null,"Title":"CPAOT support for large version bubble, take #2","State":"closed","Body":"As I haven't found out how to reopen my original PR after reverting it, I have prepared a new one. In the first commit I have pushed the original change rebased to the preparatory change moving CanInline\r\nto CompilationModuleGroup. In the second commit I added logic for clean separation of input assembly set from the version bubble assembly set.\r\n\r\nEarlier in CPAOT development, we used to use CompilationModuleGroup.ContainsType / ContainsMethodBody for checking whether a given typesystem element belongs to either of these sets. To facilitate the separation I have added two new methods on CompilationModuleGroup, VersionsWithType and VersionsWithMethodBody. I audited all calls to ContainsMethodBody & ContainsType in the CPAOT codebase and I modified those querying the version bubble to call VersionsWithType/MethodBody instead.\r\n\r\nThanks\r\n\r\nTomas\r\n","Url":"https://github.com/dotnet/corert/pull/7428","RelatedDescription":"Closed or merged PR \"CPAOT support for large version bubble, take #2\" (#7428)"},{"Id":"445756425","IsPullRequest":true,"CreatedAt":"2019-05-18T21:35:30","Actor":"trylek","Number":"7436","RawContent":null,"Title":"SuperIlc fixes for building the entire Pri#1 suite","State":"open","Body":"After adding support for the issues.targets file I became\r\nable to run the entire Pri# 1 test suite using SuperIlc.\r\nThis change fixes issues uncovered by this more extensive\r\ntesting.\r\n\r\n1) We need to slightly special-case the Core_Root folder\r\nas it technically lies under the CoreCLR\\bin\\tests\\(cfg)\r\nfolder; when building this entire folder, SuperIlc used to\r\npick it up as one of the folders to compile and was\r\nsubsequently racing between the build of this folder and\r\nof the tests that refer to it in CPAOT framework mode.\r\n\r\n2) BuildFolder construction was collecting test references\r\ntoo early i.e. before the framework was built. I came to\r\nthe conclusion that this is a general problem stemming from\r\nthe fact that ProcessInfo was an arbitrary mixture of the\r\nprocess parameters and the state machine used during the\r\nactual build. I have cleaned this up by separating the\r\nparameter file into a new class ProcessParameters; this let\r\nme add logic for constructing the actual paramterers later.\r\n\r\n3) I have added new options to specify explicit compilation\r\nand execution timeouts to add at least minimum support for\r\nlong-building and long-running tests.\r\n\r\n4) I have parallelized folder deletion and subtree lookup\r\nto improve their performance.\r\n\r\n5) I have added caching to the check for managed assemblies.\r\nPreviously, in the Pri# 1 tests we used to open framework\r\nassemblies about 3 million times just for the purpose of\r\nthis lookup.\r\n\r\n6) I have reduced the batch size for running ETW processes\r\nfrom 100 to 10 as the larger number of events collected\r\nwithin a single session was apparently slowing down test\r\nexecution.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7436","RelatedDescription":"Open PR \"SuperIlc fixes for building the entire Pri#1 suite\" (#7436)"},{"Id":"445661755","IsPullRequest":true,"CreatedAt":"2019-05-18T05:14:47","Actor":"Dotnet-GitSync-Bot","Number":"7435","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7435","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7435)"},{"Id":"445624997","IsPullRequest":true,"CreatedAt":"2019-05-18T00:48:06","Actor":"Dotnet-GitSync-Bot","Number":"7433","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7433","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7433)"},{"Id":"445569920","IsPullRequest":true,"CreatedAt":"2019-05-17T22:23:58","Actor":"jkotas","Number":"7432","RawContent":null,"Title":"Mark CustomAttributeNamedArgument and CustomAttributeTypedArgument as readonly","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7432","RelatedDescription":"Closed or merged PR \"Mark CustomAttributeNamedArgument and CustomAttributeTypedArgument as readonly\" (#7432)"},{"Id":"445509182","IsPullRequest":true,"CreatedAt":"2019-05-17T18:08:27","Actor":"Dotnet-GitSync-Bot","Number":"7431","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7431","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7431)"},{"Id":"445259095","IsPullRequest":true,"CreatedAt":"2019-05-17T15:51:42","Actor":"Dotnet-GitSync-Bot","Number":"7430","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @Anipik","Url":"https://github.com/dotnet/corert/pull/7430","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7430)"},{"Id":"445085554","IsPullRequest":true,"CreatedAt":"2019-05-17T04:25:54","Actor":"Dotnet-GitSync-Bot","Number":"7429","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7429","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7429)"},{"Id":"444773127","IsPullRequest":true,"CreatedAt":"2019-05-16T13:56:26","Actor":"Dotnet-GitSync-Bot","Number":"7427","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7427","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7427)"},{"Id":"444513464","IsPullRequest":true,"CreatedAt":"2019-05-15T22:10:39","Actor":"jkotas","Number":"7426","RawContent":null,"Title":"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets","State":"closed","Body":"It is used by DumpNativeResources task in Microsoft.NETCore.Native.targets\r\n\r\nFixes #7425","Url":"https://github.com/dotnet/corert/pull/7426","RelatedDescription":"Closed or merged PR \"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets\" (#7426)"},{"Id":"444383256","IsPullRequest":false,"CreatedAt":"2019-05-15T22:10:39","Actor":"ctaggart","Number":"7425","RawContent":null,"Title":"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"","State":"closed","Body":"When I set `/p:NativeCompilationDuringPublish=false ` as described in [the documentation](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#disabling-native-compilation) and [recommended](https://github.com/dotnet/corert/issues/258#issuecomment-492331206), I get this error:\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r ubuntu.16.04-x64 -c Release /p:NativeCompilationDuringPublish=false\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-02/build/Microsoft.NETCore.Native.targets(301,45): error MSB4022: The result \"\" of evaluating the value \"$(IlcBuildTasksPath)\" of the \"AssemblyFile\" attribute in element <UsingTask> is not valid. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nAs a work-a-round I'm going to try a variation of [another way to disable the ILCompiler](https://github.com/dotnet/corert/issues/258#issuecomment-492331624).","Url":"https://github.com/dotnet/corert/issues/7425","RelatedDescription":"Closed issue \"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"\" (#7425)"},{"Id":"444137558","IsPullRequest":true,"CreatedAt":"2019-05-15T15:45:52","Actor":"jkotas","Number":"7424","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7424","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7424)"},{"Id":"444029647","IsPullRequest":true,"CreatedAt":"2019-05-14T21:13:10","Actor":"Dotnet-GitSync-Bot","Number":"7423","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @cshung @sywhang @tannergooding","Url":"https://github.com/dotnet/corert/pull/7423","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7423)"},{"Id":"443994361","IsPullRequest":false,"CreatedAt":"2019-05-14T16:25:03","Actor":"ctaggart","Number":"7422","RawContent":null,"Title":"RhpETWLogLiveCom error on Debian 9 build","State":"closed","Body":"I got `dotnet publish -r win-x64`  working on Windows for my project, but when I try to build from `mcr.microsoft.com/dotnet/core/sdk:2.2.203-stretch` docker image, I get an error about `RhpETWLogLiveCom` missing.\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 54.08 ms for /src/Shirley/Shirley.fsproj.\r\n  Shirley -> /src/Shirley/bin/release/netcoreapp2.2/linux-x64/Shirley.dll\r\n  /usr/bin/clang-3.9\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(ReadOnlySpan`1<char>)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(System.ReadOnlySpan`1<Char>) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32,Encoding)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32, System.Text.Encoding) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[],int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[], Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[])` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[]) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `[S.P.CoreLib]System.Activator.CreateInstanceIntrinsic<__Canon>()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.__Canon System.Activator.CreateInstanceIntrinsic() [/src/Shirley/Shirley.fsproj]\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWShouldWalkCom':\r\n  (__managedcode+0x613573): undefined reference to `RhpETWShouldWalkCom'\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWLogLiveCom':\r\n  (__managedcode+0x61359b): undefined reference to `RhpETWLogLiveCom'\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/src/Shirley/Shirley.fsproj]\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.2/linux-x64/native/Shirley.o\" -o \"bin/release/netcoreapp2.2/linux-x64/native/Shirley\" /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libbootstrapper.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libRuntime.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.CoreLib.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.TypeLoader.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Globalization.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.IO.Compression.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Net.Security.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt\" exited with code 1. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nBased on https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md, I installed clang with:\r\n```\r\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\r\necho \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" | tee -a /etc/apt/sources.list\r\napt-get update\r\napt-get install cmake clang-3.9 libicu-dev uuid-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev -y\r\n```\r\n\r\nThe CoreRT version is:\r\n```\r\n      \"Microsoft.DotNet.ILCompiler\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.0-alpha-*, )\",\r\n        \"resolved\": \"1.0.0-alpha-27714-01\",\r\n        \"contentHash\": \"Xa2TzZJKoyhMJF7rx+/WjXYOYfQEprdr6CGptdQ0ix4kVI2icYJQnbm+TALQHfb9okW0X3ebNrlPxXhJW461Qw==\"\r\n      },\r\n```\r\n\r\nI noticed this import here and noticed it hasn't been changed in a while.\r\nhttps://github.com/dotnet/corert/blame/master/src/System.Private.CoreLib/src/System/Runtime/RuntimeImports.cs#L724-L729\r\n\r\nAm I missing a dependency?\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7422","RelatedDescription":"Closed issue \"RhpETWLogLiveCom error on Debian 9 build\" (#7422)"},{"Id":"443767461","IsPullRequest":false,"CreatedAt":"2019-05-14T08:04:14","Actor":"mariopasquali","Number":"7421","RawContent":null,"Title":"Compiling ARM on x64","State":"open","Body":"Hi all,\r\n\r\nIt is a few weeks I am trying to set up an environment for compiling a Linux-ARM executable on a x64 machine, without much luck for now.  \r\n\r\nI have set up multiple machines including Debian 9, Ubuntu 16, Ubuntu 18, all 64-bits, even tried with 32-bits versions.  I am currently working on a Ubuntu 16 x64.  Probably an obvious question, but could someone confirm this is supported for compiling an ARM32 output?\r\n\r\nThere are a few possible typos in the following document that are possibly confusing:\r\nhttps://github.com/dotnet/corert/blob/master/Documentation/cross-building.md\r\n\r\n- `\"In addition, to cross compile CoreCLR\"` should it be CoreRT?\r\n- `\"Cross compiling CoreCLR\"` should it be CoreRT?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/\"` should it be corert?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/arm ./build.sh\"` should it be corert?\r\n\r\nAnother aspect that I didn't get right is the section \"Using CoreRT for cross compiling under arm on x86 host\".  Is this the section applying to my case where I whish building an output for ARM32 on x86?  If yes, then when would the previous section \"Cross compiling CoreCLR\" apply?\r\n\r\nA few more remarks on the section \"Using CoreRT for cross compiling under arm on x86 host\":\r\n- The steps for \"Build CoreFX\" seems outdated.  Should probably by updated with https://github.com/dotnet/corefx/blob/master/Documentation/building/cross-building.md.  \r\n- `\"./build.sh x86 debug verbose cross crosstarget skiptests\"` There is no parameter crosstarget in build.sh as far as I can see.  Is this outdated?  I am running into various issues when trying to run this step without \"crosstarget\" parameter, like file not found of ConstrainedCallSupportHelpers.S, `\"GetUnwindProcInfo is not supported on this arch yet.\"`, etc.\r\n- Regarding step 4, it would be helpful to give examples of the variables.  What is supposed to be ${WORKING_DIR}?  The output of the application that should be compiled?\r\n\r\nThank you,\r\nMario ","Url":"https://github.com/dotnet/corert/issues/7421","RelatedDescription":"Open issue \"Compiling ARM on x64\" (#7421)"},{"Id":"443568119","IsPullRequest":true,"CreatedAt":"2019-05-14T03:14:10","Actor":"jkotas","Number":"7418","RawContent":null,"Title":"Opt-in more Windows PInvokes into direct calls","State":"closed","Body":"Fixes intermittent infinited recursion inside lazy PInvoke resolver","Url":"https://github.com/dotnet/corert/pull/7418","RelatedDescription":"Closed or merged PR \"Opt-in more Windows PInvokes into direct calls\" (#7418)"},{"Id":"443634094","IsPullRequest":true,"CreatedAt":"2019-05-14T03:13:57","Actor":"JohnTortugo","Number":"7419","RawContent":null,"Title":"Update xplat-job.yml","State":"closed","Body":"Relates to: https://github.com/dotnet/core-eng/issues/6291\r\n\r\n/cc @MattGal ","Url":"https://github.com/dotnet/corert/pull/7419","RelatedDescription":"Closed or merged PR \"Update xplat-job.yml\" (#7419)"},{"Id":"443662831","IsPullRequest":true,"CreatedAt":"2019-05-14T03:02:47","Actor":"MichalStrehovsky","Number":"7420","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7420","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#7420)"},{"Id":"443513642","IsPullRequest":false,"CreatedAt":"2019-05-13T17:21:02","Actor":"ctaggart","Number":"7417","RawContent":null,"Title":"Please provide a .vsconfig","State":"open","Body":"Please provide a .vsconfig with the minimal required Visual Studio 2019 dependencies needed to build. For an example, see:\r\n\r\nhttps://github.com/microsoft/visualfsharp/blob/master/.vsconfig\r\n\r\nRight now the experience is:\r\n```\r\nPS C:\\Users\\taggac\\github\\corert> .\\build.cmd\r\nChecking pre-requisites...\r\n\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.1.0-pre.3.0\r\n** Copyright (c) 2019 Microsoft Corporation\r\n**********************************************************************\r\nCould not find Visual C++ under C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\. Visual C++ is a pre-requisite to build this repository.\r\nSee: https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md\r\n```\r\n\r\nI'd like to be able to open a solution and have Visual Studio prompt to install all the dependencies via Visual Studio Installer.","Url":"https://github.com/dotnet/corert/issues/7417","RelatedDescription":"Open issue \"Please provide a .vsconfig\" (#7417)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"447922530","IsPullRequest":true,"CreatedAt":"2019-05-24T00:02:26","Actor":"dotnet-bot","Number":"3264","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3264","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#3264)"},{"Id":"447922517","IsPullRequest":true,"CreatedAt":"2019-05-24T00:02:23","Actor":"dotnet-bot","Number":"3263","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3263","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#3263)"},{"Id":"444692644","IsPullRequest":true,"CreatedAt":"2019-05-23T21:04:54","Actor":"dotnet-bot","Number":"3239","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3239","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#3239)"},{"Id":"444692635","IsPullRequest":true,"CreatedAt":"2019-05-23T21:03:14","Actor":"dotnet-bot","Number":"3238","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3238","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#3238)"},{"Id":"446933661","IsPullRequest":false,"CreatedAt":"2019-05-23T20:49:39","Actor":"RayKoopa","Number":"3256","RawContent":null,"Title":"NullableContextOptions has no effect anymore (after upgrading to VS 16.2 Preview 1?)","State":"closed","Body":"I'm using 3.0.100-preview5-011568 in VS 16.2.0 Preview 1.0 and the following sample C# console application:\r\n\r\n**project.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableContextOptions>enable</NullableContextOptions>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n**Program.cs**\r\n```cs\r\nusing System;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            String? x = \"Test\";\r\n            Console.WriteLine(x);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nDespite having set `NullableContextOptions` to `enable` in the project file, I receive the warning **CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' context.** on the `String?` question mark character.\r\n\r\nSimilarly, another project cannot be compiled anymore due to **CS8627: A nullable type parameter must be known to be a value type or non-nullable reference type. Consider adding a 'class', 'struct', or type constraint.** when using `T?` for a generic class type method parameter:\r\n```cs\r\npublic void WriteOptional<T>(in T? value) where T : class, IWritable\r\n```\r\n\r\nWhen adding `#nullabe enable` to the top of the file(s) causing the warning, it is gone. It's like the project element lost its functionality after upgrading to VS 16.2.0? I did not change the SDK preview version and could compile the same sources correctly in 16.1.0.\r\n\r\nI'm not sure if https://github.com/dotnet/sdk/issues/3245 is relevant here.","Url":"https://github.com/dotnet/sdk/issues/3256","RelatedDescription":"Closed issue \"NullableContextOptions has no effect anymore (after upgrading to VS 16.2 Preview 1?)\" (#3256)"},{"Id":"447804307","IsPullRequest":true,"CreatedAt":"2019-05-23T18:14:33","Actor":"nguerrera","Number":"3262","RawContent":null,"Title":"Fix StrBegin comments in resx and enforce them in test","State":"open","Body":"Reported by @janbaltus","Url":"https://github.com/dotnet/sdk/pull/3262","RelatedDescription":"Open PR \"Fix StrBegin comments in resx and enforce them in test\" (#3262)"},{"Id":"447399445","IsPullRequest":true,"CreatedAt":"2019-05-23T17:22:55","Actor":"dsplaisted","Number":"3260","RawContent":null,"Title":"Switch to hosted Mac pool for CI","State":"closed","Body":"DotNetCore-Mac pool is being retired.","Url":"https://github.com/dotnet/sdk/pull/3260","RelatedDescription":"Closed or merged PR \"Switch to hosted Mac pool for CI\" (#3260)"},{"Id":"447721754","IsPullRequest":false,"CreatedAt":"2019-05-23T15:12:36","Actor":"rainersigwald","Number":"3261","RawContent":null,"Title":"Consider making runtime target assets available as an item","State":"open","Body":"In part of the MSBuild build that attempts to assemble a set of build tools to make a usable MSBuild distribution (sort of a mini-`core-sdk` for our own bootstrap purposes), we extracted some specific items to copy from the `@(RuntimeCopyLocalItems)` and `@(ResolvedRuntimeTargets)` items output by `ResolvePackageAssets`:\r\n\r\nhttps://github.com/microsoft/msbuild/blob/0411d07a7853af88f2555dd84258c005bdce709c/eng/BootStrapMSBuild.targets#L31-L41\r\n\r\nIn 3.0-preview5, `@(ResolvedRuntimeTargets)` was renamed to `@(RuntimeTargetsCopyLocalItems)`, and it is not populated in full framework builds, unless the explicit opt-out `$(DisableRuntimeTargets)` is set to `false`.\r\n\r\nIt might be worth creating the items for explicit use by custom targets, and just not adding them to the default copy local/publish items in the full framework build.","Url":"https://github.com/dotnet/sdk/issues/3261","RelatedDescription":"Open issue \"Consider making runtime target assets available as an item\" (#3261)"},{"Id":"447336615","IsPullRequest":true,"CreatedAt":"2019-05-22T20:49:24","Actor":"dsplaisted","Number":"3259","RawContent":null,"Title":"Support WPF and WindowsForms-specific FrameworkReferences via profiles","State":"open","Body":"This PR supports referencing only Windows Forms or only WPF assets from the WindowsDesktop targeting pack.  See https://github.com/dotnet/cli/issues/10536.\r\n\r\nThis is done by supporting the following additional FrameworkReferences:\r\n\r\n- Microsoft.WindowsDesktop.App.WindowsForms\r\n- Microsoft.WindowsDesktop.App.WPF\r\n\r\nIn the implementation, a KnownFrameworkReference can specify a Profile of the targeting pack via metadata.  https://github.com/dotnet/core-setup/issues/6210 tracks adding this information to the WindowsDesktop FrameworkList.xml.  Until then, this PR hard-codes the assemblies which are in each profile.\r\n\r\nAfter this is merged, the WindowsDesktop SDK should be updated to use the .WindowsForms or .WPF FrameworkReference depending on if the `UseWPF` or `UseWindowsForms` properties are set.  If both of them are set, it should use the base Microsoft.WindomwsDesktop.App FrameworkReference, which will include the integration DLL.\r\n\r\n@nguerrera @vatsan-madhavan","Url":"https://github.com/dotnet/sdk/pull/3259","RelatedDescription":"Open PR \"Support WPF and WindowsForms-specific FrameworkReferences via profiles\" (#3259)"},{"Id":"446888312","IsPullRequest":true,"CreatedAt":"2019-05-22T20:40:34","Actor":"wli3","Number":"3255","RawContent":null,"Title":"Fix generate package on build pack as tool","State":"closed","Body":"NuGet/Home#7801\r\n\r\n(the easiest way to understand that is)since nuget no longer sets NoBuild on GeneratePackageOnBuild, we need to do similar logic to get the previous state.\r\n\r\nfix https://github.com/dotnet/sdk/issues/3253","Url":"https://github.com/dotnet/sdk/pull/3255","RelatedDescription":"Closed or merged PR \"Fix generate package on build pack as tool\" (#3255)"},{"Id":"446882523","IsPullRequest":false,"CreatedAt":"2019-05-22T20:40:34","Actor":"dsplaisted","Number":"3253","RawContent":null,"Title":"Project with PackAsTool and GeneratePackageOnBuild set to true fails to build","State":"closed","Body":"Tests in `GivenThatWeWantToPackAToolProjectWithGeneratePackageOnBuild` are failing with:\r\n\r\n> C:\\git\\dotnet-sdk\\artifacts\\bin\\Debug\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(337,5): error MSB4006: There is a circular dependency in the target dependency graph involving target \"_WalkEachTargetPerFramework\". [C:\\git\\dotnet-sdk\\artifacts\\tmp\\Debug\\It_builds_suc---81F3C59C\\App\\consoledemo.csproj]\r\n\r\nThis regressed with a recent NuGet insertion.","Url":"https://github.com/dotnet/sdk/issues/3253","RelatedDescription":"Closed issue \"Project with PackAsTool and GeneratePackageOnBuild set to true fails to build\" (#3253)"},{"Id":"447330125","IsPullRequest":true,"CreatedAt":"2019-05-22T20:33:05","Actor":"wli3","Number":"3258","RawContent":null,"Title":"Perf wpf winform hello world","State":"open","Body":"I will clean up the commit after the review","Url":"https://github.com/dotnet/sdk/pull/3258","RelatedDescription":"Open PR \"Perf wpf winform hello world\" (#3258)"},{"Id":"447233563","IsPullRequest":false,"CreatedAt":"2019-05-22T16:28:58","Actor":"sbomer","Number":"3257","RawContent":null,"Title":"Double write during publish","State":"open","Body":"Publishing a self-contained WPF template app writes some files twice because `ResolvedFileToPublish` has the same dll from different runtime packs (for example, Microsoft.Win32.Registry.dll comes from both netcoreapp and the windowsdesktop pack).\r\nThis causes crossgen failures when used together with `PublishReadyToRun=true`.\r\n\r\nLooks very similar to https://github.com/dotnet/sdk/issues/3035 which was addressed in https://github.com/dotnet/sdk/pull/3021, but I'm still seeing this with version `3.0.100-preview6-012031`.\r\n\r\n/cc @fadimounir @nguerrera @peterhuene \r\n\r\nedit: it fails during `PublishReadyToRun=true` only when used together with the linker. Without linking, the duplicates are already crossgen'd, and so they don't hit the failure. In any case, `ResolvedFileToPublish` has duplicates that shouldn't be there, and we end up with `DoubleWrites` of some files.\r\n\r\n<img width=\"565\" alt=\"image\" src=\"https://user-images.githubusercontent.com/787361/58192612-00a04780-7c76-11e9-8ffc-102d4b993fb2.png\">\r\n","Url":"https://github.com/dotnet/sdk/issues/3257","RelatedDescription":"Open issue \"Double write during publish\" (#3257)"},{"Id":"446827153","IsPullRequest":true,"CreatedAt":"2019-05-22T05:25:30","Actor":"dsplaisted","Number":"3252","RawContent":null,"Title":"Update NuGet","State":"closed","Body":"Replacement for #3243, on top of #3250 which should hopefully fix things.","Url":"https://github.com/dotnet/sdk/pull/3252","RelatedDescription":"Closed or merged PR \"Update NuGet\" (#3252)"},{"Id":"446885292","IsPullRequest":false,"CreatedAt":"2019-05-22T00:56:10","Actor":"vatsan-madhavan","Number":"3254","RawContent":null,"Title":"deps.json for ProjectReferences is not emitted correctly","State":"open","Body":"When I create a project with a project reference like this...\r\n\r\n```XML\r\n<ProjectReference Include=\"..\\WindowsBase.csproj\" />\r\n```\r\n\r\n... the `deps.json` file that's generated has an entry like this:\r\n\r\n```json\r\n      \"WindowsBase/1.0.0\": {\r\n        \"runtime\": {\r\n          \"WindowsBase.dll\": {}\r\n        }\r\n      }\r\n```\r\nThe application loads `WindowsBase` from `Microsoft.NetCore.App` instead of loading the one supplied by the referenced project. \r\n\r\n[Repro: XUnitTestProject1.zip](https://github.com/dotnet/sdk/files/3205090/XUnitTestProject1.zip)\r\n\r\n/cc @ericstj \r\n","Url":"https://github.com/dotnet/sdk/issues/3254","RelatedDescription":"Open issue \"deps.json for ProjectReferences is not emitted correctly\" (#3254)"},{"Id":"446345530","IsPullRequest":true,"CreatedAt":"2019-05-21T18:34:59","Actor":"dsplaisted","Number":"3250","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"Should unblock #3243","Url":"https://github.com/dotnet/sdk/pull/3250","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3250)"},{"Id":"446443251","IsPullRequest":false,"CreatedAt":"2019-05-21T06:45:04","Actor":"davidfowl","Number":"3251","RawContent":null,"Title":"deps.json file has empty compilationOptions section","State":"open","Body":"Likely a result of the migration to the new JSON APIs\r\n\r\n```JSON\r\n{\r\n  \"runtimeTarget\": {\r\n    \"name\": \".NETCoreApp,Version=v3.0\",\r\n    \"signature\": \"\"\r\n  },\r\n  \"compilationOptions\": {},\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v3.0\": {\r\n      \"ConsoleApp1/1.0.0\": {\r\n        \"runtime\": {\r\n          \"ConsoleApp1.dll\": {}\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"libraries\": {\r\n    \"ConsoleApp1/1.0.0\": {\r\n      \"type\": \"project\",\r\n      \"serviceable\": false,\r\n      \"sha512\": \"\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\ncc @ahsonkhan @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/3251","RelatedDescription":"Open issue \"deps.json file has empty compilationOptions section\" (#3251)"},{"Id":"445519479","IsPullRequest":false,"CreatedAt":"2019-05-20T17:14:41","Actor":"sebastienros","Number":"3245","RawContent":null,"Title":"NullableContextOptions error during build","State":"closed","Body":"Using the latest build of the SDK, since yesterday.\r\n\r\n```\r\nC:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\xx1da5ap.ru4\\sdk\\3.0.100-preview6-011991\\Sdks\\Microsoft.NET.Sdk.Razor\\build\\netstandard2.0\\Microsoft.NET.Sdk.Razor.Compilation.targets(156,10): error MSB4064: The \"NullableContextOptions\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property. [C:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\2hgsxukz.hiy\\benchmarks\\src\\Benchmarks\\Benchmarks.csproj]\r\nC:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\xx1da5ap.ru4\\sdk\\3.0.100-preview6-011991\\Sdks\\Microsoft.NET.Sdk.Razor\\build\\netstandard2.0\\Microsoft.NET.Sdk.Razor.Compilation.targets(120,5): error MSB4063: The \"Csc\" task could not be initialized with its input parameters.  [C:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\2hgsxukz.hiy\\benchmarks\\src\\Benchmarks\\Benchmarks.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3245","RelatedDescription":"Closed issue \"NullableContextOptions error during build\" (#3245)"},{"Id":"446041376","IsPullRequest":false,"CreatedAt":"2019-05-20T10:31:08","Actor":"fubar-coder","Number":"3249","RawContent":null,"Title":"*.dll.config from package reference not copied to output on publish","State":"open","Body":"# Description\r\n\r\nIt seems that the `*.dll.config` files from a package reference aren't copied to the output directory during a `dotnet publish`.\r\n\r\n# Use case\r\n\r\nI stumbled across this problem while consuming my `FubarDev.PamSharp` package, which **requires** having the ´.dll.config` file, because it contains a `dllmap` that is needed to find the correct native library.\r\n\r\n# `dotnet --info`\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /home/fubar-coder/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [/home/fubar-coder/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/home/fubar-coder/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/home/fubar-coder/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n# System information\r\n\r\nWindows 10 Pro for Workstation 1809 (Build 17763.475)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3249","RelatedDescription":"Open issue \"*.dll.config from package reference not copied to output on publish\" (#3249)"},{"Id":"445620306","IsPullRequest":true,"CreatedAt":"2019-05-17T23:25:17","Actor":"wli3","Number":"3248","RawContent":null,"Title":"Remove _WriteAppConfigWithSupportedRuntime Input dependency ","State":"closed","Body":"on ResolveAssemblyReferencesStateFile\r\n\r\nfix https://github.com/dotnet/sdk/issues/3131\r\n\r\nI tried to get a repro in test. However, I cannot pin down a minimal repro to cause rar cache file to be invalid between builds.\r\n\r\ncc @KirillOsenkov","Url":"https://github.com/dotnet/sdk/pull/3248","RelatedDescription":"Closed or merged PR \"Remove _WriteAppConfigWithSupportedRuntime Input dependency \" (#3248)"},{"Id":"445606690","IsPullRequest":true,"CreatedAt":"2019-05-17T22:37:25","Actor":"peterhuene","Number":"3247","RawContent":null,"Title":"Copy runtime pack resource assemblies on self-contained build/publish.","State":"closed","Body":"This commit implements copying resource assemblies for self-contained\r\nbuild/publish from runtime packs.\r\n\r\nCloses #3068.","Url":"https://github.com/dotnet/sdk/pull/3247","RelatedDescription":"Closed or merged PR \"Copy runtime pack resource assemblies on self-contained build/publish.\" (#3247)"},{"Id":"445600954","IsPullRequest":true,"CreatedAt":"2019-05-17T22:09:36","Actor":"dsplaisted","Number":"3246","RawContent":null,"Title":"Skip tests where .NET Core version they use isn't supported on current OS","State":"closed","Body":"Update some tests to skip running if the current operating system doesn't support the right version of .NET Core.\r\n\r\nThis will help run the sdk tests in dotnet/core-sdk, which tests more operating systems than this repo does.","Url":"https://github.com/dotnet/sdk/pull/3246","RelatedDescription":"Closed or merged PR \"Skip tests where .NET Core version they use isn't supported on current OS\" (#3246)"},{"Id":"445498451","IsPullRequest":false,"CreatedAt":"2019-05-17T15:29:08","Actor":"fr0","Number":"3244","RawContent":null,"Title":"How to set version metadata?","State":"open","Body":"1. I want to use the `VersionPrefix` property inside my `csproj` to define my package's semver 2.0 (3-part) version.\r\n2. I want to attach a 4th part and build metadata on the command line.\r\n\r\nIn other words, I want to have the version be, e.g. \"1.2.3.4+f0c432\"\r\n\r\nWhere `1.2.3` is stored in the `csproj`\r\nand `.4` comes from the CI environment\r\nand `+40c432` is the commit hash.\r\n\r\nThe problem I've run into is that using `--version-suffix` automatically makes it a pre-release version, which I don't want.\r\n\r\nEven if I ignore the 4th number (build number), I can't even do this:\r\n\r\n```\r\ndotnet build MyProj  --version-suffix \"+f0c432\"\r\n```\r\n\r\nBecause:\r\n\r\n```\r\n/usr/local/share/dotnet/sdk/2.2.107/NuGet.targets(114,5): error : '1.2.3-+f0c432' is not a valid version string\r\n```","Url":"https://github.com/dotnet/sdk/issues/3244","RelatedDescription":"Open issue \"How to set version metadata?\" (#3244)"},{"Id":"444685384","IsPullRequest":true,"CreatedAt":"2019-05-16T23:10:13","Actor":"sbomer","Number":"3237","RawContent":null,"Title":"Update stage0","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3237","RelatedDescription":"Closed or merged PR \"Update stage0\" (#3237)"},{"Id":"445092425","IsPullRequest":true,"CreatedAt":"2019-05-16T18:12:47","Actor":"zivkan","Number":"3243","RawContent":null,"Title":"Insert NuGet 5.2.0-preview2.6020 into master","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3243","RelatedDescription":"Open PR \"Insert NuGet 5.2.0-preview2.6020 into master\" (#3243)"},{"Id":"445077491","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:38","Actor":"nugetlurker","Number":"3242","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3242","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3242)"},{"Id":"445077453","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:32","Actor":"nugetlurker","Number":"3241","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3241","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3241)"},{"Id":"444694510","IsPullRequest":true,"CreatedAt":"2019-05-15T23:56:30","Actor":"MSLukeWest","Number":"3240","RawContent":null,"Title":"Setting IsKeyOutput metadata on AppHost file in PublishItemsOutputGroup","State":"open","Body":"Updating the publishing targets to set the IsKeyOutput metadata on the apphost file (exe).  The key output is used when creating shortcuts using Installer Projects.\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3240","RelatedDescription":"Open PR \"Setting IsKeyOutput metadata on AppHost file in PublishItemsOutputGroup\" (#3240)"},{"Id":"444669751","IsPullRequest":false,"CreatedAt":"2019-05-15T22:16:18","Actor":"shhsu","Number":"3236","RawContent":null,"Title":"Question: why does publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)","State":"open","Body":"Hi dotnet:\r\n\r\nI am wondering why publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)\r\nhttps://github.com/dotnet/sdk/blob/77677cd4cd4d033e2a30e33f2e7dc49d7f3c8095/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L354\r\n\r\nBackground:\r\nI created a VSTS pipeline that calls msbuild to build/sign/publish my application (publish to file). However, I am finding that a bunch of binaries in my publish directory is not signed.\r\n\r\nAfter some investigations I have found out that all bits in my $(OutDir) are signed, but the files got copied to publish directory are not from $(OutDir), instead they are from `obj\\Release\\` directory. After looking at the target file I finally found the line that indicates this behavior.\r\n\r\nI have yet to find a good around for this issue. I was wondering why is the reason for this behavior and if there is a workaround for this.\r\n\r\nthanks\r\nPeter","Url":"https://github.com/dotnet/sdk/issues/3236","RelatedDescription":"Open issue \"Question: why does publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)\" (#3236)"},{"Id":"444575344","IsPullRequest":true,"CreatedAt":"2019-05-15T18:11:45","Actor":"livarcocc","Number":"3235","RawContent":null,"Title":"Update branding to 2.2.4xx","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3235","RelatedDescription":"Open PR \"Update branding to 2.2.4xx\" (#3235)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1131606214717116418","CreatedAt":"2019-05-23T17:02:00+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/mHsIdILy7f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"1131209353829052418","CreatedAt":"2019-05-22T14:45:01+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he'll be adding break and continue statements to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":1,"RawContent":null},{"Id":"1129054452357271553","CreatedAt":"2019-05-16T16:02:12+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the .NET, C#, and F# teams https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":3,"RawContent":null},{"Id":"1129053721206304769","CreatedAt":"2019-05-16T15:59:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1128765757175631872","CreatedAt":"2019-05-15T20:55:02+00:00","UserScreenname":"dotnet","Text":"We just blogged about all the performance works we did in .NET Core 3.0 https://t.co/2JGXxF7ejn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":313,"FavoriteCount":150,"RawContent":null},{"Id":"1128672633665384449","CreatedAt":"2019-05-15T14:45:00+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he's implementing functions in his compiler. https://t.co/SYndeEbdMY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":5,"RawContent":null},{"Id":"1128343453970993152","CreatedAt":"2019-05-14T16:56:57+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1128339508414410757","CreatedAt":"2019-05-14T16:41:16+00:00","UserScreenname":"dotnet","Text":"ML .NET  CLI: Learn how to automatically generate an ML .NET  machine learning model and C# related code with this… https://t.co/i8zHrBa1UM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":126,"FavoriteCount":52,"RawContent":null}]}},"RunOn":"2019-05-24T05:30:30.9087971Z","RunDurationInMilliseconds":10279}