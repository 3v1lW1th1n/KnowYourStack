{"Data":{"GitHub":{"Issues":[{"Id":"512267257","IsPullRequest":true,"CreatedAt":"2019-10-27T04:47:51","Actor":"codemzs","Number":"4384","RawContent":null,"Title":"Integrate Image Classification API in AutoML","State":"closed","Body":"This change also contains ImageClassification API change to convert the API to ITrainerEstimator as it has not been checked-in yet but it is only temporary and I will remove it before checking this in change into master branch. Code gen changes will come in a different PR.","Url":"https://github.com/dotnet/machinelearning/pull/4384","RelatedDescription":"Closed or merged PR \"Integrate Image Classification API in AutoML\" (#4384)"},{"Id":"512919669","IsPullRequest":true,"CreatedAt":"2019-10-27T04:46:40","Actor":"codemzs","Number":"4395","RawContent":null,"Title":"Integrate Image Classification API in AutoML.","State":"open","Body":"- Integrates Image Classification API in AutoML\r\n- Code generation for Image Classification API.\r\n- Unit-tests\r\n\r\naddress comments from #4384 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4395","RelatedDescription":"Open PR \"Integrate Image Classification API in AutoML.\" (#4395)"},{"Id":"512908324","IsPullRequest":false,"CreatedAt":"2019-10-27T01:56:39","Actor":"aslotte","Number":"4394","RawContent":null,"Title":"ProviderFactory is null when using DatabaseLoader in Jupyter","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10 \r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0\r\n\r\nNuGet\r\n- ML.NET preview2\r\n- Microsoft.ML. Experimental 0.0.16-preview\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI attempted to load data from a SQL Server DB using the DatabaseLoader from a Jupyter Notebook.\r\nI was first using System.Data.SqlClient as the ProviderFactory, but I got multiple re-direct issues in Jupyter. I moved to Microsoft.Data.SqlClient, which is supposed to work better with .NET Core and continued passed that issue. However, I instead run in to an issue where it says the provider factory is null. \r\n\r\nJust to make sure, I tested this in Visual Studio 2019. It works just fine there, this seems to be an issue with the Jupyter env.\r\n\r\n![image](https://user-images.githubusercontent.com/30201569/67628425-60a9a400-f83b-11e9-9a1e-93f45247c71e.png)\r\n\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4394","RelatedDescription":"Open issue \"ProviderFactory is null when using DatabaseLoader in Jupyter\" (#4394)"},{"Id":"512785698","IsPullRequest":true,"CreatedAt":"2019-10-26T03:51:12","Actor":"NeoXtreem","Number":"4393","RawContent":null,"Title":"Fixes #4392 Add AddPredictionEnginePool overload for implementation factory","State":"open","Body":"This is an additional overload for `AddPredictionEnginePool` to allow middleware dependencies to be used in a custom `ModelLoader`.  This will allow the following code to be used in `Startup` in a similar manner to the corresponding overloads on `AddSingleton`, `AddScoped` and `AddTransient`:\r\n\r\n```\r\nservices.AddPredictionEnginePool<Foo, Bar>(serviceProvider =>\r\n{\r\n    services.AddOptions<PredictionEnginePoolOptions<Foo, Bar>>().Configure(options =>\r\n    {\r\n        options.ModelLoader = new MyModelLoader(serviceProvider.GetService<IMyService>());\r\n    });\r\n    return new PredictionEnginePool<Foo, Bar>();\r\n});\r\n```\r\n\r\nThis fixes issue #4392, and is related to a [answer to a question](https://stackoverflow.com/a/57698799/197591) on Stack Overflow given by @eerhardt.","Url":"https://github.com/dotnet/machinelearning/pull/4393","RelatedDescription":"Open PR \"Fixes #4392 Add AddPredictionEnginePool overload for implementation factory\" (#4393)"},{"Id":"512785252","IsPullRequest":false,"CreatedAt":"2019-10-26T03:45:11","Actor":"NeoXtreem","Number":"4392","RawContent":null,"Title":"Cannot use middleware dependencies when using custom ModelLoader on AddPredictionEnginePool","State":"open","Body":"If a custom `ModelLoader` is used for the `PredictionEnginePool` that has a dependency on a configured service, there is no possibility to add this dependency via `AddPredictionEnginePool` as it does not offer an overload that accepts an implementation factory, unlike `AddSingleton`, `AddScoped` and `AddTransient`.\r\n\r\nThis is how it should be expected to happen in `Startup`:\r\n\r\n```\r\nservices.AddPredictionEnginePool<Foo, Bar>(serviceProvider =>\r\n{\r\n    services.AddOptions<PredictionEnginePoolOptions<Foo, Bar>>().Configure(options =>\r\n    {\r\n        options.ModelLoader = new MyModelLoader(serviceProvider.GetService<IMyService>());\r\n    });\r\n    return new PredictionEnginePool<Foo, Bar>();\r\n});\r\n```\r\n\r\nSince this is not possible with the current code, the creation of a model via middleware is therefore very difficult.  The only option is to use `ServiceProvider.BuildServiceProvider` which causes a warning as it results in an additional copy of singleton services being created:\r\n\r\n```\r\nservices.AddPredictionEnginePool<Foo, Bar>()\r\nservices.AddOptions<PredictionEnginePoolOptions<Foo, Bar>>().Configure(options =>\r\n{\r\n    var serviceProvider = services.BuildServiceProvider();\r\n    options.ModelLoader = new MyModelLoader(serviceProvider.GetService<IMyService>());\r\n});\r\n```\r\n\r\nA new `AddPredictionEnginePool` overload should be added that accepts an implementation factory delegate to allow middleware services to be accessed via the `IServiceProvider`.","Url":"https://github.com/dotnet/machinelearning/issues/4392","RelatedDescription":"Open issue \"Cannot use middleware dependencies when using custom ModelLoader on AddPredictionEnginePool\" (#4392)"},{"Id":"512661104","IsPullRequest":true,"CreatedAt":"2019-10-26T01:19:31","Actor":"eerhardt","Number":"4388","RawContent":null,"Title":"Add caching to the DatabaseLoaderTests.","State":"closed","Body":"The IrisSdcaMaximumEntropy were taking over 1 minute in CI. This change drops it to around 3 seconds.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4388","RelatedDescription":"Closed or merged PR \"Add caching to the DatabaseLoaderTests.\" (#4388)"},{"Id":"512729290","IsPullRequest":true,"CreatedAt":"2019-10-26T00:30:52","Actor":"harshithapv","Number":"4390","RawContent":null,"Title":"Changed LoadImages method that returns raw images bytes to LoadRawImageBytes","State":"closed","Body":"Changed LoadImages method that returns raw images bytes to LoadRawImageBytes.\r\nThis addresses issue #4313","Url":"https://github.com/dotnet/machinelearning/pull/4390","RelatedDescription":"Closed or merged PR \"Changed LoadImages method that returns raw images bytes to LoadRawImageBytes\" (#4390)"},{"Id":"512756423","IsPullRequest":true,"CreatedAt":"2019-10-25T23:21:45","Actor":"maryamariyan","Number":"4391","RawContent":null,"Title":"Adding CodeGen piece for MatrixFactorization trainer","State":"open","Body":"This PR adds CodeGen piece for MatrixFactorization trainer (For the recommendation task)\r\n\r\ncc: @eerhardt @LittleLittleCloud \r\n\r\nTODO:\r\n- [x] Add MatrixFactorization trainer generator\r\n- [x] Add tests for the trainer generator\r\n- [ ] Review other CodeGen tests to find more use cases that can be tested","Url":"https://github.com/dotnet/machinelearning/pull/4391","RelatedDescription":"Open PR \"Adding CodeGen piece for MatrixFactorization trainer\" (#4391)"},{"Id":"510999572","IsPullRequest":true,"CreatedAt":"2019-10-25T21:58:31","Actor":"eerhardt","Number":"4368","RawContent":null,"Title":"Fix warnings/errors while buliding NuGet packages.","State":"closed","Body":"- A new warning that PackageIconUrl is deprecated, and use PackageIcon instead.\r\n- Mkl.Redist has `build/netstandard2.0` assets, but no `lib` or `ref` assets, so this caused a warning. The fix is to put a placeholder file in the `lib/netstandard2.0` folder.\r\n- Microsoft.ML.symbols had a warning that it contains a `build` targets file, but not for the current package name. This was suppressed because we only use the symbols packages for publishing symbols.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4368","RelatedDescription":"Closed or merged PR \"Fix warnings/errors while buliding NuGet packages.\" (#4368)"},{"Id":"511841482","IsPullRequest":true,"CreatedAt":"2019-10-25T21:56:34","Actor":"codemzs","Number":"4372","RawContent":null,"Title":"Make ImageClassification API an ITrainerEstimator and refactor code.","State":"closed","Body":"In addition to converting ImageClassification API to ITrainerEstimator it also fixes #4276\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4372","RelatedDescription":"Closed or merged PR \"Make ImageClassification API an ITrainerEstimator and refactor code.\" (#4372)"},{"Id":"512692430","IsPullRequest":false,"CreatedAt":"2019-10-25T19:55:14","Actor":"codemzs","Number":"4389","RawContent":null,"Title":"Unit-test for older model versions that use multiclass scorer","State":"open","Body":"https://github.com/dotnet/machinelearning/pull/4372#discussion_r339196504","Url":"https://github.com/dotnet/machinelearning/issues/4389","RelatedDescription":"Open issue \"Unit-test for older model versions that use multiclass scorer\" (#4389)"},{"Id":"512658934","IsPullRequest":false,"CreatedAt":"2019-10-25T18:35:18","Actor":"maryamariyan","Number":"4387","RawContent":null,"Title":"Incorrect header comments in CodeGen template files","State":"open","Body":"The auto generated files under `src/Microsoft.ML.CodeGenerator/Templates/` directory are creating incorrect header comments and need to be modified.\r\n\r\nRefer to:\r\nhttps://github.com/dotnet/machinelearning/pull/4365#discussion_r338733805\r\n\r\ncc: @JakeRadMSFT @LittleLittleCloud @rustd @eerhardt @sharwell ","Url":"https://github.com/dotnet/machinelearning/issues/4387","RelatedDescription":"Open issue \"Incorrect header comments in CodeGen template files\" (#4387)"},{"Id":"512185835","IsPullRequest":true,"CreatedAt":"2019-10-25T18:04:02","Actor":"codemzs","Number":"4377","RawContent":null,"Title":"Delete build files before packaging and increase build timeout","State":"closed","Body":"This reverts commit c922529e669d1c4dcb4d2bf8157a579b10a60cee and deletes build files before packaging to get rid of out of memory error. It also increases the build timeout to 60 minutes.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4377","RelatedDescription":"Closed or merged PR \"Delete build files before packaging and increase build timeout\" (#4377)"},{"Id":"512599912","IsPullRequest":false,"CreatedAt":"2019-10-25T16:09:51","Actor":"grahamehorner","Number":"4386","RawContent":null,"Title":"[Feature Request] ImageTypeAttribute","State":"open","Body":"Please consider exposing the int height, int width as getter properties; this will allow developers to use reflection to detect the image height, width from the supplied input model as apposed to having to supply configuration values that may not match via a separate model object class ","Url":"https://github.com/dotnet/machinelearning/issues/4386","RelatedDescription":"Open issue \"[Feature Request] ImageTypeAttribute\" (#4386)"},{"Id":"512481166","IsPullRequest":false,"CreatedAt":"2019-10-25T12:11:31","Actor":"antoniovs1029","Number":"4385","RawContent":null,"Title":"Create methods not being called when loading models from disk","State":"open","Body":"There are some classes that define a Create method which is supposed to be called when loading a model from disk, but the problem is that the method is not being called at all.\r\n\r\nFor example, I've noticed this unexpected behavior in the following classes:\r\n1. [LinearBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.StandardTrainers/Standard/LinearModelParameters.cs#L473)\r\n2. [GamBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/GamClassification.cs#L233)\r\n3. [FastTreeBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/FastTreeClassification.cs#L87)\r\n4. [FastForestBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/RandomForestClassification.cs#L102)\r\n5. [PlattCalibrator](https://github.com/dotnet/machinelearning/blob/c922529e669d1c4dcb4d2bf8157a579b10a60cee/src/Microsoft.ML.Data/Prediction/Calibrator.cs#L1569)\r\n\r\nwhen loading a model that uses any of these classes, their Create method is expected to be called, but, as stated, the method is not being called.\r\n\r\nI also noticed this behavior in 3 other classes of the [Calibrator.cs](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/Prediction/Calibrator.cs#L1569) file (namely, the `ParameterMixingCalibratedModelParameters`, `ValueMapperCalibratedModelParameters`, and `FeatureWeightsCalibratedModelParameters` classes), but I've fixed this problem for those specific classes in my recent PR #4306 (which, as of the moment of writing this, is still waiting to get approved). It was while working on that PR that I noticed this problem on these classes, and I commented about it [there](https://github.com/dotnet/machinelearning/pull/4306#discussion_r336139379)... but it is appropriate to open this separate issue to better document this, since it is a problem that affects different classes across different files.\r\n\r\nIn fact, as I will describe below, there's a certain code pattern that is related to this problem, and I've seen this pattern in other classes of the Calibrator.cs file as well. So, the problem I describe here might be affecting even more classes than the ones I've mentioned.\r\n\r\n### Cause of the problem\r\nThe [CreateInstanceCore](https://github.com/dotnet/machinelearning/blob/7c067854b564275b0d6387ca59c0ec83e8fc91b9/src/Microsoft.ML.Core/ComponentModel/ComponentCatalog.cs#L186) method in the `ComponentCatalog.cs` file is responsible to try to call the `Create` method of any class when loading a model from disk.\r\n\r\nThe current implementation of the method actually checks first if the class has a constructor with parameters `(IHostEnvironment env, ModelLoadContext ctx)` and invokes that constructor through reflection. If the class doesn't have such a constructor, then it checks if it has a `Create((IHostEnvironment env, ModelLoadContext ctx)` method, and it gets invoked through reflection.\r\n\r\nThis behavior is not desired for the classes I've mentioned (and potentially other classes), since they define both a constructor and a Create method with those parameters, but in these cases it's actually expected that the Create method gets called instead of the constructor. Thus, if a class follows the pattern of having a private or internal constructor (with the `(env, ctx)` parameters) and also has a Create method, then this problem might also be affecting that class.\r\n\r\nSince the Create method typically only runs some security checks before calling the constructor, it turns out that the overall process of loading models doesn't seem affected by this issue. But the problem remains that these security checks are being missed along with whatever behavior the Create method adds to the process.\r\n\r\nAs explained by @yaeldekel in [her comment](https://github.com/dotnet/machinelearning/pull/4306#discussion_r337981820) on my recent PR #4306 (under \"Answer 1\"), this problem might had been introduced before the official release of ML.net, when the `ComponentCatalog` method was modified in a way that permitted the `CreateInstanceCore` method to use private and internal constructors, which didn't use to happen... so before those changes were made, classes could have private or internal constructors and a Create method, and the latter would appropriately be called. But now the constructor gets called, and this is the case of all the classes mentioned in this issue.\r\n\r\nSince these changes were made while trying to internalize as many APIs as possible before the ML.net official release, many constructors where also made private or internal, and thus the changes in ComponentCatalog that permit using those constructors are also necessary.\r\n\r\nBecause of these, further investigation is needed to know for sure which classes are being affected by this problem, so to better find a way to fix this problem without affecting all of the other classes that doesn't present this situation.","Url":"https://github.com/dotnet/machinelearning/issues/4385","RelatedDescription":"Open issue \"Create methods not being called when loading models from disk\" (#4385)"},{"Id":"512245563","IsPullRequest":false,"CreatedAt":"2019-10-25T00:42:04","Actor":"volitantns","Number":"4383","RawContent":null,"Title":"CreatePredictionEngine does not work after retrain the modal without column Transforms","State":"open","Body":"### System information\r\n\r\n- Win7\r\n- DotNet Core 2.1\r\n\r\n### Issue\r\n\r\n- after first training ,   \r\ntransf = mlc.Transforms.Text.FeaturizeText(\"Features\", \"TextData\")\r\n   .Append(mlc.BinaryClassification.Trainers.LbfgsLogisticRegression()).Fit(data);  \r\nI saved the LinearBinaryModelParameters , and retrain the modal as :  \r\ntransf = mlc.BinaryClassification.Trainers.LbfgsLogisticRegression().Fit(newdata, lbmparameters);  \r\nand call  \r\npe = mlc.Model.CreatePredictionEngine<ViewItem, ViewPred>(transf);\r\n\r\n- for the first time of the training , PredictionEngine works . after retrain , PredictionEngine do not works and throws  \r\nSystem.ArgumentOutOfRangeException: Features column 'Feature' not found\r\n\r\n- I expect the CreatePredictionEngine can pass the mlc.Transforms.Text.FeaturizeText(\"Features\", \"TextData\")  so the TextData can be generated as Features  \r\nOr mlc.Transforms.Text.FeaturizeText(\"Features\", \"TextData\")\r\n   .Append(mlc.BinaryClassification.Trainers.LbfgsLogisticRegression()).Fit   \r\nThe Fit function can pass LinearBinaryModelParameters \r\n\r\n\r\n\r\n### Source code / logs\r\n\r\n`\r\nusing System;\r\nusing System.Linq;\r\nusing System.IO;\r\nusing Microsoft.ML;\r\nusing System.Collections.Generic;\r\n\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Trainers;\r\n\r\nclass Program\r\n{\r\n\tstatic bool STUDY_CONTINUE_MODE = true;\r\n\r\n\tconst int MEM_SIZE = 9;\r\n\r\n\tstatic Random rand = new Random();\r\n\r\n\tstatic int total_study = 0;\r\n\r\n\tstatic List<ViewItem> happymem = new List<ViewItem>();\r\n\tstatic List<ViewItem> dangermem = new List<ViewItem>();\r\n\tstatic int GetTotalMemCount()\r\n\t{\r\n\t\treturn happymem.Count + dangermem.Count;\r\n\t}\r\n\r\n\tstatic string feeling = new string('0', MEM_SIZE);\r\n\r\n\tstatic MLContext mlc = new MLContext();\r\n\r\n\tstatic long totalticks = 0;\r\n\r\n\tstatic long totalright = 0;\r\n\tstatic long totalwrong = 0;\r\n\r\n\tstatic void Main()\r\n\t{\r\n\r\n\t\twhile (true)\r\n\t\t{\r\n\t\t\tRunTick();\r\n\t\t\ttotalticks++;\r\n\t\t\tif (totalticks % 10000 == 0 && transf != null && totalright + totalwrong > 2)\r\n\t\t\t{\r\n\t\t\t\tConsole.Title = totalticks + \" - \"\r\n\t\t\t\t\t+ \" \" + 100 * safe_mem / totalmem + \"%\"\r\n\t\t\t\t\t+ \" CV=\" + 100 * totalright / (totalright + totalwrong) + \"%\"\r\n\t\t\t\t\t+ \" \" + totalright + \"/\" + totalwrong\r\n\t\t\t\t\t+ \" PV=\" + 100 * predright / Math.Max(1, predtimes) + \"%\"\r\n\t\t\t\t\t+ \" \" + predright + \"/\" + (predtimes - predright)\r\n\t\t\t\t\t+ \" HQ=\" + Hao_Qi.ToString(\"00000\")\r\n\r\n\t\t\t\t\t+ \" ML=\" + total_study + \" \" + (100 * dangermem.Count / GetTotalMemCount()) + \"%\" + \" \" + dangermem.Count + \"/\" + GetTotalMemCount()\r\n\t\t\t\t\t  ;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic ITransformer transf;\r\n\tstatic ITransformer firsttransf;\r\n\tstatic LinearBinaryModelParameters lbmparameters = null;\r\n\t\r\n\tstatic void StudyOnce(ViewItem[] items)\r\n\t{\r\n\t\tvar data = mlc.Data.LoadFromEnumerable(items);\r\n\r\n\t\tif (lbmparameters == null)\r\n\t\t{\r\n\t\t\tif (!STUDY_CONTINUE_MODE)\r\n\t\t\t\tmlc = new MLContext();\r\n\t\t\t\r\n\t\t\tvar mytransf = mlc.Transforms.Text.FeaturizeText(\"Features\", \"TextData\")\r\n\t\t\t   .Append(mlc.BinaryClassification.Trainers.LbfgsLogisticRegression()).Fit(data);\r\n\r\n\t\t\tif (STUDY_CONTINUE_MODE)\r\n\t\t\t\tlbmparameters = mytransf.LastTransformer.Model.SubModel;\r\n\r\n\t\t\tfirsttransf = mytransf;\r\n\t\t\ttransf = mytransf;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//TODO:可以重新训练模型,但是在使用上存在问题.\r\n\t\t\t//因为使用了.Fit(newdata, lbmparameters)生成的Transformer不具备 mlc.Transforms.Text.FeaturizeText(\"Features\", \"TextData\") 这个步骤.\r\n\t\t\t//这会导致 CreatePredictionEngine(transf) 生成的函数无法把ViewItem.TextData转换为Features \r\n\r\n\t\t\tvar newdata = firsttransf.Transform(data);\r\n\r\n\t\t\tvar mytransf = mlc.BinaryClassification.Trainers.LbfgsLogisticRegression().Fit(newdata, lbmparameters);\r\n\r\n\t\t\tif (STUDY_CONTINUE_MODE)\r\n\t\t\t\tlbmparameters = mytransf.Model.SubModel;\r\n\r\n\t\t\ttransf = mytransf;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tstatic void StudyOnce()\r\n\t{\r\n\t\tViewItem[] items = new ViewItem[GetTotalMemCount()];\r\n\t\thappymem.CopyTo(items, 0);\r\n\t\tdangermem.CopyTo(items, happymem.Count);\r\n\t\tStudyOnce(items);\r\n\t}\r\n\r\n\tclass ViewItem\r\n\t{\r\n\t\tpublic string TextData;\r\n\r\n\t\t[ColumnName(\"Label\")]\r\n\t\tpublic bool IsDanger;\r\n\t}\r\n\tclass ViewPred\r\n\t{\r\n\t\tpublic bool PredictedLabel;\r\n\r\n\t\t[ColumnName(\"Score\")]\r\n\t\tpublic float ScoreValue;\r\n\r\n\t\tpublic float Probability;\r\n\t}\r\n\r\n\tstatic int Hao_Qi = 100;\r\n\r\n\tstatic long totalmem = 0;\r\n\tstatic long safe_mem = 0;\r\n\r\n\tstatic bool feeling_isdanger;\r\n\r\n\tstatic void RunTick()\r\n\t{\r\n\t\ttotalmem++;\r\n\r\n\t\tfeeling = feeling.Remove(0, 1) + rand.Next(0, 10);\r\n\r\n\t\tfeeling_isdanger = feeling.Contains(\"9\");\r\n\r\n\t\tif (!feeling_isdanger)\r\n\t\t\tsafe_mem++;\r\n\t\t\r\n\t\tHao_Qi += 10;\r\n\r\n\t\tif (Hao_Qi > 100)\r\n\t\t{\r\n\t\t\tfloat danger = GetDangerLevel();\r\n\t\t\tif (Hao_Qi > 20000 * danger)\r\n\t\t\t{\r\n\t\t\t\tDoClick();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic long predtimes = 0;\r\n\tstatic long predright = 0;\r\n\r\n\tstatic PredictionEngine<ViewItem, ViewPred> pe;\r\n\tstatic ITransformer petransf;\r\n\r\n\tstatic float GetDangerLevel()\r\n\t{\r\n\t\tif (transf == null)\r\n\t\t\treturn 0;\r\n\r\n\t\tif (pe == null || petransf != transf)\r\n\t\t{\r\n\t\t\tif (pe != null)\r\n\t\t\t\tpe.Dispose();//prevent memory leak ???\r\n\t\t\tpe = mlc.Model.CreatePredictionEngine<ViewItem, ViewPred>(transf);\r\n\t\t\tpetransf = transf;\r\n\t\t}\r\n\r\n\t\tViewPred pred = pe.Predict(new ViewItem() { TextData = feeling });\r\n\r\n\t\tbool isdanger = pred.PredictedLabel;\r\n\r\n\t\tpredtimes++;\r\n\t\tif (isdanger == feeling_isdanger)\r\n\t\t{\r\n\t\t\tpredright++;\r\n\t\t}\r\n\r\n\t\treturn pred.Probability;\r\n\t}\r\n\r\n\tstatic void DoClick()\r\n\t{\r\n\t\tif (!feeling_isdanger)\r\n\t\t{\r\n\t\t\tHao_Qi -= 40;\r\n\t\t\ttotalright++;\r\n\r\n\t\t\thappymem.Add(new ViewItem { TextData = feeling, IsDanger = feeling_isdanger });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tHao_Qi -= 90;\r\n\t\t\ttotalwrong++;\r\n\r\n\t\t\tdangermem.Add(new ViewItem { TextData = feeling, IsDanger = feeling_isdanger });\r\n\t\t}\r\n\r\n\t\tif (happymem.Count > maxcount || dangermem.Count > maxcount)\r\n\t\t{\r\n\t\t\ttotal_study++;\r\n\t\t\tStudyOnce();\r\n\r\n\t\t\tif (happymem.Count > maxcount)\r\n\t\t\t\thappymem.RemoveRange(0, happymem.Count / 10);\r\n\t\t\tif (dangermem.Count > maxcount)\r\n\t\t\t\tdangermem.RemoveRange(0, dangermem.Count / 10);\r\n\t\t\tif (maxcount < 20000) maxcount = (int)(maxcount * 1.2);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic int maxcount = 999;\r\n\r\n}\r\n`","Url":"https://github.com/dotnet/machinelearning/issues/4383","RelatedDescription":"Open issue \"CreatePredictionEngine does not work after retrain the modal without column Transforms\" (#4383)"},{"Id":"512237053","IsPullRequest":true,"CreatedAt":"2019-10-25T00:05:33","Actor":"harishsk","Number":"4382","RawContent":null,"Title":"Upgraded ProtoBuf and Onnx runtime versions","State":"open","Body":"This commit upgrades Google Protobuf version to 3.9.2 and upgrades ORT to an internal dev version in preparation for the next release.\r\n\r\nThis version is not yet ready for merging to main. When the next version of the Onnx runtime is released the following changes need to be made to the PR before it can be merged. \r\n* Revert the change to Directory.Build.props\r\n* Change the version of ORT to the released version\r\n* Revert the change related to GPU support in OnnxUtils.cs after verifying its support in the released version\r\n\r\nUntil then, please review the remaining changes. ","Url":"https://github.com/dotnet/machinelearning/pull/4382","RelatedDescription":"Open PR \"Upgraded ProtoBuf and Onnx runtime versions\" (#4382)"},{"Id":"512225213","IsPullRequest":false,"CreatedAt":"2019-10-24T23:16:43","Actor":"antoniovs1029","Number":"4381","RawContent":null,"Title":"Incorrect code in BinaryModelParameters classes","State":"open","Body":"There is a problem with the code inside the Create method of the following classes:\r\n1. [LinearBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.StandardTrainers/Standard/LinearModelParameters.cs#L473)\r\n2. [GamBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/GamClassification.cs#L233)\r\n3. [FastTreeBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/FastTreeClassification.cs#L87)\r\n4. [FastForestBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/RandomForestClassification.cs#L102)\r\n\r\nThe problem is that in those 4 cases, each Create method has a return statement that returns a `SchemaBindableCalibratedModelParameters<,>` object. Notice that these Create methods are supposed to load from disk, in each case, a BinaryModelParameters object of the appropriate type. So this doesn't make sense, since the SBCMP class is not supposed to be used as a BinaryModelParameter, and thus, **these classes shouldn't be loaded as SBCMP objects**.\r\n\r\nI pointed at this problem inside [this comment](https://github.com/dotnet/machinelearning/pull/4306#discussion_r336265838) (under question number 2) while working on my PR #4306 . There, @yaeldekel [responded](https://github.com/dotnet/machinelearning/pull/4306#discussion_r337981820) that these pieces of code seem 'very wrong' to her, and that they might be the result of some legacy code that is no longer valid. Specifically she mentioned that in the past Calibrators where a field of predictors, and predictors were responsible of loading them at deserialization time. This is no longer the case, and her guess is that the code that I've pointed to is no longer valid.\r\n\r\nEven more, she believes that the `return new SBCMP` statements I've mentioned are actually unreachable now, since they all appear in branches that only execute when there is _no calibrator_ to load inside the BinaryModelParameters (e.g. [this](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/RandomForestClassification.cs#L110) 'if statement'). Since predictors are no longer in charge of loading calibrators, then those paths are unreachable, and then the Create methods I've mentioned, always return the predictor of the appropriate type anyway, without getting into creating `SBCMP` objects.\r\n\r\nIn the case of the `LinearBinaryModelParameters` Create method, a ParameterMixingCalibratedModelParameters<,> object could [also be returned](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.StandardTrainers/Standard/LinearModelParameters.cs#L484), but this also seems invalid and unreachable for the same reasons already described for SBCMP.\r\n\r\nPerhaps further investigation is needed to clarify all of this, and **if those pieces of code are truly unreachable and no longer valid, then it might be better to remove them**.","Url":"https://github.com/dotnet/machinelearning/issues/4381","RelatedDescription":"Open issue \"Incorrect code in BinaryModelParameters classes\" (#4381)"},{"Id":"512214160","IsPullRequest":true,"CreatedAt":"2019-10-24T22:36:41","Actor":"ashbhandare","Number":"4380","RawContent":null,"Title":"Image Classification Sample cleanup","State":"open","Body":"Make samples more readable and add comments.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4380","RelatedDescription":"Open PR \"Image Classification Sample cleanup\" (#4380)"},{"Id":"512204677","IsPullRequest":true,"CreatedAt":"2019-10-24T22:07:07","Actor":"harishsk","Number":"4379","RawContent":null,"Title":"Add Onnx export support for string processing transformers","State":"open","Body":"This checkin includes support for WordTokenizingTransformer and NGramExtractingTransformer and also fixes for ValueToKeyMappingTransformer.\r\n\r\nThe fixes are dependent on upgrades to the Onnx runtime and Google Protobuf packages.  This is not ready to be merged until there is a newer public release of the ORT.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4379","RelatedDescription":"Open PR \"Add Onnx export support for string processing transformers\" (#4379)"},{"Id":"512196996","IsPullRequest":false,"CreatedAt":"2019-10-24T21:45:18","Actor":"PeterPann23","Number":"4378","RawContent":null,"Title":"how to parse the ML.Net log file","State":"open","Body":"What is the logic behind the debug_log.txt, if one would like to parse it, how would one go at it. \r\nit's not documented as far as I can tell, I can find things  in it but I would like to load it using C# into a structured format.\r\n\r\nI have not seem to have found a clever way to do this. can some one point me at the right direction?","Url":"https://github.com/dotnet/machinelearning/issues/4378","RelatedDescription":"Open issue \"how to parse the ML.Net log file\" (#4378)"},{"Id":"512009306","IsPullRequest":true,"CreatedAt":"2019-10-24T19:25:38","Actor":"Oceania2018","Number":"4374","RawContent":null,"Title":"Add SampleBase abstract class. ","State":"closed","Body":"1. Add SampleBase abstract class.\r\n2. Make GetAbsolutePath() return be true absolute path.\r\n![image](https://user-images.githubusercontent.com/1705364/67499246-5ffbec80-f646-11e9-9614-05fba03c5d56.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1705364/67499225-58d4de80-f646-11e9-886f-93a585038b34.png)\r\n\r\nPlease let me know if you want other Samples to inherit from `SampleBase`.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4374","RelatedDescription":"Closed or merged PR \"Add SampleBase abstract class. \" (#4374)"},{"Id":"512054834","IsPullRequest":true,"CreatedAt":"2019-10-24T18:36:29","Actor":"codemzs","Number":"4375","RawContent":null,"Title":"Move windows build machines to NetCorePublic-Pool.","State":"closed","Body":"Builds seem to be failing because it runs out of disk space.","Url":"https://github.com/dotnet/machinelearning/pull/4375","RelatedDescription":"Closed or merged PR \"Move windows build machines to NetCorePublic-Pool.\" (#4375)"},{"Id":"511911889","IsPullRequest":false,"CreatedAt":"2019-10-24T12:28:58","Actor":"jt4000","Number":"4373","RawContent":null,"Title":"How to use String as a Predicted Column","State":"open","Body":"Goal:\r\nMake a prediction on PaymentType. The target name or predicted column is a string value.\r\n\r\nProblem:\r\nI retrieve a error message that is \"ArgumentOutOfRangeException: Training label column 'Label' type isn't suitable for regression: Text. Type must be R4 or R8. Parameter name: data\"\r\n\r\nWhar part from the source code am I missing?\r\n\r\nThank you!\r\n\r\nData:\r\nhttps://github.com/dotnet/machinelearning/blob/master/test/data/taxi-fare-train.csv\r\nhttps://github.com/dotnet/machinelearning/blob/master/test/data/taxi-fare-test.csv\r\n\r\nInfo:  \r\n*Win 10\r\n*Using .net Core 2.0 framework\r\n\r\nCode:\r\n\r\n```\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Models;\r\nusing Microsoft.ML.Trainers;\r\nusing Microsoft.ML.Transforms;\r\nusing System;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace TaxiFarePrediction\r\n{\r\n    class Program\r\n    {\r\n        const string _datapath = @\".\\Data\\taxi-fare-train.csv\";\r\n        const string _testdatapath = @\".\\Data\\taxi-fare-test.csv\";\r\n        const string _modelpath = @\".\\Data\\Model.zip\";\r\n\r\n        static async Task Main(string[] args)\r\n        {\r\n            PredictionModel<TaxiTrip, TaxiTripFarePrediction> model = await Train();\r\n            Evaluate(model);\r\n\r\n            var prediction = model.Predict(TestTrips.Trip1);\r\n            Console.WriteLine(\"Predicted fare: {0}\", prediction.PaymentType);\r\n\r\n            Console.ReadLine();\r\n        }\r\n\r\n        static async Task<PredictionModel<TaxiTrip, TaxiTripFarePrediction>> Train()\r\n        {\r\n            // Create learning pipeline\r\n            var pipeline = new LearningPipeline\r\n            {\r\n                // Load and transform data\r\n                new TextLoader(_datapath).CreateFrom<TaxiTrip>(separator: ','),\r\n\r\n                 // Labeling\r\n                new ColumnCopier((\"PaymentType\", \"Label\")),\r\n\r\n                // Feature engineering\r\n                new CategoricalOneHotVectorizer(\"VendorId\",\r\n                    \"RateCode\",\r\n                    \"PaymentType\"),\r\n\r\n                 // Combine features in a single vector\r\n                new ColumnConcatenator(\"Features\",\r\n                    \"VendorId\",\r\n                    \"RateCode\",\r\n                    \"PassengerCount\",\r\n                    \"TripDistance\",\r\n                    \"FareAmount\"),\r\n\r\n                // Add learning algorithm\r\n                new FastTreeRegressor()\r\n            };\r\n\r\n            // Train the model\r\n            PredictionModel<TaxiTrip, TaxiTripFarePrediction> model = pipeline.Train<TaxiTrip, TaxiTripFarePrediction>();\r\n\r\n            // Save the model to a zip file\r\n            await model.WriteAsync(_modelpath);\r\n\r\n            return model;\r\n        }\r\n\r\n        private static void Evaluate(PredictionModel<TaxiTrip, TaxiTripFarePrediction> model)\r\n        {\r\n            // Load test data\r\n            var testData = new TextLoader(_datapath).CreateFrom<TaxiTrip>(useHeader: true, separator: ',');\r\n\r\n            // Evaluate test data\r\n            var evaluator = new RegressionEvaluator();\r\n            RegressionMetrics metrics = evaluator.Evaluate(model, testData);\r\n\r\n            // Display regression evaluation metrics\r\n            Console.WriteLine(\"Rms=\" + metrics.Rms);\r\n            Console.WriteLine(\"RSquared = \" + metrics.RSquared);\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n---------------------------------------------------------------------\r\n\r\n```\r\nnamespace TaxiFarePrediction\r\n{\r\n    static class TestTrips\r\n    {\r\n        internal static readonly TaxiTrip Trip1 = new TaxiTrip\r\n        {\r\n            VendorId = \"VTS\",\r\n            RateCode = \"1\",\r\n            PassengerCount = 1,\r\n            TripDistance = 10.33f,\r\n            PaymentType = \"\", \r\n            FareAmount = 7,\r\n            //FareAmount = 0 // predict it. actual = 29.5\r\n        };\r\n    }\r\n}\r\n```\r\n\r\n---------------------------------------------------------------------\r\n```\r\n\r\nusing Microsoft.ML.Runtime.Api;\r\n\r\nnamespace TaxiFarePrediction\r\n{\r\n    public class TaxiTrip\r\n    {\r\n        [Column(\"0\")]\r\n        public string VendorId;\r\n\r\n        [Column(\"1\")]\r\n        public string RateCode;\r\n\r\n        [Column(\"2\")]\r\n        public float PassengerCount;\r\n\r\n        [Column(\"3\")]\r\n        public float TripTime;\r\n\r\n        [Column(\"4\")]\r\n        public float TripDistance;\r\n\r\n        [Column(\"5\")]\r\n        public string PaymentType;\r\n\r\n        [Column(\"6\")]\r\n        public float FareAmount;\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\n-------------------------------------------------\r\n\r\n```\r\nusing Microsoft.ML.Runtime.Api;\r\n\r\nnamespace TaxiFarePrediction\r\n{\r\n    public class TaxiTripFarePrediction\r\n    {\r\n\r\n        /*\r\n        [ColumnName(\"Score\")]\r\n        public float FareAmount;\r\n\r\n        */\r\n        [ColumnName(\"Score\")]\r\n        public string PaymentType;\r\n    }\r\n}\r\n\r\n```\r\n\r\n-------------------------------------\r\n\r\n\r\n![ml1](https://user-images.githubusercontent.com/14993569/67485473-613f1080-f66a-11e9-8c8a-c85b8355585c.png)\r\n![ml2](https://user-images.githubusercontent.com/14993569/67485474-613f1080-f66a-11e9-8442-05e08c37407f.png)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4373","RelatedDescription":"Open issue \"How to use String as a Predicted Column\" (#4373)"},{"Id":"512143218","IsPullRequest":false,"CreatedAt":"2019-10-24T07:24:59","Actor":"olejorgensen","Number":"4376","RawContent":null,"Title":"mlnet command not found","State":"open","Body":"Problem encountered on https://dotnet.microsoft.com/learn/ml-dotnet/get-started-tutorial/train\r\nOperating System: macos Catalina 10.15.1 Beta (19B77a)\r\ndotnet version: 3.0.100\r\n\r\n```\r\ndev@iMac myMLApp % mlnet auto-train --task binary-classification --dataset \"wikipedia-detox-250-line-data.tsv\" --label-column-name \"Sentiment\" --max-exploration-time 10\r\nzsh: command not found: mlnet\r\ndev@iMac myMLApp % dotnet tool install -g mlnet         \r\nTool 'mlnet' is already installed.\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4376","RelatedDescription":"Open issue \"mlnet command not found\" (#4376)"},{"Id":"511625619","IsPullRequest":true,"CreatedAt":"2019-10-23T23:37:33","Actor":"Lynx1820","Number":"4371","RawContent":null,"Title":"Fixes onnx exports for binary classification trainers ","State":"open","Body":"This draft PR fixes the issues with exporting the following binary classification trainers to onnx: \r\n- FastTree()\r\n- LbfgsLogisticRegression()\r\n- LightGbm()\r\n- SdcaLogisticRegression()\r\n- SgdCalibrated()\r\n- SymbolicSgdLogisticRegression()\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4371","RelatedDescription":"Open PR \"Fixes onnx exports for binary classification trainers \" (#4371)"},{"Id":"511459518","IsPullRequest":true,"CreatedAt":"2019-10-23T17:10:44","Actor":"bpstark","Number":"4370","RawContent":null,"Title":"Created Polynomial Learning Rate scheduler","State":"open","Body":"Created the polynomial learning rate scheduler based upon Tensorflow's\r\nimplementation of polynomial lr scheduler. which can be found\r\nhttps://www.tensorflow.org/api_docs/python/tf/compat/v1/train/polynomial_decay\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4370","RelatedDescription":"Open PR \"Created Polynomial Learning Rate scheduler\" (#4370)"},{"Id":"511364376","IsPullRequest":false,"CreatedAt":"2019-10-23T14:31:16","Actor":"FilipRudzinski","Number":"4369","RawContent":null,"Title":"Error during training tensorflow images recognition with ML.NET 1.4preview2","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 4.6, 4.6.2, CORE - 2.0, 2.1, 3.0\r\n\r\n### Issue\r\n\r\nError running sample: ImageClassification.Train with Ml.NET 1.4Preview2\r\n\r\n- **What did you do?** Tried to run sample  ImageClassification.Train\r\n- **What happened?** \r\ngot error on line  ITransformer trainedModel = pipeline.Fit(trainDataView); \r\n- **What did you expect?** Produce trained model\r\n\r\n### Source code / logs\r\nException:\r\n\r\nSystem.ArgumentOutOfRangeException: The size of input lines is not consistent\r\nParameter name: Source\r\n   at Microsoft.ML.Data.TextLoader.Bindings..ctor(TextLoader parent, Column[] cols, IMultiStreamSource headerFile, IMultiStreamSource dataSample)\r\n   at Microsoft.ML.Data.TextLoader..ctor(IHostEnvironment env, Options options, IMultiStreamSource dataSample)\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer.GetShuffledData(String path)\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer.TrainAndEvaluateClassificationLayer(String trainBottleneckFilePath, Options options, String validationSetBottleneckFilePath)\r\n   at Microsoft.ML.Transforms.ImageClassificationTransformer..ctor(IHostEnvironment env, Options options, DnnModel tensorFlowModel, IDataView input)\r\n   at Microsoft.ML.Transforms.ImageClassificationEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at ImageClassification.Train.Program.Main(String[] args) in C:\\Projekty\\Experimental\\v14\\DeepLearning_TensorFlowEstimator\\ImageClassification.Train\\Program.cs:line 78\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4369","RelatedDescription":"Open issue \"Error during training tensorflow images recognition with ML.NET 1.4preview2\" (#4369)"},{"Id":"510989908","IsPullRequest":false,"CreatedAt":"2019-10-22T23:47:52","Actor":"aslotte","Number":"4367","RawContent":null,"Title":"LoadFromTextFile unable to correctly parse CSV file","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Home\r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 3.0\r\n\r\n### Issue\r\n\r\n- **What did you do?** Loaded the following dataset: https://data.world/promptcloud/fashion-products-on-amazon-com/workspace/file?filename=amazon_co-ecommerce_sample.csv\r\n- **What happened?** The data was not correctly loaded. It looks like data from the same row is used in the following row etc. It may have something to do with the final column in the dataset.\r\n- **What did you expect?** Each row to load correctly as it does if opening the file in Excel\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4367","RelatedDescription":"Open issue \"LoadFromTextFile unable to correctly parse CSV file\" (#4367)"},{"Id":"510972523","IsPullRequest":false,"CreatedAt":"2019-10-22T22:51:34","Actor":"Krusnik02","Number":"4366","RawContent":null,"Title":"UWP: Compilation error - C:\\Users\\user\\.nuget\\packages\\microsoft.net.uwpcoreruntimesdk\\2.2.9\\tools\\CoreRuntime\\Microsoft.Net.CoreRuntime.targets(195,9): error : Framework resource extraction failed. Exception of type 'System.OutOfMemoryException' was thrown.","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI have large UWP project:\r\n[https://www.microsoft.com/ru-ru/p/spider-intelligence/9phw2smp1hl7?activetab=pivot:overviewtab](url)\r\nI have added ML.NET and ML processing algorithms to the solution. \r\nOnce I did \"Clean solution\" and “Rebuilt solution”....\r\n- **What happened?**\r\nBuilder have given me following error: \"C:\\Users\\user\\.nuget\\packages\\microsoft.net.uwpcoreruntimesdk\\2.2.9\\tools\\CoreRuntime\\Microsoft.Net.CoreRuntime.targets(195,9): error : Framework resource extraction failed. Exception of type 'System.OutOfMemoryException' was thrown.\"\r\n\r\nI have checked that the cause of the problem is ML.NET: I have removed ML.NET link and code from the solution, everything become fine. \r\n\r\nI have checked all versions of microsoft.net.uwpcoreruntimesdk, ML.NET, other libraries, building options. But error is still here. \r\nI have 48GB RAM so it is nor RAM issue.\r\n\r\n- **What did you expect?**\r\nAny way to build my UWP large enough project with ML.NET inside :) I think it is compiler or linker BUG somewhere.\r\n\r\n### Source code / logs\r\nCode is large... If it is needed, I can prepare code sample with error.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4366","RelatedDescription":"Open issue \"UWP: Compilation error - C:\\Users\\user\\.nuget\\packages\\microsoft.net.uwpcoreruntimesdk\\2.2.9\\tools\\CoreRuntime\\Microsoft.Net.CoreRuntime.targets(195,9): error : Framework resource extraction failed. Exception of type 'System.OutOfMemoryException' was thrown.\" (#4366)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-27T05:30:40.0023766Z","RunDurationInMilliseconds":1138}