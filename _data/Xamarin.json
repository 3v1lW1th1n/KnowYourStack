{"Data":{"Blog":{"FeedItems":[{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null},{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null},{"Title":"A Brief History of .NET Standard","PublishedOn":"2018-04-16T16:21:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin (and before that, Mono) allowed .NET code to run on multiple platforms for years. These days, there&#8217;s a new push in cross-platform with .NET Core and .NET Standard. This post looks at...","Href":"https://blog.xamarin.com/history-dot-net-standard/","RawContent":null},{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio 2017","PublishedOn":"2018-04-11T18:30:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 previews are now available, featuring significant improvements to the XAML experience for mobile developers. The Xamarin.Forms XAML editing experience is now powered by...","Href":"https://blog.xamarin.com/new-xamarin-forms-xaml-intellisense-visual-studio-2017/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2017 Version 15.7 Preview 3","PublishedOn":"2018-04-09T21:32:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 Preview 3 was released today (April 9, 2018) and includes many improvements for mobile developers in Visual Studio. This release sports a brand new IntelliSense...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-7-preview-3/","RawContent":null},{"Title":"Right-To-Left Localization in Xamarin.Forms","PublishedOn":"2018-04-06T20:05:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re making apps that support right-to-left languages, we have great news for you: Xamarin.Forms 3.0 makes it easier than ever to flip layouts to match language direction! We&#8217;ll use...","Href":"https://blog.xamarin.com/right-to-left-localization-xamarin-forms/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 3 – Mono","PublishedOn":"2018-04-04T18:38:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the third post of four in the Debugging Xamarin Open Source Frameworks series, debugging Mono. Part 1 covers building Xamarin.Forms from the source and debugging that code, Part 2 covers...","Href":"https://blog.xamarin.com/debugging-xamarin-mono/","RawContent":null},{"Title":"Find Local Xamarin and .NET Developer Events This April","PublishedOn":"2018-04-02T18:42:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Spring into action this April by finding a Xamarin or .NET user group hosting Xamarin (and related technology) events near you! Get the latest news on exciting releases, tooling, and updates all month...","Href":"https://blog.xamarin.com/xamarin-developer-community-events-april/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7586427373","Type":"PullRequestEvent","CreatedAt":"2018-04-25T17:33:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1289","RelatedDescription":"Merged pull request \"Bump to mono:2018-02\" (#1289) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7585560694","Type":"PullRequestEvent","CreatedAt":"2018-04-25T15:05:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1601","RelatedDescription":"Merged pull request \"Revert \"[tests] Report errors last in `RunApkTests`\"\" (#1601) at xamarin/xamarin-android","RelatedBody":"Reverts commit 4a85391f80154c7181b1eb4aeccbbb6e00296084\r\n\r\nCommit 4a85391f [broke the build][0]:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/967/\r\n\r\n\txamarin-android/build-tools/scripts/TestApks.targets(223,5): error : Root element is missing\r\n\t...\r\n\tERROR: Step ‘Publish xUnit test result report’ aborted due to exception: \r\n\torg.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Premature end of file.\r\n\t        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:257)\r\n\t        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)\r\n\t        at org.jenkinsci.lib.dtkit.util.converter.ConversionService.convert(ConversionService.java:316)\r\n\tCaused: org.jenkinsci.lib.dtkit.util.converter.ConversionException: Error to convert - A file not found\r\n\t        at org.jenkinsci.lib.dtkit.util.converter.ConversionService.convert(ConversionService.java:358)\r\n\t...\r\n\tFinished: FAILURE\r\n\r\nRevert until we can better test things."},{"Id":"7585558180","Type":"PullRequestEvent","CreatedAt":"2018-04-25T15:05:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1601","RelatedDescription":"Opened pull request \"Revert \"[tests] Report errors last in `RunApkTests`\"\" (#1601) at xamarin/xamarin-android","RelatedBody":"Reverts commit 4a85391f80154c7181b1eb4aeccbbb6e00296084\r\n\r\nCommit 4a85391f [broke the build][0]:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/967/\r\n\r\n\txamarin-android/build-tools/scripts/TestApks.targets(223,5): error : Root element is missing\r\n\t...\r\n\tERROR: Step ‘Publish xUnit test result report’ aborted due to exception: \r\n\torg.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Premature end of file.\r\n\t        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:257)\r\n\t        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)\r\n\t        at org.jenkinsci.lib.dtkit.util.converter.ConversionService.convert(ConversionService.java:316)\r\n\tCaused: org.jenkinsci.lib.dtkit.util.converter.ConversionException: Error to convert - A file not found\r\n\t        at org.jenkinsci.lib.dtkit.util.converter.ConversionService.convert(ConversionService.java:358)\r\n\t...\r\n\tFinished: FAILURE\r\n\r\nRevert until we can better test things."},{"Id":"7585231679","Type":"PullRequestEvent","CreatedAt":"2018-04-25T14:18:10","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1600","RelatedDescription":"Opened pull request \"[build] standardize references to Microsoft.Build.*.dll\" (#1600) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1465\r\n\r\nIn grendel's PR, he added `Xamarin.ProjectTools` and a new test project\r\nto `Xamarin.Android-Tests.sln`. The problem with this is that\r\n`xabuild.exe` builds the test solution, and if there is a project\r\nreferencing `Microsoft.Build.Framework` it will use a *different*\r\n`Microsoft.Build.Framework.dll` than if you built the projects with\r\nplain `msbuild`.\r\n\r\nAn example of failing commands when `Xamarin.ProjectTools` is in\r\n`Xamarin.Android-Tests.sln`:\r\n```\r\nmake prepare all all-tests\r\nmake run-nunit-tests TEST=Xamarin.Android.Build.Tests.BuildTest.ValidateJavaVersion\r\n```\r\n\r\nResults with the exception:\r\n```\r\nSystem.MissingMethodException : void Xamarin.ProjectTools.Builder.set_Verbosity(Microsoft.Build.Framework.LoggerVerbosity)\r\n    at Xamarin.Android.Build.Tests.BuildHelper.CreateApkBuilder (System.String directory, System.Boolean cleanupAfterSuccessfulBuild, System.Boolean cleanupOnDispose)\r\n    at Xamarin.Android.Build.Tests.BaseTest.CreateApkBuilder (System.String directory, System.Boolean cleanupAfterSuccessfulBuild, System.Boolean cleanupOnDispose)\r\n    at Xamarin.Android.Build.Tests.BuildTest.ValidateJavaVersion (System.String targetFrameworkVersion, System.String buildToolsVersion, System.String javaVersion, System.String latestSupportedJavaVersion, System.Boolean expectedResult)\r\n```\r\n\r\nTo recap:\r\n- `msbuild Xamarin.Android.sln` uses system/GAC\r\n`Microsoft.Build.Framework.dll`\r\n- `bin\\Debug\\bin\\xabuild Xamarin.Android.sln` uses a *different*\r\n`Microsoft.Build.Framework.dll` from `msbuild`\r\n\r\nChanges to fix this:\r\n- Created a `MSBuild.props` as a standard way to import the\r\n`Microsoft.Build.*.dll` references\r\n- Used `<HintPath>` to reference MSBuild proper, the same way that\r\n`xabuild.csproj` was doing\r\n- Went through any project needing this, and imported this file instead\r\nof declaring references\r\n- Projects referencing additional MSBuild assemblies can use the new\r\n`$(MSBuildReferencePath)` variable if needed\r\n- A few projects needed `TargetFrameworkVersion` to at least be 4.6 in order\r\nto build on Windows. I chose `4.6.2` since `Xamarin.Android.Build.Tests`\r\nwas already using this version.\r\n- Projects were referencing `Microsoft.Build.Utilities.v4.0`, which is\r\na way to support MSBuild 4.0. This is not available with latest MSBuild, so\r\nnow using `Microsoft.Build.Utilities.Core`."},{"Id":"7584787515","Type":"PullRequestEvent","CreatedAt":"2018-04-25T13:09:30","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1599","RelatedDescription":"Opened pull request \"[linker] Update linker to be aware of jni marshal methods\" (#1599) at xamarin/xamarin-android","RelatedBody":"Let linker preserve the jni marshal methods and also update the\r\nregistration methods we generate with `jnimarshalmethod-gen`.\r\n\r\nWe want the linker to preserve only jni marshal methods for methods\r\nwhich are not linked away. Thus we also need to update the\r\n`__<$>_jni_marshal_methods::__RegisterNativeMembers` method to only\r\nregister the remaining methods.\r\n\r\nFor example in our XA template application, the number of registered\r\nmethods for `Android.App.Activity` class goes down to 31 from 241.\r\n\r\nThis commit still keeps the `Get*Handler` methods in the linked\r\nassembly. Once we have the marshal methods for all the code, we can\r\nremove these easily in `DoAdditionalMethodProcessing` by returning\r\nearly, before `PreserveRegisteredMethod` is called or even remove that\r\ncall."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7587751469","Type":"IssuesEvent","CreatedAt":"2018-04-25T21:54:30","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2398","RelatedDescription":"Closed issue \"[iOS] Focus stops working for picker after it's already been focused then unfocused\" (#2398) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nPicker.Focus\r\nPicker.Unfocus\r\nPicker.Focus <- does not work\r\n\r\nThinking this might be the cause\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/1278\r\n\r\nBecause if you select something in the list then the focus/unfocus works fine\r\n\r\n### Steps to Reproduce\r\n\r\nRun control gallery test Issue2339 and just try to focus then unfocus then focus again\r\n\r\n### Expected Behavior\r\nPicker should keep being able to focus\r\n\r\n### Actual Behavior\r\nPicker stops being able to focus\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0\r\n- Last known good version: 2.5.1\r\n\r\n### Implementation notes\r\nThe original purpose of the Control Gallery test was for windows but it seems from this PR\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/762\r\nThat that's ok\r\n\r\nThe Issue2339 should be updated to reflect that it only applies to iOS/Android and the behavior isn't consistent on UWP on purpose"},{"Id":"7587528041","Type":"PullRequestEvent","CreatedAt":"2018-04-25T21:06:22","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2545","RelatedDescription":"Merged pull request \"Improve warning message, since the calling code isn't on Device\" (#2545) at xamarin/Xamarin.Forms","RelatedBody":"The existing message is confusing since the `RuntimePlatform` is not a member of the calling code \r\nbut of `Device`. So use the full member name in the suggested API usage.\r\n\r\nReduces the confusion of:\r\n\r\n![image](https://user-images.githubusercontent.com/169707/39269540-7efff3f2-48a9-11e8-88c3-0bfcd47ee7ea.png)\r\n\r\nFollowed by:\r\n\r\n![image](https://user-images.githubusercontent.com/169707/39269550-86518de6-48a9-11e8-8d24-ea6f3157eee2.png)\r\n"},{"Id":"7587526130","Type":"PullRequestEvent","CreatedAt":"2018-04-25T21:06:00","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2519","RelatedDescription":"Merged pull request \"[Core] Improve Renderer registration order\" (#2519) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRenderers are registered in three ways in Xamarin.Forms:\r\n\r\n1. Via the `RenderWithAttribute`. This is how core renderers are registered for Android.\r\n2. Via the `ExportRendererAttribute`. This is how core renderers are registered for iOS, UWP, and how users typically register their custom renderers.\r\n3. Via `RegisterHandlerForDefaultRenderer`. This is how core renderers are registered for AppCompat and Fast Renderers.\r\n\r\nAfter we introduced the `RenderWith` model, it became possible for the `Registrar` to return a less specific renderer for a type if a renderer for a base type was registered first.\r\n\r\nThis change alters the order in which we hunt for the most specific renderer and also ensures that we are registering the proper types with the proper renderers.\r\n\r\nIt also moves iOS to the `RenderWith` model.\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #2489\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n\r\n### Behavioral Changes ###\r\n\r\nNone observed, but this is a significant core change that should be tested thoroughly.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7587172038","Type":"PullRequestEvent","CreatedAt":"2018-04-25T19:56:10","Actor":"kzu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2545","RelatedDescription":"Opened pull request \"Improve warning message, since the calling code isn't on Device\" (#2545) at xamarin/Xamarin.Forms","RelatedBody":"The existing message is confusing since the `RuntimePlatform` is not a member of the calling code \r\nbut of `Device`. So use the full member name in the suggested API usage.\r\n\r\nReduces the confusion of:\r\n\r\n![image](https://user-images.githubusercontent.com/169707/39269540-7efff3f2-48a9-11e8-88c3-0bfcd47ee7ea.png)\r\n\r\nFollowed by:\r\n\r\n![image](https://user-images.githubusercontent.com/169707/39269550-86518de6-48a9-11e8-8d24-ea6f3157eee2.png)\r\n"},{"Id":"7587167070","Type":"PullRequestEvent","CreatedAt":"2018-04-25T19:55:12","Actor":"mrward","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2544","RelatedDescription":"Opened pull request \"Fix .css files not excluded from default None items\" (#2544) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixes duplicate CSS files in solution pad in VS Mac.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Fixes VSTS #606364 - CSS files are duplicated in solution pad\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"7586731917","Type":"IssuesEvent","CreatedAt":"2018-04-25T18:29:24","Actor":"charlespetzold","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2543","RelatedDescription":"Opened issue \"[FlexLayout] Can't Nest a FlexLayout in a Nested FlexLayout\" (#2543) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nA `FlexLayout` inside a `FlexLayout` works fine, but another nested `FlexLayout` disappears.\r\n\r\n### Steps to Reproduce\r\n\r\nHere's some XAML attempting to reproduce a \"holy grail\" layout:\r\n\r\n```\r\n   <FlexLayout Direction=\"Column\">\r\n        <Label Text=\"Header\" />\r\n\r\n        <FlexLayout FlexLayout.Grow=\"1\">\r\n\r\n            <FlexLayout Direction=\"Column\">\r\n                <Label Text=\"Nav #1\" />\r\n                <Label Text=\"Nav #2\" />\r\n                <Label Text=\"Nav #3\" />\r\n            </FlexLayout>\r\n\r\n            <Label Text=\"Content\"\r\n                   FlexLayout.Grow=\"1\" />\r\n\r\n            <Label Text=\"Aside\" />\r\n        </FlexLayout>\r\n\r\n        <Label Text=\"Footer\" />\r\n    </FlexLayout>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe `FlexLayout` with the three `Label` children should be visible.\r\n\r\n### Actual Behavior\r\n\r\nBut it's not there are all.\r\n\r\n### Basic Information\r\n\r\n- Xamarin.Forms 3.0.0.354232-pre3\r\n- Visual Studio 2017 version 15.6.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.3\r\n  - Android: 8.1 \r\n  - UWP:  10.0.16299 \r\n\r\n### Reproduction Link\r\n\r\nComplete solution at https://github.com/xamarin/private-samples/tree/master/FlexLayoutIssue\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7587553349","Type":"PullRequestEvent","CreatedAt":"2018-04-25T21:11:36","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3989","RelatedDescription":"Closed pull request \"Try to solve make hang by changing something.\" (#3989) at xamarin/xamarin-macios","RelatedBody":"Sometimes the build hangs here:\n\n    [...]\n    17:57:27 CSC      [xammac] netstandard.dll\n    00:34:01 Build timed out (after 450 minutes). Marking the build as aborted.\n\nUnfortunately I can't reproduce locally, but attaching lldb to `make` on a bot\nwhere this happened, and manually modifying memory to enable debug output,\nshows a loop pointing to the MonoTouch.Dialog-1.pdb target (the loop itself is\nmuch bigger, but this is the part that stands out, because the prerequisites\n\"are being made\" when they should have been completed a long time ago):\n\n    [...]\n    Considering target file `/Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tools/comparison/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS/MonoTouch.Dialog-1.pdb'.\n       Considering target file `../external/macios-binaries/MonoTouch.Dialog-Unified/ios/MonoTouch.Dialog-1.pdb'.\n       File `../external/macios-binaries/MonoTouch.Dialog-Unified/ios/MonoTouch.Dialog-1.pdb' was considered already.\n      Considering target file `/Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tools/comparison/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS'.\n      File `/Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tools/comparison/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS' was considered already.\n     Finished prerequisites of target file `/Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tools/comparison/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS/MonoTouch.Dialog-1.pdb'.\n    The prerequisites of `/Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tools/comparison/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS/MonoTouch.Dialog-1.pdb' are being made.\n    [...]\n\nI can't find anything wrong with the corresponding target, but I believe this\nis a bug in make I've seen before, where parallel make ends up confused\nsomehow. I don't know the exact conditions for make's bug, so I've just\nchanged the target somewhat to see if that works.\n\nHopefully fixes https://github.com/xamarin/maccore/issues/762."},{"Id":"7587550123","Type":"PullRequestEvent","CreatedAt":"2018-04-25T21:10:55","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3992","RelatedDescription":"Opened pull request \"Don't use .SECONDARY in makefile to work around maccore issue #762.\" (#3992) at xamarin/xamarin-macios","RelatedBody":"This exquisite fix was implemented by the true and trusted method of trial-\nand-error: I changed random stuff until things started working again.\n\nI was also able to determine a few alternative solutions:\n\n* Don't use parallel make (this is obviously not a viable solution).\n* Use a newer make (than the 12-year-old v3.81 that ships with macOS). This\n  could be a viable solution, but it's also much more invasive on developers'\n  systems.\n\nThese alternative solutions all indicate that the problem is a bug in make,\nand as such I won't try to understand the fix (I was managed to distill a much\nsmaller test case (explained in the maccore issue), but it didn't reveal\nwhat's causing make to become confused); I'll just cross my fingers and hope\nit works out.\n\nThe fix itself should be innocuous, the only visible change will be that\nsometimes make will delete intermediate files, and print an (admittedly\nannoying) line at the end of the build saying so (\"rm file1 file2 ...\").\n\nFixes https://github.com/xamarin/maccore/issues/762."},{"Id":"7586860675","Type":"PullRequestEvent","CreatedAt":"2018-04-25T18:53:55","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3991","RelatedDescription":"Opened pull request \"[msbuild/mac] Skip reference assemblies passed to mmp\" (#3991) at xamarin/xamarin-macios","RelatedBody":"- Similar to issue #3199: Could not AOT the assembly System.Runtime.CompilerServices.Unsafe.dll (MT3001)\n  (https://github.com/xamarin/xamarin-macios/issues/3199)\n- Test case: https://www.dropbox.com/s/49jxl8iftmlymes/Issue3199Test3.zip?dl=0\n\nProblem\n=======\n\nGiven a Nuget Package added via the \"package reference\" mechanism and the said package having netstandard `lib` **and** `ref` folders;\n`mmp`, if given `--aot:all` was getting reference assemblies and couldn't AOT them as those assemblies are only facades.\n\nSolution\n========\n\nSkipping the assemblies that have `/ref/` in their path seems like the simplest and yet most functional solution to the problem.\n\nAs it turn out, there is some logic already in place that copies the `lib` assemblies to the destination folder. It seems equivalent to marking them as \"Local Copy\".\nWhat this does is that it makes those assemblies available to msbuild via `@(ReferenceCopyLocalPaths)`. This gives us the opportunity to safely remove the `ref` assemblies from `@(ReferencePath)`.\n\n*Note: `mmp` is getting the assemblies to reference via a combination of `@(ReferencePath)` and `@(ReferenceCopyLocalPaths)`.*"},{"Id":"7586554709","Type":"PullRequestEvent","CreatedAt":"2018-04-25T17:56:38","Actor":"luhenry","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3402","RelatedDescription":"Merged pull request \"[runtime] integrate mono 2018-02\" (#3402) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7586365425","Type":"PullRequestEvent","CreatedAt":"2018-04-25T17:21:16","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3983","RelatedDescription":"Merged pull request \"Bump mono to the head of 2017-12, including the workaround for #8403\" (#3983) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@ea8a24b1bbf [2017-12] [mini] Don't verify types if you store to a pointer byref. (#8425)\n* mono/mono@a5b924fa68a Merge pull request #8412 from mono/backport-new-boottime-2017-12\n* mono/mono@34396522f38 [arm] Fix a regression introduced by: (#8415)\n* mono/mono@dd6e11936be [runtime] Don't use clock_gettime on WatchOS and tvOS.\n* mono/mono@e81726eb290 [runtime] Don't use clock_gettime in MacOS.\n* mono/mono@c7a91c01fa3 [runtime] Fix mono_msec_boottime () so it compiles on older ios versions, clock_gettime () is only available from ios 10. (#7671)\n* mono/mono@c6b39a06142 [mono-time] Replace mono_msec_boottime() with CoreCLR implementation. Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=58413\n* mono/mono@99af4a9eda0 [watch] Align cinfo->stack_usage to 16 on watchos. (#8377)\n* mono/mono@75be2e65371 [sdks] Match more closely the pre-SDKs configure flags passed to LLVM (#8382)\n* mono/mono@9273efd9735 [sdks] Fix mktemp parameters (#8325)\n* mono/mono@8eb8f7d5e74 [sdks] Fix typo + Fix verbosity of unzip-android-archive.sh (#8245)\n* mono/mono@c6a8c0e38af [System.Net.Http] Use '*' as the host instead of '+' in the tests. Fixes xamarin/maccore#673.\n* mono/mono@c2e1021ed00 [2017-12][TermInfo] support new file format terminfo2 introduced with ncurses6.1 (#8203)\n* mono/mono@29bbcfb0222 [sdks] Add ANDROID_BUILD_TOOLS_DIR to differentiate it from ANDROID_BUILD_TOOLS_VERSION (#8193)\n* mono/mono@2cc6bede971 [sdks] Fix typo (#8189)\n* mono/mono@16cad3ccd47 [sdks] Add support for building llvm unless the USE_PREBUILT_LLVM Make.config var is set. (#8017) (#8151)\n* mono/mono@8605da46f5c [System] Don't use http://www.mono-project.com for test (#8147)\n* mono/mono@d194b8fd4df [2017-12] [Facades] Add System.Drawing.Common on mobile only (#8130)\n* mono/mono@a7496807837 [sdks] Fix arguments passed to llvm on Linux (#8108)\n\nDiff: https://github.com/mono/mono/compare/b4e428d7c410dba6973d84ec13532debb5535d78...ea8a24b1bbf950699336bd56e9bab9f046da11c5"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"989169416758841344","CreatedAt":"2018-04-25T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Implement or improve end-to-end mobile #DevOps in your apps with this series from @gshackles on the #VSAppCenter bl… https://t.co/eg1dVsOYzK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":14,"RawContent":null},{"Id":"988809546146701312","CreatedAt":"2018-04-24T15:59:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/bAWyV5Zt2G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":13,"RawContent":null},{"Id":"988493654808498176","CreatedAt":"2018-04-23T19:03:47+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/qyMCa5TERh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":33,"RawContent":null},{"Id":"988444639064666114","CreatedAt":"2018-04-23T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/lnoWKsVf6F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"988180901405364225","CreatedAt":"2018-04-22T22:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/WHbOgNnjfL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":16,"RawContent":null},{"Id":"987830341409832966","CreatedAt":"2018-04-21T23:08:01+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/VcwvXVvsi6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":112,"FavoriteCount":52,"RawContent":null},{"Id":"987416244490993664","CreatedAt":"2018-04-20T19:42:32+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":114,"FavoriteCount":49,"RawContent":null},{"Id":"987362257762967553","CreatedAt":"2018-04-20T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/4JyHATQW2I","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":17,"RawContent":null},{"Id":"986658974685679617","CreatedAt":"2018-04-18T17:33:25+00:00","UserScreenname":"xamarinhq","Text":"Automatic iOS app provisioning with #VS2017 15.7 Preview 3: https://t.co/vFjy3uXtie https://t.co/sLhjkaHc9X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":101,"FavoriteCount":54,"RawContent":null},{"Id":"986626430950920192","CreatedAt":"2018-04-18T15:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/piucqHprNe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":51,"RawContent":null},{"Id":"986268805629345792","CreatedAt":"2018-04-17T15:43:01+00:00","UserScreenname":"xamarinhq","Text":"Minimizes the complexity of video playback across Android, iOS, and Windows environments to deliver rich media expe… https://t.co/eK0geeikW6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":22,"RawContent":null},{"Id":"985953326079594496","CreatedAt":"2018-04-16T18:49:25+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":37,"RawContent":null},{"Id":"985907924479479811","CreatedAt":"2018-04-16T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/HMGMdGgDYr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":15,"RawContent":null},{"Id":"985296899346456576","CreatedAt":"2018-04-14T23:21:01+00:00","UserScreenname":"xamarinhq","Text":"Try out the #Xamarin Android Device Manager Preview, a tool for creating, editing, and controlling Android virtual… https://t.co/POMrs2vlnD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":33,"RawContent":null},{"Id":"984843662428459008","CreatedAt":"2018-04-13T17:20:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/1JLVLvKR0M","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":26,"RawContent":null},{"Id":"984821292938465285","CreatedAt":"2018-04-13T15:51:07+00:00","UserScreenname":"xamarinhq","Text":"Start shipping better apps, faster with this curated list of #VSAppCenter resources: https://t.co/jU0cnONnM8 https://t.co/KTX4gcGjqZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":12,"RawContent":null},{"Id":"984463408073408513","CreatedAt":"2018-04-12T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/tX03cw88GD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":15,"RawContent":null},{"Id":"984140279061020672","CreatedAt":"2018-04-11T18:45:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with new #XamarinForms #XAML IntelliSense functionality in #VisualStudio 2017: https://t.co/EPKoitU5bA https://t.co/JnlquxCZN9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":37,"RawContent":null},{"Id":"983738884319334400","CreatedAt":"2018-04-10T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build Xamarin.iOS from the source code in the second part of our four-part series on debugging… https://t.co/uVkITyoInQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":12,"RawContent":null},{"Id":"983374729166934016","CreatedAt":"2018-04-09T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/O4ILyulYAJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2018-04-26T05:30:55.3055891Z","RunDurationInMilliseconds":5685}