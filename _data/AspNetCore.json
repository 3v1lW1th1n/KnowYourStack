{"Data":{"Blog":{"FeedItems":[{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null},{"Title":"Sharing Configuration in ASP.NET Core SPA Scenarios","PublishedOn":"2017-10-27T15:17:34+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"This is a guest post from Mike Rousos ASP.NET Core 2.0 recently released and, with it, came some new templates, including new project templates for single-page applications (SPA) served from an...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/27/sharing-configuration-in-asp-net-core-spa-scenarios/","RawContent":null},{"Title":"User accounts made easy with Azure","PublishedOn":"2017-10-17T21:01:45+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"One of the most common requirements for web applications is for users create accounts for the purpose of access control and personalization. While ASP.NET templates have always made it easy to create...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/","RawContent":null},{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6847099498","Type":"IssuesEvent","CreatedAt":"2017-11-13T14:26:24","Actor":"zuosc","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2264","RelatedDescription":"Closed issue \"Hi,where can i find the netcore icon and logo\" (#2264) at aspnet/Home","RelatedBody":"![qq 20171101122214](https://user-images.githubusercontent.com/8411781/32259957-664d3cb8-beff-11e7-99aa-0f57b0e2802a.png)\r\n\r\n\r\nas marked in the picture。\r\n\r\nAnd I want some high resolution picture.\r\n\r\nThank you!"},{"Id":"6845988886","Type":"IssuesEvent","CreatedAt":"2017-11-13T10:21:17","Actor":"valeriob","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2275","RelatedDescription":"Opened issue \"Question about AspNetCore 2.0 View Precompilation\" (#2275) at aspnet/Home","RelatedBody":"I'm trying to deploy an aspnetcore 2.0 application running on .net framework 4.6.1.\r\nI can't precompile views yet, because a missing piece on octopus tooling, so i need to comple views at runtime on the server. \r\nRight now the server only has Windows Server Hosting, but it fails to compile any view because an assembly missing (Microsoft.CSharp.dll).\r\nWhat are the requirement to support this workflow on the server ? the full .netcore sdk, the runtime, or what else ?\r\n\r\nThanks\r\n"},{"Id":"6843514797","Type":"IssuesEvent","CreatedAt":"2017-11-12T16:05:23","Actor":"markrendle","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2274","RelatedDescription":"Opened issue \"Will Razor view issues with C# LangVersion be fixed in 2.0.3?\" (#2274) at aspnet/Home","RelatedBody":"Right now, Razor Views are a mess in VS2017.4 and Rider 2017.2. None of the contextual actions for creating or navigating to views work, and I've got red squiggles all over the place, although it all builds and runs fine.\r\n\r\nIt appears to be down to something with the language version, so I'm hoping it will be fixed in the patch, maybe [this issue](https://github.com/aspnet/Mvc/issues/6611)?"},{"Id":"6840070961","Type":"IssuesEvent","CreatedAt":"2017-11-10T22:07:10","Actor":"Grandizer","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2273","RelatedDescription":"Opened issue \"Error MSB3073 - Works Great Locally - Can't Publish to Azure or Local Folder\" (#2273) at aspnet/Home","RelatedBody":"I have been on .Net Core 2.0 since it came out and have published many times.  The only real difference I can think of that has changed is I updated to VS 15.4.3 a few days ago.\r\n\r\nMy project builds and runs locally like a champ.  When I go to publish to Azure (then tried local folder) I get the following error.\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tThe command \"\"dotnet\" exec --runtimeconfig \"C:\\Avantia Projects\\Time Card\\avantia-timesheet\\Solution\\Almanac\\bin\\Release\\netcoreapp2.0\\Avantia.Almanac.runtimeconfig.json\" --depsfile \"C:\\Avantia Projects\\Time Card\\avantia-timesheet\\Solution\\Almanac\\bin\\Release\\netcoreapp2.0\\Avantia.Almanac.deps.json\" \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.dll\" @\"obj\\Release\\netcoreapp2.0\\microsoft.aspnetcore.mvc.razor.viewcompilation.rsp\"\" exited with code 1.\tAlmanac\tC:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.viewcompilation\\2.0.0\\build\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.targets\t60\t\r\n```\r\nDouble-clicking on that error takes me to the following like:\r\n\r\n`    <Exec Command=\"$(ExecArgs)\" WorkingDirectory=\"$(MSBuildProjectDirectory)\" />`\r\n\r\nAfter reading a few articles I did clear out my bin and obj folders.  Even cleared the nugget cache and restored the packages.  One article spoke about authentication but as near as I can tell, I am up to date with that.  The first time I published after going to core 2 I did get errors and updated at that time.  So I have ruled that out (currently.)\r\n\r\nWhat other file(s) do you need from me.  I will be happy to pass those along as this is now stopping my testers from doing their job.\r\n\r\nThanks!\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6849864473","Type":"IssuesEvent","CreatedAt":"2017-11-13T23:57:59","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1060","RelatedDescription":"Closed issue \"Consume newer CoreFX/CoreFXLab packages\" (#1060) at aspnet/SignalR","RelatedBody":"It's been a while since we took some of the dependencies.\r\n\r\n@ahsonkhan is working on getting a new signed build of the packages that we use. "},{"Id":"6849688266","Type":"PullRequestEvent","CreatedAt":"2017-11-13T23:05:37","Actor":"pakrym","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/998","RelatedDescription":"Merged pull request \"React to CoreFxLab packages\" (#998) at aspnet/SignalR","RelatedBody":"You can probably safely ignore all non *.cs files.\r\nOpening PR to get feedback in time to react before gate runs."},{"Id":"6849649006","Type":"IssuesEvent","CreatedAt":"2017-11-13T22:55:35","Actor":"jasmin92","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1108","RelatedDescription":"Closed issue \"Works on browser not on android device\" (#1108) at aspnet/SignalR","RelatedBody":"I am working on mobile app using Ionic 3 framework and aspnet core as server. \r\nSignalR works fine when runs in browser, but when it runs on native android device it crush with white screen. I inspected app with chrome://inspect and got errors:\r\n\r\n![image](https://user-images.githubusercontent.com/28627630/32721662-8488fc6e-c867-11e7-9368-f5c0271825b2.png)\r\n\r\nIs this due the CORS policy setup?\r\n"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6850097634","Type":"IssuesEvent","CreatedAt":"2017-11-14T01:15:48","Actor":"johnstav","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7027","RelatedDescription":"Closed issue \"Post model binding uses culture, Get model binding doesn't use culture\" (#7027) at aspnet/Mvc","RelatedBody":"With culture en-AU, the following controller action binds the date parameter differently for get and post:\r\n- Get binds MM/dd/yyyy (en-US?)\r\n- Post binds dd/MM/yyyy (en-AU - Correct culture)\r\n\r\n- Tested and occurs in aspnetcore 2 - razor pages and controllers\r\n\r\nController:\r\n```\r\npublic class TestController : Controller\r\n    {\r\n        public IActionResult Index(DateTime? date) {\r\n            return View();\r\n        }\r\n    }\r\n```\r\nView:\r\n```\r\n<form method=\"get\">\r\n\t<input name=\"date\" type=\"text\" value=\"01/11/2017\" />\r\n\t<button type=\"submit\">Get</button>\r\n</form>\r\n<form method=\"post\">\r\n\t<input name=\"date\" type=\"text\" value=\"01/11/2017\" />\r\n\t<button type=\"submit\">Post</button>\r\n</form>\r\n```\r\n"},{"Id":"6849206411","Type":"PullRequestEvent","CreatedAt":"2017-11-13T21:14:58","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7050","RelatedDescription":"Opened pull request \"Update samples and tests to target netcoreapp2.1\" (#7050) at aspnet/Mvc","RelatedBody":""},{"Id":"6849069841","Type":"IssuesEvent","CreatedAt":"2017-11-13T20:45:09","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7049","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Mvc.WebApiCompatShimTest currently does not build \\ run tests on net461\" (#7049) at aspnet/Mvc","RelatedBody":"Looks like we stopped compiling \\ testing it on desktop. Adding `net461` TFM back causes builds to fail. "}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6849157971","Type":"PullRequestEvent","CreatedAt":"2017-11-13T21:04:15","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1479","RelatedDescription":"Closed pull request \" remove roleType while make UserOnlyStore\" (#1479) at aspnet/Identity","RelatedBody":""},{"Id":"6849135583","Type":"PullRequestEvent","CreatedAt":"2017-11-13T20:59:22","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1502","RelatedDescription":"Merged pull request \"Corrected typo in IUserTwoFactorTokenProvider.cs\" (#1502) at aspnet/Identity","RelatedBody":"- Corrected typo: \"heck\" should be \"check\""},{"Id":"6847872666","Type":"PullRequestEvent","CreatedAt":"2017-11-13T16:39:49","Actor":"Zarickan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1502","RelatedDescription":"Opened pull request \"Corrected typo in IUserTwoFactorTokenProvider.cs\" (#1502) at aspnet/Identity","RelatedBody":"- Corrected typo: \"heck\" should be \"check\""},{"Id":"6844174312","Type":"IssuesEvent","CreatedAt":"2017-11-12T22:41:38","Actor":"rvandulek","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1501","RelatedDescription":"Opened issue \"Password backward compatibility\" (#1501) at aspnet/Identity","RelatedBody":"I'm in the process of creating a new MVC application that has to plug in to our existing SQL Server based user store.  The problem is old user accounts can't be used in the new website, trying to log in with one results in \"failure\". New accounts can be created, but can't be used by the existing MVC web sites, try to login in with one results in \"failure\".  I'm guessing this is a compatibility issue for the hashed passwords.  How can I configure the new site, to use the existing (circa 2014 MVC) password hash?  I've compared the NuGet packages in both websites and they match (both are using 2.2.1)"},{"Id":"6840170769","Type":"PullRequestEvent","CreatedAt":"2017-11-10T22:37:15","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1500","RelatedDescription":"Merged pull request \"Fix additional code path and add a test\" (#1500) at aspnet/Identity","RelatedBody":null},{"Id":"6840091001","Type":"IssuesEvent","CreatedAt":"2017-11-10T22:12:54","Actor":"AfkAtm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1498","RelatedDescription":"Closed issue \"Using Azure Active Directory OAuth with Identity ASP.NET Core 2.0\" (#1498) at aspnet/Identity","RelatedBody":"As part of the built in libraries that comes with ASP.NET Core 2.0 there is the ability to add OAuth using Microsoft accounts into the identity model.  The same way you can add Facebook, Google or Twitter.  I've used these before without issues and they are really easy to set up.  However, I've ran into no end of trouble trying to implement Azure Active Directory OAuth tying into the Identity model.  \r\n\r\nI'm not sure what I'm doing wrong as I've modeled my custom classes off of other OAuth providers and have done a great deal of research into AAD OAuth and interacting with it.  However, no matter what I do my ClaimsIdentity ends up being empty and SigninManager returns null when trying to pick up ExternalLogin information.  \r\n\r\nI've given more details on my issue over on Stack Overflow as I'm not sure if there is some misunderstanding of how this code should work on my end or if there is an issue with identity and playing with Azure Active Directory (which is why I'm adding this issue).  \r\nhttps://stackoverflow.com/questions/47188066/using-azure-active-directory-oauth-with-identity-model-in-asp-net-core-2-0"},{"Id":"6840032273","Type":"PullRequestEvent","CreatedAt":"2017-11-10T21:56:19","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1500","RelatedDescription":"Opened pull request \"Fix additional code path and add a test\" (#1500) at aspnet/Identity","RelatedBody":null}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6849852745","Type":"PullRequestEvent","CreatedAt":"2017-11-13T23:54:17","Actor":"anurse","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2149","RelatedDescription":"Merged pull request \"Update \"temporary\" OpenSSL wrapper to support 1.1, and add HTTP/2 sample with docker\" (#2149) at aspnet/KestrelHttpServer","RelatedBody":"Useful for reproducing issues, debugging issues, etc.\r\n\r\nThis includes a test cert in the right format and the necessary configuration options. Should just be `dotnet run`-able on a Linux machine with OpenSSL."},{"Id":"6849685657","Type":"PullRequestEvent","CreatedAt":"2017-11-13T23:04:56","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2124","RelatedDescription":"Merged pull request \"[WIP] Migrate to new pipe APIs \" (#2124) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6841207725","Type":"IssuesEvent","CreatedAt":"2017-11-11T10:29:32","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2156","RelatedDescription":"Opened issue \"Consider supporting unix domain sockets with SocketTransport\" (#2156) at aspnet/KestrelHttpServer","RelatedBody":"Seems like it's possible. \r\n\r\nhttps://github.com/dotnet/corefx/blob/958511d023231f120109967484fb63ae1837e6b8/src/System.IO.Pipes/src/System/Net/Sockets/UnixDomainSocketEndPoint.cs\r\n\r\nhttps://github.com/dotnet/corefx/blob/b5d0c3277dc384a23fee2e57a0b5c232c99dbd88/src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeServerStream.Unix.cs#L290-L301\r\n\r\nIt would be cleaner if we kept using the socket APIs and could just copy that end point logic over to kestrel. Ideally we wouldn't have to use the pipe API to support this.\r\n\r\n/cc @stephentoub "},{"Id":"6840353723","Type":"IssuesEvent","CreatedAt":"2017-11-10T23:43:52","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1955","RelatedDescription":"Closed issue \"Flaky test: ConnectionClosedWhenResponseDoesNotSatisfyMinimumDataRate\" (#1955) at aspnet/KestrelHttpServer","RelatedBody":"Saw this test failure on Travis today. Appears to have failed this assertion:\r\n```c#\r\nAssert.True(aborted.Wait(TimeSpan.FromSeconds(60)));\r\n```\r\n\r\n\r\n```\r\nFailed   ConnectionClosedWhenResponseDoesNotSatisfyMinimumDataRate\r\nError Message:\r\n Assert.True() Failure\r\nExpected: True\r\nActual:   False\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.<ConnectionClosedWhenResponseDoesNotSatisfyMinimumDataRate>d__64.MoveNext() in /home/travis/build/aspnet/KestrelHttpServer/test/Kestrel.FunctionalTests/ResponseTests.cs:line 2499\r\n```\r\n\r\nhttps://travis-ci.org/aspnet/KestrelHttpServer/jobs/252952635#L994-L1000\r\n\r\ncc @cesarbs "},{"Id":"6839857904","Type":"IssuesEvent","CreatedAt":"2017-11-10T21:09:44","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1993","RelatedDescription":"Closed issue \"Deadlock on shutdown\" (#1993) at aspnet/KestrelHttpServer","RelatedBody":"Hello.\r\n\r\nThe problem is - `dotnet.exe` hangs on shutdown after loading Angular application\r\n\r\nHow to reproduce:\r\n1. `dotnet new angular`\r\n1. open in VS2017 and start via IIS\r\n1. after application starts do some job (click Increment in Counter, fetch some data, and again)\r\n1. close browser\r\n1. if nothing happens, do it one more time\r\n1. application hangs\r\n\r\nThe problem is this happens not only with IIS Express, the same situation is with IIS on WS2012. So it makes impossible to deploy the application (after creating app_offline.htm `dotnet.exe` does not stops, and it keeps application assemblies in use, i'v checked with [Hadnle](https://docs.microsoft.com/en-us/sysinternals/downloads/handle) that it is `dotnet.exe` who uses file).\r\n\r\n```\r\nPS D:\\job\\jade.git> dotnet --info\r\n.NET Command Line Tools (1.0.4)\r\n\r\nProduct Information:\r\n Version:            1.0.4\r\n Commit SHA-1 hash:  af1e6684fd\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\1.0.4\r\n```\r\n\r\nVS threads & error above\r\n\r\n![image](https://user-images.githubusercontent.com/787292/29213482-e5a97112-7ebc-11e7-9074-33182067db00.png)\r\n\r\n![image](https://user-images.githubusercontent.com/787292/29213277-fa9c8862-7ebb-11e7-88ea-a5cca57ba7f4.png)\r\n\r\nAlso some console output (you can find it useful):\r\n```\r\nThe program '[2480] chrome.exe: WebKit' has exited with code -1 (0xffffffff).\r\nMicrosoft.AspNetCore.Server.Kestrel:Information: Connection id \"0HL70MQFQ3J21\" communication error.\r\n\r\nMicrosoft.AspNetCore.Server.Kestrel.Internal.Networking.UvException: Error -4081 ECANCELED operation canceled\r\n'dotnet.exe' (CoreCLR: clrhost): Loaded 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\1.1.2\\Microsoft.Win32.Primitives.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\n'dotnet.exe' (CoreCLR: clrhost): Loaded 'C:\\Users\\ili\\.nuget\\packages\\system.diagnostics.stacktrace\\4.3.0\\lib\\netstandard1.3\\System.Diagnostics.StackTrace.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\n'dotnet.exe' (CoreCLR: clrhost): Loaded 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\1.1.2\\System.IO.MemoryMappedFiles.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\n'dotnet.exe' (CoreCLR: clrhost): Loaded 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\1.1.2\\System.IO.UnmanagedMemoryStream.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware:Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.IO.Stream.<CopyToAsyncInternal>d__27.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware:Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.IO.Stream.<CopyToAsyncInternal>d__27.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware:Warning: The response has already started, the error page middleware will not be executed.\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware:Warning: The response has already started, the error page middleware will not be executed.\r\nMicrosoft.AspNetCore.Server.Kestrel:Error: Connection id \"0HL70MQFQ3J21\": An unhandled exception was thrown by the application.\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.IO.Stream.<CopyToAsyncInternal>d__27.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.<Invoke>d__8.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.Http.Frame`1.<RequestProcessingAsync>d__2.MoveNext()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 13467.0849ms 200 text/event-stream; charset=utf-8\r\nMicrosoft.AspNetCore.Server.Kestrel:Error: Connection id \"0HL70MQFQ3J22\": An unhandled exception was thrown by the application.\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.IO.Stream.<CopyToAsyncInternal>d__27.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.<Invoke>d__8.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.Http.Frame`1.<RequestProcessingAsync>d__2.MoveNext()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 5305.7273ms 200 text/event-stream; charset=utf-8\r\nThe thread 0xbc40 has exited with code 0 (0x0).\r\nThe thread 0x559c has exited with code 0 (0x0).\r\nThe thread 0x48c8 has exited with code 0 (0x0).\r\nThe thread 0xb604 has exited with code 0 (0x0).\r\nThe thread 0x8b48 has exited with code 0 (0x0).\r\nThe thread 0xcbc8 has exited with code 0 (0x0).\r\nThe thread 0xb72c has exited with code 0 (0x0).\r\nThe thread 0xc968 has exited with code 0 (0x0).\r\n\r\n```\r\n\r\n\r\n"},{"Id":"6839852723","Type":"IssuesEvent","CreatedAt":"2017-11-10T21:08:24","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1992","RelatedDescription":"Closed issue \"Allow Visual Studio to break on unhandled exceptions\" (#1992) at aspnet/KestrelHttpServer","RelatedBody":"Usually Visual Studio breaks on unhandled exceptions.\r\n\r\nWhen running Kestrel any exceptions in code serving HTTP requests appear to be caught by Kestrel and reported to the console.\r\n\r\n`Err.\r\n        [Microsoft.AspNetCore.Server.Kestrel] Connection id \"0HL70LNDQA2FS\": An unhandled exception was thrown by the application.\r\n        C:\\Users\\my\\Source\\bin\\Debug\\net461\\win7-x86\\Microsoft.Extensions.Logging.dll.Microsoft.Extensions.Logging.Logger.Log(...)`\r\n\r\nIs there a way to prevent kestrel from catching the exception, allowing it to be caught by the Visual Studio IDE?\r\nWithout the option \"Break when this exception type is thrown\"\r\n\r\n![image](https://user-images.githubusercontent.com/505330/29211816-844ffd12-7e9b-11e7-88e9-de6956158386.png)\r\n\r\n"},{"Id":"6839849995","Type":"IssuesEvent","CreatedAt":"2017-11-10T21:07:40","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1982","RelatedDescription":"Closed issue \"413 Payload Too Large on ASP.NET 2.0 \" (#1982) at aspnet/KestrelHttpServer","RelatedBody":"_From @maroallegro on August 3, 2017 12:49_\n\nWebApi created in .NetCore 2.0 by default references AspNetCore 2.0:\r\n\r\n```c#\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0-preview2-final\" />\r\n  </ItemGroup>\r\n```\r\n\r\nWhen we will not use IIS, but make startup project which starts WebApi:\r\n\r\n```c#\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            BuildWebHost().Run();\r\n        }\r\n\r\n        private static IWebHost BuildWebHost()\r\n        {\r\n            return new WebHostBuilder().UseContentRoot(Directory.GetCurrentDirectory()).UseKestrel()\r\n                .UseStartup<Startup>().UseUrls(\"http://localhost:59039/\").Build();\r\n        }\r\n    }\r\n```\r\nit is impossible to send 60 MB file, because WebApi throws 413 Payload Too Large error.\r\n\r\nSituation occurs despite of:\r\n-changing `maxAllowedContentLength` in `web.config` to bigger value\r\n-changing FormOptions in Startup.cs file\r\n\r\n```c#\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            // Add framework services.\r\n            services.Configure<FormOptions>(\r\n                options =>\r\n                    {\r\n                        options.MultipartBodyLengthLimit = 80000000;\r\n                        options.ValueLengthLimit = int.MaxValue;\r\n                        options.MultipartHeadersLengthLimit = int.MaxValue;\r\n                    });\r\n            services.AddMvc();\r\n        }\r\n```\r\n-moving web.config files to root folders\r\n\r\nProblem do not occur in .NETCore 1.1 WebApi because they references to AspNetCore 1.1:\r\n```c#\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ApplicationInsights.AspNetCore\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.3\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Debug\" Version=\"1.1.2\" />\r\n  </ItemGroup>\r\n```\r\nTo solve the problem in .NetCore 2.0 WebApi we can change:\r\n\r\n```c#\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0-preview2-final\" />\r\n  </ItemGroup>\r\n```\r\n\r\nto:\r\n\r\n```c#\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ApplicationInsights.AspNetCore\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.3\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Debug\" Version=\"1.1.2\" />\r\n  </ItemGroup>\r\n```\r\n\r\nPlease see projects below which shows the problem. When running specific WebApi set Starter project as Startup project.\r\n\r\n[FileTransferTestApp.zip](https://github.com/aspnet/Mvc/files/1197217/FileTransferTestApp.zip)\r\n\r\n\r\n\n\n_Copied from original issue: aspnet/Mvc#6623_"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6849729923","Type":"PullRequestEvent","CreatedAt":"2017-11-13T23:17:28","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1771","RelatedDescription":"Opened pull request \"Cleanup legacy and unintentionally public bits.\" (#1771) at aspnet/Razor","RelatedBody":"- Made `RazorTemplateEngineFactoryService`, `TagHelperResolver`, `RazorDiagnosticJsonConverter` and `RazorLanguageServiceException` internal.\r\n- Deleted all items in the Legacy folder in VisualStudio.LanguageServices.Razor.\r\n\r\n#1762"},{"Id":"6849144370","Type":"PullRequestEvent","CreatedAt":"2017-11-13T21:01:14","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1770","RelatedDescription":"Opened pull request \"Move RazorSyntaxFactsService to VS.Editor.Razor and export it.\" (#1770) at aspnet/Razor","RelatedBody":"- Moved service poco types: `AcceptedCharacters`, `BlockKind`, `ClassifiedSpan`, `SpanKind` and `TagHelperSpan` into VS.Editor.Razor.\r\n\r\n#1762"},{"Id":"6849142126","Type":"PullRequestEvent","CreatedAt":"2017-11-13T21:00:45","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1769","RelatedDescription":"Opened pull request \"Move indentation service to VS.Editor.Razor and export it.\" (#1769) at aspnet/Razor","RelatedBody":"- Removed indentation service extensions and made `GetDesiredIndentation` understand `ITextSnapshot`s and `ITextLineSnapshot`.\r\n- Updated our test `StringTextSnapshot` implementation to have the required features our indentation tests require.\r\n- Updated indentation service tests to use new API.\r\n\r\n#1762"},{"Id":"6849135233","Type":"PullRequestEvent","CreatedAt":"2017-11-13T20:59:18","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1768","RelatedDescription":"Opened pull request \"Add EditorSettingsUpdateSource as an exported MEF component.\" (#1768) at aspnet/Razor","RelatedBody":"- Internalized `EditorSettingsManager` since it's now consumed by the update source.\r\n- Added a `VisualStudioWorkspaceAccessor` to enable the `Microsoft.VisualStudio.Editor.Razor` project to have access to the current workspace. Only added the Windows specific implementation of this type since the VS for mac implementation will require infrastructural work to make happen.\r\n\r\n#1762"},{"Id":"6848258601","Type":"IssuesEvent","CreatedAt":"2017-11-13T17:53:07","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1766","RelatedDescription":"Closed issue \"Targeted tag name cannot be null or whitespace.\" (#1766) at aspnet/Razor","RelatedBody":"When i run in Debug mode it working fine. But when i publish it and run with dotnet via cmd it throw this exception:\r\n\r\n> An error occurred during the compilation of a resource required to process this request. Please review the following specific error details and modify your source code appropriately.\r\n> ...\\TNHeThong\\TNLoi\\ChucNang\\TNChucNang.QuanTriHeThong\\Views\\Home\\Index.cshtml\r\n> \r\n> Targeted tag name cannot be null or whitespace.\r\n\r\n[TNHeThong.zip](https://github.com/aspnet/Razor/files/1464284/TNHeThong.zip)\r\nPlease change \" apm.FeatureProviders.Prepend(new NhaCungCapUngDung());\" to \" apm.FeatureProviders.Add(new NhaCungCapUngDung());\"\r\nline 198 BoQuanLyChucNang.cs\r\n\r\nIt's working fine with .NET Core 1.1.\r\n"},{"Id":"6843135028","Type":"IssuesEvent","CreatedAt":"2017-11-12T12:02:15","Actor":"winseros","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1767","RelatedDescription":"Opened issue \"Razor: standalone usage without the whole ASP.NET Core MVC\" (#1767) at aspnet/Razor","RelatedBody":"Hi, Is there a chance Razor could be used as a template engine without the MVC itself? \r\n\r\nIf yes - then how? \r\nIf no - then are there any plans for that?\r\n\r\nThanks"},{"Id":"6842401071","Type":"IssuesEvent","CreatedAt":"2017-11-12T01:02:08","Actor":"thanhnntq","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1766","RelatedDescription":"Opened issue \"Targeted tag name cannot be null or whitespace.\" (#1766) at aspnet/Razor","RelatedBody":"An error occurred during the compilation of a resource required to process this request. Please review the following specific error details and modify your source code appropriately.\r\n...\\TNHeThong\\TNLoi\\ChucNang\\TNChucNang.QuanTriHeThong\\Views\\Home\\Index.cshtml\r\n\r\n    Targeted tag name cannot be null or whitespace.\r\n\r\n[TNHeThong.zip](https://github.com/aspnet/Razor/files/1464284/TNHeThong.zip)\r\n"},{"Id":"6841463710","Type":"IssuesEvent","CreatedAt":"2017-11-11T13:59:27","Actor":"pushqrdx","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1765","RelatedDescription":"Opened issue \"Support for handler name Intellisense auto completion ?\" (#1765) at aspnet/Razor","RelatedBody":"Well i noticed that the implementation for `asp-page-handler` takes in a string which results in Intellisense not recognizing the underlying `OnGet / OnPost` handler methods in Razor Pages so i rolled on my own implementation using `nameof()` plus some magic. So unless i am missing on something is there anyway to simply do `asp-page-handler(HandlerName)` with Intellisense auto completion enabled ?"},{"Id":"6840410699","Type":"IssuesEvent","CreatedAt":"2017-11-11T00:07:39","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1764","RelatedDescription":"Opened issue \"Own _ViewImports.cshtml file change detection\" (#1764) at aspnet/Razor","RelatedBody":"Right now WTE owns the monitoring of `_ViewImports.cshtml` and then appropriately re-parsing impacted cshtml files. We should own that code."},{"Id":"6840357017","Type":"PullRequestEvent","CreatedAt":"2017-11-10T23:45:14","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/1763","RelatedDescription":"Closed pull request \"Use CodeAnalysis.Razor services instead of legacy ones.\" (#1763) at aspnet/Razor","RelatedBody":"- Deleted Legacy/* services that were not TagHelper related (that will be deleted once the TagHelper project system is in place) and moved to using CodeAnalysis.Razor services.\r\n- Deleted corresponding legacy tests.\r\n- Exported public API services in `Microsoft.VisualStudio.Editor.Razor` so external components can utilize MEF to bring them in. We use Roslyn workspace services internally to pass our own services around.\r\n- Made changes on the WTE side to consume these bits and all their tests pass.\r\n\r\n#1762"},{"Id":"6839444600","Type":"PullRequestEvent","CreatedAt":"2017-11-10T19:23:52","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1763","RelatedDescription":"Opened pull request \"Use CodeAnalysis.Razor services instead of legacy ones.\" (#1763) at aspnet/Razor","RelatedBody":"- Deleted Legacy/* services that were not TagHelper related (that will be deleted once the TagHelper project system is in place) and moved to using CodeAnalysis.Razor services.\r\n- Deleted corresponding legacy tests.\r\n- Exported public API services in `Microsoft.VisualStudio.Editor.Razor` so external components can utilize MEF to bring them in. We use Roslyn workspace services internally to pass our own services around.\r\n- Made changes on the WTE side to consume these bits and all their tests pass.\r\n\r\n#1762"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"},{"Id":"6760767057","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:11","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/490","RelatedDescription":"Closed issue \"Show external providers on the Register page\" (#490) at aspnet/Templates","RelatedBody":"The individual auth template has a login page and a register page. Login shows a password login and external providers. Register only shows a password login. Register should also show external providers, as this is where new users will go to sign-up.\n"},{"Id":"6760766431","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:02","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/492","RelatedDescription":"Closed issue \"Add tests to project templates\" (#492) at aspnet/Templates","RelatedBody":"Hi,\n\nTesting is unfortunately a part of most of our jobs. I don't know if it is already planned/done but in visual studio when I create a new ASP.NET MVC 6 (or is it Core 1 ? Not sure) there are no tests. This is particularly annoying for the template including user accounts. I spent a few hours writing tests for the included templates.\n\nI was wondering whether other people would be interested ?\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6762343502","Type":"IssuesEvent","CreatedAt":"2017-10-25T07:30:40","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Opened issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6780432155","Type":"IssuesEvent","CreatedAt":"2017-10-29T14:10:51","Actor":"smitpatel","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Closed issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi @javiercn, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6779929600","Type":"IssuesEvent","CreatedAt":"2017-10-29T07:24:18","Actor":"searus","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6777426880","Type":"IssuesEvent","CreatedAt":"2017-10-27T22:12:32","Actor":"javiercn","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/275","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications\" (#275) at aspnet/Announcements","RelatedBody":"# Improved end to end testing support for MVC applications\r\n\r\nIn this release we have created a new package Microsoft.AspNetCore.Mvc.Testing to help streamline\r\nend to end testing of MVC applications using TestServer.\r\n\r\nThis package takes care of some of the typical pitfalls users run into when trying to test MVC applications\r\nusing TestServer.\r\n* It copies the .deps file from your project into the test assembly bin folder.\r\n* It sets the content root the application's project root so that static files and views can be found.\r\n* It provides a class `WebApplicationTestFixture<TStartup>` that streamlines the bootstrapping of your app on\r\nTestServer.\r\n\r\n## Sample end to end in memory test using xUnit\r\n\r\n```csharp\r\nusing Xunit;\r\n\r\nnamespace MyApplication.FunctionalTests\r\n{\r\n    public class MyApplicationFunctionalTests : IClassFixture<WebApplicationTestFixture<Startup>>\r\n    {\r\n        public TempDataInSessionTest(WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n\r\n        public HttpClient Client { get; }\r\n\r\n        [Fact]\r\n        public async Task GetHomePage()\r\n        {\r\n            // Arrange & Act\r\n            var response = await Client.GetAsync(\"/\");\r\n\r\n            // Assert\r\n            Assert.Equal(HttpStatusCodes.OK, response.StatusCode);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Important notes\r\n\r\n### Shadow copying needs to be disabled\r\nFor end to end in-memory tests to work properly, shadow copying needs to be disabled on your test framework of choice, as it causes the tests to execute in a different folder than the output folder.\r\nFor instructions on how to do this on xUnit see https://xunit.github.io/docs/configuring-with-json.html.\r\n\r\n### Your app needs to have a CreateWebHostBuilderMethod on the Program class\r\nBy convention our ```WebApplicationTestFixture<TStartup>``` tries to find a method with the signature ```public static IWebHostBuilder CreateWebHostBuilder(string [] args)``` on the entry point class of the assembly where Startup is located. (Typically your Program class) If you don't have this method ```WebApplicationTestFixture<TStartup>``` won't be able to initialize your app in the same way it is done on a normal run. You can configure the WebHostBuilder yourself by overriding CreateWebHostBuilder on ```WebApplicationTestFixture<TStartup>```.\r\n\r\n### The test infrastructure needs to know the content root of the application under test\r\nTo set the content root for your app, ```WebApplicationTestFixture<TStartup>``` first locate your solution file ```(.sln)``` and then make a guess about where project might be. The Content Root of the application is defined by convention as ```<<SolutionFolder>>/<<ProjectAssemblyName>>```. For example, based on the folder structure defined below, the content root of the application is defined as ```c:\\work\\MyApp```. This is important because if not set correctly to the root folder of your application under test all views and static files will not be found.\r\n\r\n```\r\nc:/work/\r\n    MyApp.sln\r\n    MyApp/MyApp.csproj\r\n    MyApp.FunctionalTests/MyApp.FunctionalTests.csproj\r\n```\r\n\r\nThe process for determining the folder to use as the content root when running the tests is the following:\r\n* ```WebApplicationTestFixture<TStartup>``` starts on the bin folder of the test project, in the example above ```c:/work/MyApp.FunctionalTests/MyApp.FunctionalTests/bin/<<Configuration>>/<<Framework>>```\r\n* It navigates to the parent folder until it finds a ```.sln``` file.\r\n* It appends ```<<AssemblyName>>``` to the folder in which it found the ```.sln``` file and set that as the content root.\r\n\r\nIf you happen to be using a different convention for the layout of your projects, you can inherit from WebApplicationTestFixture and pass in the relative path from your solution to the application under test when calling the constructor. For example ```\"/src/MyApp\"```\r\n\r\n```csharp\r\npublic class MyAppTestFixture<TStartup> : WebApplicationTestFixture<TStartup> where TStartup : class\r\n{\r\n    public MyAppTestFixture(string solutionRelativePath)\r\n        : base(\"/src/MyApp\") { }\r\n}\r\n```"},{"Id":"6754805124","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:16:00","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/274","RelatedDescription":"Opened issue \"ASP.NET/EF Core 2.0.3 patch pre-release test feed\" (#274) at aspnet/Announcements","RelatedBody":"Hi, we now have a public test feed that you can use to try out the ASP.NET/EF Core 2.0.3 patch!\r\n\r\nYou can test this pre-release patch by adding the following feed to your app's or machine's NuGet.config file:\r\n* `https://dotnet.myget.org/F/aspnet-2-0-2-october2017-patch-public/api/v3/index.json`\r\n   * ![image](https://user-images.githubusercontent.com/202643/31913542-4757d2a0-b7fc-11e7-9bf7-7157bd18a6ca.png)\r\n   * (please ignore the *name* of the feed; it is incorrect 😦)\r\n\r\n## Update your project\r\n1. Open an existing .NET Core 2.0 project's CSPROJ file\r\n2. Update the version of the `Microsoft.AspNetCore.All` package from `2.0.0` to `2.0.3-*`\r\n3. Update the version of all the other `<PackageReference>` items from `2.0.0` to `2.0.1-*` (*Note: This is a different version than the `.All` package!*)\r\n4. Add the following element to the `<PropertyGroup>` at the top of the CSPROJ file:\r\n   * `<NoWarn>$(NOWARN);NU1605</NoWarn>`\r\n5. From a command line window (terminal), run `dotnet restore` to restore the pre-release patch packages into the project (or restore packages from your IDE, such as Visual Studio 2017)\r\n6. You should now be able to run your project with the pre-release patch packages\r\n\r\n## Additional resources\r\n* More info on updating NuGet packages is available here:\r\n   * https://docs.microsoft.com/en-us/nuget/consume-packages/reinstalling-and-updating-packages\r\n* The full list of fixes and changes made in this patch are available using this query:\r\n   * https://github.com/search?utf8=%E2%9C%93&q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.0.3&type=Issues\r\n* You can browse the list of updated packages on this gallery page:\r\n   * https://dotnet.myget.org/gallery/aspnet-2-0-2-october2017-patch-public\r\n\r\n## Feedback\r\nWe are looking for feedback on this patch. We'd like to know if you have any issues with this patch by updating your apps and libraries to the latest packages and seeing if it fixes the issues you've had, or if it introduces any new issues. If you have any issues or questions, please reply on the [discussion thread](XYZ) to let us know as soon as possible.\r\n\r\n## What's next\r\nWe will post an update when the patch is publicly available on [NuGet.org](https://nuget.org).\r\n\r\nThanks,\r\nEilon"},{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2017-11-14T05:30:10.5036182Z","RunDurationInMilliseconds":8943}