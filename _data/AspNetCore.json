{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core Performance Improvements","PublishedOn":"2018-05-23T14:26:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos I recently had an opportunity to help a developer with an ASP.NET Core app that was functionally correct but slow when under a heavy user load. We found a few...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/23/asp-net-core-performance-improvements/","RawContent":null},{"Title":"Announcing ASP.NET Providers Connected Service Visual Studio Extension","PublishedOn":"2018-05-22T17:43:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Provider pattern was introduced in ASP.NET 2.0 and it gives the developers the flexibility of where to store the state of ASP.NET features (e.g. Session State, Membership, Output Cache etc.). In...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/22/announcing-asp-net-providers-connected-service-visual-studio-extension/","RawContent":null},{"Title":"A Penny Saved is a Ton of Serverless Compute Earned","PublishedOn":"2018-05-21T20:08:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Scott Guthrie recently shared one of my favorite anecdotes on his Azure Red Shirt Tour. A Microsoft customer regularly invokes 1 billion (yes, that’s with a “B”) Azure Functions per day. The customer...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/21/a-penny-saved-is-a-ton-of-serverless-compute-earned/","RawContent":null},{"Title":"Exploring Azure App Service – Web Apps and SQL Azure","PublishedOn":"2018-05-18T19:40:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is a good chance that your web app uses a database. In my previous post introducing Azure App Service, I showed some of the benefits of hosting apps in Azure App Service, and how easy it is to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/18/exploring-azure-app-service-web-apps-and-sql-azure/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7720986309","Type":"IssuesEvent","CreatedAt":"2018-05-24T02:28:53","Actor":"yhvicey","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3160","RelatedDescription":"Closed issue \"[Dependency Injection] Constraints about constructor injection?\" (#3160) at aspnet/Home","RelatedBody":"From [the doc](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-2.0#constructor-injection-behavior) it says:\r\n\r\n> Constructor injection requires that only one applicable constructor exist. Constructor overloads are supported, but only one overload can exist whose arguments can all be fulfilled by dependency injection. If more than one exists, your app will throw an `InvalidOperationException`\r\n\r\nI wrote a class like this:\r\n\r\n```csharp\r\nclass Entity : IEntity\r\n{\r\n    ...\r\n    public Entity() { }\r\n    public Entity(IService service) { this.service = service; }\r\n    private readonly IService service;\r\n    ...\r\n}\r\n```\r\n\r\nAnd register it like this:\r\n\r\n```csharp\r\n...\r\nvar factory = new DefaultServiceProviderFactory();\r\nvar builder1 = factory.CreateBuilder(new ServiceCollection());\r\nvar builder2 = factory.CreateBuilder(new ServiceCollection());\r\n\r\nbuilder1.AddTransient<IEntity, Entity>();\r\nvar provider1 = builder1.BuildServiceProvider();\r\n\r\nbuilder2.AddTransient<IEntity, Entity>();\r\nbuilder2.AddTransient<IService, Service>();\r\nvar provider2 = builder2.BuildServiceProvider();\r\n\r\nvar entity1 = provider1.GetService<IEntity>();\r\nvar entity2 = provider2.GetService<IEntity>();\r\n...\r\n```\r\n\r\nBut there is no exception. So is the constraint still exist?"},{"Id":"7713909605","Type":"IssuesEvent","CreatedAt":"2018-05-22T22:57:08","Actor":"eddye0","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/3164","RelatedDescription":"Reopened issue \"Errors in Visual Studio startup tutorial for C#\" (#3164) at aspnet/Home","RelatedBody":"To address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFrameworkCore\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - Docker with ASP.NET Core: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n - note: several repositories have migrated their issues tracker to this repo here\r\n\r\nOther common projects:\r\n\r\n - .NET Core CLI and SDK: https://github.com/dotnet/core\r\n - .NET Core runtime: https://github.com/dotnet/coreclr\r\n - .NET Core libraries: https://github.com/dotnet/corefx\r\n - NuGet: https://github.com/NuGet/home\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n\r\nIf you believe you have an issue that affects the security of the platform please do not create an issue, instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://technet.microsoft.com/en-us/mt764065.aspx).\r\n"},{"Id":"7713908861","Type":"IssuesEvent","CreatedAt":"2018-05-22T22:56:53","Actor":"eddye0","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3164","RelatedDescription":"Closed issue \"Errors in Visual Studio startup tutorial for C#\" (#3164) at aspnet/Home","RelatedBody":"To address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFrameworkCore\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - Docker with ASP.NET Core: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n - note: several repositories have migrated their issues tracker to this repo here\r\n\r\nOther common projects:\r\n\r\n - .NET Core CLI and SDK: https://github.com/dotnet/core\r\n - .NET Core runtime: https://github.com/dotnet/coreclr\r\n - .NET Core libraries: https://github.com/dotnet/corefx\r\n - NuGet: https://github.com/NuGet/home\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n\r\nIf you believe you have an issue that affects the security of the platform please do not create an issue, instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://technet.microsoft.com/en-us/mt764065.aspx).\r\n"},{"Id":"7713888100","Type":"IssuesEvent","CreatedAt":"2018-05-22T22:50:40","Actor":"eddye0","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3164","RelatedDescription":"Opened issue \"Errors in Visual Studio startup tutorial for C#\" (#3164) at aspnet/Home","RelatedBody":"To address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFrameworkCore\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - Docker with ASP.NET Core: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n - note: several repositories have migrated their issues tracker to this repo here\r\n\r\nOther common projects:\r\n\r\n - .NET Core CLI and SDK: https://github.com/dotnet/core\r\n - .NET Core runtime: https://github.com/dotnet/coreclr\r\n - .NET Core libraries: https://github.com/dotnet/corefx\r\n - NuGet: https://github.com/NuGet/home\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n\r\nIf you believe you have an issue that affects the security of the platform please do not create an issue, instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://technet.microsoft.com/en-us/mt764065.aspx).\r\n"},{"Id":"7710524146","Type":"IssuesEvent","CreatedAt":"2018-05-22T12:42:01","Actor":"joeaudette","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3163","RelatedDescription":"Opened issue \"Confusing/misleading download links for the latest asp.net core runtime for windows\" (#3163) at aspnet/Home","RelatedBody":"I wanted to comment here but the issue is locked:\r\nhttps://github.com/aspnet/Docs/issues/6281\r\n\r\nran into the error mentioned in that issue after deployment of latest bits of an asp.net core 2.0.x app.\r\n\r\nMy feedback is the download links are very confusing. If you look here:\r\nhttps://www.microsoft.com/net/download/Windows/run\r\n\r\nyou see a download for the latest ASP.NET Core Runtime which you would guess is all you need to \"Run Apps\". I installed that and still had the error from the linked issue.\r\n\r\nReally for windows you need to dig into the full list of downloads for the current version ie here:\r\nhttps://www.microsoft.com/net/download/dotnet-core/runtime-2.0.7\r\n\r\nto get the Hosting Bundle Binaries\r\n\r\neven more confusing is that the Hosting Bundle Binaries download is listed under Linux not under Windows where it should be\r\n"},{"Id":"7710423105","Type":"IssuesEvent","CreatedAt":"2018-05-22T12:22:58","Actor":"atrauzzi","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1588","RelatedDescription":"Closed issue \"Please don't remove gulp. Don't make Bundler and Minifier the default.\" (#1588) at aspnet/Home","RelatedBody":"I just finished watching the June 21st ASP.net Community Standup and I have to say I'm a little dismayed.  In about 15 seconds, gulp and the node ecosystem were effectively tried and executed for reasons that appear to be based on recirculated old information and oversimplifications.\n\nIf the ASP.net team didn't want it to be obvious that the Bundler & Minifier Extension was tapped as a quick ditch appeasement for those who resist learning - consider it a failure.\nWhat I'm creating this issue for is to say that based on not just my own personal opinions, but the state of every web framework out there, if ASP.net is trying to stay legitimate in the eyes of developers who are flocking to other ecosystems: **Inventing and forcing an obscure tool with no mind share that reinforces bad practices is not the way to get there!**\n\nSome points of order based on the some things I heard during the standup:\n- Nobody disputes whether to commit a lock file.  It's not a question, you commit it!  Why was this framed as an argument against gulp during the standup?\n- Nobody disputes whether to commit dependencies. You don't.  Why was this also framed as an argument against gulp during the standup?\n- From a practical standpoint, the build file for B&M vs the build file for gulp are functionally identical.  Except that one is a format nobody outside of the .NET ecosystem will have ever heard of.\n- Gulp is not simply just a minification and bundling tool and to think this is very concerning.\n- The typescript team themselves have embraced NPM, so at the very least the MS-web conglomeration is in discord.\n- Web development _is_ complicated and shall remain so. To guide people any way else is to invite blame from critics - and eventually - frustrated people who moved away from your framework-full-of-lowest-common-denominators\n- Yes, I know I personally don't have to use B&M, trust me, I won't and I'll say here for the record: Nobody else should be using it either.\n\nWhat I'd like to suggest at this point is that the ASP.net team above all else **not** bundle B&M as a default with new ASP.net Core projects.  It's clear that the B&M tooling is a proprietary hazard that eschews the framework's responsibility to advocate current day best practices.\n\nWhat this issue **is not about** however is to say burn it all to the ground.  I'd like to also put out there that B&M might have every reason to continue existing as a solution for people who want to move away from the context switches of WebGrease without evolving to a module system.  It's a good first step for evolving old ASP.net 4 projects.\n\nSo now we have a discussion: _What to do instead?_\n\nI understand that the JavaScript ecosystem is difficult to navigate.  What I don't think helps developers though is telling them to jam a bunch of imperative jquery code and dependencies into their projects and never think about it.\n\nThe way I see it, it boils down to:\n- Bundle nothing\n- Keep gulp\n- Facilitate a 2nd pass when scaffolding a new project that allows one to select from a variety of JS stacks\n\nMy vote given the deadline looming for the ASP.net team is #2.  Stay the course.  But I think the only way you're going to fix this is by making it easier for people to know what their options are.  Not force them down paths they'll later regret.  That's option #3.\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7721452468","Type":"PullRequestEvent","CreatedAt":"2018-05-24T05:29:17","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2368","RelatedDescription":"Merged pull request \"Fix flaky ClientPingsMultipleTimes test\" (#2368) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2367"},{"Id":"7721452464","Type":"IssuesEvent","CreatedAt":"2018-05-24T05:29:17","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2367","RelatedDescription":"Closed issue \"Flakey ClientPingsMultipleTimes\" (#2367) at aspnet/SignalR","RelatedBody":"https://travis-ci.org/aspnet/SignalR/jobs/382984813\r\n\r\n```\r\n  Failed   Microsoft.AspNetCore.SignalR.Client.Tests.HubConnectionTests+Protocol.ClientPingsMultipleTimes\r\nRUNDOTNET : error Message:  [/home/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17060/KoreBuild.proj]\r\n   System.TimeoutException : Operation in ClientPingsMultipleTimes timed out at /_/test/Microsoft.AspNetCore.SignalR.Client.Tests/HubConnectionTests.Protocol.cs:586\r\n  Stack Trace:\r\n     at System.Threading.Tasks.TaskExtensions.OrTimeout[T](Task`1 task, TimeSpan timeout, String memberName, String filePath, Nullable`1 lineNumber)\r\n     at Microsoft.AspNetCore.SignalR.Client.Tests.HubConnectionTests.Protocol.ClientPingsMultipleTimes() in /_/test/Microsoft.AspNetCore.SignalR.Client.Tests/HubConnectionTests.Protocol.cs:line 586\r\n     at Microsoft.AspNetCore.SignalR.Client.Tests.HubConnectionTests.Protocol.ClientPingsMultipleTimes() in /_/test/Microsoft.AspNetCore.SignalR.Client.Tests/HubConnectionTests.Protocol.cs:line 592\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n  Application startup exception: System.NotSupportedException: Duplicate definitions of 'OverloadedMethod'. Overloading is not supported.\r\n     at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.DiscoverHubMethods() in /_/src/Microsoft.AspNetCore.SignalR.Core/Internal/DefaultHubDispatcher.cs:line 417\r\n     at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1..ctor(IServiceScopeFactory serviceScopeFactory, IHubContext`1 hubContext, IOptions`1 hubOptions, IOptions`1 globalHubOptions, ILogger`1 logger) in /_/src/Microsoft.AspNetCore.SignalR.Core/Internal/DefaultHubDispatcher.cs:line 38\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n     at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n     at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n     at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n     at Microsoft.Extensions.Internal.ActivatorUtilities.GetServiceOrCreateInstance[T](IServiceProvider provider)\r\n     at Microsoft.AspNetCore.Connections.ConnectionBuilderExtensions.UseConnectionHandler[TConnectionHandler](IConnectionBuilder connectionBuilder)\r\n     at Microsoft.AspNetCore.SignalR.HubRouteBuilder.<>c__3`1.<MapHub>b__3_0(IConnectionBuilder builder) in /_/src/Microsoft.AspNetCore.SignalR/HubRouteBuilder.cs:line 58\r\n     at Microsoft.AspNetCore.Http.Connections.ConnectionsRouteBuilder.MapConnections(PathString path, HttpConnectionDispatcherOptions options, Action`1 configure) in /_/src/Microsoft.AspNetCore.Http.Connections/ConnectionsRouteBuilder.cs:line 45\r\n     at Microsoft.AspNetCore.SignalR.HubRouteBuilder.MapHub[THub](PathString path, Action`1 configureOptions) in /_/src/Microsoft.AspNetCore.SignalR/HubRouteBuilder.cs:line 59\r\n     at Microsoft.AspNetCore.SignalR.Tests.MapSignalRTests.<>c.<MapSignalRFailsForInvalidHub>b__0_1(HubRouteBuilder routes) in /_/test/Microsoft.AspNetCore.SignalR.Tests/MapSignalRTests.cs:line 18\r\n     at Microsoft.AspNetCore.Builder.ConnectionsAppBuilderExtensions.UseConnections(IApplicationBuilder app, Action`1 configure) in /_/src/Microsoft.AspNetCore.Http.Connections/ConnectionsAppBuilderExtensions.cs:line 34\r\n     at Microsoft.AspNetCore.Builder.SignalRAppBuilderExtensions.UseSignalR(IApplicationBuilder app, Action`1 configure) in /_/src/Microsoft.AspNetCore.SignalR/SignalRAppBuilderExtensions.cs:line 35\r\n     at Microsoft.AspNetCore.SignalR.Tests.MapSignalRTests.<>c__DisplayClass9_0.<BuildWebHost>b__1(IApplicationBuilder app) in /_/test/Microsoft.AspNetCore.SignalR.Tests/MapSignalRTests.cs:line 139\r\n     at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n```"},{"Id":"7721216504","Type":"PullRequestEvent","CreatedAt":"2018-05-24T03:53:25","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2368","RelatedDescription":"Opened pull request \"Fix flaky ClientPingsMultipleTimes test\" (#2368) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2367"},{"Id":"7721159987","Type":"IssuesEvent","CreatedAt":"2018-05-24T03:31:23","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2367","RelatedDescription":"Opened issue \"Flakey ClientPingsMultipleTimes\" (#2367) at aspnet/SignalR","RelatedBody":"https://travis-ci.org/aspnet/SignalR/jobs/382984813\r\n\r\n```\r\n  Failed   Microsoft.AspNetCore.SignalR.Client.Tests.HubConnectionTests+Protocol.ClientPingsMultipleTimes\r\nRUNDOTNET : error Message:  [/home/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17060/KoreBuild.proj]\r\n   System.TimeoutException : Operation in ClientPingsMultipleTimes timed out at /_/test/Microsoft.AspNetCore.SignalR.Client.Tests/HubConnectionTests.Protocol.cs:586\r\n  Stack Trace:\r\n     at System.Threading.Tasks.TaskExtensions.OrTimeout[T](Task`1 task, TimeSpan timeout, String memberName, String filePath, Nullable`1 lineNumber)\r\n     at Microsoft.AspNetCore.SignalR.Client.Tests.HubConnectionTests.Protocol.ClientPingsMultipleTimes() in /_/test/Microsoft.AspNetCore.SignalR.Client.Tests/HubConnectionTests.Protocol.cs:line 586\r\n     at Microsoft.AspNetCore.SignalR.Client.Tests.HubConnectionTests.Protocol.ClientPingsMultipleTimes() in /_/test/Microsoft.AspNetCore.SignalR.Client.Tests/HubConnectionTests.Protocol.cs:line 592\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n  Application startup exception: System.NotSupportedException: Duplicate definitions of 'OverloadedMethod'. Overloading is not supported.\r\n     at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.DiscoverHubMethods() in /_/src/Microsoft.AspNetCore.SignalR.Core/Internal/DefaultHubDispatcher.cs:line 417\r\n     at Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1..ctor(IServiceScopeFactory serviceScopeFactory, IHubContext`1 hubContext, IOptions`1 hubOptions, IOptions`1 globalHubOptions, ILogger`1 logger) in /_/src/Microsoft.AspNetCore.SignalR.Core/Internal/DefaultHubDispatcher.cs:line 38\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n     at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n     at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n     at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n     at Microsoft.Extensions.Internal.ActivatorUtilities.GetServiceOrCreateInstance[T](IServiceProvider provider)\r\n     at Microsoft.AspNetCore.Connections.ConnectionBuilderExtensions.UseConnectionHandler[TConnectionHandler](IConnectionBuilder connectionBuilder)\r\n     at Microsoft.AspNetCore.SignalR.HubRouteBuilder.<>c__3`1.<MapHub>b__3_0(IConnectionBuilder builder) in /_/src/Microsoft.AspNetCore.SignalR/HubRouteBuilder.cs:line 58\r\n     at Microsoft.AspNetCore.Http.Connections.ConnectionsRouteBuilder.MapConnections(PathString path, HttpConnectionDispatcherOptions options, Action`1 configure) in /_/src/Microsoft.AspNetCore.Http.Connections/ConnectionsRouteBuilder.cs:line 45\r\n     at Microsoft.AspNetCore.SignalR.HubRouteBuilder.MapHub[THub](PathString path, Action`1 configureOptions) in /_/src/Microsoft.AspNetCore.SignalR/HubRouteBuilder.cs:line 59\r\n     at Microsoft.AspNetCore.SignalR.Tests.MapSignalRTests.<>c.<MapSignalRFailsForInvalidHub>b__0_1(HubRouteBuilder routes) in /_/test/Microsoft.AspNetCore.SignalR.Tests/MapSignalRTests.cs:line 18\r\n     at Microsoft.AspNetCore.Builder.ConnectionsAppBuilderExtensions.UseConnections(IApplicationBuilder app, Action`1 configure) in /_/src/Microsoft.AspNetCore.Http.Connections/ConnectionsAppBuilderExtensions.cs:line 34\r\n     at Microsoft.AspNetCore.Builder.SignalRAppBuilderExtensions.UseSignalR(IApplicationBuilder app, Action`1 configure) in /_/src/Microsoft.AspNetCore.SignalR/SignalRAppBuilderExtensions.cs:line 35\r\n     at Microsoft.AspNetCore.SignalR.Tests.MapSignalRTests.<>c__DisplayClass9_0.<BuildWebHost>b__1(IApplicationBuilder app) in /_/test/Microsoft.AspNetCore.SignalR.Tests/MapSignalRTests.cs:line 139\r\n     at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n```"},{"Id":"7721029848","Type":"PullRequestEvent","CreatedAt":"2018-05-24T02:44:16","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2354","RelatedDescription":"Merged pull request \"End to end versioning tests\" (#2354) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2197"},{"Id":"7721029840","Type":"IssuesEvent","CreatedAt":"2018-05-24T02:44:16","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2197","RelatedDescription":"Closed issue \"End-to-end test for hub protocol versioning\" (#2197) at aspnet/SignalR","RelatedBody":"On paper SignalR supports hub protocol versioning.\r\n\r\nWrite end-to-end test(s) to actually test that client and server support versioning to figure out what, if anything is missing now, before RTM."},{"Id":"7720967137","Type":"PullRequestEvent","CreatedAt":"2018-05-24T02:21:49","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2366","RelatedDescription":"Merged pull request \"Log 404 responses from long polling transport DELETE as Debug instead of Error\" (#2366) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2362"},{"Id":"7720967126","Type":"IssuesEvent","CreatedAt":"2018-05-24T02:21:49","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2362","RelatedDescription":"Closed issue \"DELETE request sometimes sent on DisposeAsync after failing to connect with long polling\" (#2362) at aspnet/SignalR","RelatedBody":"https://travis-ci.org/aspnet/SignalR/jobs/382889588\r\n\r\n```\r\n  Failed   Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubProtocolVersionTests.ClientWithUnsupportedProtocolVersionDoesNotConnect(transportType: LongPolling)\r\nRUNDOTNET : error Message:  [/Users/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17060/KoreBuild.proj]\r\n   System.Exception : 1 error(s) logged.\r\n  Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport - ErrorSendingDeleteRequest - Error sending DELETE request to 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n  ===================\r\n  System.Net.Http.HttpRequestException: Response status code does not indicate success: 404 (Not Found).\r\n     at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n     at Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport.SendDeleteRequest(Uri url) in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/LongPollingTransport.cs:line 225\r\n  ===================\r\n  Stack Trace:\r\n     at Microsoft.AspNetCore.SignalR.Tests.VerifyNoErrorsScope.Dispose() in /_/test/Microsoft.AspNetCore.SignalR.Tests.Utils/VerifyNoErrorsScope.cs:line 63\r\n     at Microsoft.AspNetCore.SignalR.Tests.ServerLogScope.Dispose() in /_/test/Microsoft.AspNetCore.SignalR.Tests.Utils/ServerLogScope.cs:line 66\r\n     at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubProtocolVersionTests.ClientWithUnsupportedProtocolVersionDoesNotConnect(HttpTransportType transportType) in /_/test/Microsoft.AspNetCore.SignalR.Client.FunctionalTests/HubProtocolVersionTests.cs:line 195\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n  Standard Output Messages:\r\n   | [2018-05-23T21:29:27] TestLifetime Information: Starting test ClientWithUnsupportedProtocolVersionDoesNotConnect-LongPolling\r\n   | [2018-05-23T21:29:27] TestLifetime Information: Starting test ClientWithUnsupportedProtocolVersionDoesNotConnect_LongPolling\r\n   | [2018-05-23T21:29:27] ServerLogScope Information: Server log scope started.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:261).\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting HubConnection.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting HttpConnection.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Establishing connection with server at 'http://127.0.0.1:53434/version'.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:53434/version/negotiate'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PN\" started.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:53434/version/negotiate  0\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/version/negotiate'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Debug: New connection 0pqupuUdz9-Ksz_4tfLVmA created.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: 0pqupuUdz9-Ksz_4tfLVmA - Sending negotiation response.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PN\" completed keep alive response.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 2.396ms 200 application/json\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Established connection '0pqupuUdz9-Ksz_4tfLVmA' with the server.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Skipping transport WebSockets because it was disabled by the client.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Skipping transport ServerSentEvents because it was disabled by the client.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting transport 'LongPolling' with Url: http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Information: Starting transport. Transfer mode: Text.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request GET 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA  \r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/version'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: 0pqupuUdz9-Ksz_4tfLVmA - Establishing new connection.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PN\" completed keep alive response.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.SignalR.HubConnectionHandler Debug: 0pqupuUdz9-Ksz_4tfLVmA - OnConnectedAsync started.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 0.997ms 200 application/octet-stream\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Starting receive loop.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request GET 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Starting the send loop.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA  \r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Transport 'LongPolling' started.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/version'.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Started.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: 0pqupuUdz9-Ksz_4tfLVmA - Resuming existing connection.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Using HubProtocol 'json v2147483647'.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending Hub Handshake.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Sending 41 bytes to the server using url: http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PO\" started.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA  41\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/version'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: 0pqupuUdz9-Ksz_4tfLVmA - Connection id \"0HLE0UGEHD8PO\", Request id \"0HLE0UGEHD8PO:00000001\": started reading request body.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: 0pqupuUdz9-Ksz_4tfLVmA - Connection id \"0HLE0UGEHD8PO\", Request id \"0HLE0UGEHD8PO:00000001\": done reading request body.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver Debug: 0pqupuUdz9-Ksz_4tfLVmA - Found protocol implementation for requested protocol: json.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Trace: 0pqupuUdz9-Ksz_4tfLVmA - Received 41 bytes.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PO\" completed keep alive response.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.175ms 200 text/plain\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.SignalR.HubConnectionContext Warning: 0pqupuUdz9-Ksz_4tfLVmA - Server does not support version json of the 2147483647 protocol.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Message(s) sent successfully.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport Trace: 0pqupuUdz9-Ksz_4tfLVmA - Writing a 83 byte message to connection.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PN\" completed keep alive response.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Trace: Poll response with status code 200 received from server. Content length: 83.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 3.867ms 200 application/octet-stream\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Received messages from the server.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request GET 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Error: Server returned handshake error: The server does not support version 2147483647 of the 'json' protocol.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA  \r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/version'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: 0pqupuUdz9-Ksz_4tfLVmA - Resuming existing connection.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport Debug: 0pqupuUdz9-Ksz_4tfLVmA - Terminating Long Polling connection by sending 204 response.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext Trace: 0pqupuUdz9-Ksz_4tfLVmA - Disposing connection 0pqupuUdz9-Ksz_4tfLVmA.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext Trace: 0pqupuUdz9-Ksz_4tfLVmA - Shutting down both the application and the LongPolling transport.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext Trace: 0pqupuUdz9-Ksz_4tfLVmA - Waiting for both the application and LongPolling transport to complete.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Error: Error starting connection.\r\n| Microsoft.AspNetCore.SignalR.HubException : Unable to complete handshake with the server due to an error : The server does not support version 2147483647 of the 'json' protocol. [/Users/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17060/KoreBuild.proj]\r\n   |    at Microsoft.AspNetCore.SignalR.Client.HubConnection.HandshakeAsync(ConnectionState startingConnectionState, CancellationToken cancellationToken) in /_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:line 691\r\n   |    at Microsoft.AspNetCore.SignalR.Client.HubConnection.StartAsyncCore(CancellationToken cancellationToken) in /_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:line 285\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext Trace: 0pqupuUdz9-Ksz_4tfLVmA - The application and LongPolling transport are both complete.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Disposing HttpConnection.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Debug: 0pqupuUdz9-Ksz_4tfLVmA - Removing connection 0pqupuUdz9-Ksz_4tfLVmA from the list of connections.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Information: Transport is stopping.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Send loop canceled.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PN\" completed keep alive response.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Send loop stopped.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 3.069ms 204 text/plain\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLE0UGEHD8PN\" received FIN.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PN\" disconnecting.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Receive loop stopped.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLE0UGEHD8PN\" sending FIN.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Sending DELETE request to 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request DELETE 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PN\" stopped.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 DELETE http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA  0\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/version'.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PO\" completed keep alive response.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 0.7ms 404 text/plain\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Warning: Unsuccessful HTTP response 404 return from DELETE 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Error: Error sending DELETE request to 'http://127.0.0.1:53434/version?id=0pqupuUdz9-Ksz_4tfLVmA'.\r\n   | System.Net.Http.HttpRequestException: Response status code does not indicate success: 404 (Not Found).\r\n   |    at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport.SendDeleteRequest(Uri url) in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/LongPollingTransport.cs:line 225\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Transport stopped.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Disposed.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLE0UGEHD8PO\" received FIN.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:304).\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PO\" disconnecting.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLE0UGEHD8PO\" sending FIN.\r\n   | [2018-05-23T21:29:27] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLE0UGEHD8PO\" stopped.\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:320).\r\n   | [2018-05-23T21:29:27] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:347).\r\n   | [2018-05-23T21:29:27] ServerLogScope Information: Server log scope stopped.\r\n   | [2018-05-23T21:29:27] TestLifetime Information: Finished test ClientWithUnsupportedProtocolVersionDoesNotConnect_LongPolling in 0.040794s\r\n   | [2018-05-23T21:29:27] TestLifetime Information: Finished test ClientWithUnsupportedProtocolVersionDoesNotConnect-LongPolling in 0.181763s\r\n```"},{"Id":"7720798408","Type":"PullRequestEvent","CreatedAt":"2018-05-24T01:19:31","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2366","RelatedDescription":"Opened pull request \"Log 404 responses from long polling transport DELETE as Debug instead of Error\" (#2366) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2362"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7720766107","Type":"IssuesEvent","CreatedAt":"2018-05-24T01:07:19","Actor":"chuanboz","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7822","RelatedDescription":"Opened issue \"What is the replacement for ITraceWriter Tracing Infrastructure in asp.net core 2.1\" (#7822) at aspnet/Mvc","RelatedBody":"In asp.net, based on [Tracing in ASP.NET Web API 2](https://docs.microsoft.com/en-us/aspnet/web-api/overview/testing-and-debugging/tracing-in-aspnet-web-api), there is ITraceWriter interface and you could do something like below to enable tracing for infra logic.\r\n\r\n```C#\r\npublic static void Register(HttpConfiguration config)\r\n{\r\n    config.Services.Replace(typeof(ITraceWriter), new SimpleTracer());\r\n}\r\n```\r\n\r\nI don't see this Api exists anymore for asp.net core, and I tried to search on internet but also does not see anyone mention a replacement solution.\r\n\r\nIn the past, we leveraged this in our production service to trace the execution flow to help trouble-shooting latency issue, what is the replacement for it in asp.net core 2.1?\r\n"},{"Id":"7720323064","Type":"PullRequestEvent","CreatedAt":"2018-05-23T22:36:25","Actor":"natemcmaster","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7821","RelatedDescription":"Opened pull request \"[2.1.1] Bump package versions\" (#7821) at aspnet/Mvc","RelatedBody":null},{"Id":"7720147838","Type":"IssuesEvent","CreatedAt":"2018-05-23T21:51:48","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7591","RelatedDescription":"Closed issue \"Make it easier to create an ApplicationModel in test code.\" (#7591) at aspnet/Mvc","RelatedBody":"We have a bunch of places in Mvc and one in WebHooks where we initialize and use `DefaultApplicationModelProvider` to produce an ApplicationModel that's set up correctly. We should consider having a test specific way to create a model."},{"Id":"7720133491","Type":"IssuesEvent","CreatedAt":"2018-05-23T21:48:21","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7820","RelatedDescription":"Opened issue \"Things to do in 3.0\" (#7820) at aspnet/Mvc","RelatedBody":"This issue is to track a repo wide impacting changes:\r\n### Remove the compatibility switches\r\n - [ ] (add item here)\r\n\r\n### Remove all the obsolete methods"},{"Id":"7720112691","Type":"IssuesEvent","CreatedAt":"2018-05-23T21:43:33","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7682","RelatedDescription":"Closed issue \"Microsoft.AspNetCore.Mvc.Analyzers.Experimental symbols nupkg is missing the necessary pdbs\" (#7682) at aspnet/Mvc","RelatedBody":"We don't ship this as of now but we still want to do the right thing."},{"Id":"7720099236","Type":"IssuesEvent","CreatedAt":"2018-05-23T21:40:23","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7692","RelatedDescription":"Closed issue \"Default values for nullable enums are not calculated correctly\" (#7692) at aspnet/Mvc","RelatedBody":"Consider the following code:\r\n\r\n```C#\r\npublic IActionResult Action(DayOfWeek? day = DayOfWeek.Friday) => null;\r\n```\r\n\r\nWhen the parameter `day` does not get model bound either because no value was specified or if the value on the wire cannot be bound to the enum, executing the action results in an `InvalidCastException`. The issue stems from `ParameterInfo.DefaultValue` returning the numeric value of the default value (i,e, `DayOfWeek.Friday`). We should address this in [`ParameterDefaultValue`](https://github.com/aspnet/DependencyInjection/blob/dev/shared/Microsoft.Extensions.ParameterDefaultValue.Sources/ParameterDefaultValue.cs#L9) to special case default values for nullable enums. Perhaps other nullable types are similarly affected by the behavior of `ParameterInfo.DefaultValue`.\r\n\r\n-----------------------------------------\r\n### Original issue\r\n\r\nim getting the following exception in production:\r\n\r\nSystem.InvalidCastException: Specified cast is not valid.\r\nat lambda_method(Closure , Object , Object[] )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)\r\n at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.SyncActionResultExecutor.Execute(ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()\r\n\r\n\r\n\r\nis there any way to figure out what cast is not valid/ what method should have be called/ what is the request that is processed? A little more context would be nice! \r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7720424047","Type":"IssuesEvent","CreatedAt":"2018-05-23T23:06:50","Actor":"MetalBreaker","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1804","RelatedDescription":"Opened issue \"Role being cached for too long\" (#1804) at aspnet/Identity","RelatedBody":"### Roles are cached for too long\r\nSo, I wanted to create an admin-only panel. That's all fine and dandy, and the mechanism ended up working. However, ASP.NET Core caches the role for too long (at first I thought it was my code), and if I add or remove the role, I have to either log out and then log back in or wait around ~10 minutes (don't quote me on that) for the admin-only panel to appear/disappear. It's very annoying.\r\n\r\n### Functional impact\r\nIf an admin gets demoted for abusing their powers, they will still have admin powers on the website until the cached role resets.\r\n\r\n### Minimal repro steps\r\n1. I'm using the current code:\r\n```\r\n@page\r\n@model App.Pages.Account.Manage.AdminPanelModel\r\n@{\r\n    ViewData[\"Title\"] = \"AdminPanel\";\r\n    var isAdmin = User.IsInRole(\"Admin\");\r\n}\r\n\r\n@if (isAdmin)\r\n{\r\n    <h2>Hello, fellow administrator.</h2>\r\n     //WIP\r\n}\r\nelse\r\n{\r\n    Response.StatusCode = (int)Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized;\r\n    <h2>You are not authorized.</h2>\r\n}\r\n``` \r\nand creating the Admin role in Startup using RoleManager.\r\n2. Try adding/removing the role to/from the user.\r\nIf it's added to the user, the admin panel should pop up immediately.\r\nIf it's removed from the user, the admin panel should disappear.\r\n\r\n### Expected result\r\nChanges should be effective almost immediately.\r\n\r\n### Actual result\r\nChanges take a lot of time to go into effect."},{"Id":"7710231314","Type":"IssuesEvent","CreatedAt":"2018-05-22T11:44:33","Actor":"TETYYS","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1802","RelatedDescription":"Opened issue \"Cannot create a DbSet for 'IdentityUserClaim<string>' because this type is not included in the model for the context\" (#1802) at aspnet/Identity","RelatedBody":"2.1.0-rc1-final version throws `Cannot create a DbSet for 'IdentityUserClaim<string>' because this type is not included in the model for the context` exeption on `SignInManager<TUser>.PasswordSignInAsync`:\r\n\r\n```\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.get_EntityType()\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.get_EntityQueryable()\r\nMicrosoft.EntityFrameworkCore.Internal.InternalDbSet<TEntity>.System.Linq.IQueryable.get_Provider()\r\nSystem.Linq.Queryable.Where<TSource>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate)\r\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetClaimsAsync(TUser user, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync(TUser user)\r\nMicrosoft.AspNetCore.Identity.UserClaimsPrincipalFactory<TUser>.GenerateClaimsAsync(TUser user)\r\nMicrosoft.AspNetCore.Identity.UserClaimsPrincipalFactory<TUser, TRole>.GenerateClaimsAsync(TUser user)\r\nMicrosoft.AspNetCore.Identity.UserClaimsPrincipalFactory<TUser>.CreateAsync(TUser user)\r\nMicrosoft.AspNetCore.Identity.SignInManager<TUser>.CreateUserPrincipalAsync(TUser user)\r\nMicrosoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync(TUser user, AuthenticationProperties authenticationProperties, string authenticationMethod)\r\nMicrosoft.AspNetCore.Identity.SignInManager<TUser>.SignInOrTwoFactorAsync(TUser user, bool isPersistent, string loginProvider, bool bypassTwoFactor)\r\nMicrosoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync(TUser user, string password, bool isPersistent, bool lockoutOnFailure)\r\nMicrosoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync(string userName, string password, bool isPersistent, bool lockoutOnFailure)\r\nProject.Controllers.AccountController.Login(LoginViewModel model, string returnUrl) in AccountController.cs\r\n+ var result = await _signInManager.PasswordSignInAsync(model.Email, model.Password, model.RememberMe, lockoutOnFailure: false);\r\nMicrosoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, object controller, object[] arguments)\r\nSystem.Threading.Tasks.ValueTask<TResult>.get_Result()\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\nMicrosoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)\r\nMicrosoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\nMicrosoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n\r\nIssue does not occur on Windows, but occurs on Linux (both using Kestrel), downgrading to current stable version solves the issue.\r\n\r\nFailing:\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.1.0-rc1-final\" />\r\n<PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"2.1.0-rc1-final\" />\r\n```\r\nPassing:\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.8\" />\r\n<PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"2.0.3\" />\r\n```"},{"Id":"7707347705","Type":"IssuesEvent","CreatedAt":"2018-05-21T22:17:43","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1799","RelatedDescription":"Closed issue \"Unusual behavior when implementing IUserSecurityStampStore\" (#1799) at aspnet/Identity","RelatedBody":"I am implementing Custom Stores without Entity Framework. But there seems to be a problem because `UserManager` always changes `SecurityStamp` prior to calling `IUserStore.Update`. Which results in failing of `IUserStore.Update` because persisted `SecurityStamp` and Current Security Stamp do not match. This behavior forces implementation of Custom Stores to use Entity Framework or some other equivalent ORM. Setting new `SecurityStamp` should be responsibility of `IUserStore.Update` and `IUserStore.Create`. Is this behavior by design?\r\n"},{"Id":"7707346531","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:17:22","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1801","RelatedDescription":"Opened pull request \"Add additional test assertions\" (#1801) at aspnet/Identity","RelatedBody":""},{"Id":"7707292262","Type":"IssuesEvent","CreatedAt":"2018-05-21T22:02:20","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1798","RelatedDescription":"Closed issue \"AddRoles<CustomRoleType> does not correctly add EntityFrameworkCore.RoleStore<CustomRoleType> for non-string keys\" (#1798) at aspnet/Identity","RelatedBody":"The following code:\r\n\r\n```\r\nservices.AddIdentityCore<IdentityUser<Guid>>()\r\n        .AddRoles<IdentityRole<Guid>>()\r\n        .AddEntityFrameworkStores<ApplicationDbContext>();\r\n\r\n(some time later)\r\n\r\nserviceProvider.GetRequiredService<RoleManager<IdentityRole<Guid>>>();\r\n```\r\n\r\nResults in the exception:\r\n\r\n```\r\nException has occurred: CLR/System.AggregateException\r\nAn unhandled exception of type 'System.AggregateException' occurred in System.Private.CoreLib.dll: 'One or more errors occurred.'\r\n Inner exceptions found, see $exception in variables window for more details.\r\n Innermost exception \t System.ArgumentException : Object of type 'Microsoft.AspNetCore.Identity.IdentityRole`1[System.Guid]' cannot be converted to type 'Microsoft.AspNetCore.Identity.IRoleStore`1[Microsoft.AspNetCore.Identity.IdentityRole`1[System.Guid]]'.\r\n```\r\n\r\nIf you explicit add a `RoleStore<IdentityRole<Guid>>` the issue is resolved.\r\n\r\n```\r\nusing Microsoft.AspNetCore.Identity.EntityFrameworkCore;\r\n...\r\nservices.AddScoped<IRoleStore<IdentityRole<Guid>>, RoleStore<IdentityRole<Guid>, ApplicationDbContext, Guid>>();\r\n```\r\n\r\nThis is probably because the classes\r\n\r\n```\r\npublic class RoleStore<TRole> : RoleStore<TRole, DbContext, string>\r\n\r\n(and)\r\n\r\npublic class RoleStore<TRole, TContext> : RoleStore<TRole, TContext, string>\r\n```\r\nin [RoleStore.cs](https://github.com/aspnet/Identity/blob/dev/src/EF/RoleStore.cs) require a the key to be a string."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7720786975","Type":"PullRequestEvent","CreatedAt":"2018-05-24T01:15:21","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2612","RelatedDescription":"Opened pull request \"Handle client and server aborts differently\" (#2612) at aspnet/KestrelHttpServer","RelatedBody":"#2608"},{"Id":"7720537143","Type":"IssuesEvent","CreatedAt":"2018-05-23T23:42:42","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2609","RelatedDescription":"Closed issue \"Flaky Test: HeartbeatTests on Travis\" (#2609) at aspnet/KestrelHttpServer","RelatedBody":"E.g.:\r\n\r\n```\r\nStarting test group: UnitTests/netcoreapp2.2\r\n  Microsoft (R) Test Execution Command Line Tool Version 15.7.0\r\n  Copyright (c) Microsoft Corporation.  All rights reserved.\r\n  \r\n  Starting test execution, please wait...\r\n  [xUnit.net 00:00:14.6094487]     BlockedHeartbeatDoesntCauseOverlapsAndIsLoggedAsError [FAIL]\r\n  Failed   BlockedHeartbeatDoesntCauseOverlapsAndIsLoggedAsError\r\nRUNDOTNET : error Message:  [/home/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17060/KoreBuild.proj]\r\n   Assert.True() Failure\r\n  Expected: True\r\n  Actual:   False\r\n  Stack Trace:\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.HeartbeatTests.BlockedHeartbeatDoesntCauseOverlapsAndIsLoggedAsError() in /_/test/Kestrel.Core.Tests/HeartbeatTests.cs:line 43\r\n  [xUnit.net 00:00:16.6720891]     BlockedHeartbeatIsNotLoggedAsErrorIfDebuggerAttached [FAIL]\r\n  Failed   BlockedHeartbeatIsNotLoggedAsErrorIfDebuggerAttached\r\nRUNDOTNET : error Message:  [/home/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17060/KoreBuild.proj]\r\n   Moq.MockException : \r\n  Expected invocation on the mock once, but was 2 times: h => h.OnHeartbeat(5/23/18 5:14:58 PM +00:00)\r\n  \r\n  Configured setups:\r\n  h => h.OnHeartbeat(5/23/18 5:14:58 PM +00:00), Times.Exactly(2)\r\n  \r\n  Performed invocations:\r\n  IHeartbeatHandler.OnHeartbeat(5/23/18 5:14:58 PM +00:00)\r\n  IHeartbeatHandler.OnHeartbeat(5/23/18 5:14:58 PM +00:00)\r\n  Stack Trace:\r\n     at Moq.Mock.ThrowVerifyException(MethodCall expected, IEnumerable`1 setups, IEnumerable`1 actualCalls, Expression expression, Times times, Int32 callCount)\r\n     at Moq.Mock.VerifyCalls(Interceptor targetInterceptor, MethodCall expected, Expression expression, Times times)\r\n     at Moq.Mock.Verify[T](Mock`1 mock, Expression`1 expression, Times times, String failMessage)\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.HeartbeatTests.BlockedHeartbeatIsNotLoggedAsErrorIfDebuggerAttached() in /_/test/Kestrel.Core.Tests/HeartbeatTests.cs:line 76\r\n```\r\n\r\nhttps://travis-ci.org/aspnet/KestrelHttpServer/jobs/382784143#L884"},{"Id":"7720396787","Type":"PullRequestEvent","CreatedAt":"2018-05-23T22:58:35","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2610","RelatedDescription":"Merged pull request \"Don't block so many threads in HeartbeatTests\" (#2610) at aspnet/KestrelHttpServer","RelatedBody":"#2609"},{"Id":"7720322429","Type":"PullRequestEvent","CreatedAt":"2018-05-23T22:36:14","Actor":"natemcmaster","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2611","RelatedDescription":"Opened pull request \"[2.1.1] Bump package versions\" (#2611) at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"7720312841","Type":"PullRequestEvent","CreatedAt":"2018-05-23T22:33:32","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2610","RelatedDescription":"Opened pull request \"Don't block so many threads in HeartbeatTests\" (#2610) at aspnet/KestrelHttpServer","RelatedBody":"#2609"},{"Id":"7719152536","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:28:41","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2608","RelatedDescription":"Opened issue \"Don't ever throw when writing to a response unless passed a CancellationToken\" (#2608) at aspnet/KestrelHttpServer","RelatedBody":"Certain errors, like a connection timeout or application aborting the connection or a timeout, can cause writes to fail even when no CancellationToken is passed in."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7720522357","Type":"IssuesEvent","CreatedAt":"2018-05-23T23:37:47","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2369","RelatedDescription":"Opened issue \"Port https://github.com/aspnet/Razor/issues/2363 to 2.1.1\" (#2369) at aspnet/Razor","RelatedBody":"Issue: https://github.com/aspnet/Razor/issues/2363\r\n\r\nPR: https://github.com/aspnet/Razor/pull/2368"},{"Id":"7720500303","Type":"PullRequestEvent","CreatedAt":"2018-05-23T23:30:50","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2368","RelatedDescription":"Opened pull request \"Allow publish to work when BuildProjectReferences=false\" (#2368) at aspnet/Razor","RelatedBody":"Fixes #2363"},{"Id":"7714323656","Type":"IssuesEvent","CreatedAt":"2018-05-23T01:21:42","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2253","RelatedDescription":"Closed issue \"Flaky test: Lower_SetsOptions_RunsConfigureCallbacks\" (#2253) at aspnet/Razor","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=444737&buildTypeId=XPlat_Mac_MacUniverseCoreCLR) occasionally with the following error:\r\n\r\n```\r\nSystem.NullReferenceException : Object reference not set to an instance of an object.\r\n   at System.Collections.Generic.Dictionary`2.FindEntry(TKey key)\r\n   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value)\r\n   at Castle.DynamicProxy.Generators.BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3 factory)\r\n   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)\r\n   at Moq.Proxy.CastleProxyFactory.CreateProxy(Type mockType, ICallInterceptor interceptor, Type[] interfaces, Object[] arguments)\r\n   at Moq.Mock`1.<InitializeInstance>b__20_0()\r\n   at Moq.Mock`1.OnGetObject()\r\n   at Moq.Mock`1.get_Object()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.<>c__DisplayClass1_0.<Lower_SetsOptions_RunsConfigureCallbacks>b__2(IRazorEngineBuilder b) in /_/test/Microsoft.AspNetCore.Razor.Language.Test/DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.cs:line 54\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.<>c__DisplayClass14_0.<Lower>b__0(IRazorEngineBuilder b) in /_/test/Microsoft.AspNetCore.Razor.Language.Test/DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.cs:line 443\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEngine.CreateCore(RazorConfiguration configuration, Boolean designTime, Action`1 configure) in /_/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs:line 49\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.Lower(RazorCodeDocument codeDocument, Action`1 builder, IEnumerable`1 tagHelpers, Boolean designTime) in /_/test/Microsoft.AspNetCore.Razor.Language.Test/DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.cs:line 450\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.Lower_SetsOptions_RunsConfigureCallbacks() in /_/test/Microsoft.AspNetCore.Razor.Language.Test/DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.cs:line 50\r\n```\r\nFuture instances of this failure can be found [here](http://aspnetci/project.html?projectId=XPlat&testNameId=4111971084968319933&tab=testDetails)."},{"Id":"7714079303","Type":"PullRequestEvent","CreatedAt":"2018-05-22T23:51:50","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2367","RelatedDescription":"Opened pull request \"Don't run build server when building testapps in-place\" (#2367) at aspnet/Razor","RelatedBody":"This is one of the nice to have fixes for mq. I added a new property because just setting `UseRazorBuildServer` to false and overriding it will preventing us from testing a few scenarios."},{"Id":"7714071104","Type":"IssuesEvent","CreatedAt":"2018-05-22T23:49:02","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2362","RelatedDescription":"Closed issue \"Own serializing TagHelperDescriptors when using TagHelperDescriptorJsonConverter. to Enable our JsonConverters to ignore case when reading properties \" (#2362) at aspnet/Razor","RelatedBody":"In LiveShare scenarios custom converters can impact how our TagHelperDescriptors serialize (by default they serialize camel case); because of this when our json converter attempts to read a serialized `TagHelperDescriptor` we null ref because we're looking for pascal cased properties."},{"Id":"7714069429","Type":"PullRequestEvent","CreatedAt":"2018-05-22T23:48:28","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2364","RelatedDescription":"Merged pull request \" Make TagHelperDescriptor deserialization case insensitive.\" (#2364) at aspnet/Razor","RelatedBody":"- We don't serialize TagHelperDescriptors so we don't control what casing property names are passed down to us. Instead of doing all the work to serialize TagHelperDescriptor I decided to make the deserialization process a little more flexible.\r\n- Added a TagHelperDescriptor camel case serialization test.\r\n\r\n#2362"},{"Id":"7714049260","Type":"PullRequestEvent","CreatedAt":"2018-05-22T23:41:32","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2366","RelatedDescription":"Merged pull request \"netcoreapp2.2\" (#2366) at aspnet/Razor","RelatedBody":"This should fix the integration tests that will fail once we take the new core-fx."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7707144427","Type":"IssuesEvent","CreatedAt":"2018-05-21T21:26:33","Actor":"Fosol","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/146","RelatedDescription":"Closed issue \"How to nest files in a DNX project?\" (#146) at aspnet/Tooling","RelatedBody":"My search for answers has led me here.\n\nBy default a DNX project nest files like config.json -> config.debug.json\n\nI want to be able to nest files like config.json -> config.development.debug.json\n\nHow do I do this? I can no longer edit my project file to do this because someone has decided to extract all that functionality and hide it away in some black box. \n\nFeel free to point me to the right place to ask this question.\n\nThanks,\n Jeremy\n"},{"Id":"7687608828","Type":"IssuesEvent","CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n"},{"Id":"7686968343","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:31:07","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Opened issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40153549-85278454-59b4-11e8-9b07-621a5de873f8.png)\r\n"},{"Id":"7686951810","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":484,"FavoriteCount":272,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null}]}},"RunOn":"2018-05-24T05:30:13.3293875Z","RunDurationInMilliseconds":8140}