{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.iOS and Xcode 9.3 Web Preview","PublishedOn":"2018-02-15T20:36:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The next release of Xcode, version 9.3, is currently in beta. Development of Xamarin.iOS to support the new Xcode 9.3 version is in-progress and available now as a web preview. Participating in...","Href":"https://blog.xamarin.com/xcode-9-3-web-preview-high-sierra-required/","RawContent":null},{"Title":"Add a Search Bar to Your Xamarin Apps in iOS 11","PublishedOn":"2018-02-12T20:00:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As described in the Go Large with iOS 11 post, view controllers in iOS 11 can use large titles to improve the clarity of an app&#8217;s user interface. To complement a view controller&#8217;s large...","Href":"https://blog.xamarin.com/add-search-bar-xamarin-ios-11/","RawContent":null},{"Title":"Podcast: Rapid UI Prototyping with Ink to Code, Merged Dictionaries in Xamarin.Forms, & Android Emulator Tips","PublishedOn":"2018-02-09T19:33:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I talk about a new tool that turns drawings into Android or UWP layouts, merged dictionaries coming to Xamarin.Forms, ways to make your...","Href":"https://blog.xamarin.com/podcast-rapid-ui-prototyping-ink-code-merged-dictionaries-xamarin-forms-android-emulator-tips/","RawContent":null},{"Title":"Add Languages to Your Xamarin Apps with Multilingual App Toolkit","PublishedOn":"2018-02-08T20:10:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With Xamarin, you can extend your cross-platform apps with support for native speakers, reaching markets that might otherwise be overlooked. However, managing multiple languages and keeping everything...","Href":"https://blog.xamarin.com/add-languages-to-your-apps-with-xamarin-and-multilingual-app-toolkit/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Building Your First Intelligent App with Xamarin and Microsoft Cognitive Services","PublishedOn":"2018-02-07T19:39:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today&#8217;s apps must be “intelligent” to win app users’ loyalty, whether for a consumer app or a business app. With Xamarin.Forms and Microsoft Cognitive Services, you can easily create your first...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-building-first-intelligent-app-xamarin-microsoft-cognitive-services/","RawContent":null},{"Title":"Draw your Next App Idea with Ink to Code","PublishedOn":"2018-02-05T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Imagine that you&#8217;ve just been struck by inspiration for your next great app. You might start by jotting some notes and sketching out screens. If you&#8217;re thinking about reaching for a...","Href":"https://blog.xamarin.com/draw-next-app-idea-ink-code/","RawContent":null},{"Title":"Lose the Cables: Make Deploying to an iOS or tvOS Device Easier","PublishedOn":"2018-02-02T19:59:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One thing most developers consistently do during app development is deploy to a testing device. One main drawback during this process is the struggle to find a cable, connect it to a computer, plug it...","Href":"https://blog.xamarin.com/lose-cables-make-deploying-ios-tvos-device-easier/","RawContent":null},{"Title":"Just Push Play: Using Google Play on an Android Emulator","PublishedOn":"2018-02-01T20:22:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The needs of an Android developer using the Android emulator continuously expand. The latest emulator development from Google provides a system image for the Google Play Store, which includes a fully...","Href":"https://blog.xamarin.com/just-push-play-using-google-play-android-emulator/","RawContent":null},{"Title":"Xamarin Developer Events in February","PublishedOn":"2018-01-31T19:26:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you haven&#8217;t started working on your new year&#8217;s resolutions yet, we have the perfect solution: get out there and start building on your mobile app development education by networking...","Href":"https://blog.xamarin.com/xamarin-developer-events-february/","RawContent":null},{"Title":"Webinar Recording | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-30T19:53:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this pre-recorded webinar, Mark Smith, Director of Xamarin University, shows you how to automate your app development pipeline with Visual Studio App Center, walking through how to connect your app...","Href":"https://blog.xamarin.com/webinar-recording-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7252597283","Type":"PullRequestEvent","CreatedAt":"2018-02-15T23:44:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1315","RelatedDescription":"Merged pull request \"Cherry-pick fix for #1286\" (#1315) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1286"},{"Id":"7250944086","Type":"IssuesEvent","CreatedAt":"2018-02-15T17:41:44","Actor":"jtorvald","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1316","RelatedDescription":"Opened issue \"Linker exceptions from NRE to 'Android.App.Job.JobServiceEngine' not found\" (#1316) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open attached demo project\r\n2. Build in release mode\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n[https://www.dropbox.com/s/bgerxdb6inido2g/test-linker.zip?dl=1](https://www.dropbox.com/s/bgerxdb6inido2g/test-linker.zip?dl=1)\r\n\r\nThe demo project is quite stripped and packages folder is copied from a real project where I experience the same issue. It contains packages in the packages folder but the packages.json is empty. Even when I try to re-add the Xamarin.Android Support compat and v4 support packge I still get the error in the Preview version (beta)\r\n\r\n### Expected Behavior\r\nI try to build in Release mode and expect it to build successfully.\r\n### Actual Behavior\r\nIt crashes on the Linker step. With the stable version I get:\r\n```\r\nXamarin.Android.Common.targets(1696,5): \r\nerror MSB4018: System.NullReferenceException: Object reference not set to an instance of an object\r\nXamarin.Android.Common.targets(1696,5): error MSB4018:   at\r\nMono.Linker.TypeReferenceExtensions+<GetMethods>d__4.MoveNext () [0x00038] in <a9f581d0c2a2409a88d42cf1050f6508>:0 \r\n```\r\n\r\nWith the preview version I get:\r\n```\r\nerror MSB4018: Java.Interop.Tools.Diagnostics.XamarinAndroidException: error XA2006: Could not resolve reference to 'Android.App.Job.JobServiceEngine'\r\n(defined in assembly 'Xamarin.Android.Support.Compat, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null') \r\nwith scope 'Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065'. \r\nWhen the scope is different from the defining assembly, it usually means that the type is forwarded.\r\n ---> Mono.Cecil.ResolutionException: Failed to resolve Android.App.Job.JobServiceEngine\r\n```\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Community 2017 for Mac (Preview) ===\r\n\r\nVersion 7.4 Preview (7.4 build 985)\r\nInstallation UUID: 8a28987a-1e72-4b4e-ae4d-21612ffbdc71\r\nRuntime:\r\n\tMono 5.8.0.123 (2017-10/38502063cac) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000123\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.19 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.19 (Visual Studio Community)\r\nHash: 5b1f7168\r\nBranch: d15-6\r\nBuild date: 2018-02-01 18:50:51-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.12 (Visual Studio Community)\r\nAndroid SDK: /Users/developer/Library/Developer/Xamarin/android-sdk-mac_x86\r\n\tSupported Android versions:\r\n\t\t2.3 (API level 10)\r\n\t\t4.1 (API level 16)\r\n\t\t4.2 (API level 17)\r\n\t\t5.0 (API level 21)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_121\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_121-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704000985\r\nGit revision: 0bed5a3380dbe82009f80c895623208d6c0df152\r\nBuild date: 2018-02-02 20:00:14-05\r\nXamarin addins: 612453baa9a0faea49aa554be49c01c2e0542bf3\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\nno logs\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7250926320","Type":"PullRequestEvent","CreatedAt":"2018-02-15T17:38:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1314","RelatedDescription":"Merged pull request \"Bump to xamarin-android-api-compatibility/d15-7/10df9b67\" (#1314) at xamarin/xamarin-android","RelatedBody":"Context: 34f437d97d6d5f56d684af99449de49b870b32cc\r\nContext: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/873/\r\n\r\nThe bump to mono/2017-12 in commit 34f437d9 included ABI \"breakage\" in\r\n`System.Data.dll` which wasn't *actual* breakage.\r\n\r\nUpdate xamarin-android-api-compatibility to so that we don't report\r\nwarnings for this \"breakage.\""},{"Id":"7250811726","Type":"PullRequestEvent","CreatedAt":"2018-02-15T17:16:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1315","RelatedDescription":"Opened pull request \"Cherry-pick fix for #1286\" (#1315) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1286"},{"Id":"7250596503","Type":"PullRequestEvent","CreatedAt":"2018-02-15T16:38:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1314","RelatedDescription":"Opened pull request \"Bump to xamarin-android-api-compatibility/d15-7/10df9b67\" (#1314) at xamarin/xamarin-android","RelatedBody":"Context: 34f437d97d6d5f56d684af99449de49b870b32cc\r\nContext: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/873/\r\n\r\nThe bump to mono/2017-12 in commit 34f437d9 included ABI \"breakage\" in\r\n`System.Data.dll` which wasn't *actual* breakage.\r\n\r\nUpdate xamarin-android-api-compatibility to so that we don't report\r\nwarnings for this \"breakage.\""},{"Id":"7248575887","Type":"IssuesEvent","CreatedAt":"2018-02-15T09:55:01","Actor":"awattar","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1313","RelatedDescription":"Opened issue \"Binding AutofillType and ImportantForAutofill type issue for API 26.\" (#1313) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create binding project for library that contains UI controls with inherited AutofillType and ImportantForAutofill.\r\n2. Set target / compileSdkVersion to 8.0 / 26\r\n3. Build.\r\n\r\nProbably enums are not correctly mapped for inherited members from autofill framework.\r\n\r\n### Expected Behavior\r\n\r\nBuilds fine.\r\n\r\n### Actual Behavior\r\n\r\nerror CS1715: 'MySearchView.AutofillType': type must be 'AutofillType' to match overridden member 'View.AutofillType'\r\nerror CS1715: 'MySearchView.ImportantForAutofill': type must be 'ImportantForAutofill' to match overridden member 'View.ImportantForAutofill'\r\n\r\n### Version Information\r\n\r\nVisual Studio Enterprise 2017 for Mac (Preview)\r\nVersion 7.4 Preview (7.4 build 985)\r\nInstallation UUID: fc295dbb-ea60-45ea-a7bd-051b091fe655\r\nRuntime:\r\n\tMono 5.8.0.123 (2017-10/38502063cac) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000123\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\nXamarin.Android\r\nVersion: 8.2.0.12 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/mwesolowski/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_111\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_111-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nXamarin.Mac\r\nVersion: 4.2.0.19 (Visual Studio Enterprise)\r\n\r\nXamarin.iOS\r\nVersion: 11.8.0.19 (Visual Studio Enterprise)\r\nHash: 5b1f7168\r\nBranch: d15-6\r\nBuild date: 2018-02-01 18:50:51-0500\r\n\r\nBuild Information\r\nRelease ID: 704000985\r\nGit revision: 0bed5a3380dbe82009f80c895623208d6c0df152\r\nBuild date: 2018-02-02 20:00:14-05\r\nXamarin addins: 612453baa9a0faea49aa554be49c01c2e0542bf3\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\nOperating System\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed addins\r\nInternet of Things (IoT) development (Preview) 7.1"},{"Id":"7247404776","Type":"PullRequestEvent","CreatedAt":"2018-02-15T02:38:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1307","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Stop designtime designer being deleted.\" (#1307) at xamarin/xamarin-android","RelatedBody":"Fixes #1286\r\n\r\nWe have a number of problems with our DesignTime build system. The\r\nmain one which this PR addresses is the designer file is deleted\r\nby `IncrementalClean` AND `CoreClean`. This them completely messes\r\nup the DesignTime system since it can no longer find the file.\r\n\r\nSo what we should be doing is making sure we don't tell the build\r\nsystem about the designer file ;). We do this by not writing the\r\npath to the `$(CleanFile)`."},{"Id":"7247404771","Type":"IssuesEvent","CreatedAt":"2018-02-15T02:38:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1286","RelatedDescription":"Closed issue \"Resource related intellisense breaks after Rebuilding\" (#1286) at xamarin/xamarin-android","RelatedBody":"Moving report from https://bugzilla.xamarin.com/show_bug.cgi?id=60880 into Issues. It looks like the clean target is still deleting `designtime\\Resource.Designer.cs` in d15-6.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single-View Android App\r\n2. Open MainActivity.cs, and notice that both `Resource.Layout.Main` and `Resource.ID.myButton` are available in Intellisense\r\n3. Select Build -> Clean Solution.\r\n4. Resource.* related Intellisense no longer works as expected\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nResource related Intellisense will continue to work after cleaning, building, rebuilding, etc.\r\n\r\n### Actual Behavior\r\nThe following IntelliSense output is displayed, and Resource related Intellisense no longer works.\r\n> [Failure] Could not find file 'c:\\users\\peter\\source\\repos\\App16\\App16\\obj\\Debug\\designtime\\Resource.Designer.cs'.\r\n### Version Information\r\nVS 15.6 Preview 4:\r\nhttps://gist.github.com/pjcollins/b8be35efd9b9eb0fb7e1355e74396fd2\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/ee151a4e90f0d8ac7ec9d28984e52be7#file-gistfile1-txt-L1197-L1205\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7246326028","Type":"IssuesEvent","CreatedAt":"2018-02-14T21:15:16","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1312","RelatedDescription":"Opened issue \"Encountering test failure in MonoTests.System.Net.Sockets.SocketTest.AcceptBlockingStatus (monodroid_System_test)\" (#1312) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Copy over the relevant test source linked below into a new Android project and attempt to run on a device with an internet connection.\r\n\r\nhttps://github.com/mono/mono/blob/master/mcs/class/System/Test/System.Net.Sockets/SocketTest.cs#L166\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nTest should pass.\r\n\r\n### Actual Behavior\r\nTest fails with: `System.Net.Sockets.SocketException : Connection timed out`.\r\n\r\n### Version Information\r\nmono-2017-12\r\nhttps://gist.github.com/pjcollins/43e1e192125ac5db93c1af50faaffee8\r\n\r\n### Log File\r\n```\r\n02-14 14:41:22.282 10712 10729 I NUnit   : MonoTests.System.Net.Sockets.SocketTest.AcceptBlockingStatus (monodroid_System_test)\r\n02-14 14:41:22.282 10712 10729 I NUnit   : System.Net.Sockets.SocketException : Connection timed out\r\n02-14 14:41:22.282 10712 10729 I NUnit   :\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at System.Net.Sockets.Socket.Connect (System.Net.EndPoint remoteEP) [0x000b6] in <18fabd7f050747018bc25451e9833036>:0\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at MonoTests.System.Net.Sockets.SocketTest.BlockingConnect (System.Boolean block, System.Int32 port) [0x00033] in <049e9d62f5d74935bebf1e2906ae30b7>:0\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at MonoTests.System.Net.Sockets.SocketTest.AcceptBlockingStatus () [0x00006] in <049e9d62f5d74935bebf1e2906ae30b7>:0\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in <3e87052017124b0aa0d514e8df5eadbc>:0\r\n```"},{"Id":"7246319453","Type":"IssuesEvent","CreatedAt":"2018-02-14T21:13:48","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1311","RelatedDescription":"Opened issue \"Provide 64-bit versions in addition to 32-bit version for AndroidSupportedAbis in default Release configuration\" (#1311) at xamarin/xamarin-android","RelatedBody":"**In August 2019, Play will require that new apps and app updates with native libraries provide 64-bit versions in addition to their 32-bit versions.**\r\n\r\n**Source:** https://android-developers.googleblog.com/2017/12/improving-app-security-and-performance.html\r\n\r\nThis should be a small fix in nature by adding the respective 64-bit CPU instruction set to the `<AndroidSupportedAbis>` MSBuild property:\r\n\r\n```\r\n<AndroidSupportedAbis Condition=\" '$(AndroidSupportedAbis)' == '' \">armeabi-v7a;arm64-v8a</AndroidSupportedAbis>\r\n```\r\n\r\nAlthough this requirement isn't until August 2019, we may want to start pushing the default to our release configuration with 64-bit in mind as a best practice? Thoughts?"},{"Id":"7246276262","Type":"IssuesEvent","CreatedAt":"2018-02-14T21:04:05","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1310","RelatedDescription":"Opened issue \"Encountering BCL-Test failure in MonoTests.System.Runtime.CompilerServices.RuntimeFeatureTest.NoNewFeaturesAdded (monodroid_corlib_test) when running on Android in Release config\" (#1310) at xamarin/xamarin-android","RelatedBody":"Similar to #1309, the following test case fails on Android when ran in Release configuration. Presumably the issue is linker related?\r\n\r\nhttps://github.com/mono/mono/blob/master/mcs/class/corlib/Test/System.Runtime.CompilerServices/RuntimeFeatureTest.cs#L44\r\n\r\n### Steps to Reproduce\r\n\r\n1. Copy over the relevant test source linked above into a new Android project and deploy it in release configuration.\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe test should pass when ran in a 'Release' configuration.\r\n\r\n### Actual Behavior\r\nThe test fails when ran in a 'Release' configuration.\r\n\r\n### Version Information\r\nmono-2017-12\r\nhttps://gist.github.com/pjcollins/43e1e192125ac5db93c1af50faaffee8\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n``` \r\nMonoTests.System.Runtime.CompilerServices.RuntimeFeatureTest.NoNewFeaturesAdded (monodroid_corlib_test)\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   Expected is <System.ValueTuple`2[System.String,System.Boolean][1]>, actual is <System.ValueTuple`2[System.String,System.Boolean][0]>\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   Values differ at index [0]\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   Missing:  < (PortablePdb, True) >\r\n02-14 14:41:22.282 10712 10729 I NUnit   :\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at MonoTests.System.Runtime.CompilerServices.RuntimeFeatureTest.NoNewFeaturesAdded () [0x00088] in <51b16f8a5a3c437f97c053afcbbba491>:0\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in <3e87052017124b0aa0d514e8df5eadbc>:0```"},{"Id":"7246212718","Type":"IssuesEvent","CreatedAt":"2018-02-14T20:49:54","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1309","RelatedDescription":"Opened issue \"Encountering BCL-Test failure in MonoTests.System.Xml.XmlReaderSettingsTests.LegacyXmlSettingsAreDisabled (monodroid_System.Xml_test)\" (#1309) at xamarin/xamarin-android","RelatedBody":"The following test case fails on Android when ran in Release configuration. Perhaps the issue is linker related?\r\n\r\nhttps://github.com/mono/mono/blob/master/mcs/class/System.XML/Test/System.Xml/XmlReaderSettingsTests.cs#L448\r\n\r\n### Steps to Reproduce\r\n\r\n1. Copy over the relevant test source linked above into a new Android project and deploy it in release configuration.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nTest fails.\r\n\r\n### Actual Behavior\r\nTest should not fail.\r\n\r\n### Version Information\r\nmono-2017-12\r\nhttps://gist.github.com/pjcollins/43e1e192125ac5db93c1af50faaffee8\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n```\r\n02-14 14:41:22.282 10712 10729 I NUnit   : 1) MonoTests.System.Xml.XmlReaderSettingsTests.LegacyXmlSettingsAreDisabled (monodroid_System.Xml_test)\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   Expected: False\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   But was:  True\r\n02-14 14:41:22.282 10712 10729 I NUnit   :\r\n02-14 14:41:22.282 10712 10729 I NUnit   :\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at MonoTests.System.Xml.XmlReaderSettingsTests.LegacyXmlSettingsAreDisabled () [0x0001d] in <fa6695560f1c4a2b9bed9e563ba80ada>:0\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n02-14 14:41:22.282 10712 10729 I NUnit   :   at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in <3e87052017124b0aa0d514e8df5eadbc>:0\r\n```"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7253303774","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:26:20","Actor":"AceCoderLaura","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1897","RelatedDescription":"Opened issue \"Bug 60966 - Can't Navigate To The Same Page Twice\" (#1897) at xamarin/Xamarin.Forms","RelatedBody":"**COPIED FROM:** https://bugzilla.xamarin.com/show_bug.cgi?id=60966\r\n\r\n_Laura:_\r\n> Hi, I've created a sample project that demonstrates a bug with the navigation page. It is impossible to navigate to the same page twice. Why is this? Navigating to a new Page object every time I want to go back to the same page is hurting my application's performance.\r\n> \r\n> https://www.dropbox.com/s/c8aqloj60vpvg7h/NavigationCircleBug.7z?dl=0\r\n\r\n_Melbourne Developer:_\r\n> This is a colossal monster bug that leaves us flailing and gasping for air. \r\n> \r\n> How are we supposed to build an app where the pages keep getting recreated again and again? It's chewing memory like you wouldn't believe. \r\n> \r\n> We need to be able to navigate to a page twice so that it can be reused. We know that this is possible because you can hit the back button to go back. So why I can't we just navigate to a page twice or more?"},{"Id":"7253258215","Type":"PullRequestEvent","CreatedAt":"2018-02-16T04:02:38","Actor":"rotorgames","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1757","RelatedDescription":"Closed pull request \"[Android] BackPressed preventing for an each event\" (#1757) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nI have [the library for xamarin forms](https://github.com/rotorgames/Rg.Plugins.Popup) and I should catch a back button event in my library and prevent it if it is needed. I have found the BackPressed events in FormsAppCompatActivity and FormsApplicationActivity and if I return `true` in these events the back button will not work. But it works only for the last delegate in the BackPressed event. I have fixed it. Each delegate will be invoked in the invocation list but if one in them returns true that the back button will not pop any pages.\r\n\r\nI think that a lot of people would like to use this feature in their libraries.\r\n\r\nI have not created any tests because it is simple changes.\r\n\r\nI needed to created two CanGoBack methods in FormsAppCompatActivity and FormsApplicationActivity because there are two delegates for the BackPressed events. Maybe you will have better solution.\r\n\r\n### Bugs Fixed ###\r\n\r\n- \r\n\r\n### API Changes ###\r\n\r\n-\r\n\r\nAdded:\r\n - private bool FormsAppCompatActivity.CanGoBack();\r\n - private bool FormsApplicationActivity.CanGoBack();\r\n\r\nChanged:\r\n - void FormsAppCompatActivity.OnBackPressed();\r\n - void FormsApplicationActivity.OnBackPressed();\r\n\r\n### Behavioral Changes ###\r\n\r\nNo changes\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7252615503","Type":"PullRequestEvent","CreatedAt":"2018-02-15T23:49:23","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1784","RelatedDescription":"Merged pull request \"[Android] PlatformSpecific for WebView mixed content\" (#1784) at xamarin/Xamarin.Forms","RelatedBody":"Implements and fixes #1679.\r\n\r\n### Description of Change ###\r\n\r\nAdd a PlatformSpecific property for `WebView` on Android to set the value of `WebSettings.MixedContentMode`. This setting is ignored for API levels < 21 (5.0 / Lollipop), where `WebSettings.MixedContentMode` is not implemented\r\n\r\n`webView.On<Android>().SetMixedContentMode(MixedContentHandling.AlwaysAllow)` allows for insecure HTTP requests to be made in an HTTPS frame.\r\n\r\n### API Changes ###\r\n\r\nAdded (Android Only):\r\n - enum MixedContentHandling\r\n - MixedContentHandling WebView.MixedContentMode() //Bindable Property\r\n - void WebView.SetMixedContentMode(MixedContentHandling value)\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7252615492","Type":"IssuesEvent","CreatedAt":"2018-02-15T23:49:23","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1679","RelatedDescription":"Closed issue \"[Enhancement] Android PlatformSpecific for WebView mixed content\" (#1679) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nThere is currently no way to modify an Android WebView's mixed content mode setting without creating a custom renderer. \r\n\r\n## Implementation.\r\n\r\nAdd a PlatformSpecific property for WebView on Android to set the value of WebSettings.MixedContentMode. \r\n\r\n```\r\nenum MixedContentHandling\r\n{\r\n\tAlwaysAllow = 0,\r\n\tNeverAllow = 1,\r\n\tCompatibilityMode = 2\r\n}\r\n\r\npublic static readonly BindableProperty MixedContentModeProperty = BindableProperty.Create(\"MixedContentMode\", typeof(MixedContentHandling), typeof(WebView), MixedContentHandling.NeverAllow);\r\n```\r\n\r\nBelow API 21 this value should be ignored. At API 21 or above, this value should be applied to `MixedContentMode`.\r\n\r\nThere is currently no applicable setting for iOS (allowing mixed content requires modifying application-level plist values) or UWP (the UWP WebView just lets any old thing load up).\r\n\r\n## Backward Compatibility\r\n\r\nAt API 21 and above, this value defaults to `NeverAllow`; below API 21, it is ignored. So as long as the default value of the PlatformSpecific is `NeverAllow`, this should be backward compatible. \r\n\r\n## Difficulty: Easy\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7253331252","Type":"PullRequestEvent","CreatedAt":"2018-02-16T04:40:19","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3507","RelatedDescription":"Merged pull request \"[GLKit] Fixes macOS xtro output\" (#3507) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7253267278","Type":"PullRequestEvent","CreatedAt":"2018-02-16T04:07:17","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3508","RelatedDescription":"Opened pull request \"[CoreAudioKit] Fix macOS xtro output\" (#3508) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7253248217","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:57:26","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3506","RelatedDescription":"Merged pull request \"[Security] Fixes CS0162: Unreachable code detected in Certificate.cs\" (#3506) at xamarin/xamarin-macios","RelatedBody":"Our build correctly issues\r\n\r\n\tSecurity/Certificate.cs(556,4): warning CS0162: Unreachable code detected"},{"Id":"7253247059","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:56:52","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3505","RelatedDescription":"Merged pull request \"[GameController] Fixes macOS xtro output\" (#3505) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7253129850","Type":"PullRequestEvent","CreatedAt":"2018-02-16T02:58:40","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3504","RelatedDescription":"Merged pull request \"[CoreLocation] Fix macOS xtro output\" (#3504) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7253121783","Type":"PullRequestEvent","CreatedAt":"2018-02-16T02:54:52","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3501","RelatedDescription":"Merged pull request \"Bump mono to head of 2017-12\" (#3501) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@fbc4f0546d3 Bump to cecil:mono-2017-12\n\nDiff: https://github.com/mono/mono/compare/d0c1e9d32b9f21f534234d20bfd7ea932fb8c815...fbc4f0546d3994984f775b1a7ade5289ae6bfe92"},{"Id":"7253079119","Type":"PullRequestEvent","CreatedAt":"2018-02-16T02:36:03","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3507","RelatedDescription":"Opened pull request \"[GLKit] Fixes macOS xtro output\" (#3507) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7253018591","Type":"PullRequestEvent","CreatedAt":"2018-02-16T02:10:34","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3506","RelatedDescription":"Opened pull request \"[Security] Fixes CS0162: Unreachable code detected in Certificate.cs\" (#3506) at xamarin/xamarin-macios","RelatedBody":"Our build correctly issues\r\n\r\n\tSecurity/Certificate.cs(556,4): warning CS0162: Unreachable code detected"},{"Id":"7252988002","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:58:24","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3505","RelatedDescription":"Opened pull request \"[GameController] Fixes macOS xtro output\" (#3505) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7252850262","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:06:23","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3504","RelatedDescription":"Opened pull request \"[CoreLocation] Fix macOS xtro output\" (#3504) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"964239391743979520","CreatedAt":"2018-02-15T20:46:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the just-released Xamarin.iOS and Xcode 9.3 Web Preview: https://t.co/2zZi61OBFp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":9,"RawContent":null},{"Id":"964183272367579136","CreatedAt":"2018-02-15T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss next week's webinar with @XamarinU on building your first intelligent app with #Xamarin and Microsoft… https://t.co/Dn5JtYz3iz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":12,"RawContent":null},{"Id":"963815851416834049","CreatedAt":"2018-02-14T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":21,"RawContent":null},{"Id":"963459759562199040","CreatedAt":"2018-02-13T17:08:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/mH5kYVNNvT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":18,"RawContent":null},{"Id":"963145186711830528","CreatedAt":"2018-02-12T20:18:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/ZG5Y2IRf3r","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":20,"RawContent":null},{"Id":"963094603065937920","CreatedAt":"2018-02-12T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the open source suite of SmartHotel360 reference #XamarinForms, Xamarin.iOS, and… https://t.co/5bwxwaCxyV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":125,"FavoriteCount":42,"RawContent":null},{"Id":"962828622875815936","CreatedAt":"2018-02-11T23:20:06+00:00","UserScreenname":"xamarinhq","Text":"Our own @jamesmontemagno shows you how to leverage the #Xamarin Live Player with your iOS applications:… https://t.co/389iYhDt9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":87,"FavoriteCount":41,"RawContent":null},{"Id":"962480803748999168","CreatedAt":"2018-02-11T00:18:00+00:00","UserScreenname":"xamarinhq","Text":"Get a quick overview of the latest updates to the Xamarin iOS designer, including a new toolbar for managing trait… https://t.co/eJkPovjm0G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":16,"RawContent":null},{"Id":"962049464084062208","CreatedAt":"2018-02-09T19:44:00+00:00","UserScreenname":"xamarinhq","Text":"This week on the @XamarinPodcast, @JamesMontemagno and @pierceboggan talk rapid UI prototyping with Ink to Code, me… https://t.co/FTH39xKI1K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":19,"RawContent":null},{"Id":"962005422142967809","CreatedAt":"2018-02-09T16:49:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0Fi4MU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":94,"FavoriteCount":34,"RawContent":null},{"Id":"961696657250443269","CreatedAt":"2018-02-08T20:22:05+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/pUb6M2pQLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":33,"RawContent":null},{"Id":"961642559880749056","CreatedAt":"2018-02-08T16:47:07+00:00","UserScreenname":"xamarinhq","Text":"Expand your app horizons by building your first #tvOS app with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/utcp887bgL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"961326059965870080","CreatedAt":"2018-02-07T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar with @XamarinU on building your first intelligent app with #Xamarin and Micro… https://t.co/lEsIH9mU1Q","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":41,"RawContent":null},{"Id":"961281908750635008","CreatedAt":"2018-02-07T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/48PO2bI3Mt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":18,"RawContent":null},{"Id":"960921785641455616","CreatedAt":"2018-02-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/OXIdlOPZyn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":13,"RawContent":null},{"Id":"960588991375511552","CreatedAt":"2018-02-05T19:00:37+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/sIDGF4Kcp0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":255,"FavoriteCount":129,"RawContent":null},{"Id":"960557379606794248","CreatedAt":"2018-02-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":14,"RawContent":null},{"Id":"960308752409923584","CreatedAt":"2018-02-05T00:27:02+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/ChPi6XDAGH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":18,"RawContent":null},{"Id":"959520671754850304","CreatedAt":"2018-02-02T20:15:29+00:00","UserScreenname":"xamarinhq","Text":"Make deploying to an iOS or tvOS device easier with Wireless Deployment and our new Unlock Device Alert: https://t.co/DKgtjGzPfo","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":48,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2018-02-16T05:30:36.5472964Z","RunDurationInMilliseconds":3920}