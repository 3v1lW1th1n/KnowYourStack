{"Data":{"Blog":{"FeedItems":[{"Title":"Diagnosing Errors on your Cloud Apps","PublishedOn":"2018-02-07T16:00:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most frustrating experiences is when you have your app working on your local machine, but when you publish it it’s inexplicably failing. Fortunately, Visual Studio provides handy features...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/diagnosing-errors-on-your-cloud-apps/","RawContent":null},{"Title":"A new experiment: Browser-based web apps with .NET and Blazor","PublishedOn":"2018-02-06T18:00:53+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today I’m excited to announce a new experimental project from the ASP.NET team called Blazor. Blazor is an experimental web UI framework based on C#, Razor, and HTML that runs in the browser via...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/06/blazor-experimental-project/","RawContent":null},{"Title":"Learn how to do Image Recognition with Cognitive Services and ASP.NET","PublishedOn":"2018-02-05T21:27:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With all the talk about artificial intelligence (AI) and machine learning (ML) doing crazy things, it’s easy to be left wondering, “what are practical ways I can use this today?&#8221; It turns out...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/05/learn-how-to-do-image-recognition-with-cognitive-services-and-asp-net/","RawContent":null},{"Title":"ASP.NET Core 2.1 roadmap","PublishedOn":"2018-02-02T18:00:52+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Five months ago, we shipped ASP.NET Core 2.0 as a foundational release for our high performance, cross-platform web framework for .NET and .NET Core. Since then we have been hard at work to deliver...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/","RawContent":null},{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7213933917","Type":"IssuesEvent","CreatedAt":"2018-02-07T23:34:44","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/2319","RelatedDescription":"Reopened issue \"Remove duplicate header names and method constants\" (#2319) at aspnet/Home","RelatedBody":"_From @Tratcher on Monday, October 9, 2017 12:13:16 PM_\r\n\r\nhttps://github.com/aspnet/CORS/blob/df571655acafb39703935a71a977feec023977d0/src/Microsoft.AspNetCore.Cors/Infrastructure/CorsConstants.cs contains header and method string constants that are duplicated with constants in HttpAbstractions.\r\n\r\nSee\r\nhttps://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.Net.Http.Headers/HeaderNames.cs\r\nhttps://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNetCore.Http.Abstractions/HttpMethods.cs\r\n\r\nThe public constants can redirect for now. E.g. `public static readonly string AccessControlMaxAge = HeaderNames.AccessControlMaxAge;`\r\n\r\nThe internal lists can also be updated to use the HttpAbstractions constants.\r\nhttps://github.com/aspnet/CORS/blob/df571655acafb39703935a71a977feec023977d0/src/Microsoft.AspNetCore.Cors/Infrastructure/CorsConstants.cs#L66-L89\r\n\r\n_Copied from original issue: aspnet/CORS#130_"},{"Id":"7213920673","Type":"IssuesEvent","CreatedAt":"2018-02-07T23:31:00","Actor":"mkArtakMSFT","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2319","RelatedDescription":"Closed issue \"Remove duplicate header names and method constants\" (#2319) at aspnet/Home","RelatedBody":"_From @Tratcher on Monday, October 9, 2017 12:13:16 PM_\r\n\r\nhttps://github.com/aspnet/CORS/blob/df571655acafb39703935a71a977feec023977d0/src/Microsoft.AspNetCore.Cors/Infrastructure/CorsConstants.cs contains header and method string constants that are duplicated with constants in HttpAbstractions.\r\n\r\nSee\r\nhttps://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.Net.Http.Headers/HeaderNames.cs\r\nhttps://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNetCore.Http.Abstractions/HttpMethods.cs\r\n\r\nThe public constants can redirect for now. E.g. `public static readonly string AccessControlMaxAge = HeaderNames.AccessControlMaxAge;`\r\n\r\nThe internal lists can also be updated to use the HttpAbstractions constants.\r\nhttps://github.com/aspnet/CORS/blob/df571655acafb39703935a71a977feec023977d0/src/Microsoft.AspNetCore.Cors/Infrastructure/CorsConstants.cs#L66-L89\r\n\r\n_Copied from original issue: aspnet/CORS#130_"},{"Id":"7213831981","Type":"IssuesEvent","CreatedAt":"2018-02-07T23:07:16","Actor":"dougbu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2684","RelatedDescription":"Closed issue \"Make `BufferingHelper` public\" (#2684) at aspnet/Home","RelatedBody":"_From @dougbu on Thursday, November 9, 2017 4:27:35 PM_\r\n\r\nThis class is currently pub-internal. An implementation is necessary when reading the request body multiple times. For example, ASP.NET Core WebHooks includes resource filters that calculate hashes of body content. They use the following helper to ensure this is safe:\r\nhttps://github.com/aspnet/WebHooks/blob/be8571953a0124c0877f777e8fb5bb17329204ab/src/Microsoft.AspNetCore.WebHooks.Receivers/Filters/WebHookVerifyBodyContentFilter.cs#L94-L106\r\n\r\nFor reference: https://github.com/aspnet/HttpAbstractions/blob/3e3772eecd4cc57399c28a3f899e6b0406ef2e1b/src/Microsoft.AspNetCore.Http/Internal/BufferingHelper.cs\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#963_"},{"Id":"7212659003","Type":"IssuesEvent","CreatedAt":"2018-02-07T19:01:59","Actor":"benaadams","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2858","RelatedDescription":"Opened issue \"StringTokenizer should be a readonly struct\" (#2858) at aspnet/Home","RelatedBody":"It is an immutable struct with no changeable fields post construction and marking it as `readonly struct` will make it work more efficiently with the `in` parameter modifier"},{"Id":"7212658802","Type":"IssuesEvent","CreatedAt":"2018-02-07T19:01:56","Actor":"benaadams","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2857","RelatedDescription":"Opened issue \"StringSegment should be a readonly struct\" (#2857) at aspnet/Home","RelatedBody":"It is an immutable struct with no changeable fields post construction and marking it as `readonly struct` will make it work more efficiently with the `in` parameter modifier"},{"Id":"7212658594","Type":"IssuesEvent","CreatedAt":"2018-02-07T19:01:54","Actor":"benaadams","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2856","RelatedDescription":"Opened issue \"StringValues should be a readonly struct\" (#2856) at aspnet/Home","RelatedBody":"It is an immutable struct with no changeable fields post construction and marking it as `readonly struct` will make it work more efficiently with the `in` parameter modifier"},{"Id":"7212495512","Type":"IssuesEvent","CreatedAt":"2018-02-07T18:29:31","Actor":"riiight","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2855","RelatedDescription":"Opened issue \"Documentation for default headers for StaticFiles in ASP.NET Core 2.0\" (#2855) at aspnet/Home","RelatedBody":"In ASP.NET Core 1.x, static files were being cached automatically on browsers (I believe via the eTag response header). When I upgraded to ASP.NET Core 2.x, I noticed that none of my files (e.g. .images, .woff) were being cached anymore. It looks like many more response headers are now being returned by 2.x's StaticFiles by default. Included in them are:\r\n\r\n- Cache-Control:no-cache, no-store\r\n- Pragma:no-cache\r\n\r\nI manually removed these in order to return my static files to their 1.x state (i.e. cached).\r\n\r\nI'm writing this issue because:\r\n\r\n- I feel there should either be better documentation on the default response headers added to StaticFiles.\r\n- Solving this took some investigation and I feel this may help someone else."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7213903380","Type":"PullRequestEvent","CreatedAt":"2018-02-07T23:26:14","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1381","RelatedDescription":"Merged pull request \"Add TSLint rule file and fix all violations\" (#1381) at aspnet/SignalR","RelatedBody":"Biggest things to look for are accidentally making functions public that shouldn't be and of course behavior changes (which there shouldn't be)"},{"Id":"7213873862","Type":"IssuesEvent","CreatedAt":"2018-02-07T23:18:04","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/211","RelatedDescription":"Closed issue \"Simplified connection API\" (#211) at aspnet/SignalR","RelatedBody":"The EndPoint API is a model where OnConnectedAsync is called for each connection. The end point represents a binding to which all connections \"connect\". In this model, storing per connection state needs to be done in connection metadata. Users also need to write the receive loop manually which can be non trivial (especially handling exceptions). The proposal is to offer a simplified API to solve the above problems:\r\n\r\n1. Each ConnectionHandler has a 1:1 mapping to the connection itself. This means you can store per connection state in fields of that object.\r\n2. The receive loop is implemented and it handles all of the cases (errors etc).\r\n\r\nHere's an example of what it could look like:\r\n\r\n```C#\r\npublic class Startup\r\n{\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services.AddSockets();\r\n    }\r\n\r\n    public void Configure(IApplicationBuilder app, ILoggerFactory loggerFactory)\r\n    {\r\n        loggerFactory.AddConsole(LogLevel.Debug);\r\n\r\n        app.UseFileServer();\r\n\r\n        app.UseSockets(routes =>\r\n        {\r\n            routes.MapConnectionHandler<EchoConnectionHandler>(\"/echo\");\r\n        });\r\n    }\r\n}\r\n\r\npublic class EchoConnectionHandler : ConnectionHandler\r\n{\r\n    public override Task OnMessageAsync(Message message)\r\n    {\r\n        return Connection.Transport.Output.WriteAsync(message);\r\n    }\r\n}\r\n\r\npublic abstract class ConnectionHandler\r\n{\r\n    public Connection Connection { get; internal set; }\r\n\r\n    public virtual Task OnConnectedAsync() => Task.CompletedTask;\r\n    public virtual Task OnDisconnectedAsync() => Task.CompletedTask;\r\n    public abstract Task OnMessageAsync(Message message);\r\n}\r\n```"},{"Id":"7213242576","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:59:18","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/404","RelatedDescription":"Closed issue \"SSE Prefix/Suffix Checking Optimizations\" (#404) at aspnet/SignalR","RelatedBody":"Since we are always expecting and checking for a \"data: \" prefix in our SSE message lines we can optimize this check by converting to longs and comparing those. \r\nWe can also do these with checking for the final \"\\r\\n\" end of message identifier.\r\nThis should probably happen after initial bench marking happens. "},{"Id":"7213240194","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:58:49","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/397","RelatedDescription":"Closed issue \"Remove 'ContinueWith' from the client logic\" (#397) at aspnet/SignalR","RelatedBody":"There are unnecessary and make the code uglier than it needs to be."},{"Id":"7213201597","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:50:45","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/776","RelatedDescription":"Closed issue \"Implement Authentication redirect for cookies\" (#776) at aspnet/SignalR","RelatedBody":"Today when we issue the challenge from SignalR a 401 is correctly returned with a `Location` response header with the redirect URI. We should issue a client side redirect to get to the login page. Here's what this looks like:\r\n\r\n```\r\nHTTP/1.1 401 Unauthorized\r\nLocation: http://localhost:57562/Account/Login?ReturnUrl=%2Fchat\r\nServer: Kestrel\r\nX-SourceFiles: =?UTF-8?B?QzpcVXNlcnNcZGZvd2xlclxEb2N1bWVudHNcR2l0SHViXFNpZ25hbFJcc2FtcGxlc1xDaGF0U2FtcGxlXGNoYXQ=?=\r\nX-Powered-By: ASP.NET\r\nDate: Sun, 27 Aug 2017 21:50:30 GMT\r\nContent-Length: 0\r\n```\r\n\r\nWe should also consider adding a client side hook to allow the client to handle this (maybe the client wants to pop up a client side UI to login rather than redirecting)."},{"Id":"7213198228","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:50:06","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/705","RelatedDescription":"Closed issue \"Redis Tests\" (#705) at aspnet/SignalR","RelatedBody":"We need tests for our Redis scenarios. Just found this issue https://github.com/aspnet/SignalR/issues/704 which slid by.\r\nWe need a testing strategy. Redis needs some love"},{"Id":"7213190766","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:48:30","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/368","RelatedDescription":"Closed issue \"Clean up server side logging\" (#368) at aspnet/SignalR","RelatedBody":"We need to make some adjustments to logging on the server:\r\n\r\n- There needs to be an easy way to look at the logs for a single connection id. Today we don't consistently specify the connection id as a structured logging argument, and we should be doing that.\r\n\r\n- We should also be using pre-compiled templates (see https://github.com/aspnet/KestrelHttpServer/blob/6a66323a99f92c3e4a926d362e55542193a3ed44/src/Microsoft.AspNetCore.Server.Kestrel.Core/Internal/Infrastructure/KestrelTrace.cs).\r\n"},{"Id":"7213183399","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:46:55","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1407","RelatedDescription":"Closed issue \"Remote Access\" (#1407) at aspnet/SignalR","RelatedBody":"when i try to connect from another pc or phone i'm getting this error \r\nTransports.js:28 WebSocket connection to 'ws://10.0.0.52:3000/patient?signalRTokenHeader=eyJhbGciOiJSUzI1NiIsImtpZCI6ImQ2M2FlNWZiMTExNjlhMTMwMDI2YWFiNGVhOGVkZDNjIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MTc2NjAwNTQsImV4cCI6MTUxNzc0NjQ1NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAxIiwiYXVkIjpbImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMS9yZXNvdXJjZXMiLCJhcGkxIl0sImNsaWVudF9pZCI6ImNsaWVudCIsInN1YiI6IjU3ZDNiOTQ1LTQwZWItNGM4My05MGYyLTIwMDU2YmJmNzAwNyIsImF1dGhfdGltZSI6MTUxNzY2MDA1NCwiaWRwIjoibG9jYWwiLCJzY29wZSI6WyJhcGkxIl0sImFtciI6WyJwd2QiXX0.S6DHS24o60lsFewsvbcyV7j0wxo_vAf4N3ixg4fG_S3rWRMXmrkkHEdHjokVTkXNT1_07zzcehmmWyZdvDCpEsxwhX1mKbZdsZUFT0S8y8IJYsDXJlxw7exZOZOPW3Xp9HeHkfVOGKhDfwzKbHLgBzRpclb8AvMWe-4lAm0snjQTvroRJPSu5ifE8Aqv2qZr5ze_V4tSWX70Ly9ziZyGRGRMDzfyY4mr9Z2yDIYnHOHhBOqlrI4xCp340dZnSaCBLjC7jtI1wSu5nNuQEgQZtC0y5pH5NMi1Sxu7AMaAq4qNY-ivkHiIqVtu7IZrmeJD9HEWEjywVQh62T-Xe3wt2g&id=b1842c02-a9e4-40e7-91de-cdd8f2b244e6' failed: Error during WebSocket handshake: Unexpected response code: 504\r\nPromise @ Transports.js:28\r\nt @ polyfills.js:3\r\nconnect @ Transports.js:26\r\n(anonymous) @ HttpConnection.js:54\r\nfulfilled @ HttpConnection.js:6\r\nt.invoke @ polyfills.js:3\r\nonInvoke @ core.js:4629\r\nt.invoke @ polyfills.js:3\r\nr.run @ polyfills.js:3\r\n(anonymous) @ polyfills.js:3\r\nt.invokeTask @ polyfills.js:3\r\nonInvokeTask @ core.js:4620\r\nt.invokeTask @ polyfills.js:3\r\nr.runTask @ polyfills.js:3\r\no @ polyfills.js:3\r\ne.invokeTask @ polyfills.js:3\r\np @ polyfills.js:2\r\nv @ polyfills.js:2\r\nLoggers.js:17 Error: Failed to start the connection. undefined"},{"Id":"7213174171","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:45:03","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/255","RelatedDescription":"Closed issue \"Add AddHub methods\" (#255) at aspnet/SignalR","RelatedBody":"Do this in the same PR or at the same time as #254\r\n```c#\r\nAddHub<THub>()\r\nAddHub<THub, TClient>()\r\nAddHub<THub>(HubOptions)\r\nAddHub<THub, TClient>(HubOptions)\r\n```"},{"Id":"7213172820","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:44:45","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/254","RelatedDescription":"Closed issue \"Add HubOptions\" (#254) at aspnet/SignalR","RelatedBody":"HubOptions will contain EndPoint options.\r\n\r\nInitial set of thoughts for the options:\r\n- [ ] Verbose error for hub methods\r\n- [ ] Adding/Removing supported protocols?\r\n- [x] Negotiate Timeout?\r\n- [X] JsonSerializerSettings\r\n\r\n"},{"Id":"7213169833","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:44:10","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1422","RelatedDescription":"Opened issue \"MsgPack encoding of DateTime is incorrect\" (#1422) at aspnet/SignalR","RelatedBody":"MsgPack-CLI encodes DateTime as a uint 64 but MsgPack has a spec-provided type for DateTime (the Timestamp extension type). This appears to be a limitation of the library: msgpack/msgpack-cli#246"},{"Id":"7213147280","Type":"IssuesEvent","CreatedAt":"2018-02-07T20:39:18","Actor":"muratg","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1366","RelatedDescription":"Closed issue \"MsgPack Protocol Tidy-up\" (#1366) at aspnet/SignalR","RelatedBody":"There are some things in the MsgPack Protocol I want to revisit:\r\n\r\n1. It uses Protobuf's [`varint`](https://developers.google.com/protocol-buffers/docs/encoding#varints) for framing the protocol. This does save some bytes (only generally 1-2 bytes though), but it seems simpler to just use MsgPack's own [`bin`](https://github.com/msgpack/msgpack/blob/master/spec.md#bin-format-family) type. This would allow clients to use the existing MsgPack decoding libraries they are using and would not require an additional decoder layer. It may also be possible to avoid the outer framing entirely, but it would require the parser to be able to pause and resume parsing when more data is available. The end of a message is clearly defined in MsgPack (unlike ProtoBuf) but the exact byte length of a message isn't known until the end of parsing.\r\n\r\n2. MsgPack-CLI encodes DateTime as a `uint 64` but MsgPack has a spec-provided type for DateTime (the `Timestamp` extension type). This appears to be a limitation of the library: https://github.com/msgpack/msgpack-cli/issues/246\r\n\r\n3. I'm not sure I like how CompletionMessages are encoded using a \"result type\" enum. Not sure what I like better yet though. It's not bad, I just feel like introducing a new enumeration shouldn't be necessary.\r\n\r\n4. In adding headers (#1350), I'm wondering if it might be better to use two nested arrays. Currently the entire message is a single array, where each array has the same first two items `[headers, type, ...`. I wonder if a better pattern would be for all messages to have the same high-level format: `[headers, type, payload]` where `payload` is an array specific to the type.\r\n\r\nSure I'll find more as I go though implementing #1350 :)"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7214231423","Type":"IssuesEvent","CreatedAt":"2018-02-08T01:07:16","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6934","RelatedDescription":"Closed issue \"Find ASP.NET Core 2 Razor Pages in another assembly\" (#6934) at aspnet/Mvc","RelatedBody":"Hi, I want to locate My Project Razor Pages in another assembly. \r\nfor doing this I write following code:\r\n\r\n```\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            var adminAssembly = Assembly.Load(new AssemblyName(\"App\"));\r\n            services.AddMvc().AddApplicationPart(adminAssembly).AddRazorOptions(options =>\r\n            {\r\n                var previous = options.CompilationCallback;\r\n                options.CompilationCallback = context =>\r\n                {\r\n                    previous?.Invoke(context);\r\n\r\n                    context.Compilation = context.Compilation.AddReferences(\r\n                        MetadataReference.CreateFromFile(typeof(dodo).Assembly.Location));\r\n                };\r\n            });\r\n\r\n            services.Configure<RazorViewEngineOptions>(options =>\r\n            {\r\n                options.FileProviders.Add(new EmbeddedFileProvider(Assembly.Load(\"App\")));\r\n                options.FileProviders.Add(new PhysicalFileProvider(@\"C:\\Users\\soheil\\Documents\\Visual Studio 2017\\Projects\\WebApplication5\\App\"));\r\n            });\r\n        }\r\n```\r\nmy solution:\r\n![devenv_2017-10-10_18-44-26](https://user-images.githubusercontent.com/22220356/31394411-1c2d5ed0-adeb-11e7-9cfb-c5ce7f903d05.png)\r\n\r\nwhen running `localhost:5000/SameTodo` Get Followig Error:\r\n\r\n> One or more compilation references are missing. Ensure that your project is referencing 'Microsoft.NET.Sdk.Web' and the 'PreserveCompilationContext' property is not set to false.\r\n\r\nstack:\r\n```\r\nThe type or namespace name 'SameTodoModel' could not be found (are you missing a using directive or an assembly reference?)\r\n+\r\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SameTodoModel> Html { get; private set; }\r\nThe type or namespace name 'SameTodoModel' could not be found (are you missing a using directive or an assembly reference?)\r\n+\r\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SameTodoModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SameTodoModel>)PageContext?.ViewData;\r\nThe type or namespace name 'SameTodoModel' could not be found (are you missing a using directive or an assembly reference?)\r\n+\r\n        public SameTodoModel Model => ViewData.Model;\r\nThe type or namespace name 'SameTodoModel' could not be found (are you missing a using directive or an assembly reference?)\r\n+\r\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SameTodoModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SameTodoModel>)PageContext?.ViewData;\r\n```\r\n\r\nand set `PreserveCompilationContext` to false but now worked how can I solve this problem?\r\nalso, ask this in [StackOverflow](https://stackoverflow.com/questions/46670806/locate-razor-pages-in-another-assembly)\r\n\r\n"},{"Id":"7213715183","Type":"IssuesEvent","CreatedAt":"2018-02-07T22:39:38","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7321","RelatedDescription":"Closed issue \"Add HtmlHelper to MVC Controller like the UrlHelper\" (#7321) at aspnet/Mvc","RelatedBody":"I have a dynamic views which are assembled together at runtime. example a string like \r\n\r\n\"`<div>[PlaceHolder1]</div>Hello World<div>[PlaceHolder2]</div>`\"\r\nin which I loop through the string and replace elements in square brackets with a razor view using Html.Partial()\r\n\r\nI have been able to get this functionality to work but think it should be added to the framework.\r\n\r\nBelow is my implementation to create a HTMLHelper in a controller\r\n\r\n\r\n```\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.Infrastructure;\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\nusing Microsoft.AspNetCore.Mvc.Rendering;\r\nusing Microsoft.AspNetCore.Mvc.Routing;\r\nusing Microsoft.AspNetCore.Mvc.ViewEngines;\r\nusing Microsoft.AspNetCore.Mvc.ViewFeatures;\r\nusing Microsoft.AspNetCore.Mvc.ViewFeatures.Internal;\r\nusing Microsoft.Extensions.Options;\r\nusing System.IO;\r\nusing System.Text.Encodings.Web;\r\nusing System.Threading.Tasks;\r\n\r\n\r\n    public class HelperGenerator\r\n    {\r\n        private readonly IHtmlGenerator _htmlGenerator;\r\n        private readonly ICompositeViewEngine _compositeViewEngine;\r\n        private readonly IModelMetadataProvider _modelMetadataProvider;\r\n        private readonly IViewBufferScope _viewBufferScope;\r\n        private readonly IActionContextAccessor _actionContextAccessor;\r\n        private readonly HtmlHelperOptions _htmlHelperOptions;\r\n\r\n        public HelperGenerator(IHtmlGenerator htmlGenerator, ICompositeViewEngine compositeViewEngine, IModelMetadataProvider modelMetadataProvider, IViewBufferScope viewBufferScope, IActionContextAccessor actionContextAccessor, IOptions<MvcViewOptions> options)\r\n        {\r\n            _htmlGenerator = htmlGenerator;\r\n            _compositeViewEngine = compositeViewEngine;\r\n            _modelMetadataProvider = modelMetadataProvider;\r\n            _viewBufferScope = viewBufferScope;\r\n            _actionContextAccessor = actionContextAccessor;\r\n            _htmlHelperOptions = options.Value.HtmlHelperOptions;\r\n        }\r\n        public IHtmlHelper HtmlHelper(ViewDataDictionary ViewData, ITempDataDictionary TempData)\r\n        {\r\n            var helper = new HtmlHelper(_htmlGenerator, _compositeViewEngine, _modelMetadataProvider, _viewBufferScope, HtmlEncoder.Default, UrlEncoder.Default);\r\n            var viewContext = new ViewContext(_actionContextAccessor.ActionContext,\r\n               new FakeView(),\r\n               ViewData,\r\n               TempData,\r\n               TextWriter.Null,\r\n               _htmlHelperOptions);\r\n            helper.Contextualize(viewContext);\r\n            return helper;\r\n        }\r\n        private class FakeView : IView\r\n        {\r\n            public string Path => \"View\";\r\n\r\n            public Task RenderAsync(ViewContext context)\r\n            {\r\n                return Task.FromResult(0);\r\n            }\r\n        }\r\n    }\r\n```"},{"Id":"7213569311","Type":"IssuesEvent","CreatedAt":"2018-02-07T22:07:27","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7335","RelatedDescription":"Closed issue \"Is model validation attributes ordered?\" (#7335) at aspnet/Mvc","RelatedBody":"I want to know the sequence of the validation.\r\nFor instance:\r\n```\r\n[Phone]\r\n[StringLength(13)]\r\npublic string PhoneNumber{get;set;}\r\n```\r\nAnd the `PhoneNumber` get a value `\"abc\"`. \r\nAs i known, the attributes execution is randomized. So if it'll validate whether the PhoneNumber is a Phone, or validate the PhoneNumber's length equal 13 first?\r\n"},{"Id":"7212646355","Type":"PullRequestEvent","CreatedAt":"2018-02-07T18:59:36","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7339","RelatedDescription":"Opened pull request \"Use new `HttpRequest.EnableBuffering()` extension method\" (#7339) at aspnet/Mvc","RelatedBody":"- aspnet/Home#2684\r\n- update dependencies to pick up latest HttpAbstractions"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7213801509","Type":"IssuesEvent","CreatedAt":"2018-02-07T22:59:36","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1620","RelatedDescription":"Opened issue \"[IdentityUI]: Experience for using a custom ApplicationUser : IdentityUser has room for improvement\" (#1620) at aspnet/Identity","RelatedBody":"Writing the release verification plan for Identity that involves using a custom ApplicationUser type with additional properties. To do this, it seems like I have to override the following files in my application:\r\n\r\n* https://github.com/aspnet/Identity/blob/dev/samples/IdentitySample.DefaultUI/Areas/Identity/Pages/_ViewImports.cshtml\r\n* https://github.com/aspnet/Identity/blob/dev/samples/IdentitySample.DefaultUI/Areas/Identity/Pages/Account/Register.cshtml\r\n* https://github.com/aspnet/Identity/blob/dev/samples/IdentitySample.DefaultUI/Areas/Identity/Pages/Account/Register.cshtml.cs\r\n* https://github.com/aspnet/Identity/blob/dev/samples/IdentitySample.DefaultUI/Areas/Identity/Pages/Account/Manage/Index.cshtml\r\n* https://github.com/aspnet/Identity/blob/dev/samples/IdentitySample.DefaultUI/Areas/Identity/Pages/Account/Manage/Index.cshtml.cs\r\n\r\nThere's a fair bit of knowing the details of how things Identity UI work once you get to these many files. In addition, we'd need to provide guidance for users that customized these pages if we do update these files in our package. If this is a fairly commonly scenario, perhaps the experience in using a custom user this should be first class.\r\n\r\n\r\n"},{"Id":"7213661108","Type":"IssuesEvent","CreatedAt":"2018-02-07T22:27:29","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1619","RelatedDescription":"Opened issue \"[IdentityUI]: Consider showing a landing page that says account was successfully deleted before redirecting to the home page\" (#1619) at aspnet/Identity","RelatedBody":"When deleting personal data succeeds, the page immediately redirects to the site root allowing no opportunity to show a success message. We should consider showing a success page (*Sorry to see you go 😦*) that redirects to the site root. "},{"Id":"7213576752","Type":"IssuesEvent","CreatedAt":"2018-02-07T22:09:05","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1618","RelatedDescription":"Opened issue \"Consider returning a 404 in the DownloadPersonalData.OnGet\" (#1618) at aspnet/Identity","RelatedBody":"We render the DownloadPersonalData page, but it has no content. The page is meant to only have an OnPost handler which is reached via the Personal Data page. Here's what you see if you visit /Identity/Account/Manage/DownloadPersonalData from the browser:\r\n\r\n![image](https://user-images.githubusercontent.com/174281/35944193-70e478a4-0c10-11e8-9d1d-c3dc39642f6a.png)\r\n"},{"Id":"7212891409","Type":"IssuesEvent","CreatedAt":"2018-02-07T19:47:27","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1617","RelatedDescription":"Opened issue \"Razor Pages individual auth template page LoginModel missing    [AllowAnonymous]\" (#1617) at aspnet/Identity","RelatedBody":"_From @Rick-Anderson on January 18, 2018 4:51_\n\nTo Repo:\r\n\r\n1.  Create a RP (Razor Pages) app with individual user accounts.\r\n1.  Add  [RequireAuthenticatedUser](https://github.com/Rick-Anderson/QS2_long2/blob/master/QS2long/Startup.cs#L46-L59) to StartUp.\r\n1.  Add [AllowAnonymous] to *Pages/Index.cshtml.cs*\r\n\r\nRun the app. Tap Register/Login/About and it trys to redirect you to the Login page, but the LoginModel doesn't allow anon, so it redirects recursively and results in the following error:\r\n\r\nHTTP Error 404.15 - Not Found\r\nThe request filtering module is configured to deny a request where the query string is too long.\r\nMost likely causes:\r\n•         Request filtering is configured on the Web server to deny the request because the query string is too long.\r\n\r\n[Repo app here.](https://github.com/Rick-Anderson/QS2_long2)\r\n\r\nFix is to add `[AllowAnonymous]` to the Login/Register `PageModel`.\r\n\r\n```\r\n[AllowAnonymous]\r\n public class LoginModel : PageModel\r\n```\r\n\n\n_Copied from original issue: aspnet/templating#238_"},{"Id":"7207231723","Type":"PullRequestEvent","CreatedAt":"2018-02-06T21:27:54","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1351","RelatedDescription":"Merged pull request \"TFA cookies now validate security stamp\" (#1351) at aspnet/Identity","RelatedBody":"Part of https://github.com/aspnet/Identity/issues/1342\r\n\r\nWhen security stamp is updated, the TFA remember me cookie will be invalidated\r\n\r\n@ajcvickers @Tratcher @blowdart "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7213879188","Type":"IssuesEvent","CreatedAt":"2018-02-07T23:19:33","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1673","RelatedDescription":"Closed issue \"IHttpSendFileFeature provided by Transport\" (#1673) at aspnet/KestrelHttpServer","RelatedBody":"Sending files can be offloaded to the kernel. The Transport can expose this as a sendfile feature.\r\n\r\nSome implementations support encrypting (BSD sendfile, Http.Sys) while others do not (Linux sendfile, corefx Socket).\r\n\r\nhttps://github.com/aspnet/KestrelHttpServer/issues/1593 tracks Transport independent implementation. \r\n\r\ncc @davidfowl @Tratcher @Drawaes @benaadams "},{"Id":"7213210729","Type":"PullRequestEvent","CreatedAt":"2018-02-07T20:52:39","Actor":"Redouane64","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2304","RelatedDescription":"Opened pull request \"Include limits default values in intellisense comments.\" (#2304) at aspnet/KestrelHttpServer","RelatedBody":"Fixes #1972 "},{"Id":"7212734348","Type":"IssuesEvent","CreatedAt":"2018-02-07T19:16:55","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2303","RelatedDescription":"Opened issue \"IFeatureCollection.Get<TFeature> should be implemented via generic rather than typeof\" (#2303) at aspnet/KestrelHttpServer","RelatedBody":"Its currently implemented as a `typeof` wrapper over `(TFeature)Get(typeof(TFeature))` which deteriorates more rapidly for the `if``else if` lookup chain that implementing with generics does.  "},{"Id":"7212699410","Type":"IssuesEvent","CreatedAt":"2018-02-07T19:10:03","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2302","RelatedDescription":"Opened issue \"TryGetAsciiString can be streamlined and vectorized\" (#2302) at aspnet/KestrelHttpServer","RelatedBody":"Should be more efficient and less messy"},{"Id":"7212683402","Type":"IssuesEvent","CreatedAt":"2018-02-07T19:06:52","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2301","RelatedDescription":"Opened issue \"StringValues should always be passed as in (and a readonly struct)\" (#2301) at aspnet/KestrelHttpServer","RelatedBody":"This makes it more efficient by skipping the copy before passing it by reference; which is what happens with pass by value.\r\n\r\nHowever it should also be marked as a `readonly struct` https://github.com/aspnet/Home/issues/2856"},{"Id":"7212569166","Type":"PullRequestEvent","CreatedAt":"2018-02-07T18:44:19","Actor":"markuspalme","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2300","RelatedDescription":"Opened pull request \"Removed automatic Upgrade header logic from UpgradeAsync (#2086).\" (#2300) at aspnet/KestrelHttpServer","RelatedBody":"Fixes #2086."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7187586381","Type":"IssuesEvent","CreatedAt":"2018-02-02T06:15:37","Actor":"simonpbond","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/292","RelatedDescription":"Closed issue \"Publish ASP.NET 5 Web Application to remote IIS \" (#292) at aspnet/Tooling","RelatedBody":"In Visual Studio 2015, I can successfully preview / publish to a remote IIS server with a 4.6 Web application. However, publishing fails when using an ASP.NET 5 template / web applications, it will not even provide a preview.\n\nIs it possible to publish an ASP.NET 5 web application at the current time using Visual Studio 2015 / Publish to a remote IIS server?\n\nIf so, is there any instructions on doing this? (not for local IIS).\n"},{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"},{"Id":"7107011065","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:28:07","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/522","RelatedDescription":"Closed issue \"Asp.Net project with Build platform x86 \" (#522) at aspnet/Tooling","RelatedBody":"Here are threads in CLI and MVC repo https://github.com/aspnet/Mvc/issues/4663 and  https://github.com/dotnet/cli/issues/3091 with no real answers. Thought it would be VS Tooling bug.\n\nI have a asp.net project that reference a native dll via Nuget package. This native DLL is only build for x86. I've changed my project.json to set buildOptions\n \"platform\": \"x86\"\n\nBut when I build this asp.net project via visual studio, it creates \"bin\\Debug\\net46\\win7-x64\" as oppose to \"win7-x86\". If I run the resulting \".exe\" file it would crash.\n\nI've tried to use \"dotnet build -r win7-x86\" and it would create the right folder \"bin\\Debug\\net46\\win7-x86\" and then I can run the \".exe\" file.\n\nStill cannot test the application in x86 mode.\n\nThen I've uninstalled Microsoft .NET Code 1.0.0 RC2 - SDK Preview 1 (x64) which was installed via \"VS 2015 Tooling Preview\" and installed the \"x86\" one, and everything seems to be working.\n\nI think it is not right. I should be have the option to install x64 and x86 and then via that buildOption I should be able to tell dotnet how to compile. Just like MSBuild and ASP.Net projects where I set the build options from Project Properties.\n"},{"Id":"7106985478","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:22:30","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/557","RelatedDescription":"Closed issue \"Question: Typescript with ASP.NET Core RC2\" (#557) at aspnet/Tooling","RelatedBody":"Is it possible to compile Typescript code directly in Visual Studio 2015 using the ASP.NET Core RC2 project templates?  This used to work in RC1, but since updating to RC2 I can't get Typescript and ASP.NET Core working together simultaneously.  If I create a .NET Core project (e.g., **ASP.NET Core Web Application (.NET Core)** template), then I don't see \"Typescript Build\" properties page in Project Properties (the only property pages available are Application, Build, Debug).  I can create a Typescript project (e.g., **HTML Application with Typescript** template, which uses the csproj format), and Typescript works as expected, but of course I can't use .NET Core in that project.\n\nI have confirmed that my .xproj file does include a reference to Microsoft.DotNet.Web.targets, which I understand is supposed to bring in Typescript support:\n\n```\n<Import Project=\"$(VSToolsPath)\\DotNet.Web\\Microsoft.DotNet.Web.targets\"\n        Condition=\"'$(VSToolsPath)' != ''\" />\n```\n\nIs the built-in Typescript compilation no longer supported with RC2, or am I missing something somewhere?\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7191689127","Type":"IssuesEvent","CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Opened issue \"ASP.NET Core 2.1 \" (#288) at aspnet/Announcements","RelatedBody":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/7193)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846"},{"Id":"7168812814","Type":"IssuesEvent","CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Opened issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287) at aspnet/Announcements","RelatedBody":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, and it now depends on *Microsoft.AspNetCore.App*, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"961390822993399809","CreatedAt":"2018-02-08T00:06:48+00:00","UserScreenname":"aspnet","Text":"Did you miss this week's #ASPNET Community Standup (with the latest news on Blazor, starring @danroth27 and… https://t.co/tfeqgnhClX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":4,"RawContent":null},{"Id":"961390078932148224","CreatedAt":"2018-02-08T00:03:51+00:00","UserScreenname":"aspnet","Text":"Sure, after you've left a PR on the #ASPNET docs...\n\nhttps://t.co/Dau0ZgAUbe\n\n;) https://t.co/s8UGKAhK0e","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"961382608818130944","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/7ecMOR53sw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":0,"RawContent":null},{"Id":"960929306548387840","CreatedAt":"2018-02-06T17:32:54+00:00","UserScreenname":"aspnet","Text":"This week's standup starts in 30 minutes. Join us! https://t.co/YnMMK0GKu4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":4,"RawContent":null},{"Id":"960654063133052928","CreatedAt":"2018-02-05T23:19:11+00:00","UserScreenname":"aspnet","Text":"Just blogged: Learn how to do Image Recognition with Cognitive Services and https://t.co/eFOzgs22K8 https://t.co/7PVAkBPFzq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":7,"RawContent":null},{"Id":"960617902268342272","CreatedAt":"2018-02-05T20:55:29+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup Feb 6 at 10 Pacific / 18 GMT with special guests @danroth27 and… https://t.co/6JlWLbKqut","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":13,"RawContent":null},{"Id":"958482115208781824","CreatedAt":"2018-01-30T23:28:38+00:00","UserScreenname":"aspnet","Text":"Starting soon: #ASPNET Community Standup at 3:45 PM Pacific / 23:45 GMT.\n\nToday's community links: https://t.co/Va4tu6Rv47","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":11,"RawContent":null},{"Id":"958121957295140864","CreatedAt":"2018-01-29T23:37:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup tomorrow at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":3,"RawContent":null},{"Id":"956668144784846849","CreatedAt":"2018-01-25T23:20:34+00:00","UserScreenname":"aspnet","Text":"Just blogged: @Azure Storage for Serverless .NET apps in Minutes.\nhttps://t.co/5vSYYtzt8p","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"956524881121771521","CreatedAt":"2018-01-25T13:51:17+00:00","UserScreenname":"aspnet","Text":"Jeff and Maira - improving https://t.co/y1SqotEH5B LIVE at 10am ET / 15:00 UTC.  Check it out! https://t.co/IXsNIkHfWB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"955862764530024448","CreatedAt":"2018-01-23T18:00:16+00:00","UserScreenname":"aspnet","Text":"Starting now: #ASPNET Community Standup with Ryan Nowak on HttpClientFactory\n\nhttps://t.co/3dFxSj11IQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":9,"RawContent":null},{"Id":"955790962739040256","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"aspnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BDz2cgCTrt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"955640761793495042","CreatedAt":"2018-01-23T03:18:07+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is Jan 23 10 AM PT / 1800 GMT with special guest Ryan Nowak talking about Htt… https://t.co/5a8Ga9AJNL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":10,"RawContent":null},{"Id":"954763537884372997","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"aspnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/0zBt67tqGg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"954724179403837440","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"aspnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/Y02invGhm1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-02-08T05:30:10.6999878Z","RunDurationInMilliseconds":9347}