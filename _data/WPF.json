{"Data":{"GitHub":{"Issues":[{"Id":"425225826","IsPullRequest":false,"CreatedAt":"2019-03-26T04:49:44","Actor":"pcfulife","Number":"462","RawContent":null,"Title":"It sometimes crashes when I am typing Korean. (MSCTF.dll)","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`) preview3-010485, preview4-010963\r\n* Windows version: (`winver`) 17763 and 18362\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: I don't know. But, it does not reproduce in WPF for .NET Framework 4.7.2\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nMy project is packed with appx by using Desktop Bridge technology. And It sometimes crashes when I am typing Korean in TextBox. (MSCTF.dll)\r\nI think that it is due to Korean IME system. Because there are no case like me in google. And MSCTF is a dll file of IME system, isn't it?\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n System.ExecutionEngineException: 'Exception_WasThrown' from msctf.dll\r\n\r\n **Expected behavior:**\r\n Not throwing exception.\r\n\r\n **Minimal repro:**\r\n I don't have any reproducible project. Because it is very occasionally reproducible. So, I will upload a debugging screenshot.\r\n\r\n![1](https://user-images.githubusercontent.com/45808641/54972207-f3e0d980-4fcd-11e9-8186-b8febadd8e71.jpg)","Url":"https://github.com/dotnet/wpf/issues/462","RelatedDescription":"Open issue \"It sometimes crashes when I am typing Korean. (MSCTF.dll)\" (#462)"},{"Id":"424947313","IsPullRequest":true,"CreatedAt":"2019-03-25T15:00:18","Actor":"dotnet-maestro[bot]","Number":"461","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190325.01\r\n- **Date Produced**: 3/25/2019 2:51 PM\r\n- **Commit**: c521a89c14023a08d9cd6fb4b47dc13ca3c5e1f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27525-01\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/461","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#461)"},{"Id":"424699545","IsPullRequest":false,"CreatedAt":"2019-03-25T02:41:21","Actor":"vsfeedback","Number":"460","RawContent":null,"Title":"WPF Application Always Rebuilds In Visual Studio","State":"open","Body":"This was previously reported on GitHub to the MSBuild Team (https://github.com/Microsoft/msbuild/issues/4228) who suggested I open a Visual Studio Support Ticket.\n\nBackground\n\nIn attempting to reproduce the issue for #4217 I attempted to create a fresh WPF Project to see if I could reproduce it; in doing this I encountered a similar (but I do not believe identical) issue wherein the MainWindow.g.cs was always regenerated.\nSteps to reproduce\n\nPlease find an attached zip file that contains the project that demonstrates this behavior: WpfAppAlwaysRebuilds.zip\n\nThis project was created by:\n\n    Creating a new WPF Application within Visual Studio\n    Modifying the CSPROJ To contain the work around for #1648 as follows\n\n  &lt;Target Name=&quot;GenerateCompiledExpressionsTempFile&quot;&gt;\n    &lt;!--This is a no-op to overwrite the existing target that ships with MSBuild. When we upgrade to Visual Studio 2019 (MSBuild 16.0) we can remove this. See https://github.com/Microsoft/msbuild/issues/1648--&gt;\n  &lt;/Target&gt;\n\nTo reproduce the issue on the command line build the project\n\nmsbuild WpfAppAlwaysRebuilds.sln /t:Build\n\nThen launch the Solution in Visual Studio and build you will see this in diganostic verbosity:\n\nProject 'WpfAppAlwaysRebuilds' is not up to date. Input file 's:\\temp\\markupbug\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\obj\\debug\\mainwindow.g.cs' is modified after output file ''.\n------ Build started: Project: WpfAppAlwaysRebuilds, Configuration: Debug Any CPU ------\n\nNote that in order to repeat it a second time you MUST delete the contents of the /obj/ folder to start &quot;clean&quot; again. Once it has built in Visual Studio once MSBuild will happily report that it is up to date.\n\nExpected behavior\n\nThe expected behavior is that this project will report as &quot;up-to-date&quot;\n\nActual behavior\n\nThe project rebuilds because it determines that it is not &quot;up-to-date&quot;\n\n@livarcocc The Workflow Fix requires the coordination between Dev16; however if you notice bullet 2 I have already worked around this; this is a NEW issue (even after the workflow one is corrected).\n\nHere is the rebuild trigger:\n\n1&gt;Project 'WpfAppAlwaysRebuilds' is not up to date. Input file 'r:\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\wpfappalwaysrebuilds\\obj\\debug\\mainwindow.g.cs' is modified after output file ''.\n\nIf this had been the workflow issue it would have been complaining about a *TemporaryGenerated.cs file.\n\nThis issue ends up being the same as the reference issue (although it took me a lot longer to get to that point in the reference issue):\n\n    When MSBuild compiles a WPF Application MarkupCompilePass1 is called PRIOR to all Compile inputs being calculated. One such task that adds additional compile items is GenerateTargetFrameworkMonikerAttribute\n    In Visual Studio GenerateTargetFrameworkMonikerAttribute is called PRIOR to MarkupCompilePass1\n    Because of the design of MarkupCompilePass1 there is another layer of incremental build caching: it is looking at the number of files used as inputs (as well as taking the hashes of their file names) to determine if it should run again or not. Because this added an additional Compile item in Visual Studio it will always rebuild.\n\nThe work around is to apply this into the ProjectFile which will temporarily fix you; but the real fix needs to happen in MSBuild to correctly call GenerateTargetFrameworkMonikerAttribute prior to MarkupCompilePass1:\n\n  &lt;PropertyGroup&gt;\n    &lt;!--This is a hack to try and fix https://github.com/Microsoft/msbuild/issues/4228--&gt;\n    &lt;MarkupCompilePass1DependsOn&gt;$(MarkupCompilePass1DependsOn);GenerateTargetFrameworkMonikerAttribute&lt;/MarkupCompilePass1DependsOn&gt;\n  &lt;/PropertyGroup&gt;\n\nIts unclear who owns this; its either gotta be Visual Studio or the MSBuild team that changes to make this consistent otherwise you will ALWAYS rebuild in WPF.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/503048/wpf-application-always-rebuilds-in-visual-studio.html\nVSTS ticketId: 826388_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/460","RelatedDescription":"Open issue \"WPF Application Always Rebuilds In Visual Studio\" (#460)"},{"Id":"424493792","IsPullRequest":true,"CreatedAt":"2019-03-23T12:09:42","Actor":"dotnet-maestro[bot]","Number":"459","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/459","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#459)"},{"Id":"423530321","IsPullRequest":true,"CreatedAt":"2019-03-22T22:06:04","Actor":"skendrot","Number":"454","RawContent":null,"Title":"Fix documentation typo and punctuation","State":"closed","Body":"Fixes a typo in the class summary documentation and adds punctuation where needed","Url":"https://github.com/dotnet/wpf/pull/454","RelatedDescription":"Closed or merged PR \"Fix documentation typo and punctuation\" (#454)"},{"Id":"423952869","IsPullRequest":true,"CreatedAt":"2019-03-22T16:51:47","Actor":"mmitche","Number":"457","RawContent":null,"Title":"Add coherent parent attributes","State":"closed","Body":"Adds a new dependency (not actually used) on Microsoft.NETCore.App and then ties the existing corefx dependencies to that Microsoft.NETCore.App.  This ensures that corefx binaries do not get ahead of a core-setup that has actually ingested those binaries.  This helps our overall coherency push at the end of the release cycle.","Url":"https://github.com/dotnet/wpf/pull/457","RelatedDescription":"Closed or merged PR \"Add coherent parent attributes\" (#457)"},{"Id":"424177506","IsPullRequest":true,"CreatedAt":"2019-03-22T12:10:21","Actor":"dotnet-maestro[bot]","Number":"458","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/458","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#458)"},{"Id":"423696506","IsPullRequest":true,"CreatedAt":"2019-03-21T12:10:32","Actor":"dotnet-maestro[bot]","Number":"456","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190320.2\r\n- **Date Produced**: 3/20/2019 5:43 PM\r\n- **Commit**: f70fa34786cff993625a4548ae0125335eabe82e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19170.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/456","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#456)"},{"Id":"423625704","IsPullRequest":false,"CreatedAt":"2019-03-21T09:00:41","Actor":"DingpingZhang","Number":"455","RawContent":null,"Title":"Provide more built-in markup extensions","State":"open","Body":"Sometimes I found that if we use some custom markup extensions, which can make our code easier. \r\n\r\nFor example, if we want to control the visibility of a ui element and there is a bool property (named `IsA`) in our view model, we usually use the `BooleanToVisibilityConverter` to convert the bool type to the visibility enum type in xaml, but there is another element that has the opposite behavior and it wants to be hidden when the boolean property (named `IsA`) is `true`. Now, we will have two options: 1) add a new bool property named `IsNotA`; 2) add a new converter named `NotBooleanToVisibilityConverter`. But I think we have a third choice: use a custom markup extension named `ComposeExtension` for it, like below: \r\n```xml\r\n<TextBlock Visibility={Binding IsA, Converter={markup:Compose {StaticResource NotOperator}, {StaticResource BooleanToVisibilityConverter}}} ...\r\n```\r\nIt can compose a series of converters to one converter. The data enters from the first converter, then flows through each converter in turn, and then flows out of the last converter. I think there are still many scenes that need it. (see [here](https://github.com/DingpingZhang/WpfExtensions/blob/master/WpfExtensions.Xaml/Markup/ComposeExtension.cs) for its implementation)\r\n\r\nAnother higher frequency requirement is to use conditional expression (`<bool>?<true value>:<false value>`) in xaml. I know we can use the `Trigger` to implement it, like below:\r\n```xml\r\n    <Button>\r\n        <Button.Style>\r\n            <Style TargetType=\"Button\" BasedOn=\"{StaticResource {x:Type Button}}\">\r\n                <Setter Property=\"Content\" Value=\"{StaticResource LoadingImage}\" />\r\n                <Style.Triggers>\r\n                    <DataTrigger Binding=\"{Binding IsLoaded}\" Value=\"True\">\r\n                        <Setter Property=\"Content\" Value=\"{StaticResource LoadedImage}\" />\r\n                    </DataTrigger>\r\n                </Style.Triggers>\r\n            </Style>\r\n        </Button.Style>\r\n    </Button>\r\n```\r\nBut I think the above code is too long. If we have the `IfExtension`, we can write it in the following form: (see [here](https://github.com/DingpingZhang/WpfExtensions/blob/master/WpfExtensions.Xaml/Markup/IfExtension.cs) for its implementation)\r\n```xml\r\n<Button Content=\"{markup:If {Binding IsLoaded}, {StaticResource LoadedImage}, {StaticResource LoadingImage}}\" />\r\n```\r\n\r\nBut the implementation of `IfExtension` has a known issue: I chose to implement `IfExtension` with `MultiBinding`, in order to get the correct `DataContext` when the values of `IfExtension.True` and `IfExtension.False` are binding, but `MultiBinding.Converters` CANNOT accept values of `MultiBinding` type, so I cannot set a derived class of `MultiBinding` for `IfExtension.True` and `IfExtension.False` , or use `IfExtension` in a nested form.\r\n\r\nI don't quite understand how to create a custom markup extension that gets the correct `DataContext` when the markup needs to accept some `BindingBase` type values. I found that there are many methods to implement `Binding` or `MultiBinding` 's code is `internal` (e.g.: `CreateBindingExpression()`, see [here](https://referencesource.microsoft.com/#PresentationFramework/src/Framework/System/Windows/Data/MultiBinding.cs)), and I'm not sure if I need to use these internal functions perfectly to implement `IfExtension`.\r\n\r\nIn addition, I also want to know what other interesting custom markup extensions you often use, I hope you can share them here, thank you! :)","Url":"https://github.com/dotnet/wpf/issues/455","RelatedDescription":"Open issue \"Provide more built-in markup extensions\" (#455)"},{"Id":"423475428","IsPullRequest":true,"CreatedAt":"2019-03-20T22:12:49","Actor":"stevenbrix","Number":"453","RawContent":null,"Title":"fix publishing","State":"closed","Body":"Fixes #452 ","Url":"https://github.com/dotnet/wpf/pull/453","RelatedDescription":"Closed or merged PR \"fix publishing\" (#453)"},{"Id":"423474296","IsPullRequest":false,"CreatedAt":"2019-03-20T22:12:48","Actor":"stevenbrix","Number":"452","RawContent":null,"Title":"Missing pipeline properties","State":"closed","Body":"These need to be added to azure-pipelines.yml to ensure our publishing works properly:\r\n\r\n  _PublishUsingPipelines: false\r\n  _DotNetArtifactsCategory: .NETCore","Url":"https://github.com/dotnet/wpf/issues/452","RelatedDescription":"Closed issue \"Missing pipeline properties\" (#452)"},{"Id":"423036621","IsPullRequest":false,"CreatedAt":"2019-03-20T02:28:32","Actor":"vsfeedback","Number":"451","RawContent":null,"Title":"WPF: Calendar.DisplayDate Dependency Property","State":"open","Body":"<p>Please see the attached example, there is a <strong>Calendar</strong> and a <strong>Button</strong>.</p><pre>        &lt;Calendar SelectedDate=&quot;{Binding DateTimeTest, Mode=TwoWay}&quot;\n                  DisplayDate=&quot;{Binding DateTimeTest, Mode=OneWay}&quot; /&gt;\n        &lt;Button Command=&quot;{Binding TodayCommand}&quot;\n                Content=&quot;Today&quot; /&gt;\n</pre><p>The <b>Button</b> set the property <b>DateTimeTest</b> to <strong>DateTime.Today</strong>.</p><p></p><p><em>The workflow of the issue:</em></p><ol><li>Select the date 19. 3. 2010 via Calendar via selecting year from the top part (important).</li><li>Press Today Button.</li><li>The selected date of Calendar is not updated.</li></ol><p><b>.NET Framework 4.7.1</b></p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/498724/wpf-calendardisplaydate-dependency-property.html\nVSTS ticketId: 823387_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/451","RelatedDescription":"Open issue \"WPF: Calendar.DisplayDate Dependency Property\" (#451)"},{"Id":"420462240","IsPullRequest":true,"CreatedAt":"2019-03-19T12:10:17","Actor":"dotnet-maestro[bot]","Number":"441","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19162.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19167.10\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/441","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#441)"},{"Id":"422526634","IsPullRequest":false,"CreatedAt":"2019-03-19T03:25:19","Actor":"vsfeedback","Number":"450","RawContent":null,"Title":"Touches from dialog window get \"stuck\" in main window","State":"open","Body":"<p>I asked this question already in the other forums but still haven't been able to get a solution for it or even have somebody looking at it, so I'll try it again here (this is copy paste from other post <a href=\"https://social.msdn.microsoft.com/Forums/vstudio/en-US/2defee3c-fcbd-4e3f-afa1-aae21933f129/touches-from-dialog-window-get-quotstuckquot-in-main-window\" target=_blank>here</a>):</p><br><p>We are having quite a problem with our WPF app on touch devices. Sometimes after closing a modal window (opened with ShowDialog()) the buttons on our main window respond correctly to triggers on AreAnyTouchesOver, but they never fire a Click event or command when tapped. After quite some trail and error we believe we have found the issue causing this. The following scenario makes the issue appear.<br><br>Open a modal window and then make the UI thread busy for a while.<br>On the modal window there's a button that closes the window.<br>Now tap the close button and then any locations in the modal window (the close button or even some other place) WHILE the UI thread is still busy.<br>When the UI thread has done it's work it will see the click on the close button and close the window. All touches that came after the first tap on close appear now on the main window. However ONLY the (Preview)TouchDown events are raised in the main window and NO (Preview)TouchUp is ever occurring. This makes the main window think there are still fingers over itself while in reality they are not, and as a result when you tap a button this is seen as &quot;1 more finger&quot; instead of just a single finger tapping the screen.<br><br><a href=\"https://1drv.ms/u/s%21AhqurxiexJWri5EleIA1-J6XZ0aKvA\" target=_blank>https://1drv.ms/u/s!AhqurxiexJWri5EleIA1-J6XZ0aKvA</a><br><br>This sample app is a minimal repro. After the dialog closes you can see that the PreviewTouchDown handler of the main window is fired the same number of times you tapped the dialog after you pressed close for the first time. The PreviewTouchUp handler is never fired. You can see that every time the PreviewTouchDown handler is fired a TouchDevice is added to the TouchesOver collection.<br><br>For some reason after a &quot;random&quot; amount of interactions with the app the number of devices decreases and from the moment all &quot;ghost fingers&quot; are gone the buttons work as expected again.<br><br>We did not yet find a solution to resolve this issue.<br><br>We tried looping over PeekMessage (from User32.dll) to remove all touches in the queue but both WM_TOUCH and WM_GESTURE don't appear in there, even after calling RegisterTouchWindow. PeekMessage works fine for mouse though but we don't have mouse problems.<br><br>We also tried putting an in-between-window between the main window and our modal dialog. This works in the sense that we see the rogue touches coming to the in-between-window, and after we close it the main window will have 0 TouchesOver. But still this does not resolve the issue. We even tried using reflection in the in-between-window to call ReportUp and Deactivate on every TouchDevice in TouchesOver of the in-between-window. And we can see that it has an effect because they are 1 by 1 removed from TouchesOver. But even then after the in-between-window closes and with 0 TouchesOver on any window our main window does not correctly handle touch.</p><p>I did find something very suspicious in the .NET source code: <a href=\"https://referencesource.microsoft.com/#PresentationCore/Core/CSharp/System/Windows/Input/TouchDevice.cs%2c720\">https://referencesource.microsoft.com/#PresentationCore/Core/CSharp/System/Windows/Input/TouchDevice.cs,720</a></p><p><br>So... if anyone has a robust solution this would be very welcome. If not we have to revert to set IsChecked, raise Click event, run Commands, etc all manually in global TouchUp handlers for all buttons.<br><br>Regards,<br>Stan</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/496835/touches-from-dialog-window-get-stuck-in-main-windo.html\nVSTS ticketId: 822709_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/450","RelatedDescription":"Open issue \"Touches from dialog window get \"stuck\" in main window\" (#450)"},{"Id":"422084915","IsPullRequest":false,"CreatedAt":"2019-03-18T08:09:11","Actor":"vsfeedback","Number":"449","RawContent":null,"Title":"Errors appear in the error list from a WPF project that is not currently being edited or compiled, even though I choose Build Only","State":"open","Body":"VSF_TYPE_MARKDOWNI have a solution with many projects.\n\nI chose to build a class library that has nothing to do with XML.\n\nI set the Error List to show WPF errors for &quot;Build Only&quot;\n\nErrors appear in the error list from a WPF project that is not currently being edited or compiled.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/495348/errors-appear-in-the-error-list-from-a-wpf-project.html\nVSTS ticketId: 822269_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/449","RelatedDescription":"Open issue \"Errors appear in the error list from a WPF project that is not currently being edited or compiled, even though I choose Build Only\" (#449)"},{"Id":"422084288","IsPullRequest":false,"CreatedAt":"2019-03-18T08:07:06","Actor":"vsfeedback","Number":"448","RawContent":null,"Title":"no template could be found with the group identity","State":"open","Body":"VSF_TYPE_MARKDOWNI have installed the visual studio community 2019 preview for the first time. When i tried to create a new wpf project with .net core it gave error &quot;no template could be found with the group identity&quot;. In parallel i also have vs community 2017.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/495671/no-template-could-be-found-with-the-group-identity-2.html\nVSTS ticketId: 822402_\n_These are the original issue comments:_\n\nzubairrana07 on 3/18/2019, 01:47 PM (2 hours ago): no template could be found with the group identity \"Microsoft.Common.Wpf\"\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/448","RelatedDescription":"Open issue \"no template could be found with the group identity\" (#448)"},{"Id":"422010563","IsPullRequest":false,"CreatedAt":"2019-03-18T02:24:44","Actor":"vsfeedback","Number":"447","RawContent":null,"Title":"C# CompositionFailedException","State":"open","Body":"Not sure who owns this exception when committing my staged code to Bitbucket. <br><br>Microsoft.VisualStudio.Composition.CompositionFailedException: An exception was thrown while initializing part &quot;GitClientVS.UI.Views.PublishSectionView&quot;. ---&gt; System.Windows.Markup.XamlParseException: Set property 'System.Windows.ResourceDictionary.DeferrableContent' threw an exception. ---&gt; System.Xaml.XamlObjectWriterException: Set property 'System.Windows.ResourceDictionary.Source' threw an exception. ---&gt; System.IO.IOException: Cannot locate resource 'themes/metroheader.xaml'.<br>   at MS.Internal.AppModel.ResourcePart.GetStreamCore(FileMode mode, FileAccess access)<br>   at System.IO.Packaging.PackagePart.GetStream(FileMode mode, FileAccess access)<br>   at System.IO.Packaging.PackWebResponse.CachedResponse.GetResponseStream()<br>   at System.IO.Packaging.PackWebResponse.GetResponseStream()<br>   at System.IO.Packaging.PackWebResponse.get_ContentType()<br>   at MS.Internal.WpfWebRequestHelper.GetContentType(WebResponse response)<br>   at MS.Internal.WpfWebRequestHelper.GetResponseStream(WebRequest request, ContentType&amp; contentType)<br>   at System.Windows.ResourceDictionary.set_Source(Uri value)<br>   at System.Windows.Baml2006.WpfSharedBamlSchemaContext.&lt;&gt;c.&lt;Create_BamlProperty_ResourceDictionary_Source&gt;b__342_0(Object target, Object value)<br>   at System.Windows.Baml2006.WpfKnownMemberInvoker.SetValue(Object instance, Object value)<br>   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(XamlMember member, Object obj, Object value)<br>   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(Object inst, XamlMember property, Object value)<br>--- End of stack trace from previous location where exception was thrown ---<br>   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)<br>   --- End of inner exception stack trace ---<br>   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(Object inst, XamlMember property, Object value)<br>   at MS.Internal.Xaml.Runtime.PartialTrustTolerantRuntime.SetValue(Object obj, XamlMember property, Object value)<br>   at System.Xaml.XamlObjectWriter.Logic_ApplyPropertyValue(ObjectWriterContext ctx, XamlMember prop, Object value, Boolean onParent)<br>   at System.Xaml.XamlObjectWriter.Logic_DoAssignmentToParentProperty(ObjectWriterContext ctx)<br>   at System.Xaml.XamlObjectWriter.Logic_AssignProvidedValue(ObjectWriterContext ctx)<br>   at System.Xaml.XamlObjectWriter.WriteEndMember()<br>   at System.Xaml.XamlWriter.WriteNode(XamlReader reader)<br>   at System.Xaml.XamlServices.Transform(XamlReader xamlReader, XamlWriter xamlWriter, Boolean closeWriter)<br>   at System.Xaml.XamlServices.Transform(XamlReader xamlReader, XamlWriter xamlWriter)<br>   at System.Windows.SystemResources.ResourceDictionaries.LoadDictionary(Assembly assembly, String assemblyName, String resourceName, Boolean isTraceEnabled, Uri&amp; dictionarySourceUri)<br>   at System.Windows.SystemResources.ResourceDictionaries.LoadGenericDictionary(Boolean isTraceEnabled)<br>   at System.Windows.SystemResources.FindDictionaryResource(Object key, Type typeKey, ResourceKey resourceKey, Boolean isTraceEnabled, Boolean allowDeferredResourceReference, Boolean mustReturnDeferredResourceReference, Boolean&amp; canCache)<br>   at System.Windows.SystemResources.FindResourceInternal(Object key, Boolean allowDeferredResourceReference, Boolean mustReturnDeferredResourceReference)<br>   at System.Windows.FrameworkElement.FindResourceInternal(FrameworkElement fe, FrameworkContentElement fce, DependencyProperty dp, Object resourceKey, Object unlinkedParent, Boolean allowDeferredResourceReference, Boolean mustReturnDeferredResourceReference, DependencyObject boundaryElement, Boolean isImplicitStyleLookup, Object&amp; source)<br>   at System.Windows.StaticResourceExtension.FindResourceInAppOrSystem(IServiceProvider serviceProvider, Boolean allowDeferredReference, Boolean mustReturnDeferredResourceReference)<br>   at System.Windows.StaticResourceExtension.FindResourceInEnviroment(IServiceProvider serviceProvider, Boolean allowDeferredReference, Boolean mustReturnDeferredResourceReference)<br>   at System.Windows.StaticResourceExtension.TryProvideValueImpl(IServiceProvider serviceProvider, Boolean allowDeferredReference, Boolean mustReturnDeferredResourceReference)<br>   at System.Windows.ResourceDictionary.SetOptimizedStaticResources(IList`1 staticResources, IServiceProvider serviceProvider, StaticResourceExtension staticResourceWorker)<br>   at System.Windows.ResourceDictionary.SetKeys(IList`1 keyCollection, IServiceProvider serviceProvider)<br>   at System.Windows.ResourceDictionary.SetDeferrableContent(DeferrableContent deferrableContent)<br>   at System.Windows.Baml2006.WpfSharedBamlSchemaContext.&lt;&gt;c.&lt;Create_BamlProperty_ResourceDictionary_DeferrableContent&gt;b__297_0(Object target, Object value)<br>   at System.Windows.Baml2006.WpfKnownMemberInvoker.SetValue(Object instance, Object value)<br>   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(XamlMember member, Object obj, Object value)<br>   at MS.Internal.Xaml.Runtime.ClrObjectRuntime.SetValue(Object inst, XamlMember property, Object value)<br>   --- End of inner exception stack trace ---<br>   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)<br>   at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)<br>   at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)<br>   at System.Windows.Application.LoadComponent(Object component, Uri resourceLocator)<br>   at GitClientVS.UI.Views.PublishSectionView.InitializeComponent()<br>   at GitClientVS.UI.Views.PublishSectionView..ctor(IPublishSectionViewModel vm)<br>   --- End of inner exception stack trace ---<br>   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.RuntimePartLifecycleTracker.CreateValue()<br>   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.Create()<br>   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.MoveNext(PartLifecycleState nextState)<br>   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.MoveToState(PartLifecycleState requiredState)<br>   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.GetValueReadyToExpose()<br>   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.&lt;&gt;c__DisplayClass15_0.&lt;GetExportedValueHelper&gt;b__0()<br>   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.GetValueForImportElement(RuntimePartLifecycleTracker importingPartTracker, RuntimeImport import, RuntimeExport export, Func`3 lazyFactory)<br>   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.GetValueForImportSite(RuntimePartLifecycleTracker importingPartTracker, RuntimeImport import)<br>   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.RuntimePartLifecycleTracker.&lt;CreateValue&gt;b__10_0(RuntimeImport import)<br>   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()<br>   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)<br>   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)<br>   at Microsoft.VisualStudio.Composition.RuntimeExportProviderFactory.RuntimeExportProvider.RuntimePartLifecycleTracker.CreateValue()<br>   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.Create()<br>   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.MoveNext(PartLifecycleState nextState)<br>   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.MoveToState(PartLifecycleState requiredState)<br>   at Microsoft.VisualStudio.Composition.ExportProvider.PartLifecycleTracker.GetValueReadyToExpose()<br>   at Microsoft.VisualStudio.Composition.ExportProvider.&lt;&gt;c__DisplayClass53_0.&lt;CreateExport&gt;b__0()<br>   at Microsoft.VisualStudio.Composition.ExportProvider.&lt;&gt;c__DisplayClass55_0.&lt;CreateExportFactoryExport&gt;b__1()<br>   at Microsoft.VisualStudio.Composition.ExportProvider.&lt;&gt;c__DisplayClass54_0.&lt;CreateExportFactory&gt;b__0()<br>   at Microsoft.VisualStudio.Composition.DelegateServices.&lt;&gt;c__DisplayClass2_0`1.&lt;As&gt;b__0()<br>   at System.ComponentModel.Composition.ExportFactory`1.CreateExport()<br>   at Microsoft.VisualStudio.Composition.NetFxAdapters.MefV1ExportProvider.ComposablePartDefinitionForExportFactory.CreatePart()<br>   at System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator.LifetimeContext.GetExportLifetimeContextFromExport[T](Export export)<br>   at System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator.&lt;&gt;c__DisplayClass6_0`2.&lt;CreateStronglyTypedExportFactoryOfTM&gt;b__0()<br>   at System.ComponentModel.Composition.ExportFactory`1.CreateExport()<br>   at Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TeamExplorerSectionHost.Create()\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/491375/c-compositionfailedexception.html\nVSTS ticketId: 821871_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n\nRalf Pessel solved on 2019/3/18, 01:52 AM (8 hours ago), 0 votes: \n<p>Install the &quot;Clear MEF Component Cache&quot; in Visual Studio and delete the MEF Cache. The cache will be rebuild.</p>\n<p>See: <a target=\"_blank\">https://github.com/github/VisualStudio/issues/1340#issuecomment-346852177</a></p> \n","Url":"https://github.com/dotnet/wpf/issues/447","RelatedDescription":"Open issue \"C# CompositionFailedException\" (#447)"},{"Id":"421801342","IsPullRequest":true,"CreatedAt":"2019-03-16T12:21:43","Actor":"dotnet-maestro[bot]","Number":"446","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.Windows.Extensions - 4.6.0-preview4.19164.7\r\n- System.CodeDom - 4.6.0-preview4.19164.7\r\n- Microsoft.Win32.Registry - 4.6.0-preview4.19164.7\r\n- System.Reflection.TypeExtensions - 4.6.0-preview4.19164.7\r\n- System.Security.AccessControl - 4.6.0-preview4.19164.7\r\n- System.Security.Cryptography.Xml - 4.6.0-preview4.19164.7\r\n- System.Security.Permissions - 4.6.0-preview4.19164.7\r\n- System.Security.Principal.Windows - 4.6.0-preview4.19164.7\r\n- System.Reflection.Emit - 4.6.0-preview4.19164.7\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview4.19164.7\r\n- System.Diagnostics.EventLog - 4.6.0-preview4.19164.7\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/446","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#446)"},{"Id":"421738734","IsPullRequest":false,"CreatedAt":"2019-03-15T23:29:30","Actor":"chabiss","Number":"445","RawContent":null,"Title":"Support conversion of BAML stream to XAML string. Proposed API would look something like   public string ConvertBamlToXaml(Stream baml); Conversion should not attempt to load assemblies or instantiate types mentioned in BAML. ","State":"open","Body":"Based on VS user feedback (https://developercommunity.visualstudio.com/content/problem/310226/while-editing-the-template-value-not-fetched-from.html)  there is high demand for better Edit Copy of Template functionality in VS XAML designer for BAML loaded content. Main issue being the fact that VS cannot determine resources and resource references used during BAML loading. As a result VS ends up with “resource-less” XAML which is far from original XAML.\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/445","RelatedDescription":"Open issue \"Support conversion of BAML stream to XAML string. Proposed API would look something like   public string ConvertBamlToXaml(Stream baml); Conversion should not attempt to load assemblies or instantiate types mentioned in BAML. \" (#445)"},{"Id":"421471566","IsPullRequest":false,"CreatedAt":"2019-03-15T14:31:47","Actor":"BennyTordrupVisma","Number":"444","RawContent":null,"Title":"Nested types not supported","State":"closed","Body":"In the .NET framework 4.6, it is not possible to use nested types in WPF data binding when using the x:Static. Like in this example.\r\n\r\n                   Content=\"{Binding Source={x:Static system:DateTime.Now}, Converter={StaticResource Loc}, ConverterParameter={x:Static model:Tx.Model.Column.Comment}}\"\r\n\r\nI want to pass en enum value to the ConverterParameter, but I get the error message \"Nested types are not supported\"\r\n\r\nAre there any plan on changing this in the .net core WPF implementation? And perhaps also in .NET framework?\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/444","RelatedDescription":"Closed issue \"Nested types not supported\" (#444)"},{"Id":"420889785","IsPullRequest":false,"CreatedAt":"2019-03-14T08:35:16","Actor":"xianyun666","Number":"443","RawContent":null,"Title":"Wpf app KERNELBASE.dll error in windows7 sp1，winform app normal run.","State":"open","Body":"# Issue Title\r\n\r\nWpf app KERNELBASE.dll error in windows7 sp1，winform app normal run.\r\n\r\n# General\r\n\r\nVirtual machine installation of the new system windows7 sp1.\r\nKB2999226 and KB2533623 have been installed successfully\r\n\r\na1.exe \r\n   1.0.0.0 \r\n   5c7c0388 \r\n   KERNELBASE.dll \r\n   6.1.7601.17617 \r\n   4dce2040 \r\n   c06d007e \r\n   0000b9bc \r\n   a78 \r\n   01d4da3a6d2bc2d0 \r\n   C:\\Users\\liu\\a1\\bin\\Debug\\netcoreapp3.0\\a1.exe \r\n   C:\\Windows\\syswow64\\KERNELBASE.dll \r\n   ac826401-462d-11e9-bf34-000c29530288 \r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/443","RelatedDescription":"Open issue \"Wpf app KERNELBASE.dll error in windows7 sp1，winform app normal run.\" (#443)"},{"Id":"420800512","IsPullRequest":true,"CreatedAt":"2019-03-14T08:28:36","Actor":"dotnet-maestro[bot]","Number":"442","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.Windows.Extensions - 4.6.0-preview3.19163.8\r\n- System.CodeDom - 4.6.0-preview3.19163.8\r\n- Microsoft.Win32.Registry - 4.6.0-preview3.19163.8\r\n- System.Reflection.TypeExtensions - 4.6.0-preview3.19163.8\r\n- System.Security.AccessControl - 4.6.0-preview3.19163.8\r\n- System.Security.Cryptography.Xml - 4.6.0-preview3.19163.8\r\n- System.Security.Permissions - 4.6.0-preview3.19163.8\r\n- System.Security.Principal.Windows - 4.6.0-preview3.19163.8\r\n- System.Reflection.Emit - 4.6.0-preview3.19163.8\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview3.19163.8\r\n- System.Diagnostics.EventLog - 4.6.0-preview3.19163.8\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/442","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#442)"},{"Id":"420365909","IsPullRequest":false,"CreatedAt":"2019-03-13T08:08:34","Actor":"vsfeedback","Number":"440","RawContent":null,"Title":"VB My Project Application Page ","State":"open","Body":"VSF_TYPE_MARKDOWNCreate a new project, Windows Desktop -&gt; WPF App (.Net Framework) / .NET Framework 4.7 - \n\nMy Project - in Application Page, gives an error; there is no error other pages. it doesnt matter, New project and old projects.\n\n&quot;An error occurred trying to load the page.\nThe method or operation is not implemented.&quot;\n\nVS 2017 Version 15.9.9\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/487809/vb-my-project-application-page.html\nVSTS ticketId: 819186_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/440","RelatedDescription":"Open issue \"VB My Project Application Page \" (#440)"},{"Id":"420365353","IsPullRequest":false,"CreatedAt":"2019-03-13T08:06:44","Actor":"vsfeedback","Number":"439","RawContent":null,"Title":"Insufficient Memory exception","State":"open","Body":"VSF_TYPE_MARKDOWNA WPF Application starts on a dell XPS with a screen resolution of  3840 x 2160. The scale and layout is set to 250% (recommended).\nThe application starts from Visual Studio 2019 Preview in Debug Mode on the notebook screen and works as expected.\nNow I move the application window to a secondary monitor with the same resolution 3840 x 2160 but with scale set to 100%.\nAs soon as the application goes full screen, the application runs into an uncaught exception:\n&gt;Insufficient memory to continue the execution of the program.\n\n&gt;   at System.Windows.Media.Composition.DUCE.Channel.SyncFlush()\n&gt;   at System.Windows.Interop.HwndTarget.UpdateWindowSettings(Boolean enableRenderTarget, Nullable`1 channelSet)\n&gt;   at System.Windows.Interop.HwndTarget.UpdateWindowPos(IntPtr lParam)\n&gt;   at System.Windows.Interop.HwndTarget.HandleMessage(WindowMessage msg, IntPtr wparam, IntPtr lparam)\n&gt;   at System.Windows.Interop.HwndSource.HwndTargetFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\n&gt;   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\n&gt;   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n&gt;   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\n&gt;   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\n\nThis is what I have tried so far:\nA empty WPF application with just a main window does not have the same problem.\nThe same application that runs into the Insufficient memory problem started from outside of Visual Studio does not have the same problem.\nThe same application started in Debug mode in Visual Studio 2017 also runs into the insufficient memory problem.\n\nSo it seems to be a problem that occurs with this particular application when run in Debug mode on a 4K monitor in both VS 2019 and VS 2017.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/487807/insufficient-memory-exception.html\nVSTS ticketId: 819184_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/439","RelatedDescription":"Open issue \"Insufficient Memory exception\" (#439)"},{"Id":"420348599","IsPullRequest":false,"CreatedAt":"2019-03-13T07:10:48","Actor":"Jogge","Number":"438","RawContent":null,"Title":"WPF alternative for WinForms FolderBrowserDialog","State":"open","Body":"I'm missing a proper WPF-way to select a folder with a dialog.\r\n\r\nBest answers on the internet says I have to reference WinForms and use the `FolderBrowserDialog`. I don't want to make a reference to WinForms just to make a dialog to select a folder.\r\n\r\nWPF already have `SaveFileDialog` and `OpenFileDialog`...\r\n\r\nRelated links:\r\nhttps://stackoverflow.com/questions/1922204/open-directory-dialog\r\nhttps://stackoverflow.com/questions/4547320/using-folderbrowserdialog-in-wpf-application","Url":"https://github.com/dotnet/wpf/issues/438","RelatedDescription":"Open issue \"WPF alternative for WinForms FolderBrowserDialog\" (#438)"},{"Id":"419249711","IsPullRequest":true,"CreatedAt":"2019-03-12T12:06:09","Actor":"dotnet-maestro[bot]","Number":"433","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19160.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19160.2\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19161.14\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/433","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#433)"},{"Id":"419926783","IsPullRequest":false,"CreatedAt":"2019-03-12T11:07:16","Actor":"kant2002","Number":"437","RawContent":null,"Title":"it is not possible integrate WPF with ASP.NET","State":"open","Body":"* .NET Core Version: 3.0 Preview3\r\n* Windows version: 1089\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\n\r\nI want to create web application which will be hosted by the WPF application. In order to that, I create separate web project and add reference to it from the WPF application. When I attempt to build \r\n \r\n **Actual behavior:** \r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\targets\\Microsoft.WinFX.targets(243,9): \r\nerror MC1000: Unknown build error, 'Could not find assembly 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. \r\nEither explicitly load this assembly using a method such as LoadFromAssemblyPath() \r\nor subscribe to the Resolving event with a handler that returns a valid assembly.'\r\n``` \r\n\r\n**Expected behavior:**\r\nBuild just run.\r\n \r\n **Minimal repro:**\r\n1. Create WPF 3.0 app wpf30\r\n2. Create ASP.NET 3.0 app aspnet30\r\n3. Add aspnet30 project as reference to wpf30\r\n4. Add code below to wpf30 project\r\n```\r\nvar hostBuilder = WebUI.Program.CreateHostBuilder();\r\nhostBuilder.Build().Run();\r\n```\r\n5. Build\r\n  \r\n","Url":"https://github.com/dotnet/wpf/issues/437","RelatedDescription":"Open issue \"it is not possible integrate WPF with ASP.NET\" (#437)"},{"Id":"419883891","IsPullRequest":false,"CreatedAt":"2019-03-12T09:33:00","Actor":"vsfeedback","Number":"436","RawContent":null,"Title":"Third Party Control toolbox configuration issue – VS 2019 RC","State":"open","Body":"<p>Hi Team,</p><p>We are developing Windows Forms and WPF custom controls and configure those controls in <strong>Visual Studio 2017</strong> and <strong>2019</strong> toolbox using custom VSIX extension with pkgdef file. </p><p>But we are facing issue in WPF platform that toolbox was not configured in VS 2019 RC and it shows as Toolbox initializing long time. Refer the attached screenshot for more details.</p><p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/62964-vs2019rc-wpf.png\">vs2019rc-wpf.png</a></p><p>Is this the known issue in  VS 2019 RC and will it be resolved in VS 2019 main release ? Kindly share the details about how to resolve this issue.</p><p>Regards, </p><p>Mohamed Yasir K</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/486227/third-party-control-toolbox-configuration-issue-vs.html\nVSTS ticketId: 818540_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/436","RelatedDescription":"Open issue \"Third Party Control toolbox configuration issue – VS 2019 RC\" (#436)"},{"Id":"419643963","IsPullRequest":false,"CreatedAt":"2019-03-11T19:28:27","Actor":"WayneBBB","Number":"435","RawContent":null,"Title":"Will WebView support streaming from sites like Netflix?","State":"open","Body":"I am trying to use WebView in a WPF app.  Since WebView is based on Edge, I have tried to connect to Netflix to see it will stream video (I can do this with Edge).  The result has been that I can log into Netflix, but if I try to run a video, then things die and the screen goes white.  So basic question which I can't seem to find an answer: Can WebView be used to stream video from a site like Netflix?","Url":"https://github.com/dotnet/wpf/issues/435","RelatedDescription":"Open issue \"Will WebView support streaming from sites like Netflix?\" (#435)"},{"Id":"419581888","IsPullRequest":false,"CreatedAt":"2019-03-11T17:04:33","Actor":"AhmedAbuelnour","Number":"434","RawContent":null,"Title":"Native Support of MVVM Pattern","State":"open","Body":"<!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\nI really wish to see that one day, we have a native support for MVVM Pattern in all XAML based applications (Xamarin , UWP , and WPF) like you did in ASP.NET MVC \r\n\r\nWe need a native support of MVVM Pattern to make it more clean and well structured and no need for injecting tons of services and code editting to set up the project to be ready to be used. \r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/434","RelatedDescription":"Open issue \"Native Support of MVVM Pattern\" (#434)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-03-26T05:30:44.4237843Z","RunDurationInMilliseconds":459}