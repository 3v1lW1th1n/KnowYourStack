{"Data":{"Blog":{"FeedItems":[{"Title":"Build and Release Five-Star Apps Faster","PublishedOn":"2017-10-10T17:49:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The first step in the life of a mobile app is build automation, which builds the app and runs required tests to make sure the app follows required rules. Build automation is also the first step towards shipping high quality, five-star mobile apps. When building iOS and Android mobile applications, one of the main challenges [&#8230;]","Href":"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/","RawContent":null},{"Title":"Developing Real-Time Communication Apps with WebSocket","PublishedOn":"2017-10-09T21:17:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"WebSockets is a two-way communication protocol, or persistence communication channel over TCP connection, an extremely powerful protocol leveraged by numerous games, apps with chat functionality, and real-time apps such as stock tickers. In this blog post, we&#8217;ll discuss how to build a simple Xamarin chat room application that will leverage and connect to an ASP.NET [&#8230;]","Href":"https://blog.xamarin.com/developing-real-time-communication-apps-with-websocket/","RawContent":null},{"Title":"DataBinding Power Moves You May Not Be Using (Yet)","PublishedOn":"2017-10-05T21:05:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"DataBinding is a fantastic feature that cleanly decouples your UI from the backing data models while providing the plumbing to move data back and forth as you need. But, are you getting the most out of the Binding features in Xamarin.Forms? Building on our previous Introduction to DataBinding and Advanced Data Binding posts, I’ll show [&#8230;]","Href":"https://blog.xamarin.com/databinding-power-moves-you-may-not-be-using-yet/","RawContent":null},{"Title":"The Solar System with ARKit and F#","PublishedOn":"2017-10-04T21:09:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few years ago, my colleague Joel Martinez and I wrote a F# program we called “Oculus Thrift” that demonstrated iOS SceneKit in a Google Cardboard stereoscopic viewer. With the recent release of iOS 11, I wanted to see if we could do something similar with ARKit, Apple’s augmented-reality framework. It took just 8 lines [&#8230;]","Href":"https://blog.xamarin.com/the-solar-system-with-arkit-and-f/","RawContent":null},{"Title":"Microcharts: Elegant Cross-Platform Charts for Every App","PublishedOn":"2017-10-03T19:13:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Alo&#239;s Deniel. Alo&#239;s works at Orange Applications for Business as a Xamarin consultant. You can find him on Twitter at @aloisdeniel and on Github at @aloisdeniel. Displaying charts in mobile apps has always been a great way to offer users a clear overview of numerical data. In my time [&#8230;]","Href":"https://blog.xamarin.com/microcharts-elegant-cross-platform-charts-for-any-app/","RawContent":null},{"Title":"Android Support Library v26 Overview","PublishedOn":"2017-10-02T19:25:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Android Support Library v26 brings lots of new features to our Android apps, including fonts as resources, downloadable fonts, emoji support, an autosizing TextView, physics driven animations via Spring and Fling, backwards compatibility for animated vectors, and a slimmer library by increasing the minSdkVersion to 14. If it isn&#8217;t already, the minSdkVersion for all [&#8230;]","Href":"https://blog.xamarin.com/android-support-library-v26-overview/","RawContent":null},{"Title":"Xamarin at Local Developer Events this October","PublishedOn":"2017-09-29T19:24:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re at the height of conference season, and that means tons of new and exciting releases, tooling, and updates to talk about with your local developer community! Mobile .NET developer conferences and meetups are the perfect opportunities to learn the latest on Xamarin and related technologies while networking with other developers. Below are just a [&#8230;]","Href":"https://blog.xamarin.com/xamarin-at-local-developer-events-this-october/","RawContent":null},{"Title":"Xamarin.Forms Stable Comes to .NET Standard 2.0","PublishedOn":"2017-09-28T19:45:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are thrilled to share our latest stable release of Xamarin.Forms, version 2.4.0. This is our fastest, most stable release ever and we think you’re going to love it! Xamarin.Forms 2.4.0 Highlights You’ll recognize many of these highlights as shared in our public roadmap, in addition to more than 150 bug fixes. .NET Standard [&#8230;]","Href":"https://blog.xamarin.com/xamarin-forms-stable-comes-to-net-standard-2-0/","RawContent":null},{"Title":"Webinar Recording | Exploring UrhoSharp 3D with Xamarin Workbooks Webinar","PublishedOn":"2017-09-27T18:35:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Folllow along with Charles Petzold as he builds a 3D app from the ground up with UrhoSharp and Xamarin Workbooks in this webinar recording. UrhoSharp is a powerful, high performance 3D graphics engine suitable for games, animation, and data visualization. Used together, UrhoSharp and Xamarin Workbooks give developers a streamlined way to get started with [&#8230;]","Href":"https://blog.xamarin.com/webinar-recording-exploring-urhosharp-3d-with-xamarin-workbooks-webinar/","RawContent":null},{"Title":"3 Reasons to Try Xamarin Previews in Visual Studio 2017","PublishedOn":"2017-09-26T16:57:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previews are a great way to try the latest-and-greatest in mobile development, from the new Xamarin Live Player that allows you to instantly visualize your XAML-based user interface as you type, to support for new SDKs like Android Oreo or iOS 11. Then arises the great dilemma: how do I try all the awesome stuff [&#8230;]","Href":"https://blog.xamarin.com/3-reasons-to-try-visual-studio-2017-version-15-4-previews/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6699870699","Type":"PullRequestEvent","CreatedAt":"2017-10-11T00:48:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/927","RelatedDescription":"Closed pull request \"Change md5withRSA to SHA1withRSA which is the default sig alg.\" (#927) at xamarin/xamarin-android","RelatedBody":"SHA1withRSA is now the default signature algorithm according to this JDK issue: https://bugs.openjdk.java.net/browse/JDK-6560733"},{"Id":"6699500931","Type":"PullRequestEvent","CreatedAt":"2017-10-10T22:31:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/929","RelatedDescription":"Opened pull request \"[tests] Distinguish tests between Configurations\" (#929) at xamarin/xamarin-android","RelatedBody":"Context: 0077d151\r\nContext: d1d9820a\r\n\r\nA \"funny\" thing happened when commit e9daf5ea didn't build on Jenkins:\r\nI realized that not all tests were run in all configurations. From\r\ncommit d1d9820a:\r\n\r\n> Why are some tests Debug-only and some aren't?\r\n\r\nThe answer: time, primarily. Why run tests multiple times, when they\r\ncan be potentially time-consuming?\r\n\r\nWhile tests can be slow, they're not always *that* slow -- except for\r\n`Xamarin.Android.Build.Tests` and the BCL tests -- and even there,\r\nprogram behavior can alter between Debug and Release configurations.\r\nSee in particular commit 0077d151, in which the BCL tests are run only\r\nin the Debug configuration because tests *failed* when run in the\r\nRelease configuration.\r\n\r\nThe desire, then, is to run *all* tests in both Debug and Release\r\nconfigurations. Yes, it'll take longer! So what! (Within reason:\r\n`Xamarin.Android.Build.Tests` should only be run once!)\r\n\r\nHowever, this raises two problems:\r\n\r\n 1. Filename collisions\r\n 2. Jenkins unit test display\r\n\r\nUntil now, all tests wrote files into a filename that didn't include\r\nthe Configuration, e.g. `TestResult-Mono.Android_Tests.xml`. If we did\r\nrun these tests twice, the second test invocation would overwrite the\r\nfirst test invocation. This isn't desirable.\r\n\r\nThen there's the display on Jenkins: if we did have e.g.\r\n`TestResult-Mono.Android_Tests-Debug.xml`\tand\r\n`TestResult-Mono.Android_Tests-Release.xml`, how will Jenkins display\r\nthat information? I haven't tested, but I would assume that one of two\r\nthings will occur, assuming reasonable Jenkins behavior:\r\n\r\n 1. Each test will be listed twice, e.g.\r\n\r\n        ApplicationContextIsApp\r\n        ApplicationContextIsApp\r\n\r\n 2. They'll be \"merged\" into a single entry.\r\n\r\nNeither of these behaviors is desirable: if Debug passes but Release\r\nfails, we need to be able to differentiate between them. Neither of\r\nthese possible renderings allows us to tell which configuration fails.\r\n\r\nSolve both of these problems by introducing a new `<RenameTestCases/>`\r\ntask. This task takes three values of importance:\r\n\r\n\t<RenameTestCases\r\n\t    Suffix=\"SUFFIX\"\r\n\t    SourceFiles=\"SOURCE\"\r\n\t    DestinationFiles=\"DESTINATION\"\r\n\t/>\r\n\r\nThe `<RenameTestCases/>` task will read in `SOURCE`, and if `SOURCE`\r\nis an XML file which we determine is NUnit2-formatted XML (root\r\nelement of `<test-case/>`), we will update every `//test-case/@name`\r\nvalue so that it ends with `SUFFIX`. The updated XML is then written\r\nto `DESTINATION`, and `SOURCE` is deleted.\r\n\r\nThus, if we have a Debug-configuration\r\n`TestResult-Mono.Android_Tests.xml` file with XML fragment:\r\n\r\n```xml\r\n<test-case\r\n    name=\"Mono.Android_Tests, Android.AppTests.ApplicationTest.ApplicationContextIsApp\"\r\n    ...\r\n/>\r\n```\r\n\r\nthen `<RenameTestCases/>` will create the file\r\n`TestResult-Mono.Android_Tests-Debug.xml` file with XML fragment:\r\n\r\n```xml\r\n<test-case\r\n    name=\"Mono.Android_Tests, Android.AppTests.ApplicationTest.ApplicationContextIsApp (Debug)\"\r\n    ...\r\n/>\r\n```\r\n\r\nThis allows us to run tests in both Debug and Release configurations\r\nwhile not inadvertently overwriting the `TestResults*.xml` files that\r\nJenkins reads, and ensuring that the Jenkins test result output is\r\nrendered in a meaningfully useful fashion.\r\n\r\nTODO: Update the Jenkins Configuration page so that tests are run\r\nseparately in the Release configuration:\r\n\r\n\tmake run-all-tests CONFIGURATION=Release V=1 || exit 1"},{"Id":"6697046940","Type":"PullRequestEvent","CreatedAt":"2017-10-10T14:00:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/924","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Only Ignore Lint Checks if its supported.\" (#924) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=59861\r\n\r\nWe started to ignore the `StaticFieldLeak` lint check. But this\r\nwas introduced in 26.0.2 of tools. So if we try to ignore this\r\ncheck in older versions it will error.\r\n\r\n\tInvalid id or category \"StaticFieldLeak\".\r\n\r\nSo we need to version the checks we ignore by default. This\r\ncommit puts these in a dictionary which includes the version\r\nnumber you can run them from."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6700445033","Type":"PullRequestEvent","CreatedAt":"2017-10-11T04:51:03","Actor":"ravinderjangra","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1195","RelatedDescription":"Closed pull request \"Merge pull request #2 from xamarin/master\" (#1195) at xamarin/Xamarin.Forms","RelatedBody":"Bringing fork up to date #2\r\n\r\n### Description of Change ###\r\n\r\nDescribe your changes here.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6700440117","Type":"PullRequestEvent","CreatedAt":"2017-10-11T04:48:43","Actor":"ravinderjangra","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1195","RelatedDescription":"Opened pull request \"Merge pull request #2 from xamarin/master\" (#1195) at xamarin/Xamarin.Forms","RelatedBody":"Bringing fork up to date #2\r\n\r\n### Description of Change ###\r\n\r\nDescribe your changes here.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6699662618","Type":"PullRequestEvent","CreatedAt":"2017-10-10T23:25:36","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1194","RelatedDescription":"Opened pull request \"Checking IsDestroyed before using FragmentManager in Dispose()\" (#1194) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdds a check for `IsDestroyed` before cleaning up `MasterDetailContainer` in `Dispose()` to avoid the exception thrown in [59996](https://bugzilla.xamarin.com/show_bug.cgi?id=59996).\r\n\r\n### Bugs Fixed ###\r\n\r\n- [59996 – Race condition when disposing MasterDetailPageRenderer on Android app restart](https://bugzilla.xamarin.com/show_bug.cgi?id=59996)\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6696065488","Type":"PullRequestEvent","CreatedAt":"2017-10-10T10:28:12","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1184","RelatedDescription":"Merged pull request \"[UWP] Fixed issue where Label.FormattedText was crashing.\" (#1184) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf a Label.FormattedText line contained a null (say from a binding), UWP would crash.\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60002\r\n\r\n### API Changes ###\r\n\r\nNone.\r\n\r\n### Behavioral Changes ###\r\n\r\nUsing a null in a span of the Label.FormattedText property will now no longer crash UWP.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6695252817","Type":"PullRequestEvent","CreatedAt":"2017-10-10T07:25:30","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/940","RelatedDescription":"Closed pull request \"[XamlG] use random (short) file names for XamlG outputs\" (#940) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUse random short filenames for XamlG outputs.\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=40077\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6694312644","Type":"PullRequestEvent","CreatedAt":"2017-10-10T01:05:09","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1192","RelatedDescription":"Merged pull request \"Revert \"Fix border on android buttons  (#941)\"\" (#1192) at xamarin/Xamarin.Forms","RelatedBody":"Same as #1178, but targeted at 2.4.0. There are too many conflicts to safely cherry-pick #1178 to 2.4.0.\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6698883276","Type":"PullRequestEvent","CreatedAt":"2017-10-10T20:04:16","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2834","RelatedDescription":"Merged pull request \"[msbuild] Switched to using System.Json instead of Newtonsoft.Json\" (#2834) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6698578926","Type":"PullRequestEvent","CreatedAt":"2017-10-10T19:00:27","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2874","RelatedDescription":"Merged pull request \"Fix a number of introspection test failures on 10.13 (#2815) (#2833)\" (#2874) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6697702043","Type":"PullRequestEvent","CreatedAt":"2017-10-10T15:52:20","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2873","RelatedDescription":"Closed pull request \"Update run-tests to use file.\" (#2873) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6697514825","Type":"PullRequestEvent","CreatedAt":"2017-10-10T15:20:08","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2872","RelatedDescription":"Merged pull request \"[foundation] Remove [Preserve(Conditional=true)] on the NSProxy hack\" (#2872) at xamarin/xamarin-macios","RelatedBody":"[foundation] Remove [Preserve(Conditional=true)] on the NSProxy hack (#2732) (#2734)\r\n\r\nThe attribute is not needed and makes everything link against WebKit\r\neven when not needed. Also update comment to be more accurate.\r\n\r\nUpdate fix for\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59247\r\n\r\nAdds test to verify presence/absence of NSProxy depending on WKWebView usage"},{"Id":"6697498994","Type":"PullRequestEvent","CreatedAt":"2017-10-10T15:17:26","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2874","RelatedDescription":"Opened pull request \"Fix a number of introspection test failures on 10.13 (#2815) (#2833)\" (#2874) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6696845184","Type":"PullRequestEvent","CreatedAt":"2017-10-10T13:24:05","Actor":"roguishmountain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2873","RelatedDescription":"Opened pull request \"Update run-tests to use file.\" (#2873) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917846344714391552","CreatedAt":"2017-10-10T20:16:35+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSMobileCenter: https://t.co/XHMCHeVNSB https://t.co/3hhv3CG6uh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"917779002781249539","CreatedAt":"2017-10-10T15:49:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to display data with #macOS Table Views: https://t.co/NHwCfrILH6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":14,"FavoriteCount":11,"RawContent":null},{"Id":"917501676159893504","CreatedAt":"2017-10-09T21:27:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0FzGbu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":103,"FavoriteCount":58,"RawContent":null},{"Id":"917416111804702720","CreatedAt":"2017-10-09T15:47:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample app that spans devices and mobile platforms using Microsoft's Project Rome: https://t.co/SLeQw6q4YO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":17,"RawContent":null},{"Id":"917203711692337152","CreatedAt":"2017-10-09T01:43:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @nishanil shows you how to add #facetracking and live recognition to your Android app: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":16,"RawContent":null},{"Id":"916789236879290370","CreatedAt":"2017-10-07T22:16:01+00:00","UserScreenname":"xamarinhq","Text":"Sign up for our FREE event in Denver (10/10) or McLean (10/12) where you'll learn how to build a #XamarinForms app:… https://t.co/frCmLy2kS5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"916409733246017536","CreatedAt":"2017-10-06T21:08:01+00:00","UserScreenname":"xamarinhq","Text":"Get excited! https://t.co/0m45zTRqFK","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"916329451205595137","CreatedAt":"2017-10-06T15:49:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample enterprise app with the Microsoft Authentication Library and #MicrosoftGraph APIs: https://t.co/d9Rlu92TWT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":28,"RawContent":null},{"Id":"916052505406197760","CreatedAt":"2017-10-05T21:28:31+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":28,"RawContent":null},{"Id":"915970088846659584","CreatedAt":"2017-10-05T16:01:01+00:00","UserScreenname":"xamarinhq","Text":"Upgrade to #XamarinForms Stable release 2.4.0 with .NET Standard 2.0 support today! Learn more about this release:… https://t.co/Ku71DbGybm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":94,"FavoriteCount":68,"RawContent":null},{"Id":"915688986986901504","CreatedAt":"2017-10-04T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/QclUHc5QGx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":26,"RawContent":null},{"Id":"915603919925125121","CreatedAt":"2017-10-04T15:46:00+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, check out our webinar recording on using UrhoSharp 3D and #Xamarin Workbooks to add 3D animation to your app: https://t.co/AG37mw39QS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"915295800825204736","CreatedAt":"2017-10-03T19:21:38+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #Microcharts in today's post from guest blogger @aloisdeniel :… https://t.co/Gl1XMS0UDG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":218,"FavoriteCount":86,"RawContent":null},{"Id":"915249837368627205","CreatedAt":"2017-10-03T16:19:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to embed any #XamarinForms ContentPage into your #Xamarin iOS and Android projects: https://t.co/U3QvCAOeFf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":30,"RawContent":null},{"Id":"914940829604679681","CreatedAt":"2017-10-02T19:51:07+00:00","UserScreenname":"xamarinhq","Text":"Add emoji support, physics driven animations, and more to your #Xamarin apps with Android Support Library v26:… https://t.co/iM0N4411PQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":36,"RawContent":null},{"Id":"914883429514215426","CreatedAt":"2017-10-02T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Join us for a FREE event in Denver or McLean to build, test, &amp; distribute a #XamarinForms app to supply a Mars crew… https://t.co/vJ9KA9FPmZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":8,"RawContent":null},{"Id":"914685619191808000","CreatedAt":"2017-10-02T02:57:00+00:00","UserScreenname":"xamarinhq","Text":"#XamarinDevDays is coming to a town near you! Learn how to build, test, and connect native apps with #Xamarin: https://t.co/Ytw07Fr9eL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":9,"RawContent":null},{"Id":"914295800875945984","CreatedAt":"2017-10-01T01:08:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to set up and configure an #Azure Notification Hub for your #Xamarin.iOS app: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":32,"RawContent":null},{"Id":"913848491146977282","CreatedAt":"2017-09-29T19:30:33+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you this October: https://t.co/5rVXaUkyTD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":9,"RawContent":null},{"Id":"913793742737375232","CreatedAt":"2017-09-29T15:53:00+00:00","UserScreenname":"xamarinhq","Text":"5 ways to boost a #XamarinForms app's start up time: https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":24,"RawContent":null}]}},"RunOn":"2017-10-11T05:30:35.359104Z","RunDurationInMilliseconds":3493}