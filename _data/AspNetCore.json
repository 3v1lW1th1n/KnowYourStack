{"Data":{"Blog":{"FeedItems":[{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7 Preview 4. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7609198841","Type":"IssuesEvent","CreatedAt":"2018-04-30T23:03:44","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3110","RelatedDescription":"Opened issue \"Check for usages of PhysicalFileProvider in all repos for leaks\" (#3110) at aspnet/Home","RelatedBody":"Related to issue: https://github.com/aspnet/Mvc/issues/7696\r\n\r\nRepos where we instantiate the PhysicalFileProvider currently:\r\n- Hosting\r\n- Configuration\r\n\r\n**Repro:**\r\nYou should see the memory increasing rapidly when you run the below app. Un-comment the line which uses the finalizer to see the memory usage being stable.\r\n```c#\r\nusing Microsoft.Extensions.FileProviders;\r\nusing Microsoft.Extensions.Primitives;\r\nusing System;\r\nusing System.Diagnostics;\r\n\r\nnamespace PhysicalFileProviderLeakInvestigation\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Process Id:\" + Process.GetCurrentProcess().Id);\r\n            Console.WriteLine(\"Enter any key to start watching folders...\");\r\n            Console.ReadKey();\r\n\r\n            while (true)\r\n            {\r\n                var fp = new PhysicalFileProvider(@\"c:\\github\\mvc\");\r\n                //var fp = new FinalizingPhysicalFileProvider(new PhysicalFileProvider(@\"c:\\github\\mvc\"));\r\n                fp.Watch(\"*.*\");\r\n            }\r\n        }\r\n    }\r\n\r\n    class FinalizingPhysicalFileProvider : IFileProvider\r\n    {\r\n        private readonly PhysicalFileProvider _physicalFileProvider;\r\n\r\n        public FinalizingPhysicalFileProvider(PhysicalFileProvider physicalFileProvider)\r\n        {\r\n            _physicalFileProvider = physicalFileProvider;\r\n        }\r\n\r\n        public IDirectoryContents GetDirectoryContents(string subpath)\r\n        {\r\n            return _physicalFileProvider.GetDirectoryContents(subpath);\r\n        }\r\n\r\n        public IFileInfo GetFileInfo(string subpath)\r\n        {\r\n            return _physicalFileProvider.GetFileInfo(subpath);\r\n        }\r\n\r\n        public IChangeToken Watch(string filter)\r\n        {\r\n            return _physicalFileProvider.Watch(filter);\r\n        }\r\n\r\n        ~FinalizingPhysicalFileProvider()\r\n        {\r\n            _physicalFileProvider.Dispose();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncc @Tratcher "},{"Id":"7609016281","Type":"IssuesEvent","CreatedAt":"2018-04-30T22:09:22","Actor":"ryanbrandenburg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3080","RelatedDescription":"Closed issue \"Create a sample to showcase a EF based locatization\" (#3080) at aspnet/Home","RelatedBody":""},{"Id":"7608767816","Type":"IssuesEvent","CreatedAt":"2018-04-30T21:09:06","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3105","RelatedDescription":"Closed issue \"AspNetCore 2.1-preview2 - System.Text.DecoderFallbackException\" (#3105) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI recently upgraded my code from asp.net core 2.0 to asp.net core 2.1-preview2. Since we upgraded we are encountering a crash in the production (for some requests) which never occurred before for the same code:\r\n\r\n```\r\nSystem.Text.DecoderFallbackException · Unable to translate bytes [C7] at index 829 from specified code page to Unicode.\r\nSystem.Text.DecoderExceptionFallbackBuffer.Throw(byte[] bytesUnknown, int index)\t\r\nSystem.Text.DecoderExceptionFallbackBuffer.Fallback(byte[] bytesUnknown, int index)\t\r\nSystem.Text.DecoderFallbackBuffer.InternalFallback(byte[] bytes, Byte* pBytes, ref Char* chars)\t\r\nSystem.Text.UTF8Encoding.GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder)\t\r\nSystem.Text.DecoderNLS.GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, bool flush)\t\r\nSystem.Text.DecoderNLS.GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex)\t\r\nMicrosoft.AspNetCore.WebUtilities.HttpRequestStreamReader.ReadIntoBuffer()\t\r\nMicrosoft.AspNetCore.WebUtilities.HttpRequestStreamReader.Read(char[] buffer, int index, int count)\t\r\nNewtonsoft.Json.JsonTextReader.ReadData(bool append, int charsRequired)\t\r\nNewtonsoft.Json.JsonTextReader.ParseValue()\t\r\nNewtonsoft.Json.JsonTextReader.Read()\t\r\nNewtonsoft.Json.JsonReader.ReadForType(JsonContract contract, bool hasConverter)\t\r\nNewtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, bool checkAdditionalContent)\t\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\t\r\nMicrosoft.AspNetCore.Mvc.Formatters.JsonInputFormatter+<ReadRequestBodyAsync>d__17.MoveNext()\t\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\t\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\t\r\nSystem.Runtime.CompilerServices.TaskAwaiter<TResult>.GetResult()\t\r\nMicrosoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder+<BindModelAsync>d__7.MoveNext()\t\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\t\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\t\r\nMicrosoft.AspNetCore.Mvc.ModelBinding.ParameterBinder+<BindModelAsync>d__11.MoveNext()\t\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\t\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\t\r\nSystem.Runtime.CompilerServices.TaskAwaiter<TResult>.GetResult()\t\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider+<>c__DisplayClass0_0+<<CreateBinderDelegate>g__Bind|0>d.MoveNext()\t\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\t\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\t\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeInnerFilterAsync>d__13.MoveNext()\t\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\t\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\t\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextExceptionFilterAsync>d__24.MoveNext()\r\n```\r\n\r\nIt seems request parsing is failing which wasn't happening before. Can't even log the request model as crash occurs before the controller action is called."},{"Id":"7608349885","Type":"IssuesEvent","CreatedAt":"2018-04-30T19:38:33","Actor":"GithubCSL","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3109","RelatedDescription":"Opened issue \"The type or namespace name 'SignInManager<Admin>' could not be found (are you missing a using directive or an assembly reference?)\" (#3109) at aspnet/Home","RelatedBody":"To address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFrameworkCore\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - Docker with ASP.NET Core: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n - note: several repositories have migrated their issues tracker to this repo here\r\n\r\nOther common projects:\r\n\r\n - .NET Core CLI and SDK: https://github.com/dotnet/core\r\n - .NET Core runtime: https://github.com/dotnet/coreclr\r\n - .NET Core libraries: https://github.com/dotnet/corefx\r\n - NuGet: https://github.com/NuGet/home\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n"},{"Id":"7608003090","Type":"IssuesEvent","CreatedAt":"2018-04-30T18:25:17","Actor":"pakrym","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3108","RelatedDescription":"Opened issue \"Add ANCM InProcess tests to WebSockets\" (#3108) at aspnet/Home","RelatedBody":""},{"Id":"7607669648","Type":"IssuesEvent","CreatedAt":"2018-04-30T17:15:11","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3107","RelatedDescription":"Closed issue \"AspNetCore 2.1-preview2: Identity & VS2017 - No Option to Use Active Directory\" (#3107) at aspnet/Home","RelatedBody":"Please explain: Why is no option to use our existing active directory directory service?\r\n\r\nReference:\r\nhttps://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-2.1&tabs=visual-studio%2Caspnetcore2x\r\n\r\nVS 2017:\r\n![image](https://user-images.githubusercontent.com/25458098/39439070-5f1d7e1e-4c74-11e8-9510-6ccfda1cf859.png)\r\n\r\nMicrosoft Visual Studio Community 2017 Version 15.6.7\r\nVisualStudio.15.Release/15.6.7+27428.2043\r\nMicrosoft .NET Framework Version 4.7.02053\r\nInstalled Version: Community\r\n\r\nMicrosoft Visual Studio Tools for Applications 2017   00369-60000-00001-AA213\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET Core Razor Language Services   1.0\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\n\r\n\r\n\r\n\r\n"},{"Id":"7607563508","Type":"IssuesEvent","CreatedAt":"2018-04-30T16:53:15","Actor":"robertparis","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3107","RelatedDescription":"Opened issue \"AspNetCore 2.1-preview2: Identity & VS2017 - No Option to Use Active Directory\" (#3107) at aspnet/Home","RelatedBody":"Please explain: Why is no option to use our existing active directory directory service?\r\n\r\nReference:\r\nhttps://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-2.1&tabs=visual-studio%2Caspnetcore2x\r\n\r\nVS 2017:\r\n![image](https://user-images.githubusercontent.com/25458098/39439070-5f1d7e1e-4c74-11e8-9510-6ccfda1cf859.png)\r\n\r\nMicrosoft Visual Studio Community 2017 Version 15.6.7\r\nVisualStudio.15.Release/15.6.7+27428.2043\r\nMicrosoft .NET Framework Version 4.7.02053\r\nInstalled Version: Community\r\n\r\nMicrosoft Visual Studio Tools for Applications 2017   00369-60000-00001-AA213\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET Core Razor Language Services   1.0\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7609346577","Type":"IssuesEvent","CreatedAt":"2018-04-30T23:54:57","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2071","RelatedDescription":"Closed issue \"Transports do not use ConnectionLogScope when logging\" (#2071) at aspnet/SignalR","RelatedBody":"The transports on the server do not use a log scope with the connection ID - `ConnectionLogScope` - when logging so it is not easy to see in logs which connection a transport is receiving from or sending to."},{"Id":"7609340740","Type":"IssuesEvent","CreatedAt":"2018-04-30T23:52:47","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2126","RelatedDescription":"Closed issue \"Performance tests for HubConnection's receive loop\" (#2126) at aspnet/SignalR","RelatedBody":"We need some microbenchmarks for HubConnection's receive loop. This might be hard to test with BDN since its a callback based API."},{"Id":"7609338602","Type":"PullRequestEvent","CreatedAt":"2018-04-30T23:52:02","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2164","RelatedDescription":"Merged pull request \"Add HubConnection receive benchmark\" (#2164) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/issues/2126"},{"Id":"7609336719","Type":"PullRequestEvent","CreatedAt":"2018-04-30T23:51:19","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2085","RelatedDescription":"Merged pull request \"Add connection id to sink log for unit tests\" (#2085) at aspnet/SignalR","RelatedBody":""},{"Id":"7609131719","Type":"PullRequestEvent","CreatedAt":"2018-04-30T22:42:29","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2173","RelatedDescription":"Opened pull request \"fix #2140 by ensuring the access token flows to WebSocketTransport\" (#2173) at aspnet/SignalR","RelatedBody":"Right now I do it by rewriting the access token factory on the HttpConnectionOptions. I'm open to other options, we could flow it through the factory but it gets a bit funky because we either have to deal with the fact that the access token provider is async but `ITransportFactory` is not (currently)."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7609114158","Type":"PullRequestEvent","CreatedAt":"2018-04-30T22:37:11","Actor":"natemcmaster","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7723","RelatedDescription":"Merged pull request \"Merge branch release/2.1 and bump experimental package to 0.2.0\" (#7723) at aspnet/Mvc","RelatedBody":""},{"Id":"7609079262","Type":"PullRequestEvent","CreatedAt":"2018-04-30T22:27:17","Actor":"natemcmaster","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7723","RelatedDescription":"Opened pull request \"Merge branch release/2.1 and bump experimental package to 0.2.0\" (#7723) at aspnet/Mvc","RelatedBody":""},{"Id":"7608814510","Type":"IssuesEvent","CreatedAt":"2018-04-30T21:19:36","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7722","RelatedDescription":"Opened issue \"Provide an option to log request body when deserialization fails\" (#7722) at aspnet/Mvc","RelatedBody":"Related to issue: https://github.com/aspnet/Home/issues/3105\r\n\r\nWriting an exception filter to log the request body feels too much work for a scenario(bad data in request body) which feels common:\r\n\r\n- Should we provide an option for logging request body when deserialization fails? If request body is buffered(default), we log it otherwise we don't.\r\n-  Should we log for non-formatters scenario i.e regular ModelBinding too to keep the experience consistent? I believe we always buffer the request body in case of this.\r\n\r\nNot sure if there would be security concerns about logging request body data."},{"Id":"7608214348","Type":"PullRequestEvent","CreatedAt":"2018-04-30T19:08:49","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7721","RelatedDescription":"Opened pull request \"Added a template for filing issues\" (#7721) at aspnet/Mvc","RelatedBody":"How a created issue would look like with this template:\r\n![image](https://user-images.githubusercontent.com/6559784/39445191-1e9422da-4c6f-11e8-9619-95be812cad4b.png)\r\n"},{"Id":"7607437861","Type":"IssuesEvent","CreatedAt":"2018-04-30T16:27:28","Actor":"ryanbrandenburg","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6929","RelatedDescription":"Closed issue \"Implicit translations for implicit validation!\" (#6929) at aspnet/Mvc","RelatedBody":"ASP.NET MVC has a great feature: Implicit translations for default error messages and/or implicit validation!\r\nLet's take this model:\r\n\r\n```csharp\r\npublic class MyModel {\r\n    public int Id { get; set; }\r\n    public int MyInt { get; set; }\r\n    public DateTime MyDateTime { get; set; }\r\n    [Required] public string MyString { get; set; }\r\n}\r\n```\r\n\r\nAll I have to do is changing the `CurrentUICulture`:\r\n![grafik](https://user-images.githubusercontent.com/4819891/31329924-889ddff0-acdc-11e7-90fe-f8a6a906713b.png)\r\n\r\n**Please tell me where's the feature gone in ASP MVC Core?**\r\n\r\n------\r\nPlease keep in mind\r\n- The official documentation \"Globalization and localization in ASP.NET Core\" (https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization) ignores this question. Following those instructions would end up in adding thousands of validation attributes (implicit validation becomes explicit validation). Even worse: Each validation attribute must have the `ErrorMessage` specified. Even worse, part 2: Each `ErrorMessage` must get the translated string provided by a resource file (*.resx), one per model. Since I cannot use placeholder (e.g. `\"The {0} field is required.\"`) I have to do that for each property in each model. That's insane!\r\n- I know there are proposals out there to add explicit validation with the help of an `IValidationMetadataProvider`, e.g. https://blogs.msdn.microsoft.com/mvpawardprogram/2017/05/09/aspnetcore-mvc-error-message/. But I won't accept these ones as an answer. There are too error-prone. Even worse: The example spoils the complete concept of localization by pinning the error message to a single resource class.\r\n\r\nPlease tell me that I don't have to write hundreds of lines just to get the status quo!\r\n"},{"Id":"7606567988","Type":"IssuesEvent","CreatedAt":"2018-04-30T13:49:19","Actor":"enemyofthedawn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7720","RelatedDescription":"Opened issue \"IUrlHelper and support for RouteOptions.LowercaseUrls\" (#7720) at aspnet/Mvc","RelatedBody":"I have the following setting:\r\n\r\n`services.Configure<RouteOptions>(opt => opt.LowercaseUrls = true);`\r\n\r\nWhen I generate URL from my controller, query parameters are named like in C#, for example\r\n\r\n`query?Property=x`\r\n\r\nI expected it to be `query?property=x`, ideally in camel case. So `query?propertySomething=x`"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7608721194","Type":"PullRequestEvent","CreatedAt":"2018-04-30T20:58:55","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1777","RelatedDescription":"Closed pull request \"Added SignInManager interface\" (#1777) at aspnet/Identity","RelatedBody":"It is terrible to mock SignInManager without an interface."},{"Id":"7608428022","Type":"PullRequestEvent","CreatedAt":"2018-04-30T19:55:52","Actor":"zahasoft","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1777","RelatedDescription":"Opened pull request \"Added SignInManager interface\" (#1777) at aspnet/Identity","RelatedBody":"It is terrible to mock SignInManager without an interface."},{"Id":"7606612830","Type":"IssuesEvent","CreatedAt":"2018-04-30T13:57:45","Actor":"smoro88","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1776","RelatedDescription":"Opened issue \"Create UserManager in Static Class\" (#1776) at aspnet/Identity","RelatedBody":"I am trying to get a list of Users back from UserManager but I am having issues understanding how this is accomplished.  \r\n\r\npublic class Util\r\n    {\r\n\t\tprivate readonly UserManager<ApplicationUser> _userManager;\r\n     \r\n\t\tpublic Util(UserManager<ApplicationUser> userManager)\r\n        {\r\n            _userManager = userManager;\r\n        }\r\n        \r\n\t\tpublic  List<ApplicationUser> GetAllUserList()\r\n        {\r\n            var users = _userManager.Users.ToAsyncEnumerable().ToList().Result;\r\n            return users;\r\n        }\r\n\r\n    }\r\n\r\nHowever when I create a instance of the Utility class it wants me to pass in a UserManager context and I thought DI would take care of this.  \r\n\r\nThoughts\r\nSteve"},{"Id":"7606565096","Type":"IssuesEvent","CreatedAt":"2018-04-30T13:48:45","Actor":"renatoprogramer","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1775","RelatedDescription":"Opened issue \"I feel tied up there is a class with wrong entity column names by intentional pattern\" (#1775) at aspnet/Identity","RelatedBody":"I would like you to be able to customize my user ID class\r\n\r\nCan not do this\r\n\r\n    public class User\r\n    {\r\n        [Key]\r\n        public long id { get; set; }\r\n        public string name { get; set; }\r\n        public string lastname { get; set; }\r\n        [EmailAddress]\r\n        public string email { get; set; }\r\n        public string password { get; set; }\r\n        public string tel { get; set; }\r\n        public string cel { get; set; }\r\n        public DateTime created { get; set; }\r\n\r\n    }\r\n\r\n\r\n            services.AddIdentity<User, IdentityRole>()\r\n                .AddEntityFrameworkStores<EntityContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n\r\nCould an interface of identityUser to complement and use names as we do not like the names of the columns identityUser\r\n\r\n\r\n"},{"Id":"7601120226","Type":"IssuesEvent","CreatedAt":"2018-04-28T09:57:18","Actor":"melvillo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1770","RelatedDescription":"Closed issue \"2fa recovery code is not working (invalid)\" (#1770) at aspnet/Identity","RelatedBody":"Hi,\r\nSeems there is an issue with 2fa recovery code as it's not working.\r\n1. Create a new ASP.NET Core Web project with built-in authentication, and deploy the db as default schema\r\n2. Create a new user, and enable it's 2fa by using Microsoft Authentication app or Google's, copy the 2fa recovery code\r\n3. Log out, and re-Log in, but use the 2fa recovery code to reset the 2fa settings, then you can get the error message\r\n\r\nnetcoreapp2.0\r\nMicrosoft.AspNetCore.All            Version=\"2.0.6\" \r\nMicrosoft.EntityFrameworkCore.Tools          Version=\"2.0.2\""},{"Id":"7600370061","Type":"IssuesEvent","CreatedAt":"2018-04-28T01:28:03","Actor":"smitpatel","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1774","RelatedDescription":"Opened issue \"Migration Table name override not honored\" (#1774) at aspnet/Identity","RelatedBody":"_From @snovak7 on April 27, 2018 20:25_\n\nFirst I create my custom DbContext\r\n\r\n```c#\r\npublic class DbContext : \r\n    IdentityDbContext<User, Role, Guid, UserClaim, UserRole, UserLogin, RoleClaim, UserToken> {}\r\n```\r\n\r\nMy User looks like this\r\n\r\n```c#\r\n[Table(\"MyCustomUser\", Schema = \"users\")]\r\n    public class User : IdentityUser<Guid> {}\r\n```\r\n\r\nI setup environment that I can generate my migration code.\r\nFor the test case I included Schema, which worked...\r\n\r\n```c#\r\n            migrationBuilder.CreateTable(\r\n                name: \"AspNetUsers\",\r\n                schema: \"users\",\r\n```\r\n\r\n```c#\r\n                    b.ToTable(\"AspNetUsers\",\"users\");\r\n```\r\n\r\n### Further technical details\r\nEF Core version: 2.0.2-rtm\r\nDatabase Provider: Microsoft.EntityFrameworkCore.SqlServer, Npsql.EntityFrameworkCore.PostgreSQL\r\nOperating system: MacOS High Sierra 10.13.4\r\nIDE: dotnet cli for Migrations, Visual Studio Enterprise 2017 for Mac (Preview)\r\nVersion 7.5 Preview (7.5 build 1222)\r\n\n\n_Copied from original issue: aspnet/EntityFrameworkCore#11843_"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7609020380","Type":"PullRequestEvent","CreatedAt":"2018-04-30T22:10:28","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2534","RelatedDescription":"Opened pull request \"Don't complete KestrelServer.StopAsync task inline\" (#2534) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7608828285","Type":"PullRequestEvent","CreatedAt":"2018-04-30T21:22:46","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2533","RelatedDescription":"Opened pull request \"Don't throw on FIN from upgraded connections\" (#2533) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7608728000","Type":"IssuesEvent","CreatedAt":"2018-04-30T21:00:23","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2532","RelatedDescription":"Opened issue \"Don't throw on FIN from upgraded connections\" (#2532) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7608432750","Type":"PullRequestEvent","CreatedAt":"2018-04-30T19:56:57","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2531","RelatedDescription":"Merged pull request \"Use TaskCreationOptions.RunContinuationsAsynchronously a lot\" (#2531) at aspnet/KestrelHttpServer","RelatedBody":"Carpet bombing with `TaskCreationOptions.RunContinuationsAsynchronously`"},{"Id":"7607898267","Type":"IssuesEvent","CreatedAt":"2018-04-30T18:03:08","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2507","RelatedDescription":"Reopened issue \"Flaky Test: ResponseTests.Sending100ContinueDoesNotStartResponse\" (#2507) at aspnet/KestrelHttpServer","RelatedBody":"```\r\nAssert.Contains() Failure\r\nNot found: (filter expression)\r\nIn value:  ConcurrentQueue<LogMessage> [LogMessage { EventId = 3, Exception = null, LogLevel = Debug, Message = \"Hosting starting\" }, LogMessage { EventId = 4, Exception = null, LogLevel = Debug, Message = \"Hosting started\" }, LogMessage { EventId = 0, Exception = null, LogLevel = Debug, Message = \"Loaded hosting startup assembly Libuv.FunctionalTe\"... }, LogMessage { EventId = ConnectionStart, Exception = null, LogLevel = Debug, Message = \"Connection id \\\"0HLD6AI9FD4SE\\\" started.\" }, LogMessage { EventId = 1, Exception = null, LogLevel = Information, Message = \"Request starting HTTP/1.1 POST http:///  \" }, ...]\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.<Sending100ContinueDoesNotStartResponse>d__46.MoveNext() in /_/test/Kestrel.FunctionalTests/ResponseTests.cs:line 1685\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nhttp://aspnetci/viewLog.html?buildId=451859&tab=buildResultsDiv&buildTypeId=Lite_KestrelStressTest"},{"Id":"7607702967","Type":"PullRequestEvent","CreatedAt":"2018-04-30T17:22:14","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2531","RelatedDescription":"Opened pull request \"Use TaskCreationOptions.RunContinuationsAsynchronously a lot\" (#2531) at aspnet/KestrelHttpServer","RelatedBody":"Carpet bombing with `TaskCreationOptions.RunContinuationsAsynchronously`"},{"Id":"7607170855","Type":"PullRequestEvent","CreatedAt":"2018-04-30T15:37:16","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2526","RelatedDescription":"Merged pull request \"React to pool cleanup\" (#2526) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7609325419","Type":"IssuesEvent","CreatedAt":"2018-04-30T23:47:02","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2303","RelatedDescription":"Closed issue \"Microsoft.AspNetCore.Razor.Tools.ServerCommandTest.WritePidFile_WorksAsExpected test failure\" (#2303) at aspnet/Razor","RelatedBody":"The build: https://ci3.dot.net/job/aspnet_Razor/job/dev/job/windows-Configuration_Release_prtest/67/\r\n```\r\n13:34:49   [xUnit.net 00:00:01.5014114]     Microsoft.AspNetCore.Razor.Tools.ServerCommandTest.WritePidFile_WorksAsExpected [FAIL]\r\n13:34:49   Failed   Microsoft.AspNetCore.Razor.Tools.ServerCommandTest.WritePidFile_WorksAsExpected\r\n13:34:50 RUNDOTNET : error Message:  [C:\\Users\\dotnet-bot\\.dotnet\\buildtools\\korebuild\\2.2.0-preview1-17037\\KoreBuild.proj]\r\n13:34:50    System.IO.IOException : The process cannot access the file 'C:\\Users\\dotnet-bot\\.dotnet\\pids\\build\\rzc-3168' because it is being used by another process.\r\n13:34:50   Stack Trace:\r\n13:34:50      at System.IO.FileSystem.DeleteFile(String fullPath)\r\n13:34:50      at System.IO.File.Delete(String path)\r\n13:34:50      at Microsoft.AspNetCore.Razor.Tools.ServerCommandTest.WritePidFile_WorksAsExpected() in /_/test/Microsoft.AspNetCore.Razor.Tools.Test/ServerCommandTest.cs:line 55\r\n13:34:50   Invalid argument(s).\r\n```"},{"Id":"7609322652","Type":"PullRequestEvent","CreatedAt":"2018-04-30T23:46:02","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2319","RelatedDescription":"Merged pull request \"Fix flaky test failure in ServerCommandTest\" (#2319) at aspnet/Razor","RelatedBody":"#2303 \r\n\r\n"},{"Id":"7608707721","Type":"IssuesEvent","CreatedAt":"2018-04-30T20:55:57","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2298","RelatedDescription":"Closed issue \"TagHelperDescriptorComparers GetHashCode methods are too expensive\" (#2298) at aspnet/Razor","RelatedBody":"We do too much to calculate hash codes for TagHelperDescriptors. At design time this ends up accounting for around 2.6% of overall execution. We can simplify this significantly by only looking at the `Name`, `Kind` and `AssemblyName`.\r\n\r\n```\r\n\r\nName | Inc % | Inc\r\n-- | -- | --\r\nMicrosoft.AspNetCore.Razor.Language!TagHelperDescriptorComparer.GetHashCode | 2.6 | 210\r\n\r\n\r\nName | Inc % | Inc\r\n-- | -- | --\r\nMicrosoft.AspNetCore.Razor.Language!TagHelperDescriptorComparer.GetHashCode | 3.7 | 298\r\n+   Microsoft.AspNetCore.Razor.Language!TagMatchingRuleDescriptorComparer.GetHashCode | 1.9 | 154\r\n\\|+   system.core.ni!System.Linq.OrderedEnumerable`1+<GetEnumerator>d__1[System.__Canon].MoveNext() | 1.1 | 90\r\n\\|+   Microsoft.AspNetCore.Razor.Language!RequiredAttributeDescriptorComparer.GetHashCode | 0.4 | 29\r\n\\|+ clr!JIT_New | 0.2 | 17\r\n\\|+   mscorlib.ni!System.OrdinalComparer.GetHashCode(System.String) | 0.1 | 6\r\n+   system.core.ni!System.Linq.OrderedEnumerable`1+<GetEnumerator>d__1[System.__Canon].MoveNext() | 0.8 | 61\r\n+ system.core.ni!System.Linq.OrderedEnumerable`1[System.__Canon].GetEnumerator() | 0.4 | 31\r\n+   Microsoft.AspNetCore.Razor.Language!BoundAttributeDescriptorComparer.GetHashCode | 0.3 | 26\r\n+ clr!JIT_New | 0.2 | 13\r\n\r\n\r\n\r\n```\r\n\r\n/cc @ToddGrun "},{"Id":"7608707667","Type":"PullRequestEvent","CreatedAt":"2018-04-30T20:55:57","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2317","RelatedDescription":"Merged pull request \"Fix #2298 simplify TagHelperDescriptor hash\" (#2317) at aspnet/Razor","RelatedBody":"The hash code implementation here is exhaustive when it doesn't need to\r\nbe. Slimming this down to a much more reasonable set of things for perf\r\nreasons."},{"Id":"7608696318","Type":"IssuesEvent","CreatedAt":"2018-04-30T20:53:30","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2311","RelatedDescription":"Closed issue \"Broken tests: Build_RazorOutputPath_SetToNonDefault et al\" (#2311) at aspnet/Razor","RelatedBody":"These tests [fail](http://aspnetci/viewLog.html?buildId=456588&buildTypeId=XPlat_Mac_MacUniverseCoreCLR) occasionally on OSX-Universe\r\n\r\n```\r\nNo stacktrace available\r\n```\r\n\r\nThis is likely a dupe of #2309 but we should figure out why we don't get any output when it happens on OSX."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":251,"FavoriteCount":148,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":97,"FavoriteCount":55,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-05-01T05:30:12.5521702Z","RunDurationInMilliseconds":7845}