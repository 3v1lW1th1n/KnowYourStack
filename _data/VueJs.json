{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6895434333","Type":"IssuesEvent","CreatedAt":"2017-11-23T13:52:08","Actor":"vue-issue-bot","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1902","RelatedDescription":"Closed issue \"keep-alive后，后退如何销毁缓存\" (#1902) at vuejs/vue-router","RelatedBody":"期望能够前进时保持组件状态，后退能够销毁组件的状态"},{"Id":"6895434251","Type":"IssuesEvent","CreatedAt":"2017-11-23T13:52:07","Actor":"iceuncle","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1902","RelatedDescription":"Opened issue \"keep-alive后，后退如何销毁缓存\" (#1902) at vuejs/vue-router","RelatedBody":"期望能够前进时保持组件状态，后退能够销毁组件的状态"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6901326568","Type":"PullRequestEvent","CreatedAt":"2017-11-25T05:26:10","Actor":"snaptopixel","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1067","RelatedDescription":"Opened pull request \"Add subscribeAction in index.d.ts fixes #1066\" (#1067) at vuejs/vuex","RelatedBody":"Looks like this one slipped through the cracks, thanks for all the hard work!"},{"Id":"6898366341","Type":"IssuesEvent","CreatedAt":"2017-11-24T09:13:47","Actor":"jvanoostrum","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1066","RelatedDescription":"Opened issue \"TypeScript declaration for subscribeAction missing\" (#1066) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n### Steps to reproduce\r\nTry to subscribe to an action within the store with the new introduced method in version 3.0.1 subscribeAction.\r\n\r\n### What is expected?\r\nNo error\r\n\r\n### What is actually happening?\r\n[ts] Property 'subscribeAction' does not exist on type 'Store<{}>'.\r\n\r\n---\r\nPlease add typescript declaration just like line 19 of https://github.com/vuejs/vuex/blob/dev/types/index.d.ts\r\nsubscribeAction<P extends MutationPayload>(fn: (mutation: P, state: S) => any): () => void;\r\n\r\nand instead of MutationPayload maybe ActionPayload.\r\nand instead of mutation maybe action\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6898239116","Type":"IssuesEvent","CreatedAt":"2017-11-24T08:39:35","Actor":"donnysim","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1065","RelatedDescription":"Closed issue \"input[number] value does not update after committing value of 1\" (#1065) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6h3x0pqm/](https://jsfiddle.net/6h3x0pqm/)\r\n\r\n### Steps to reproduce\r\nClick down on the first input to reduce the value to 0.\r\n\r\n### What is expected?\r\nBoth inputs are in sync and cannot reach 0 or lower.\r\n\r\n### What is actually happening?\r\nFirst input does not reflect the value in store when commited value is 1 while the second one works when it commits the value of 2 or greater.\r\n\r\n---\r\nNot really sure this is Vue or Vuex specific, sorry :|\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6898190561","Type":"IssuesEvent","CreatedAt":"2017-11-24T08:24:55","Actor":"donnysim","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1065","RelatedDescription":"Opened issue \"input[number] value does not update after committing value of 1\" (#1065) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6h3x0pqm/](https://jsfiddle.net/6h3x0pqm/)\r\n\r\n### Steps to reproduce\r\nClick down on the first input to reduce the value to 0.\r\n\r\n### What is expected?\r\nBoth inputs are in sync and cannot reach 0 or lower.\r\n\r\n### What is actually happening?\r\nFirst input does not reflect the value in store when commited value is 1 while the second one works when it commits the value of 2 or greater.\r\n\r\n---\r\nNot really sure this is Vue or Vuex specific, sorry :|\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6898081342","Type":"IssuesEvent","CreatedAt":"2017-11-24T07:47:53","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1064","RelatedDescription":"Closed issue \"Vuex state can not watch which state data changed twice\" (#1064) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n### Steps to reproduce\r\nMy code of store module\r\n```\r\nconst state = {\r\n    menus: []\r\n}\r\nconst mutations = {\r\n    ....\r\n    ADD_CONTEXTMENUS (state, params) {\r\n        let menus = _(params).isArray() ? params : [params]\r\n        _(menus).each(menu => {\r\n            menu.id = `context_menu_${menu.name}`\r\n            menu.visible = false\r\n            menu.position = false\r\n            menu.callback = _(menu).has('callback')\r\n                ? name => {} : name => menu.callback(name)\r\n            menu.items = _(menu).has('items') ? menu.items : []\r\n            state.menus.push(menu)\r\n        })\r\n    },\r\n    OPEN_CONTEXTMENU (state, params) {\r\n        for (let index in state.menus) {\r\n            if (state.menus[index].name === params.name) {\r\n                state.menus[index].visible = true\r\n                state.menus[index].position = params.position\r\n            }\r\n        }\r\n        console.log(state.menus)\r\n    },\r\n    CLOSE_ALL_CONTEXTMENU (state) {\r\n        for (let index in state.menus) {\r\n            state.menus[index].visible = false\r\n            state.menus[index].position = false\r\n        }\r\n        console.log(state.menus[0].visible)\r\n    }\r\n}\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    mutations,\r\n    actions\r\n}\r\n```\r\ncomponent template code\r\n```\r\n<v-dropdown :visible=\"menu.visible\" />\r\n```\r\ncomponent script code\r\n\r\n```\r\n...\r\n\r\nprops: ['name'],\r\ncreated () {\r\n            this.addContextMenus([{\r\n                name: 'writerbook_finder',\r\n                items: [{\r\n                    name: 'fff',\r\n                    text: 'ffff'\r\n                }, {\r\n                    name: 'ddd',\r\n                    text: 'ddd'\r\n                }]\r\n            }])\r\n            this.$store.watch(\r\n                () => this.menu,\r\n                () => this.setPositionOfMenu(),\r\n                {\r\n                    deep: true\r\n                }\r\n            )\r\n},\r\ncomputed: {\r\n       menu () {\r\n        return _(this.$store.state.ContextMenus.menus)\r\n        .filter(menu => menu.name === this.name)\r\n        .first()\r\n       }\r\n},\r\nmethods: {\r\n    ...mapMutations('ContextMenus', {\r\n           addContextMenu: 'ADD_CONTEXTMENUS',\r\n           openContextMenu: 'OPEN_CONTEXTMENU',\r\n           closeAllContextMenus: 'CLOSE_ALL_CONTEXTMENU'\r\n    }),\r\n    handleContextMenu(name, e){\r\n        this.closeAllContextMenus()\r\n        this.openContextMenu({\r\n            name,\r\n            position: e\r\n       })\r\n    }\r\n    setPositionOfMenu(){ \r\n        console.log(this.menu.visible)\r\n    }\r\n}\r\n```\r\n\r\n### What is expected?\r\nWhen `commit the CLOSE_ALL_CONTEXTMENU`\r\nand \r\n`commit the OPEN_CONTEXTMENU`\r\n\r\nwatcher which watch twice changed of this.menu\r\n\r\n\r\n### What is actually happening?\r\nNow I want to set position when contextmenu been visible,and before it visible close all other.\r\nWhen I use a `click` event to close all menus(`commit the CLOSE_ALL_CONTEXTMENU`) then open one contextmenu (`commit the OPEN_CONTEXTMENU`),it work fine.\r\n\r\nBut when I use `handleContextMenu` method which do both of `CLOSE_ALL_CONTEXTMENU` and `OPEN_CONTEXTMENU`, store can't watch the change of `this.menu`(use lodash `_`'s map with `props name` getted from `menus array state`)\r\n\r\nthe devtools console show me `this.$store.ContextMenus.menus[0].visible` has been change be `false` and then be `true`, but  `setPositionOfMenu` work once only, what's wrong? the state.menus changed twice and watch only do once?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-11-25T05:30:33.3092069Z","RunDurationInMilliseconds":1943}