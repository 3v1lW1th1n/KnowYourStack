{"Data":{"Blog":{"FeedItems":[{"Title":"Upcoming Webinar | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-10-19T18:51:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Register now to join David Antognoli on Thursday, November 7 at 9 am PT to learn how to take your Unity games to the next level with powerful cloud services. He’ll walk through how to connect your apps to Microsoft Azure, adding compelling features that users love, like leaderboards and heatmaps, and demo how new [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/\">Upcoming Webinar | Build Better Games with Unity and Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Plugin and Permission Changes with iOS 11","PublishedOn":"2017-10-18T20:24:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>iOS 11 introduced some fun updates around permissions when accessing certain features on the device. I first noticed these changes when trying to access a user location with the Geolocator Plugin in a Xamarin.Forms application. To my surprise, nothing happened. Upon further investigation of the application&#8217;s Output, I noticed a message explaining exactly what I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/plugin-permission-changes-ios-11/\">Plugin and Permission Changes with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/plugin-permission-changes-ios-11/","RawContent":null},{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null},{"Title":"Give the Visual Studio 2017 Version 15.5 Preview a Try!","PublishedOn":"2017-10-13T20:06:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>With Visual Studio 2017 version 15.4 now stable and sporting some awesome new features, such as Xamarin Live integration, Android Oreo / iOS 11 support, and a smarter, smaller installation, it&#8217;s time to turn our attention to the next version of Visual Studio 2017, version 15.5! This upcoming release is now available as a preview [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/\">Give the Visual Studio 2017 Version 15.5 Preview a Try!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/","RawContent":null},{"Title":"Bring 3D Models To Life in Augmented Reality with UrhoSharp","PublishedOn":"2017-10-12T19:28:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>UrhoSharp brings 3D to a variety of platforms and uses its own binary mdl format for model files. There are many sources for 3D models, including cgtrader and TurboSquid, and formats such as FBX, OBJ, DAE and BLEND. Urho3D provides tools like AssetImporter and the Urho3D Blender Add-in so you can use these models. In [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/\">Bring 3D Models To Life in Augmented Reality with UrhoSharp</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/","RawContent":null},{"Title":"Updating Xamarin.iOS Apps for the iPhone X","PublishedOn":"2017-10-11T18:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>There&#8217;s no doubt that one of the biggest announcements from Apple this year was the iPhone X. The new Super Retina display is edge-to-edge on the device, creating an immersive experience we had yet to see on iPhones. With the new screen changes on the iPhone X, developers may be asking themselves, &#8220;What do I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/\">Updating Xamarin.iOS Apps for the iPhone X</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/","RawContent":null},{"Title":"Build and Release Five-Star Apps Faster","PublishedOn":"2017-10-10T17:49:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The first step in the life of a mobile app is build automation, which builds the app and runs required tests to make sure the app follows required rules. Build automation is also the first step towards shipping high quality, five-star mobile apps. When building iOS and Android mobile applications, one of the main challenges [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/\">Build and Release Five-Star Apps Faster</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/","RawContent":null},{"Title":"Developing Real-Time Communication Apps with WebSocket","PublishedOn":"2017-10-09T21:17:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>WebSockets is a two-way communication protocol, or persistence communication channel over TCP connection, an extremely powerful protocol leveraged by numerous games, apps with chat functionality, and real-time apps such as stock tickers. In this blog post, we&#8217;ll discuss how to build a simple Xamarin chat room application that will leverage and connect to an ASP.NET [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/developing-real-time-communication-apps-with-websocket/\">Developing Real-Time Communication Apps with WebSocket</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/developing-real-time-communication-apps-with-websocket/","RawContent":null},{"Title":"DataBinding Power Moves You May Not Be Using (Yet)","PublishedOn":"2017-10-05T21:05:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>DataBinding is a fantastic feature that cleanly decouples your UI from the backing data models while providing the plumbing to move data back and forth as you need. But, are you getting the most out of the Binding features in Xamarin.Forms? Building on our previous Introduction to DataBinding and Advanced Data Binding posts, I’ll show [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/databinding-power-moves-you-may-not-be-using-yet/\">DataBinding Power Moves You May Not Be Using (Yet)</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/databinding-power-moves-you-may-not-be-using-yet/","RawContent":null},{"Title":"The Solar System with ARKit and F#","PublishedOn":"2017-10-04T21:09:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>A few years ago, my colleague Joel Martinez and I wrote a F# program we called “Oculus Thrift” that demonstrated iOS SceneKit in a Google Cardboard stereoscopic viewer. With the recent release of iOS 11, I wanted to see if we could do something similar with ARKit, Apple’s augmented-reality framework. It took just 8 lines [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/the-solar-system-with-arkit-and-f/\">The Solar System with ARKit and F#</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/the-solar-system-with-arkit-and-f/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6741258155","Type":"PullRequestEvent","CreatedAt":"2017-10-19T23:32:08","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/952","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Don't get resources in DTB\" (#952) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=60080\r\nContext: 1cd582ec\r\n\r\nIt appears that the `<GetAdditionalResourcesFromAssemblies/>` task is\r\ncausing Visual Studio 2015 to hang when loading projects.\r\n\r\nIn the interests of expediency, \"revert\" to d15-3 behavior and make\r\nthe `<GetAdditionalResourcesFromAssemblies/>` task invocation\r\nconditional on `$(DesignTimeBuild)` being False, i.e. only execute\r\n`<GetAdditionalResourcesFromAssemblies/>` when performing *normal*\r\nbuilds, *not* Design-Time builds."},{"Id":"6740929585","Type":"PullRequestEvent","CreatedAt":"2017-10-19T21:47:35","Actor":"akoeplinger","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/951","RelatedDescription":"Opened pull request \"xabuild: exit if TARGETS_DIR can't be found\" (#951) at xamarin/xamarin-android","RelatedBody":"Otherwise we'd continue in the script and all sorts of weirdness would occur since TARGETS_DIR is empty."},{"Id":"6740412527","Type":"PullRequestEvent","CreatedAt":"2017-10-19T19:49:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/950","RelatedDescription":"Merged pull request \"[build] SKIP_NUNIT_TESTS check is reversed\" (#950) at xamarin/xamarin-android","RelatedBody":"When working with the `Makefile` I noticed this command doesn’t run the\r\ntests:\r\n```\r\n$ make run-nunit-tests\r\nmake: Nothing to be done for `run-nunit-tests’.\r\n```\r\nAnd this command runs the tests:\r\n```\r\n$ make run-nunit-tests SKIP_NUNIT_TESTS=1\r\n```\r\n\r\nI suspect the intention is that `ifneq` needs to be `ifeq`.\r\n\r\nI believe this was introduced in https://github.com/xamarin/xamarin-android/commit/385699a58635d87a1cc65b60995d3420995f21d7."},{"Id":"6740291262","Type":"PullRequestEvent","CreatedAt":"2017-10-19T19:21:21","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/950","RelatedDescription":"Opened pull request \"[build] SKIP_NUNIT_TESTS check is reversed\" (#950) at xamarin/xamarin-android","RelatedBody":"When working with the `Makefile` I noticed this command doesn’t run the\r\ntests:\r\n```\r\n$ make run-nunit-tests\r\nmake: Nothing to be done for `run-nunit-tests’.\r\n```\r\nAnd this command runs the tests:\r\n```\r\n$ make run-nunit-tests SKIP_NUNIT_TESTS=1\r\n```\r\n\r\nI suspect the intention is that `ifneq` needs to be `ifeq`."},{"Id":"6739545888","Type":"PullRequestEvent","CreatedAt":"2017-10-19T16:40:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/948","RelatedDescription":"Merged pull request \"[Xamarin.ProjectTools] Fix path to xabuild for monodroid.\" (#948) at xamarin/xamarin-android","RelatedBody":"The Builder was not checking for the xabuild script in the\r\n`out` directory for the monodroid tree."},{"Id":"6739239677","Type":"PullRequestEvent","CreatedAt":"2017-10-19T15:42:25","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/948","RelatedDescription":"Opened pull request \"[Xamarin.ProjectTools] Fix path to xabuild for monodroid.\" (#948) at xamarin/xamarin-android","RelatedBody":"The Builder was not checking for the xabuild script in the\r\n`out` directory for the monodroid tree."},{"Id":"6737818648","Type":"PullRequestEvent","CreatedAt":"2017-10-19T10:52:10","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/947","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Add Debug info for Lint Task\" (#947) at xamarin/xamarin-android","RelatedBody":"We need to output the Lint tool Path we use and the Lint Tool\r\nversion for diagnostic purposes. So if it does fail we have\r\nthe information we need to correct the issue."},{"Id":"6735094395","Type":"PullRequestEvent","CreatedAt":"2017-10-18T20:27:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/941","RelatedDescription":"Merged pull request \"[performance measurements] Fix result files location\" (#941) at xamarin/xamarin-android","RelatedBody":"Do not use `TestApk.ResultsPath` as base for performance measurements\r\nanymore - it has changed recently by https://github.com/xamarin/xamarin-android/commit/385699a58635d87a1cc65b60995d3420995f21d7. Instead\r\npass own results filename to the ProcessLogcatTiming and\r\nProcessPlotInput tasks.\r\n\r\nAlso added LabelSuffix parameter to the task, so that it is easier to\r\ncreate merged measurements. It comes handy as more tests are run in\r\nmultiple configurations now. It also simplifies the use of definitions\r\nfiles as we don't need one per configuration anymore."},{"Id":"6735028910","Type":"PullRequestEvent","CreatedAt":"2017-10-18T20:12:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/945","RelatedDescription":"Merged pull request \"Add explicit and implicit cast operators for unsigned integer types\" (#945) at xamarin/xamarin-android","RelatedBody":"Context: https://bugzilla.xamarin.com/show_bug.cgi?id=59193\r\n\r\nJava does not include types to represent unsigned integers. This poses a problem\r\nwhen either porting code from Java to managed languages or when attempting to\r\ncast integer values between the Java and the managed land.\r\n\r\nThe issue described in the above bug could be fixed by adding appropriate\r\nimplicit and explicit operators to Java.Lang.Object in Xamarin.Android but that\r\nwould allow for behavior which may have adverse effects without any external\r\nsigns immediately visible to the developer.\r\n\r\nConsider a situation when a minimum signed 32-bit integer value returned by Java\r\ncode is cast to the managed `uint` type - we end up with the same value but with\r\ndifferent sign and no indication given that such a thing happened. We could\r\nup-cast the value to long but that changes the type of the result and is not\r\nadvisable, especially with implicit conversions. Also, even if the value was\r\nup-cast to a type with a larger value range this would have to stop with the\r\n64-bit integers since they can't be up-cast to any other primitive integer type.\r\n\r\nAny casts between signed and unsigned integer types should be a conscious and\r\nexplicit action, thus the double cast `(ulong)(long)value` is considered the\r\ncorrect behavior.\r\n\r\nFor those reasons we decided that the best action to to take is to actively\r\nprevent direct casts from/to a managed unsigned integer type to/from a signed\r\nJava integer type. This is implemented by way of adding a number of explicit and\r\nimplicit conversion operators to XA's Java.Lang.Object implementation that are\r\nmarked \"obsolete\" and being erroneous. This is done this way so that the code\r\nattempting to perform such conversions won't build because the compiler, seeing\r\nthe attribute, will signal an error and abort the build."},{"Id":"6734975861","Type":"PullRequestEvent","CreatedAt":"2017-10-18T20:00:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/942","RelatedDescription":"Merged pull request \"[xabuild] Copy `xabuild` to the output directory.\" (#942) at xamarin/xamarin-android","RelatedBody":"In order to get the tests running using xabuild on monodroid\r\nwe kinda need it in the output directory. This commit adds\r\nit as Content to the xabuild.csproj. It also updaes the Builder\r\nto look for `xabuild` in the output directory first and then\r\nfallback to `tools\\scripts`.\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6741037303","Type":"PullRequestEvent","CreatedAt":"2017-10-19T22:17:32","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1157","RelatedDescription":"Merged pull request \"[UWP] Fix ListView selection issues **Behavior change**\" (#1157) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#1133 switched UWP `ListViews` to use `ItemClick` instead of `Tapped` to enable the keyboard Enter key as a selector. However, this renders any `TapGestures` inside the `ListView` inoperable, since those events are not routed through a `Click`. This change will preserve the changes made in #1133 as default but allow the users to switch back to the legacy mode via a platform specific.\r\n\r\n```\r\nusing Xamarin.Forms.PlatformConfiguration;\r\nusing Xamarin.Forms.PlatformConfiguration.WindowsSpecific;\r\n\r\n_list.On<Windows>().SelectionMode(ListViewSelectionMode.Inaccessible);\r\n```\r\n\r\n#1005 was a partial fix for the `ItemSelected` event firing twice, but the test case was incomplete, so we did not resolve the entire issue. This should be fully resolved now.\r\n\r\n### Bugs Fixed ###\r\n\r\n- [Bug 59718 - Multiple issues with listview and navigation in UWP](https://bugzilla.xamarin.com/show_bug.cgi?id=59718)\r\n- [Bug 44886 - UWP Listview ItemSelected event triggered twice for each selection](https://bugzilla.xamarin.com/show_bug.cgi?id=44886)\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `enum ListViewSelectionMode`\r\n- `Xamarin.Forms.PlatformConfiguration.WindowsSpecific.ListView.SelectionMode`\r\n\r\n### Behavioral Changes ###\r\n\r\n`ListView`s on UWP will default to `Accessible` selection mode. This means that the Narrator and keyboard can interact with `ListView`s with expected results. However, this means that any `Element` within a ListView item with a `TapGesture` will no longer function as expected. At this time, these modes are mutually exclusive, and users will need to choose between an accessible `ListView` or functioning `TapGesture`s.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6741020489","Type":"PullRequestEvent","CreatedAt":"2017-10-19T22:12:36","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1177","RelatedDescription":"Closed pull request \"[Core] Add extra method that allows to specify default value for CanExecute on a Command\" (#1177) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis pr resolves a issue where our `CanExecute(obj)` method on the `Command` will always return true if a `CanExecute` delegate wasn't specified. \r\nThe problem happens that in a `Button` we don't have no way to figure if a user specified or not that delegate on a `Command`, and we need to decide to either respect the IsEnabled property from the button or the result of the command can execute. \r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=32899\r\n\r\n### API Changes ###\r\n\r\nAdding to `Command`\r\nAdded:\r\n - public bool CanExecute(object parameter, bool defaultCanExecute)\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6740933533","Type":"PullRequestEvent","CreatedAt":"2017-10-19T21:48:40","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1211","RelatedDescription":"Merged pull request \"[iOS] Delay for ScrollTo to work on iOS11\" (#1211) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThere seems to be a issue with ScrollToRow on iOS11, there are other native users complain about similar issues:\r\n\r\nhttps://stackoverflow.com/questions/46075517/uitableview-scrolltorow-no-longer-works-on-ios-11-right-after-adding-a-new-row\r\nhttp://www.openradar.me/34865052\r\n\r\nAdding a small delay just on iOS11 seems to fix the issue, also take note issue only is evidente when using ScrollTo with no animation\r\n\r\nAlso added the check just for iOS11 to UISearchBar fix i did on #1203\r\n\r\n### Bugs Fixed ###\r\n\r\n- Fixes 32462 test on iOS11\r\n\r\n### API Changes ###\r\n\r\nInternal API to check iOS11\r\n\r\nAdded:\r\n - bool iOS11OrNewer { get ;}\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"6739941705","Type":"PullRequestEvent","CreatedAt":"2017-10-19T18:05:49","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1212","RelatedDescription":"Opened pull request \"Clear MainPage renderer if exists after reload (non-appCompat)\" (#1212) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nSee also: https://github.com/xamarin/Xamarin.Forms/pull/1200\r\n\r\nCustomer expected MainPage could be re-initialized after reloading app. Actually, existence of a renderer for the MainPage prevented MainPage from being attached to the new activity. Preventing the MainPage from being attached is correct as the old MainPage renderer existed in a different context. \r\n\r\nThe fix is to clear the MainPage renderer so a new renderer is created in the correct context. This fix will not reuse the existing renderer so the customer will _not_ see the same performance benefit as was achieved previously. However that performance gain was likely hiding more insidious bugs stemming from using views from a deleted context. \r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=59882\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nAllow MainPage to be re-initialized after re-launch.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6739102840","Type":"PullRequestEvent","CreatedAt":"2017-10-19T15:18:34","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1211","RelatedDescription":"Opened pull request \"[iOS] Delay for ScrollTo to work on iOS11\" (#1211) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThere seems to be a issue with ScrollToRow on iOS11, there are other native users complain about similar issues:\r\n\r\nhttps://stackoverflow.com/questions/46075517/uitableview-scrolltorow-no-longer-works-on-ios-11-right-after-adding-a-new-row\r\nhttp://www.openradar.me/34865052\r\n\r\nAdding a small delay just on iOS11 seems to fix the issue, also take note issue only is evidente when using ScrollTo with no animation\r\n\r\nAlso added the check just for iOS11 to UISearchBar fix i did on #1203\r\n\r\n### Bugs Fixed ###\r\n\r\n- Fixes 32462 test on iOS11\r\n\r\n### API Changes ###\r\n\r\nInternal API to check iOS11\r\n\r\nAdded:\r\n - bool iOS11OrNewer { get ;}\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"6738710394","Type":"PullRequestEvent","CreatedAt":"2017-10-19T14:10:56","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1209","RelatedDescription":"Merged pull request \"Fix typo\" (#1209) at xamarin/Xamarin.Forms","RelatedBody":"Fix Exception message \"ScrollVIew\" to \"ScrollView\""},{"Id":"6738354482","Type":"PullRequestEvent","CreatedAt":"2017-10-19T13:03:07","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1210","RelatedDescription":"Opened pull request \"wip\" (#1210) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nDescribe your changes here.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6738321932","Type":"PullRequestEvent","CreatedAt":"2017-10-19T12:56:24","Actor":"yone64","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1209","RelatedDescription":"Opened pull request \"Fix typo\" (#1209) at xamarin/Xamarin.Forms","RelatedBody":"Fix Exception message \"ScrollVIew\" to \"ScrollView\""}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6740682944","Type":"PullRequestEvent","CreatedAt":"2017-10-19T20:48:31","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2912","RelatedDescription":"Opened pull request \"[macos] Fix guiunit error on clean builds by depending on correct copy\" (#2912) at xamarin/xamarin-macios","RelatedBody":"- From a clean build making a BCL test would error due to the non-mobile guiunit not being built\r\n- This was because the Makefile-mac.inc target was incorrect\r\n- This was because xharness assumed that non variation based targets were always Modern\r\n- However, BCL tests are Full, not Modern"},{"Id":"6740318330","Type":"PullRequestEvent","CreatedAt":"2017-10-19T19:27:33","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2902","RelatedDescription":"Merged pull request \"[CoreVideo] Adds API bindings from Xcode 9 Beta 1 to stable\" (#2902) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6740308981","Type":"PullRequestEvent","CreatedAt":"2017-10-19T19:25:25","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2909","RelatedDescription":"Merged pull request \"[xtro-sharpie] Update README to explain how to install ObjectiveSharpie.\" (#2909) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6740305338","Type":"PullRequestEvent","CreatedAt":"2017-10-19T19:24:35","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2907","RelatedDescription":"Merged pull request \"Bump max VSfM version to 7.4 (d15-6).\" (#2907) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6739886667","Type":"PullRequestEvent","CreatedAt":"2017-10-19T17:54:06","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2911","RelatedDescription":"Opened pull request \"[macos] Error when linking mix-mode assemblies\" (#2911) at xamarin/xamarin-macios","RelatedBody":"- https://bugzilla.xamarin.com/show_bug.cgi?id=58583"},{"Id":"6739879388","Type":"PullRequestEvent","CreatedAt":"2017-10-19T17:52:30","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2910","RelatedDescription":"Opened pull request \"[UIKit] Remove [Preserve] attributes from various classes related to gesture recognizers.\" (#2910) at xamarin/xamarin-macios","RelatedBody":"It's not necessary to manually preserve these classes, since they will be\npreserved if they're used, and if they're not used, then they're not needed.\n\nThe `Conditional = true` parameter suggests the original intent was for the\nlinker to magically figure out when to link away these classes, but the\nConditional parameter is ignored for classes (conditional on what exactly?),\nso these classes were never linked away.\n\nThese classes all have manually exported `Activated` methods, and for these\nmethods the `[Preserve]` attribute is required (and already present).\n\nThis saves ~23kb (Release) / ~31kb (Debug) for a minimalistic test app\n(details below).\n\nSize comparison\n===============\n\nTest project: https://github.com/rolfbjarne/TestApp/tree/minimalistic-test-app (rolfbjarne/TestApp@3bce08836be1a39db08e1ec269cf8b86d21fa756)\n\nCompiled like this:\n\n```shell\nmsbuild /verbosity:diag *.sln /p:Platform=iPhone /p:Configuration=Debug\nmsbuild /verbosity:diag *.sln /p:Platform=iPhone /p:Configuration=Release\n```\n\nBefore\n------\n\n```shell\n+ du -s bin/iPhone/Debug/helloworld.app bin/iPhone/Release/helloworld.app\n21144\tbin/iPhone/Debug/helloworld.app\n9264\tbin/iPhone/Release/helloworld.app\n+ du -hs bin/iPhone/Debug/helloworld.app bin/iPhone/Release/helloworld.app\n 10M\tbin/iPhone/Debug/helloworld.app\n4.5M\tbin/iPhone/Release/helloworld.app\n+ <magic to get byte count>\n10775360 bin/iPhone/Debug/helloworld.app\n 4706626 bin/iPhone/Release/helloworld.app\n\n+ find bin/iPhone/Debug/helloworld.app -type f\n+ xargs ls -laS\n-rwxr-xr-x  1 rolf  staff  8116752 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/helloworld\n-rw-r--r--  1 rolf  staff   948568 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/mscorlib.aotdata.arm64\n-rw-r--r--  1 rolf  staff   825344 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/mscorlib.dll\n-rw-r--r--  1 rolf  staff   306284 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/mscorlib.pdb\n-rw-r--r--  1 rolf  staff   243712 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/Xamarin.iOS.dll\n-rw-r--r--  1 rolf  staff   234160 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/Xamarin.iOS.aotdata.arm64\n-rw-r--r--  1 rolf  staff    77961 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/Xamarin.iOS.dll.mdb\n-rw-r--r--  1 rolf  staff     8196 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/embedded.mobileprovision\n-rw-r--r--  1 rolf  staff     6453 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/_CodeSignature/CodeResources\n-rw-r--r--  1 rolf  staff     4096 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/helloworld.exe\n-rw-r--r--  1 rolf  staff     1392 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/helloworld.aotdata.arm64\n-rw-r--r--  1 rolf  staff      890 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/Info.plist\n-rw-r--r--  1 rolf  staff      500 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/helloworld.pdb\n-rw-r--r--  1 rolf  staff      474 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/Settings.bundle/Root.plist\n-rw-r--r--  1 rolf  staff      382 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/archived-expanded-entitlements.xcent\n-rw-r--r--  1 rolf  staff      159 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/NOTICE\n-rw-r--r--  1 rolf  staff       29 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/MonoTouchDebugConfiguration.txt\n-rw-r--r--  1 rolf  staff        8 Oct 19 19:33 bin/iPhone/Debug/helloworld.app/PkgInfo\n+ find bin/iPhone/Release/helloworld.app -type f\n+ xargs ls -laS\n-rwxr-xr-x  1 rolf  staff  3565568 Oct 19 19:32 bin/iPhone/Release/helloworld.app/helloworld\n-rw-r--r--  1 rolf  staff   515584 Oct 19 19:32 bin/iPhone/Release/helloworld.app/mscorlib.dll\n-rw-r--r--  1 rolf  staff   363216 Oct 19 19:32 bin/iPhone/Release/helloworld.app/mscorlib.aotdata.arm64\n-rw-r--r--  1 rolf  staff   160256 Oct 19 19:32 bin/iPhone/Release/helloworld.app/Xamarin.iOS.dll\n-rw-r--r--  1 rolf  staff    81976 Oct 19 19:32 bin/iPhone/Release/helloworld.app/Xamarin.iOS.aotdata.arm64\n-rw-r--r--  1 rolf  staff     8196 Oct 19 19:32 bin/iPhone/Release/helloworld.app/embedded.mobileprovision\n-rw-r--r--  1 rolf  staff     4959 Oct 19 19:32 bin/iPhone/Release/helloworld.app/_CodeSignature/CodeResources\n-rw-r--r--  1 rolf  staff     4096 Oct 19 19:32 bin/iPhone/Release/helloworld.app/helloworld.exe\n-rw-r--r--  1 rolf  staff     1336 Oct 19 19:32 bin/iPhone/Release/helloworld.app/helloworld.aotdata.arm64\n-rw-r--r--  1 rolf  staff      890 Oct 19 19:32 bin/iPhone/Release/helloworld.app/Info.plist\n-rw-r--r--  1 rolf  staff      382 Oct 19 19:32 bin/iPhone/Release/helloworld.app/archived-expanded-entitlements.xcent\n-rw-r--r--  1 rolf  staff      159 Oct 19 19:32 bin/iPhone/Release/helloworld.app/NOTICE\n-rw-r--r--  1 rolf  staff        8 Oct 19 19:32 bin/iPhone/Release/helloworld.app/PkgInfo\n```\n\nAfter\n-----\n\n```shell\n+ du -s bin/iPhone/Debug/helloworld.app bin/iPhone/Release/helloworld.app\n21072\tbin/iPhone/Debug/helloworld.app\n9216\tbin/iPhone/Release/helloworld.app\n+ du -hs bin/iPhone/Debug/helloworld.app bin/iPhone/Release/helloworld.app\n 10M\tbin/iPhone/Debug/helloworld.app\n4.5M\tbin/iPhone/Release/helloworld.app\n+ <magic to get byte count>\n10743909 bin/iPhone/Debug/helloworld.app\n 4683650 bin/iPhone/Release/helloworld.app\n+ find bin/iPhone/Debug/helloworld.app -type f\n+ xargs ls -laS\n-rwxr-xr-x  1 rolf  staff  8095984 Oct 19 19:28 bin/iPhone/Debug/helloworld.app/helloworld\n-rw-r--r--  1 rolf  staff   948568 Oct 19 19:28 bin/iPhone/Debug/helloworld.app/mscorlib.aotdata.arm64\n-rw-r--r--  1 rolf  staff   825344 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/mscorlib.dll\n-rw-r--r--  1 rolf  staff   306284 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/mscorlib.pdb\n-rw-r--r--  1 rolf  staff   240640 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/Xamarin.iOS.dll\n-rw-r--r--  1 rolf  staff   229232 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/Xamarin.iOS.aotdata.arm64\n-rw-r--r--  1 rolf  staff    75278 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/Xamarin.iOS.dll.mdb\n-rw-r--r--  1 rolf  staff     8196 Oct 19 19:28 bin/iPhone/Debug/helloworld.app/embedded.mobileprovision\n-rw-r--r--  1 rolf  staff     6453 Oct 19 19:28 bin/iPhone/Debug/helloworld.app/_CodeSignature/CodeResources\n-rw-r--r--  1 rolf  staff     4096 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/helloworld.exe\n-rw-r--r--  1 rolf  staff     1392 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/helloworld.aotdata.arm64\n-rw-r--r--  1 rolf  staff      890 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/Info.plist\n-rw-r--r--  1 rolf  staff      500 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/helloworld.pdb\n-rw-r--r--  1 rolf  staff      474 Oct 19 19:28 bin/iPhone/Debug/helloworld.app/Settings.bundle/Root.plist\n-rw-r--r--  1 rolf  staff      382 Oct 19 19:27 bin/iPhone/Debug/helloworld.app/archived-expanded-entitlements.xcent\n-rw-r--r--  1 rolf  staff      159 Oct 19 19:28 bin/iPhone/Debug/helloworld.app/NOTICE\n-rw-r--r--  1 rolf  staff       29 Oct 19 19:28 bin/iPhone/Debug/helloworld.app/MonoTouchDebugConfiguration.txt\n-rw-r--r--  1 rolf  staff        8 Oct 19 19:28 bin/iPhone/Debug/helloworld.app/PkgInfo\n+ find bin/iPhone/Release/helloworld.app -type f\n+ xargs ls -laS\n-rwxr-xr-x  1 rolf  staff  3547968 Oct 19 19:26 bin/iPhone/Release/helloworld.app/helloworld\n-rw-r--r--  1 rolf  staff   515584 Oct 19 19:26 bin/iPhone/Release/helloworld.app/mscorlib.dll\n-rw-r--r--  1 rolf  staff   363216 Oct 19 19:26 bin/iPhone/Release/helloworld.app/mscorlib.aotdata.arm64\n-rw-r--r--  1 rolf  staff   157184 Oct 19 19:26 bin/iPhone/Release/helloworld.app/Xamarin.iOS.dll\n-rw-r--r--  1 rolf  staff    79672 Oct 19 19:26 bin/iPhone/Release/helloworld.app/Xamarin.iOS.aotdata.arm64\n-rw-r--r--  1 rolf  staff     8196 Oct 19 19:26 bin/iPhone/Release/helloworld.app/embedded.mobileprovision\n-rw-r--r--  1 rolf  staff     4959 Oct 19 19:26 bin/iPhone/Release/helloworld.app/_CodeSignature/CodeResources\n-rw-r--r--  1 rolf  staff     4096 Oct 19 19:26 bin/iPhone/Release/helloworld.app/helloworld.exe\n-rw-r--r--  1 rolf  staff     1336 Oct 19 19:26 bin/iPhone/Release/helloworld.app/helloworld.aotdata.arm64\n-rw-r--r--  1 rolf  staff      890 Oct 19 19:26 bin/iPhone/Release/helloworld.app/Info.plist\n-rw-r--r--  1 rolf  staff      382 Oct 19 19:26 bin/iPhone/Release/helloworld.app/archived-expanded-entitlements.xcent\n-rw-r--r--  1 rolf  staff      159 Oct 19 19:26 bin/iPhone/Release/helloworld.app/NOTICE\n-rw-r--r--  1 rolf  staff        8 Oct 19 19:26 bin/iPhone/Release/helloworld.app/PkgInfo\n```\n\nDifference\n----------\n\nByte count difference:\n\n```\nbin/iPhone/Debug/helloworld.app:   -31.451 bytes\nbin/iPhone/Release/helloworld.app: -22.976 bytes\n```"},{"Id":"6739327815","Type":"PullRequestEvent","CreatedAt":"2017-10-19T15:57:50","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2905","RelatedDescription":"Closed pull request \"[runtime] integrate mono 2017-10\" (#2905) at xamarin/xamarin-macios","RelatedBody":"either this PR or https://github.com/xamarin/xamarin-macios/pull/2906"},{"Id":"6739287758","Type":"PullRequestEvent","CreatedAt":"2017-10-19T15:50:36","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2904","RelatedDescription":"Merged pull request \"[xharness] Fix clearing simulator state. Fixes #60229 and #58951.\" (#2904) at xamarin/xamarin-macios","RelatedBody":"Fix clearing the simulator state by properly finding the correct simulators\nfrom tasks that will actually run, and not from potentially ignored/failed\ntasks (which won't have necessarily simulators).\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=58951\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60229"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"921089184667983872","CreatedAt":"2017-10-19T19:02:29+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar on building better games with #Unity3D and Microsoft #Azure: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":23,"RawContent":null},{"Id":"921044016610922496","CreatedAt":"2017-10-19T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":7,"RawContent":null},{"Id":"920749716610207745","CreatedAt":"2017-10-18T20:33:33+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/jFJho4InOr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":39,"RawContent":null},{"Id":"920684397212438529","CreatedAt":"2017-10-18T16:14:00+00:00","UserScreenname":"xamarinhq","Text":"Request reviews with iOS 10.3’s SKStoreReviewController: https://t.co/HgugUTrN81","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"920320046701989894","CreatedAt":"2017-10-17T16:06:12+00:00","UserScreenname":"xamarinhq","Text":"Try out updates to Xamarin Live, a new Mac connection workflow, and more in the Visual Studio 2017 15.5 Preview:… https://t.co/iB8bIZkhW1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":36,"RawContent":null},{"Id":"920032724999725056","CreatedAt":"2017-10-16T21:04:29+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":99,"FavoriteCount":53,"RawContent":null},{"Id":"919958111670165505","CreatedAt":"2017-10-16T16:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":12,"RawContent":null},{"Id":"919747480769712128","CreatedAt":"2017-10-16T02:11:02+00:00","UserScreenname":"xamarinhq","Text":"Add “mobile developer” to your resume with @XamarinU, starting with a 30-day free trial: https://t.co/bVpjALvmoy https://t.co/fiA4quVFQb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":15,"RawContent":null},{"Id":"919305335759953927","CreatedAt":"2017-10-14T20:54:06+00:00","UserScreenname":"xamarinhq","Text":"Weekend project: add some new features to your #Xamarin Android apps with our Android Support Library v26 overview:… https://t.co/49gaLayBhU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":22,"RawContent":null},{"Id":"918566588483342336","CreatedAt":"2017-10-12T19:58:35+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/j4LE7PWPMd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":33,"RawContent":null},{"Id":"918507552811487232","CreatedAt":"2017-10-12T16:04:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build better apps with @BritchDavid's eBook on \"Enterprise Application Patterns using #XamarinForms\": https://t.co/YryVqlrejk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":9,"RawContent":null},{"Id":"918186189634572288","CreatedAt":"2017-10-11T18:47:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/OmUwO59Fdx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":31,"RawContent":null},{"Id":"918142648204124160","CreatedAt":"2017-10-11T15:54:00+00:00","UserScreenname":"xamarinhq","Text":"#XamarinDevDays are a great way to learn how to build, test, &amp; connect native apps with #Xamarin! Find one near you: https://t.co/Ytw07Fr9eL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":16,"RawContent":null},{"Id":"917846344714391552","CreatedAt":"2017-10-10T20:16:35+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSMobileCenter: https://t.co/XHMCHeVNSB https://t.co/3hhv3CG6uh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"917779002781249539","CreatedAt":"2017-10-10T15:49:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to display data with #macOS Table Views: https://t.co/NHwCfrILH6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":12,"RawContent":null},{"Id":"917501676159893504","CreatedAt":"2017-10-09T21:27:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0FzGbu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":65,"RawContent":null},{"Id":"917416111804702720","CreatedAt":"2017-10-09T15:47:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample app that spans devices and mobile platforms using Microsoft's Project Rome: https://t.co/SLeQw6q4YO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":20,"RawContent":null},{"Id":"917203711692337152","CreatedAt":"2017-10-09T01:43:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @nishanil shows you how to add #facetracking and live recognition to your Android app: https://t.co/5R7K2hNJXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":18,"RawContent":null},{"Id":"916789236879290370","CreatedAt":"2017-10-07T22:16:01+00:00","UserScreenname":"xamarinhq","Text":"Sign up for our FREE event in Denver (10/10) or McLean (10/12) where you'll learn how to build a #XamarinForms app:… https://t.co/frCmLy2kS5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"916409733246017536","CreatedAt":"2017-10-06T21:08:01+00:00","UserScreenname":"xamarinhq","Text":"Get excited! https://t.co/0m45zTRqFK","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":41,"FavoriteCount":19,"RawContent":null}]}},"RunOn":"2017-10-20T05:30:37.3735187Z","RunDurationInMilliseconds":3803}