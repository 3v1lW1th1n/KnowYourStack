{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Spring 2018 Roadmap","PublishedOn":"2018-03-01T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In August 2017, we published the NuGet Fall 2017 Roadmap where we outlined our backlog for the upcoming quarter. Since then, we’ve published specifications for these experiences on GitHub for the...","Href":"http://blog.nuget.org/20180301/NuGet-Spring-2018-Roadmap.html","RawContent":null},{"Title":"Deprecating NuGet.org authentication","PublishedOn":"2018-02-27T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As announced in our NuGet Fall 2017 Roadmap blog post, we are transitioning away from NuGet.org’s home-grown authentication mechanism which will eventually allow us to add support for additional...","Href":"http://blog.nuget.org/20180227/Deprecating-NuGet-org-authentication.html","RawContent":null},{"Title":"NuGet.org package publishing workflow – behind the scenes","PublishedOn":"2018-02-01T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In December 2017, we changed the NuGet.org backend publishing pipeline to introduce a set of validation steps for submitted packages. Our goal is to maintain the same level of experience in terms of...","Href":"http://blog.nuget.org/20180201/NuGet-package-publishing-workflow-behind-the-scenes.html","RawContent":null},{"Title":"NuGet Package Signing","PublishedOn":"2017-09-14T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In our NuGet Fall 2017 Roadmap, we highlighted security as the main area of investment over the next few months. This blog post describes a major part of that roadmap in greater detail – package...","Href":"http://blog.nuget.org/20170914/NuGet-Package-Signing.html","RawContent":null},{"Title":"Changes to NuGet.org service management, and performance improvements in China","PublishedOn":"2017-09-07T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org, the package manager for .NET, was purpose-built as a global service with high scale performance regardless of the developer’s location. We are finding that this is not always the case,...","Href":"http://blog.nuget.org/20170907/Changes-to-NuGet-dot-org-service-management-and-performance-improvements-in-China.html","RawContent":null},{"Title":"What's Nu in NuGet with Visual Studio 2017 version 15.3?","PublishedOn":"2017-08-15T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are happy to announce an update to the NuGet client that comes bundled with Visual Studio 2017 version 15.3 RTW and .NET Core 2.0 SDK. This release introduces support for new scenarios such as .NET...","Href":"http://blog.nuget.org/20170815/Whats-nu-in-NuGet-with-VS2017-15-3.html","RawContent":null},{"Title":"NuGet Fall 2017 Roadmap","PublishedOn":"2017-08-09T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past 6 months, the NuGet team has been working hard to ensure the growth of the .NET ecosystem. NuGet has grown significantly during this timeframe: NuGet.org is closing in on 4 billion...","Href":"http://blog.nuget.org/20170809/NuGet-Fall-2017-Roadmap.html","RawContent":null},{"Title":"NuGet.org Gets a Facelift","PublishedOn":"2017-07-18T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce some big changes coming to NuGet.org. With almost 3 million monthly page views, NuGet.org is the gateway for .NET developers to find...","Href":"http://blog.nuget.org/20170718/NuGet-Gallery-Gets-A-Facelift.html","RawContent":null},{"Title":"NuGet Package Identity and Trust","PublishedOn":"2017-04-17T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Update on 10/16/2017: Package ID Prefix Reservation is now live. The documentation can be found here.\n\nWe want to start this post with a huge thanks to you, the NuGet community. Over the last several...","Href":"http://blog.nuget.org/20170417/Package-identity-and-trust.html","RawContent":null},{"Title":"NuGet is now fully integrated into MSBuild","PublishedOn":"2017-03-16T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past, NuGet packages were managed in two different ways - packages.config and project.json -  each with their own sets of advantages and limitations. With Visual Studio 2017 and .NET Core, we...","Href":"http://blog.nuget.org/20170316/NuGet-now-fully-integrated-into-MSBuild.html","RawContent":null},{"Title":"Announcing NuGet 4.0 RTM","PublishedOn":"2017-03-08T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 comes with NuGet 4.0 which adds support for .NET Core, has a bunch of quality fixes and improves performance. This release also brings several improvements like support for...","Href":"http://blog.nuget.org/20170308/Announcing-NuGet-4.0-RTM.html","RawContent":null},{"Title":"Introducing scoped API keys","PublishedOn":"2017-02-02T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Update 2/14 (05:00 PM PST): This feature is now live! Login to your nuget account and expand the API Keys section to see the new experience.\n\nSince last year, we have been working on several fronts to...","Href":"http://blog.nuget.org/20170202/introducing-scoped-api-keys.html","RawContent":null},{"Title":"NuGet - Ending Windows XP support","PublishedOn":"2017-01-19T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At NuGet, we are constantly improving our security. One of the steps we are taking is to move our HTTPS end points to meet industry standards for algorithms and protocols. This means that connecting...","Href":"http://blog.nuget.org/20170119/nuget-end-of-xp-support.html","RawContent":null},{"Title":"Improving the NuGet documentation experience on docs.microsoft.com","PublishedOn":"2017-01-12T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In late 2016, we started on the journey of improving the docs experience for NuGet with the revamped docs experience.\nContinuing that journey, today we are announcing the move to...","Href":"http://blog.nuget.org/20170112/nuget-docs-move-to-msftdocs.html","RawContent":null},{"Title":"NuGet.Server 2.11.3 now available","PublishedOn":"2016-12-21T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing an update to the NuGet.Server package. The purpose of this update is to address a bug that enabled NuGet.Server to be installed on projects that target .NET Framework versions...","Href":"http://blog.nuget.org/20161221/NuGet.Server-2.11.3-now-available.html","RawContent":null},{"Title":"Announcing NuGet 4.0 RC","PublishedOn":"2016-11-21T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 4.0 RC for Visual Studio 2017 is focused on adding support for .NET Core scenarios, addressing key customer feedback and improving performance in a variety of scenarios. This release brings...","Href":"http://blog.nuget.org/20161121/introducing-nuget4.0.html","RawContent":null},{"Title":"Announcing NuGet 3.5 RTM","PublishedOn":"2016-10-27T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 3.5 RTM for Visual Studio 2015 and nuget.exe provide quality improvements, performance improvements, features and new target frameworks like netstandard and netcoreapp.\n\nDownloads\n\nAll NuGet...","Href":"http://blog.nuget.org/20161027/Announcing-NuGet-3.5-RTM.html","RawContent":null},{"Title":"New experience for NuGet Documentation","PublishedOn":"2016-09-20T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last month, we launched a preview of the revamped Nuget docs experience. We made a number of improvements:\n\n\n  New quick-starts for creating and consuming packages.\n  End to end guides for new...","Href":"http://blog.nuget.org/20160920/NuGet-Docs-GoLive.html","RawContent":null},{"Title":"Changes to Expiring API Keys","PublishedOn":"2016-08-25T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In June, we published a blog post announcing Expiring API Keys. We received a lot of great feedback from the community about it.  In retrospect, we did not do a great job explaining the motivation and...","Href":"http://blog.nuget.org/20160825/Changes-to-Expiring-API-Keys.html","RawContent":null},{"Title":"The path towards better documentation","PublishedOn":"2016-08-22T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Update 9/20 (11:00 A.M PST): The revamped NuGet Docs experience is now live on docs.nuget.org. Read more about it here - New experience for NuGet Documentation\n\ndocs.nuget.org is the authoritative...","Href":"http://blog.nuget.org/20160822/Starting-down-the-path-towards-better-documentation.html","RawContent":null},{"Title":"Announcing NuGet 3.5 RC","PublishedOn":"2016-08-11T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 3.5 RC for Visual Studio 2015 and nuget.exe provide quality improvements, performance improvements, features and new target frameworks like netstandard and netcoreapp.\n\nDownloads\n\nAll NuGet...","Href":"http://blog.nuget.org/20160811/Announcing-NuGet-3.5-RC.html","RawContent":null},{"Title":"Announcing NuGet 3.5  Beta 2 and 2.12 RTM","PublishedOn":"2016-06-27T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet 3.5 Beta 2 for Visual Studio 2015, nuget.exe and NuGet 2.12 RTM for Visual Studio 2013 releases provide quality improvements, performance improvements, .NET Core CLI support, and new target...","Href":"http://blog.nuget.org/20160627/Announcing-NuGet-3.5-Beta-2-and-2.12-RTM.html","RawContent":null},{"Title":"NuGet API key expiration","PublishedOn":"2016-06-22T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Update 6/22 (2:15 P.M PST): We have  a lot of feedback coming in from the community on this topic. This change will not have any impact for another 90 days at the minimum. We are reviewing your...","Href":"http://blog.nuget.org/20160622/NuGet-API-key-expiration.html","RawContent":null},{"Title":"Consolidated REST API deployed","PublishedOn":"2016-05-19T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks back, we deployed our consolidated REST API powering NuGet.org and the NuGet client experience in Visual Studio. An invisible change for our users, but a big change for the NuGet team....","Href":"http://blog.nuget.org/20160519/Consolidated-REST-API-deployed.html","RawContent":null},{"Title":"The 1st Billion","PublishedOn":"2016-05-10T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, NuGet.org reached one billion downloads. This is a momentous achievement for our users and the community of package authors who continue to use and build new libraries that is the cornerstone...","Href":"http://blog.nuget.org/20160510/The-1st-Billion.1.html","RawContent":null},{"Title":"Introducing The NuGet Beta Channel","PublishedOn":"2016-05-02T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we would like to introduce you to the NuGet Beta Channel for the Visual Studio 2015 NuGet Package Manager. In the last 2 months, we have been focusing on improving the quality of the package...","Href":"http://blog.nuget.org/20160502/Introducing-The-NuGet-Beta-Channel.html","RawContent":null},{"Title":"Announcing NuGet 3.4.3","PublishedOn":"2016-04-22T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the 3.4.3 RTM version of the NuGet Visual Studio 2015 extension and the Windows x86 commandline executable. We continue to heavily invest in improving the quality of NuGet...","Href":"http://blog.nuget.org/20160422/Anouncing-NuGet-3.4.3.html","RawContent":null},{"Title":"Announcing NuGet 3.4.2","PublishedOn":"2016-04-09T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have listened to the feedback from the community, and we have tried our very best to turn around quickly and address this feedback. Our primary focus for 3.4.2 have been around improving the...","Href":"http://blog.nuget.org/20160409/Anouncing-NuGet-3.4.2.html","RawContent":null},{"Title":"NuGet 3.4 Known Issues","PublishedOn":"2016-04-05T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After releasing the NuGet 3.4 version last week, the team quickly heard feedback around an issue that made the NuGet extension very difficult to use.  There was a bug in the code that would prevent...","Href":"http://blog.nuget.org/20160405/NuGet-3.4-Known-Issues.html","RawContent":null},{"Title":"Introducing NuGet 3.4","PublishedOn":"2016-03-30T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The NuGet team is happy to introduce version 3.4 and 3.4.1 of the NuGet clients for Visual Studio 2015.  We shipped v3.4 with Visual Studio 2015 Update 2 and immediately followed that with the 3.4.1...","Href":"http://blog.nuget.org/20160330/Introducing-NuGet-3.4.html","RawContent":null},{"Title":"Announcing NuGet 3.4 RC","PublishedOn":"2016-03-08T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After several months of measuring, tuning, and testing, the NuGet team would like to announce version 3.4 RC of the NuGet clients for Visual Studio 2015 and the command-line.  There were three main...","Href":"http://blog.nuget.org/20160308/Announcing-NuGet-3.4-RC.html","RawContent":null},{"Title":"Switching from WCF OData to Web API","PublishedOn":"2016-02-16T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the less visible changes since we released NuGet 3.0 is that NuGet uses a new server “API v3”. This new API is designed around high availability for critical scenarios such as package restore...","Href":"http://blog.nuget.org/20160216/Switching-from-WCF-OData-to-Web-API.html","RawContent":null},{"Title":"NuGet ContentFiles Demystified","PublishedOn":"2016-01-26T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated - Feb 26, 2015: Thanks to Jared Barneck for some suggested edits to add some steps to the sample NuGet creation process\n\nIn NuGet 3.3, the contentFiles feature was introduced to support...","Href":"http://blog.nuget.org/20160126/nuget-contentFiles-demystified.html","RawContent":null},{"Title":"NuGet Targets for Project.Json now open source","PublishedOn":"2016-01-19T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A question that comes up from time to time is: how does Visual Studio 2015 add references when using project.json files in conjunction with a csproj without modifying the csproj file?  This is a good...","Href":"http://blog.nuget.org/20160119/nuget-targets.html","RawContent":null},{"Title":"Accelerate your NuGet.Server","PublishedOn":"2016-01-13T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since its inception, NuGet supports setting up custom package sources. There’s the default NuGet Gallery, there’s third-party NuGet hosting (see the NuGet Ecosystem), we can use local directories on...","Href":"http://blog.nuget.org/20160113/Accelerate-your-NuGet.Server.html","RawContent":null},{"Title":"NuGet 3.3 Release","PublishedOn":"2015-11-18T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Big news:  a new version of the NuGet clients has been released!  This is version 3.3 of the client, with a new command-line and Visual Studio 2015 extension available for use.  Use the above links to...","Href":"http://blog.nuget.org/20151118/nuget-3.3.html","RawContent":null},{"Title":"NuGet 3 - Visual Studio User Interface Discussion","PublishedOn":"2015-10-14T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We want to continue our discussion of the recent changes made to the NuGet experience with the v3 releases, and in this second blog post of the series we are going to focus on the user interface...","Href":"http://blog.nuget.org/20151014/nuget-userinterface.html","RawContent":null},{"Title":"NuGet 3.2.1-RC and NuGet 2.9-RC released","PublishedOn":"2015-10-12T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing nuget.exe 3.2.1-RC and NuGet 2.9-RC. A number of issues were identified in both versions that prevented interoperability on Linux and OSX operating systems.  We also made some...","Href":"http://blog.nuget.org/20151012/nuget-3.2.1-rc.html","RawContent":null},{"Title":"NuGet 3 - What and Why?","PublishedOn":"2015-10-08T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since Visual Studio 2015 was released in July, developers have started using a new version of NuGet, NuGet 3  We decided to introduce a number of significant changes based on feedback from the...","Href":"http://blog.nuget.org/20151008/NuGet-3-What-and-Why.html","RawContent":null},{"Title":"Package Content and Removals","PublishedOn":"2015-10-07T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The NuGet community is awesome; involved and eager to build software to make it easy for use in bigger projects that the components and libraries that they themselves are building.  Every now and...","Href":"http://blog.nuget.org/20151007/Package-Content-and-Removals.html","RawContent":null},{"Title":"Why did my package download count suddenly go up","PublishedOn":"2015-09-30T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last week, we released our Revised Download Counts and Package Statistics that are now based on the raw logs of our CDN. For this to become reality, we had to also import data from our old statistics...","Href":"http://blog.nuget.org/20150930/Why-did-my-package-download-count-suddenly-go-up.html","RawContent":null},{"Title":"Meet the new NuGet status page","PublishedOn":"2015-09-28T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"On the server side we are working on boosting performance, scalability and reliability. We were also in need of a new status page to better communicate the status of the service. Without further ado:...","Href":"http://blog.nuget.org/20150928/Meet-the-new-NuGet-status-page.html","RawContent":null},{"Title":"Revised Download Counts and Package Statistics","PublishedOn":"2015-09-24T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the last few months we have been hard at work on the NuGet.org backend. One of the things we’ve done is switch to a new CDN. This work is all about reinforcing the foundations of nuget.org so we...","Href":"http://blog.nuget.org/20150924/Revised-Download-Counts-and-Package-Statistics.html","RawContent":null},{"Title":"Accelerate your network share hosted Package Source","PublishedOn":"2015-09-22T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog, by Andrew Arnott from the Visual Studio team. Andrew was having performance issues with NuGet updating or installing packages from a UNC share. These issues where well known, and...","Href":"http://blog.nuget.org/20150922/Accelerate-Package-Source.html","RawContent":null},{"Title":"Announcing the NuGet 3.2 release","PublishedOn":"2015-09-16T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are publishing the version 3.2 updates to the NuGet clients.  We took customer feedback regarding issues and feature direction and assembled this release to address those immediate concerns....","Href":"http://blog.nuget.org/20150916/nuget-3.2.html","RawContent":null},{"Title":"NuGet Command line and Visual Studio 2015 Extension 3.2 RC released","PublishedOn":"2015-09-02T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing nuget.exe 3.2-RC command line. In addition to fixing a significant number of bugs, support has been added for push and list for compliant V3 servers.\n\nThis wave also includes a...","Href":"http://blog.nuget.org/20150902/nuget-3.2RC.html","RawContent":null},{"Title":"NuGet 2 code base moves to GitHub","PublishedOn":"2015-08-11T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the last few months we have constantly moved the issues and all new code base to GitHub. Today we moved the last bits of code from CodePlex to GitHub. We have stopped monitoring the CodePlex site...","Href":"http://blog.nuget.org/20150811/NuGet2-MoveToGitHub.html","RawContent":null},{"Title":"Announcing NuGet 3.1 with Support for Universal Windows Platform","PublishedOn":"2015-07-29T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today the NuGet team in collaboration with several other teams at Microsoft is happy to announce the release of a new version of the NuGet clients supporting the Universal Windows Platform and the new...","Href":"http://blog.nuget.org/20150729/Introducing-nuget-uwp.html","RawContent":null},{"Title":"NuGet 3.0 Released","PublishedOn":"2015-07-20T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Its been a long journey to this date.  We’ve investigated and tested and released a number of interim builds for developers and package owners to test with the latest Visual Studio bits.  The NuGet...","Href":"http://blog.nuget.org/20150720/nuget-3.0.0.html","RawContent":null},{"Title":"NuGet.org server status","PublishedOn":"2015-06-08T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the last few weeks we have experienced a few hours of downtime a few times a week. The NuGet community was very engaged in sharing the issues both on Twitter, support@nuget.org, personal emails,...","Href":"http://blog.nuget.org/20150608/nuget-server-status.html","RawContent":null},{"Title":"NuGet 3.0 RC 2 Released","PublishedOn":"2015-06-01T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the month since the Visual Studio 2015 RC release, we have heard from many of you with compliments, complaints, and bug reports. The NuGet team is happy to hear about all of the experiences you’ve...","Href":"http://blog.nuget.org/20150601/nuget-3.0-rc2.html","RawContent":null},{"Title":"NuGet 2.8.5 Released","PublishedOn":"2015-03-31T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the last few weeks we saw a significant change in the NuGet ecosystem with the renaming of the K utilities and framework monikers to DNX.  To support that change and provide backwards compatibility...","Href":"http://blog.nuget.org/20150331/nuget-2.8.5.html","RawContent":null},{"Title":"NuGet 3.0 Beta 2 Released","PublishedOn":"2015-02-26T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That was a quick turn-around…  we issued our 3.0 beta just a few days ago and our community of developers and supporters quickly found a number of issues with it.  Thank you to the early reporters on...","Href":"http://blog.nuget.org/20150226/nuget-3.0-beta2.html","RawContent":null},{"Title":"NuGet 3.0 Beta Released","PublishedOn":"2015-02-23T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Its time for the 3.0 beta release for NuGet, and this time we have some much sought-after enhancements in the works for you.  You can get access to the update NuGet binaries on Codeplex and through...","Href":"http://blog.nuget.org/20150223/nuget-3.0-beta.html","RawContent":null},{"Title":"Package Signing","PublishedOn":"2015-02-03T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Package signing has been a major discussion point for a long time in the NuGet ecosystem. However, the NuGet Team didn’t want to rush into an implementation and end up creating something that...","Href":"http://blog.nuget.org/20150203/package-signing.html","RawContent":null},{"Title":"Introducing the NuGet PowerShell Commands Survey","PublishedOn":"2014-12-03T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"You’ve probably seen the cool announcements from Microsoft about the new Community Edition of Visual Studio and the upcoming Visual Studio 2015 release in the new year.  We at the NuGet team have been...","Href":"http://blog.nuget.org/20141203/Introducing-the-powershell-commands-survey.html","RawContent":null},{"Title":"NuGet 3.0 Preview","PublishedOn":"2014-11-12T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"On November 12, 2014, as part of the Visual Studio 2015 Preview release, we released NuGet 3.0 Preview. This is a big release for us (albeit a preview), and we’re excited to start getting feedback on...","Href":"http://blog.nuget.org/20141112/nuget-3.0-preview.html","RawContent":null},{"Title":"Package Manifests","PublishedOn":"2014-10-23T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As we work on the designs for getting NuGet in the platform, it has become clear that NuGet needs better support for carrying arbitrary artifacts in packages and exposing them for consumption after...","Href":"http://blog.nuget.org/20141023/package-manifests.html","RawContent":null},{"Title":"NuGet: In the Platform","PublishedOn":"2014-10-14T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I recently declared that NuGet is “Broken By Design.” Now, that was hyperbolic; I don’t really think NuGet is broken. In fact, I’m very pleased with NuGet (and proud of it). But I wanted to make the...","Href":"http://blog.nuget.org/20141014/in-the-platform.html","RawContent":null},{"Title":"NuGet: Broken By Design","PublishedOn":"2014-10-10T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"On January 13, 2011, NuGet 1.0 was released with ASP.NET MVC 3. On June 19, 2012, NuGet 2.0 shipped in the box with all editions of Visual Studio 2012 (including the free ones). That was a little over...","Href":"http://blog.nuget.org/20141010/nuget-is-broken.html","RawContent":null},{"Title":"Visual Studio Tooling Guidance","PublishedOn":"2014-10-08T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As NuGet continues to gain momentum, more Microsoft teams have been seeking to install NuGet packages from their Visual Studio tooling.  This began with ASP.NET, where NuGet was born, when project...","Href":"http://blog.nuget.org/20141008/vs-tooling.html","RawContent":null},{"Title":"Discontinuing Updates for Visual Studio 2010","PublishedOn":"2014-10-02T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As we work on some big changes for NuGet 3.x, we’re finding that we’re at a crossroads: Should we use .NET 4.5 and improve our Visual Studio UI using new features available in Visual Studio 2012,...","Href":"http://blog.nuget.org/20141002/visual-studio-2010.html","RawContent":null},{"Title":"Target Framework Filtering and a Pending Breaking Change","PublishedOn":"2014-10-01T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever seen this error before?\n\n\n\nDoesn’t it make you want to yell and scream at NuGet, “Why did you just show it to me if I couldn’t install it!?‽”\n\nYeah, it makes us want to yell and scream...","Href":"http://blog.nuget.org/20141001/targetframeworkfiltering.html","RawContent":null},{"Title":"Supporting Semantic Versioning 2.0.0","PublishedOn":"2014-09-24T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated Sept. 2015: Our roadmap and requirements have changed and we have yet to implement these features as of NuGet v3.2.  We are tracking this issue on GitHub.  Please track this issue to follow...","Href":"http://blog.nuget.org/20140924/supporting-semver-2.0.0.html","RawContent":null},{"Title":"A New Package Statistics Warehouse","PublishedOn":"2014-08-20T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Warehouse is Dead, Long Live the Warehouse!\n\nBack in June, we blogged that our package statistics were full of lies.  We made a fix and expected reports to become correct on June 26th.  When June...","Href":"http://blog.nuget.org/20140820/new-statistics-warehouse.html","RawContent":null},{"Title":"NuGet 3.0 CTP 1 Released","PublishedOn":"2014-07-15T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today marks an important milestone for Building NuGet 3.x; we’ve published a NuGet 3.0 CTP1 build of our Visual Studio extension. This preview release represents a few months of code refactoring and...","Href":"http://blog.nuget.org/20140715/nuget-3.0-ctp1.html","RawContent":null},{"Title":"The NuGet.org Architecture","PublishedOn":"2014-07-11T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of Building NuGet 3.x, we have been working on a significant re-architecture of NuGet.org. Progress has been steady and we are starting to see a return on investment. In this post, we’ll...","Href":"http://blog.nuget.org/20140711/nuget-architecture.html","RawContent":null},{"Title":"Monitoring nuget.org","PublishedOn":"2014-06-26T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’ve recently found ourselves answering the same question repeatedly: How do you monitor nuget.org?  If you too are interested, here are the details.\n\nMonitoring Approaches\n\nWe have two approaches...","Href":"http://blog.nuget.org/20140626/monitoring-nuget.html","RawContent":null},{"Title":"NuGet Package Download Stats","PublishedOn":"2014-06-03T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Lies, Damned Lies, and Package Statistics\n\nWe’ve been getting reports about package download statistics being inconsistent with packages’ overall download counts and people have asked us which numbers...","Href":"http://blog.nuget.org/20140603/nuget-stats.html","RawContent":null},{"Title":"Redesigning the NuGet Websites","PublishedOn":"2014-05-08T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Blog Redesign is LIVE!\n\nWhat better way to announce upcoming website redesigns than by implementing that redesign on our blog?  Earlier today, we deployed changes to http://blog.nuget.org that apply a...","Href":"http://blog.nuget.org/20140508/redesigning-the-nuget-websites.html","RawContent":null},{"Title":"Building NuGet 3.x","PublishedOn":"2014-04-24T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Evolution of NuGet\n\nAt MonkeySpace 2013 last July, we revealed some of our thinking for the Evolution of NuGet.  These were the ideas we had for what would become NuGet 3.x and they included the...","Href":"http://blog.nuget.org/20140424/building-nuget-3.x.html","RawContent":null},{"Title":"A new search experience on the Gallery","PublishedOn":"2014-04-11T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For a while now, we’ve been working on some major improvements to search. Last week we deployed these improvements to production on http://www.nuget.org. In this post, I’ll describe how the new...","Href":"http://blog.nuget.org/20140411/new-search-on-the-gallery.html","RawContent":null},{"Title":"NuGet 2.8.1 Released, April 2nd-3rd Downtime, and the New Search Service","PublishedOn":"2014-04-03T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post was planned to be published on April 2nd as the NuGet 2.8.1 release announcement.  However, on that same day (also the first day of Build 2014), NuGet.org suffered a severe service...","Href":"http://blog.nuget.org/20140403/nuget-2.8.1-april-2nd-downtime.html","RawContent":null},{"Title":"NuGet 2.6.1 for WebMatrix","PublishedOn":"2014-03-28T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The NuGet team released an updated NuGet Package Manager extension for WebMatrix on March 26, 2014. This update can be installed from the WebMatrix Extension Gallery using the following steps:...","Href":"http://blog.nuget.org/20140328/nuget-2.6.1-for-webmatrix.html","RawContent":null},{"Title":"Update All Experience Explained","PublishedOn":"2013-12-16T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"While working on NuGet 2.8, we addressed some bugs dealing with the “Update All” behavior, where a single gesture will update all packages in the project.  During the testing of those fixes, another...","Href":"http://blog.nuget.org/20131216/update-all-experience-explained.html","RawContent":null},{"Title":"NuGet Governance Model","PublishedOn":"2013-12-06T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the last couple of years, we’ve had the chance to meet with many individuals who both use and contribute to NuGet. One of the questions that has come up on more than one occasion pertains to how...","Href":"http://blog.nuget.org/20131206/nuget-governance-model.html","RawContent":null},{"Title":"Use your Microsoft account to log in to NuGet.org!","PublishedOn":"2013-12-06T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today you can use your Microsoft account to log in to NuGet.org. I don’t know about you, but I want as few passwords as possible, so any opportunity to get rid of a password is great. Now,...","Href":"http://blog.nuget.org/20131206/microsoftaccountauthentication.html","RawContent":null},{"Title":"Starting Manage NuGet Packages for Solution dialog for projects under SourceGear Vault - issue and workaround","PublishedOn":"2013-11-18T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There has been reports that VS hangs when Manage NuGet Packages for Solution menu item is clicked. When VS responds again, it reports the following error:\n\n“Loading the projects is required to...","Href":"http://blog.nuget.org/20131118/Click-Manage-NuGet-Packages-for-Solution-hangs-VS.html","RawContent":null},{"Title":"VS hung on installing or updating packages may be related to ReSharper8.1 EAP","PublishedOn":"2013-11-07T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently there have been customer reports of hangs in Visual Studio while installing or updating NuGet packages. It could be related to this issue, if you have ReSharper 8.1 EAP installed.\n\nThe...","Href":"http://blog.nuget.org/20131107/VS2013-hang-on-installing-or-updating-packages-may-be-related-to-ReSharper81EAP.html","RawContent":null},{"Title":"Package Restore and Consent Changes","PublishedOn":"2013-10-16T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When NuGet 2.0 released, it included the requirement that in order to use package restore, you first needed to explicitly provide consent to the NuGet client to download packages over the Internet....","Href":"http://blog.nuget.org/20131016/package-restore-and-consent-changes.html","RawContent":null},{"Title":"Friendly License Names","PublishedOn":"2013-10-11T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday afternoon, we enabled a new feature for both the NuGet gallery and the Visual Studio client (for NuGet &gt;= 2.7) which will display the list of license names for a package in addition to...","Href":"http://blog.nuget.org/20131011/friendly-license-names.html","RawContent":null},{"Title":"How to use XDT in NuGet - Examples and Facts","PublishedOn":"2013-09-20T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with NuGet 2.6, XML-Document-Transform (XDT) is supported to transform XML files inside a project. The XDT syntax can be utilized in the .install.xdt and .uninstall.xdt file(s) under the...","Href":"http://blog.nuget.org/20130920/how-to-use-nugets-xdt-feature-examples-and-facts.html","RawContent":null},{"Title":"Issues uploading portable library packages [Fixed]","PublishedOn":"2013-09-10T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting September 3rd, some users started having issues uploading packages that contain portable libraries; on September 10th, we deployed a fix to address those issues.\n\nErrors...","Href":"http://blog.nuget.org/20130910/portable-package-issues.html","RawContent":null},{"Title":"NuGet 2.7 Package Restore Consent Errors","PublishedOn":"2013-08-29T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After NuGet 2.7 was released with Automatic Package Restore and implicit consent, some users reported that they were still seeing build errors indicating that package restore consent had not been...","Href":"http://blog.nuget.org/20130829/nuget-2.7-package-restore-consent-errors.html","RawContent":null},{"Title":"Editing Package Metadata on the NuGet Gallery","PublishedOn":"2013-08-23T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In our next deployment, which is scheduled for the week of August 26th, 2013, we have added the ability to edit package metadata at any point in time before or after publishing the package.\nThis has...","Href":"http://blog.nuget.org/20130823/Introducing-Edit-Package.html","RawContent":null},{"Title":"NuGet 2.7 Released","PublishedOn":"2013-08-22T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The NuGet team is excited to announce that NuGet 2.7 is now released in stable form. We published the release candidate on August 14th and we have not made any changes since then. For details\nabout...","Href":"http://blog.nuget.org/20130822/nuget-2.7-released.html","RawContent":null},{"Title":"Introducing NuGet Concierge","PublishedOn":"2013-08-16T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Twelve weeks ago, Microsoft’s Azure Applications Platform &amp; Tools team welcomed three 2nd-year college students, Jaspreet Bagga, Jeremiah Jekich, and Melissa McNeill, and gave them an opportunity...","Href":"http://blog.nuget.org/20130816/introducung-nuget-concierge.html","RawContent":null},{"Title":"NuGet 2.7 Release Candidate Available","PublishedOn":"2013-08-14T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The NuGet 2.7 Release Candidate is now available, with an expected release before the end of August.\n\n\n  Download: Visual Studio Extensions and NuGet.exe Command-Line\n  All Work Items for the Release...","Href":"http://blog.nuget.org/20130814/nuget-2.7-release-candidate.html","RawContent":null},{"Title":"Invoke the Manage NuGet Packages dialog programmatically","PublishedOn":"2013-07-25T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently I’ve been asked several times for how to invoke the Manage NuGet Packages dialog from VS components programmatically, and optionally auto-invoke the search when the dialog opens. Today I’d...","Href":"http://blog.nuget.org/20130725/invoke-manage-nuget-packages-dialog-programmatically.html","RawContent":null},{"Title":"NuGet 2.6 Released and Included in Visual Studio 2013 Preview","PublishedOn":"2013-06-26T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that NuGet 2.6 has been released and it is included\nin the box with Visual Studio 2013 Preview. For details\nabout what’s in the release, the release notes are published on...","Href":"http://blog.nuget.org/20130626/nuget-2.6-released.html","RawContent":null},{"Title":"Package Manager Dialog vs. Package Manager Console, some differences!","PublishedOn":"2013-05-21T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One common misconception we see among NuGet users is that NuGet could only install/ update to the latest version of a package in VS. This is due to the fact that through ‘NuGet Package Manager Dialog’...","Href":"http://blog.nuget.org/20130521/package-manager-dialog-vs-package-manager-console.html","RawContent":null},{"Title":"Where else is NuGet used in Visual Studio?","PublishedOn":"2013-05-20T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"All NuGet users are probably familiar with both the Manage NuGet Packages dialog and the Package Manager Console. These are the main user interfaces for installing and managing packages.\n\nHowever,...","Href":"http://blog.nuget.org/20130520/where-else-is-nuget-used-in-visual-studio.html","RawContent":null},{"Title":"Play with Packages, programmatically!","PublishedOn":"2013-05-20T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the many often seen requests, from developers using NuGet, is examples on our NuGet core APIs. The requests range from finding meta-data for the packages to installing the package...","Href":"http://blog.nuget.org/20130520/Play-with-packages.html","RawContent":null},{"Title":"A quick note about the new MinClientVersion attribute","PublishedOn":"2013-04-30T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the NuGet 2.5 release, we added the MinClientVersion property to the package manifest schema to allow for a package to demand the minimum version of the NuGet client that can install it.\n\nBecause...","Href":"http://blog.nuget.org/20130430/a-quick-note-about-minclientversion-feature.html","RawContent":null},{"Title":"Support for Native Projects","PublishedOn":"2013-04-26T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the NuGet 2.5 release notes, we called out that NuGet now has support for native projects. We wanted to explain exactly what “support for native projects” means.\n\nVisual Studio Support\n\nUntil NuGet...","Href":"http://blog.nuget.org/20130426/native-support.html","RawContent":null},{"Title":"NuGet 2.5 Released","PublishedOn":"2013-04-25T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Download it now\n\nNuGet was included in all editions of Visual Studio 2012 and it’s also available for Visual Studio 2010 through the Visual Studio Extension Manager. To get the latest version of NuGet...","Href":"http://blog.nuget.org/20130425/nuget-2.5-released.html","RawContent":null},{"Title":"XDT web.config transforms","PublishedOn":"2013-04-22T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Sitting there since October 12, 2010, with a total of 55 votes accumulated since then, there’s a NuGet feature that has had more than its fair share of attention: Support Visual Studio (XDT)...","Href":"http://blog.nuget.org/20130422/xdt-web-config-transforms.html","RawContent":null},{"Title":"Goodbye preview.nuget.org. Hello staging.nuget.org!","PublishedOn":"2013-04-19T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TL;DR The preview.nuget.org site is going away. Switch to staging.nuget.org by April 26th!\n\nGoodbye preview.nuget.org\nWe have a version of the NuGet Gallery called “Preview” and it’s been hosted at...","Href":"http://blog.nuget.org/20130419/goodbye-preview.html","RawContent":null},{"Title":"NuGet 2.5 Release Candidate","PublishedOn":"2013-04-15T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated:\nThe NuGet 2.5 Release Candidate was available from April 15 to April 25, 2013.  For the several hundred of you that downloaded the release candidate, we truly appreciate your verification of...","Href":"http://blog.nuget.org/20130415/nuget-2.5-release-candidate.html","RawContent":null},{"Title":"Recent NuGet Gallery Updates","PublishedOn":"2013-04-11T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The NuGet Gallery crew has gotten into a rhythm of publishing updates every 2 weeks.  With the increased update frequency, we found that we needed to create a changelog to highlight new features....","Href":"http://blog.nuget.org/20130411/recent-nuget-gallery-updates.html","RawContent":null},{"Title":"The March 6th NuGet Gallery Outage","PublishedOn":"2013-04-04T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"On March 6th 2013, nuget.org’s package download was broken for one and a half hours. Some outages involve factors beyond our control; \nthis time it was very much our own fault and we would like to...","Href":"http://blog.nuget.org/20130404/the-march-6-nuget-gallery-outage.html","RawContent":null},{"Title":"Improved search syntax on nuget.org and in NuGet Visual Studio extension","PublishedOn":"2013-03-25T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The NuGet team recently deployed a new and very useful search capability on nuget.org, which allows you to narrow your search to a pariticular attribute of a NuGet package. For example, if you want to...","Href":"http://blog.nuget.org/20130325/improved-search-syntax.html","RawContent":null},{"Title":"Introducing Package Statistics","PublishedOn":"2013-02-26T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have introduced a new feature on http://nuget.org where you can see download statistics for packages.  With this initial drop, we hope to whet your appetite and collect your input on further...","Href":"http://blog.nuget.org/20130226/Introducing-Package-Statistics.html","RawContent":null},{"Title":"Workflow Changes for CodePlex Issues","PublishedOn":"2013-02-11T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A couple weeks ago, some of you noticed that the core team closed a few issues on http://nuget.codeplex.com that were in the “Soonish” release. The items that were closed were feature suggestions...","Href":"http://blog.nuget.org/20130211/workflow-changes-for-codeplex-issues.html","RawContent":null},{"Title":"Managing Package Owners on nuget.org","PublishedOn":"2013-02-05T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"While each NuGet package’s nuspec metadata defines the package’s owner(s), the NuGet gallery at nuget.org ignores that piece of nuspec metadata.  Instead, ownership of a package is defined by who...","Href":"http://blog.nuget.org/20130205/managing-package-owners.html","RawContent":null},{"Title":"A quick tutorial on the Update-Package command","PublishedOn":"2012-12-31T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Among the supported commands in NuGet’s Package Manager Console, Update-Package is arguably the most powerful in terms of its supported parameters and switches. The primary purpose of the command is...","Href":"http://blog.nuget.org/20121231/a-quick-tutorial-on-update-package-command.html","RawContent":null},{"Title":"Creating custom package rules for your build","PublishedOn":"2012-10-23T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When you build your NuGet packages using nuget.exe, you may have noticed that sometimes you get a warning about the created package. Here’s one example:\n\n\n\nThis warning is generated by one of NuGet’s...","Href":"http://blog.nuget.org/20121023/creating-custom-package-rules-for-your-build.html","RawContent":null},{"Title":"Invoking NuGet Services from inside Visual Studio","PublishedOn":"2012-09-26T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best kept secrets of the NuGet extension is that besides the UI that everyone has become familiar with, it also exports some useful services, via MEF, which allow other components in VS to...","Href":"http://blog.nuget.org/20120926/invoking-nuget-services-from-inside-visual-studio.html","RawContent":null},{"Title":"Recent Changes to Package Restore Consent","PublishedOn":"2012-09-07T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When we released NuGet 2.0, one of the changes included the addition of a privacy-related constraint to the package restore feature.  More specifically, NuGet 2.0 required that you provide explicit...","Href":"http://blog.nuget.org/20120907/recent-changes-to-package-restore-consent.html","RawContent":null},{"Title":"Feed Performance Update","PublishedOn":"2012-08-24T09:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As you might know, NuGet has been having some performance (and timeout) related issues recently.  Earlier this week, we completed a deployment that helped, but it didn’t address everything.\n\nMany...","Href":"http://blog.nuget.org/20120824/nuget-feed-performance-update.html","RawContent":null},{"Title":"Upgrade Successful","PublishedOn":"2012-08-22T23:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this evening, we announced that the NuGet Gallery would be offline for about an hour during a scheduled upgrade.  That upgrade is now complete.\n\nWe expect this deployment to help address...","Href":"http://blog.nuget.org/20120822/nuget-expected-downtime-completed.html","RawContent":null},{"Title":"Expected Downtime - August 22 11pm-12am PDT","PublishedOn":"2012-08-22T18:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As mentioned in the previous post, we’ve been working to address some performance problems on the NuGet Gallery.\n\nThe fixes we have in place include some time-consuming database migrations.  During...","Href":"http://blog.nuget.org/20120822/nuget-expected-downtime.html","RawContent":null},{"Title":"NuGet Gallery Performance Issues","PublishedOn":"2012-08-22T15:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since August 16th, and especially since August 21st, the NuGet Gallery has been exhbiting intermittent performance issues.  Some users are reporting errors when attempting to browse or search for...","Href":"http://blog.nuget.org/20120822/nuget-performance-issues.html","RawContent":null},{"Title":"Results of NuGet CDN Experiment","PublishedOn":"2012-08-10T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A little over a week ago, we asked for your help with an experimentt that we were conducting to see whether there was value in enabling CDN support for our packages blob storage container.  Over 100...","Href":"http://blog.nuget.org/20120810/results-of-nuget-cdn-experiment.html","RawContent":null},{"Title":"Help Us Test CDN for NuGet.org","PublishedOn":"2012-08-02T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past few weeks, we’ve been investigating whether to turn on the content delivery network (CDN) feature of the Azure blob storage container for NuGet packages.  In theory, this would make...","Href":"http://blog.nuget.org/20120802/help-us-test-nuget-cdn.html","RawContent":null},{"Title":"NuGet 2.0 Released","PublishedOn":"2012-06-19T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re happy to announce that we released NuGet 2.0 on 6/19/2012. This release includes support for grouping dependencies, tools and content by the target framework of the project. Additionally, we’ve...","Href":"http://blog.nuget.org/20120619/nuget-2.0-released.html","RawContent":null},{"Title":"NuGet 1.8 Hotfix Released","PublishedOn":"2012-05-29T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the NuGet 1.8 release, we found a breaking change that caused NuGet to fail on Windows XP machines.  Earlier today, we released a hotfix to NuGet 1.8 that addresses this.\n\nWe apologize for any...","Href":"http://blog.nuget.org/20120529/nuget-1.8-hotfix-released.html","RawContent":null},{"Title":"NuGet 1.8 Released","PublishedOn":"2012-05-25T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re happy to announce that we released NuGet 1.8 on 5/23/2012. This release includes support for localized satellite assemblies, nuget.exe performance improvements, and 34 bug fixes. Details are in...","Href":"http://blog.nuget.org/20120525/nuget-1.8-released.html","RawContent":null},{"Title":"Package Restore and Consent","PublishedOn":"2012-05-18T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A little while back, our team had the pleasure of talking about NuGet with some privacy experts. These are folks who are passionate about your privacy and laws that protect your privacy.\n\nAs we were...","Href":"http://blog.nuget.org/20120518/package-restore-and-consent.html","RawContent":null},{"Title":"NuGet's Sources Are Moving to Git","PublishedOn":"2012-04-19T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At the end of April, we’ll be moving the NuGet sources hosted on CodePlex from a Mercurial repository to a Git repository. This won’t impact or affect NuGet users, but NuGet contributors and those...","Href":"http://blog.nuget.org/20120419/nuget-sources-moving-to-git.html","RawContent":null},{"Title":"NuGet 1.7 Released","PublishedOn":"2012-04-04T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re happy to announce that we released NuGet 1.7 today. This release includes several new features as well as over 75 bug fixes. Details are in the NuGet 1.7 Release Notes.","Href":"http://blog.nuget.org/20120404/nuget-1.7-released.html","RawContent":null},{"Title":"The NuGet Gallery Outage on March 9th","PublishedOn":"2012-03-14T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The NuGet Gallery was unavailable on March 9th from approximately midnight until 7:52 A.M., nearly eight hours. During this time all HTTP requests to the gallery website failed. In addition to...","Href":"http://blog.nuget.org/20120314/the-nuget-gallery-outage-on-march-9.html","RawContent":null},{"Title":"Introducing the NuGet Team Blog","PublishedOn":"2012-03-13T00:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the last few months, the NuGet team has been considering starting a proper, official blog. This is that blog.\n\nHow do we plan to use this blog? Here are a few ways we know we’ll use it (and I’m...","Href":"http://blog.nuget.org/20120313/introducing-the-nuget-team-blog.html","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"7381680890","Type":"IssuesEvent","CreatedAt":"2018-03-15T00:08:35","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5569","RelatedDescription":"Closed issue \"FindByUsername and FindByKey should not return records that are marked as deleted.\" (#5569) at NuGet/NuGetGallery","RelatedBody":"UserService FindByUsername and FindByKey should not return records that are marked as deleted."},{"Id":"7381661291","Type":"PullRequestEvent","CreatedAt":"2018-03-15T00:01:58","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/5619","RelatedDescription":"Opened pull request \"Add traces to CopyFileAsync to improve debugging\" (#5619) at NuGet/NuGetGallery","RelatedBody":"Also, add a couple more integration tests.\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/1190."},{"Id":"7381472899","Type":"PullRequestEvent","CreatedAt":"2018-03-14T23:02:21","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/5612","RelatedDescription":"Merged pull request \"Get the package hash from the stream when backing up\" (#5612) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/1190.\r\n\r\nSince we can now mutate packages via processors, it is possible for the hash in the DB to mismatch the hash of the actual package. Therefore, we should calculate the hash from the backed up stream.\r\n\r\nI chose not to change the backup method to use `CopyFileAsync` (i.e. server-side copy) because this would have it's own race conditions and requires a `srcAccessCondition`. We have to download the package anyway to calculate the hash. We can revisit this later if we want to improve the performance.\r\n\r\nAlso, make the hash algorithm a required parameter to `CryptographyService.GenerateHash`. It's silly for the caller to not care about the hash algorithm, especially since you have to put the hash algorithm name in the database record anyway."},{"Id":"7381406277","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:43:48","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5618","RelatedDescription":"Opened issue \"Upon failure, E2E tests should show the exact URL that was pinged\" (#5618) at NuGet/NuGetGallery","RelatedBody":"I am currently debugging an E2E test failure.\r\n\r\nIt tells me that\r\n```\r\nPackage E2E.SemVer1Stable.180314.143038.1681947 1.0.0 was not found on https://nuget-dev-0-v2v3search.cloudapp.net:44301/search/query after waiting 00:35:00.1391927.\r\n```\r\nbut I don't know the exact URL that was pinged to determine whether or not the package was present. It would be more debuggable if I was able to determine exactly what URL was hit and whether or not the issue was just caused by long processing times."},{"Id":"7381318071","Type":"PullRequestEvent","CreatedAt":"2018-03-14T22:20:35","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/5603","RelatedDescription":"Merged pull request \"[Validation] Display notice if package validation exceeds expectation\" (#5603) at NuGet/NuGetGallery","RelatedBody":"Displays a notice on the Display Package page if the validation is taking longer than expected.\r\n\r\n![validationtoolong](https://user-images.githubusercontent.com/737941/37376305-d56e0390-26e0-11e8-9b39-c68b75f64cdb.png)\r\n\r\nProgress on https://github.com/NuGet/Engineering/issues/1144\r\n"},{"Id":"7380492895","Type":"PullRequestEvent","CreatedAt":"2018-03-14T19:26:48","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/5613","RelatedDescription":"Merged pull request \"Fix login page for local debugging.\" (#5613) at NuGet/NuGetGallery","RelatedBody":"Fixes:\r\n- https://github.com/NuGet/NuGetGallery/issues/5606 - Show password login for local login.\r\n- https://github.com/NuGet/NuGetGallery/issues/5040 - Simplify password login when no external providers present.\r\n\r\nNow if there is no external provider configured, we will see password login on the first sign in page itself. \r\n\r\nNote: use `?w=1`(https://github.com/NuGet/NuGetGallery/pull/5613/files?w=1) to ignore whitespace changes"},{"Id":"7380437313","Type":"IssuesEvent","CreatedAt":"2018-03-14T19:15:22","Actor":"anangaur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5617","RelatedDescription":"Opened issue \"[UX] Implement consistent breadcrumbs on NuGet.org\" (#5617) at NuGet/NuGetGallery","RelatedBody":"The profile page needs to have links to manage packages as well as manage organizations once the author is logeed in.\r\n\r\nThere also needs to be consistent breadcrumb model for easy navigation through out the site."},{"Id":"7380414688","Type":"IssuesEvent","CreatedAt":"2018-03-14T19:10:36","Actor":"anangaur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5616","RelatedDescription":"Opened issue \"[UX] Refactor 'Manage packages' page\" (#5616) at NuGet/NuGetGallery","RelatedBody":"Currently the **Manage Packages** page has lots of  lists:\r\n1. Published packages list\r\n1. Unlisted packages list\r\n1. Outgoing co-ownership requests (pending)\r\n1. Incoming co-ownership requests (pending)\r\n\r\nIn addition to the above with Organization packages also being shown here, the page become unmanageable and random. We need to clean this up."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"7382283616","Type":"IssuesEvent","CreatedAt":"2018-03-15T03:47:54","Actor":"Jericho","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/6679","RelatedDescription":"Opened issue \"How to get the list of owners of a given package on nuget.org\" (#6679) at NuGet/Home","RelatedBody":"How can I get the list of owners of a given package hosted in nuget.org? What I'm looking for is the information circled in red in this screenshot:\r\n\r\n![sshot-14](https://user-images.githubusercontent.com/112710/37443249-5c16cc6e-27e1-11e8-8111-888309c05edc.png)\r\n\r\nWhen I query nuget with the following code, the `Owners` property is always null. So I'm wondering if there is an alternative?\r\n```\r\nvar providers = new List<Lazy<INuGetResourceProvider>>();\r\nproviders.AddRange(NuGet.Protocol.Core.Types.Repository.Provider.GetCoreV3());\r\nvar packageSource = new PackageSource(\"https://api.nuget.org/v3/index.json\");\r\nvar sourceRepository = new SourceRepository(packageSource, providers);\r\nvar nugetPackageMetadataClient = sourceRepository.GetResource<PackageMetadataResource>();\r\nvar packageMetadataResult = await _nugetPackageMetadataClient.GetMetadataAsync(\"Cake.Email\", true, true, new Logger(), CancellationToken.None);\r\nvar mostRecentPackage = packageMetadataResult\r\n    .OrderByDescending(p => p.Published)\r\n    .First();\r\nvar owners = mostRecentPackage.Owners;\r\n```"},{"Id":"7381548144","Type":"IssuesEvent","CreatedAt":"2018-03-14T23:25:19","Actor":"ericstj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/6678","RelatedDescription":"Opened issue \"NuGet is munging URL sources when passed in from the commandline\" (#6678) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nWhen passing in an HTTP URL source preceded by a local source NuGet is munging the URL.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\ndotnet.exe\r\n\r\nNuGet version (x.x.x.xxx):\r\n4.7.0.4927\r\n\r\ndotnet.exe --version (if appropriate):\r\n2.1.300-preview2-008349\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nwin10 v1709 16299.248\r\n\r\nWorked before? If so, with which NuGet version:\r\nYes, 4.0.0.2283\r\n\r\nI reproed the broken behavior in all versions of the SDK 2.0.0 and greater.  The code that hit this was previously working on a pre-release version of the 2.0 SDK.  As I mentioned below I suspect the 2.0 era change was what broke it.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a project and add a reference:\r\n```xml\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Banana.1.1.dll.dotnet\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n```\r\n\r\n2.  Run restore passing two sources, the first a local path, the second a url.\r\n\r\n```\r\ndotnet restore -s c:\\ -s https://www.myget.org/F/ericstj-issue-repros/api/v3/index.json\r\n```\r\n\r\nExpect: Successfully restore\r\n\r\nActual: Fails with following error\r\n```\r\nC:\\nuGetRestoreTest>dotnet restore -s c:\\ -s https://www.myget.org/F/ericstj-issue-repros/api/v3/index.json\r\n  Restoring packages for C:\\nuGetRestoreTest\\nuGetRestoreTest.csproj...\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008349\\NuGet.targets(114,5): error : The local source 'C:\\nuGetRestoreTest\\https:\\www.myget.org\\F\\ericstj-issue-repros\\api\\v3\\index.json' doesn't exist. [C:\\nuGetRestoreTest\\nuGetRestoreTest.csproj]\r\n```\r\n\r\nNote that the URL has been mangled: slashes converted to backslashes, deduped, then concated with the working dir.  I suspect this is related to https://github.com/NuGet/NuGet.Client/commit/73fbfdf9c770733f9a1d95e0803f68777446f4db.  @emgarten \r\n\r\n### Verbose Logs\r\n\r\n[msbuild.log](https://github.com/NuGet/Home/files/1813470/msbuild.log)\r\n\r\n### Sample Project\r\n\r\n[nuGetRestoreTest.zip](https://github.com/NuGet/Home/files/1813474/nuGetRestoreTest.zip)\r\n\r\n\r\n/cc @ahsonkhan"},{"Id":"7381196583","Type":"IssuesEvent","CreatedAt":"2018-03-14T21:52:36","Actor":"PatoBeltran","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6619","RelatedDescription":"Closed issue \"Signing: Add support for repository sign\" (#6619) at NuGet/Home","RelatedBody":"Add code to enable repository signatures and repository primary signatures to the signing API and expose a command line tool to repository sign a package."},{"Id":"7379467245","Type":"IssuesEvent","CreatedAt":"2018-03-14T16:24:06","Actor":"m-j","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/6677","RelatedDescription":"Opened issue \"Nuget using Mono fails to accept self-signed certificate\" (#6677) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx):  4.5.1.4879\r\n\r\nMono version: Mono JIT compiler version 5.0.0\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Ubuntu 16.04 64-bit\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create ssl certificate using openssl use it to encrypt https traffic on from your nuget server\r\n\r\n2. Install it into mono store using command: `certmgr -ssl https://test.com`\r\n\r\n3. Test ssl using command `mono tlstest.exe https://test.com` as described here: http://www.mono-project.com/docs/faq/security/ It passes the test\r\n\r\n4. Try installing package using `nuget install Thunderpick.Web -Source https://test.com/ -ExcludeVersion -PackageSaveMode nuspec -OutputDirectory .`\r\n\r\nIt produces error:\r\n\r\n```\r\nUnable to load the service index for source https://test.com/.\r\n  An error occurred while sending the request\r\n  Error: TrustFailure (Ssl error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED\r\n    at /tmp/buildd/mono-5.0.0.100/external/boringssl/ssl/handshake_client.c:1132)\r\n  Ssl error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED\r\n    at /tmp/buildd/mono-5.0.0.100/external/boringssl/ssl/handshake_client.c:1132\r\n```\r\n...\r\n\r\n## Other suggested things\r\n\r\nFollowing scenario works perfectly on Windows (after adding my custom cert to cert store). My custom feed also works well when not using https but http both on Windows and Linux.\r\n\r\n### Verbose Logs\r\nUnable to load the service index for source https://test.com/.\r\n  An error occurred while sending the request\r\n  Error: TrustFailure (Ssl error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED\r\n    at /tmp/buildd/mono-5.0.0.100/external/boringssl/ssl/handshake_client.c:1132)\r\n  Ssl error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED\r\n    at /tmp/buildd/mono-5.0.0.100/external/boringssl/ssl/handshake_client.c:1132\r\nNuGet.Protocol.Core.Types.FatalProtocolException: Unable to load the service index for source https://test.com/. ---> System.Net.Http.HttpRequestException: An error occurred while sending the request ---> System.Net.WebException: Error: TrustFailure (Ssl error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED\r\n  at /tmp/buildd/mono-5.0.0.100/external/boringssl/ssl/handshake_client.c:1132) ---> Mono.Btls.MonoBtlsException: Ssl error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED\r\n  at /tmp/buildd/mono-5.0.0.100/external/boringssl/ssl/handshake_client.c:1132\r\n  at Mono.Btls.MonoBtlsContext.ProcessHandshake () [0x00038] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.MobileAuthenticatedStream.ProcessHandshake (Mono.Net.Security.AsyncProtocolRequest asyncRequest, Mono.Net.Security.AsyncOperationStatus status) [0x0002a] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.AsyncProtocolRequest.ProcessOperation (Mono.Net.Security.AsyncOperationStatus status) [0x0006b] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.AsyncProtocolRequest.ProcessOperation () [0x0000d] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.AsyncProtocolRequest.StartOperation () [0x0003c] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.AsyncProtocolRequest.StartOperation (Mono.Net.Security.AsyncOperation operation) [0x00024] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.MobileAuthenticatedStream.ProcessAuthentication (System.Net.LazyAsyncResult lazyResult) [0x00057] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at Mono.Net.Security.MobileAuthenticatedStream.ProcessAuthentication (System.Net.LazyAsyncResult lazyResult) [0x00078] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsClient (System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation) [0x0000c] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.Private.MonoSslStreamWrapper.AuthenticateAsClient (System.String targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, System.Boolean checkCertificateRevocation) [0x00006] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at Mono.Net.Security.MonoTlsStream.CreateStream (System.Byte[] buffer) [0x0007b] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at System.Net.WebConnection.CreateStream (System.Net.HttpWebRequest request) [0x00073] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n   --- End of inner exception stack trace ---\r\n  at System.Net.HttpWebRequest.EndGetResponse (System.IAsyncResult asyncResult) [0x00058] in <76fe267e1bf64ad1a7865d07a5edd3f0>:0 \r\n  at System.Threading.Tasks.TaskFactory`1[TResult].FromAsyncCoreLogic (System.IAsyncResult iar, System.Func`2[T,TResult] endFunction, System.Action`1[T] endAction, System.Threading.Tasks.Task`1[TResult] promise, System.Boolean requiresSynchronization) [0x0000f] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Net.Http.HttpClientHandler+<SendAsync>d__63.MoveNext () [0x003e6] in <f9ac0c719f3449a0aa7ac0136a1ad250>:0 \r\n   --- End of inner exception stack trace ---\r\n  at System.Net.Http.HttpClientHandler+<SendAsync>d__63.MoveNext () [0x00449] in <f9ac0c719f3449a0aa7ac0136a1ad250>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.ServerWarningLogHandler+<SendAsync>d__1.MoveNext () [0x00088] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.StsAuthenticationHandler+<SendAsync>d__9.MoveNext () [0x000bf] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.HttpSourceAuthenticationHandler+<SendAsync>d__9.MoveNext () [0x000c4] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Net.Http.HttpClient+<SendAsyncWorker>d__47.MoveNext () [0x000ca] in <f9ac0c719f3449a0aa7ac0136a1ad250>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.TimeoutUtility+<StartWithTimeout>d__0`1[T].MoveNext () [0x001cd] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.HttpRetryHandler+<SendAsync>d__0.MoveNext () [0x00432] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.HttpSource+<GetThrottledResponse>d__16.MoveNext () [0x001b4] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.HttpSource+<ProcessResponseAsync>d__14`1[T].MoveNext () [0x000aa] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at ODataServiceDocumentUtils+<CreateODataServiceDocumentResourceV2>d__0.MoveNext () [0x000d5] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n   --- End of inner exception stack trace ---\r\n  at ODataServiceDocumentUtils+<CreateODataServiceDocumentResourceV2>d__0.MoveNext () [0x00148] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.ODataServiceDocumentResourceV2Provider+<TryCreate>d__8.MoveNext () [0x0024b] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.Core.Types.SourceRepository+<GetResourceAsync>d__16`1[T].MoveNext () [0x000b8] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.DependencyInfoResourceV2FeedProvider+<TryCreate>d__1.MoveNext () [0x000f1] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.Core.Types.SourceRepository+<GetResourceAsync>d__16`1[T].MoveNext () [0x000b8] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.Protocol.Core.Types.SourceRepository+<GetResourceAsync>d__15`1[T].MoveNext () [0x00070] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.PackageManagement.NuGetPackageManager+<GetLatestVersionCoreAsync>d__91.MoveNext () [0x0008c] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.PackageManagement.NuGetPackageManager+<>c__DisplayClass90_1+<<GetLatestVersionAsync>b__3>d.MoveNext () [0x000a7] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.PackageManagement.NuGetPackageManager+<GetLatestVersionAsync>d__90.MoveNext () [0x00115] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.PackageManagement.NuGetPackageManager+<GetLatestVersionAsync>d__89.MoveNext () [0x000a5] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in <4dc8ec68b0964e099af86e50301f5f3c>:0 \r\n  at NuGet.CommandLine.InstallCommand+<InstallPackageAsync>d__40.MoveNext () [0x00217] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n\r\n"},{"Id":"7379303622","Type":"IssuesEvent","CreatedAt":"2018-03-14T16:00:07","Actor":"mattleibow","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/6676","RelatedDescription":"Opened issue \"What is the best way to pack an assembly as a reference assembly?\" (#6676) at NuGet/Home","RelatedBody":"I am building a multi-targeting project which has (for this example) 4 platforms:\r\n - netstandard1.0\r\n - uwp\r\n - ios\r\n - android\r\n\r\nThe current `/t:Pack` operation is fine and works well. However, I am wanting to make the netstandard library a reference library and not include it in the app build output. The reason for this is that I would like to make the package \"extendable\" to other developers. I will be working on the iOS/Android/UWP, but Tizen may be something that is wanted.\r\n\r\nI believe the `ref/<platform>` package folder is only used at build-time, so I was hoping to be able to move my netstandard assembly there instead of the `lib` folder.\r\n\r\nThis is the current package:\r\n\r\n```\r\nlib/netstandard1.0/Assembly.dll\r\nlib/xamarin.ios/Assembly.dll\r\nlib/monoandroid/Assembly.dll\r\nlib/uap10.0/Assembly.dll\r\n```\r\n\r\nWhat I would like is this:\r\n\r\n```\r\nref/netstandard1.0/Assembly.dll\r\nlib/xamarin.ios/Assembly.dll\r\nlib/monoandroid/Assembly.dll\r\nlib/uap10.0/Assembly.dll\r\n```\r\n\r\nThis way - at least in my mind - Bob from Samsung could create his package and just depend on mine:\r\n\r\n```\r\nlib/tizen4/Assembly.dll\r\n```"},{"Id":"7377679991","Type":"IssuesEvent","CreatedAt":"2018-03-14T11:23:03","Actor":"ElMaxxi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/6675","RelatedDescription":"Opened issue \"content files are not being included in old format project\" (#6675) at NuGet/Home","RelatedBody":"NuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet Version: 4.3.0.4406\r\n\r\nVS version (if appropriate): 2017\r\n\r\nOS version: Version 10.0.14393\r\n\r\nI am trying to create a nuget  package that will add content to a project. I have followed many online tutorials on how to do it, and ended up with the following:\r\n\r\nfolder layout>\r\nNugetPackage\\\r\n        TestData\\\r\n                some files in subfolders\r\n        NugetPackage.nuspec\r\ncontent of nuspec file:\r\n-----------------------------\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/01/nuspec.xsd\">\r\n    <metadata minClientVersion=\"3.3.0\">\r\n        <id>NugetPackage</id>\r\n        <version>1.0.0.0</version>\r\n        <authors>some author</authors>\r\n        <owners>some owner</owners>\r\n        <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n        <description>description of pockage</description>\r\n        <copyright>Copyright 2018</copyright>\r\n        <contentFiles>\r\n            <files include=\"**\\*.*\" buildAction=\"Content\"/>\r\n        </contentFiles>\r\n    </metadata>\r\n</package>\r\n----------------------------\r\n\r\ncall nuget pack and the package is created.\r\nAdding this package to a project with the new csproj format works fine.\r\nAdding this package to a project with the old csproj format doesn't work.\r\nBoth use PackageReference.\r\n\r\nNuget.exe verbose log:\r\nNuGet Version: 4.3.0.4406\r\nAttempting to build package from 'testPackage.nuspec'.\r\n\r\nId: testPackage\r\nVersion: 1.0.0.0\r\nAuthors: Komax AG\r\nDescription: Test data for Database Administration Tool\r\nDependencies: None\r\n\r\nAdded file '[Content_Types].xml'.\r\nAdded file '_rels/.rels'.\r\nAdded file 'package/services/metadata/core-properties/0f0de1437e974b06b6c339e64c1477e2.psmdcp'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/CrimpModules.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/Machine.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/Prefeeder.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/PrintModules.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/Q1240.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/RingSensor.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/SealModules.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/WireChangeDetection.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/MigrationMapping/WireStraightener.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A530/TopWin2_Alpha530.kback'.\r\nAdded file 'TestData/TopWin2/17.10/A550/MigrationMapping/CrimpModules.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A550/MigrationMapping/Machine.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A550/MigrationMapping/Prefeeder.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A550/MigrationMapping/Q1240.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A550/MigrationMapping/SealModules.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A550/MigrationMapping/Splice.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A550/MigrationMapping/WireChangeDetection.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A550/MigrationMapping/WireStraightener.xml'.\r\nAdded file 'TestData/TopWin2/17.10/A550/TopWin2_Alpha550.kback'.\r\nAdded file 'TestData/TopWin4/17.12/Alpha530/topwindata_emptyWithElectricEndPoints.mdf'.\r\nAdded file 'TestData/TopWin4/17.12/Alpha530/topwindata_emptyWithElectricEndPoints_log.ldf'.\r\nAdded file 'TestData/TopWin4/17.12/Alpha550/topwindata_emptyWithElectricEndPoints.mdf'.\r\nAdded file 'TestData/TopWin4/17.12/Alpha550/topwindata_emptyWithElectricEndPoints_log.ldf'.\r\nAdded file 'TestData/TopWin4/topwindata.bak'.\r\nAdded file 'testPackage.nuspec'.\r\n\r\nSuccessfully created package '..\\testPackage.1.0.0.nupkg'.\r\n\r\nWhat am I doing wrong?\r\n"},{"Id":"7375358466","Type":"IssuesEvent","CreatedAt":"2018-03-14T00:01:00","Actor":"conioh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/6674","RelatedDescription":"Opened issue \"NuGet VSIX Manifest won't install on VS 2015 Integrated Shell\" (#6674) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet Package Manager for Visual Studio 2015\r\n\r\nNuGet version: 3.4.4.1321\r\n\r\n\r\nVS version: 2015 Integrated Shell\r\n\r\nOS version: Windows 10 x64 v1709 (16299.192)\r\n\r\nWorked before? If so, with which NuGet version: Worked way back. Don't remember version\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Get a machine (or a VM) without Visual Studio.\r\n\r\n1. Install Visual Studio 2015 Integrated Shell or any product that has Visual Studio 2015 Integrated Shell bundled with it.\r\n\r\n   1. Find `vs_isoshell.exe` and `vs_intshelladditional.exe` in your old downloads directory or whatever and install them in that order. Or:\r\n   1. Install [RemObjects Elements 10](http://www.elementscompiler.com/elements/download.aspx) for Windows\r\n\r\n1. Search the Nuget Package Manager extension from within the VS GUI. Fail\r\n\r\n1. Download the [extension from the VS Marketplace](https://marketplace.visualstudio.com/items?itemName=NuGetTeam.NuGetPackageManagerforVisualStudio2015).\r\n\r\n1. Try to install it.\r\n\r\n1. Be informed that there are no compatible products install.\r\n\r\n1. Recall that it used to work.\r\n\r\n1. Got on GitHub and see that...\r\n\r\nThough it's hard to follow the million renames/moves the `.vsixmanifest` files went through, [the manifests in the old repo include the `IntegratedShell` ID](https://github.com/NuGet/NuGet2/search?utf8=%E2%9C%93&q=IntegratedShell&type=).\r\n\r\nAfter all the renames and moves, the current head include 3 files:\r\n\r\n* [`source.extension.vs14.vsixmanifest`](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.VisualStudio.Client/source.extension.vs14.vsixmanifest) which declares support for Community, Pro and Express editions of VS 2015.\r\n* [`source.extension.vs15.vsixmanifest`](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.VisualStudio.Client/source.extension.vs15.vsixmanifest) which declares support for Community, Pro and Express editions of VS 2017. This doesn't makes a lot of sense since [most of the Express editions don't have a 2017 version](https://www.visualstudio.com/vs/express/) - there's only VS 2017 Express for Windows Desktop. No Web. No Windows 10. No Windows Phone.\r\n\r\nand:\r\n\r\n* [`source.extension.vs15.insertable.vsixmanifest`](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Clients/NuGet.VisualStudio.Client/source.extension.vs15.insertable.vsixmanifest) which declares support for `Microsoft.VisualStudio.IntegratedShell` with `Version=\"[15.0,16.0)\"`. But there's no VS 2017 Shell! It says so everywhere. For example:\r\n\r\n> Microsoft offers the Integrated and Isolated Shells only for Visual Studio 2015, Visual Studio 2013, Visual Studio 2012, and Visual Studio 2010. It is not available for Visual Studio 2017.\r\n\r\nhttps://vspartner.com/pages/vsshells\r\n\r\nIt is known.\r\n\r\nMy guess is that somehow along the way someone just bumped up all the versions, even though it makes no sense. VS 2017 Integrated Shell is [not a thing](https://queue.acm.org/detail.cfm?id=3041020). VS 2015 Integrated Shell certainly is, but NuGet won't work with it.\r\n\r\nMaybe my guess is wrong. I don't know what \"insertable\" even means and I couldn't even get the 2015 extension to build from the current head so I'm coming here.\r\n\r\nIt's worth noting that the VS2013 NuGet extension still works on VS 2013 Integrated Shell.\r\n\r\n![image](https://user-images.githubusercontent.com/10606081/37376038-0db2cee4-272b-11e8-9bff-81fbd5db05be.png)\r\n\r\nPlease make the NuGet extensions work with VS 2015 Integrated Shell.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7186580047","Type":"IssuesEvent","CreatedAt":"2018-02-01T23:56:45","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/20","RelatedDescription":"Opened issue \"Deprecation of www.nuget.org/nuget.exe\" (#20) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|*None*|https://github.com/NuGet/NuGetGallery/issues/5381|\r\n\r\nWe are deprecating the use of URL: **www.nuget.org/nuget.exe** which currently downloads nuget.exe version 2.8.6. If you have a dependency on this URL, we recommend you to start using **https://dist.nuget.org/win-x86-commandline/v2.8.6/nuget.exe**. \r\n\r\nFor consistency, we are also changing this endpoint to redirect to dist.nuget.org, which is our primary home for downloading all released versions of nuget.exe. \r\n\r\n**Old redirect:** https://az320820.vo.msecnd.net/downloads/nuget.exe \r\n**New redirect:** https://dist.nuget.org/win-x86-commandline/v2.8.6/nuget.exe\r\n\r\nIf you are interested in downloading newer versions of nuget.exe, please see the [Downloads](https://www.nuget.org/downloads) page on nuget.org.\r\n\r\nFor other methods of installing our client tools, please see our [Installing NuGet client tool](https://docs.microsoft.com/en-us/nuget/install-nuget-client-tools) documentation.\r\n\r\n**Note:** There is no immediate plan to remove the URL **www.nuget.org/nuget.exe** . We will monitor the usage before taking it offline. We will also reach out again before taking the URL offline."},{"Id":"7167969402","Type":"IssuesEvent","CreatedAt":"2018-01-29T22:24:12","Actor":"diverdan92","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/19","RelatedDescription":"Opened issue \"NuGet Package Debugging & Symbols Improvements\" (#19) at NuGet/Announcements","RelatedBody":"The **NuGet Package Debugging & Symbols Improvements** spec is now ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[NuGet Package Debugging & Symbols Improvements](https://github.com/NuGet/Home/wiki/NuGet-Package-Debugging-&-Symbols-Improvements)|[NuGet/Home/#6104](https://github.com/NuGet/Home/issues/6104)| "},{"Id":"7058410415","Type":"IssuesEvent","CreatedAt":"2018-01-04T20:16:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/16","RelatedDescription":"Opened issue \"Deprecating the ability to copy Full access API keys\" (#16) at NuGet/Announcements","RelatedBody":"\r\n| Spec wiki| Discussion issue| \r\n| :------------- |:-------------| \r\n|*None*|[NuGet/NuGetGallery#5231](https://github.com/NuGet/NuGetGallery/issues/5231)|\r\n\r\nWe on the NuGet.org team are committed to continually seek ways to improve the security of our services. A year ago, we introduced [scoped API keys](https://blog.nuget.org/20170202/introducing-scoped-api-keys.html) to help our users better manage their API keys. While we recommend the use of scoped API keys, we will continue to support our legacy 'Full access API keys' that were previously granted by the service. Such keys do not expire if you use them at least one every 365 days to push a package.\r\n \r\nWe are making a change to our service such that a newly issued API key cannot be copied after the page is refreshed. While this was always the case for scoped API keys, we were allowing users with 'Full access API keys' to copy them down at any point. We plan to remove this capability in the future, as making this change allows us to migrate all of our APIs keys to use a one-way hash and further protect against malicious use of the key.\r\n\r\n**Starting Feb 5th 2018, the 'Full access API key' cannot be copied from NuGet.org**. While most of the packages pushed to NuGet.org now use a scoped API key and are not impacted by this change, users continuing to use our legacy 'Full access API keys' will need to securely stash the key before this date after which they will not be accessible. Please note that the 'Full access API keys' will continue to work just like they did before. We are only removing the ability to copy them down from NuGet.org.\r\n\r\nIf you have further question, please reach out to us by commenting on the [discussion issue](https://github.com/NuGet/NuGetGallery/issues/5231) or send me an email at [anangaur@microsoft.com](mailto:anangaur@microsoft.com). "},{"Id":"7052631752","Type":"IssuesEvent","CreatedAt":"2018-01-03T16:30:00","Actor":"rido-min","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/15","RelatedDescription":"Opened issue \"Repository Signatures Spec\" (#15) at NuGet/Announcements","RelatedBody":"The **Repository Signatures** spec is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Repository Signatures](https://github.com/NuGet/Home/wiki/Repository-Signatures)|[#6378](https://github.com/NuGet/Home/issues/6378)|\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"957814300843810816","CreatedAt":"2018-01-29T03:14:59+00:00","UserScreenname":"nuget","Text":"We are currently experiencing high latency in validating and indexing new packages pushed to… https://t.co/piYrZAit4o","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null},{"Id":"935978264333398016","CreatedAt":"2017-11-29T21:06:22+00:00","UserScreenname":"nuget","Text":"Do you push packages to @NuGet.org using the @NuGet.exe or any other CLI? \nYou now need @nuget.exe 4.1.0+ or client… https://t.co/iliCDDCOy3","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":7,"FavoriteCount":14,"RawContent":null},{"Id":"927656564671909889","CreatedAt":"2017-11-06T21:58:54+00:00","UserScreenname":"nuget","Text":"The https://t.co/F9kiKfdOWi website and services are up and running now: https://t.co/ZO0FhaEoQ0 https://t.co/bUGBlQb6pj","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":14,"FavoriteCount":8,"RawContent":null},{"Id":"927630886509539332","CreatedAt":"2017-11-06T20:16:52+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi services are currently experiencing a downtime. We are actively looking into it. https://t.co/ZO0FhaEoQ0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":35,"FavoriteCount":47,"RawContent":null}]}},"RunOn":"2018-03-15T05:30:26.6359414Z","RunDurationInMilliseconds":3033}