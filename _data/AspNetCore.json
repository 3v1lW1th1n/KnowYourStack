{"Data":{"Blog":{"FeedItems":[{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel. Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7510585038","Type":"IssuesEvent","CreatedAt":"2018-04-11T01:34:47","Actor":"muratg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2703","RelatedDescription":"Closed issue \"Flaky Test: FileBufferingReadStreamTests\" (#2703) at aspnet/Home","RelatedBody":"_From @halter73 on Friday, May 12, 2017 3:51:51 PM_\r\n\r\nFileBufferingReadStreamTests.FileBufferingReadStream_AsyncReadWithOnDiskLimit_EnforcesLimit failed the Win10-Universe build.\r\n\r\nhttp://aspnetci/viewLog.html?buildId=219344&tab=buildResultsDiv&buildTypeId=XPlat_Windows_Win10Universe\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#836_"},{"Id":"7510063734","Type":"IssuesEvent","CreatedAt":"2018-04-10T22:39:50","Actor":"XelaNimed","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3044","RelatedDescription":"Opened issue \"Using a common resource file for different classes jointly with owned resources of classes\" (#3044) at aspnet/Home","RelatedBody":"Hello. \r\nI'm looking for the possibility of using a single resource file to localize error messages in the annotations of data models. As I understand it, we can use one common file to localize all data models, but in this case the resource keys will be very long, because in the presence of properties with the same name in different classes, we need to distinguish them in some way. If we use the usual approach (one model - one resource file), the resource keys become more compact, but the same error lines appear, for example, the length of the string or the required field. This means that if we need to change the error message (for ex.: Required or StringLength), we will need to change a large number of resources.\r\n\r\nI asked question at comments feed [here](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization) and at StackOverflow, but to no avail.\r\n\r\nCan we somehow combine these two approaches? In the Display Attribute there is a parameter \"ResourceType\", can we use it? If \"Yes\", then how?\r\n\r\n``` csharp\r\nnamespace MyProject.Models {\r\n  public Person {\r\n\r\n        // Property \"Nickname\" used owned resource file for localization.\r\n        // In file \"/Resources/Models/Person.de.resx\" exists string with key \"Nickname\". Works.\r\n        [Display(Name = \"Nickname\")]\r\n        public string Nickname { get; set; }\r\n\r\n        // Property \"FirstName\" used owned resource file too.\r\n        // In file \"/Resources/Models/Person.de.resx\" exists string with key \"FirstName\". Works.\r\n        // But I want to use a single resource file to localize all the error strings.\r\n        // What should I pass to the parameter \"ResourceType\"?\r\n        [Display(Name = \"FirstName\")]\r\n        [Required(ErrorMessage = \"RequiredError\", ResourceType = ?)]\r\n        public string FirstName { get; set; }\r\n    }\r\n}"},{"Id":"7509977968","Type":"IssuesEvent","CreatedAt":"2018-04-10T22:16:27","Actor":"rockerinthelocker","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3041","RelatedDescription":"Closed issue \"ASP.NET Core 2.1.0-preview2-final Applications Crash On Start\" (#3041) at aspnet/Home","RelatedBody":" After upgrading the default Emtpy project (VS 15.7 Preview 3) to 2.1.0-preview**2**-final and published as self-contained app (win-x64), the app crashes on start with the following exception:\r\n\r\n```\r\nUnhandled Exception: System.IO.IOException: Failed to bind to address http://localhost:5000. ---> System.AggregateException: One or more errors occurred. (Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.KestrelMemoryPool.Create()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport..ctor(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher, IApplicationLifetime applicationLifetime, Int32 ioQueueCount, ISocketsTrace trace)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.Create(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.DefaultAddressStrategy.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__5.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at dotnet4life.SimpleSite.Program.Main(String[] args)\r\n```\r\n\r\nAfter upgrading the default MVC project (VS 15.7 Preview 3) to 2.1.0-preview**2**-final and published as self-contained app (win-x64), the app crashes on start with the following exceptions:\r\n\r\n```\r\nfail: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider[48]\r\n      An error occurred while reading the key ring.\r\nSystem.TypeLoadException: Could not load type 'System.MemoryExtensions' from assembly 'System.Memory, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n   at System.IO.FindEnumerableFactory.NormalizeInputs(String& directory, String& expression)\r\n   at System.IO.FileSystem.EnumerateFileSystemInfos(String fullPath, String searchPattern, SearchOption searchOption, SearchTarget searchTarget)\r\n   at System.IO.DirectoryInfo.EnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)\r\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.<GetAllElementsCore>d__11.MoveNext()\r\n   at System.Collections.Generic.List`1.AddEnumerable(IEnumerable`1 enumerable)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.GetAllElements()\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetAllKeys()\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to bind to http://localhost:5000 on the IPv4 loopback interface: 'Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to bind to http://localhost:5000 on the IPv6 loopback interface: 'Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.IO.IOException: Failed to bind to address http://localhost:5000. ---> System.AggregateException: One or more errors occurred. (Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.KestrelMemoryPool.Create()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport..ctor(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher, IApplicationLifetime applicationLifetime, Int32 ioQueueCount, ISocketsTrace trace)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.Create(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.DefaultAddressStrategy.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n\r\nUnhandled Exception: System.IO.IOException: Failed to bind to address http://localhost:5000. ---> System.AggregateException: One or more errors occurred. (Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Rent' in type 'System.Buffers.SlabMemoryPool' from assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.KestrelMemoryPool.Create()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport..ctor(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher, IApplicationLifetime applicationLifetime, Int32 ioQueueCount, ISocketsTrace trace)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.Create(IEndPointInformation endPointInformation, IConnectionDispatcher dispatcher)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.DefaultAddressStrategy.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__5.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at WebApplication2.Program.Main(String[] args) in D:\\WebApplication2\\WebApplication2\\Program.cs:line 18\r\n```\r\n\r\nNote: Line 18 comes after CreateWebHostBuilder(args).Build().Run();\r\n\r\nWith ASP.NET Core 2.1.0-preview**1**-final everything works as expected.\r\n"},{"Id":"7508924033","Type":"IssuesEvent","CreatedAt":"2018-04-10T18:40:28","Actor":"eobeda","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3043","RelatedDescription":"Opened issue \"microsoft.aspnetcore.app.2.1.0-preview2-final.nupkg , corrupt ???\" (#3043) at aspnet/Home","RelatedBody":"Is the microsoft.aspnetcore.app.2.1.0-preview2-final.nupkg package built correctly ( served via Nuget.org ) ?\r\n\r\nIt is only 4k and does not appear to contain lib valid files. Also the \"C:\\Program Files\\dotnet\\shared\\\" directory is not populated with any preview2  files, so IIS Express fails within VS.\r\n\r\n\r\nThanks for checking\r\nEd\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7511189812","Type":"PullRequestEvent","CreatedAt":"2018-04-11T05:15:10","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1945","RelatedDescription":"Opened pull request \"Dont always copy handlers\" (#1945) at aspnet/SignalR","RelatedBody":"Issue: https://github.com/aspnet/SignalR/issues/1862\r\nPreviously we were always making copies of the the invocation handler list in preparation for dispatching an invocation. Now we only make a new copy if there have been updates to the set of handlers.\r\n\r\nhttps://github.com/aspnet/SignalR/blob/80f87e7730e04e6979ee934126be7d608fc43724/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs#L440-L447"},{"Id":"7511184840","Type":"PullRequestEvent","CreatedAt":"2018-04-11T05:13:16","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1916","RelatedDescription":"Merged pull request \"SSE formatting refactor\" (#1916) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/issues/1865"},{"Id":"7511060883","Type":"PullRequestEvent","CreatedAt":"2018-04-11T04:24:22","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1938","RelatedDescription":"Closed pull request \"Rename HttpTransportType\" (#1938) at aspnet/SignalR","RelatedBody":"API review task\r\nHttpTransportType -> HttpTransportTypes"},{"Id":"7511014256","Type":"PullRequestEvent","CreatedAt":"2018-04-11T04:05:29","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1943","RelatedDescription":"Merged pull request \"Rename folder from HubEndPoint\" (#1943) at aspnet/SignalR","RelatedBody":"This was bothering me"},{"Id":"7510794772","Type":"IssuesEvent","CreatedAt":"2018-04-11T02:46:34","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1717","RelatedDescription":"Closed issue \"Flaky test: hubConnection using messagepack over LongPolling transport can be restarted\" (#1717) at aspnet/SignalR","RelatedBody":"Seeing this javascript test flake out in the last 3 PR runs."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7511185132","Type":"IssuesEvent","CreatedAt":"2018-04-11T05:13:23","Actor":"fatih108","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7630","RelatedDescription":"Opened issue \"\"AllowEmptyStrings = true\" does not work\" (#7630) at aspnet/Mvc","RelatedBody":"This my ViewModel, why \"AllowEmptyStrings = true\" does not work. ModelState always invalid.\r\n\r\npublic class LoginViewModel\r\n    {\r\n        [Required(ErrorMessage = \"EmailRequired\")]\r\n        public string Email { get; set; }\r\n\r\n        [Required(ErrorMessage = \"PasswordRequired\",AllowEmptyStrings = true)]\r\n        public string Password { get; set; }\r\n    }"},{"Id":"7510841205","Type":"IssuesEvent","CreatedAt":"2018-04-11T03:02:47","Actor":"D3MaxT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7629","RelatedDescription":"Opened issue \"services.AddMvc() is broken in 15.7 Preview 3 when In-Process IIS hosting model is selected\" (#7629) at aspnet/Mvc","RelatedBody":"Setting a brand new ASP.NET Core 2.1 Preview 2-final project.\r\n\r\nWhen selecting the In-Process hosting model for IIS Express, the first HTTP request throws an exception on the services.AddMvc(); line:\r\n\r\nSystem.ArgumentNullException: 'Value cannot be null.'\r\n\r\nWorks fine when \"Default\" hosting model is set."},{"Id":"7510264593","Type":"PullRequestEvent","CreatedAt":"2018-04-10T23:40:21","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7628","RelatedDescription":"Opened pull request \"Allow BindPropertyAttribute to be specified on controller classes\" (#7628) at aspnet/Mvc","RelatedBody":"Fixes #7350"},{"Id":"7509932535","Type":"PullRequestEvent","CreatedAt":"2018-04-10T22:04:59","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7627","RelatedDescription":"Opened pull request \"Remove root directory customization options for Razor Pages areas\" (#7627) at aspnet/Mvc","RelatedBody":"Fixes #7608"},{"Id":"7509908952","Type":"IssuesEvent","CreatedAt":"2018-04-10T21:59:16","Actor":"PaulParker","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7610","RelatedDescription":"Closed issue \"Custom error page for exceptions in view\" (#7610) at aspnet/Mvc","RelatedBody":"We're using `UseStatusCodePagesWithReExecute()` in combination with a simple custom middleware that sets `Response.StatusCode` to `500`, to successfully to send users to our custom error page on exceptions in mvc controllers.  However, for errors in razor/cshtml views, `UseStatusCodePagesWithReExecute()` doesn't seem to do anything (though the middleware does detect the exceptions from views in `Invoke()`).\r\n\r\nIs there a way to send users to our error page if the exception originates in a view?"},{"Id":"7509795943","Type":"PullRequestEvent","CreatedAt":"2018-04-10T21:33:19","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7626","RelatedDescription":"Opened pull request \"Use DependencyContext.CompileLibraries to determine dependency graph\" (#7626) at aspnet/Mvc","RelatedBody":"Fixes https://github.com/aspnet/Mvc/issues/7617"},{"Id":"7509403755","Type":"IssuesEvent","CreatedAt":"2018-04-10T20:14:46","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7615","RelatedDescription":"Closed issue \"Mvc.Testing incompatible with current Razor application\" (#7615) at aspnet/Mvc","RelatedBody":"## Repro Steps\r\nThe following is similar to the [Preview 1 functional testing instructions](https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/) but done In Visual Studio using Preview 2 bits:\r\n1. Create new ASP.NET Core Web Application\r\n    - Later steps make more sense if \"Create directory for solution\" is enabled\r\n2. Choose Web Application i.e. a Razor app and your favourite authentication scheme\r\n3. Hit F5 or Ctrl-F5 to confirm app works fine\r\n4. Add an xUnit Test Project (.NET Core) to the solution\r\n5. Edit test project file to bump up the target framework: `<TargetFramework>netcoreapp2.1</TargetFramework>`\r\n    - current Microsoft.AspNetCore.App package used in web application project is not compatible with a lower TFM\r\n6. Add a reference from the test project to the web application project\r\n7. Use Manage NuGet Packages to add a Microsoft.AspNetCore.Mvc.Testing package dependency to the test project\r\n    - choose same version e.g. `2.1.0-preview2-30552` as Microsoft.AspNetCore.App package in the web application project\r\n8. Edit UnitTest1 to perform a simple test:\r\n    ``` c#\r\n    using System.Net;\r\n    using System.Net.Http;\r\n    using System.Threading.Tasks;\r\n    using Microsoft.AspNetCore.Mvc.Testing;\r\n    using RazorApp1;\r\n    using Xunit;\r\n\r\n    namespace FunctionalTest\r\n    {\r\n        public class UnitTest1 : IClassFixture<WebApplicationFactory<Startup>>\r\n        {\r\n            private readonly HttpClient _client;\r\n\r\n            public UnitTest1(WebApplicationFactory<Startup> factory)\r\n            {\r\n                _client = factory.CreateDefaultClient();\r\n            }\r\n\r\n            [Fact]\r\n            public async Task Test1()\r\n            {\r\n                // Arrange & Act\r\n                var response = await _client.GetAsync(\"https://localhost/\");\r\n\r\n                // Assert\r\n                Assert.Equal(HttpStatusCode.OK, response.StatusCode);\r\n            }\r\n        }\r\n    }\r\n    ```\r\n    - use \"http://localhost\" if you chose _not_ to include HTTPS support when creating the web application project\r\n9. Use Test Explorer to Run All tests\r\n\r\n### Expected\r\nThe one test succeeds.\r\n### Actual\r\nTest fails, apparently due to a failed attempt to re-compile the Index.cshtml Razor page. Note the test project's bin includes the {app}.Views.dll assembly.\r\n```\r\n...\r\nResult StackTrace:\t\r\nat Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(RazorCodeDocument codeDocument, String generatedCode)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.OnCacheMiss(String normalizedPath)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.RazorPages.Internal.DefaultPageLoader.Load(PageActionDescriptor actionDescriptor)\r\n   at Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionInvokerFactory.CreateInvoker(ActionContext actionContext)\r\n   at Microsoft.AspNetCore.Mvc.Internal.MvcAttributeRouteHandler.<>c__DisplayClass12_0.<RouteAsync>b__0(HttpContext c)\r\n...\r\nResult Message:\t\r\nMicrosoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException : One or more compilation failures occurred:\r\numzefeie.bog(4,41): error CS0234: The type or namespace name 'Razor' does not exist in the namespace 'Microsoft.AspNetCore' (are you missing an assembly reference?)\r\numzefeie.bog(5,44): error CS0234: The type or namespace name 'RazorPages' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\r\numzefeie.bog(4,82): error CS0518: Predefined type 'System.Type' is not defined or imported\r\numzefeie.bog(4,119): error CS0518: Predefined type 'System.String' is not defined or imported\r\numzefeie.bog(4,142): error CS0518: Predefined type 'System.String' is not defined or imported\r\numzefeie.bog(5,89): error CS0518: Predefined type 'System.String' is not defined or imported\r\n...\r\n```\r\n\r\n## Suspects\r\nThe attempt to re-compile a Razor page and its failure are likely separate problems. Probably have an incompatibility between the MSBuild pre-compilation approach and the MSBuild side of the Testing package.\r\n\r\n## Versions\r\nMicrosoft Visual Studio Enterprise 2017: `15.7.0 Preview 3.0 [27604.0.d15.7]`\r\n.NET Core SDK: `2.1.300-preview2-008523`\r\nMicrosoft.NETCore.App: `2.1.0-preview2-26403-06`\r\nMicrosoft.AspNetCore.App: `2.1.0-preview2-30552`\r\nMicrosoft.AspNetCore.Mvc.Testing: `2.1.0-preview2-30552`"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7509906431","Type":"PullRequestEvent","CreatedAt":"2018-04-10T21:58:40","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1745","RelatedDescription":"Opened pull request \"Include social logins and authenticator key as part of personal download\" (#1745) at aspnet/Identity","RelatedBody":"We now display the linked login providers and the authenticator key if it exists.\r\n\r\nApps will be responsible for displaying any additional custom tokens they might store (like access/refresh tokens) since we don't have any way of enumerating these today.\r\n\r\n@blowdart @ajcvickers "},{"Id":"7509096549","Type":"PullRequestEvent","CreatedAt":"2018-04-10T19:13:44","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1744","RelatedDescription":"Opened pull request \"Add AllowAnonymous for resetting password navigation flow\" (#1744) at aspnet/Identity","RelatedBody":"Addresses #1736 and aspnet/templating#448"},{"Id":"7508216987","Type":"IssuesEvent","CreatedAt":"2018-04-10T16:29:50","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1663","RelatedDescription":"Closed issue \"AccountController ForgotPassword should check the UserId before ResetPassword\" (#1663) at aspnet/Identity","RelatedBody":"_From @Eilon on October 24, 2017 21:36_\n\n_From @HaoK on January 25, 2017 19:32_\n\nMoved from: https://github.com/aspnet/Home/issues/1911#issuecomment-275184195\r\n\r\nToday we are passing in the userId from ForgotPassword:  https://github.com/aspnet/Templates/blob/dev/src/Rules/StarterWeb/IndividualAuth/Controllers/AccountController.cs#L282\r\n\r\nBut not using it when we reset: https://github.com/aspnet/Templates/blob/dev/src/Rules/StarterWeb/IndividualAuth/Controllers/AccountController.cs#L321\r\n\r\nWe should check that the User with userId matches the user that is retrieved via FindByEmail as well.\r\n\r\ncc @blowdart \r\n\n\n_Copied from original issue: aspnet/Templates#804_\n\n_Copied from original issue: aspnet/templating#96_"},{"Id":"7506766343","Type":"IssuesEvent","CreatedAt":"2018-04-10T12:45:29","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1538","RelatedDescription":"Closed issue \"Add xmldocs for Microsoft.AspNetCore.Identity.UI\" (#1538) at aspnet/Identity","RelatedBody":"A fit-n-finish item TODO before RTM.\r\n\r\ncc @javiercn "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7510235772","Type":"PullRequestEvent","CreatedAt":"2018-04-10T23:31:01","Actor":"sebastienros","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2477","RelatedDescription":"Opened pull request \"Fixing typo\" (#2477) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7510194091","Type":"PullRequestEvent","CreatedAt":"2018-04-10T23:17:58","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2476","RelatedDescription":"Opened pull request \"Make HTTP/2 internal\" (#2476) at aspnet/KestrelHttpServer","RelatedBody":"This won't be finished for RTM so we'll make the option internal."},{"Id":"7510050881","Type":"IssuesEvent","CreatedAt":"2018-04-10T22:36:11","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2128","RelatedDescription":"Closed issue \"Specified argument was out of the range of valid values. Parameter name: count\" (#2128) at aspnet/KestrelHttpServer","RelatedBody":"I write a site with asp.net core 2.0, sometimes following error raise(rarely).\r\n\r\n> An unhandled exception has occurred: Specified argument was out of the range of valid values. Parameter name: count\r\n\r\nStackTrace:\r\n\r\n> System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values. Parameter name: count at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed() at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ReadResult& result) at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult() at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult() at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.d__24.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame1.<ProcessRequestsAsync>d__2.MoveNext()\r\n>   --- End of stack trace from previous location where exception was thrown --- at\r\n>   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() at\r\n>   Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame1.d__2.MoveNext()\r\n\r\nI`m not sure, but this error probably after I migrate to asp.net core 2.0."},{"Id":"7510039133","Type":"IssuesEvent","CreatedAt":"2018-04-10T22:33:01","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2470","RelatedDescription":"Closed issue \"1000ms delay when only IPv4 address is used when specifying ListenOptions for Kestrel.\" (#2470) at aspnet/KestrelHttpServer","RelatedBody":"I've noticed that http requests to Kestrel take at least 1000ms if only a IPv4 endpoint is bound to. If a request normally takes 15ms, it will take 1015ms instead.\r\n\r\nIf you use `UseKestrel()` on its own, it automatically listens to the localhost IPv4 and IPv6 addresses. If you manually specify addresses using `KestrelServerOptions` but only specify a single `Listen` with an IPv4, then you see the bug. If you add a second endpoint that uses IPv6, the bug goes away.\r\n\r\n\r\nUsing a default ASP.NET Core 2 template from VS 2017:\r\n\r\nNo bug\r\n```\r\n.UseKestrel((options) =>\r\n            {\r\n                options.Listen(IPAddress.Loopback, 5000);\r\n                options.Listen(IPAddress.IPv6Loopback, 5000);\r\n            })\r\n```\r\n\r\nBug\r\n```\r\n.UseKestrel((options) =>\r\n            {\r\n                options.Listen(IPAddress.Loopback, 5000);\r\n            })\r\n```\r\n"},{"Id":"7509935223","Type":"IssuesEvent","CreatedAt":"2018-04-10T22:05:38","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2435","RelatedDescription":"Closed issue \"Make further Socket Transport performance improvements\" (#2435) at aspnet/KestrelHttpServer","RelatedBody":"Related: #2431"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7510557332","Type":"IssuesEvent","CreatedAt":"2018-04-11T01:24:59","Actor":"mikeharder","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2246","RelatedDescription":"Reopened issue \"dotnet build includes a refs directory containing all binaries from the shared fx\" (#2246) at aspnet/Razor","RelatedBody":"1. `dotnet new mvc`\r\n2. `dotnet build`\r\n\r\nThere's a refs directory in the `bin\\debug\\netcoreapp2.1` directory containing a slew of files from `Microsoft.NETCore.App` and `Microsoft.AspNetCore.App`."},{"Id":"7509783087","Type":"PullRequestEvent","CreatedAt":"2018-04-10T21:30:30","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2254","RelatedDescription":"Opened pull request \"Is 1888 fixed\" (#2254) at aspnet/Razor","RelatedBody":""},{"Id":"7509032486","Type":"IssuesEvent","CreatedAt":"2018-04-10T19:01:09","Actor":"ryanbrandenburg","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2253","RelatedDescription":"Opened issue \"Flaky test: Lower_SetsOptions_RunsConfigureCallbacks\" (#2253) at aspnet/Razor","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=444737&buildTypeId=XPlat_Mac_MacUniverseCoreCLR) occasionally with the following error:\r\n\r\n```\r\nSystem.NullReferenceException : Object reference not set to an instance of an object.\r\n   at System.Collections.Generic.Dictionary`2.FindEntry(TKey key)\r\n   at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value)\r\n   at Castle.DynamicProxy.Generators.BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3 factory)\r\n   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)\r\n   at Moq.Proxy.CastleProxyFactory.CreateProxy(Type mockType, ICallInterceptor interceptor, Type[] interfaces, Object[] arguments)\r\n   at Moq.Mock`1.<InitializeInstance>b__20_0()\r\n   at Moq.Mock`1.OnGetObject()\r\n   at Moq.Mock`1.get_Object()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.<>c__DisplayClass1_0.<Lower_SetsOptions_RunsConfigureCallbacks>b__2(IRazorEngineBuilder b) in /_/test/Microsoft.AspNetCore.Razor.Language.Test/DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.cs:line 54\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.<>c__DisplayClass14_0.<Lower>b__0(IRazorEngineBuilder b) in /_/test/Microsoft.AspNetCore.Razor.Language.Test/DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.cs:line 443\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEngine.CreateCore(RazorConfiguration configuration, Boolean designTime, Action`1 configure) in /_/src/Microsoft.AspNetCore.Razor.Language/RazorEngine.cs:line 49\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.Lower(RazorCodeDocument codeDocument, Action`1 builder, IEnumerable`1 tagHelpers, Boolean designTime) in /_/test/Microsoft.AspNetCore.Razor.Language.Test/DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.cs:line 450\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.Lower_SetsOptions_RunsConfigureCallbacks() in /_/test/Microsoft.AspNetCore.Razor.Language.Test/DefaultRazorIntermediateNodeLoweringPhaseIntegrationTest.cs:line 50\r\n```\r\nFuture instances of this failure can be found [here](http://aspnetci/project.html?projectId=XPlat&testNameId=4111971084968319933&tab=testDetails)."},{"Id":"7508558554","Type":"IssuesEvent","CreatedAt":"2018-04-10T17:32:56","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2238","RelatedDescription":"Closed issue \"Diagnostics in DirectiveIntermediateNode are lost\" (#2238) at aspnet/Razor","RelatedBody":"The diagnostics that get added to the directive nodes are all lost because we remove all the directives as part of an optimization [pass](https://github.com/aspnet/Razor/blob/dev/src/Microsoft.AspNetCore.Razor.Language/DirectiveRemovalOptimizationPass.cs#L9). We should lift those errors up before we delete those nodes so they are not lost."},{"Id":"7508555338","Type":"PullRequestEvent","CreatedAt":"2018-04-10T17:32:19","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2251","RelatedDescription":"Merged pull request \"Preserve directive node diagnostics in document node\" (#2251) at aspnet/Razor","RelatedBody":"#2238 \r\n\r\nWe made a targeted fix for this in 15.7 but it's time to fix it for real."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7369868082","Type":"IssuesEvent","CreatedAt":"2018-03-13T05:33:42","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067) at aspnet/Tooling","RelatedBody":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."},{"Id":"7390872316","Type":"IssuesEvent","CreatedAt":"2018-03-16T13:54:05","Actor":"mnmr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Opened issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":41,"FavoriteCount":15,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":56,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":159,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":4,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"973691520728510464","CreatedAt":"2018-03-13T22:45:23+00:00","UserScreenname":"aspnet","Text":"Starting now... join us for the weekly #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":12,"RawContent":null},{"Id":"973553523186159621","CreatedAt":"2018-03-13T13:37:02+00:00","UserScreenname":"aspnet","Text":"Today, Jeff shows you how to use dependency injection with web forms... check it out! https://t.co/viqZ28DBrV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2018-04-11T05:30:09.2373394Z","RunDurationInMilliseconds":7827}