{"Data":{"GitHub":{"Issues":[{"Id":"463017863","IsPullRequest":true,"CreatedAt":"2019-07-02T04:44:59","Actor":"sayanshaw24","Number":"3948","RawContent":null,"Title":"Reformatted Regression samples to width 85","State":"open","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3948","RelatedDescription":"Open PR \"Reformatted Regression samples to width 85\" (#3948)"},{"Id":"462472431","IsPullRequest":false,"CreatedAt":"2019-07-02T03:54:49","Actor":"jiaguoxinzhi","Number":"3935","RawContent":null,"Title":"ML.NET Features column 'Feature' not found 如何将预训数据模型 转化为 预测数据模型","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**:Win10\r\n- **.NET Version (eg., dotnet --info)**: .net core 3.0 preview-6\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nhttps://social.msdn.microsoft.com/Forums/en-US/a9a45553-d26f-4964-9b84-81a6f1806754/mlnet-features-column-feature-not-found?forum=2212\r\n- **What happened?**\r\nhttps://social.msdn.microsoft.com/Forums/en-US/a9a45553-d26f-4964-9b84-81a6f1806754/mlnet-features-column-feature-not-found?forum=2212\r\n- **What did you expect?**\r\nML.NET Features column 'Feature' not found 如何将预训数据模型 转化为 预测数据模型\r\n\r\n怎么使用单独的数据准备和模型管道进行预测 On ML.NET, how to use eparate data preparation and model pipelines Predict(forcast)\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\nclass Program\r\n    {\r\n\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n\r\n\r\n            HousingData[] housingData = new HousingData[]\r\n            {\r\n                new HousingData\r\n                {\r\n                    Size = 600f,\r\n                    HistoricalPrices = new float[] { 100000f ,125000f ,122000f },\r\n                    CurrentPrice = 170000f\r\n                },\r\n                new HousingData\r\n                {\r\n                    Size = 1000f,\r\n                    HistoricalPrices = new float[] { 200000f, 250000f, 230000f },\r\n                    CurrentPrice = 225000f\r\n                },\r\n                new HousingData\r\n                {\r\n                    Size = 1000f,\r\n                    HistoricalPrices = new float[] { 126000f, 130000f, 200000f },\r\n                    CurrentPrice = 195000f\r\n                }\r\n            };\r\n\r\n            // Create MLContext\r\n            MLContext mlContext = new MLContext();\r\n\r\n            // Load Data\r\n            IDataView data = mlContext.Data.LoadFromEnumerable<HousingData>(housingData);\r\n\r\n            //使用单独的数据准备和模型管道\r\n            {\r\n                // Define data preparation estimator\r\n                IEstimator<ITransformer> dataPrepEstimator =\r\n                    mlContext.Transforms.Concatenate(\"Features\", new string[] { \"Size\", \"HistoricalPrices\" })\r\n                        .Append(mlContext.Transforms.NormalizeMinMax(\"Features\"))\r\n                        ;\r\n                // Create data preparation transformer\r\n                ITransformer dataPrepTransformer = dataPrepEstimator.Fit(data);\r\n                // Pre-process data using data prep operations\r\n                IDataView transformedData = dataPrepTransformer.Transform(data);\r\n \r\n                // Define StochasticDualCoordinateAscent regression algorithm estimator\r\n                var sdcaEstimator = mlContext.Regression.Trainers.Sdca();//labelColumnName: \"Label\", featureColumnName: \"Features\"\r\n\r\n                //Console.WriteLine(\"正在训练\");\r\n                // Train regression model\r\n                RegressionPredictionTransformer<LinearRegressionModelParameters> trainedModel = sdcaEstimator.Fit(transformedData);\r\n\r\n                // Save Data Prep transformer\r\n                mlContext.Model.Save(dataPrepTransformer, data.Schema, \"data_preparation_pipeline.zip\");\r\n\r\n                // Save Trained Model\r\n                mlContext.Model.Save(trainedModel, transformedData.Schema, \"model11.zip\");\r\n                //Console.WriteLine(\"保存完成\");\r\n\r\n                // Define data preparation and trained model schemas\r\n                DataViewSchema dataPrepPipelineSchema, modelSchema;\r\n\r\n                // Load data preparation pipeline and trained model\r\n                ITransformer dataPrepPipeline = mlContext.Model.Load(\"data_preparation_pipeline.zip\", out dataPrepPipelineSchema);\r\n                ITransformer predictionPipeline = mlContext.Model.Load(\"model11.zip\", out modelSchema);\r\n\r\n                // Create PredictionEngines\r\n                PredictionEngine<HousingData, HousingPrediction> predictionEngine = mlContext.Model.CreatePredictionEngine<HousingData, HousingPrediction>(predictionPipeline);\r\n                // Input Data\r\n                HousingData inputData = new HousingData\r\n                {\r\n                    Size = 900f,\r\n                    HistoricalPrices = new float[] { 155000f, 190000f, 220000f }\r\n                };\r\n\r\n                // Get Prediction\r\n                HousingPrediction prediction = predictionEngine.Predict(inputData);\r\n                Console.WriteLine($\"Size={inputData.Size} and HistoricalPrices= {inputData.HistoricalPrices} Predict-> PredictedPrice={prediction.PredictedPrice}\");\r\n            }\r\n\r\n\r\n\r\n            while (true)\r\n            {\r\n                Console.Write(\"按任意键退出！\");\r\n                Console.ReadKey();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n-error log:ML.NET Features column 'Feature' not found\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3935","RelatedDescription":"Closed issue \"ML.NET Features column 'Feature' not found 如何将预训数据模型 转化为 预测数据模型\" (#3935)"},{"Id":"462992630","IsPullRequest":true,"CreatedAt":"2019-07-02T02:44:35","Actor":"RadicalRayan","Number":"3947","RawContent":null,"Title":"Reformatting Test, Projection and TimeSeries of Transform to Width 85","State":"open","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3947","RelatedDescription":"Open PR \"Reformatting Test, Projection and TimeSeries of Transform to Width 85\" (#3947)"},{"Id":"462988564","IsPullRequest":true,"CreatedAt":"2019-07-02T02:25:39","Actor":"sierralee51","Number":"3946","RawContent":null,"Title":"Reformatting BinaryClassification samples to width 85","State":"open","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3946","RelatedDescription":"Open PR \"Reformatting BinaryClassification samples to width 85\" (#3946)"},{"Id":"462971092","IsPullRequest":true,"CreatedAt":"2019-07-02T01:07:12","Actor":"codemzs","Number":"3945","RawContent":null,"Title":"Rename forecasting API argument to a better name.","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3945","RelatedDescription":"Closed or merged PR \"Rename forecasting API argument to a better name.\" (#3945)"},{"Id":"461800555","IsPullRequest":true,"CreatedAt":"2019-07-02T00:13:10","Actor":"sayanshaw24","Number":"3930","RawContent":null,"Title":"Reformatted Ranking samples to width 85","State":"closed","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\n\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3930","RelatedDescription":"Closed or merged PR \"Reformatted Ranking samples to width 85\" (#3930)"},{"Id":"462951609","IsPullRequest":true,"CreatedAt":"2019-07-01T23:36:17","Actor":"codemzs","Number":"3944","RawContent":null,"Title":"Fix typo in time series forecasting API.","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3944","RelatedDescription":"Closed or merged PR \"Fix typo in time series forecasting API.\" (#3944)"},{"Id":"462943876","IsPullRequest":true,"CreatedAt":"2019-07-01T22:47:29","Actor":"RadicalRayan","Number":"3943","RawContent":null,"Title":"Reformatting Conversion, FeatureSelection and Image Analytics of Transform to Width 85","State":"open","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3943","RelatedDescription":"Open PR \"Reformatting Conversion, FeatureSelection and Image Analytics of Transform to Width 85\" (#3943)"},{"Id":"462685942","IsPullRequest":true,"CreatedAt":"2019-07-01T22:43:54","Actor":"codemzs","Number":"3936","RawContent":null,"Title":"Internalize tensorflow API and sanity check APIs from Microsoft.ML.Tensorflow nuget","State":"closed","Body":"fixes #3863\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3936","RelatedDescription":"Closed or merged PR \"Internalize tensorflow API and sanity check APIs from Microsoft.ML.Tensorflow nuget\" (#3936)"},{"Id":"462901961","IsPullRequest":true,"CreatedAt":"2019-07-01T20:41:03","Actor":"sierralee51","Number":"3942","RawContent":null,"Title":"Reformatting MulticlassClassification samples to width 85","State":"open","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478\r\n*There are a couple exceptions to the 85 char. limit that have been approved by Natalie","Url":"https://github.com/dotnet/machinelearning/pull/3942","RelatedDescription":"Open PR \"Reformatting MulticlassClassification samples to width 85\" (#3942)"},{"Id":"461639932","IsPullRequest":true,"CreatedAt":"2019-07-01T20:03:16","Actor":"RadicalRayan","Number":"3925","RawContent":null,"Title":"LightGBM Unbalanced Data Argument [Issue #3688 Fix]","State":"closed","Body":"Fix for issue #3688. LightGBM Multiclass Trainer can now accept unbalanced data parameter as was previously possible in the Binary Trainer. An additional argument was added to the LightGBMBinaryEstimator test.","Url":"https://github.com/dotnet/machinelearning/pull/3925","RelatedDescription":"Closed or merged PR \"LightGBM Unbalanced Data Argument [Issue #3688 Fix]\" (#3925)"},{"Id":"462874548","IsPullRequest":true,"CreatedAt":"2019-07-01T19:31:25","Actor":"sayanshaw24","Number":"3941","RawContent":null,"Title":"Reformatted Recommendation samples to width 85","State":"open","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3941","RelatedDescription":"Open PR \"Reformatted Recommendation samples to width 85\" (#3941)"},{"Id":"462842449","IsPullRequest":true,"CreatedAt":"2019-07-01T19:31:10","Actor":"sayanshaw24","Number":"3939","RawContent":null,"Title":"Reformatted Recommendation samples to width 85","State":"closed","Body":"Guidelines followed:\r\n\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\n\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3939","RelatedDescription":"Closed or merged PR \"Reformatted Recommendation samples to width 85\" (#3939)"},{"Id":"462853710","IsPullRequest":true,"CreatedAt":"2019-07-01T18:37:15","Actor":"pkumar07","Number":"3940","RawContent":null,"Title":"Add AVX and FMA intrinsics in Factorization Machine","State":"open","Body":"Added AVX and FMA C# intrinsics in Microsoft.ML.StandardTrainers for Factorization Machine algorithm  which currently implements C++ SSE code as suggested in #3000 and #3785\r\n\r\n@wschin @eerhardt ","Url":"https://github.com/dotnet/machinelearning/pull/3940","RelatedDescription":"Open PR \"Add AVX and FMA intrinsics in Factorization Machine\" (#3940)"},{"Id":"462836656","IsPullRequest":false,"CreatedAt":"2019-07-01T17:52:39","Actor":"cookt","Number":"3938","RawContent":null,"Title":"MathJax Formatting in Section Scoring Function","State":"open","Body":"The details on the scoring function for this trainer are unreadable as it appear the mathjax is not escaped properly\n\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 67778f5f-ee9e-25b6-c869-fc6e6d24453b\n* Version Independent ID: 53f718e9-ebcc-70ea-29af-1f626700c6e1\n* Content: [SdcaMaximumEntropyMulticlassTrainer Class (Microsoft.ML.Trainers)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.sdcamaximumentropymulticlasstrainer?view=ml-dotnet#feedback)\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers/SdcaMaximumEntropyMulticlassTrainer.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers/SdcaMaximumEntropyMulticlassTrainer.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3938","RelatedDescription":"Open issue \"MathJax Formatting in Section Scoring Function\" (#3938)"},{"Id":"462716808","IsPullRequest":true,"CreatedAt":"2019-07-01T13:33:59","Actor":"sayanshaw24","Number":"3937","RawContent":null,"Title":"Reformatted Recommendation samples to width 85","State":"closed","Body":"Guidelines followed:\r\n\r\n85 characters per line\r\nUse 4 spaces for indentation\r\nDot, open parentheses, and function/variable name on same line\r\nMath operations on same line\r\nDon't indent comments\r\nDon't break links\r\nDon't break a comment if it represents a print output\r\nAdd an extra line after a break if it does not already exist\r\nBreak before \"$\"\r\nFix for Issue #3478","Url":"https://github.com/dotnet/machinelearning/pull/3937","RelatedDescription":"Closed or merged PR \"Reformatted Recommendation samples to width 85\" (#3937)"},{"Id":"462389276","IsPullRequest":false,"CreatedAt":"2019-06-30T10:11:31","Actor":"Lelelo1","Number":"3934","RawContent":null,"Title":"Requisites of the data set used in recommendation task with matrixfactorization trainer?","State":"open","Body":"I have a question regarding the data used in recommendation task with matrixfactorization.\r\nHere the data used in the examples consists of `userId` and `productId`.\r\n\r\nCan I use recommendation task when the users in my data all have purchased 1 unique product each - so they are mapped `1 - 1`, `2 - 2`, `3 - 3` - (userId - productId)? Or do it have to be mapped differently - like in the examples where one user might have bought the same product as someone else? And one user have bought N products: `1 - 2`, `2 - 2` ,`3 - (3, 1, 4, 5, 1)` (user 1  bought product 2 which also user 2 bought. user 4 bought 5 products in total)?\r\n\r\nWill I get unreliable and unusefull recommendation score with my original data setup?","Url":"https://github.com/dotnet/machinelearning/issues/3934","RelatedDescription":"Open issue \"Requisites of the data set used in recommendation task with matrixfactorization trainer?\" (#3934)"},{"Id":"461631919","IsPullRequest":true,"CreatedAt":"2019-06-29T03:53:14","Actor":"sayanshaw24","Number":"3922","RawContent":null,"Title":"Reformatting TensorFlow and AnomalyDetection samples to width 85","State":"closed","Body":"Guidelines followed:\r\n- 85 characters per line\r\n- Use 4 spaces for indentation\r\n- Dot, open parentheses, and function/variable name on same line\r\n- Math operations on same line\r\n- Don't indent comments\r\n- Don't break links\r\n- Don't break a comment if it represents a print output\r\n- Add an extra line after a break if it does not already exist\r\n- Break before \"$\"\r\n\r\nFix for Issue #3478 ","Url":"https://github.com/dotnet/machinelearning/pull/3922","RelatedDescription":"Closed or merged PR \"Reformatting TensorFlow and AnomalyDetection samples to width 85\" (#3922)"},{"Id":"461631920","IsPullRequest":true,"CreatedAt":"2019-06-28T22:52:17","Actor":"sierralee51","Number":"3923","RawContent":null,"Title":"Reformatting ModelOperations and DataOperations samples to width 85","State":"closed","Body":"Guidelines followed:\r\n-85 characters per line\r\n-Use 4 spaces for indentation\r\n-Dot and open parentheses stay on same line as function\r\n-If not a preexisting line under line that we break, add an extra line after it\r\n-Don't indent comments\r\n-Don't break a comment if it represents output\r\n-Don't break links\r\n-If applicable, break right before $\r\n-Keep math op together\r\n\r\nFix for issue #3478 ","Url":"https://github.com/dotnet/machinelearning/pull/3923","RelatedDescription":"Closed or merged PR \"Reformatting ModelOperations and DataOperations samples to width 85\" (#3923)"},{"Id":"462171983","IsPullRequest":false,"CreatedAt":"2019-06-28T19:11:47","Actor":"rtanase","Number":"3933","RawContent":null,"Title":"OneVsAllClassifier fits two trainers for binary classification task","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n- **What happened?**\r\n- **What did you expect?**\r\nI expected OneVsAll to identify there are only two classes and train a single learner.\r\n\r\n### Source code / logs\r\n\r\nInternally the OneVersusAllTrainer will always instantiate as many binary classifiers as the number of classes. This is inefficient for binary classification, as just a single trainer is needed. I understand that I can just use an out of the box binary classification for this, but it will simplify the usage.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3933","RelatedDescription":"Open issue \"OneVsAllClassifier fits two trainers for binary classification task\" (#3933)"},{"Id":"461887867","IsPullRequest":false,"CreatedAt":"2019-06-28T06:57:19","Actor":"i-newton","Number":"3932","RawContent":null,"Title":"cannot use fasterrcnn onnx model in c# ap","State":"open","Body":"steps:\r\ndownload https://github.com/onnx/models/tree/master/faster_rcnn\r\ntry to run model in .net\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Microsoft.ML;\r\nusing AlexNet.DataStructures;\r\nusing Microsoft.ML.Transforms.Image;\r\n\r\nnamespace SomeNet\r\n{\r\n    public class ImageClassifier\r\n    {\r\n        private readonly string dataLocation;\r\n        private readonly string labelsLocation;\r\n        private readonly string imagesLocation;\r\n        private readonly string modelLocation;\r\n        private readonly MLContext mLContext;\r\n\r\n        public ImageClassifier(string dataLocation, string imagesLocation, string labelsLocation, string modelLocation)\r\n        {\r\n            this.dataLocation = dataLocation;\r\n            this.labelsLocation = labelsLocation;\r\n            this.imagesLocation = imagesLocation;\r\n            this.modelLocation = modelLocation;\r\n            mLContext = new MLContext();\r\n        }\r\n\r\n        public struct ImageSettings\r\n        {\r\n            public const int imageHeight = 224;\r\n            public const int imageWidth = 224;\r\n        }\r\n\r\n        public struct OnnxModelSettings\r\n        {\r\n            public const string ModelInput = \"image\";\r\n        }\r\n\r\n        public void Score()\r\n        {\r\n            var model = LoadModel(dataLocation, imagesLocation, modelLocation);\r\n\r\n            var predictions = PredictData(dataLocation, imagesLocation, labelsLocation, model).ToArray(); \r\n        }\r\n\r\n        private PredictionEngine<ImageData, ImagePrediction> LoadModel(string dataLocation, string imagesLocation, string modelLocation)\r\n        {\r\n            var data = mLContext.Data.LoadFromTextFile<ImageData>(dataLocation, hasHeader: false);\r\n\r\n            var pipeline = mLContext.Transforms.LoadImages(outputColumnName: \"loadedimage\", imageFolder: imagesLocation, inputColumnName: nameof(ImageData.ImagePath))\r\n                .Append(mLContext.Transforms.ResizeImages(outputColumnName: \"resizedimage\",inputColumnName:\"loadedimage\", imageWidth: ImageSettings.imageWidth, imageHeight: ImageSettings.imageHeight))\r\n                .Append(mLContext.Transforms.ExtractPixels(outputColumnName: \"image\", inputColumnName:\"resizedimage\", orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder.ABGR))\r\n                .Append(mLContext.Transforms.ApplyOnnxModel(modelFile: modelLocation, outputColumnNames: new[] { \"6379\", \"6381\", \"6383\" }, inputColumnNames: new[] { \"image\"}));\r\n            var model = pipeline.Fit(data);\r\n\r\n            var predictionEngine = mLContext.Model.CreatePredictionEngine<ImageData, ImagePrediction>(model, ignoreMissingColumns:false);\r\n\r\n            return predictionEngine;\r\n        }\r\n\r\n        protected IEnumerable<ImageData> PredictData(string imageLocation, string imageFolder, string labelsLocation, PredictionEngine<ImageData, ImagePrediction> model)\r\n        {\r\n            var labels = labelsLocation;\r\n            var p = model.Predict(new ImageData{\r\n                ImagePath = \"/home/snake/aspose/anton.perhunov/AlexNet/AlexNet/assets/Data/html.jpg\"\r\n            });\r\n            var im =  new ImageData{\r\n                ImagePath = imageFolder + \"/e5725c32f8be4da8b6a27375fc7669ae_html.jpg\"\r\n            };\r\n            yield return im;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nwhen inference any image you will get\r\nUnhandled Exception: System.ArgumentException: Length of memory (150528) must match product of dimensions (3).\r\nat System.Numerics.Tensors.DenseTensor1..ctor(Memory1 memory, ReadOnlySpan1 dimensions, Boolean reverseStride) at Microsoft.ML.Transforms.Onnx.OnnxUtils.CreateNamedOnnxValue[T](String name, ReadOnlySpan1 data, List1 shape) at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.NamedOnnxValueGetterVec1.GetNamedOnnxValue()\r\nat Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.UpdateCacheIfNeeded(Int64 position, INamedOnnxValueGetter[] srcNamedOnnxValueGetters, String[] activeOutputColNames, OutputCache outputCache)\r\nat Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.<>c__DisplayClass13_01.<MakeGetter>b__0(VBuffer1& dst)\r\nat Microsoft.ML.Data.TypedCursorable1.TypedRowBase.<>c__DisplayClass8_01.b__0(TRow row)\r\nat Microsoft.ML.Data.TypedCursorable1.TypedRowBase.FillValues(TRow row) at Microsoft.ML.PredictionEngineBase2.Predict(TSrc example)\r\n\r\nit seems that .net api does not support dynamic input sizes(-1 in dimension), it just treat them as 1, model supports inputs with (3, -1,-1), however onnx value size become (3,1,1).","Url":"https://github.com/dotnet/machinelearning/issues/3932","RelatedDescription":"Open issue \"cannot use fasterrcnn onnx model in c# ap\" (#3932)"},{"Id":"461821356","IsPullRequest":false,"CreatedAt":"2019-06-28T02:39:16","Actor":"magicdict","Number":"3931","RawContent":null,"Title":"An unhandled exception of type 'System.InvalidOperationException' occurred in Microsoft.ML.Data.dll: 'Incompatible features column type: 'Vector<Single, 12>' vs 'Vector<Single, 13>''","State":"closed","Body":"Training And Save isOK\r\n```csharp\r\npublic static void BinaryClassify(List<TrainRecord> training_dataset,\r\n                                      string labelColumnName = nameof(TrainRecord.rebuy_same_item))\r\n    {\r\n        var mlContext = new MLContext(seed: 2019);\r\n        var trainingDataView = mlContext.Data.LoadFromEnumerable<TrainRecord>(training_dataset);\r\n        //特征项目\r\n        var CreateFeature = mlContext.Transforms.Concatenate(\"Features\", nameof(TrainRecord.featur_rebuy_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_store_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_cate_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_price_mean),\r\n                                                                               nameof(TrainRecord.featur_price_sdv),\r\n                                                                               nameof(TrainRecord.featur_price_var),\r\n\r\n                                                                               nameof(TrainRecord.featur_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_cate_cnt),\r\n                                                                               nameof(TrainRecord.featur_store_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_cate_share),\r\n                                                                               nameof(TrainRecord.featur_cate_share_country),\r\n\r\n                                                                               \"feature_country_id\"\r\n                                                                               );\r\n        var dataProcessPipeline = mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"feature_country_id\", inputColumnName: nameof(TrainRecord.buyer_country_id)).Append(CreateFeature);\r\n\r\n        var DataTransformer = dataProcessPipeline.Fit(trainingDataView);\r\n        trainingDataView = DataTransformer.Transform(trainingDataView);\r\n\r\n        DataOperationsCatalog.TrainTestData dataSplit = mlContext.Data.TrainTestSplit(trainingDataView, testFraction: 0.2);\r\n        IDataView trainData = dataSplit.TrainSet;\r\n        IDataView testData = dataSplit.TestSet;\r\n        var LightGBMEstimator = mlContext.BinaryClassification.Trainers.LightGbm(numberOfIterations: 2000,\r\n                                                                                 learningRate: 0.1,\r\n                                                                                 labelColumnName: labelColumnName);\r\n        Console.WriteLine();\r\n        Console.WriteLine(\"开始训练 - \" + labelColumnName + \"（LightGBM二元分类） learningRate:\" + 0.1 + \" numberOfIterations:\" + 2000);\r\n        var LightGBMTransformer = LightGBMEstimator.Fit(trainData);\r\n        testData = LightGBMTransformer.Transform(testData);\r\n        var metrics = mlContext.BinaryClassification.Evaluate(testData, labelColumnName: labelColumnName);\r\n        ConsoleHelper.PrintBinaryClassificationMetrics(\"Database Example\", metrics);\r\n        mlContext.Model.Save(LightGBMTransformer, trainData.Schema, ModelPath + labelColumnName + \".zip\");\r\n        Console.WriteLine(\"模型保存路径:\" + ModelPath + labelColumnName + \".zip\");\r\n        Console.WriteLine(\"结束训练:Accuracy \" + metrics.Accuracy);\r\n        Console.WriteLine();\r\n    }\r\n```\r\n\r\nBut ,when I load the model, exception happened：\r\n\r\n```csharp\r\npublic static void Predict(List<TrainRecord> test_dataset, string labelColumnName = nameof(TrainRecord.rebuy_same_item))\r\n    {\r\n        var mlContext = new MLContext(seed: 2019);\r\n        DataViewSchema Schema;\r\n        var LightGBMTransformer = mlContext.Model.Load(ModelPath + labelColumnName + \".zip\", out Schema);\r\n        var trainingDataView = mlContext.Data.LoadFromEnumerable<TrainRecord>(test_dataset);\r\n\r\n        //特征项目\r\n        var CreateFeature = mlContext.Transforms.Concatenate(\"Features\", nameof(TrainRecord.featur_rebuy_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_store_cnt),\r\n                                                                               nameof(TrainRecord.featur_rebuy_cate_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_price_mean),\r\n                                                                               nameof(TrainRecord.featur_price_sdv),\r\n                                                                               nameof(TrainRecord.featur_price_var),\r\n\r\n                                                                               nameof(TrainRecord.featur_item_cnt),\r\n                                                                               nameof(TrainRecord.featur_cate_cnt),\r\n                                                                               nameof(TrainRecord.featur_store_cnt),\r\n\r\n                                                                               nameof(TrainRecord.featur_cate_share),\r\n                                                                               nameof(TrainRecord.featur_cate_share_country),\r\n\r\n                                                                               \"feature_country_id\"\r\n                                                                               );\r\n\r\n        //OneHotEncoding 字段如果直接转的话，在做整体CreateEnumerable的时候会发生错误！！\r\n        var dataProcessPipeline = mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"feature_country_id\", inputColumnName: nameof(TrainRecord.buyer_country_id)).Append(CreateFeature);\r\n        var DataTransformer = dataProcessPipeline.Fit(trainingDataView);\r\n        trainingDataView = DataTransformer.Transform(trainingDataView);\r\n\r\n        var predictions = LightGBMTransformer.Transform(trainingDataView);\r\n        IEnumerable<BuyerPrediction> predictedResults = mlContext.Data.CreateEnumerable<BuyerPrediction>(predictions, reuseRowObject: false);\r\n        foreach (var item in predictedResults)\r\n        {\r\n            Console.WriteLine(item.buyer_admin_id + \",\" + item.Prediction + \",\" + item.Probability);\r\n        }\r\n    }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3931","RelatedDescription":"Closed issue \"An unhandled exception of type 'System.InvalidOperationException' occurred in Microsoft.ML.Data.dll: 'Incompatible features column type: 'Vector<Single, 12>' vs 'Vector<Single, 13>''\" (#3931)"},{"Id":"461783729","IsPullRequest":true,"CreatedAt":"2019-06-27T22:58:04","Actor":"harishsk","Number":"3929","RawContent":null,"Title":"Updated the redistributed version of Tensorflow to 1.14","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3929","RelatedDescription":"Open PR \"Updated the redistributed version of Tensorflow to 1.14\" (#3929)"},{"Id":"461693221","IsPullRequest":true,"CreatedAt":"2019-06-27T18:47:43","Actor":"michaelgsharp","Number":"3928","RawContent":null,"Title":"OneVersusAllModelParameters Strongly Typed","State":"open","Body":"Fixes #2467\r\n\r\nWe used to remove all Type information when we constructed our `OneVersusAllModelParameters`. This prevented the users from access the inner model without run-time casting.\r\n\r\nThis PR makes the `OneVersusAllModelParameters` strongly typed, as well as the `OneVersusAllTrainer` and the `LightGbmMultiClassTrainer` as they use the `OneVersusAllModelParameters`. This change is a _**breaking**_ change to the current public api. The `LightGbmMultiClassTrainer` model is typed to be `FeatureWeightsCalibratedModelParameters<LightGbmBinaryModelParameters, PlattCalibrator>` as that is what it is hard coded to return on line 190. The `OneVersusAllTrainer` determines the type automatically if you `OneVersusAll` method in the `StandardTrainersCatalog`.\r\n\r\nAs part of this change, the `OneVersusAllTrainer` will no longer auto calibrate the model and you must pass in the model already calibrated if you want it to be calibrated. \r\n\r\nDISCUSSION POINT - Currently the `useProbabilities` flag is still allowed. You must set it to false with a non-calibrated trainer or an error will be thrown. If your trainer is calibrated, you can pass either `true` or `false` and it will either use raw values or calibrated ones accordingly. Do we still want to allow this? Or would it be better to remove the `useProbabilities` flag and have non-calibrated trainers always return  raw results and have calibrated trainers always return calibrated results? This would simplify the call and prevent errors where you forget to set `useProbabilities` to false with a non-calibrated trainer, but would also prevent you from getting raw results from a calibrated trainer.\r\n\r\nSince the `OneVersusAllTrainer` no longer auto calibrates the trainer, the testing files we use for comparison were also updated to reflect that.\r\n\r\nSome calibrators where changed from `internal` scope to `public` scope as we now return them as a type for the user to use.\r\n\r\nThe test for this is just adding a line in the existing `LightGbmMulticlassEstimatorCorrectSigmoid` test showing that casting is not needed to access the internal model.","Url":"https://github.com/dotnet/machinelearning/pull/3928","RelatedDescription":"Open PR \"OneVersusAllModelParameters Strongly Typed\" (#3928)"},{"Id":"461648715","IsPullRequest":false,"CreatedAt":"2019-06-27T17:12:11","Actor":"natke","Number":"3927","RawContent":null,"Title":"Distinguish between Calibrated and NonCalibrated methods","State":"open","Body":"When would I use one versus the other?\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: b147624e-e01f-679a-900c-37f48f9d9e15\n* Version Independent ID: 55d26134-c3a9-3a4f-5833-2f9b1dc8e0b1\n* Content: [BinaryClassificationCatalog.CrossValidateNonCalibrated(IDataView, IEstimator&lt;ITransformer&gt;, Int32, String, String, Nullable&lt;Int32&gt;) Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.binaryclassificationcatalog.crossvalidatenoncalibrated?view=ml-dotnet#feedback)\n* Content Source: [dotnet/xml/Microsoft.ML/BinaryClassificationCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/BinaryClassificationCatalog.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3927","RelatedDescription":"Open issue \"Distinguish between Calibrated and NonCalibrated methods\" (#3927)"},{"Id":"461647190","IsPullRequest":false,"CreatedAt":"2019-06-27T17:08:50","Actor":"eerhardt","Number":"3926","RawContent":null,"Title":"Move official build yaml from phases to jobs","State":"open","Body":"We need to make the same change as #3908 to the official build yaml file:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/master/build/vsts-ci.yml\r\n\r\n\"phases\" in AzDO yaml files are the old schema. We should be using \"jobs\", which is the \"new\" schema.\r\n\r\nSee https://github.com/dotnet/arcade/blob/master/Documentation/AzureDevOps/PhaseToJobSchemaChange.md for more info.","Url":"https://github.com/dotnet/machinelearning/issues/3926","RelatedDescription":"Open issue \"Move official build yaml from phases to jobs\" (#3926)"},{"Id":"461522572","IsPullRequest":false,"CreatedAt":"2019-06-27T14:50:15","Actor":"CyberFranck","Number":"3921","RawContent":null,"Title":"Exception has been thrown by the target of an invocation on loading saved model","State":"closed","Body":"When loading a saved model it throw the exception `Exception has been thrown by the target of an invocation` on the `Load` method. This method is simply wrapped into a separated library so it's easy to move around. Depending on the project i use it, it either works all the time with no exception, or never works. Here my current testing code :\r\n\r\n   ```\r\npublic void TestLoadSolver(Stream solverStream)\r\n{\r\n    // create context\r\n    var context = new MLContext();\r\n\r\n    // temp schema\r\n    DataViewSchema sch;\r\n\r\n    try\r\n    {\r\n        // load context,schema and transformation\r\n        var transformer = context.Model.Load(solverStream, out sch);\r\n\r\n        // store schema\r\n        var schema = sch;\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n\r\n    }\r\n}\r\n```\r\n\r\nThe stream is simply a read from the zip file on the disk.\r\nThe error happen on the line `var transformer = context.Model.Load(solverStream, out sch);`\r\nAll projects are on .Net 4.8, 64 bits debug, using NuGet for packages which are the same as the DLL that has this code uses. The DLL are all the same in the bin folders and i verified for the bug with Lightgbm that doesn't copy and the DLL and EXE are there is all projects.\r\n\r\nWhat could be the cause of failure but only in some project.","Url":"https://github.com/dotnet/machinelearning/issues/3921","RelatedDescription":"Closed issue \"Exception has been thrown by the target of an invocation on loading saved model\" (#3921)"},{"Id":"461521839","IsPullRequest":false,"CreatedAt":"2019-06-27T13:13:09","Actor":"ImGere","Number":"3920","RawContent":null,"Title":"Stuck on evaluate","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: ML.NET 1.1.0 \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nCreated ML model with Model Builder, given 1000 seconds, it was able to evaluate 2 models and returned the best one.\r\nAfterwards I tried to rerun the modelbuilder class to recreate the model.\r\nThe csv from where I take the data is around 8 MB, with 70k rows\r\n- **What happened?**\r\nIt has been stuck on Evaluate for so long, ~48 mins~. EDIT: now 82 mins.\r\n- **What did you expect?**\r\nHave some feedback on the evaluation process or create the new model.\r\n\r\nMy suggestion is to have some logs on the screen while it is evaluating.\r\n### Source code / logs\r\n![Proof](https://user-images.githubusercontent.com/20186579/60268902-c4ec4380-98ed-11e9-9ab5-910ee5583629.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3920","RelatedDescription":"Open issue \"Stuck on evaluate\" (#3920)"},{"Id":"461400663","IsPullRequest":false,"CreatedAt":"2019-06-27T08:50:18","Actor":"JomanjiPT","Number":"3919","RawContent":null,"Title":"DLLNotFoundException (32/64 bits problem with the DLL probably)","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: windows 10 (64 bits) and windows server 2012 R2 (64 bits)\r\n- **.NET Version (eg., dotnet --info)**: .Net Framework 4.7.2\r\n\r\n### Issue\r\n\r\n- **What did you do?** I copied the project from my computer (windows 10) to a server (windows server 2012 R2) and I started to have problems with \"DLLNotFoundException\".\r\n\r\n- **What happened?** When I copy the project from my computer ( ...\\Desktop\\ICN) to the server, the path of the project became \"\\\\nameOfServer\\...\\ICN\" (the Network Path) and when I debug, on my computer (windows 10), that same project I get \"DLLNotFoundException\".\r\n\r\n- **What did you expect?** I expected to run on the two computers equaly.\r\n\r\n### Source code / logs\r\n\r\nAs a side note, my solution has 3 projects: \"DataCollection\", \"RS_WebApp\" (where is the method that uses ML.NET) and \"NetworkGraph\".\r\n\r\nImage of the problem:\r\nhttps://imgur.com/a/SMBmPPW (first image)\r\n\r\nMy projects it's on \"Any CPU\" when I debug and with the project, ASP.NET Web Application (.NET Framework), \"RS_WebApp\" on 64 bits that ML.NET requires and the other 2 projects on \"Any CPU\".\r\n\r\nhttps://imgur.com/a/SMBmPPW (second image)\r\n\r\nI am using the \"mlContext.Recommendation().Trainers.MatrixFactorization(options)\" and when I build the application it generates the \"MatrixFactorizationNative.dll\" on \"\\ICN\\RS_WebApp\\bin\".\r\n\r\nThe only way that I put to work fine, when debug, was putting this dll on the \"C:\\Windows\\SysWOW64\" (in my computer) (ML.NET requires 64 bits) but the problem is that it doesn't work when it's the server calling that method because it doesn't have that file in its folder \"C:\\Windows\\SysWOW64\" (or similar to that in windows server) and I can't put that file in the server.\r\n\r\nI already tried to put the dll on the project with \"Copy to Output Directory: Copy if newer\" and it didn't work.\r\n\r\nhttps://imgur.com/a/SMBmPPW (third image)\r\n\r\nI also put manually the dll on \"\\ICN\\RS_WebApp\\bin\\x64\" and it didn't work.\r\n\r\nI also tried to \"Add Reference\" on the project (that have the web service with the web method that calls ML.NET \"RS_WebApp\") the dll but this error happen.\r\n\r\nhttps://imgur.com/a/SMBmPPW (fourth image)\r\n\r\n**I don't know what folder I can put the dll on, to correctly load that dll.**\r\n\r\nMy thoughts on this are the following:\r\n- something related with debugging a solution with 1 project 64 bits and 2 projects 32 bits, and it \"misses\" where was the dll for the 64 bits project.\r\n- ML.NET (web API) can have some problem with files in a computer and running on other.\r\n\r\nIf you need more information, feel free to ask, and a huge thanks if someone can address this problem.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3919","RelatedDescription":"Open issue \"DLLNotFoundException (32/64 bits problem with the DLL probably)\" (#3919)"},{"Id":"461358533","IsPullRequest":true,"CreatedAt":"2019-06-27T07:16:03","Actor":"justinormont","Number":"3918","RawContent":null,"Title":"[AutoML] Sweep Trimming of Whitespace in AutoML","State":"open","Body":"Fixes https://github.com/dotnet/machinelearning/issues/3917:\r\n> We should iterate over the options for TrimWhitespace in the TextLoader.\r\n> \r\n> As diagnosed by @daholste, the MSLR-WEB10K dataset ([train](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KTrain720kRows.tsv), [validate](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KValidate240kRows.tsv), [test](https://aka.ms/mlnet-resources/benchmarks/MSLRWeb10KTest240kRows.tsv), [zip](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/MSLR-WEB10K.zip), [README](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/README.md), [LICENSE](https://express-tlcresources.azureedge.net/datasets/MSLR-WEB10K/LICENSE.md)) has an extra tab at the end of each data row, though not the header row. \r\n> \r\n> This causes the AutoML TextLoader to fail w/ the following error: \r\n> ```\r\n> An Error occured during inferring columns\r\n> Unable to split the file provided into multiple, consistent columns.\r\n> Please see the log file for more info.\r\n> Exiting ...\r\n> ```\r\n> \r\n> Work:\r\n> * Have AutoML sweep over the [TrimWhitespace](https://github.com/dotnet/machinelearning/blob/429f8cc7764769fcf8c7f3668cc0a27619ec9531/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoader.cs#L1449) option\r\n> * Fix above error message -- spelling of \"occured\"","Url":"https://github.com/dotnet/machinelearning/pull/3918","RelatedDescription":"Open PR \"[AutoML] Sweep Trimming of Whitespace in AutoML\" (#3918)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-02T05:30:39.0424275Z","RunDurationInMilliseconds":1014}