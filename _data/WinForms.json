{"Data":{"GitHub":{"Issues":[{"Id":"430113090","IsPullRequest":true,"CreatedAt":"2019-04-07T07:11:13","Actor":"hughbe","Number":"700","RawContent":null,"Title":" Cleanup ScrollBar/ScrollProperties","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/700","RelatedDescription":"Open PR \" Cleanup ScrollBar/ScrollProperties\" (#700)"},{"Id":"430084348","IsPullRequest":true,"CreatedAt":"2019-04-06T22:46:25","Actor":"hughbe","Number":"699","RawContent":null,"Title":"Cleanup MenuItem and add param names","State":"open","Body":"All this is already tested","Url":"https://github.com/dotnet/winforms/pull/699","RelatedDescription":"Open PR \"Cleanup MenuItem and add param names\" (#699)"},{"Id":"430080974","IsPullRequest":false,"CreatedAt":"2019-04-06T21:57:47","Actor":"hughbe","Number":"698","RawContent":null,"Title":"There are now 3 copies of NativeMethods in winforms","State":"open","Body":"These should be able to be consolidated. I'll give this a punt when my outstanding PRs are merged","Url":"https://github.com/dotnet/winforms/issues/698","RelatedDescription":"Open issue \"There are now 3 copies of NativeMethods in winforms\" (#698)"},{"Id":"430080585","IsPullRequest":true,"CreatedAt":"2019-04-06T21:52:30","Actor":"hughbe","Number":"697","RawContent":null,"Title":"Fix buffer size passed to GetClipboardFormatName in DataFormats","State":"open","Body":"Previously, the maximum buffer size for `GetClipboardFormatName` was 128, but now it is 256. This means that we'd chop off up to half of the string when retrieving strings longer than 128. Fix this by updating the buffer size\r\n\r\nAlso cleanup the code and add complete test coverage\r\n\r\nFixes #696","Url":"https://github.com/dotnet/winforms/pull/697","RelatedDescription":"Open PR \"Fix buffer size passed to GetClipboardFormatName in DataFormats\" (#697)"},{"Id":"430080570","IsPullRequest":false,"CreatedAt":"2019-04-06T21:52:17","Actor":"hughbe","Number":"696","RawContent":null,"Title":"Buffer size passed to GetClipboardFormatName is too small for newer platforms","State":"open","Body":"Affects the following example:\r\n```cs\r\nint formatId = RegisterClipboardFormat(new string('a', 255);\r\nDataFormats.Format format = DataFormats.GetFormat(formatId);\r\nConsole.WriteLine(format.Name);\r\n```\r\n\r\nIt prints out a 127 long string rather than the original 255 length","Url":"https://github.com/dotnet/winforms/issues/696","RelatedDescription":"Open issue \"Buffer size passed to GetClipboardFormatName is too small for newer platforms\" (#696)"},{"Id":"430048107","IsPullRequest":true,"CreatedAt":"2019-04-06T15:59:12","Actor":"hughbe","Number":"695","RawContent":null,"Title":"Cleanup Form.IsRestrictedWindow","State":"open","Body":"`Form.IsRestrictedWindow` is always false in .NET Core because .NET Core doesn't implement permissions/CAS","Url":"https://github.com/dotnet/winforms/pull/695","RelatedDescription":"Open PR \"Cleanup Form.IsRestrictedWindow\" (#695)"},{"Id":"430046185","IsPullRequest":true,"CreatedAt":"2019-04-06T15:41:34","Actor":"dotnet-maestro[bot]","Number":"694","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190406.2\r\n- **Date Produced**: 4/6/2019 3:41 PM\r\n- **Commit**: 1cba37dd1138040f40165e65998e5e4c2eac5eb5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Windows.Extensions** -> 4.6.0-preview4.19206.2\r\n  - **System.CodeDom** -> 4.6.0-preview4.19206.2\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview4.19206.2\r\n  - **Microsoft.Win32.SystemEvents** -> 4.6.0-preview4.19206.2\r\n  - **Microsoft.Win32.Registry** -> 4.6.0-preview4.19206.2\r\n  - **System.Security.Cryptography.Cng** -> 4.6.0-preview4.19206.2\r\n  - **System.Security.Permissions** -> 4.6.0-preview4.19206.2\r\n  - **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19206.2\r\n  - **System.Drawing.Common** -> 4.6.0-preview4.19206.2\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190407.2\r\n- **Date Produced**: 4/7/2019 10:12 PM\r\n- **Commit**: 0fda12bced7c2e09f69dd34130359753461496d9\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Windows.Extensions** -> 4.6.0-preview5.19207.2\r\n  - **System.CodeDom** -> 4.6.0-preview5.19207.2\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview5.19207.2\r\n  - **Microsoft.Win32.SystemEvents** -> 4.6.0-preview5.19207.2\r\n  - **Microsoft.Win32.Registry** -> 4.6.0-preview5.19207.2\r\n  - **System.Security.Cryptography.Cng** -> 4.6.0-preview5.19207.2\r\n  - **System.Security.Permissions** -> 4.6.0-preview5.19207.2\r\n  - **System.Configuration.ConfigurationManager** -> 4.6.0-preview5.19207.2\r\n  - **System.Drawing.Common** -> 4.6.0-preview5.19207.2\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190407.5\r\n- **Date Produced**: 4/8/2019 12:28 AM\r\n- **Commit**: c74fcf05bfec0c6bfd3a79c773e61defa6c99275\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **System.Windows.Extensions** -> 4.6.0-preview4.19207.5\r\n  - **System.CodeDom** -> 4.6.0-preview4.19207.5\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview4.19207.5\r\n  - **Microsoft.Win32.SystemEvents** -> 4.6.0-preview4.19207.5\r\n  - **Microsoft.Win32.Registry** -> 4.6.0-preview4.19207.5\r\n  - **System.Security.Cryptography.Cng** -> 4.6.0-preview4.19207.5\r\n  - **System.Security.Permissions** -> 4.6.0-preview4.19207.5\r\n  - **System.Configuration.ConfigurationManager** -> 4.6.0-preview4.19207.5\r\n  - **System.Drawing.Common** -> 4.6.0-preview4.19207.5\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/694","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#694)"},{"Id":"430042404","IsPullRequest":true,"CreatedAt":"2019-04-06T15:02:17","Actor":"hughbe","Number":"693","RawContent":null,"Title":"Remove dead code relating to unsupported platforms","State":"open","Body":"Contributes to #682","Url":"https://github.com/dotnet/winforms/pull/693","RelatedDescription":"Open PR \"Remove dead code relating to unsupported platforms\" (#693)"},{"Id":"430027216","IsPullRequest":true,"CreatedAt":"2019-04-06T12:04:15","Actor":"dotnet-maestro[bot]","Number":"692","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190405.6\r\n- **Date Produced**: 4/5/2019 11:26 PM\r\n- **Commit**: 4217db4a23ffd15abb3771d635b66162994fb9e4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19205.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19205.6\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19205.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19205.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190406.5\r\n- **Date Produced**: 4/6/2019 5:35 PM\r\n- **Commit**: 9d8abf998866f10bc19d97e1916ff1c0ada3fd42\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19206.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19206.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19206.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19206.5\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/692","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#692)"},{"Id":"430010212","IsPullRequest":true,"CreatedAt":"2019-04-06T08:06:24","Actor":"hughbe","Number":"691","RawContent":null,"Title":"Add ListControl tests","State":"open","Body":"Depends on #674\r\n\r\nFixes #690 ","Url":"https://github.com/dotnet/winforms/pull/691","RelatedDescription":"Open PR \"Add ListControl tests\" (#691)"},{"Id":"430010001","IsPullRequest":false,"CreatedAt":"2019-04-06T08:03:31","Actor":"hughbe","Number":"690","RawContent":null,"Title":"ListControl.FilterItemOnProperty(new object(), null) throws NRE should be a nop","State":"open","Body":"To match string.Empty","Url":"https://github.com/dotnet/winforms/issues/690","RelatedDescription":"Open issue \"ListControl.FilterItemOnProperty(new object(), null) throws NRE should be a nop\" (#690)"},{"Id":"429958000","IsPullRequest":false,"CreatedAt":"2019-04-05T22:31:18","Actor":"zsd4yr","Number":"689","RawContent":null,"Title":"Add Visual Basic dotnet new project template","State":"open","Body":"Should match VB project template from Framework\r\n\r\n* WinFormsApplication-VBasic\r\n  * Company.WinFormsApplication1.vbproj\r\n  * Form1.Desiger.vb\r\n  * Form1.vb\r\n  * App.config (?)\r\n  * My Project directory\r\n    * Application.Designer.vb\r\n    * Application.myapp (?)\r\n    * AssemblyInfo.vb (? pretty sure no)\r\n    * Resources.Designer.vb (?)\r\n    * Resources.resx (?)\r\n    * Settings.Designer.vb (?)\r\n    * Settings.settings (?)\r\n  * (? missing) xlf directory\r\n\r\nAnd we'll need to figure out the template.config for this\r\n","Url":"https://github.com/dotnet/winforms/issues/689","RelatedDescription":"Open issue \"Add Visual Basic dotnet new project template\" (#689)"},{"Id":"429953838","IsPullRequest":true,"CreatedAt":"2019-04-05T22:13:18","Actor":"zsd4yr","Number":"688","RawContent":null,"Title":"Make C# Project template for WinForms identical to the .NET Framework version of the corresponding template","State":"open","Body":"fixes #679\r\n\r\n/cc @vatsan-madhavan and @chabiss","Url":"https://github.com/dotnet/winforms/pull/688","RelatedDescription":"Open PR \"Make C# Project template for WinForms identical to the .NET Framework version of the corresponding template\" (#688)"},{"Id":"429866371","IsPullRequest":false,"CreatedAt":"2019-04-05T17:43:46","Actor":"Shyam-Gupta","Number":"687","RawContent":null,"Title":"Remove #defines from common files and create a new dll for them","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/687","RelatedDescription":"Open issue \"Remove #defines from common files and create a new dll for them\" (#687)"},{"Id":"429698332","IsPullRequest":true,"CreatedAt":"2019-04-05T17:17:36","Actor":"v-zbsail","Number":"683","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20190405","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/683","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20190405\" (#683)"},{"Id":"429721017","IsPullRequest":true,"CreatedAt":"2019-04-05T17:17:23","Actor":"dotnet-maestro[bot]","Number":"684","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190404.16\r\n- **Date Produced**: 4/5/2019 3:36 AM\r\n- **Commit**: 61196044ed70a65c610beb230ac6ea77566668c2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19204.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19204.16\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/684","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#684)"},{"Id":"429856281","IsPullRequest":true,"CreatedAt":"2019-04-05T17:15:53","Actor":"zsd4yr","Number":"686","RawContent":null,"Title":"WinForms, not Winforms; and tags","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/686","RelatedDescription":"Closed or merged PR \"WinForms, not Winforms; and tags\" (#686)"},{"Id":"429842746","IsPullRequest":true,"CreatedAt":"2019-04-05T16:39:47","Actor":"n-stefan","Number":"685","RawContent":null,"Title":"Use nameof in ArgumentNullException","State":"open","Body":"Use nameof in ArgumentNullException.","Url":"https://github.com/dotnet/winforms/pull/685","RelatedDescription":"Open PR \"Use nameof in ArgumentNullException\" (#685)"},{"Id":"429696361","IsPullRequest":false,"CreatedAt":"2019-04-05T10:52:53","Actor":"hughbe","Number":"682","RawContent":null,"Title":"Can we remove things like RunningOnWin2K","State":"open","Body":"E.g. in ListBox.cs\r\n\r\n```cs\r\nstatic bool RunningOnWin2K {\r\n    get {\r\n        if (!checkedOS) {\r\n            if (Environment.OSVersion.Platform != System.PlatformID.Win32NT ||\r\n                Environment.OSVersion.Version.Major < 5) {\r\n                runningOnWin2K = false;\r\n                checkedOS = true;\r\n            }\r\n        }\r\n        return runningOnWin2K;\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/winforms/issues/682","RelatedDescription":"Open issue \"Can we remove things like RunningOnWin2K\" (#682)"},{"Id":"429538946","IsPullRequest":true,"CreatedAt":"2019-04-05T00:40:32","Actor":"JuditRose","Number":"681","RawContent":null,"Title":"Port ControlDesigner","State":"open","Body":"Fixes #653 \r\n\r\nComponents copied from framework.\r\n\r\nMy dear reviewers: I am terribly sorry in advance for the number of lines... ","Url":"https://github.com/dotnet/winforms/pull/681","RelatedDescription":"Open PR \"Port ControlDesigner\" (#681)"},{"Id":"429522369","IsPullRequest":true,"CreatedAt":"2019-04-04T23:17:54","Actor":"zsd4yr","Number":"680","RawContent":null,"Title":"rename artifact and display name now that it contains two packages","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/680","RelatedDescription":"Closed or merged PR \"rename artifact and display name now that it contains two packages\" (#680)"},{"Id":"429409798","IsPullRequest":false,"CreatedAt":"2019-04-04T17:58:33","Actor":"Shyam-Gupta","Number":"679","RawContent":null,"Title":"WinForms .NetCore templates should be identical to .NET Framework templates","State":"open","Body":"As per feedback from @chabiss, Windows Form App (.NET Core) templates should be identical to Windows Form App (.NET Framework) templates.\r\n\r\n![template](https://user-images.githubusercontent.com/24871676/55577567-b1ec1d80-56c8-11e9-9ce7-ad6a2ce9e541.jpg)\r\n","Url":"https://github.com/dotnet/winforms/issues/679","RelatedDescription":"Open issue \"WinForms .NetCore templates should be identical to .NET Framework templates\" (#679)"},{"Id":"428727971","IsPullRequest":true,"CreatedAt":"2019-04-04T15:25:40","Actor":"dotnet-maestro[bot]","Number":"676","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190402.13\r\n- **Date Produced**: 4/3/2019 12:44 AM\r\n- **Commit**: 764f362c8e92e41905fe5f6c782ab9980c86c909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19202.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19202.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19203.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19203.10\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/676","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#676)"},{"Id":"428652524","IsPullRequest":false,"CreatedAt":"2019-04-03T20:48:52","Actor":"MohanramAnbukkarasu","Number":"675","RawContent":null,"Title":"PrintDialog in multithreaded window throws System.InvalidOperationException","State":"closed","Body":"\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nI am using a secondary UI thread for opening the MainWindow of my WPF application as shown in thefollowing code snippet.\r\n\r\n```\r\npublic partial class App : Application\r\n{\r\n    protected override void OnStartup(StartupEventArgs e)\r\n    {\r\n        base.OnStartup(e);\r\n\r\n        Thread thread = new Thread(() =>\r\n        {\r\n            MainWindow mainWindow = new MainWindow();\r\n            mainWindow.Show();\r\n\r\n\r\n            System.Windows.Threading.Dispatcher.Run();\r\n        });\r\n\r\n        thread.IsBackground = false;\r\n        thread.SetApartmentState(ApartmentState.STA);\r\n        thread.Start();\r\n    }\r\n}\r\n```\r\n\r\nIn a button click I try to open show a PrintDialog using the following code snippet.\r\n\r\n`PrintDialog printDialog = new PrintDialog();\r\nprintDialog.ShowDialog();`\r\n\r\n\r\n**Actual behavior:** \r\n\r\nWhen this button is clicked, the app crashes with the following exception: The calling thread cannot access this object because a different thread owns it.\r\n\r\nPlease find the stack trace for the exception below.\r\n\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=The calling thread cannot access this object because a different thread owns it.\r\n  Source=WindowsBase\r\n  StackTrace:\r\n   at System.Windows.Threading.Dispatcher.VerifyAccess()\r\n   at MS.Internal.Printing.Win32PrintDialog.ShowDialog()\r\n   at System.Windows.Controls.PrintDialog.ShowDialog()\r\n   at PrintDialogDemo.MainWindow.Button_Click(Object sender, RoutedEventArgs e) in E:\\DevelopersCommunity\\PrintDialog\\Sample\\PrintDialogDemo\\PrintDialogDemo\\MainWindow.xaml.cs:line 31\r\n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\r\n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\n   at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\r\n   at System.Windows.UIElement.RaiseEvent(RoutedEventArgs e)\r\n   at System.Windows.Controls.Primitives.ButtonBase.OnClick()\r\n   at System.Windows.Controls.Button.OnClick()\r\n   at System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs e)\r\n   at System.Windows.UIElement.OnMouseLeftButtonUpThunk(Object sender, MouseButtonEventArgs e)\r\n   at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\r\n   at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\r\n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\r\n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\n   at System.Windows.UIElement.ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\r\n   at System.Windows.UIElement.OnMouseUpThunk(Object sender, MouseButtonEventArgs e)\r\n   at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\r\n   at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\r\n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\r\n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\n   at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\r\n   at System.Windows.UIElement.RaiseTrustedEvent(RoutedEventArgs args)\r\n   at System.Windows.UIElement.RaiseEvent(RoutedEventArgs args, Boolean trusted)\r\n   at System.Windows.Input.InputManager.ProcessStagingArea()\r\n   at System.Windows.Input.InputManager.ProcessInput(InputEventArgs input)\r\n   at System.Windows.Input.InputProviderSite.ReportInput(InputReport inputReport)\r\n   at System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\r\n   at System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr hwnd, WindowMessage msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.Run()\r\n   at PrintDialogDemo.App.<>c.<OnStartup>b__0_0() in E:\\DevelopersCommunity\\PrintDialog\\Sample\\PrintDialogDemo\\PrintDialogDemo\\App.xaml.cs:line 27\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```\r\n\r\n\r\n**Expected behavior:**\r\nPrintDialog should be opened without any exception.\r\n**Minimal repro:**\r\nI have attached a sample here to replicate this scenario.\r\n\r\n[PrintDialogDemo.zip](https://github.com/dotnet/winforms/files/3037795/PrintDialogDemo.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/675","RelatedDescription":"Closed issue \"PrintDialog in multithreaded window throws System.InvalidOperationException\" (#675)"},{"Id":"428934106","IsPullRequest":true,"CreatedAt":"2019-04-03T19:23:18","Actor":"dreddy-work","Number":"678","RawContent":null,"Title":"Modernizing Winforms images in core","State":"open","Body":"Current images in winforms run-time and design-time were designed to fit 100% DPI scaling. As part of this change we are replacing those images with higher resolution Icons that can support up to 300% DPI scaling.  These Icons may differ in the way they look from previous images but are in synch with what  Visual studio uses for those types.","Url":"https://github.com/dotnet/winforms/pull/678","RelatedDescription":"Open PR \"Modernizing Winforms images in core\" (#678)"},{"Id":"428866546","IsPullRequest":true,"CreatedAt":"2019-04-03T16:42:51","Actor":"zsd4yr","Number":"677","RawContent":null,"Title":"Revert change to CI to use Artifacts.Log","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/677","RelatedDescription":"Closed or merged PR \"Revert change to CI to use Artifacts.Log\" (#677)"},{"Id":"428572711","IsPullRequest":true,"CreatedAt":"2019-04-03T05:26:36","Actor":"hughbe","Number":"674","RawContent":null,"Title":"Cleanup ListControl","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/674","RelatedDescription":"Open PR \"Cleanup ListControl\" (#674)"},{"Id":"428392305","IsPullRequest":false,"CreatedAt":"2019-04-02T19:05:10","Actor":"merriemcgaw","Number":"673","RawContent":null,"Title":"WinForms in .NET Core 3.0 should be at functional parity with .NET Framework 4.8","State":"open","Body":"Wherever possible .NET Core 3.0 WinForms should have the same functionality that .NET Framework does. There will be changes in some places, but these should be intentional rather than spontaneous. We need to port .NET 4.8 fixes in HDPI, Accessibility, and other feature areas to achieve this.","Url":"https://github.com/dotnet/winforms/issues/673","RelatedDescription":"Open issue \"WinForms in .NET Core 3.0 should be at functional parity with .NET Framework 4.8\" (#673)"},{"Id":"428387713","IsPullRequest":false,"CreatedAt":"2019-04-02T18:54:16","Actor":"merriemcgaw","Number":"672","RawContent":null,"Title":"Test Infrastructure Parity with Framework","State":"open","Body":"This epic tracks getting our test infrastructure that we used for .NET Framework ported to the Arcade infrastructure.","Url":"https://github.com/dotnet/winforms/issues/672","RelatedDescription":"Open issue \"Test Infrastructure Parity with Framework\" (#672)"},{"Id":"428387492","IsPullRequest":false,"CreatedAt":"2019-04-02T18:53:43","Actor":"merriemcgaw","Number":"671","RawContent":null,"Title":"Integrate Framework end-to-end tests into Helix/Arcade","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/issues/671","RelatedDescription":"Open issue \"Integrate Framework end-to-end tests into Helix/Arcade\" (#671)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-08T05:30:49.0690429Z","RunDurationInMilliseconds":642}