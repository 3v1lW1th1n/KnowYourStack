{"Data":{"GitHubIssues":{"Issues":[{"Id":"336457806","IsPullRequest":false,"CreatedAt":"2018-06-28T03:13:12","Actor":"FIVIL","Number":"1049","RawContent":null,"Title":"RTM","State":"open","Body":"Hi, ive just seen this repo and ive got very excited about it, as im a huge fan of C# instead of JS so i was wondering when you guys are gonna release an RTM stable version of Blazor?, and also is there any documentation like the one for the ASP.net core in docs.microsoft.com or any where else??\r\n\r\ntnx","Url":"https://github.com/aspnet/Blazor/issues/1049","RelatedDescription":"Open issue \"RTM\" (#1049)"},{"Id":"336328573","IsPullRequest":false,"CreatedAt":"2018-06-27T21:44:13","Actor":"IyyappanAmirthalingam","Number":"1048","RawContent":null,"Title":"Error <LangVersion>7.3</LangVersion>","State":"closed","Body":"Hi,\r\n\r\nWhen I try to create and run the Blazor app with the following steps it throws the follwing error \r\n\r\n**Steps üëç \r\ndotnet new -i Microsoft.AspNetCore.Blazor.Templates\r\ndotnet new blazor -o BlazorApp1\r\ncd BlazorApp1\r\ndotnet run**\r\n\r\nError üëé \r\n**CSC : error CS1617: Invalid option '7.3' for /langversion. Use '/langversion:?' to list supported values. [C:\\sample\\BlazorApp1\\BlazorApp1.csproj]**\r\n\r\n**The build failed. Please fix the build errors and run again.**\r\n\r\nThanks.","Url":"https://github.com/aspnet/Blazor/issues/1048","RelatedDescription":"Closed issue \"Error <LangVersion>7.3</LangVersion>\" (#1048)"},{"Id":"336163562","IsPullRequest":false,"CreatedAt":"2018-06-27T10:09:55","Actor":"TheFanatr","Number":"1047","RawContent":null,"Title":"Blazor as an Alternative to Razor Pages","State":"open","Body":"# A Request to Provide the Blazor Language as an Alternative to Razor Pages' CSHTML Language and PageModel Combination\r\n\r\nFor the past while, I have been using Razor Pages with ASP.NET Core 2 in order to serve web pages for websites that I am working on. It is a very nice framework and is far easier to use than MVC, but after using the Blazor language only very briefly, I am finding it hard to go back. Considering that the Blazor language is simply an extension of Razor Pages' CSHTML language, is there any way that it could be used in-place? I am not asking for a full server-side solution, as requested in #1004, but rather just a way to interact with server-side code from within the UI code more easily by exposing the Blazor language to server-side ASP.NET Core projects. This post explores how this could theoretically be achieved, and aims to start a conversation on how it would be possible to actually implement such feature.\r\n\r\n## Theoretical Implementation\r\n\r\nThis section explores the way in how it could be theoretically possible to implement the Blazor language as an in-place alternative to the CSHTML language provided for Razor Pages.\r\n\r\n### Blazor Language to Razor Pages CSHTML-and-PageModel-Class Transpiler Method\r\n\r\nThis section explores how the implementation of a server-side version of the Blazor language could work if the code is interpreted into a Razor Pages CSHTML file and backing PageModel class.\r\n\r\n#### Explanation\r\n\r\nUpon receiving valid Blazor language code on compilation, the server-side-context Blazor language parser/transpiler would generate valid Razor Pages CSHTML code, as well as a `PageModel` file containing the contents of the `@functions` block as well as generated Razor Pages HTTP protocol interaction methods for everything that is being used from the `@functions` block. After that the Razor Pages compilation/interpretation system would take over.\r\n\r\n#### Possible Caveats\r\n\r\nRecognizing that the Blazor language was designed for code generation in terms of client-side UI interactions and data operations as opposed to server-side, it may not be possible to achieve identical behaviour with certain Blazor language code when used in a server-side context instead of a client side one, especially in reference to data binding; however, it is unknown as to whether or not this would be an issue, as long as the observed effects on both the UI and the data are the same.\r\n\r\n### Razor Pages Processer Modification Method\r\n\r\nThis section explores how the implementation of a server-side version of the Blazor language could work if the compile-time Razor Pages processing system is forked and modified to interpret the Blazor language, so that the generated code is synonymous to code that would be generated in a normal Razor Pages environment as long as the given Razor Pages code and Blazor language code was also synonymous.\r\n\r\n#### Explanation\r\n\r\nUpon receiving valid Blazor language code on compilation, the server-side-context Blazor language parsing/processing system would generate the same valid code that the Razor Pages compile time interpretation/processing system would when given Razor Pages code that is synonymous to the Blazor language code given to the hypothetical Blazor language parsing/processing system, so that Razor Pages code and Blazor language code would yield the same or similar generated code.\r\n\r\n#### Caveats\r\n\r\nThe way that a Blazor language parsing/processing system in a server-side context would have to work may differ too greatly to how the Razor Pages code interpretation/processing system currently works for the code generated by the two systems to ever be the same, even if the inputs were synonymous, due to a need to essentially write an entirely different processing system. This could lead to unintentional side-effects of yielding different behaviour from the generated code from the Blazor language parsing/processing system versus the Razor Pages code interpretation/processing system, even if the inputs are synonymous, but this may also be a non-issue as long as the perceived effects on both the UI and the data are still the same.\r\n\r\n## Conclusion\r\n\r\nImplementing such a system may not be trivial, but it may be a great alternative to or starting point for implementing full server-side support for all of Blazor such as what was detailed in #1004, as providing just the language itself to server-side-context ASP.NET Core projects is enough to say that \"Blazor supports server-side ASP.NET\", but would also provide enough scaffolding and base code to go the other direction and reach a full implementation. If you are experienced with the inner workings of this project, please comment below how you think either or both of the aforementioned options for implementing a server-side version of the Blazor language could be implemented and/or how any way could work.\r\n\r\n**footnote** *by \"full server-side solution\" I mean the ability to run full .NET Framework code in a separate runtime through Mono connected to the UI, the ability to access the local filesystem easily, the actual Blazor layout system, etc.*","Url":"https://github.com/aspnet/Blazor/issues/1047","RelatedDescription":"Open issue \"Blazor as an Alternative to Razor Pages\" (#1047)"},{"Id":"335511556","IsPullRequest":false,"CreatedAt":"2018-06-27T09:39:50","Actor":"simonziegler","Number":"1041","RawContent":null,"Title":"Failed update to Blazor 0.4.0","State":"closed","Body":"Hi, I'm testing a system with Blazor 0.3.0 and am keen to pick up some of the new stuff in 0.4.0. However when I update and try running (client/server), I get presented with the following in my browser. Any ideas what may be the issue?\r\n\r\nThanks!\r\n\r\n![image](https://user-images.githubusercontent.com/11708435/41867493-30bce592-78ab-11e8-9e0b-0ac14cb0c2ca.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1041","RelatedDescription":"Closed issue \"Failed update to Blazor 0.4.0\" (#1041)"},{"Id":"336152228","IsPullRequest":false,"CreatedAt":"2018-06-27T09:38:58","Actor":"simonziegler","Number":"1046","RawContent":null,"Title":"Http Posts and Puts failing in Blazor 0.4.0","State":"open","Body":"Hi,\r\n\r\nI have found that Posts and Puts have been failing in a test web app that I created with Blazor 0.3.0 once I update to 0.4.0. I do not know if this is due to an error I am making or a bug. I have isolated the problem to a few lines of code that I have added to an out-of-the-box Blazor 0.4.0 hosted project, which can be found at https://github.com/simonziegler/TestBlazorSendJson. I modified only FetchData.cshtml and SampleDataController.cs. I would really like to find out what is happening here and apply a fix or work around.\r\n\r\nThanks,     Simon","Url":"https://github.com/aspnet/Blazor/issues/1046","RelatedDescription":"Open issue \"Http Posts and Puts failing in Blazor 0.4.0\" (#1046)"},{"Id":"336107948","IsPullRequest":false,"CreatedAt":"2018-06-27T07:27:42","Actor":"phanronald","Number":"1045","RawContent":null,"Title":"WASM: Cannot enlarge memory arrays.","State":"open","Body":"I get this error when I am trying to do some complex c# foreach loops and recursion. Did not see anywhere that I can add any of these settings.\r\n\r\n\r\nWASM: Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value 2147352576, (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ","Url":"https://github.com/aspnet/Blazor/issues/1045","RelatedDescription":"Open issue \"WASM: Cannot enlarge memory arrays.\" (#1045)"},{"Id":"336051483","IsPullRequest":false,"CreatedAt":"2018-06-27T02:05:00","Actor":"w8w8w8","Number":"1044","RawContent":null,"Title":"Method not found: double System.Math.Log(double)","State":"open","Body":"when i use  assembly.load()\r\nmy code is this:\r\n`var assembly = Assembly.Load(bytes);\r\n            obj = assembly.CreateInstance(ClassFullName);\r\n            var t = assembly.GetType(ClassFullName);\r\n            method = t.GetMethod(\"Run\");`\r\n\r\nbut there is  some error:\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of \r\nan invocation. ---> System.MissingMethodException: Method not found: double System.Math.Log(double)\r\n![qq 20180627100426](https://user-images.githubusercontent.com/4744039/41948881-84012a28-79f1-11e8-99e1-dc2a3fbe97ab.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1044","RelatedDescription":"Open issue \"Method not found: double System.Math.Log(double)\" (#1044)"},{"Id":"335673328","IsPullRequest":false,"CreatedAt":"2018-06-26T13:17:39","Actor":"DNF-SaS","Number":"1043","RawContent":null,"Title":"Missing package Mono.WebAssembly.Interop","State":"closed","Body":"When trying to update to build 10324, NuGet says: \"Unable to find package Mono.WebAssembly.Interop. No packages exist with this id in source(s): Microsoft Visual Studio Offline Packages, MyGet: Blazor-Dev, MyGet: Reactive Extensions, nuget.org\r\n","Url":"https://github.com/aspnet/Blazor/issues/1043","RelatedDescription":"Closed issue \"Missing package Mono.WebAssembly.Interop\" (#1043)"},{"Id":"335607130","IsPullRequest":false,"CreatedAt":"2018-06-25T23:47:11","Actor":"marcusbooyah","Number":"1042","RawContent":null,"Title":"Route precedence ","State":"open","Body":"I have an app with two routes:\r\n\r\n`@page \"/{multiple}/catalog/new\"`\r\n`@page \"/{multiple}/catalog/{catalogId}\"`\r\n\r\nWhen accessing the /{multiple}/catalog/new URL, the router seems to be taking me to the /{multiple}/catalog/{catalogId} route. This used to work the other way around for me. Is this a bug, or am I doing something wrong?\r\n\r\nThis is on Blazor 0.5.0-preview1","Url":"https://github.com/aspnet/Blazor/issues/1042","RelatedDescription":"Open issue \"Route precedence \" (#1042)"},{"Id":"335454117","IsPullRequest":false,"CreatedAt":"2018-06-25T15:57:25","Actor":"carlosalcantara2668","Number":"1040","RawContent":null,"Title":"How can register any function of jquery in BLAZOR ?","State":"closed","Body":"how can you register the autocomplete function of jquery in blazor through JavaScript Interop in Blazor. it could be done","Url":"https://github.com/aspnet/Blazor/issues/1040","RelatedDescription":"Closed issue \"How can register any function of jquery in BLAZOR ?\" (#1040)"},{"Id":"334921717","IsPullRequest":true,"CreatedAt":"2018-06-25T14:14:43","Actor":"SteveSandersonMS","Number":"1033","RawContent":null,"Title":"JavaScript interop v3","State":"closed","Body":"This is one of the big pieces needed for #959. It changes how the JS interop works so it's factored out of the Blazor codebase itself, and makes \"async\" calls the mainstream lowest-common-denominator case (with sync and unmarshalled calls still available via certain casts if you really need that).\r\n\r\nIt's a monstrously big PR, but it does all have to happen in one go because once you change the underpinnings there are so many consequences. @rynowak, we can discuss whether or how you want to review this.\r\n\r\nI'll write up a list of changes (especially the breaking API changes) in here later. For now I just want the CI run to start so am submitting this.","Url":"https://github.com/aspnet/Blazor/pull/1033","RelatedDescription":"Closed or merged PR \"JavaScript interop v3\" (#1033)"},{"Id":"335409810","IsPullRequest":true,"CreatedAt":"2018-06-25T13:34:51","Actor":"RemiBou","Number":"1039","RawContent":null,"Title":"[WIP] Resolving #1009 by adding null values for parameter missing from some routes","State":"open","Body":"I just want to validate that this is ok for you , I've added a RouteTableEdited so I can launch BenchmarkDotNet (see Program.cs in benchmarks). Here are the results \r\n\r\n> // * Summary *\r\n> \r\n> BenchmarkDotNet=v0.10.13, OS=Windows 10.0.17134\r\n> Intel Core i7-6700 CPU 3.40GHz (Skylake), 1 CPU, 8 logical cores and 4 physical cores\r\n> Frequency=3328125 Hz, Resolution=300.4695 ns, Timer=TSC\r\n> .NET Core SDK=2.1.300\r\n>   [Host] : .NET Core 2.0.7 (CoreCLR 4.6.26328.01, CoreFX 4.6.26403.03), 64bit RyuJIT  [AttachedDebugger]\r\n\r\n> // * Detailed results *\r\n> RouteTableEntryBenchMark.Before: Job-WLZQGL(Toolchain=InProcessToolchain, RunStrategy=Throughput)\r\n> Runtime = ; GC = \r\n> Mean = 14.0737 ns, StdErr = 0.0335 ns (0.24%); N = 15, StdDev = 0.1297 ns\r\n> Min = 13.7929 ns, Q1 = 13.9738 ns, Median = 14.0770 ns, Q3 = 14.1618 ns, Max = 14.2909 ns\r\n> IQR = 0.1880 ns, LowerFence = 13.6919 ns, UpperFence = 14.4437 ns\r\n> ConfidenceInterval = [13.9350 ns; 14.2123 ns] (CI 99.9%), Margin = 0.1386 ns (0.99% of Mean)\r\n> Skewness = -0.32, Kurtosis = 2.42\r\n> \r\n> \r\n> RouteTableEntryBenchMark.After: Job-WLZQGL(Toolchain=InProcessToolchain, RunStrategy=Throughput)\r\n> Runtime = ; GC = \r\n> Mean = 13.3245 ns, StdErr = 0.0254 ns (0.19%); N = 15, StdDev = 0.0985 ns\r\n> Min = 13.1397 ns, Q1 = 13.2408 ns, Median = 13.3071 ns, Q3 = 13.4047 ns, Max = 13.4880 ns\r\n> IQR = 0.1639 ns, LowerFence = 12.9950 ns, UpperFence = 13.6505 ns\r\n> ConfidenceInterval = [13.2192 ns; 13.4298 ns] (CI 99.9%), Margin = 0.1053 ns (0.79% of Mean)\r\n> Skewness = 0.09, Kurtosis = 2.06\r\n> \r\n> \r\n> RouteTableEntryBenchMark.BeforeWithParam: Job-WLZQGL(Toolchain=InProcessToolchain, RunStrategy=Throughput)\r\n> Runtime = ; GC = \r\n> Mean = 10.3525 ns, StdErr = 0.0115 ns (0.11%); N = 13, StdDev = 0.0415 ns\r\n> Min = 10.3034 ns, Q1 = 10.3070 ns, Median = 10.3497 ns, Q3 = 10.3926 ns, Max = 10.4219 ns\r\n> IQR = 0.0856 ns, LowerFence = 10.1787 ns, UpperFence = 10.5210 ns\r\n> ConfidenceInterval = [10.3028 ns; 10.4022 ns] (CI 99.9%), Margin = 0.0497 ns (0.48% of Mean)\r\n> Skewness = 0.2, Kurtosis = 1.48\r\n> \r\n> \r\n> RouteTableEntryBenchMark.AfterWithParam: Job-WLZQGL(Toolchain=InProcessToolchain, RunStrategy=Throughput)\r\n> Runtime = ; GC = \r\n> Mean = 9.8868 ns, StdErr = 0.0212 ns (0.21%); N = 15, StdDev = 0.0822 ns\r\n> Min = 9.7680 ns, Q1 = 9.8238 ns, Median = 9.8745 ns, Q3 = 9.9930 ns, Max = 10.0240 ns\r\n> IQR = 0.1691 ns, LowerFence = 9.5701 ns, UpperFence = 10.2467 ns\r\n> ConfidenceInterval = [9.7990 ns; 9.9747 ns] (CI 99.9%), Margin = 0.0878 ns (0.89% of Mean)\r\n> Skewness = 0.35, Kurtosis = 1.64\r\n> \r\n> \r\n> RouteTableEntryBenchMark.BeforeAllParam: Job-WLZQGL(Toolchain=InProcessToolchain, RunStrategy=Throughput)\r\n> Runtime = ; GC = \r\n> Mean = 650.0142 ns, StdErr = 1.0916 ns (0.17%); N = 15, StdDev = 4.2278 ns\r\n> Min = 643.5151 ns, Q1 = 646.2995 ns, Median = 649.7372 ns, Q3 = 653.3484 ns, Max = 658.0280 ns\r\n> IQR = 7.0488 ns, LowerFence = 635.7262 ns, UpperFence = 663.9216 ns\r\n> ConfidenceInterval = [645.4945 ns; 654.5340 ns] (CI 99.9%), Margin = 4.5197 ns (0.70% of Mean)\r\n> Skewness = 0.13, Kurtosis = 1.94\r\n> \r\n> \r\n> RouteTableEntryBenchMark.AfterAllParam: Job-WLZQGL(Toolchain=InProcessToolchain, RunStrategy=Throughput)\r\n> Runtime = ; GC = \r\n> Mean = 643.2216 ns, StdErr = 1.3856 ns (0.22%); N = 14, StdDev = 5.1843 ns\r\n> Min = 636.7704 ns, Q1 = 638.6427 ns, Median = 642.9343 ns, Q3 = 646.1165 ns, Max = 654.5397 ns\r\n> IQR = 7.4738 ns, LowerFence = 627.4321 ns, UpperFence = 657.3272 ns\r\n> ConfidenceInterval = [637.3734 ns; 649.0698 ns] (CI 99.9%), Margin = 5.8482 ns (0.91% of Mean)\r\n> Skewness = 0.66, Kurtosis = 2.44\r\n> \r\n> \r\n> RouteTableEntryBenchMark.BeforeCtor: Job-WLZQGL(Toolchain=InProcessToolchain, RunStrategy=Throughput)\r\n> Runtime = ; GC = \r\n> Mean = 4.6092 ns, StdErr = 0.0505 ns (1.10%); N = 25, StdDev = 0.2526 ns\r\n> Min = 4.3945 ns, Q1 = 4.4412 ns, Median = 4.4998 ns, Q3 = 4.7609 ns, Max = 5.1406 ns\r\n> IQR = 0.3196 ns, LowerFence = 3.9618 ns, UpperFence = 5.2403 ns\r\n> ConfidenceInterval = [4.4200 ns; 4.7984 ns] (CI 99.9%), Margin = 0.1892 ns (4.10% of Mean)\r\n> Skewness = 1.07, Kurtosis = 2.37\r\n> \r\n> \r\n> RouteTableEntryBenchMark.AfterCtor: Job-WLZQGL(Toolchain=InProcessToolchain, RunStrategy=Throughput)\r\n> Runtime = ; GC = \r\n> Mean = 1.4789 us, StdErr = 0.0040 us (0.27%); N = 14, StdDev = 0.0149 us\r\n> Min = 1.4575 us, Q1 = 1.4696 us, Median = 1.4769 us, Q3 = 1.4821 us, Max = 1.5129 us\r\n> IQR = 0.0125 us, LowerFence = 1.4509 us, UpperFence = 1.5007 us\r\n> ConfidenceInterval = [1.4622 us; 1.4957 us] (CI 99.9%), Margin = 0.0168 us (1.13% of Mean)\r\n> Skewness = 0.67, Kurtosis = 2.75\r\n> \r\n\r\nIf it's alright for you, I'll clean the branch (remove the temporary class, merge it with the current one, remove code from benchmarks).","Url":"https://github.com/aspnet/Blazor/pull/1039","RelatedDescription":"Open PR \"[WIP] Resolving #1009 by adding null values for parameter missing from some routes\" (#1039)"},{"Id":"333788948","IsPullRequest":false,"CreatedAt":"2018-06-25T10:49:41","Actor":"haasey","Number":"1020","RawContent":null,"Title":"Cannot bind value of element and have onchange event fire.  Can only have either or.","State":"closed","Body":"\r\n_<select id=\"cboLocations\" bind=\"@uiLocation\" onchange=\"@LoadForms\"_>\r\n        _<option value=\"A\"_>A_<_/option_>\r\n        _<option value=\"B\"_>B_<_/option_>\r\n        _<option value=\"C\"_>C_<_/option_>\r\n        _<option value=\"D\"_>D_<_/option_>\r\n    _<_/select>\r\n\r\n   @functions  {\r\n        string uiLocation =\"\"\r\n   protected async void LoadForms()\r\n        {\r\n           // does an async call relying on the value of uiLocation variable\r\n        } \r\n  }","Url":"https://github.com/aspnet/Blazor/issues/1020","RelatedDescription":"Closed issue \"Cannot bind value of element and have onchange event fire.  Can only have either or.\" (#1020)"},{"Id":"333821405","IsPullRequest":false,"CreatedAt":"2018-06-25T10:10:37","Actor":"cveld","Number":"1022","RawContent":null,"Title":"Idea: Streaming app deployment","State":"closed","Body":"In the community call of 12 June 2018 we were shown two ends of a spectrum:\r\n1. Full client-side Blazor app with limited server communication\r\n2. Full server-side Blazor app with limited client-side payload and lots of communication with server\r\n\r\nWhat I would like to understand, would it be an idea to research the idea of streaming app deployments? If I am correct, this is something comparable to how App-V works.\r\n\r\nWhat I mean, we could quickly bootstrap the user experience based on SEO serverside rendering in combination with scenario 2 little payload on the client; much communication with server.\r\nDuring life-time of the app the primary use cases will get downloaded into the client after which no chatty server communication is required anymore and for these use cases scenario 1 gets active.\r\n\r\nThe user subsequently clicks through additional use cases, which trigger additional payloads coming to the client. Eventually all relevant bits will get transfered over and the webapplication can be even used as a progressive webapp with full offline capabilities.\r\nAdditionally a trade-off analyzer could be implemented that drops downloaded bits if the payload client-side gets too huge. E.g. max 100 MB.\r\nOne interesting twist would be an extension (proprietary Windows?) that would enable switching from a PWA to an Electron application transparently without noticable delays :-)\r\n\r\nWhat do you think?","Url":"https://github.com/aspnet/Blazor/issues/1022","RelatedDescription":"Closed issue \"Idea: Streaming app deployment\" (#1022)"},{"Id":"333863724","IsPullRequest":false,"CreatedAt":"2018-06-25T10:08:08","Actor":"learner291","Number":"1023","RawContent":null,"Title":"Dynamic ViewModels","State":"closed","Body":"When will you be able to decide whether this can be a committed project, is there any timeline?\r\n\r\nI noticed that Model needs to be defined at compile time in order for both server and client projects to utilize data binding. Is there any plan for having a loosely coupled models so that client is not aware of strongly type models and views can be created from dynamic view models? \r\n\r\nWe are investigating different frameworks for our multi-tenanted web application. The web application, patient case management system, requires data entry of multiple forms and as you can imagine each form can contain 100s of fields. Each tenant can have their own set of forms as well so adding new patient form may have 80 fields/controls for Tenant A and adding new patient for Tenant B may have 50 fields/controls, some of these fields may be common among tenants. Will/Can blazor have the functionality to handle above requirement i.e. only showing relevant controls/fields to relevant tenants and implement two-way data binding using MVVM pattern, if yes, is there any sample project?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1023","RelatedDescription":"Closed issue \"Dynamic ViewModels\" (#1023)"},{"Id":"333879156","IsPullRequest":false,"CreatedAt":"2018-06-25T10:06:15","Actor":"AxDSan","Number":"1024","RawContent":null,"Title":"The command dotnet <scaffold_command> exited with code 1.","State":"closed","Body":"```\r\nThe command \"dotnet \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.4.0\\targets\\../tools/illink/illink.dll\" -c link -u link -t --verbose  -d \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.4.0\\targets\\../tools/mono/bcl/\" -d \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.4.0\\targets\\../tools/mono/bcl/Facades/\" -o \"D:\\DevStuff\\VisualStudio2k17\\WebApplication1\\WebApplication1.Client\\obj\\Debug\\netstandard2.0\\blazor/linker/\" -x \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.4.0\\targets\\BuiltInBclLinkerDescriptor.xml\" -x \"D:\\DevStuff\\VisualStudio2k17\\WebApplication1\\WebApplication1.Client\\obj\\Debug\\netstandard2.0\\blazor\\linker.descriptor.xml\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.aspnetcore.blazor\\0.4.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Blazor.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.aspnetcore.blazor.browser\\0.4.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Blazor.Browser.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.csharp\\4.5.0\\lib\\netstandard2.0\\Microsoft.CSharp.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.entityframeworkcore\\2.1.1\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.entityframeworkcore.abstractions\\2.1.1\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.entityframeworkcore.design\\2.1.1\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Design.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.entityframeworkcore.relational\\2.1.1\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.entityframeworkcore.relational.design\\1.1.5\\lib\\netstandard1.3\\Microsoft.EntityFrameworkCore.Relational.Design.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.entityframeworkcore.sqlserver\\2.1.1\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.entityframeworkcore.sqlserver.design\\1.1.5\\lib\\netstandard1.3\\Microsoft.EntityFrameworkCore.SqlServer.Design.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.caching.abstractions\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.caching.memory\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.configuration\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.configuration.abstractions\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.configuration.binder\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.dependencyinjection\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.dependencyinjection.abstractions\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.logging\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.logging.abstractions\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.options\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\microsoft.extensions.primitives\\2.1.1\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\lib\\netstandard2.0\\Microsoft.Win32.Registry.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\system.buffers\\4.4.0\\lib\\netstandard2.0\\System.Buffers.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.collections.immutable\\1.5.0\\lib\\netstandard2.0\\System.Collections.Immutable.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.componentmodel.annotations\\4.5.0\\lib\\netstandard2.0\\System.ComponentModel.Annotations.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\system.data.sqlclient\\4.5.1\\lib\\netstandard2.0\\System.Data.SqlClient.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.diagnostics.diagnosticsource\\4.5.0\\lib\\netstandard1.3\\System.Diagnostics.DiagnosticSource.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.linq\\4.1.0\\lib\\netstandard1.6\\System.Linq.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.linq.expressions\\4.1.0\\lib\\netstandard1.6\\System.Linq.Expressions.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.linq.queryable\\4.0.1\\lib\\netstandard1.3\\System.Linq.Queryable.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\system.memory\\4.5.1\\lib\\netstandard2.0\\System.Memory.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\system.numerics.vectors\\4.4.0\\lib\\netstandard2.0\\System.Numerics.Vectors.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.objectmodel\\4.0.12\\lib\\netstandard1.3\\System.ObjectModel.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.reflection.emit\\4.0.1\\lib\\netstandard1.3\\System.Reflection.Emit.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.reflection.emit.ilgeneration\\4.0.1\\lib\\netstandard1.3\\System.Reflection.Emit.ILGeneration.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.reflection.emit.lightweight\\4.0.1\\lib\\netstandard1.3\\System.Reflection.Emit.Lightweight.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.reflection.typeextensions\\4.1.0\\lib\\netstandard1.5\\System.Reflection.TypeExtensions.dll\" -a \"C:\\Users\\0x90\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.5.1\\lib\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\lib\\netstandard2.0\\System.Security.AccessControl.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\lib\\netstandard2.0\\System.Security.Principal.Windows.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encoding.codepages\\4.5.0\\lib\\netstandard2.0\\System.Text.Encoding.CodePages.dll\" -a \"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.threading\\4.0.11\\lib\\netstandard1.3\\System.Threading.dll\" -a \"D:\\DevStuff\\VisualStudio2k17\\WebApplication1\\WebApplication1.Shared\\bin\\Debug\\netstandard2.0\\WebApplication1.Shared.dll\" -a \"D:\\DevStuff\\VisualStudio2k17\\WebApplication1\\WebApplication1.Client\\obj\\Debug\\netstandard2.0\\WebApplication1.Client.dll\"\" exited with code 1.\r\n```\r\n\r\nI'm clueless, I'm following a [tutorial](https://code.msdn.microsoft.com/ASPNET-Core-Blazor-CRUD-b4085178) but I'm stuck here where I need to create the scaffolding to create the db models and stuff. I'm executing this command inside the Package Manager CLI\r\n\r\n`Scaffold-DbContext \"Server= DESKTOP-QVLLPTI\\SQLEXPRESS;user id= xxxx;password= xxxx;Database=xxxxxx;Trusted_Connection=True;MultipleActiveResultSets=true\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models -Tables xxxxxxx`\r\n\r\nWhere XXXX values are replaced with actual values from the user, database and respective data...\r\n\r\nAdditional Notes: I'm using the latest Blazor (0.4.0) with .NET Core 2.1 SDK (v2.1.300) and Visual Studio 2017 (15.7.3), along with the latest technologies and frameworks and toolsets, e.g. `Install-Package Microsoft.EntityFrameworkCore.SqlServer` & `Install-Package Microsoft.EntityFrameworkCore.SqlServer.Design` & `Install-Package Microsoft.EntityFrameworkCore.Tools`, I'm executing all these commands into the `<projectName>.Shared` project... I have checked and tried executing all of them even the scaffolding one (originally giving me the problems) into the `<projectName>.Server` and it executes just right, but at the time to create a controller, it doesn't let me select a DB Context. Another thing is that the tutorial was original made for the .NET Core 2.1 SDK (v2.1.300-preview2)\r\n\r\n the problems) into the `<projectName>.Server` and it executes just right, but at the time to create a controller, it doesn't let me select a DB Context. Another thing is that the tutorial was original made for the .NET Core 2.1 SDK (v2.1.300-preview2)\r\n\r\nCreating a Controller in `<projectName>.Server` gives me this error: ![](https://i.imgur.com/BGEM1rb.png)","Url":"https://github.com/aspnet/Blazor/issues/1024","RelatedDescription":"Closed issue \"The command dotnet <scaffold_command> exited with code 1.\" (#1024)"},{"Id":"334061511","IsPullRequest":false,"CreatedAt":"2018-06-25T10:04:03","Actor":"HK-Zhang","Number":"1027","RawContent":null,"Title":"The directory name '/app/dist/' does not exist.","State":"closed","Body":"I added docker support for the server project and click F5 to debug app in docker.\r\nThen I get below exception at the code :  app.UseBlazor<Client.Program>();\r\nSystem.ArgumentException: 'The directory name '/app/dist/' does not exist.'","Url":"https://github.com/aspnet/Blazor/issues/1027","RelatedDescription":"Closed issue \"The directory name '/app/dist/' does not exist.\" (#1027)"},{"Id":"334858887","IsPullRequest":false,"CreatedAt":"2018-06-25T10:03:11","Actor":"Diemauerdk","Number":"1031","RawContent":null,"Title":"How to Implement Custom databinding","State":"closed","Body":"Hi,\r\n\r\nI am trying to implement databinding on a custom Blazor Component.\r\n\r\nI know there is a Bind attribute and as an example, it works like this for the input field:\r\n\r\n`<input type=\"text\" bind=\"@Name\" />`\r\n\r\nBut what about Custom components? I Can't do this:\r\n\r\n`<CustomComponent bind=\"@Name\" />`\r\n\r\nSo does anyone have an idea of how to make a custom component support databinding? :)\r\n\r\nThanks,\r\nJeppe\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1031","RelatedDescription":"Closed issue \"How to Implement Custom databinding\" (#1031)"},{"Id":"334913079","IsPullRequest":false,"CreatedAt":"2018-06-25T10:01:24","Actor":"fs86","Number":"1032","RawContent":null,"Title":"Unable to register component event without ParameterAttribute","State":"closed","Body":"I noticed that events in custom components can only be registered from the parent component if ParameterAttribute is present. I have followed the example of @danroth27, which is described here: #610 \r\n\r\nMy custom component:\r\n```csharp\r\n<input type=\"text\" value=\"@Value\" onchange=\"@OnInputChanged\" />\r\n\r\n@functions\r\n{\r\n    [Parameter] string Value { get; set; }\r\n    public Action<string> ValueChanged { get; set; }\r\n    void OnInputChanged(UIChangeEventArgs e)\r\n    {\r\n        Value = e.Value.ToString();\r\n        ValueChanged(Value);\r\n    }\r\n}\r\n```\r\n\r\nMy parent component:\r\n```csharp\r\n<MyCustomComponent Value=\"@Product.Name\" ValueChanged=\"@OnValueChanged\" />\r\n\r\n@functions\r\n{\r\n    void OnValueChanged(string value)\r\n    {\r\n        Product.Name = value;\r\n        StateHasChanged();\r\n    }\r\n}\r\n```\r\n\r\nOutput: \"Cannot convert method group 'OnValueChanged' to non-delegate type 'object'. Did you intend to invoke the method?\"\r\n\r\nIf I add [Parameter] to my event, everything works fine.","Url":"https://github.com/aspnet/Blazor/issues/1032","RelatedDescription":"Closed issue \"Unable to register component event without ParameterAttribute\" (#1032)"},{"Id":"335122197","IsPullRequest":false,"CreatedAt":"2018-06-25T09:59:57","Actor":"cornishcoder","Number":"1034","RawContent":null,"Title":"Public properties in @functions not in scope after Js/c# Interop calls","State":"closed","Body":".Net Core 2.1.300\r\nBlazor 0.4.0\r\n\r\nI am using GitHub Pages to host my experimental Blazor app, which simply fetches the latest weather for a given city using OpenWeatherApi. I am having to use JsonP calls to the service due to CORS. This means, calling a Javascript function to make the API call with a C# function acting as the callback with the data, using Blazor interop. This works and is not a problem. \r\n\r\nThe issue is that when the C# callback function is called, the member variable forecasts does not appear to be in scope, causing an exception. \r\n\r\n```\r\nList<WeatherForecast> forecasts = new List<WeatherForecast>();\r\nstring city;\r\nstring apiKey;\r\n```\r\n\r\n```\r\nprotected void OnClick()\r\n{\r\n    var url = $\"http://api.openweathermap.org/data/2.5/forecast?APPID={apiKey}&q={city}&units=metric\";\r\n    RegisteredFunction.Invoke<string>(\"jsonP\", url);\r\n}\r\n\r\npublic void ApiCallback(string data)\r\n{\r\n    var serializer = new DataContractJsonSerializer(typeof(RootObject));\r\n\r\n    using (var ms = new MemoryStream(Encoding.UTF8.GetBytes(data)))\r\n    {\r\n        var rootObject = serializer.ReadObject(ms) as RootObject;\r\n        foreach (var entry in rootObject.list)\r\n        {\r\n           var f = new WeatherForecast()\r\n           {\r\n                Date = DateTime.Parse(entry.dt_txt),\r\n                TemperatureC = entry.main.temp,\r\n                WindSpeed = entry.wind.speed,\r\n                Summary = entry.weather.Single().description\r\n            };\r\n            Console.WriteLine($\"{f.Date} - {f.TemperatureC} - {f.WindSpeed} - {f.Summary}\");\r\n            try\r\n            {\r\n                forecasts?.Add(f);  // Object reference not set to an instance of an object.\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n               Console.WriteLine($\"Exception: {ex.Message}\");\r\n            }\r\n        }\r\n   }\r\n }\r\n```\r\n\r\n```\r\nBlazor.registerFunction('jsonP', function (url) {\r\n    var data = {};\r\n    var callback = function (data) {\r\n        const apiCallback = Blazor.platform.findMethod(\r\n            'CornishCoderBlazor',\r\n            'CornishCoderBlazor.Pages',\r\n            'FetchData',\r\n            'ApiCallback'\r\n        );\r\n       \r\n        console.log(data);\r\n        Blazor.platform.callMethod(apiCallback, null, [Blazor.platform.toDotNetString(JSON.stringify(data))]);\r\n    };\r\n\r\n    J50Npi.getJSON(url, data, callback);\r\n});\r\n```\r\n\r\nApp running here: http://cornishcoder.uk/fetchdata \r\nSource here: https://github.com/cornishcoder/CornishCoderBlazor/blob/weatherAPI/CornishCoderBlazor/Pages/FetchData.cshtml\r\n\r\nUpdate: I've added a simpler example to the Counter page:\r\n  https://github.com/cornishcoder/CornishCoderBlazor/blob/weatherAPI/CornishCoderBlazor/Pages/Counter.cshtml","Url":"https://github.com/aspnet/Blazor/issues/1034","RelatedDescription":"Closed issue \"Public properties in @functions not in scope after Js/c# Interop calls\" (#1034)"},{"Id":"335185961","IsPullRequest":false,"CreatedAt":"2018-06-25T09:57:00","Actor":"MelnikovIG","Number":"1036","RawContent":null,"Title":"[Question] Can blazor pages locate at other project instead of host app?","State":"closed","Body":"I know currently it is allowed to locate components in different projects like showed in @SteveSandersonMS  video https://youtu.be/JU-6pAxqAa4?t=3205 . I modified _ViewImports.cshtml and added reference to my library like in video, but i can't use pages such way, only components. Requests to my page, located at separate project, redirected to main page. Is it possible for now?","Url":"https://github.com/aspnet/Blazor/issues/1036","RelatedDescription":"Closed issue \"[Question] Can blazor pages locate at other project instead of host app?\" (#1036)"},{"Id":"335260948","IsPullRequest":false,"CreatedAt":"2018-06-25T09:55:42","Actor":"nvrnight","Number":"1037","RawContent":null,"Title":"Unable to run Blazor without a web server...","State":"closed","Body":"Since Blazor is a client-side framework, I figured I should be able to run it like any other javascript files in a local folder from a regular html file.\r\n\r\nI ran into some issues within mono.js when trying this approach, fetch() was looking for a response with a Content-Type header of \"application/wasm\" which it's not going to get from trying to fetch a local file. I modified a couple of the instances where fetch is used to XMLHTTPRequest instead and everything worked in an electron application, but still fails in a regular browser due to \"Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.\" which I suspect can be gotten around by coding in a better way.\r\n\r\nI suppose there may be no way around by-passing the browser security to retrieve a local file, but I'm hoping that maybe the fetch could be changed at-least so Blazor can work for Electron apps without a server(even though I've already read that Electron isn't an intended use for Blazor).\r\n\r\nAttached my PoC of Blazor/Electron with my modification to mono.js. Should be able to run it after doing npm install by doing npm start. It's just the sample Blazor app with the counter and fetch request page(which obviously doesn't work without a web server to fetch the data from).\r\n\r\n[ElectronBlazor.zip](https://github.com/aspnet/Blazor/files/2131825/ElectronBlazor.zip)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1037","RelatedDescription":"Closed issue \"Unable to run Blazor without a web server...\" (#1037)"},{"Id":"335282714","IsPullRequest":false,"CreatedAt":"2018-06-25T09:53:21","Actor":"desalbres","Number":"1038","RawContent":null,"Title":"Add sections...","State":"closed","Body":"Hello, \r\n\r\nCould you add @section to razor views like in ASP.NET MVC ?\r\n\r\nThanks,\r\n\r\nRapha√´l Desalbres","Url":"https://github.com/aspnet/Blazor/issues/1038","RelatedDescription":"Closed issue \"Add sections...\" (#1038)"},{"Id":"334106737","IsPullRequest":false,"CreatedAt":"2018-06-25T03:52:56","Actor":"edmundhuang","Number":"1028","RawContent":null,"Title":"call IQueryable<T>.Count() will throw exceptions","State":"closed","Body":"It is easy to reproduce the error.    \r\n1.  Create template project in Visual Studio.  \r\n2.  Modify method \"OnParametersSetAsync\" in fetchData.cshtml as follow:  \r\n``` cs\r\nprotected override async Task OnParametersSetAsync()  \r\n {  \r\n       forecasts = await Http.GetJsonAsync<WeatherForecast[]>(  \r\n            $\"sample-data/weather.json?date={StartDate.ToString(\"yyyy-MM-dd\")}\");  \r\n      var q=forecasts.AsQueryable();   \r\n\r\n      //Count an IQueryable would throw exception.\r\n       q.Count();\r\n     \r\n......\r\n }\r\n```\r\n\r\n3. Remember to add @using System.Linq in the beginnng of this page.\r\n \r\nI had done this testing with the lastest blazor (0.4.0.0) package.\r\nNETStandard.Library 2.0.3\r\n![issue](https://user-images.githubusercontent.com/10094089/41664798-1d6700de-74d9-11e8-833b-7ef758963e23.png)\r\n\r\nThanks  \r\nEdmund Huang","Url":"https://github.com/aspnet/Blazor/issues/1028","RelatedDescription":"Closed issue \"call IQueryable<T>.Count() will throw exceptions\" (#1028)"},{"Id":"335150082","IsPullRequest":false,"CreatedAt":"2018-06-24T16:20:51","Actor":"ylluminate","Number":"1035","RawContent":null,"Title":"YAML instead of XML?","State":"closed","Body":"Just saw this project, looks interesting. I find the WASM + JS interop + a fully vertical isomorphic stack very appealing.  Perhaps similar to wonderful options like Ruby on Rails or Roda + Opal + Hyperloop.\r\n\r\nHave you considered using YAML for config instead of XML?  I think readability of the language and things like configs are important to really making a stack appealing to devs.  Some folks might like XML, but honestly, it's not as quick to visually parse as a human being and I think decisions about readability and self documentation are important for popularity.","Url":"https://github.com/aspnet/Blazor/issues/1035","RelatedDescription":"Closed issue \"YAML instead of XML?\" (#1035)"},{"Id":"334348014","IsPullRequest":false,"CreatedAt":"2018-06-22T05:39:16","Actor":"itorian","Number":"1029","RawContent":null,"Title":"Getting started templates not working","State":"closed","Body":"I used getting started with Blazor [guidelines from here](https://blazor.net/docs/get-started.html) to configure environment. I'm not able to run any template either from Visual Studio Enterprise 2017 (Version: 15.7.1) or command line.\r\n\r\n**Template: Blazor**\r\n\r\nCreated project in VS by selecting Blazor template, noticed SDK version 2.1.300 in global.json. When running this project with Ctrl-F5, opens up browser, displays 'Loading...' for few sec and then blank page.\r\n\r\nAfter that tried command line option, which displays another error:\r\n\r\nCSC : error CS1617: Invalid option '7.3' for /langversion. Use '/langversion:?' to list supported values. [C:\\Users\\abhimanyu\\BlazorApp1\\BlazorApp1.csproj]\r\nThe build failed. Please fix the build errors and run again.\r\n\r\n**Template: Blazor (ASP.NET Core hosted)**\r\n\r\nCreated project in VS by selecting Blazor (ASP.NET Core hosted) template. When running this project with Ctrl-F5, this displays error:\r\n\r\n![image](https://user-images.githubusercontent.com/3646552/41700221-08bf7a46-7545-11e8-9c6a-4a06e510bacf.png)\r\n\r\nAny help on this ?","Url":"https://github.com/aspnet/Blazor/issues/1029","RelatedDescription":"Closed issue \"Getting started templates not working\" (#1029)"},{"Id":"334734431","IsPullRequest":false,"CreatedAt":"2018-06-22T04:34:57","Actor":"sgf","Number":"1030","RawContent":null,"Title":"why Blazor must be Prerequisites java(JDK)  and node.js ?","State":"closed","Body":"> want to wirte C# run on browser?\r\n> first,you need install jdk and node.js .\r\n> \r\n\r\nIt looks funny","Url":"https://github.com/aspnet/Blazor/issues/1030","RelatedDescription":"Closed issue \"why Blazor must be Prerequisites java(JDK)  and node.js ?\" (#1030)"},{"Id":"334050603","IsPullRequest":false,"CreatedAt":"2018-06-20T22:08:38","Actor":"libcitra","Number":"1026","RawContent":null,"Title":"How to use BindMethods.GetEventHandlerValue <T> (Action)","State":"closed","Body":"I expected to run with the following syntax.\r\n``` cs\r\n<li onclick=\"@originalMethod(foo)\">test</li>\r\n\r\n@functions {\r\n    void originalMethod(Bar bar){\r\n        ...\r\n    }\r\n}\r\n```\r\nBut the result was a build failure.\r\n\r\n`Argument 1: can not convert from 'void' to 'string'`\r\n\r\nSo I changed and got the results I expected.\r\n``` cs\r\n<li onclick=\"@(e => originalMethod(foo))\">test</li>\r\n```\r\n\r\nIs this the right way?","Url":"https://github.com/aspnet/Blazor/issues/1026","RelatedDescription":"Closed issue \"How to use BindMethods.GetEventHandlerValue <T> (Action)\" (#1026)"},{"Id":"333955242","IsPullRequest":false,"CreatedAt":"2018-06-20T21:25:00","Actor":"w8w8w8","Number":"1025","RawContent":null,"Title":"how to : use Assembly load some dll file?","State":"closed","Body":"I want to dynamically load dll filesÔºåhow to use Assembly?\r\nwebform i can do like this:\r\nAssembly asm = Assembly.LoadFrom(\"aaaaa.dll\");\r\nobj = asm.CreateInstance(ClassFullName);\r\nType t = asm.GetType(ClassFullName);\r\nmethod = t.GetMethod(\"Run\");\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1025","RelatedDescription":"Closed issue \"how to : use Assembly load some dll file?\" (#1025)"},{"Id":"333807443","IsPullRequest":false,"CreatedAt":"2018-06-19T20:02:59","Actor":"nativoplus","Number":"1021","RawContent":null,"Title":"Serverless architecture, confused about how I would use Server side mentioned here with Azure functions , event grid and general server less architecture","State":"closed","Body":"I am tracking this project as it grows to move my company to it once it has reached a level of maturity I can feel comfortable with. My question is in regards the server side story that you guys covered AspNetLive community stand up. \r\n\r\nMy question is what is the thoughts around the stories to use serverless architecture such as: \r\nAzure functions, event grid or other (app logic apps)\r\nWill there be an \"Azure Web App for Blazor\". \r\n\r\nOur app:\r\nOur application is a claim processing application for insurance companies like geico etc.. Because we have PII and the insurance is in several states in the US it is interesting to have a SAAS app. ","Url":"https://github.com/aspnet/Blazor/issues/1021","RelatedDescription":"Closed issue \"Serverless architecture, confused about how I would use Server side mentioned here with Azure functions , event grid and general server less architecture\" (#1021)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-28T05:30:03.0831861Z","RunDurationInMilliseconds":1400}