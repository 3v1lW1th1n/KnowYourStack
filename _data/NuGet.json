{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11842140533","Type":"IssuesEvent","CreatedAt":"2020-03-23T22:19:27","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7911","RelatedDescription":"Opened issue \"[Package Renames] Reduce propagation time\" (#7911) at NuGet/NuGetGallery","RelatedBody":"Popularity transfers depend on the following things to propagate to search:\r\n\r\n* auxiliary2azuresearch job - This recalculates the packages' popularity scores and saves the popularity transfers to an auxiliary file. This runs once every 30 minutes.\r\n* [ ] Search auxiliary files reload - This reloads the popularity transfers information, which is what the Gallery uses to detect whether a popularity transfer has propagated to search. This runs once every hour.\r\n\r\nAs a result, it may take up to 1.5 hours for popularity transfers to fully take effect. We increase the job and reload cadences to speed up popularity transfers."},{"Id":"11841914829","Type":"PullRequestEvent","CreatedAt":"2020-03-23T21:47:40","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7899","RelatedDescription":"Merged pull request \"Updated MaxSupportedMinClientVersion\" (#7899) at NuGet/NuGetGallery","RelatedBody":"Bringing parity with https://github.com/NuGet/NuGet.Services.Index/pull/161"},{"Id":"11841434969","Type":"PullRequestEvent","CreatedAt":"2020-03-23T20:47:16","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7887","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.03.19]RI dev to master\" (#7887) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11840179764","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:23:58","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7910","RelatedDescription":"Opened issue \"[Package Renames] Add message for pending popularity transfers on \"Manage Package\" page\" (#7910) at NuGet/NuGetGallery","RelatedBody":"Popularity transfer may take over an hour to propagate to search. The customers should see an alert on the \"Manage Package\" page that the popularity transfers are pending.\r\n\r\nDepends on:\r\n* [NuGetGallery#7908](https://github.com/NuGet/NuGetGallery/issues/7908) - Add Package Renames form to \"Manage Package\" page\r\n* [NuGetGallery#7903](https://github.com/nuget/nugetgallery/issues/7903) - Expose popularity transfers in search\r\n"},{"Id":"11840009316","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:05:45","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7909","RelatedDescription":"Opened issue \"[Package Renames] Add Gallery API for end-to-end testing\" (#7909) at NuGet/NuGetGallery","RelatedBody":"The end-to-end tests should be able to use the Gallery API to rename a package."},{"Id":"11839982562","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:02:53","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7908","RelatedDescription":"Opened issue \"[Package Renames] Add Package Renames form to \"Manage Package\" page\" (#7908) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839958952","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:00:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7907","RelatedDescription":"Opened issue \"[Package Renames] Show replacement packages on \"Display Package\" page\" (#7907) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839880894","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:52:35","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7906","RelatedDescription":"Opened issue \"[Package Renames] A/B test the popularity transfer\" (#7906) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839860029","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:50:29","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7905","RelatedDescription":"Opened issue \"[Package Renames] Monitor the popularity transfer freshness\" (#7905) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839841089","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:48:35","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7904","RelatedDescription":"Opened issue \"[Package Renames] Add end-to-end test\" (#7904) at NuGet/NuGetGallery","RelatedBody":"Test that:\r\n\r\n1. Upload a package\r\n1. Rename it using the Gallery API\r\n1. Check that search API lists its renames"},{"Id":"11839811993","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:45:44","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7903","RelatedDescription":"Opened issue \"[Package Renames] Expose popularity transfers in search\" (#7903) at NuGet/NuGetGallery","RelatedBody":"Expose popularity transfers on the `/search/query` endpoint.\r\n\r\nExpose the popularity transfer auxiliary file metadata on the `/search/diag` endpoint."},{"Id":"11839772634","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:41:49","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7902","RelatedDescription":"Opened issue \"[Package Renames] Post-MVP: Refine the transfer popularity algorithm\" (#7902) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11839754285","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:39:56","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7901","RelatedDescription":"Opened issue \"[Package Renames] Post-MVP: Consider letting new packages match on old packages' ID \" (#7901) at NuGet/NuGetGallery","RelatedBody":"Today a renamed package may not match the same token as the original package. Examples:\r\n\r\n* `Azure.Storage.Blobs` was originally `Microsoft.Azure.Storage.Blob`. New package name does not match on `blob` queries\r\n* `Azure.Storage.Queues` was originally `Microsoft.Azure.Storage.Queue`. New package name does not match on `queue` queries.\r\n\r\nToday's work-around is to add a tag for missing tokens. We could add a new field to search documents that contains the names of the original packages. This may have the following benefits:\r\n\r\n1. The work-around requires work from package author. Many are unaware of the work-around \r\n1. We may be able to boost this new field better since we control it\r\n\r\nThis requires further experimentation and should be done after the minimum viable product is complete!"},{"Id":"11839673062","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:31:52","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7900","RelatedDescription":"Opened issue \"[Package Renames] Add new schema\" (#7900) at NuGet/NuGetGallery","RelatedBody":"Add the `PackageRenames` table to the database:\r\n\r\nColumn name | Type | Description\r\n-- | -- | --\r\nKey | Int | Primary key   (autogenerated by DB)\r\nFromPackageRegistrationKey | int | The package that   was renamed. There is a unique constraint on the   \"FromPackageRegistrationKey\" and   \"ToPackageRegistrationKey\"    columns combined\r\nToPackageRegistrationKey | int | The replacement   package. here is a unique constraint on the   \"FromPackageRegistrationKey\" and   \"ToPackageRegistrationKey\"    columns combined\r\nTransferPopularity | bool | True if the   \"from\" package's popularity should be transferred to the   replacement package.     This column is indexed.\r\n\r\nWe will also add the following column to `PackageRegistrations` table:\r\n\r\nColumn name | Type | Description\r\n-- | -- | --\r\nRenamedMessage | String,   nvarchar(max), nullable | The custom message   for renamed packages\r\n\r\n\r\n"},{"Id":"11839664150","Type":"PullRequestEvent","CreatedAt":"2020-03-23T17:31:01","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7899","RelatedDescription":"Opened pull request \"Updated MaxSupportedMinClientVersion\" (#7899) at NuGet/NuGetGallery","RelatedBody":"Bringing parity with https://github.com/NuGet/NuGet.Services.Index/pull/161"},{"Id":"11839635595","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:28:19","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7898","RelatedDescription":"Opened issue \"[Package Renames] Apply popularity transfers\" (#7898) at NuGet/NuGetGallery","RelatedBody":"Affected jobs:\r\n\r\n* [ ] db2azuresearch\r\n* [ ] auxiliary2azuresearch"},{"Id":"11839617714","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:26:34","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7897","RelatedDescription":"Opened issue \"[Package Renames] Add \"categories\" to NDCG data sets\" (#7897) at NuGet/NuGetGallery","RelatedBody":"We currently have separate data sets for the \"renamed\" packages. These should be merged back into the \"client curated\" data set. The scores for each categories should also be reported separately from the overall data set."},{"Id":"11839518079","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:17:00","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7896","RelatedDescription":"Opened issue \"Improve package renames \" (#7896) at NuGet/NuGetGallery","RelatedBody":"# Background\r\n\r\nSeveral popular packages have been renamed:\r\n\r\nPackage | Replacements\r\n-- | --\r\nFAKE | fake-cli\r\niTextSharp | itext7\r\nMicrosoft.Tpl.Dataflow | System.Threading.Tasks.Dataflow\r\nMicrosoft.SourceLink.Vsts.Git | Microsoft.SourceLink.AzureRepos.Git\r\nEntityFramework.Extended | Z.EntityFramework.Plus.EFCore, Z.EntityFramework.Plus.EF6, Z.EntityFramework.Plus.EF5\r\nManagedEsent | Microsoft.Database.ManagedEsent\r\n\r\nNuGet.org's search rankings is heavily influenced by packages' popularity. This leads to poor search quality when a popular package is renamed.\r\n\r\n# Solution\r\n\r\nWe will allow package owners to \"link\" a package that has been renamed with its replacements:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/77343371-cfa5fe80-6cee-11ea-8672-7a2f7565cae3.png)\r\n\r\nPackage owners will be able to control packages renames using the \"Manage Packages\" page:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/77343450-ea787300-6cee-11ea-95f1-935ffc452fd1.png)\r\n\r\nSelecting **Transfer popularity** will split the popularity of the current package and transfer it equally to the new packages. As a result, the new packages will now be favored in search rankings over the replaced package. Given transferring the popularity \"hurts\" the current package's search rankings, a warning message is displayed if a \"Transfer popularity\" checkbox is selected."},{"Id":"11839152773","Type":"IssuesEvent","CreatedAt":"2020-03-23T16:42:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7895","RelatedDescription":"Opened issue \"Consider broken links as a sign of a lower quality package\" (#7895) at NuGet/NuGetGallery","RelatedBody":"Similar to https://github.com/NuGet/NuGetGallery/issues/5738, but what if a user published a package a point in time and the links work. Then some time later the links break. Should we make this apparent on the gallery?\r\n\r\nWe've talked about what constitutes a high quality package. I think this is another good \"check\". If a package has broken links, it suggests that it is unmaintained and perhaps should not be depended upon."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11843067536","Type":"IssuesEvent","CreatedAt":"2020-03-24T01:04:24","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9282","RelatedDescription":"Closed issue \"RestoreTaskEx swallows errors\" (#9282) at NuGet/Home","RelatedBody":"When calling restore on a project with a recent SDK that contains the `RestoreTaskEx` but is missing the `NuGet.Build.Tasks.Console` executable, no failure is logged and no error is thrown.\r\n\r\n```\r\nC:\\git\\runtime4\\tools-local\\tasks\\installer.tasks>dotnet restore /p:RestoreUseStaticGraphEvaluation=true\r\n\r\nMicrosoft (R) Build Engine version 16.6.0-preview-20105-01+5d872c945 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n\r\nC:\\git\\runtime4\\tools-local\\tasks\\installer.tasks>\r\n```\r\n\r\ncc @nkolev92 @jeffkl "},{"Id":"11842754110","Type":"IssuesEvent","CreatedAt":"2020-03-24T00:02:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9269","RelatedDescription":"Closed issue \"Use the output channel service to propagate NuGet output for VSO. \" (#9269) at NuGet/Home","RelatedBody":""},{"Id":"11842271148","Type":"IssuesEvent","CreatedAt":"2020-03-23T22:38:57","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9335","RelatedDescription":"Opened issue \"Cannot uninstall/fix a packages.config project that has a missing package that does not exist on source\" (#9335) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\nVersion 16.6.0 Preview 2.0 [29919.92.master]\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Download and extract https://github.com/dotnet/project-system/files/2062473/VSIXProject2.zip\r\n2. Open project and save solution\r\n3. Attempt to build\r\n\r\nGet this build error (is the stack intended?)\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tNuGet Package restore failed for project VSIXProject2: NuGet.Protocol.Core.Types.FatalProtocolException: Unable to find version '15.8.1122' of package 'Microsoft.VSSDK.BuildTools'.\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\: Package 'Microsoft.VSSDK.BuildTools.15.8.1122' is not found on source 'C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\'.\r\n  https://dotnet.myget.org/F/roslyn/api/v3/index.json: Package 'Microsoft.VSSDK.BuildTools.15.8.1122' is not found on source 'https://dotnet.myget.org/F/roslyn/api/v3/index.json'.\r\n  https://pkgs.dev.azure.com/azure-public/vside/_packaging/vssdk/nuget/v3/index.json: Package 'Microsoft.VSSDK.BuildTools.15.8.1122' is not found on source 'https://pkgs.dev.azure.com/azure-public/vside/_packaging/vssdk/nuget/v3/index.json'.\r\n  https://api.nuget.org/v3/index.json: Package 'Microsoft.VSSDK.BuildTools.15.8.1122' is not found on source 'https://api.nuget.org/v3/index.json'.\r\n\r\n   at NuGet.PackageManagement.PackageDownloader.<GetDownloadResourceResultAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.NuGetPackageManager.<RestorePackageAsync>d__81.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.PackageManagement.PackageRestoreManager.<RestorePackageAsync>d__39.MoveNext(). Please see Error List window for detailed warnings and errors.\t\t\t\t\r\n\r\n```\r\n\r\n4. Right-click on project and choose Manage NuGet Packages\r\n5. Click installed tab and search for buildtools\r\n6. Attempt to uninstall\r\n\r\nExpected: The package to be uninstalled\r\nActual:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/77369664-3c82cc80-6db3-11ea-906e-7027349aea97.png)\r\n\r\nThere appears to be no way to uninstall this package."},{"Id":"11842049256","Type":"IssuesEvent","CreatedAt":"2020-03-23T22:06:09","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8460","RelatedDescription":"Closed issue \"Add arcade based automation for .NET Core CLI insertions\" (#8460) at NuGet/Home","RelatedBody":""},{"Id":"11841274459","Type":"IssuesEvent","CreatedAt":"2020-03-23T20:28:31","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8996","RelatedDescription":"Closed issue \"Label our issues better :)\" (#8996) at NuGet/Home","RelatedBody":"While @zkat is revamping our project management side of things, I have some pet peeves with the way we label, or don't label issues :)\r\n\r\nThis is tracking the work with my proposals on how we should make better use of our labels. \r\n\r\nfyi @aortiz-msft "},{"Id":"11841145407","Type":"IssuesEvent","CreatedAt":"2020-03-23T20:13:22","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9334","RelatedDescription":"Opened issue \"CodeFlow - insertion into VS/SDK\" (#9334) at NuGet/Home","RelatedBody":""},{"Id":"11841068796","Type":"IssuesEvent","CreatedAt":"2020-03-23T20:04:15","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9333","RelatedDescription":"Opened issue \"Create Performance-Testing Lab for NuGet in VS, CLI, MSBuild and Dotnet\" (#9333) at NuGet/Home","RelatedBody":"Investigate ways of measuring performance for various NuGet entry points.\n\nInitial focus will be on Visual Studio's Package Management UI."},{"Id":"11841050461","Type":"IssuesEvent","CreatedAt":"2020-03-23T20:02:02","Actor":"madelson","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9332","RelatedDescription":"Opened issue \"NU1004 when restoring with lockedmode after nuget restore -ForceEvaluate returns successfully\" (#9332) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nI recently spent a good deal of time debugging a strange NuGet error in one project which would only happen when restoring with locked mode on our CI server.\r\n\r\nUltimately, the problem had to do with the following invalid setup:\r\n\r\n* 3 projects in one solution PackageA, PackageB, and PackageB.Tests. The Package projects are published as NuGet packages.\r\n* PackageB has a project reference on PackageA, PackageB.Tests has a project reference on PackageB.\r\n* PackageB.Tests *also* had an (invalid) `<PackageReference>` on the NuGet version of PackageA.\r\n\r\nWhen I would run `nuget restore -ForceEvaluate MySolution.sln`, it would return successfully. PackageB.Test's package.lock.json file would have PackageA listed as a direct reference not as a project reference.\r\n\r\nUnder this setup, `nuget restore MySolution.sln` with `<RestoreLockedMode>true</RestoreLockedModel>` would fail with NU1004 complaining about ProjectB.Tests. This was quite difficult to debug because no error detail information was provided, and the problematic dependency was buried among many other non-problematic package dependencies. I ended up diagnosing by debugging NuGet.CommandLine itself.\r\n\r\nObviously, the setup in question was invalid and has been changed. However, I think there are 2 fixes that would have made this a better experience.\r\n\r\n1. It would be great to have more error detail with NU1004. All it says is to run restore with --force-evaluate, which brings me to the second fix\r\n2. I don't think restore with ForceEvaluate should have returned successfully in this case given that a later restore with locked mode was going to fail. It seems like a bug if a successful lock file generation can yield a lock file that isn't valid to be restored from.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx):  5.4.0.6315, but also reproduced with latest master code as of 3/23/2020.\r\n\r\ndotnet.exe --version (if appropriate): n/a\r\n\r\nVS version (if appropriate): n/a\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nSee above."},{"Id":"11841007522","Type":"IssuesEvent","CreatedAt":"2020-03-23T19:57:03","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9331","RelatedDescription":"Closed issue \"Add an Online Environment assembly, basic NuGet menu items & ingest required dependencies\" (#9331) at NuGet/Home","RelatedBody":""},{"Id":"11840964223","Type":"IssuesEvent","CreatedAt":"2020-03-23T19:52:02","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9203","RelatedDescription":"Closed issue \"Project fails to load after using PM Console\" (#9203) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nversion (x.x.x.xxx): All versions, at least since 16.4.5\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new console project\r\n\r\n2. Open the PM Console\r\n\r\n3. `Install-Package Newtonsoft.Json`\r\n\r\n4. Try to open the PMUI for the project again.\r\n\r\n## Result\r\n\r\nThis error happens during `Install-Package`:\r\n```\r\nInstall-Package : The operation failed as details for project ConsoleApp3 could not be loaded.\r\nAt line:1 char:1\r\n+ Install-Package Newtonsoft.Json\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n ```\r\n\r\nAdditionally, once this happens, the PM UI becomes unusable, with this error any time you try to open it for that project:\r\n\r\n![image](https://user-images.githubusercontent.com/17535/75078255-00a9ce00-54ba-11ea-8a94-cc9e95528caa.png)\r\n\r\n## Notes\r\n\r\nThis seems pretty serious, but it doesn't always reproduce. I'm not really sure what's going on.\r\n"},{"Id":"11840904023","Type":"IssuesEvent","CreatedAt":"2020-03-23T19:45:03","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9274","RelatedDescription":"Closed issue \"\"Upgade Nuget Version\" on RMB menu breaks selected project!\" (#9274) at NuGet/Home","RelatedBody":"![UpgadeNuget](https://user-images.githubusercontent.com/15795591/75854401-f8e50600-5da4-11ea-9783-500a0331b990.PNG)\r\n\r\nSteps to reproduce:\r\n\r\n1. Select project in Solution Explorer withh LMB.\r\n2. RMB click on it.\r\n3. Scroll down the menu that appears to the option \"Upgade Nuget Version\" and take it.\r\n5. Message box appears. Project broken.\r\n\r\n\r\nThis mesage box appears after RMB clicking on the project name and selecting the menu option \"Upgade Nuget Version\" (this is verbatim for the menu).\r\n\r\nThis forcibly breaks the project. I don't know what to do about this..."},{"Id":"11840185597","Type":"IssuesEvent","CreatedAt":"2020-03-23T18:24:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9331","RelatedDescription":"Opened issue \"Add an Online Environment assembly, basic NuGet menu items & ingest required dependencies\" (#9331) at NuGet/Home","RelatedBody":""},{"Id":"11839870472","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:51:32","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9323","RelatedDescription":"Closed issue \"Doesnt work while trying to add theme dictionaries\" (#9323) at NuGet/Home","RelatedBody":"I tried to add custom theme and some control styles through a dictionary Themes.xaml in my component project and it was working as expected when trying directly but when I upload it to nuget and consume from there, it cant find resources.\r\nMore details : https://stackoverflow.com/questions/60722735/uwp-styles-and-themes-in-a-nuget-cannot-find-resource-file/60722835?noredirect=1#comment107495661_60722835\r\n\r\n[Create NuGet Packages for the Universal Windows Platform](https://docs.microsoft.com/en-us/nuget/guides/create-uwp-packages-cs#feedback)"},{"Id":"11839803906","Type":"IssuesEvent","CreatedAt":"2020-03-23T17:44:56","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9328","RelatedDescription":"Closed issue \"How to use the consolidate/centralize command?\" (#9328) at NuGet/Home","RelatedBody":"How do I access the command at \r\n\r\nhttps://github.com/NuGet/Home/wiki/Centrally-managing-NuGet-package-versions#next-steps-post-mvp\r\n\r\ni get `error: Unrecognized command or argument 'consolidate/centralize'`"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-03-24T05:30:43.4923093Z","RunDurationInMilliseconds":1914}