{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":234,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7064253340","Type":"PullRequestEvent","CreatedAt":"2018-01-06T04:17:26","Actor":"briansull","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15756","RelatedDescription":"Merged pull request \"Fix for 15671\" (#15756) at dotnet/coreclr","RelatedBody":"If we are fetching an Array Length for an array ref that came from global memory\r\nthen for CSE safety we must use the conservative value number for both"},{"Id":"7064112625","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:14:22","Actor":"mikem8361","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15722","RelatedDescription":"Merged pull request \"Change just-in-time debugging registry keys.\" (#15722) at dotnet/coreclr","RelatedBody":"From \"SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\" to \"SOFTWARE\\Microsoft\\.NETCore\\JITDebugging\"."},{"Id":"7064108968","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:11:40","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15758","RelatedDescription":"Merged pull request \"[arm32][R2R] fix helper thunk.\" (#15758) at dotnet/coreclr","RelatedBody":"Do not trash CALLEE_SAVED register r4.\r\nUse r12 that is CALLEE_TRASH."},{"Id":"7064080241","Type":"IssuesEvent","CreatedAt":"2018-01-06T01:51:41","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/8516","RelatedDescription":"Closed issue \"Span: Add tests to verify type loader checks for ref-like types\" (#8516) at dotnet/coreclr","RelatedBody":"- Span cannot be boxed\r\n- Span cannot be used as argument of generic instantiations\r\n- Span cannot be used as type of static fields or non-value type instance fields"},{"Id":"7064076020","Type":"PullRequestEvent","CreatedAt":"2018-01-06T01:48:42","Actor":"justinvp","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15767","RelatedDescription":"Opened pull request \"Cleanup Activator\" (#15767) at dotnet/coreclr","RelatedBody":"Various minor cleanup"},{"Id":"7064073938","Type":"PullRequestEvent","CreatedAt":"2018-01-06T01:47:10","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15704","RelatedDescription":"Merged pull request \"JIT: fix decompose long left shift for overshift cases\" (#15704) at dotnet/coreclr","RelatedBody":"Need to reduce the shift amount modulo 64 to match the helper and\r\n`gtFoldExpr` behavior. Since reduced amount must be less than 64\r\nwe can remove handling for that case.\r\n\r\nRe-enable the test case disabled by #15567.\r\n\r\nCloses #15566."},{"Id":"7064073935","Type":"IssuesEvent","CreatedAt":"2018-01-06T01:47:10","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15566","RelatedDescription":"Closed issue \"JIT: GitHub_15291 test failure with MinOpts\" (#15566) at dotnet/coreclr","RelatedBody":"Related to #15442 \r\n\r\n```\r\nC:\\gh\\coreclr\\bin\\tests\\Windows_NT.x86.Checked\\JIT\\Regression\\JitBlue\\GitHub_15291\\GitHub_15291\\GitHub_15291.cmd -coreroot C:\\gh\\coreclr\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\nBEGIN EXECUTION\r\n \"C:\\gh\\coreclr\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" GitHub_15291.exe\r\nr64:FFFFFFFF r64a:00000000\r\nr63:FFFFFFFF r63a:FFFFFFFF\r\nr32:FFFFFFFF r32a:FFFFFFFF\r\nr31:7FFFFFFF r31a:7FFFFFFF\r\nrm1:FFFFFFFF rm1a:FFFFFFFF\r\nExpected: 100\r\nActual: 0\r\nEND EXECUTION - FAILED\r\nFAILED\r\nPASS: 0, FAIL: 1, TOTAL: 1\r\n```\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x86_checked_windows_nt_minopts/\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7064116145","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:17:06","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8336","RelatedDescription":"Merged pull request \"Reacting to core-setup changes for 'DEB' distro agnostic installers\" (#8336) at dotnet/cli","RelatedBody":"Reacting to core-setup changes for 'DEB' distro agnostic installers. \r\n\r\nExample:\r\nThese installers:\r\ndotnet-runtime-2.1.0-preview1-26103-03-debian.8-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-debian.9-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-ubuntu.14.04-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-ubuntu.16.04-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-ubuntu.17.04-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-ubuntu.17.10-x64.deb\r\nhave been coalesced to: \r\nruntime-2.1.0-preview1-26104-06-x64.deb\r\n\r\nContains: https://github.com/dotnet/cli/pull/8325\r\nUpdate CoreSetup to preview1-26105-01\r\n\r\n\r\n\r\n"},{"Id":"7064042382","Type":"IssuesEvent","CreatedAt":"2018-01-06T01:25:58","Actor":"rohit21agrawal","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8340","RelatedDescription":"Opened issue \"dotnet publish doesn't copy references with privateassets=all to publish directory\" (#8340) at dotnet/cli","RelatedBody":"Repro steps:\r\n\r\n1) Create a new netcoreapp or netstandard library and add net46 as framework as well\r\n2) add a package dependency like newtonsoft.json and set privateassets=all\r\n3) run dotnet publish --self-contained for both frameworks\r\n\r\nnewtonsoft.json is copied to publish dir for net46 while it is not copied to publish dir for netstandard/netcoreapp frameworks."},{"Id":"7063674803","Type":"PullRequestEvent","CreatedAt":"2018-01-05T22:45:42","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8339","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-26105-02 (master)\" (#8339) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7063475395","Type":"IssuesEvent","CreatedAt":"2018-01-05T21:46:14","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8334","RelatedDescription":"Closed issue \"Install scripts likely need to be updated to support acquiring the asp.net shared framework.\" (#8334) at dotnet/cli","RelatedBody":"People are going to want to do something similar to this but get ASP.NET + the Core Shared runtime.\r\n\r\n```\r\nwget https://dot.net/v1/dotnet-install.sh\r\nchmod 700 dotnet-install.sh\r\n./dotnet-install.sh --channel 2.0 --install-dir \"$netdir\" --shared-runtime --no-path\r\n```\r\n"},{"Id":"7063423789","Type":"IssuesEvent","CreatedAt":"2018-01-05T21:31:33","Actor":"kunalspathak","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8338","RelatedDescription":"Opened issue \"dotnet build -c throws exception instead of error message\" (#8338) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n` dotnet build -c`\r\n\r\n## Expected  behavior\r\n\r\nSome friendly error message\r\n\r\n## Actual behavior\r\n```\r\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\n   at System.ThrowHelper.ThrowArgumentOutOfRange_IndexException()\r\n   at System.SZArrayHelper.get_Item[T](Int32 index)\r\n   at System.Linq.Enumerable.ElementAt[TSource](IEnumerable`1 source, Int32 index)\r\n   at Microsoft.DotNet.Cli.Telemetry.TopLevelCommandNameAndOptionToLog.AllowList(ParseResult parseResult)\r\n   at Microsoft.DotNet.Cli.Telemetry.TelemetryFilter.Filter(Object objectToFilter)\r\n   at Microsoft.DotNet.Cli.Utils.TelemetryEventEntry.SendFiltered(Object o)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n\r\n```\r\n\r\n\r\n"},{"Id":"7063328416","Type":"IssuesEvent","CreatedAt":"2018-01-05T21:04:41","Actor":"mikeharder","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8337","RelatedDescription":"Opened issue \"Error running CLI on Linux when installed to \"$HOME/dotnet\"\" (#8337) at dotnet/cli","RelatedBody":"## Summary\r\nIt seems the problem only repros when:\r\n \r\n1. dotnet is installed at `$HOME/dotnet`\r\n2. The command is run as `dotnet` which loads the file from `$PATH`\r\n3. The command is run from `$HOME`, not any other directory\r\n\r\n## Steps to reproduce\r\n1. Ubuntu 16.04 LTS\r\n2. Install dotnet-sdk-2.1.3 using apt-get (https://www.microsoft.com/net/learn/get-started/linuxubuntu)\r\n3. `mkdir ~/dotnet`\r\n4. `cd ~/dotnet`\r\n5. `wget https://dotnetcli.azureedge.net/dotnet/Sdk/2.2.0-preview1-007840/dotnet-sdk-2.2.0-preview1-007840-linux-x64.tar.gz`\r\n6. `tar -zxvf dotnet-sdk-2.2.0-preview1-007840-linux-x64.tar.gz`\r\n7. `cd ~`\r\n8. `nano .profile`\r\nA. Add “$HOME/dotnet” to front of path\r\n9. `source .profile`\r\n10. `which dotnet`\r\nA. Verify the path is `/home/username/dotnet/dotnet`\r\n11. `dotnet -?`\r\nA. Expected: Shows help\r\nB. Actual: `Did you mean to run dotnet SDK commands? Please install dotnet SDK from: http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409`\r\n12. `~/dotnet/dotnet -?`\r\nA. Works fine\r\n13. `mkdir foo`\r\n14. `cd foo`\r\n15. `dotnet -?`\r\nA. Works fine\r\n16. `mv ~/dotnet ~/dotnet-foo`\r\n17. `nano .profile`\r\nA. Change `$HOME/dotnet` to `$HOME/dotnet-foo`\r\n18. `source .profile`\r\n19. `which dotnet`\r\nA. Verify the path is `/home/username/dotnet-foo/dotnet`\r\n20. `dotnet -?`\r\nA. Works fine\r\n"},{"Id":"7063300471","Type":"PullRequestEvent","CreatedAt":"2018-01-05T20:57:02","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8325","RelatedDescription":"Closed pull request \"Update CoreSetup to preview1-26105-01 (master)\" (#8325) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7063299163","Type":"PullRequestEvent","CreatedAt":"2018-01-05T20:56:40","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8336","RelatedDescription":"Opened pull request \"Reacting to core-setup changes for 'DEB' distro agnostic installers\" (#8336) at dotnet/cli","RelatedBody":"Reacting to core-setup changes for 'DEB' distro agnostic installers. \r\n\r\nExample:\r\nThese installers:\r\ndotnet-runtime-2.1.0-preview1-26103-03-debian.8-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-debian.9-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-ubuntu.14.04-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-ubuntu.16.04-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-ubuntu.17.04-x64.deb\r\ndotnet-runtime-2.1.0-preview1-26103-03-ubuntu.17.10-x64.deb\r\nhave been coalesced to: \r\nruntime-2.1.0-preview1-26104-06-x64.deb\r\n\r\nContains: https://github.com/dotnet/cli/pull/8325\r\nUpdate CoreSetup to preview1-26105-01\r\n\r\n\r\n\r\n"},{"Id":"7063292303","Type":"PullRequestEvent","CreatedAt":"2018-01-05T20:54:50","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8284","RelatedDescription":"Merged pull request \"LOC CHECKIN | dotnet/cli – master | 20171222\" (#8284) at dotnet/cli","RelatedBody":null}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7058805790","Type":"PullRequestEvent","CreatedAt":"2018-01-04T21:57:28","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/618","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02404-01 (master)\" (#618) at dotnet/standard","RelatedBody":""},{"Id":"7056464684","Type":"IssuesEvent","CreatedAt":"2018-01-04T12:53:29","Actor":"viswa18","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/611","RelatedDescription":"Closed issue \"System.Diagnostics.Process.Start(info) show icon in Mac\" (#611) at dotnet/standard","RelatedBody":"I am having a simple C++ command line app, which is starts from .NetStandard2.0 class library. Below is code snippet to start the process, but it show dock icon in mac. \r\n\r\n```\r\nSystem.Diagnostics.ProcessStartInfo info = new System.Diagnostics.ProcessStartInfo \r\n{\r\nFileName = helloworld\",\r\nRedirectStandardOutput = true,\r\nRedirectStandardError = true,\r\nUseShellExecute = false,\r\nCreateNoWindow = true,\r\nArguments = args,\r\nWindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden, \r\nErrorDialog = false,\r\n};\r\nSystem.Diagnostics.Process process = System.Diagnostics.Process.Start(info);\r\n```\r\nIs it possible to prevent the icon in dock for mac? "},{"Id":"7054495904","Type":"PullRequestEvent","CreatedAt":"2018-01-04T01:09:14","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/617","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02403-01 (master)\" (#617) at dotnet/standard","RelatedBody":""},{"Id":"7054119223","Type":"PullRequestEvent","CreatedAt":"2018-01-03T22:46:21","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/617","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02403-01 (master)\" (#617) at dotnet/standard","RelatedBody":""},{"Id":"7053032329","Type":"IssuesEvent","CreatedAt":"2018-01-03T18:01:03","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/605","RelatedDescription":"Closed issue \"NETStandard 2.0 Project Template not working properly.\" (#605) at dotnet/standard","RelatedBody":"I've an issue when creating project template in VS 2017 15.5.1 version.\r\n\r\nWhen i create a project template and use it to create a project. There is no file existed in there regarding my project templates have many files.\r\n\r\nSteps to re-produce the bug:\r\n- Create a NETStandard2 class library in VS 2017.\r\n- Create multiple files in there.\r\n- Export Template for that projects.\r\n- Copy that template into: C:\\Users\\{Username}\\Documents\\Visual Studio 2017\\Templates\\ProjectTemplates \r\n- Create a project base on that template.\r\n\r\nAnyone have any idea for this one?"},{"Id":"7053021857","Type":"IssuesEvent","CreatedAt":"2018-01-03T17:58:34","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/613","RelatedDescription":"Closed issue \"Issue with referencing a .NET Standard 2.0 project with an classic ASP.NET project targeting .NET Framework 4.6.1\" (#613) at dotnet/standard","RelatedBody":"I refer to my original issue submitted to Autofac [here](https://github.com/autofac/Autofac.WebApi/issues/32). I originally thought it was an Autofac issue but turns out it is not as I can reproduce it without Autofac.\r\n\r\n# Summary\r\n`MissingMethodException` is thrown when resolving for a component through a delegate that returns a type defined in a .NET Standard 2.0 library, under the context of an classic ASP.NET Web API project.\r\n\r\n# Environment\r\n- Windows 10 (Version 10.0.16299)\r\n- Visual Studio 2017 15.5.2\r\n- .NET Core SDK 2.1.3 (64-bit) installed\r\n\r\n# Steps to reproduce\r\n1. Create two projects as follows\r\n    - A .NET Standard 2.0 library\r\n    - A classic ASP.NET Web API project targeting .NET Framework 4.6.1\r\n2. Define an interface and an implementing class pair in the .NET standard library as follows:\r\n```c#\r\npublic interface IFoo { void DoSomething(); }\r\n\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo(HttpClient httpClient) => _httpClient = httpClient;\r\n\r\n    public void DoSomething() { /* No-op */ }\r\n}\r\n```\r\n3. Reference the .NET Standard library from the ASP.NET Web API project\r\n4. Implement a dummy controller that initialises the `IFoo` private field\r\n\r\n\r\n```c#\r\npublic class DummyController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public DummyController() => _foo = new Foo(new HttpClient);\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\n\r\nNote that I have a parameterless contructor for `DummyController`.\r\n\r\n5. Run the ASP.NET Web API application and visit `/api/dummy/test`.\r\n\r\n# Expected behaviour\r\n`\"a\"` is returned.\r\n\r\n# Actual behaviour\r\n`InvalidOpeartionException` is thrown with the inner exception `MissingMethodException`.\r\n\r\nStack trace:\r\n<pre>\r\nAn error has occurred.An error occurred when trying to create a controller of type 'DummyController'. Make sure that the controller has a parameterless public constructor.System.InvalidOperationException   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n   at System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(HttpRequestMessage request)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.<SendAsync>d__1.MoveNext()An error has occurred.Method not found: 'Void AutofacNetStandara.Library.Foo..ctor(System.Net.Http.HttpClient)'.System.MissingMethodException   at AutofacNetStandard.Web.Controllers.DummyController..ctor()\r\n   at lambda_method(Closure )\r\n   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n</pre>\r\n---------\r\n# Additional things I have tried\r\n\r\n## Reference the same .NET Standard project from a .NET Framework 4.6.1 **Console** project, with the `Main` method initailizing `Foo`:\r\n```c#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var foo = new Foo(new HttpClient());\r\n\r\n        Console.ReadLine();\r\n    }\r\n}\r\n```\r\nNo runtime exceptions are thrown and `foo` variable is initialised correctly.\r\n\r\n## Moving the initialisation of `Foo._httpClient` to the default constructor of `Foo` and call the empty constructor from the web project instead, like:\r\n```c#\r\n// In the .NET Standard 2.0 library\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo() => _httpClient = new HttpClient();\r\n\r\n    public void DoSomething() { }\r\n}\r\n\r\n// In the ASP.NET project, targeting .NET 4.6.1\r\npublic class ValuesController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public ValuesController() => _foo = new Foo();\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\n`\"a\"` is returned as expected when visiting the route `/api/values/test`.\r\n"},{"Id":"7052970315","Type":"PullRequestEvent","CreatedAt":"2018-01-03T17:45:56","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/610","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02402-04 (master)\" (#610) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7064159702","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:52:17","Actor":"OmarTawfik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26196","RelatedDescription":"Merged pull request \"Follow up on #25738\" (#26196) at dotnet/corefx","RelatedBody":"This condition is still needed for nuget packaging.\r\ncc @weshaggard @safern "},{"Id":"7064125918","Type":"IssuesEvent","CreatedAt":"2018-01-06T02:24:31","Actor":"gokarnm","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26159","RelatedDescription":"Closed issue \"Building pre-jitted CoreFx bits\" (#26159) at dotnet/corefx","RelatedBody":"Hi,\r\n\r\n When I build the CoreFx repo locally on a Linux machine, the built CoreFx bits contain only IL, unlike the bits [Microsoft distributes](https://download.microsoft.com/download/2/B/2/2B2854E7-7EAE-4FE9-85D2-19ACCD716F18/dotnet-runtime-2.0.4-linux-x64.tar.gz), which seem to be pre-jitted (PE64 flag is on, and ILOnly flag is off).\r\n\r\nWhat is the process to build a pre-jitted version of CoreFx? Is that logic part of the build scripts in corefx repo, or it's being run as a post process? I understand that `crossgen` is the tool to be used for per-compiling, but I don't see switches in the build script to enable that. Any pointers would be helpful.\r\n\r\nBranch used - https://github.com/dotnet/corefx/tree/v2.0.4\r\nCommand used for build - `/build.sh -ConfigurationGroup=Release -RuntimeOS=linux -OSGroup=Linux -release`\r\nBuilt binaries picked from - `bin/runtime/netcoreapp-Linux-Release-x64`\r\n  "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7064228916","Type":"PullRequestEvent","CreatedAt":"2018-01-06T03:53:39","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23457","RelatedDescription":"Merged pull request \"Avoid skewing analysis time when logging analyzer times\" (#23457) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\n\r\nA user attempts to run analyzers through the Roslyn API for performance testing. The measured performance overhead is significantly greater than the observed overhead for the analyzer in other cases.\r\n\r\n### Bugs this fixes\r\n\r\nN/A\r\n\r\n### Workarounds, if any\r\n\r\nNone\r\n\r\n### Risk\r\n\r\nLow. The code was only intended to add stability to analyzer performance testing. After running the code through AnalyzerRunner, measurements indicated that the approach caused substantial performance overhead which obscured the true performance of the analyzers. The issue was most apparent during document edit testing (#23104).\r\n\r\n### Performance impact\r\n\r\nFor applications like Visual Studio, no change in performance. For some applications using the Roslyn API, e.g. AnalyzerRunner, performance is either unchanged or improved.\r\n\r\n### Is this a regression from a previous update?\r\n\r\nNo.\r\n\r\n### Root cause analysis\r\n\r\nAnalyzer performance was only tested in limited scenarios previously.\r\n\r\n### How was the bug found?\r\n\r\nAnalyzerRunner\r\n\r\n### Test documentation updated?\r\n\r\nNo."},{"Id":"7064161212","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:53:34","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24078","RelatedDescription":"Opened pull request \"Update Pdb2Pdb to 1.1.0-beta1-62506-02\" (#24078) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\n\r\nUpdates PDB converter to the latest version. This new version includes SourceLink in the converted Windows PDBs along with legacy srcsvr info. The former is picked up by VS Debugger the latter by WinDBG (which ignores SourceLink). This change will allow to debug Roslyn with Windows PDBs without enabling legacy srcsvr.\r\n\r\n### Bugs this fixes\r\n\r\n### Workarounds, if any\r\n\r\n### Risk\r\n\r\nSmall.\r\n\r\n### Performance impact\r\n\r\nNone.\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\n### How was the bug found?\r\n\r\n### Test documentation updated?\r\n"},{"Id":"7064142672","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:38:24","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24077","RelatedDescription":"Opened pull request \"Consolidate 'remove unused local' fixer in Roslyn and Roslyn-analyzers\" (#24077) at dotnet/roslyn","RelatedBody":"Roslyn part of https://github.com/dotnet/roslyn/issues/23684\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7064256781","Type":"PullRequestEvent","CreatedAt":"2018-01-06T04:20:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5214","RelatedDescription":"Opened pull request \" Fix marshalling code to meet the CIL backwards branch constraint\" (#5214) at dotnet/corert","RelatedBody":""},{"Id":"7064256412","Type":"PullRequestEvent","CreatedAt":"2018-01-06T04:20:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5213","RelatedDescription":"Closed pull request \"Merge pull request #5212 from dotnet/master\" (#5213) at dotnet/corert","RelatedBody":"Merge master to nmirror"},{"Id":"7064256248","Type":"PullRequestEvent","CreatedAt":"2018-01-06T04:20:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5213","RelatedDescription":"Opened pull request \"Merge pull request #5212 from dotnet/master\" (#5213) at dotnet/corert","RelatedBody":"Merge master to nmirror"},{"Id":"7064255690","Type":"PullRequestEvent","CreatedAt":"2018-01-06T04:19:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5211","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5211) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7064255444","Type":"PullRequestEvent","CreatedAt":"2018-01-06T04:19:37","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5212","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5212) at dotnet/corert","RelatedBody":""},{"Id":"7064255215","Type":"PullRequestEvent","CreatedAt":"2018-01-06T04:19:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5212","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5212) at dotnet/corert","RelatedBody":""},{"Id":"7064054255","Type":"PullRequestEvent","CreatedAt":"2018-01-06T01:33:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5210","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5210) at dotnet/corert","RelatedBody":""},{"Id":"7064024802","Type":"PullRequestEvent","CreatedAt":"2018-01-06T01:15:45","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5211","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5211) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7063941653","Type":"PullRequestEvent","CreatedAt":"2018-01-06T00:31:53","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5210","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5210) at dotnet/corert","RelatedBody":""},{"Id":"7063941174","Type":"PullRequestEvent","CreatedAt":"2018-01-06T00:31:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5209","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5209) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7063923864","Type":"PullRequestEvent","CreatedAt":"2018-01-06T00:23:35","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5209","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5209) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7063233875","Type":"PullRequestEvent","CreatedAt":"2018-01-05T20:38:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5208","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5208) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7063006588","Type":"PullRequestEvent","CreatedAt":"2018-01-05T19:37:34","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5208","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5208) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7064146280","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:41:21","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1844","RelatedDescription":"Opened pull request \"Fixing the generation of binding redirects when targeting 4.7.1\" (#1844) at dotnet/sdk","RelatedBody":"@dotnet/dotnet-cli "},{"Id":"7063853615","Type":"PullRequestEvent","CreatedAt":"2018-01-05T23:52:20","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1819","RelatedDescription":"Merged pull request \"Fixing the generation of binding redirects when targeting 4.7.1\" (#1819) at dotnet/sdk","RelatedBody":"cc: @livarcocc @weshaggard @AlexGhiondea\r\n\r\nInserting the new support package to the SDK that will fix the binding redirects for 4.7.1."},{"Id":"7063805566","Type":"PullRequestEvent","CreatedAt":"2018-01-05T23:32:33","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1843","RelatedDescription":"Opened pull request \"Pack for tools\" (#1843) at dotnet/sdk","RelatedBody":"Add PackAsTool in csproj, and run dotnet pack. The result will be in\r\ntool format nupkg"},{"Id":"7058401857","Type":"PullRequestEvent","CreatedAt":"2018-01-04T20:13:50","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1837","RelatedDescription":"Merged pull request \"Partial resolution of issue 1327\" (#1837) at dotnet/sdk","RelatedBody":"Partial resolution of issue 1327\r\nAddressing: https://github.com/dotnet/sdk/issues/1327\r\n\r\nThe \"I_can_restore_a_project_with_implicit_msbuild_nuget_config\" tests are still failing on full framework.\r\n  "},{"Id":"7058173963","Type":"PullRequestEvent","CreatedAt":"2018-01-04T19:17:14","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1842","RelatedDescription":"Opened pull request \"WIP: Issue 736\" (#1842) at dotnet/sdk","RelatedBody":"First pass removal of conditional 'non-skip' blind returns in test cases.\r\n\r\nAddressing: https://github.com/dotnet/sdk/issues/736"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"948916811034234881","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"dotnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/CCz9Kdyzk7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":10,"RawContent":null},{"Id":"944564608391577600","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/kicrnl8tNJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"943234846079496192","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/Xm2utapspg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2018-01-06T05:30:21.4648105Z","RunDurationInMilliseconds":8066}