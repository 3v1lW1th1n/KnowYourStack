{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10588041823","Type":"PullRequestEvent","CreatedAt":"2019-10-09T00:21:07","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7613","RelatedDescription":"Opened pull request \"Merge branch 'dev' into master\" (#7613) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10588038811","Type":"PullRequestEvent","CreatedAt":"2019-10-09T00:20:20","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7612","RelatedDescription":"Merged pull request \"Merge branch 'master' into dev\" (#7612) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10588033634","Type":"PullRequestEvent","CreatedAt":"2019-10-09T00:19:04","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7612","RelatedDescription":"Opened pull request \"Merge branch 'master' into dev\" (#7612) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10587989162","Type":"IssuesEvent","CreatedAt":"2019-10-09T00:07:56","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7535","RelatedDescription":"Closed issue \"MAS 2.5.2 - Pointer Cancellation\" (#7535) at NuGet/NuGetGallery","RelatedBody":"For functionality that occurs on click/hover or other single-pointer action, **at least one of the following is true**:\r\n- the down event is not used to execute any functionality\r\n- the functionality completes on the up event, and a mechanism is available to abort the functionality before or after the up event\r\n- the up event reverses the outcome of the preceding down event\r\n- completing the functionality on the down event is essential\r\n\r\nWe need to verify our Bootstrap controls and custom controls abide by these rules.\r\n\r\nHypothetical example: the multi-select dropdown must expand on the up event, not the down event.\r\n\r\nTerminology:\r\n- down event refers to when the user begins a click\r\n- up event refers to when a user releases a click"},{"Id":"10587847646","Type":"IssuesEvent","CreatedAt":"2019-10-08T23:33:44","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7531","RelatedDescription":"Closed issue \"MAS 1.4.13 - Content on Hover or Focus\" (#7531) at NuGet/NuGetGallery","RelatedBody":"Content that is revealed on hover or focus (tooltips, dropdowns, etc) must be\r\n- dismissable: the content can be dismissed or does not hide/interfere with other content\r\n- hoverable: if the content displays on hover of another element, it must be able to be hovered over\r\n- persistent: the content must not disappear until the hover or focus is removed\r\n\r\nFortunately, most of our controls are automatically handled by the browser and should be compliant, but some things, such as the Bootstrap tooltips and the custom multiple version dropdown for deprecation need to be analyzed."},{"Id":"10587386827","Type":"PullRequestEvent","CreatedAt":"2019-10-08T21:59:45","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7611","RelatedDescription":"Opened pull request \"[Gravatar Proxy] Address legal and privacy concerns\" (#7611) at NuGet/NuGetGallery","RelatedBody":"⚠️ I need to test this on DEV environment before this is ready for review."},{"Id":"10587076868","Type":"IssuesEvent","CreatedAt":"2019-10-08T21:11:13","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6069","RelatedDescription":"Closed issue \"Download count for package decreased between updates\" (#6069) at NuGet/NuGetGallery","RelatedBody":"See https://github.com/NuGet/NuGetGallery/issues/6051\r\n\r\nDownload counts for `ical.net` (@rianjs) went from 228927 on 6/13 to 228832 on 6/14.\r\n\r\nIt's not clear whether or not this indicates we've lost data in the statistics DB or if a bug in the job that updates the Gallery DB with the latest download counts has an issue where it is incorrectly aggregating the results."},{"Id":"10586979579","Type":"IssuesEvent","CreatedAt":"2019-10-08T20:57:34","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7557","RelatedDescription":"Closed issue \"[Icons] Rebuild registration\" (#7557) at NuGet/NuGetGallery","RelatedBody":"Once external icons are copied, we need to rebuild registration, so that icon URLs there point to the appropriate location in our storage."},{"Id":"10586977146","Type":"IssuesEvent","CreatedAt":"2019-10-08T20:57:13","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7479","RelatedDescription":"Closed issue \"[Icons] Job to ingest IconUrls\" (#7479) at NuGet/NuGetGallery","RelatedBody":"Replaces #7061.\r\n\r\nNeed a job that will run parallel to catalog2dnx and copy external icons into the flat container (so we have no chance of affecting the package publishing)."},{"Id":"10586974365","Type":"IssuesEvent","CreatedAt":"2019-10-08T20:56:50","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7478","RelatedDescription":"Closed issue \"[Icons] Gallery should warn when IconUrl is used\" (#7478) at NuGet/NuGetGallery","RelatedBody":"We need to get a warning when package specifies `iconUrl` but no `icon`.\r\n\r\n> &lt;iconUrl&gt; element will be deprecated, please consider switching to specifying the icon in the package. [Learn more](https://aka.ms/deprecateIconUrl)."},{"Id":"10586643351","Type":"IssuesEvent","CreatedAt":"2019-10-08T20:11:44","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/5831","RelatedDescription":"Closed issue \"Automatically delete empty accounts on owner request\" (#5831) at NuGet/NuGetGallery","RelatedBody":"There are multiple request for account deletion by users that have no packages. The deletion should be automatic in those cases."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10588618636","Type":"IssuesEvent","CreatedAt":"2019-10-09T02:45:47","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8672","RelatedDescription":"Opened issue \"Bless nuget.exe 5.3.0\" (#8672) at NuGet/Home","RelatedBody":"The checklist is as following:\r\n- [ ] Change the link https://dist.nuget.org/win-x86-commandline/latest/nuget.exe to point to 5.3.0\r\n- [ ] Merge PR in to master branch\r\n- [ ] Push necessary changes nuget.org"},{"Id":"10588112623","Type":"IssuesEvent","CreatedAt":"2019-10-09T00:36:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8615","RelatedDescription":"Closed issue \"Remove unnecessary comment referencing solved issue.\" (#8615) at NuGet/Home","RelatedBody":"There is the comment in RuntimeHelper.cs : 150 that is referencing issue that is already solved."},{"Id":"10587650040","Type":"IssuesEvent","CreatedAt":"2019-10-08T22:50:15","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8671","RelatedDescription":"Opened issue \"Support for OptProfV2 CI runs in Escrow mode\" (#8671) at NuGet/Home","RelatedBody":"In https://github.com/NuGet/Home/issues/8578 , we disabled OptProfV2 related CI tasks to unblock the NuGet 5.3 release on VS. Now, we want to re-enable them to provide training data for 16.4 release, even when escrow mode is on course.\r\n"},{"Id":"10586789197","Type":"IssuesEvent","CreatedAt":"2019-10-08T20:31:29","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8617","RelatedDescription":"Closed issue \"PR triggering for external contributors not working. \" (#8617) at NuGet/Home","RelatedBody":"See: https://github.com/NuGet/NuGet.Client/pull/3070\r\nThe labels are being set, yet https://devdiv.visualstudio.com/DevDiv/_build?definitionId=8118 shows no builds are being triggered."},{"Id":"10586442635","Type":"IssuesEvent","CreatedAt":"2019-10-08T19:45:18","Actor":"3F","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8644","RelatedDescription":"Closed issue \"Unnecessary NU1202. PackageReference versus Reference\" (#8644) at NuGet/Home","RelatedBody":"Hi,\r\n\r\nCan someone clarify NU1202 restriction? I still don't understand, Why this https://github.com/dotnet/standard/blob/master/docs/versions.md#net-standard-versions is not possible for nuget project?\r\n\r\nJust for the cases like this https://github.com/3F/MvsSln/pull/21 and other?\r\n\r\nWhy/ if **I can** like this:\r\n\r\n```xml\r\n<ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.1' \">\r\n  <Reference Include=\"Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\">\r\n    <HintPath>..\\packages\\microsoft.build.15.9.20\\lib\\net46\\Microsoft.Build.dll</HintPath>\r\n    <Private>True</Private>\r\n  </Reference>\r\n</ItemGroup>\r\n```\r\n\r\nBut **not** like this:\r\n\r\n```xml\r\n<ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.1' \">\r\n  <PackageReference Include=\"Microsoft.Build\" Version=\"15.9.20\" />\r\n</ItemGroup>\r\n```\r\n\r\nthis:\r\n```xml\r\n<ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard2.0' \">\r\n  <Reference Include=\"Microsoft.Build, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\">\r\n    <HintPath>..\\packages\\microsoft.build.16.3.0\\lib\\net472\\Microsoft.Build.dll</HintPath>\r\n    <Private>True</Private>\r\n  </Reference>\r\n</ItemGroup>\r\n```\r\n\r\nbut not just this:\r\n```xml\r\n<ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard2.0' \">\r\n  <PackageReference Include=\"Microsoft.Build\" Version=\"16.3.0\" />\r\n</ItemGroup>\r\n```\r\n\r\nThanks,\r\n\r\n\r\n//\r\nFrom 2015 (who remember me here) we're still actively using other ways with nuget packages due to some incomprehensible things like above.\r\n\r\nAnd looks like I personally still will use my portable GetNuTool together with vsSolutionBuildEvent scripts. Just because this **all works** fine <_<\r\n\r\n\r\n```\r\nNuGet Package Manager 5.2.0\r\nVisualStudio.16.Release/16.2.2+29209.62\r\n```\r\n\r\n```\r\nNuGet Package Manager 4.6.0\r\nVisualStudio.15.Release/15.9.16+28307.858\r\n```\r\n"},{"Id":"10586256988","Type":"IssuesEvent","CreatedAt":"2019-10-08T19:20:02","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8622","RelatedDescription":"Closed issue \"\"nuget.exe list [search terms]\" - behavior changed with nuget.org search improvements of August 2019\" (#8622) at NuGet/Home","RelatedBody":"`nuget list [search terms]` functionality allows searching for NuGet packages from the command line. This worked well upto 5.0.2, but in the version after that the list method ignores the search terms and will go on to list every single package in every package source.\r\n\r\n## Details about Problem\r\n\r\nProduct: NuGet.exe\r\n\r\nNuGet version: 5.3.0\r\n\r\nOS version: Windows 10\r\n\r\nWorked before? If so, with which NuGet version:\r\nYes, last worked in v5.0.2.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. `nuget.exe list Microsoft.Extensions.Configuration.Json`\r\n\r\n2. With v5.0.2 that will return immediately with about a dozen hits on the given package name. With any later version, this will list every package in the public repo, ignoring the search term.\r\n\r\n"},{"Id":"10585545799","Type":"IssuesEvent","CreatedAt":"2019-10-08T17:45:07","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8670","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Evaluate design options for supporting pin of transitive dependencies in CPVM \" (#8670) at NuGet/Home","RelatedBody":"Evaluate design options for supporting pin of transitive dependencies in CPVM \r\n"},{"Id":"10585523887","Type":"IssuesEvent","CreatedAt":"2019-10-08T17:42:08","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8669","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Dev design document for the dotnet commands\" (#8669) at NuGet/Home","RelatedBody":"Dev design document for the dotnet commands"},{"Id":"10585077512","Type":"IssuesEvent","CreatedAt":"2019-10-08T16:42:10","Actor":"asherber","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8668","RelatedDescription":"Opened issue \"nuget sources disable and case-sensitivity\" (#8668) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.2.0.6090\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):  win10 v1709 (16299.1268)\r\n\r\nWorked before? If so, with which NuGet version: Don't know\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. `nuget sources add -name FOO -source https://example.com`\r\n1. `nuget sources list` (confirm new source is there)\r\n1. `nuget sources disable -name foo` (nuget reports `Package source with Name: foo disabled successfully.`)\r\n1. `nuget sources list` (source is still enabled!)\r\n1. `nuget sources disable -name FOO` (nuget reports `Package source with Name: foo disabled successfully.`)\r\n1. `nuget sources list` (source is disabled)\r\n\r\nNote that `nuget sources remove -name foo` works just fine to remove a source whose name is `FOO`.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-10-09T05:30:48.6925795Z","RunDurationInMilliseconds":2528}