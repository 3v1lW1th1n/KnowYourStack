{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null},{"Title":"Welcoming SymbolSource to the .NET Foundation","PublishedOn":"2018-05-01T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to welcome SymbolSource.org to the .NET Foundation! SymbolSource has been providing a valuable service to the .NET Community for years with the ability to host Symbols for public NuGet...","Href":"https://devblogs.microsoft.com/nuget/welcoming-symbolsource-to-dot-net-foundation/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"9958566011","Type":"IssuesEvent","CreatedAt":"2019-07-05T21:49:00","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7109","RelatedDescription":"Closed issue \"[Azure Search] Db2AzureSearch gets throttled\" (#7109) at NuGet/NuGetGallery","RelatedBody":"Running `db2azuresearch` on an Azure Search index with \"Standard\" size and 1 partition will hit throttling limits:\r\n\r\n>  503: \"Failed to execute indexing request for this document because not enough resources were available. You may be reaching the limits of your provisioned capacity. Please try again later or adjust the number of replicas. See http://aka.ms/azure-search-throttling for more information.\"\r\n\r\nThis can be circumvented by lowering the `Db2AzureSearch:MaxConcurrentBatches` configuration to slow down the tool. We should consider the following after performance testing our final implementation:\r\n\r\n* Decrease the `Db2AzureSearch:MaxConcurrentBatches` configuration to slow down ingestion\r\n* Increase the Azure Search partition count to increases our write throughput capacity\r\n\r\nStack trace on throttling:\r\n\r\n```\r\nSystem.InvalidOperationException: Errors were found when indexing a batch. Up to 5 errors get logged. ---> Microsoft.Azure.Search.IndexBatchException: 503 of 1000 indexing actions in the batch failed. The remaining actions succeeded and modified the index. Check the IndexResponse property for the status of each index action.\r\n   \r\nat Microsoft.Azure.Search.DocumentsOperations.<DoIndexWithHttpMessagesAsync>d__23.MoveNext()\r\nat Microsoft.Azure.Search.DocumentsOperationsExtensions.<IndexAsync>d__13`1.MoveNext()\r\nat NuGet.Services.AzureSearch.Wrappers.DocumentsOperationsWrapper.<IndexAsync>d__2`1.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\Wrappers\\DocumentsOperationsWrapper.cs:line 22\r\nat NuGet.Services.AzureSearch.BatchPusher.<IndexAsync>d__15.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 208\r\nat NuGet.Services.AzureSearch.BatchPusher.<IndexAsync>d__15.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 274\r\nat NuGet.Services.AzureSearch.BatchPusher.<PushBatchesAsync>d__14.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 129\r\nat NuGet.Services.AzureSearch.BatchPusher.<PushBatchesAsync>d__13.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 102\r\nat NuGet.Services.AzureSearch.BatchPusher.<PushFullBatchesAsync>d__11.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\BatchPusher.cs:line 92\r\nat NuGet.Services.AzureSearch.Db2AzureSearch.Db2AzureSearchCommand.<ConsumeWorkAsync>d__14.MoveNext() in E:\\NuGet.Services.Metadata\\src\\NuGet.Services.AzureSearch\\Db2AzureSearch\\Db2AzureSearchCommand.cs:line 172\r\n```"},{"Id":"9952399662","Type":"PullRequestEvent","CreatedAt":"2019-07-04T21:28:29","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7319","RelatedDescription":"Merged pull request \"[2019.07.03][ReleasePrep]RI dev into master\" (#7319) at NuGet/NuGetGallery","RelatedBody":"Major changes:\r\nAB testing support for search\r\nAccountDeleter job initial implementation.\r\nNew Recaptcha on logged in Contact page.\r\nClean up of unused libraries.\r\nApplication Insights library fix.\r\nOther bug fixes."},{"Id":"9952155190","Type":"IssuesEvent","CreatedAt":"2019-07-04T20:05:18","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7320","RelatedDescription":"Opened issue \"[Azure Search] E2E tests fails against Azure Search when package available on a subset of replicas\" (#7320) at NuGet/NuGetGallery","RelatedBody":"https://nuget.visualstudio.com/NuGetBuild/_build/results?buildId=58535\r\n\r\nI think we need to poll a little longer than when the package is first seen to allow for other replicas to propagate."},{"Id":"9946100380","Type":"PullRequestEvent","CreatedAt":"2019-07-03T23:21:00","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7319","RelatedDescription":"Opened pull request \"[2019.07.03][ReleasePrep]RI dev into master\" (#7319) at NuGet/NuGetGallery","RelatedBody":"Major changes:\r\nAB testing support for search\r\nAccountDeleter job initial implementation.\r\nNew Recaptcha on logged in Contact page.\r\nClean up of unused libraries.\r\nApplication Insights library fix.\r\nOther bug fixes."},{"Id":"9945997688","Type":"IssuesEvent","CreatedAt":"2019-07-03T22:53:25","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7318","RelatedDescription":"Opened issue \"Adding owner to package with no owners shows error message\" (#7318) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nAdding an owner to a package with no owners succeeds but displays an `Internal Server Error` error message.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Find a package that's owned by a single account\r\n2. Delete the account that owns the package\r\n3. Add a new owner to the package\r\n\r\n### Expected behavior\r\nAdding a new owner to a package with no owners should succeed.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/737941/60629438-9ddcb880-9daa-11e9-96f0-06228d74cad0.png)\r\n\r\n### Additional context\r\nN/A"},{"Id":"9945834241","Type":"PullRequestEvent","CreatedAt":"2019-07-03T22:14:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7317","RelatedDescription":"Merged pull request \"Merge branch 'master' into dev\" (#7317) at NuGet/NuGetGallery","RelatedBody":"I introduced https://github.com/NuGet/NuGetGallery/commit/c2e5b1c4aa8677a87e70ddd11bad578d178c686d since the merge was non-trivial."},{"Id":"9945576478","Type":"PullRequestEvent","CreatedAt":"2019-07-03T21:22:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7317","RelatedDescription":"Opened pull request \"Merge branch 'master' into dev\" (#7317) at NuGet/NuGetGallery","RelatedBody":"I introduced https://github.com/NuGet/NuGetGallery/commit/c2e5b1c4aa8677a87e70ddd11bad578d178c686d since the merge was non-trivial."},{"Id":"9944339187","Type":"PullRequestEvent","CreatedAt":"2019-07-03T18:00:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7313","RelatedDescription":"Merged pull request \"[A/B Test 3] Integrate A/B test service with package search\" (#7313) at NuGet/NuGetGallery","RelatedBody":"Depends on https://github.com/NuGet/NuGetGallery/pull/7311\r\nAddress https://github.com/NuGet/NuGetGallery/issues/7166\r\n\r\nThis toggles the search client used for package search based on the user's cookie. This also toggles the telemetry emitted."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"9960872296","Type":"IssuesEvent","CreatedAt":"2019-07-06T20:57:37","Actor":"TFTomSun","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8307","RelatedDescription":"Opened issue \"PackageReference inside Build Package\" (#8307) at NuGet/Home","RelatedBody":"Hello,\r\ni know that package references inside build packages are explicitly disabled, to avoid endless restores. I read, that it might be possible to get package references inside build packages working by restoring a second time. Can somebody explain, whats the best way to do that? My scenario is simple: I have a build package and based on some conditions i want that a second package is referenced automatically. So making the second package as a dependency of the build package won't work, because of the conditional thing.\r\n\r\nMany thanks in advance."},{"Id":"9960446155","Type":"IssuesEvent","CreatedAt":"2019-07-06T16:39:59","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8300","RelatedDescription":"Closed issue \"Plugin:  NuGet waits full handshake timeout if plugin fails to launch or terminates early\" (#8300) at NuGet/Home","RelatedBody":""},{"Id":"9960421776","Type":"IssuesEvent","CreatedAt":"2019-07-06T16:27:00","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8285","RelatedDescription":"Closed issue \"Old bond incompatibility issue. While building bond rpc I am getting error.\" (#8285) at NuGet/Home","RelatedBody":"healthtypeforstoragemypersonal_types.h(24): fatal\r\n       error C1189: #error:  This file was generated by an older Bond compiler which is incompatible with current Bond library. Please regenerate with the latest Bond compiler."},{"Id":"9960050013","Type":"IssuesEvent","CreatedAt":"2019-07-06T13:03:35","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7202","RelatedDescription":"Closed issue \"[Mono] Error parsing solution file ... invalid image with Mono 5.14.0.177, msbuild 15.0 in Travis CI\" (#7202) at NuGet/Home","RelatedBody":"_From @denfromufa on August 14, 2018 3:47_\n\nThis is from gitter chat in Mono: https://gitter.im/mono/mono\r\n\r\n**Any idea why we are getting \"invalid image\" error from VS solution file under certain conditions? Seems to be working under .NET Core and .NET Framework, but not Mono.**\r\n\r\nhttps://travis-ci.org/pythonnet/pythonnet/jobs/415741698#L1874\r\n\r\n```\r\nCurrently running NuGet.exe 4.1.0.\r\nUpdating NuGet.exe to 4.7.1.\r\nUpdate successful.\r\nMSBuild auto-detection: using msbuild version '15.0' from '/usr/lib/mono/msbuild/15.0/bin'.\r\nError parsing solution file at /home/travis/build/pythonnet/pythonnet/pythonnet.sln: Invalid Image\r\n```\r\n\r\nKatelyn Gadd @kg 22:36\r\ninvalid image parsing sln makes it sound like it's having trouble loading msbuild assemblies\r\nMicrosoft/msbuild#3282 this is the same error message\r\nrather, the first part is the same. different exception\r\nso it is indeed caused by a managed exception\r\nhttps://github.com/rainersigwald/msbuild/commit/7960c8032a98990d5a4a96ae0e6be7f66327e24b#diff-af08e5d2c5235a664572f4581ba0e7c6R161 it looks like msbuild has had mono compatibility issues before\r\n\r\nDenis Akhiyarov @denfromufa 22:41\r\n@kg thanks for diagnostics, any easy workaround the get the CI builds going? I don't recall these errors last week for the same build configuration:\r\nhttps://travis-ci.org/pythonnet/pythonnet/builds/413267958\r\n\r\nKatelyn Gadd @kg 22:42\r\ni'm sorry, i don't know enough to recommend a solution right now. you might want to ping @rainersigwald to see if he has any ideas\r\nor you could file an issue since it's an exception in msbuild to see if they can suggest a fix. i think that error message is insufficient\r\nso it is a useful defect report in the sense of 'we should at least improve this error message'\r\nit looks like it only outputs exc.Message which is insufficient in this case\n\n_Copied from original issue: Microsoft/msbuild#3604_"},{"Id":"9960013211","Type":"IssuesEvent","CreatedAt":"2019-07-06T12:41:40","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8306","RelatedDescription":"Opened issue \"nuget version *\" (#8306) at NuGet/Home","RelatedBody":"<p>VSF_TYPE_MARKDOWNHI</p><p>I have started using the \n&lt;Version&gt;1.*&lt;/Version&gt; i.e. * option</p><p>For our internal packages. And this is a really really great option. Thanks!</p><p>The only issue, it shows in the updates for the Visual Studio IDE. Infact a V1.* thinks that the V1.0.0 of the package is installed in the IDE.\nSholdn't the IDE see the &quot;*&quot; in the version and understand it is the latest.?</p><p>Or should there be a checkbox that allows to enable / disable nugets with wildard  options?</p><p>Thanks.-.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/616851/nuget-version.html\nVSTS ticketId: 935378_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 24/06/2019, 00:37 AM (12 days ago): <markdown><p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n</markdown>\nAndy Zivkovic [MSFT] on 05/07/2019, 04:33 PM (13 hours ago): <markdown><p>With projects using <code>PackageReference</code>, NuGet is run on every build. In order to avoid a slow restore on every build, NuGet detects when restore input changes (which packages are requested, package versions). When the input is the same, it doesn’t actually restore, it keeps the previous restore’s results. Therefore, if a new version of a package was released after the last time your project went through a full restore, you won’t be using the latest version of the package any longer. You can force a full restore by using the “force” argument with either the nuget or dotnet cli, or simply deleting your project’s <code>obj/project.assets.json</code> file.</p>\n<p>Finally, Visual Studio’s Package Manager UI shows the version actually installed (resolved version), rather than the requested version.</p>\n<p>Does this answer your question?</p>\n</markdown>\nRik Svendsen Rose on 05/07/2019, 09:17 PM (8 hours ago): <p>HI</p><p>The VS package manager shows the minimum version, not the installed version when you use * wildcards in the csproj.</p><p>This is my point, it should maybe indicate that a wildcard is in use, to insure other developers done update manually by mistake...</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"9958846837","Type":"IssuesEvent","CreatedAt":"2019-07-05T23:54:00","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7991","RelatedDescription":"Closed issue \"Add support to <icon/> in .nuspec files\" (#7991) at NuGet/Home","RelatedBody":"`nuget.exe` and `dotnet.exe` should be capable to recognize the `<icon/>` element in the nuspec\r\n\r\nThe main issue is: https://github.com/NuGet/Home/issues/352\r\n"},{"Id":"9958663665","Type":"IssuesEvent","CreatedAt":"2019-07-05T22:25:29","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8305","RelatedDescription":"Opened issue \"Ambiguity with multiple files with the same license filename\" (#8305) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.0.2.5988\r\n\r\nOS version: Microsoft Windows [Version 10.0.18917.1000]\r\n\r\nWorked before? No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nTake the following nuspec:\r\n\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<package>\r\n  <metadata>\r\n    <id>test.license.nuspec</id>\r\n    <version>0.0.1</version>\r\n    <title>test.license.nuspec</title>\r\n    <authors>dominoFire</authors>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Package test for license file</description>\r\n    <releaseNotes>Test of license file</releaseNotes>\r\n    <copyright>Copyright 2019</copyright>\r\n    <tags>test license</tags>\r\n    <license type=\"file\">license.txt</license>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"cell\\*.txt\" />\r\n    <file src=\"wall\\*.txt\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\nSave the nuspec in the following folder structure:\r\n\r\n```\r\nC:.\r\n│   Package.nuspec\r\n│\r\n├───cell\r\n│       license.txt\r\n│       wawa.txt\r\n│\r\n└───wall\r\n        license.txt\r\n        xyz.txt\r\n```\r\n\r\nBoth files will be present in the nupkg but, it's not clear which file should be referred as the license file.\r\n"},{"Id":"9957578234","Type":"IssuesEvent","CreatedAt":"2019-07-05T17:23:43","Actor":"karann-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7127","RelatedDescription":"Closed issue \"You might still have a problem with VS\" (#7127) at NuGet/Home","RelatedBody":"@Rod-in-NM commented on [Tue Jul 17 2018](https://github.com/NuGet/docs.microsoft.com-nuget/issues/983)\n\nI have been struggling with this issue. I wasn't able to check in the project into TFVC. I talked with our TFS admin. He said that even though I had manually deleted the packages folder, VS 2017 still thought that the packages folder existed, at least as a part of the solution. I had to Undo packages and all of the files under it, before VS would let me check it in.\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: d965aea9-a6cc-06da-a347-6e8c89458c98\n* Version Independent ID: 6775f211-f4b6-6d0c-6f2e-6664b3e9721e\n* Content: [NuGet Packages and Source Control](https://docs.microsoft.com/en-us/nuget/consume-packages/packages-and-source-control#omitting-packages-with-team-foundation-version-control)\n* Content Source: [docs/consume-packages/Packages-and-Source-Control.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/consume-packages/Packages-and-Source-Control.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**\n\n"},{"Id":"9955522375","Type":"IssuesEvent","CreatedAt":"2019-07-05T11:18:48","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8304","RelatedDescription":"Opened issue \"Bug Bash][Test Failure] Suggest to disable all the operations in PM UI when executing commands in PMC and vice versa to avoid unnessisary error\" (#8304) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.3.0.6076\r\nVS Version: Master\\29104.19\r\nOS: Windows 10 RS4_Release 17134.1.180410-1804\r\n## Detailed repro steps so we can see the same problem\r\n1. Launch VS and create an ASP.NET Web Application (.NET Framework).\r\n2. Open PM UI of the project and the PMC.\r\n3. Operate on PM UI (e.g. click settings and press “Clear All NuGet Cache(s)” button) when executing a command (e.g. “Update-Package”) in PMC.\r\n## Expected\r\nAll the operations should be disabled in PM UI when executing commands in PMC and vice versa to avoid unnessisary error (like what we did in PMC while executing commands in PMC).\r\n## Actual\r\nAll the operations should be disabled in PM UI when executing commands in PMC and vice versa as below screenshot.\r\n![CrossOperationBringError](https://user-images.githubusercontent.com/20632625/60719193-7d069580-9f59-11e9-8fd0-8914df72b985.png)\r\n## Note\r\nIt is not a regression issue since it did repro on D15.9 28307.158 (Nuget Client 4.9.3.5777).\r\n\r\n\r\n"},{"Id":"9954371502","Type":"IssuesEvent","CreatedAt":"2019-07-05T08:13:43","Actor":"shalomshachne","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8303","RelatedDescription":"Opened issue \"nuget pack Illegal characters in path.\" (#8303) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): NuGet Version: 5.0.2.5988\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate): 2013\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):  Windows 7\r\n\r\nWorked before? If so, with which NuGet version: NuGet Version: 4.8.1.5435\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.    Use attached zipped project.  Note that on my machine, the project was located in C:\\dev\\NugetTest\r\n\r\n2.   nuget pack NugetTest.csproj\r\n\r\nOutput is:\r\nc:\\dev\\NugetTest>nuget pack\r\nAttempting to build package from 'NugetTest.csproj'.\r\nIllegal characters in path.\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\nNuGet Version: 5.0.2.5988\r\nAttempting to build package from 'NugetTest.csproj'.\r\nIllegal characters in path.\r\nSystem.ArgumentException: Illegal characters in path.\r\n   at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at NuGet.CommandLine.MsBuildUtility.GetMSBuild()\r\n   at NuGet.CommandLine.MsBuildUtility.GetMsBuildToolset(String userVersion, IConsole console)\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at NuGet.CommandLine.PackCommand.<ExecuteCommand>b__80_0()\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.Commands.PackCommandRunner.BuildPackage()\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n\r\nNote: there is no error when running with previous version of Nuget (as noted above).\r\n\r\n### Sample Project\r\n\r\n[NugetTest.zip](https://github.com/NuGet/Home/files/3361741/NugetTest.zip)\r\n\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"9950157778","Type":"IssuesEvent","CreatedAt":"2019-07-04T13:14:13","Actor":"anangaur","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8301","RelatedDescription":"Closed issue \"How to deprecate the nuget package in nuget.org\" (#8301) at NuGet/Home","RelatedBody":"I want to deprecate the nuget packages and add the tag as deprecated and provide the alternative package link on that deprecated package in nuget.org.\r\n\r\nCan any one help me on this?\r\n\r\nI have tried this [feed ](https://github.com/NuGet/Home/wiki/Deprecate-packages) but in my nuget.org profile does not have 'Deprecate package(s)' section.\r\n\r\nWhat can i do now for deprecate the package? \r\n"},{"Id":"9949024691","Type":"IssuesEvent","CreatedAt":"2019-07-04T10:16:34","Actor":"RobSwDev","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8302","RelatedDescription":"Opened issue \"Nuget restore on VS solution open throws exceptions\" (#8302) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version: Win 10 Enterprise (1709) 16299.1217\r\nVisual Studio 2017 15.9.13\r\n\r\nWe recently changed our projects to the sdk-style format (excluding 3 Winforms projects). Since the change, Nuget restore throws several exceptions when opening the solution.\r\n(I understand that Nuget restore is called automatically when the solution opens if you have sdk-style projects)\r\n\r\nError occurred while restoring NuGet packages: System.InvalidOperationException: The operation failed as details for project XYZZY  could not be loaded.\r\n   at NuGet.PackageManagement.VisualStudio.NetCorePackageReferenceProject.GetPackageSpecsAsync(DependencyGraphCacheContext context)\r\n   at NuGet.PackageManagement.DependencyGraphRestoreUtility.<GetSolutionRestoreSpec>d__6.MoveNext()\r\n\r\nManual restore (via the solution context menu) is disabled for 60-90 seconds while this happens, but after that, manual restore is very fast (everything is up to date).\r\nIf I close and open the solution, it happens again, despite the fact that nothing has changed.\r\n\r\nWe have 150 projects in our solution. The nuget exception always occurs on project XYZZY for me (though a colleague sees different projects). This project is a very simple one, with 1 nuget dependency (that every project has) and 1 project dependency.\r\n"},{"Id":"9948369973","Type":"IssuesEvent","CreatedAt":"2019-07-04T08:46:29","Actor":"kmuthukumar23","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8301","RelatedDescription":"Opened issue \"How to deprecate the nuget package in nuget.org\" (#8301) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nI want to deprecate the nuget packages and add the tag as deprecated and provide the alternative package link on that deprecated package in nuget.org.\r\n\r\nCan any one help me on this?\r\n\r\nI have tried this [feed ](https://github.com/NuGet/Home/wiki/Deprecate-packages) but in my nuget.org profile does not have 'Deprecate package(s)' section.\r\n\r\nWhat can i do now for deprecate the package? \r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating the… https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert 🚨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating th… https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null},{"Id":"1108063773363826688","CreatedAt":"2019-03-19T17:52:45+00:00","UserScreenname":"nuget","Text":"NuGet talk at the MVP Summit by @karann9 \n#MVPBuzz #MvpSummit https://t.co/P43G7wRRkX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-07-07T05:30:41.0504201Z","RunDurationInMilliseconds":1971}