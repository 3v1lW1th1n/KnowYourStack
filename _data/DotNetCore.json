{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2019 Preview of Quality Rollup","PublishedOn":"2019-02-19T23:42:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the February 2019 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Addresses an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019","PublishedOn":"2019-02-19T18:22:20+00:00","CommentsCount":2,"FacebookCount":0,"Summary":".NET Core 1.0 was released on June 27, 2016 and .NET Core 1.1 was released on November 16, 2016. As an LTS release, .NET Core 1.0 is supported for three years. .NET Core 1.1 fits into the same support...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-core-1-0-and-1-1-will-reach-end-of-life-on-june-27-2019/","RawContent":null},{"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","PublishedOn":"2019-02-15T14:03:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Final Update 2/19/19 @1:30 PM (PST): This advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/","RawContent":null},{"Title":"Microsoft’s Developer Blogs are Getting an Update","PublishedOn":"2019-02-13T19:49:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In the coming days, we’ll be moving our developer blogs to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. This...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/microsofts-developer-blogs-are-getting-an-update/","RawContent":null},{"Title":"Help us make the .NET Architecture guides better for you!","PublishedOn":"2019-02-13T15:47:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the last couple of years, we worked with experts to create some incredible architecture guides &#38; reference samples for .NET developers. We focused on Microservices Architecture, Modernizing...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/help-us-make-the-net-architecture-guides-better-for-you/","RawContent":null},{"Title":".NET Framework February 2019 Security and Quality Rollup","PublishedOn":"2019-02-13T14:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated: February 19, 2019 The advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core February 2019 Updates – 1.0.14, 1.1.11, 2.1.8 and 2.2.2","PublishedOn":"2019-02-12T18:30:20+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core February 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes. .NET Core...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/12/net-core-february-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.10 – Machine Learning for .NET","PublishedOn":"2019-02-08T07:07:18+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/07/announcing-ml-net-0-10-machine-learning-for-net/","RawContent":null},{"Title":"Submit to the Applied F# Challenge!","PublishedOn":"2019-02-05T16:17:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Lena Hall, a Senior Cloud Developer Advocate at Microsoft. F# Software Foundation has recently announced their new initiative — Applied F# Challenge! We encourage you to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/05/submit-to-the-applied-f-challenge/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 2","PublishedOn":"2019-01-29T17:57:06+00:00","CommentsCount":52,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 2. It includes new features in .NET Core 3.0 and C# 8, in addition to the large number of new features in Preview 1. ASP.NET Core 3.0 Preview 2  is...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/29/announcing-net-core-3-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"11465516205","Type":"IssuesEvent","CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11452253839","Type":"IssuesEvent","CreatedAt":"2020-02-06T13:21:11","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Reopened issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11358893853","Type":"IssuesEvent","CreatedAt":"2020-01-25T17:36:29","Actor":"oskardudycz","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161) at dotnet/foundation","RelatedBody":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation."},{"Id":"11358890799","Type":"IssuesEvent","CreatedAt":"2020-01-25T17:35:17","Actor":"oskardudycz","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Opened issue \"Marten\" (#161) at dotnet/foundation","RelatedBody":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation."},{"Id":"11357395218","Type":"IssuesEvent","CreatedAt":"2020-01-25T04:38:47","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160) at dotnet/foundation","RelatedBody":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~"},{"Id":"11357323121","Type":"IssuesEvent","CreatedAt":"2020-01-25T03:54:25","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Opened issue \"Website down\" (#160) at dotnet/foundation","RelatedBody":"Browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~"},{"Id":"11357320828","Type":"IssuesEvent","CreatedAt":"2020-01-25T03:52:51","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11334200867","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:30","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Merged pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"11334196288","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:01","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Merged pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"11334180047","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:07:14","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Merged pull request \"Update Teams Link\" (#156) at dotnet/foundation","RelatedBody":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`"},{"Id":"11334176612","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:52","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Merged pull request \"Link Reactive Extensions to new github repo\" (#157) at dotnet/foundation","RelatedBody":""},{"Id":"11334171592","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:20","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Merged pull request \"Add Akka.NET to DNF\" (#158) at dotnet/foundation","RelatedBody":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11491466131","Type":"IssuesEvent","CreatedAt":"2020-02-11T19:02:45","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Opened issue \"February 2020 .NET Updates\" (#151) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11275368710","Type":"IssuesEvent","CreatedAt":"2020-01-14T20:37:01","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Opened issue \"January 2020 .NET Updates\" (#150) at dotnet/announcements","RelatedBody":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1-download.md) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2-download.md) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15-download.md) )\r\n\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11274184940","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:14","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149) at dotnet/announcements","RelatedBody":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11274183716","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:05","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11214612804","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:02:39","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Opened issue \".NET Core 2.2 has reached end of life\" (#147) at dotnet/announcements","RelatedBody":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11493678918","Type":"PullRequestEvent","CreatedAt":"2020-02-11T23:36:41","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Opened pull request \"Port dotnet/runtime#31904 to release/3.1\" (#28013) at dotnet/coreclr","RelatedBody":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding"},{"Id":"11492557750","Type":"PullRequestEvent","CreatedAt":"2020-02-11T21:13:59","Actor":"omajid","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Opened pull request \"Fix build on systems with glibc >= 2.30\" (#28012) at dotnet/coreclr","RelatedBody":"On newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off."},{"Id":"11484061709","Type":"PullRequestEvent","CreatedAt":"2020-02-11T02:08:37","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Opened pull request \"WIP -- Port linuxdac from master\" (#28011) at dotnet/coreclr","RelatedBody":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is not intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon "},{"Id":"11480374484","Type":"PullRequestEvent","CreatedAt":"2020-02-10T17:16:31","Actor":"jeffschwMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27288","RelatedDescription":"Closed pull request \"[3.0 port] Fix LTTng build for build environments with older liblttng-ust-dev\" (#27288) at dotnet/coreclr","RelatedBody":"### Description\r\nThis fixes #27024.\r\n\r\n#### One-line summary:\r\nOfficial builds of .NET Core SDKs have broken LTTng support due to an unexpected macro redefinition causing the compiler to optimize out the bodies of LTTng event sinks. \r\n\r\n#### More detailed description:\r\n\r\nFor all of our event sinks for LTTng, we wrap the call to fire events with `tracepoint_enabled`, which is a macro defined in a header file liblttng-ust-dev. This macro checks whether a particular probe point is enabled before we fire an event, so that we're not unnecessarily making the call to fire events through LTTng when nobody is listening to it.\r\n\r\nFor environments that don't want to build using LTTng, we have a macro definition for tracepoint_enabled, which used to be defined as:\r\n\r\n```#define tracepoint_enabled(provider, name) TRUE```\r\n\r\nThis meant that for custom CoreCLR builds that were produced without LTTng library enabled, the runtime will always try to fire all events only to find out nobody is listening. So this behavior was changed to\r\n\r\n```#define tracepoint_enabled(provider, name) FALSE```\r\n\r\nUnfortunately this caused the compiler to optimize out the bodies for all the event sinks when such thing happens. This would be fine for custom builds that didn't want LTTng since they become no-ops. However, some build environments that we still use, we use old enough distributions that have old LTTng libraries, specifically CentOS 6 which uses liblttng-ust-dev version 2.4. This particular version of the library doesn't have the definition of tracepoint_enabled in its header, so we hit this bad behavior in builds produced in CentOS 6 container.\r\n\r\nEven more unfortunately, CentOS 6 is the distro we use for our official SDK build containers for Linux, so this caused LTTng support in CoreCLR to regress in the official builds.\r\n\r\nThis fix changes the macro definition of tracepoint_enabled to use `XplatEventLogger::IsEventLoggingEnabled` method, which checks if the environment variable we require for using LTTng tracing (`COMPlus_EnableEventLog`) is enabled.\r\n\r\n### Customer Impact\r\nTracing using LTTng has been impacted. Any customer using LTTng for tracing their application is impacted.\r\n\r\n### Regression\r\nYes. From 2.x -> 3.x. \r\n\r\n### Risk\r\nLow - changes are small and have been tested across variety of Linux distros that are affected by the code change (it doesn't affect non-Linux runtimes).\r\n\r\n### Tests\r\nTests for using LTTng and verifying the result traces have been written and were provided to vendors as part of the weekly diagnostics tool tests. https://github.com/dotnet/diagnostics/issues/571 was filed to track the work item for adding automated testing for LTTng."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"11493588275","Type":"PullRequestEvent","CreatedAt":"2020-02-11T23:23:57","Actor":"sebastienros","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13220","RelatedDescription":"Opened pull request \"Fix WindowsDesktop runtime download url\" (#13220) at dotnet/cli","RelatedBody":"Fixes https://github.com/dotnet/sdk/issues/4237"},{"Id":"11467111759","Type":"PullRequestEvent","CreatedAt":"2020-02-08T02:12:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13219","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13219) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200207.4\r\n- **Date Produced**: 2/8/2020 12:39 AM\r\n- **Commit**: 130be5a782f6fa8410627a8fddd3e2988bde1c71\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20107.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"11466418607","Type":"PullRequestEvent","CreatedAt":"2020-02-07T22:58:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13218","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13218) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6422\r\n- **Date Produced**: 2/7/2020 1:55 AM\r\n- **Commit**: 7bac015acc5b7e0161a058c8febc98abe2386d51\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-rtm.6422\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n\r\n\r\n"},{"Id":"11456824939","Type":"PullRequestEvent","CreatedAt":"2020-02-06T22:05:41","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13219","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13219) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200206.1\r\n- **Date Produced**: 2/6/2020 8:57 PM\r\n- **Commit**: 261e44a129f73bec98adf6eb3b45556f121316e8\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20106.1\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11456539387","Type":"PullRequestEvent","CreatedAt":"2020-02-06T21:27:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13218","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13218) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6418\r\n- **Date Produced**: 2/6/2020 1:21 AM\r\n- **Commit**: a746cd6a01dfd22187375ee9c5a0d9b98676020a\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-rtm.6418\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n"},{"Id":"11448230446","Type":"PullRequestEvent","CreatedAt":"2020-02-06T02:35:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13217","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13217) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200205.6\r\n- **Date Produced**: 2/6/2020 1:47 AM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20105.6\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"11493567674","Type":"IssuesEvent","CreatedAt":"2020-02-11T23:21:07","Actor":"merarischroeder","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1704","RelatedDescription":"Opened issue \"Why is System.Threading.Task.TaskToApm internal?\" (#1704) at dotnet/standard","RelatedBody":"I saw it being used here today https://github.com/dotnet/runtime/blob/master/src/libraries/System.Net.Quic/src/System/Net/Quic/QuicStream.cs\r\n\r\nI'm building a few stream types and I would like to define a stream wrapper too. I would have thought, with the advent of async Tasks this kind of tooling would have been made available to all programmers."},{"Id":"11488121034","Type":"PullRequestEvent","CreatedAt":"2020-02-11T13:20:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1703","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1703) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11487944991","Type":"PullRequestEvent","CreatedAt":"2020-02-11T13:00:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1703","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1703) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11477907239","Type":"PullRequestEvent","CreatedAt":"2020-02-10T13:06:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1702","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1702) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200209.1\r\n- **Date Produced**: 2/9/2020 2:00 PM\r\n- **Commit**: b0e8d3944155f94f83deea8afe025debe369e69f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20109.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11477865344","Type":"PullRequestEvent","CreatedAt":"2020-02-10T13:01:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1702","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1702) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200209.1\r\n- **Date Produced**: 2/9/2020 2:00 PM\r\n- **Commit**: b0e8d3944155f94f83deea8afe025debe369e69f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20109.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11471759168","Type":"PullRequestEvent","CreatedAt":"2020-02-09T13:21:02","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1701","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1701) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200208.2\r\n- **Date Produced**: 2/9/2020 1:00 AM\r\n- **Commit**: 490732cf6dcb77631fee038da1af0df1518c2fb0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20108.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11471704362","Type":"PullRequestEvent","CreatedAt":"2020-02-09T13:00:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1701","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1701) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200208.2\r\n- **Date Produced**: 2/9/2020 1:00 AM\r\n- **Commit**: 490732cf6dcb77631fee038da1af0df1518c2fb0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20108.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11470145995","Type":"IssuesEvent","CreatedAt":"2020-02-09T00:28:01","Actor":"dmitriyse","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1700","RelatedDescription":"Opened issue \"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+\" (#1700) at dotnet/standard","RelatedBody":"The first framework that provides NetStandard 2.1 is NetCoreApp 3.0.\r\nSo NetStandard 2.1 have no limitations in adding API from .NetCoreApp 3.0\r\n\r\nDespite some useful ```TheadPool``` methods are missing in the .Net Standard 2.1.\r\nFor example:\r\n```\r\n public static bool UnsafeQueueUserWorkItem<TState>(Action<TState> callBack, TState state, bool preferLocal)\r\n```\r\nthese methods are mandatory for the efficient implementation of the ```IValueTaskSource```\r\n\r\nReal life case:\r\nThe ```ManualResetValueTaskSourceCore<TResult>``` included into NetStandard 2.1, but if you try to copy-paste its sources and modernize for your needs  \r\nyou will unable to do it being NetStandard 2.1 library, you need to upgrade to NetCoreApp 3.0.\r\nIf upgrade to NetCoreApp 3.0 is unacceptable then you need to have inefficient implementation - very disappointing problem where you don't expect it."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"11491834605","Type":"PullRequestEvent","CreatedAt":"2020-02-11T19:46:12","Actor":"omajid","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42853","RelatedDescription":"Opened pull request \"WIP: Dummy commit to see ci status\" (#42853) at dotnet/corefx","RelatedBody":"just want to see the status of ci out of the box"},{"Id":"11491108520","Type":"PullRequestEvent","CreatedAt":"2020-02-11T18:21:07","Actor":"omajid","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42852","RelatedDescription":null,"RelatedBody":"This is a cherry-pick of:\r\n\r\n- #39633\r\n- #39686"},{"Id":"11491108220","Type":"PullRequestEvent","CreatedAt":"2020-02-11T18:21:05","Actor":"omajid","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42852","RelatedDescription":"Closed pull request \"[release/3.1] Add cgroup2 support\" (#42852) at dotnet/corefx","RelatedBody":"This is a cherry-pick of:\r\n\r\n- #39633\r\n- #39686"},{"Id":"11490916241","Type":"PullRequestEvent","CreatedAt":"2020-02-11T17:58:08","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42850","RelatedDescription":"Closed pull request \"validating build\" (#42850) at dotnet/corefx","RelatedBody":""},{"Id":"11490221559","Type":"PullRequestEvent","CreatedAt":"2020-02-11T16:43:44","Actor":"omajid","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42852","RelatedDescription":"Opened pull request \"[release/3.1] Add cgroup2 support\" (#42852) at dotnet/corefx","RelatedBody":"This is a cherry-pick of:\r\n\r\n- #39633\r\n- #39686"},{"Id":"11483985381","Type":"PullRequestEvent","CreatedAt":"2020-02-11T01:50:20","Actor":"tgani-msft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42851","RelatedDescription":"Opened pull request \"Port commit cef57de93bab815726f860f79195227c65e4fce5 from dotnet/runt…\" (#42851) at dotnet/corefx","RelatedBody":"Port commit cef57de93bab815726f860f79195227c65e4fce5 from dotnet/runtime (5.0) to dotnet/corefx (3.1).\r\n\r\ncommit cef57de93bab815726f860f79195227c65e4fce5\r\nAuthor: Tanveer Gani <45886079+tgani-msft@users.noreply.github.com>\r\nDate:   Thu Jan 30 10:28:26 2020 -0800\r\n\r\n    Add attribute to support inline namespaces in C++/CLI. (#781)\r\n\r\n    * Add attribute to support inline namespaces in C++/CLI.\r\n\r\n    A new assembly-scope custom attribute\r\n\r\n    [CppInlineNamespace(string dottedName)]\r\n\r\n    has been added to implement inline namespaces in C++/CLI. For every\r\n    inline namespace encountered in a translation unit, the C++ compiler\r\n    will emit this attribute with the fully scoped name, in CLR dotted\r\n    form, as the argument for the attribute.\r\n\r\n    * Add [CppInlineNamespace] to refs."},{"Id":"11483652302","Type":"PullRequestEvent","CreatedAt":"2020-02-11T00:35:56","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42850","RelatedDescription":"Opened pull request \"validating build\" (#42850) at dotnet/corefx","RelatedBody":""},{"Id":"11483498619","Type":"PullRequestEvent","CreatedAt":"2020-02-11T00:05:21","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42849","RelatedDescription":"Opened pull request \"[Release/2.1] Adding .NET Framework asset on OOB packages\" (#42849) at dotnet/corefx","RelatedBody":"Contributes to https://github.com/dotnet/runtime/issues/1625\r\n\r\nPTAL: @ericstj @ahsonkhan \r\n\r\nFYI: @Dmitry-Matveev after this fix is in and shipped, then App Insights will be able to depend on the new version of System.Memory which will stop requiring facades to get binplaced and binding redirects to be required.\r\n\r\nThe changes included in this PR will fix all packages that are supported in .Net Framework, currently provide a .NET Standard asset for one .NET Framework version, and we no longer build on other branches (master or release/3.1). The thing left to do before this goes in, is to analyze the packages that had a reference to one of these and no longer build on other branches, so that we produce a new version of them referencing the new packages."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"11495525629","Type":"PullRequestEvent","CreatedAt":"2020-02-12T05:09:13","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41602","RelatedDescription":"Opened pull request \"Fix misc build badges on Readme\" (#41602) at dotnet/roslyn","RelatedBody":"* Swapped the 'Spanish' and 'Mono' column headers\r\n* Changes 'Linux_Test' mono to 'Linux_Test coreclr'"},{"Id":"11495523421","Type":"IssuesEvent","CreatedAt":"2020-02-12T05:08:44","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41601","RelatedDescription":"Opened issue \"[Regression] Add items from unimported namespaces does not sort items\" (#41601) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 16.6.0 Preview 1.0 [29811.143.master]\r\n\r\nBut this could repro on 16.5, but I don't have build.\r\n\r\n**Steps to Reproduce**:\r\n```\r\nusing System;\r\n\r\nnamespace ConsoleApp189\r\n{\r\n  class Program\r\n  {\r\n    static void Main(string[] args)\r\n    {\r\n      AppliesTo\r\n    }\r\n  }\r\n\r\n  class AppliesTo { }\r\n  class AppliesToA { }\r\n\r\n}\r\n\r\nnamespace Another\r\n{\r\n  class AppliesTo { }\r\n  class AppliesToA { }\r\n}\r\n\r\n```\r\n**Expected Behavior**:\r\nOrder to be in:\r\n\r\nAppliesTo\r\nAppliesTo (Another)\r\nAppliesToA\r\nAppliesToA (Another)\r\n\r\n**Actual Behavior**:\r\n\r\nOrder switches between:\r\n\r\nAppliesTo (Another)\r\nAppliesTo\r\nAppliesToA (Another)\r\nAppliesToA\r\n\r\nAppliesTo (Another)\r\nAppliesToA (Another)\r\nAppliesTo\r\nAppliesToA\r\n\r\n![Order](https://user-images.githubusercontent.com/1103906/74301662-debc9700-4da7-11ea-8978-23e10b359c43.gif)"},{"Id":"11495483704","Type":"IssuesEvent","CreatedAt":"2020-02-12T05:00:14","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41600","RelatedDescription":"Opened issue \"Incorrect result is produced by DataFlowAnalysis.DataFlowsOut when local functions are involved\" (#41600) at dotnet/roslyn","RelatedBody":"```\r\n\r\n        [Fact]\r\n        public void Test1()\r\n        {\r\n            var source =\r\n@\"\r\nclass P\r\n{\r\n    static void Main()\r\n    {\r\n        bool Dummy(params object[] x) {return true;}\r\n\r\n        try {}\r\n        catch when (TakeOutParam(out var x1) && x1 > 0)\r\n        {\r\n            Dummy(x1);\r\n        }\r\n\r\n        try {}\r\n        catch when (Dummy(TakeOutParam(out var x14), \r\n                            TakeOutParam(out var x14), // 2\r\n                            x14))\r\n        {\r\n            Dummy(x14);\r\n        }\r\n\r\n        static bool TakeOutParam(out int x) \r\n        {\r\n            x = 123;\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\";\r\n            var compilation = CreateCompilationWithMscorlib45(source, options: TestOptions.ReleaseDll, parseOptions: TestOptions.Regular);\r\n\r\n            var tree = compilation.SyntaxTrees.Single();\r\n            var model = compilation.GetSemanticModel(tree);\r\n\r\n            var node = tree.GetRoot().DescendantNodes().OfType<InvocationExpressionSyntax>().First();\r\n            Assert.Equal(\"TakeOutParam(out var x1)\", node.ToString());\r\n            var flow = model.AnalyzeDataFlow(node);\r\n            Assert.Equal(\"x1\", flow.DataFlowsOut.Single().Name);\r\n        }\r\n```\r\n\r\nExpected: ```x1``` is returned\r\n\r\nObserved: ```x1``` and ```x14``` are returned.\r\n```\r\n[xUnit.net 00:00:00.01] xUnit.net VSTest Adapter v2.4.1-pre.build.4059 (64-bit .NET Core 3.1.1)\r\n[xUnit.net 00:00:02.27]   Starting:    Microsoft.CodeAnalysis.CSharp.Semantic.UnitTests\r\nThe active test run was aborted. Reason: Test host process crashed : Process terminated. Assertion failed.\r\n   at Microsoft.CodeAnalysis.CSharp.DataFlowsOutWalker.Analyze(CSharpCompilation compilation, Symbol member, BoundNode node, BoundNode firstInRegion, BoundNode lastInRegion, HashSet`1 unassignedVariables, ImmutableArray`1 dataFlowsIn) in F:\\GitHub\\roslyn\\src\\Compilers\\CSharp\\Portable\\FlowAnalysis\\DataFlowsOutWalker.cs:line 40\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpDataFlowAnalysis.get_DataFlowsOut() in F:\\GitHub\\roslyn\\src\\Compilers\\CSharp\\Portable\\FlowAnalysis\\CSharpDataFlowAnalysis.cs:line 156\r\n   at Microsoft.CodeAnalysis.CSharp.UnitTests.OutVarTests.Test1() in F:\\GitHub\\roslyn\\src\\Compilers\\CSharp\\Test\\Semantic\\Semantics\\OutVarTests.cs:line 35332\r\n```\r\n\r\nNo repro when ```TakeOutParam``` and ```Dummy``` are changed to be real methods vs. local functions.  Still reproduces when only ```TakeOutParam``` is converted, but ```Dummy``` remains a local function."},{"Id":"11495466836","Type":"PullRequestEvent","CreatedAt":"2020-02-12T04:56:50","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41571","RelatedDescription":"Closed pull request \"Merge master to features/local-function-attributes\" (#41571) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11495346764","Type":"PullRequestEvent","CreatedAt":"2020-02-12T04:30:40","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41570","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#41570) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"11494640922","Type":"PullRequestEvent","CreatedAt":"2020-02-12T02:14:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7974","RelatedDescription":"Merged pull request \"Wasm: TFM to netstandard2.0 to allow upgrade of LLVMSharp\" (#7974) at dotnet/corert","RelatedBody":"Changes the TFM from netstandard 1.6 to 2.0 so that we can upgrade LLVMSharp to 9.0.0-beta which supports netstandard2.0 only.  Upgrade to LLVMSharp 9 would allow upgrade to LLVM Wasm backend which is the new default in Emscripten."},{"Id":"11485983562","Type":"PullRequestEvent","CreatedAt":"2020-02-11T09:01:36","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7975","RelatedDescription":"Merged pull request \"Avoid creating constructed EEType for type comparison\" (#7975) at dotnet/corert","RelatedBody":"Make it so that `typeof(X) == typeof(Y)` doesn't result in vtable of X and Y to be allocated.\r\n\r\nThis is actually two things: a slight refactoring of `UsageBasedMetadataManager` and the actual fix.\r\n\r\nThe refactoring:\r\n* Make it so that `UsageBasedMetadataManager` can be used as a replacement for `EmptyMetadataManager`. Empty metadata manager was generating pretty much the same outputs as usage based manager with a fully blocked policy, with the only exception being type loader templates. I'm adding a temporary workaround to keep the outputs the same. We need to think about the right logic to generate templates - then the workaround can be deleted.\r\n* We were not blocking metadata for `System.__Canon`. Fixed things up to make it so.\r\n\r\nActual fix:\r\n* Do not automatically consider LDTOKEN references from code type construction events, but ask the metadata manager.\r\n* Have metadata manager use the reflection scanner to decide whether to do the upgrade from necessary to constructed.\r\n* This extension point can potentially be outsourced to an outside component that computes reflectability."},{"Id":"11480589408","Type":"PullRequestEvent","CreatedAt":"2020-02-10T17:41:03","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7978","RelatedDescription":"Merged pull request \"Add IlcSystemModule property\" (#7978) at dotnet/corert","RelatedBody":"to control which module hold basetypes.\r\n\r\nInspired by required usage\r\nfrom https://github.com/MichalStrehovsky/SeeSharpSnake/pull/13"},{"Id":"11479776581","Type":"PullRequestEvent","CreatedAt":"2020-02-10T16:15:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7976","RelatedDescription":"Merged pull request \"Narrow down contents of ExactMethodInstantiations table\" (#7976) at dotnet/corert","RelatedBody":"We don't need to generate entries for all generic methods we compiled, just a subset."},{"Id":"11479764240","Type":"PullRequestEvent","CreatedAt":"2020-02-10T16:14:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7977","RelatedDescription":"Merged pull request \"Match `Type.operator==` with CoreCLR\" (#7977) at dotnet/corert","RelatedBody":"Runtime implemented types are never equal to non-runtime implemented types."},{"Id":"11476497502","Type":"PullRequestEvent","CreatedAt":"2020-02-10T10:11:12","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7973","RelatedDescription":"Merged pull request \"Thread-safe EqualityCompare singleton\" (#7973) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/runtime/pull/31990 to CoreRT"},{"Id":"11476169188","Type":"PullRequestEvent","CreatedAt":"2020-02-10T09:32:48","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7978","RelatedDescription":"Opened pull request \"Add IlcSystemModule property\" (#7978) at dotnet/corert","RelatedBody":"to control which module hold basetypes.\r\n\r\nInspired by required usage\r\nfrom https://github.com/MichalStrehovsky/SeeSharpSnake/pull/13"},{"Id":"11475875111","Type":"PullRequestEvent","CreatedAt":"2020-02-10T08:56:12","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7977","RelatedDescription":"Opened pull request \"Match `Type.operator==` with CoreCLR\" (#7977) at dotnet/corert","RelatedBody":"Runtime implemented types are never equal to non-runtime implemented types."},{"Id":"11475873636","Type":"PullRequestEvent","CreatedAt":"2020-02-10T08:56:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7976","RelatedDescription":"Opened pull request \"Narrow down contents of ExactMethodInstantiations table\" (#7976) at dotnet/corert","RelatedBody":"We don't need to generate entries for all generic methods we compiled, just a subset."},{"Id":"11475871748","Type":"PullRequestEvent","CreatedAt":"2020-02-10T08:55:46","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7975","RelatedDescription":"Opened pull request \"Avoid creating constructed EEType for type comparison\" (#7975) at dotnet/corert","RelatedBody":"Make it so that `typeof(X) == typeof(Y)` doesn't result in vtable of X and Y to be allocated.\r\n\r\nThis is actually two things: a slight refactoring of `UsageBasedMetadataManager` and the actual fix.\r\n\r\nThe refactoring:\r\n* Make it so that `UsageBasedMetadataManager` can be used as a replacement for `EmptyMetadataManager`. Empty metadata manager was generating pretty much the same outputs as usage based manager with a fully blocked policy, with the only exception being type loader templates. I'm adding a temporary workaround to keep the outputs the same. We need to think about the right logic to generate templates - then the workaround can be deleted.\r\n* We were not blocking metadata for `System.__Canon`. Fixed things up to make it so.\r\n\r\nActual fix:\r\n* Do not automatically consider LDTOKEN references from code type construction events, but ask the metadata manager.\r\n* Have metadata manager use the reflection scanner to decide whether to do the upgrade from necessary to constructed.\r\n* This extension point can potentially be outsourced to an outside component that computes reflectability."},{"Id":"11472684457","Type":"PullRequestEvent","CreatedAt":"2020-02-09T18:43:01","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7974","RelatedDescription":"Opened pull request \"Wasm: TFM to netstandard2.0 to allow upgrade of LLVMSharp\" (#7974) at dotnet/corert","RelatedBody":"Changes the TFM from netstandard 1.6 to 2.0 so that we can upgrade LLVMSharp to 9.0.0-beta which supports netstandard2.0 only.  Upgrade to LLVMSharp 9 would allow upgrade to LLVM Wasm backend which is the new default in Emscripten."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"11493814821","Type":"PullRequestEvent","CreatedAt":"2020-02-11T23:56:48","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/10632","RelatedDescription":"Opened pull request \"Add files to sign check exclusion list\" (#10632) at dotnet/sdk","RelatedBody":""},{"Id":"11493435041","Type":"IssuesEvent","CreatedAt":"2020-02-11T23:03:25","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10631","RelatedDescription":"Opened issue \"dotnet-install -Channel 3.1 -Runtime aspnetcore fail\" (#10631) at dotnet/sdk","RelatedBody":"AspNetCore's 'latest.version' is like this:\r\n3.1.1\r\na1388f194c30cb21b36b75982962cb5e35954e4e\r\n\r\nRuntime's is like this:\r\na1388f194c30cb21b36b75982962cb5e35954e4e\r\n3.1.1\r\n\r\ndotnet-install assumes the last line is the version: https://github.com/dotnet/sdk/blob/0e105528b3b5fa3d9c509a336fdafd92e464f764/scripts/obtain/dotnet-install.ps1#L180-L189    \r\n"},{"Id":"11492676926","Type":"IssuesEvent","CreatedAt":"2020-02-11T21:28:23","Actor":"Xarkam","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10630","RelatedDescription":"Opened issue \"Cannot repair SDK 3.1.101\" (#10630) at dotnet/sdk","RelatedBody":"Hello, I tried to repair my sdk but the installer fail:\r\n![image](https://user-images.githubusercontent.com/331816/74280732-6610f880-4d1d-11ea-9680-49d970d62e51.png)\r\nThe dialog say: The specified account already exist\r\n\r\nLog:\r\n```\r\n[26B4:2554][2020-02-11T22:21:49]i001: Burn v3.10.4.4718, Windows v10.0 (Build 18363: Service Pack 0), path: C:\\Users\\benja\\AppData\\Local\\Temp\\{BB4BDBD6-CF86-41B8-A83E-5475122C9AD6}\\.cr\\dotnet-sdk-3.1.101-win-x64.exe\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME_X86' to value '[ProgramFilesFolder]dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME_X64' to value '[ProgramFiles64Folder]dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME' to value '[DOTNETHOME_X64]'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'BUNDLEMONIKER' to value 'Microsoft .NET Core SDK 3.1.101'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETSDKVERSION' to value '3.1.101'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETRUNTIMEVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'ASPNETCOREVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'WINFORMSANDWPFVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOMESIMILARITYCHECKOVERRIDE' to value ''\r\n[26B4:2554][2020-02-11T22:21:49]i009: Command Line: '-burn.clean.room=e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe -burn.filehandle.attached=632 -burn.filehandle.self=636'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleOriginalSource' to value 'e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleOriginalSourceFolder' to value 'e:\\Users\\benja\\Downloads\\'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleLog' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149.log'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleManufacturer' to value 'Microsoft Corporation'\r\n[26B4:3748][2020-02-11T22:21:49]i000: Setting numeric variable 'WixStdBALanguageId' to value 1033\r\n[26B4:3748][2020-02-11T22:21:49]i000: Setting version variable 'WixBundleFileVersion' to value '3.1.101.14848'\r\n[26B4:2554][2020-02-11T22:21:49]i100: Detect begin, 15 packages\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting numeric variable 'DotnetInstallLocationExists_x64' to value 1\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting numeric variable 'DotnetInstallLocationExists_x86' to value 1\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetInstallLocationExists_x64' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'DOTNETHOME_X64' to value 'C:\\Program Files\\dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'NOT DotnetInstallLocationExists_x64' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetExeExists_x64' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetInstallLocationExists_x86' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'DOTNETHOME_X86' to value 'C:\\Program Files (x86)\\dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'NOT DotnetInstallLocationExists_x86' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetExeExists_x86' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_runtime_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_hostfxr_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_host_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: windowsdesktop_runtime_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: netstandard_targeting_pack_2.1.0_win_x64.msi, state: Present, cached: Complete\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_sdk_internal_3.1.101_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: AspNetCoreSharedFramework_x64, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'WixBundleInstalled OR ((NOT (DOTNETHOME_X64 ~= DOTNETHOME_X86)) OR DOTNETHOMESIMILARITYCHECKOVERRIDE)' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i199: Detect complete, result: 0x0\r\n[26B4:2554][2020-02-11T22:21:51]i200: Plan begin, 15 packages, action: Repair\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_runtime_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_000_dotnet_runtime_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_hostfxr_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_001_dotnet_hostfxr_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_host_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_002_dotnet_host_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_windowsdesktop_runtime_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_003_windowsdesktop_runtime_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_004_dotnet_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_005_dotnet_apphost_pack_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_x86.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_006_dotnet_apphost_pack_3.1.1_win_x64_x86.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_arm.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_007_dotnet_apphost_pack_3.1.1_win_x64_arm.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_arm64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_008_dotnet_apphost_pack_3.1.1_win_x64_arm64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_netstandard_targeting_pack_2.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_009_netstandard_targeting_pack_2.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_aspnetcore_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_010_aspnetcore_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_windowsdesktop_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_011_windowsdesktop_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_31templates_3.1.101_servicing_014848_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_012_dotnet_31templates_3.1.101_servicing_014848_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_sdk_internal_3.1.101_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_013_dotnet_sdk_internal_3.1.101_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i052: Condition 'VersionNT64 AND (NOT OPT_NO_SHAREDFX)' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_AspNetCoreSharedFramework_x64' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_014_AspNetCoreSharedFramework_x64.log'\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_runtime_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_hostfxr_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_host_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: windowsdesktop_runtime_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: netstandard_targeting_pack_2.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: No, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_sdk_internal_3.1.101_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: AspNetCoreSharedFramework_x64, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i299: Plan complete, result: 0x0\r\n[26B4:2554][2020-02-11T22:21:51]i300: Apply begin\r\n[26B4:2554][2020-02-11T22:21:51]i010: Launching elevated engine process.\r\n[26B4:2554][2020-02-11T22:21:53]i011: Launched elevated engine process.\r\n[26B4:2554][2020-02-11T22:21:53]i012: Connected to elevated engine.\r\n[1914:0954][2020-02-11T22:21:53]i358: Pausing automatic updates.\r\n[1914:0954][2020-02-11T22:21:53]i359: Paused automatic updates.\r\n[1914:0954][2020-02-11T22:21:53]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: Active, restart initiated: No, disable resume: No\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_runtime_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_runtime_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{ECF3E961-C8E1-4276-BCD2-79C693410CC5}v24.68.28408\\dotnet-runtime-3.1.1-win-x64.msi.\r\n[1914:0954][2020-02-11T22:21:54]i301: Applying execute package: dotnet_runtime_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{ECF3E961-C8E1-4276-BCD2-79C693410CC5}v24.68.28408\\dotnet-runtime-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_hostfxr_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_hostfxr_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{746DF466-E621-440F-9BBF-DDBD496C22EC}v24.68.28408\\dotnet-hostfxr-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_host_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_host_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{B1BF0643-9D94-4F9A-8C21-73E6C8BFA840}v24.68.28408\\dotnet-host-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: windowsdesktop_runtime_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\windowsdesktop_runtime_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{5A278411-F21F-4FFC-80A7-0990EF38BD50}v24.68.28408\\windowsdesktop-runtime-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{31EDE1E7-C855-4633-9D73-56F566136567}v24.64.28315\\dotnet-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{F3B5B020-F99B-4798-A2D0-C859FF27E779}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_x86.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_x86.msi, moving to: C:\\ProgramData\\Package Cache\\{4718B341-DBFC-4F26-BFCB-91EFF2995B2F}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_x86.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_arm.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_arm.msi, moving to: C:\\ProgramData\\Package Cache\\{0DF97BB8-17F0-4F0F-9CAC-425CF74C3561}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, moving to: C:\\ProgramData\\Package Cache\\{8C095070-91CD-41FF-9021-5535C498480A}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i304: Verified existing payload: netstandard_targeting_pack_2.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\{A7036CFB-B403-4598-85FF-D397ABB88173}v24.0.28113\\netstandard-targeting-pack-2.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: aspnetcore_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\aspnetcore_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{D6081EC6-BF59-3128-84D0-D3D8309A4339}v3.1.0.0\\aspnetcore-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: windowsdesktop_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\windowsdesktop_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{7519423C-A977-4160-83A2-48633600A216}v24.64.28315\\windowsdesktop-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{4E8EFEE3-6620-43A3-A038-70AD5020B9D8}v3.1.1.014848\\dotnet-31templates-3.1.101-servicing-014848-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_sdk_internal_3.1.101_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_sdk_internal_3.1.101_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{57C6FEEE-6402-45EE-8F4F-73DC112E4491}v12.16.31232\\dotnet-sdk-internal-3.1.101-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: AspNetCoreSharedFramework_x64 at path: C:\\ProgramData\\Package Cache\\.unverified\\AspNetCoreSharedFramework_x64, moving to: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi.\r\n[26B4:2554][2020-02-11T22:21:59]i319: Applied execute package: dotnet_runtime_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:21:59]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_runtime_24.68.28408_x64, package: dotnet_runtime_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:21:59]i301: Applying execute package: dotnet_hostfxr_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{746DF466-E621-440F-9BBF-DDBD496C22EC}v24.68.28408\\dotnet-hostfxr-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:21:59]i319: Applied execute package: dotnet_hostfxr_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:21:59]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_HostFxr_24.68.28408_x64, package: dotnet_hostfxr_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:21:59]i301: Applying execute package: dotnet_host_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{B1BF0643-9D94-4F9A-8C21-73E6C8BFA840}v24.68.28408\\dotnet-host-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:00]i319: Applied execute package: dotnet_host_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:00]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_SharedHost_24.68.28408_x64, package: dotnet_host_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:00]i301: Applying execute package: windowsdesktop_runtime_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{5A278411-F21F-4FFC-80A7-0990EF38BD50}v24.68.28408\\windowsdesktop-runtime-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:06]i319: Applied execute package: windowsdesktop_runtime_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:06]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: windowsdesktop_runtime_24.68.28408_x64, package: windowsdesktop_runtime_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:06]i301: Applying execute package: dotnet_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{31EDE1E7-C855-4633-9D73-56F566136567}v24.64.28315\\dotnet-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:10]i319: Applied execute package: dotnet_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:10]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_targeting_pack_24.64.28315_x64, package: dotnet_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:10]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{F3B5B020-F99B-4798-A2D0-C859FF27E779}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:10]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:10]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64, package: dotnet_apphost_pack_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:10]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{4718B341-DBFC-4F26-BFCB-91EFF2995B2F}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_x86.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:11]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:11]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_x86, package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi\r\n[1914:0954][2020-02-11T22:22:11]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{0DF97BB8-17F0-4F0F-9CAC-425CF74C3561}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:12]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:12]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_arm, package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi\r\n[1914:0954][2020-02-11T22:22:12]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{8C095070-91CD-41FF-9021-5535C498480A}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:12]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:12]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_arm64, package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi\r\n[1914:0954][2020-02-11T22:22:12]i301: Applying execute package: netstandard_targeting_pack_2.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{A7036CFB-B403-4598-85FF-D397ABB88173}v24.0.28113\\netstandard-targeting-pack-2.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:15]i319: Applied execute package: netstandard_targeting_pack_2.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:15]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: netstandard_targeting_pack_24.0.28113_x64, package: netstandard_targeting_pack_2.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:15]i301: Applying execute package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{D6081EC6-BF59-3128-84D0-D3D8309A4339}v3.1.0.0\\aspnetcore-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:18]i319: Applied execute package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:18]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Microsoft.AspNetCore.TargetingPack_x64_ENU,v3.1.0, package: aspnetcore_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:18]i301: Applying execute package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{7519423C-A977-4160-83A2-48633600A216}v24.64.28315\\windowsdesktop-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:20]i319: Applied execute package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:20]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: windowsdesktop_targeting_pack_24.64.28315_x64, package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:20]i301: Applying execute package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{4E8EFEE3-6620-43A3-A038-70AD5020B9D8}v3.1.1.014848\\dotnet-31templates-3.1.101-servicing-014848-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\" ALLOWMSIINSTALL=\"True\"'\r\n[26B4:2554][2020-02-11T22:22:21]i319: Applied execute package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:21]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: NetCore_Templates_3.1_3.1.1.014848_x64, package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:21]i301: Applying execute package: dotnet_sdk_internal_3.1.101_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{57C6FEEE-6402-45EE-8F4F-73DC112E4491}v12.16.31232\\dotnet-sdk-internal-3.1.101-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\" DOTNETHOME_X86=\"C:\\Program Files (x86)\\dotnet\" DOTNETHOME_X64=\"C:\\Program Files\\dotnet\" EXEFULLPATH=\"e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe\" ALLOWMSIINSTALL=\"True\"'\r\n[26B4:2554][2020-02-11T22:22:45]i319: Applied execute package: dotnet_sdk_internal_3.1.101_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:45]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_3.1.101.014848_x64, package: dotnet_sdk_internal_3.1.101_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:45]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:22:51]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:22:54]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:22:57]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:23:00]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:23:05]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:23:08]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:23:30]i319: Applied execute package: AspNetCoreSharedFramework_x64, result: 0x80070643, restart: None\r\n[26B4:2554][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to execute MSI package.\r\n[1914:0954][2020-02-11T22:23:30]i351: Removing cached package: AspNetCoreSharedFramework_x64, from path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\\r\n[1914:0954][2020-02-11T22:23:30]i372: Session end, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: ARP, restart: None, disable resume: No\r\n[1914:0954][2020-02-11T22:23:30]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: ARP, restart initiated: No, disable resume: No\r\n[26B4:2554][2020-02-11T22:23:30]i399: Apply complete, result: 0x80070643, restart: None, ba requested restart:  No\r\n```"},{"Id":"11492323977","Type":"IssuesEvent","CreatedAt":"2020-02-11T20:45:40","Actor":"Zubastic","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10629","RelatedDescription":"Opened issue \"Use PrintDialog and infinity loop\" (#10629) at dotnet/sdk","RelatedBody":"When try to print page with System.Windows.Controls.PrintDialog at NetCore 3.1 program goes to infinity loop. If using virtual printer (for example Microsoft Print to PDF) it throw exception:\r\n```\r\nSystem.NotSupportedException: Specified method is not supported.\r\n   at MS.Internal.PrintWin32Thunk.XpsPrintJobStream.Seek(Int64 offset, SeekOrigin origin)\r\n   at System.Printing.PrintQueueStream.Seek(Int64 offset, SeekOrigin origin)\r\n   at System.IO.Compression.ZipArchive.WriteFile()\r\n   at System.IO.Compression.ZipArchive.Dispose(Boolean disposing)\r\n   at System.IO.Compression.ZipArchive.Dispose()\r\n   at System.IO.Packaging.ZipPackage.Dispose(Boolean disposing)\r\n   at System.IO.Packaging.Package.System.IDisposable.Dispose()\r\n   at System.IO.Packaging.Package.Close()\r\n   at System.Windows.Xps.Packaging.XpsDocument.DisposeXpsDocument()\r\n   at System.Printing.PrintQueue.DisposeSerializationManager(Boolean abort)\r\n   at System.Windows.Xps.XpsDocumentWriter.EndWrite(Boolean disposeManager, Boolean abort)\r\n   at System.Windows.Xps.XpsDocumentWriter.SaveAsXaml(Object serializedObject, Boolean isSync)\r\n   at System.Windows.Xps.XpsDocumentWriter.Write(DocumentPaginator documentPaginator, PrintTicket printTicket)\r\n   at System.Windows.Controls.PrintDialog.PrintDocument(DocumentPaginator documentPaginator, String description)\r\n   at WpfNetcoreTest.Program..ctor() in C:\\Users\\Zubastic\\Source\\Repos\\Zubastic\\PrintDialogBug\\WpfNetcoreTest\\Program.cs:line 18\r\n   at WpfNetcoreTest.App..ctor() in C:\\Users\\Zubastic\\Source\\Repos\\Zubastic\\PrintDialogBug\\WpfNetcoreTest\\App.xaml.cs:line 18\r\n   at WpfNetcoreTest.App.Main()\r\n```\r\nRepo for reproduce bug:\r\nhttps://github.com/Zubastic/PrintDialogBug"},{"Id":"11492062567","Type":"PullRequestEvent","CreatedAt":"2020-02-11T20:13:17","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/10622","RelatedDescription":"Merged pull request \"Enable signing for util resources dll\" (#10622) at dotnet/sdk","RelatedBody":"@JohnTortugo FYI"},{"Id":"11491983019","Type":"IssuesEvent","CreatedAt":"2020-02-11T20:03:30","Actor":"raymens","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10628","RelatedDescription":"Opened issue \"3.1.200-preview-014883 crashes on restoring (newly created) fsharp project\" (#10628) at dotnet/sdk","RelatedBody":"Restoring a project fails with the following error `NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string.`. using the `3.1.200-preview-014883` SDK.\r\n\r\nForcing the SDK to 3.1.101 using `global.json` fixes the issue.\r\n\r\n# Steps to reproduce\r\n\r\n```\r\nPS C:\\Workspace> dotnet new console -lang F# -n SdkErrorSample\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on SdkErrorSample\\SdkErrorSample.fsproj...\r\nC:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string. [C:\\Workspace\\SdkErrorSample\\SdkErrorSample.fsproj]\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n\r\nPS C:\\Workspace> cd .\\SdkErrorSample\\\r\nPS C:\\Workspace\\SdkErrorSample> dotnet restore\r\nC:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string. [C:\\Workspace\\SdkErrorSample\\SdkErrorSample.fsproj]\r\nPS C:\\Workspace\\SdkErrorSample>\r\n```"},{"Id":"11491524778","Type":"IssuesEvent","CreatedAt":"2020-02-11T19:09:52","Actor":"talboren","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10627","RelatedDescription":"Opened issue \"Directory separator for TargetPath is not normalized\" (#10627) at dotnet/sdk","RelatedBody":"<!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting non-security bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Describe the bug\r\nMy application is using NServiceBus as the implementation to the Service Bus pattern.\r\n\r\nNServiceBus generates several SQL scripts for its persistence mechanism and then executes those script when starting up (to create the necessary tables), these scripts are generated by an MSBuild task at compile time.\r\nThe scripts are generated in to a folder called NServiceBus.Persistence.Sql which then has a few more folders for the relevant database types (e.g: MsSqlServer, MySql etc..) as you can see here:\r\n\r\n![image](https://user-images.githubusercontent.com/18400664/73262135-3074f700-41d6-11ea-87f5-124325f35141.png)\r\n\r\nNServiceBus will then search for the specific files under NServiceBus.Persistence.Sql directory at the parent app directory - at this point everything seems to be working fine.\r\n\r\nThe problem begins when moving to a \"Single File Executable\" with the \"PublishSingleFile\" parameter set.\r\nAfter reading https://github.com/dotnet/designs/blob/master/accepted/single-file/extract.md it seems like I understood the way the extraction mechanism works but it seems like there's a buggy situation where folders that contains folders inside get extracted faulty (when looking at \"/var/tmp/.net/AppName/bov1qdmu.xn3/\":\r\n\r\n![image](https://user-images.githubusercontent.com/18400664/73262814-c65d5180-41d7-11ea-888c-c5f05260bdad.png)\r\n\r\nand the following error message appears:\r\n\r\n> appname_1               | 2020-01-27 16:49:54.790 INFO  Directory '/var/tmp/.net/AppName/bov1qdmu.xn3/NServiceBus.PersistenceSql/MySql/Sagas' not found so no saga creation scripts will be executed.\r\n\r\n\r\n### To Reproduce\r\n<!--\r\nWhat steps can we follow to reproduce the issue?\r\n\r\nWe ❤ code! Include a complete code listing or point us to a minimalistic GitHub repo.\r\n\r\n``` C#\r\nConsole.WriteLine(\"Hello, World!\");\r\n```\r\n\r\nGot Exceptions? Include both the message and the stack trace\r\n-->\r\nHaving a project with NServiceBus using persistence mechanism, reproduce this issue easily by just switching from:\r\n`RUN dotnet publish AppName.csproj -c Release -r linux-musl-x64 -o /app`\r\nTo\r\n`RUN dotnet publish AppName.csproj -c Release -r linux-musl-x64 /p:PublishSingleFile=true -o /app`\r\n\r\n### Further technical details\r\n- ASP.NET Core version: **mcr.microsoft.com/dotnet/core/runtime-deps:3.1-alpine** (3.1.101), \r\n- Include the output of `dotnet --info`: **No runtime is installed, app is self-contained**\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and it's version: **Microsoft Visual Studio Professional 2019 Version 16.4.3**\r\n"},{"Id":"11490496335","Type":"IssuesEvent","CreatedAt":"2020-02-11T17:11:06","Actor":"jeffschwMSFT","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10626","RelatedDescription":"Opened issue \"\"dotnet Service.dll\" takes 8 seconds more on Windows Server 2019 container vs Windows Server 2016 container for first run\" (#10626) at dotnet/sdk","RelatedBody":"Posted by @shreyagr \r\n\r\nGeneral\r\nWe are running dotnet core 2.1 app on mcr.microsoft.com/dotnet/core/aspnet:2.1-nanoserver-1809 image for container. However, we are seeing that the command \"dotnet service.dll\" takes 8-9 seconds to start.\r\n\r\nIf I try to use Entrypoint to just get a cmd window and manually run \"dotnet service.dll\", the first attempt takes 8-9 seconds, but all following attempts within the same container instance are instantaneous. Does this mean there is some metadata that dotnet loads or tries to get for the first run?"},{"Id":"11489619867","Type":"PullRequestEvent","CreatedAt":"2020-02-11T15:47:23","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/10624","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#10624) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"11488045048","Type":"IssuesEvent","CreatedAt":"2020-02-11T13:12:26","Actor":"couven92","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10625","RelatedDescription":"Opened issue \"RuntimeIdentifier does not propagate to dependency projects when multi-targeting TFMs\" (#10625) at dotnet/sdk","RelatedBody":"I have two projects, one is a `ProjectReference` dependency of the other. Both projects multi-target the same two TFMs (`netcoreapp3.1` and `net47`) and I aim to do a RID-specific standalone deployment and therefore need to specify the RID at compile-time.\r\n\r\nHowever, the build fails, appearently due to MSBuild not flowing the `RuntimeIdentifier` property when it is compiling the dependency project, thus resulting in a missing target dependency resolution error. `NETSDK1047: Assets file does not have a target for the specified RID.`\r\n\r\n# Steps to reproduce\r\n\r\n1. Produce a `global.json` file fixing the SDK to version 3.1.101 (current .NET Core SDK when filing the issue). The issue also repros with new preview versions (tested `3.1.200-preview-014883`)\r\n1. Create two projects side-by-side  \r\n   `dotnet new console -n dependency`  \r\n   `dotnet new console -n application`\r\n1. Change both project files to a multi-targeting setup (this issue does not repro when single-targeting one TFM)  \r\n   `<TargetFrameworks>netcoreapp3.1;net47</TargetFrameworks>`\r\n1. Add a reference from one of the projects to the other.  \r\n   `dotnet add application reference dependency`\r\n1. Restore the appliction project with specifying a runtime identifier\r\n   `dotnet restore application --runtime win10-x64 -bl:MSBuild.Restore.binlog`\r\n1. Build the application project with the same runtime identifier as before\r\n   `dotnet build application --runtime win10-x64 -bl:MSBuild.Build.binlog`\r\n\r\n# Expected behaviour\r\n\r\nThe `dotnet build application` command should resolve all dependencies (i.e. `..\\dependency\\dependency.csproj`) build and produce the binary assets for the `application\\application.csproj` project in the `application\\bin\\Debug\\(net47)|(netcoreapp3.1)\\win10-x64` directories. The Build should succeed. Specifically, the binary output for `dependency` should reflect the runtime identifier specification for `win10-x64` as that was passed to the command-line arguments.\r\n\r\n# Current behaviour\r\n\r\nThe build fails:\r\n> [...]\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5): error NETSDK1047: Assets file '[...]\\dependency\\obj\\project.assets.json' doesn't have a target for '.NETFramework,Version=v4.7/win7-x86'. Ensure that restore has run and that you have included 'net47' in the TargetFrameworks for your project. You may also need to include 'win7-x86' in your project's RuntimeIdentifiers. [[...]\\dependency\\dependency.csproj]\r\n\r\nThe error message states that there is a missing target for TFM `net47` and RID `win7-x86`.\r\n\r\nAttached ZIP file containing the project files, and the produced MSBuild binary logs:  \r\n[net47-win10-x64-test.zip](https://github.com/dotnet/sdk/files/4185731/net47-win10-x64-test.zip)\r\n\r\n# Comments\r\n\r\nThe RID shown in the error message specifies `win7-x86` which is a completely different RID compared to `win10-x64` (different OS AND different architecture).\r\n\r\nI have looked at the binary log (`MSBuild.Build.binlog` in the attached [ZIP-file](https://github.com/dotnet/sdk/files/4185731/net47-win10-x64-test.zip)) and discovered that the `ResolveReferences` targets during the build of `application.csproj` invokes the `MSBuild` task to build the dependency. In the parameters passed to that task, the `dependency.csproj` project specifically gains an additional item property `UndefineProperties` which is set to `;RuntimeIdentifier`. And sure enough, in the MSBuild invocation for `dependency.csproj` there is no Property `RuntimeIdentifier` set.\r\n\r\nIf the reference was a PackageReference or binary DLL that was RID-agnostic, the current behaviour would probably be fine. However, in the case when MSBuild recognizes that it needs to compile a dependency (i.e. when using `ProjectReference`) the `RuntimeIdentifier` property should flow with the compilation for the dependency. If the dependency is RID-agnostic, specifying a RID won't do any harm, but if it is RID-sensitive, specifying the RID is necessary."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"552027434","IsPullRequest":false,"CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Number":"159","RawContent":null,"Title":"Add Akka.NET to the DNF project listing","State":"closed","Body":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings.","Url":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159)"},{"Id":"555112784","IsPullRequest":false,"CreatedAt":"2020-01-25T17:36:28","Actor":"oskardudycz","Number":"161","RawContent":null,"Title":"Marten","State":"closed","Body":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation.","Url":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161)"},{"Id":"555038667","IsPullRequest":false,"CreatedAt":"2020-01-25T04:38:47","Actor":"nagytech","Number":"160","RawContent":null,"Title":"Website down","State":"closed","Body":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~","Url":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:29","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#152)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:00","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#153)"},{"Id":"539153211","IsPullRequest":true,"CreatedAt":"2020-01-22T14:07:13","Actor":"khalidabuhakmeh","Number":"156","RawContent":null,"Title":"Update Teams Link","State":"closed","Body":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`","Url":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Closed or merged PR \"Update Teams Link\" (#156)"},{"Id":"544546454","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:51","Actor":"manne","Number":"157","RawContent":null,"Title":"Link Reactive Extensions to new github repo","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Closed or merged PR \"Link Reactive Extensions to new github repo\" (#157)"},{"Id":"552026315","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:19","Actor":"nagytech","Number":"158","RawContent":null,"Title":"Add Akka.NET to DNF","State":"closed","Body":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n","Url":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Closed or merged PR \"Add Akka.NET to DNF\" (#158)"},{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"563610462","IsPullRequest":true,"CreatedAt":"2020-02-11T23:36:40","Actor":"GrabYourPitchforks","Number":"28013","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance","State":"open","Body":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Open PR \"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance\" (#28013)"},{"Id":"563480826","IsPullRequest":true,"CreatedAt":"2020-02-11T21:13:58","Actor":"omajid","Number":"28012","RawContent":null,"Title":"[release/3.1] Fix build on systems with glibc >= 2.30","State":"open","Body":"On newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off.","Url":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Open PR \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012)"},{"Id":"562935739","IsPullRequest":true,"CreatedAt":"2020-02-11T02:08:36","Actor":"sdmaclea","Number":"28011","RawContent":null,"Title":"WIP -- Port linuxdac from master","State":"open","Body":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Open PR \"WIP -- Port linuxdac from master\" (#28011)"},{"Id":"561936487","IsPullRequest":true,"CreatedAt":"2020-02-08T00:21:04","Actor":"omajid","Number":"28010","RawContent":null,"Title":"[release/3.1] Support glibc deprecation of sys/sysctl.h ","State":"open","Body":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`","Url":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Open PR \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010)"},{"Id":"558155384","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:51","Actor":"stephentoub","Number":"28008","RawContent":null,"Title":"Delete ISSUE_TEMPLATE.md","State":"closed","Body":"All issues have been transferred to dotnet/runtime, and issues in coreclr have been disabled.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28008","RelatedDescription":"Closed or merged PR \"Delete ISSUE_TEMPLATE.md\" (#28008)"},{"Id":"558156253","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:03","Actor":"stephentoub","Number":"28009","RawContent":null,"Title":"Fix readme link in contributed.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28009","RelatedDescription":"Closed or merged PR \"Fix readme link in contributed.md\" (#28009)"},{"Id":"557644837","IsPullRequest":true,"CreatedAt":"2020-01-31T14:20:41","Actor":"WenningQiu","Number":"28007","RawContent":null,"Title":"CSG stop-gap change on AsyncLocal for .NET Core 3.1","State":"closed","Body":"Stop-gap change for https://github.com/dotnet/docs/issues/9965","Url":"https://github.com/dotnet/coreclr/pull/28007","RelatedDescription":"Closed or merged PR \"CSG stop-gap change on AsyncLocal for .NET Core 3.1\" (#28007)"},{"Id":"557359179","IsPullRequest":true,"CreatedAt":"2020-01-30T09:15:07","Actor":"kouvel","Number":"28006","RawContent":null,"Title":"[3.1] Fail FuncEval if slot backpatching lock is held by any thread","State":"open","Body":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\nRisks:\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537","Url":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Open PR \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006)"},{"Id":"555745808","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:56","Actor":"danmosemsft","Number":"28004","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28004","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#28004)"},{"Id":"555024664","IsPullRequest":true,"CreatedAt":"2020-01-25T01:28:40","Actor":"briansull","Number":"28003","RawContent":null,"Title":"Port the 5.0 fix for issue #1104","State":"open","Body":"This is the fix for the 3.1 branch for the runtime issue #1104 \r\nThis a a bug which Sergey Andreenko @sandreenko found where the JIT can\r\noptimize away a range check, allowing an out of bounds read or write.\r\nThe original cause was from PR #23109, where a cut-and-paste typo inverted the \r\ninitialization code for `bool alreadyPresent` in `RangeCheck::IsMonotonicallyIncreasing`\r\n\r\n**Customer Impact**\r\nInvalid code gen that allows an out of bounds read or write.\r\n\r\n**Regression?**\r\nA regression introduced during 3.0 development.\r\n\r\n**Testing**\r\nThe fix has been verified in the runtime repo.\r\n\r\n**Risk**\r\nLow: The fix is straightforward and only impacts 1 line of code.\r\n\r\n**Code Reviewer**\r\n@sandreenko and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/28003","RelatedDescription":"Open PR \"Port the 5.0 fix for issue #1104\" (#28003)"},{"Id":"540149649","IsPullRequest":true,"CreatedAt":"2020-01-17T18:31:43","Actor":"VSadov","Number":"27975","RawContent":null,"Title":"Setting MinLimitTotalWorkerThreads according to CPU quota.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27975","RelatedDescription":"Closed or merged PR \"Setting MinLimitTotalWorkerThreads according to CPU quota.\" (#27975)"},{"Id":"551004118","IsPullRequest":true,"CreatedAt":"2020-01-17T02:10:57","Actor":"dotnet-maestro-bot","Number":"28002","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @hoyosjs\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28002","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#28002)"},{"Id":"550505294","IsPullRequest":true,"CreatedAt":"2020-01-16T19:16:48","Actor":"hoyosjs","Number":"28000","RawContent":null,"Title":"Fix issues in release 3.0","State":"closed","Body":"Changes discussed to obtain green CI and fix RHEL6 outerloop builds:\r\n\r\n- Restore the Helix SDK using Tools.props to work around msbuild issues\r\n- Disable formatting jobs\r\n- Disable windows ARM jobs until dotnet/runtime#1097 is solved\r\n- Fix TRACE statement for RHEL6 in debug/checked pal out-of-proc unwind.\r\n\r\ncc @jeffschwMSFT @mmitche @jashook @trylek ","Url":"https://github.com/dotnet/coreclr/pull/28000","RelatedDescription":"Closed or merged PR \"Fix issues in release 3.0\" (#28000)"},{"Id":"550514396","IsPullRequest":true,"CreatedAt":"2020-01-16T01:27:41","Actor":"mmitche","Number":"28001","RawContent":null,"Title":"[release/2.1] Restore official build for 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28001","RelatedDescription":"Closed or merged PR \"[release/2.1] Restore official build for 2.1\" (#28001)"},{"Id":"549855987","IsPullRequest":true,"CreatedAt":"2020-01-15T21:04:10","Actor":"GrabYourPitchforks","Number":"27996","RawContent":null,"Title":"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/752 to release/3.1\r\nFixes https://github.com/dotnet/runtime/issues/594\r\n\r\n## Description\r\n\r\nIn .NET Core 3.0 / 3.1 we changed how the _completed_ out parameter is set on the `EncoderNLS.Convert` and `DecoderNLS.Convert` routines. We had changed the logic to match precisely what MSDN's documentation stated and to fix a possible data corruption bug; however, this broke a number of customers' applications by sending them into infinite loops.\r\n\r\nThis PR reverts that change.\r\n\r\n## Customer Impact\r\n\r\nIf customers were relying on the previous behavior of the _completed_ out parameter, their applications could end up in an infinite loop. What makes matters worse is that the sample code on the MSDN page for `Encoder.Convert` and `Decoder.Convert` is also susceptible to this pattern, so we suspect a large number of customers may have based their own application code on the sample.\r\n\r\n## Regression?\r\n\r\nYes, from .NET Framework 4.x and .NET Core 2.x. One half of this change was introduced in .NET Core 3.0 (see https://github.com/dotnet/coreclr/commit/43a5159d39bd52195c5095da4006183f791c696b); the other half was introduced in .NET Core 3.1 (see https://github.com/dotnet/coreclr/commit/c07ec4cd2f88c23edc87500893576d83c20f2e6d).\r\n\r\n## Testing\r\n\r\nThe reversion is already committed in the 5.0 branches (see https://github.com/dotnet/runtime/commit/d49b541ab156d992aeb4bbe410f7a816bb0ac039), so we have been getting test coverage on those nightlies. No notable regressions have been reported.\r\n\r\n## Risk\r\n\r\nSomewhere between minimal and moderate. It's possible that some applications may have taken a dependency on the new behavior. See for instance https://github.com/dotnet/aspnetcore/pull/17747, where ASP.NET appears to have unintentionally taken a dependency on the new behavior and had to proactively make a change so that they behave correctly both before and after this PR goes through.\r\n\r\n/cc @tarekgh @anurse @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/27996","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes\" (#27996)"},{"Id":"550396592","IsPullRequest":true,"CreatedAt":"2020-01-15T20:04:13","Actor":"dotnet-maestro-bot","Number":"27999","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27999","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27999)"},{"Id":"550393850","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:13","Actor":"mmitche","Number":"27998","RawContent":null,"Title":"[release/3.1] Update branding to 3.1.2","State":"closed","Body":"eng/Versions.props doesn't seem to be the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27998","RelatedDescription":"Closed or merged PR \"[release/3.1] Update branding to 3.1.2\" (#27998)"},{"Id":"550393454","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:06","Actor":"mmitche","Number":"27997","RawContent":null,"Title":"[release/3.0] Update branding to 3.0.3","State":"closed","Body":"eng/Versions.props doesn't seem to the the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27997","RelatedDescription":"Closed or merged PR \"[release/3.0] Update branding to 3.0.3\" (#27997)"},{"Id":"549295331","IsPullRequest":true,"CreatedAt":"2020-01-15T03:31:02","Actor":"VSadov","Number":"27990","RawContent":null,"Title":"Revert CPU clipping in the presence of CPU quota to 3.0, 2.x behavior.","State":"closed","Body":"This is a fix for an issue tracked by https://github.com/dotnet/runtime/issues/622. \r\nIt is a reversal of a change made in 3.1 vs. 3.0 and 2.X \r\n(Basically reverting https://github.com/dotnet/coreclr/pull/26806)\r\nThe change was an improvement in some cases, but was causing considerable performance regressions in constrained container scenarios.\r\n\r\n## Customer Impact\r\nCustomers report performance regressions in constrained container scenarios when CPU quotas are applied.\r\n\r\n## Regression?\r\nYes. From 3.0 and 2.x\r\n\r\n## Testing\r\nRegular PR tests. \r\nVerified that the most affected aspnet benchmarks are back to 3.0 performance levels.\r\n\r\n## Risk\r\nLow: This is reverting to behavior that we had for a few releases.","Url":"https://github.com/dotnet/coreclr/pull/27990","RelatedDescription":"Closed or merged PR \"Revert CPU clipping in the presence of CPU quota to 3.0, 2.x behavior.\" (#27990)"},{"Id":"549775170","IsPullRequest":true,"CreatedAt":"2020-01-14T22:47:49","Actor":"Anipik","Number":"27994","RawContent":null,"Title":"update branding for coreclr 2.1.16","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27994","RelatedDescription":"Closed or merged PR \"update branding for coreclr 2.1.16\" (#27994)"},{"Id":"549842263","IsPullRequest":true,"CreatedAt":"2020-01-14T22:05:50","Actor":"dotnet-maestro-bot","Number":"27995","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @mmitche\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27995","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27995)"},{"Id":"549732492","IsPullRequest":true,"CreatedAt":"2020-01-14T21:54:02","Actor":"Anipik","Number":"27993","RawContent":null,"Title":"update branding to 3.0.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27993","RelatedDescription":"Closed or merged PR \"update branding to 3.0.3\" (#27993)"},{"Id":"537840266","IsPullRequest":true,"CreatedAt":"2020-01-14T18:36:19","Actor":"AndyAyersMS","Number":"27972","RawContent":null,"Title":"[release/3.1] Port fix for JIT silent bad code","State":"closed","Body":"Release/3.1 port of dotnet/runtime#797.\r\nFixes dotnet/runtime#764\r\n\r\nThe jit might incorrectly order a read from a struct field with an operation\r\nthat modifies the field, so that the read returns the wrong value.\r\n\r\n## Customer Impact\r\nSilent bad code; program behaves incorrectly.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing framework\r\nor test code.\r\n\r\n## Risk\r\n**Low**: the jit is now spilling the eval stack entries to temps in cases where it\r\ndid not before; this should be conservatively safe.\r\n\r\ncc @BruceForstall \r\n\r\n____\r\n\r\nIf we're appending an assignment whose LHS is is a location within a local\r\nstruct, we need to spill all references to that struct from the eval stack.\r\n\r\nUpdate the existing logic for this to handle the case where the LHS is a field\r\nof a local struct, and the field is updated by unusual means (here, `initobj`).\r\n\r\nFixes dotnet/runtime#764.","Url":"https://github.com/dotnet/coreclr/pull/27972","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix for JIT silent bad code\" (#27972)"},{"Id":"538649669","IsPullRequest":true,"CreatedAt":"2020-01-14T18:35:50","Actor":"AndyAyersMS","Number":"27973","RawContent":null,"Title":"Release/3.1 port of dotnet/runtime#239","State":"closed","Body":"Fix for #27923\r\n\r\nThe jit might fail to locate a class handle for a ref class, leading to an\r\nunexpected crash while jitting.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash/exception\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: the jit will now fall back to using the handle for System.Object if no\r\nbetter option can be found.\r\n\r\ncc @BruceForstall\r\n\r\n____\r\n\r\nIn some cases we may end up in lvaSetClass without a valid ref class handle\r\nfrom either the IR or the stack. Use the handle for object as a conservative\r\nfallback.","Url":"https://github.com/dotnet/coreclr/pull/27973","RelatedDescription":"Closed or merged PR \"Release/3.1 port of dotnet/runtime#239\" (#27973)"},{"Id":"544722108","IsPullRequest":true,"CreatedAt":"2020-01-14T18:35:32","Actor":"sywhang","Number":"27979","RawContent":null,"Title":"[3.1 port] Fix EventSource to stop ignoring EventCommand.SendManifest","State":"closed","Body":"This is a port of https://github.com/dotnet/runtime/pull/848 to 3.1 servicing. \r\n\r\n## Customer Impact\r\n\r\nSending ETW command to trigger manifest file to be generated does not work anymore. This blocks some customers who are relying on ETW commands to generate multiple ETL files per session, since the files they generate after the initial file don't have any test. \r\n\r\n## Regression?\r\n\r\nYes, from https://github.com/dotnet/coreclr/pull/11639/. This is some time around .NET Core 2.0 timeframe. \r\n\r\n## Testing\r\n\r\nAdded automated test as part of https://github.com/dotnet/runtime/pull/848. \r\nI also verified the fix with the repro sent by the customer who initially reported this (Azure Stack). \r\n\r\n## Risk\r\n\r\nLow. The code path being changed affects only ETW, and is a relatively simple change. I've tested the scenario with all the ETW tests we have and verified that they pass. ","Url":"https://github.com/dotnet/coreclr/pull/27979","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix EventSource to stop ignoring EventCommand.SendManifest\" (#27979)"},{"Id":"546543040","IsPullRequest":true,"CreatedAt":"2020-01-14T18:16:16","Actor":"Anipik","Number":"27981","RawContent":null,"Title":"update branding to 3.1.2","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27981","RelatedDescription":"Closed or merged PR \"update branding to 3.1.2\" (#27981)"},{"Id":"548326464","IsPullRequest":true,"CreatedAt":"2020-01-10T22:44:49","Actor":"CarolEidt","Number":"27986","RawContent":null,"Title":"Port of dotnet/runtime#1059 to 3.1 branch","State":"open","Body":"This is the fix for #27924. This is a GC hole bug that was found externally, #27590.\r\nThe cause is that the JIT was using the target type of the subtract when it needed\r\nto make a copy of the source, but it needs to use the source type.\r\n\r\n## Customer Impact\r\nCorruption of state that is non-deterministic and hard to track down.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by Unsafe.ByteOffset.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightfoward and only impacts 3 lines of code.\r\n\r\n## Code Reviewer\r\n@jaschook and @jkotas","Url":"https://github.com/dotnet/coreclr/pull/27986","RelatedDescription":"Open PR \"Port of dotnet/runtime#1059 to 3.1 branch\" (#27986)"},{"Id":"547818433","IsPullRequest":true,"CreatedAt":"2020-01-10T01:45:51","Actor":"AntonLapounov","Number":"27985","RawContent":null,"Title":"[3.1 port] Fix GC heap corruption on ARM","State":"open","Body":"Port of dotnet/runtime#1389 to 3.1 branch.  Applications may crash in GC code due to GC heap corruption caused by incorrect padding size calculation on ARM.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: one-line fix of the incorrect calculation.","Url":"https://github.com/dotnet/coreclr/pull/27985","RelatedDescription":"Open PR \"[3.1 port] Fix GC heap corruption on ARM\" (#27985)"},{"Id":"547811395","IsPullRequest":true,"CreatedAt":"2020-01-10T01:18:37","Actor":"CarolEidt","Number":"27984","RawContent":null,"Title":"Port PR #258 to 3.1","State":"open","Body":"Port of dotnet/runtime#258 to 3.1 branch.\r\nThis is the fix for #27937. The manifestation is an AV in the JIT. Although it isn't SBCG, it is difficult for the developer to track down that this is a JIT bug, rather than caused by something in their code.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightforward and only prevents the AV case.\r\n\r\n## Code Reviewers\r\nAuthored by @saucecontrol, reviewed by @CarolEidt and @swaroop-sridhar ","Url":"https://github.com/dotnet/coreclr/pull/27984","RelatedDescription":"Open PR \"Port PR #258 to 3.1\" (#27984)"},{"Id":"547728284","IsPullRequest":true,"CreatedAt":"2020-01-09T21:16:47","Actor":"CarolEidt","Number":"27983","RawContent":null,"Title":"Port fix for #1241 to 3.1","State":"open","Body":"Port of dotnet/runtime#1279 to 3.1 branch.\r\nThis is the fix for dotnet/runtime#1241. This is a SBCG bug reported externally. When a struct is partially written, the JIT fails to invalidate assertions (in this case that the entire struct had been zero'd). This results in incorrect optimization. The fix is to invalidate the assertions in the partial write case.\r\n\r\n## Customer Impact\r\nSBCG resulting in incorrect behavior.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by doing more optimizations on structs.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightforward and kills assertions which only disables optimizations.\r\n\r\n## Code Reviewer\r\n@briansull and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/27983","RelatedDescription":"Open PR \"Port fix for #1241 to 3.1\" (#27983)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"563597764","IsPullRequest":true,"CreatedAt":"2020-02-11T23:23:56","Actor":"sebastienros","Number":"13220","RawContent":null,"Title":"Fix WindowsDesktop runtime download url","State":"open","Body":"Fixes https://github.com/dotnet/sdk/issues/4237","Url":"https://github.com/dotnet/cli/pull/13220","RelatedDescription":"Open PR \"Fix WindowsDesktop runtime download url\" (#13220)"},{"Id":"561297789","IsPullRequest":true,"CreatedAt":"2020-02-08T02:12:38","Actor":"dotnet-maestro[bot]","Number":"13219","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200207.4\r\n- **Date Produced**: 2/8/2020 12:39 AM\r\n- **Commit**: 130be5a782f6fa8410627a8fddd3e2988bde1c71\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20107.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13219","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13219)"},{"Id":"561279608","IsPullRequest":true,"CreatedAt":"2020-02-07T22:58:12","Actor":"dotnet-maestro[bot]","Number":"13218","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6422\r\n- **Date Produced**: 2/7/2020 1:55 AM\r\n- **Commit**: 7bac015acc5b7e0161a058c8febc98abe2386d51\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-rtm.6422\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13218","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13218)"},{"Id":"560741905","IsPullRequest":true,"CreatedAt":"2020-02-06T02:35:24","Actor":"dotnet-maestro[bot]","Number":"13217","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200205.6\r\n- **Date Produced**: 2/6/2020 1:47 AM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20105.6\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13217","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13217)"},{"Id":"560692318","IsPullRequest":true,"CreatedAt":"2020-02-06T01:41:38","Actor":"dotnet-maestro[bot]","Number":"13216","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 10:16 PM\r\n- **Commit**: f8d14891f5440e79d0449d357beb4cceede34382\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20105.2\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13216","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13216)"},{"Id":"560661297","IsPullRequest":true,"CreatedAt":"2020-02-05T22:55:45","Actor":"dotnet-maestro[bot]","Number":"13215","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200205.4\r\n- **Date Produced**: 2/5/2020 9:42 PM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20105.4\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13215","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13215)"},{"Id":"560012548","IsPullRequest":true,"CreatedAt":"2020-02-04T23:18:05","Actor":"dotnet-maestro[bot]","Number":"13214","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6412\r\n- **Date Produced**: 2/3/2020 10:04 PM\r\n- **Commit**: 86f0ae460b9086bd79e4c9bc53650f700a09e4b7\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-rtm.6412\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13214","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13214)"},{"Id":"559963965","IsPullRequest":true,"CreatedAt":"2020-02-04T21:56:20","Actor":"dotnet-maestro[bot]","Number":"13213","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200204.3\r\n- **Date Produced**: 2/4/2020 7:34 PM\r\n- **Commit**: 20950a8fe1eb06b181f08c778acc5bd4df9719db\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20104.3\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13213","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13213)"},{"Id":"559918664","IsPullRequest":true,"CreatedAt":"2020-02-04T19:38:50","Actor":"dotnet-maestro[bot]","Number":"13212","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/4/2020 6:06 PM\r\n- **Commit**: c9f0a7673c300873f72b1d6f97048d1c17760884\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20104.2\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13212","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13212)"},{"Id":"558418424","IsPullRequest":true,"CreatedAt":"2020-02-03T17:33:18","Actor":"wtgodbe","Number":"13211","RawContent":null,"Title":"Revert to 3.1.1 runtime","State":"closed","Body":"CC @nguerrera @mmitche","Url":"https://github.com/dotnet/cli/pull/13211","RelatedDescription":"Closed or merged PR \"Revert to 3.1.1 runtime\" (#13211)"},{"Id":"557953429","IsPullRequest":true,"CreatedAt":"2020-01-31T07:35:41","Actor":"dotnet-maestro[bot]","Number":"13210","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200130.4\r\n- **Date Produced**: 1/31/2020 6:05 AM\r\n- **Commit**: 1de5bc87ab0a42441ceb3044aa0c74185dcb888f\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20080.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13210","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13210)"},{"Id":"554361230","IsPullRequest":true,"CreatedAt":"2020-01-24T23:13:18","Actor":"dotnet-maestro[bot]","Number":"13208","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6392\r\n- **Date Produced**: 1/22/2020 6:02 AM\r\n- **Commit**: 31852f3254dd31c862798f99bd0639133b23fd03\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.3.6392\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13208","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13208)"},{"Id":"554454460","IsPullRequest":true,"CreatedAt":"2020-01-23T23:16:13","Actor":"dotnet-maestro[bot]","Number":"13209","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: d54a5172-b4ce-4f86-d36b-08d6f038a15f\r\n- **Build**: 20200123.3\r\n- **Date Produced**: 1/23/2020 10:30 PM\r\n- **Commit**: bd1e14b7d16b798de8a874189c89afed755a266c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.3-servicing.20073.3\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13209","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore\" (#13209)"},{"Id":"553911990","IsPullRequest":true,"CreatedAt":"2020-01-23T20:09:59","Actor":"dotnet-maestro[bot]","Number":"13204","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200118.1\r\n- **Date Produced**: 1/18/2020 7:44 PM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20068.1\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13204","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13204)"},{"Id":"553912022","IsPullRequest":true,"CreatedAt":"2020-01-23T20:05:31","Actor":"dotnet-maestro[bot]","Number":"13205","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2edc82a1-19d9-431c-901b-08d76d41c6c3\r\n- **Build**: 20200114.1\r\n- **Date Produced**: 1/14/2020 7:24 PM\r\n- **Commit**: 247f60e9e34a03ed99e855eb1ea0c20931a968db\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.2-servicing.20064.1\r\n\r\n[marker]: <> (End:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13205","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/templating\" (#13205)"},{"Id":"554312389","IsPullRequest":true,"CreatedAt":"2020-01-23T17:54:43","Actor":"dagood","Number":"13207","RawContent":null,"Title":"[release/2.1.6xx] Publish VS insertion nupkgs to blob feed","State":"open","Body":"Allows prodcon infrastructure to publish the VS insertion nupkgs.\r\n\r\nClean cherry-pick of https://github.com/dotnet/cli/pull/13206 for 2.1.5xx onto 2.1.6xx.","Url":"https://github.com/dotnet/cli/pull/13207","RelatedDescription":"Open PR \"[release/2.1.6xx] Publish VS insertion nupkgs to blob feed\" (#13207)"},{"Id":"554311611","IsPullRequest":true,"CreatedAt":"2020-01-23T17:53:09","Actor":"dagood","Number":"13206","RawContent":null,"Title":"[release/2.1.5xx] Publish VS insertion nupkgs to blob feed","State":"open","Body":"Allows prodcon infrastructure to publish the VS insertion nupkgs.\r\n\r\nPatterns copied from Publish.targets:\r\n\r\nhttps://github.com/dotnet/cli/blob/b33df27d250772dadd4fda805ff65a3eb38a2b78/build/Publish.targets#L51-L54","Url":"https://github.com/dotnet/cli/pull/13206","RelatedDescription":"Open PR \"[release/2.1.5xx] Publish VS insertion nupkgs to blob feed\" (#13206)"},{"Id":"553876342","IsPullRequest":true,"CreatedAt":"2020-01-23T01:20:36","Actor":"dotnet-maestro[bot]","Number":"13203","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200122.3\r\n- **Date Produced**: 1/22/2020 11:30 PM\r\n- **Commit**: 3ff3791a1b3f8af0c3fadf3988012c69ac16c28f\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20072.3\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13203","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13203)"},{"Id":"551137527","IsPullRequest":true,"CreatedAt":"2020-01-21T17:07:26","Actor":"dotnet-maestro[bot]","Number":"13195","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: d54a5172-b4ce-4f86-d36b-08d6f038a15f\r\n- **Build**: 20200116.10\r\n- **Date Produced**: 1/17/2020 12:25 AM\r\n- **Commit**: bd11e9503c35094d56814f6399c58c77f4220f71\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.3-servicing.20066.10\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13195","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore\" (#13195)"},{"Id":"552463283","IsPullRequest":true,"CreatedAt":"2020-01-20T19:45:42","Actor":"dotnet-maestro[bot]","Number":"13202","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: fa87930c-8514-45a1-0d47-08d6910cd73b\r\n- **Build**: 20200120.2\r\n- **Date Produced**: 1/20/2020 6:09 PM\r\n- **Commit**: 316fbdd10e8829faaf9157ecbb05795e75b618f7\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.103-servicing.20070.2\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13202","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13202)"},{"Id":"552198555","IsPullRequest":true,"CreatedAt":"2020-01-20T11:00:43","Actor":"dotnet-maestro[bot]","Number":"13201","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200120.1\r\n- **Date Produced**: 1/20/2020 9:36 AM\r\n- **Commit**: 966115a91565d43cd545c1b8acd83eda2a0cb4cb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20070.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13201","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13201)"},{"Id":"551888915","IsPullRequest":true,"CreatedAt":"2020-01-19T09:40:36","Actor":"dotnet-maestro[bot]","Number":"13200","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200118.5\r\n- **Date Produced**: 1/19/2020 7:40 AM\r\n- **Commit**: 90a093bbbe2c46ef19e301d717bed3cfaa56abb3\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.102-servicing.20068.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13200","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13200)"},{"Id":"551032797","IsPullRequest":true,"CreatedAt":"2020-01-18T21:11:49","Actor":"dotnet-maestro[bot]","Number":"13194","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200118.1\r\n- **Date Produced**: 1/18/2020 7:44 PM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20068.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13194","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13194)"},{"Id":"551669690","IsPullRequest":true,"CreatedAt":"2020-01-18T00:03:50","Actor":"dotnet-maestro[bot]","Number":"13199","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200117.4\r\n- **Date Produced**: 1/17/2020 10:19 PM\r\n- **Commit**: 916b5cba268e1e1e803243004f4276cf40b2dda8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20067.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13199","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13199)"},{"Id":"551611436","IsPullRequest":true,"CreatedAt":"2020-01-17T20:45:36","Actor":"dotnet-maestro[bot]","Number":"13198","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200117.03\r\n- **Date Produced**: 1/17/2020 7:27 PM\r\n- **Commit**: c03f2fe62663edec83d1bc12b4e9f11bd3de5d0e\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20067-03\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13198","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13198)"},{"Id":"551471556","IsPullRequest":true,"CreatedAt":"2020-01-17T16:00:39","Actor":"dotnet-maestro[bot]","Number":"13197","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200117.02\r\n- **Date Produced**: 1/17/2020 2:31 PM\r\n- **Commit**: 00b693a04137fa04d3564d73a65ca87cb4b73d7a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20067-02\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13197","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13197)"},{"Id":"551382296","IsPullRequest":true,"CreatedAt":"2020-01-17T13:25:53","Actor":"dotnet-maestro[bot]","Number":"13196","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200117.1\r\n- **Date Produced**: 1/17/2020 11:37 AM\r\n- **Commit**: 76cc488b8c942815d8b4bfe1de803b916667fe37\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20067.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13196","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13196)"},{"Id":"551015705","IsPullRequest":true,"CreatedAt":"2020-01-17T03:23:55","Actor":"dotnet-maestro[bot]","Number":"13193","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200116.11\r\n- **Date Produced**: 1/17/2020 2:08 AM\r\n- **Commit**: 92224c91b9a8dda9b77c41b583fbd711378adc87\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.2-servicing.20066.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13193","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13193)"},{"Id":"550995074","IsPullRequest":true,"CreatedAt":"2020-01-17T02:08:52","Actor":"dotnet-maestro[bot]","Number":"13192","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200116.10\r\n- **Date Produced**: 1/17/2020 1:00 AM\r\n- **Commit**: bef07b2aa26c92a422558436498661efc06d26d8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20066-10\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13192","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13192)"},{"Id":"550684109","IsPullRequest":true,"CreatedAt":"2020-01-16T10:00:28","Actor":"dotnet-maestro[bot]","Number":"13191","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 1a2c0403-dbb9-4253-1c2d-08d6fb3704ce\r\n- **Build**: 20200115.15\r\n- **Date Produced**: 1/16/2020 8:55 AM\r\n- **Commit**: 36b94a593d57e671c05d5037e79e285f63b3ea58\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.3\r\n  - **Microsoft.NETCore.App.Internal** -> 3.0.3-servicing-20065-15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.3\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13191","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13191)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"563594688","IsPullRequest":false,"CreatedAt":"2020-02-11T23:21:07","Actor":"merarischroeder","Number":"1704","RawContent":null,"Title":"Why is System.Threading.Task.TaskToApm internal?","State":"open","Body":"I saw it being used here today https://github.com/dotnet/runtime/blob/master/src/libraries/System.Net.Quic/src/System/Net/Quic/QuicStream.cs\r\n\r\nI'm building a few stream types and I would like to define a stream wrapper too. I would have thought, with the advent of async Tasks this kind of tooling would have been made available to all programmers.","Url":"https://github.com/dotnet/standard/issues/1704","RelatedDescription":"Open issue \"Why is System.Threading.Task.TaskToApm internal?\" (#1704)"},{"Id":"563191239","IsPullRequest":true,"CreatedAt":"2020-02-11T13:20:58","Actor":"dotnet-maestro[bot]","Number":"1703","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1703","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1703)"},{"Id":"562545610","IsPullRequest":true,"CreatedAt":"2020-02-10T13:06:14","Actor":"dotnet-maestro[bot]","Number":"1702","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200209.1\r\n- **Date Produced**: 2/9/2020 2:00 PM\r\n- **Commit**: b0e8d3944155f94f83deea8afe025debe369e69f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20109.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1702","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1702)"},{"Id":"562173293","IsPullRequest":true,"CreatedAt":"2020-02-09T13:21:01","Actor":"dotnet-maestro[bot]","Number":"1701","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200208.2\r\n- **Date Produced**: 2/9/2020 1:00 AM\r\n- **Commit**: 490732cf6dcb77631fee038da1af0df1518c2fb0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20108.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1701","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1701)"},{"Id":"562099295","IsPullRequest":false,"CreatedAt":"2020-02-09T00:28:01","Actor":"dmitriyse","Number":"1700","RawContent":null,"Title":"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+","State":"open","Body":"The first framework that provides NetStandard 2.1 is NetCoreApp 3.0.\r\nSo NetStandard 2.1 have no limitations in adding API from .NetCoreApp 3.0\r\n\r\nDespite some useful ```TheadPool``` methods are missing in the .Net Standard 2.1.\r\nFor example:\r\n```\r\n public static bool UnsafeQueueUserWorkItem<TState>(Action<TState> callBack, TState state, bool preferLocal)\r\n```\r\nthese methods are mandatory for the efficient implementation of the ```IValueTaskSource```\r\n\r\nReal life case:\r\nThe ```ManualResetValueTaskSourceCore<TResult>``` included into NetStandard 2.1, but if you try to copy-paste its sources and modernize for your needs  \r\nyou will unable to do it being NetStandard 2.1 library, you need to upgrade to NetCoreApp 3.0.\r\nIf upgrade to NetCoreApp 3.0 is unacceptable then you need to have inefficient implementation - very disappointing problem where you don't expect it.","Url":"https://github.com/dotnet/standard/issues/1700","RelatedDescription":"Open issue \"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+\" (#1700)"},{"Id":"562016101","IsPullRequest":true,"CreatedAt":"2020-02-08T13:20:56","Actor":"dotnet-maestro[bot]","Number":"1699","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200207.14\r\n- **Date Produced**: 2/8/2020 1:30 AM\r\n- **Commit**: c84720afc91b635e2fbeb5dbd7e2742f18773e0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20107.14\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1699","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1699)"},{"Id":"561623720","IsPullRequest":true,"CreatedAt":"2020-02-07T13:20:59","Actor":"dotnet-maestro[bot]","Number":"1698","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200206.12\r\n- **Date Produced**: 2/7/2020 4:05 AM\r\n- **Commit**: 50f7059d3a7a83ae1919516755b9ca92c67805e8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20106.12\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1698","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1698)"},{"Id":"560997721","IsPullRequest":true,"CreatedAt":"2020-02-06T13:05:54","Actor":"dotnet-maestro[bot]","Number":"1697","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 8:49 PM\r\n- **Commit**: b65df96ccb820fd5f7ea226aeba310485f395130\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20105.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1697","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1697)"},{"Id":"560356993","IsPullRequest":true,"CreatedAt":"2020-02-05T13:10:57","Actor":"dotnet-maestro[bot]","Number":"1696","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/5/2020 12:17 AM\r\n- **Commit**: 0b404cb7575c8addc5e10f3fac57e79c596db28e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20104.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1696","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1696)"},{"Id":"559704588","IsPullRequest":true,"CreatedAt":"2020-02-04T13:11:00","Actor":"dotnet-maestro[bot]","Number":"1695","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200203.5\r\n- **Date Produced**: 2/4/2020 3:04 AM\r\n- **Commit**: 27c8467294a4e64ac6642b4c12ca63495ff126c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20103.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1695","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1695)"},{"Id":"558693346","IsPullRequest":true,"CreatedAt":"2020-02-02T13:20:54","Actor":"dotnet-maestro[bot]","Number":"1694","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200201.2\r\n- **Date Produced**: 2/1/2020 11:43 PM\r\n- **Commit**: 779323758d3e8aa7e4ee3dc2619d57e696078089\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20101.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1694","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1694)"},{"Id":"558537562","IsPullRequest":true,"CreatedAt":"2020-02-01T13:20:53","Actor":"dotnet-maestro[bot]","Number":"1693","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200131.7\r\n- **Date Produced**: 1/31/2020 10:34 PM\r\n- **Commit**: bdc8c2f698e8c15195872af1e316b4b8f0eae7e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20081.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1693","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1693)"},{"Id":"558118871","IsPullRequest":true,"CreatedAt":"2020-01-31T13:11:41","Actor":"dotnet-maestro[bot]","Number":"1692","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200130.4\r\n- **Date Produced**: 1/31/2020 1:21 AM\r\n- **Commit**: 00402f1fdc2b59dbc4f0b1c143850cb72e69fc90\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20080.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1692","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1692)"},{"Id":"557898042","IsPullRequest":false,"CreatedAt":"2020-01-31T04:01:42","Actor":"jfcardinal","Number":"1691","RawContent":null,"Title":"string.Concat(ReadOnlySpan, ...)?","State":"open","Body":"In January of 2019 @stephentoub proposed adding string.Concat() overloads that accept ReadOnlySpan<char> in corefx. Those were implemented that same month.\r\n\r\nAs far as I can tell, those overloads are not part of .NET Standard 2.1. I have not found a prior discussion of adding them to a future version of .NET Standard, but perhaps I have not searched well enough.\r\n\r\nAre they being considered?","Url":"https://github.com/dotnet/standard/issues/1691","RelatedDescription":"Open issue \"string.Concat(ReadOnlySpan, ...)?\" (#1691)"},{"Id":"557478626","IsPullRequest":true,"CreatedAt":"2020-01-30T13:20:57","Actor":"dotnet-maestro[bot]","Number":"1690","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200129.8\r\n- **Date Produced**: 1/30/2020 4:30 AM\r\n- **Commit**: 8466781af43871ee0d4a1655acc008a305a62c0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20079.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1690","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1690)"},{"Id":"556564619","IsPullRequest":false,"CreatedAt":"2020-01-29T00:14:20","Actor":"ThadHouse","Number":"1689","RawContent":null,"Title":"Clarify how to use .NET Standard 2.1 from Mono","State":"open","Body":".NET Standard 2.1 adds a lot of new stuff I would like to use from a project targeting .NET Core 3 and Mono 6+. I can get the .NET Standard 2.1 libraries built easily enough, but I can't find a single TFM that I can use for the executable references the .NET Standard 2.1 libraries. \r\n\r\nI can target .NET Core 3, but then I get extra libraries in there mono doesn't have, so I have to be careful never to use any of the unsupported functions.\r\n\r\nI can't target .NET 4.8 or any framework library. This works in Mono, but can't link to the Net Standard 2.1 libraries.\r\n\r\nDoes there exist a runtime framework I can target that has all the .NET Standard 2.1 functions but none of the .NET Core 3 functions?","Url":"https://github.com/dotnet/standard/issues/1689","RelatedDescription":"Open issue \"Clarify how to use .NET Standard 2.1 from Mono\" (#1689)"},{"Id":"556194189","IsPullRequest":true,"CreatedAt":"2020-01-28T13:10:53","Actor":"dotnet-maestro[bot]","Number":"1688","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200127.7\r\n- **Date Produced**: 1/28/2020 3:24 AM\r\n- **Commit**: 8807a492094e7972f162440e72fd00ce4def8764\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20077.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1688","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1688)"},{"Id":"555558276","IsPullRequest":true,"CreatedAt":"2020-01-27T13:10:55","Actor":"dotnet-maestro[bot]","Number":"1687","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200126.3\r\n- **Date Produced**: 1/26/2020 6:39 PM\r\n- **Commit**: cc8fe69635c7c6e791c87540851aea75946945fa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20076.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1687","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1687)"},{"Id":"555225161","IsPullRequest":true,"CreatedAt":"2020-01-26T13:25:57","Actor":"dotnet-maestro[bot]","Number":"1686","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200125.3\r\n- **Date Produced**: 1/26/2020 7:06 AM\r\n- **Commit**: 0fcbdf1444ade7228ae0d179bb23d08ea3df13eb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20075.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1686","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1686)"},{"Id":"555082841","IsPullRequest":true,"CreatedAt":"2020-01-25T13:10:52","Actor":"dotnet-maestro[bot]","Number":"1685","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200124.6\r\n- **Date Produced**: 1/25/2020 1:13 AM\r\n- **Commit**: 841c83d8a5b8d8a6bd427f6798b086780138aa9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20074.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1685","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1685)"},{"Id":"554723068","IsPullRequest":true,"CreatedAt":"2020-01-24T13:05:53","Actor":"dotnet-maestro[bot]","Number":"1684","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200123.17\r\n- **Date Produced**: 1/24/2020 3:10 AM\r\n- **Commit**: 82031ff8d9a40204c774fcc1b0f93ace906cee88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20073.17\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1684","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1684)"},{"Id":"554142460","IsPullRequest":true,"CreatedAt":"2020-01-23T13:10:52","Actor":"dotnet-maestro[bot]","Number":"1683","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200122.3\r\n- **Date Produced**: 1/22/2020 10:48 PM\r\n- **Commit**: 0fb5c992a80a6fb52bfb1d2b726f75157c1ce210\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20072.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1683","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1683)"},{"Id":"547178727","IsPullRequest":false,"CreatedAt":"2020-01-22T22:29:15","Actor":"Chamberlain91","Number":"1677","RawContent":null,"Title":"Bug with \"is\" operator on int[] and uint[] via object type reference.","State":"closed","Body":"Hello developers,\r\n\r\nI've discovered what I believe to be a bug. In the code below you can see I create two arrays, one of `int` and one of `uint` and assign them both to object. I then check the `is` operator for type comparison.\r\n```cs\r\n            object ai = new int[0];\r\n            object au = new uint[0];\r\n\r\n            Console.WriteLine(ai is uint[]);\r\n            Console.WriteLine(ai is int[]);\r\n            Console.WriteLine(au is uint[]);\r\n            Console.WriteLine(au is int[]);\r\n```\r\nThe output I get is four prints of true, which I would expect only two.\r\n\r\nThe strange thing is if I assign `ai` and `au` to their actual types instead of `object`, then the code works as expected.\r\n\r\nSorry if this should be in the runtime repo or somewhere else.","Url":"https://github.com/dotnet/standard/issues/1677","RelatedDescription":"Closed issue \"Bug with \"is\" operator on int[] and uint[] via object type reference.\" (#1677)"},{"Id":"553525948","IsPullRequest":true,"CreatedAt":"2020-01-22T13:16:19","Actor":"dotnet-maestro[bot]","Number":"1682","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200121.3\r\n- **Date Produced**: 1/21/2020 8:28 PM\r\n- **Commit**: e06e2807048b6bc7b3549b401a1833bed3bcd8c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20071.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1682","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1682)"},{"Id":"549879760","IsPullRequest":false,"CreatedAt":"2020-01-15T00:50:36","Actor":"pushkin-","Number":"1681","RawContent":null,"Title":"Confused about EOL for .NET Standard versions","State":"closed","Body":"I am having trouble understanding EOL support for .NET Standard versions. I could only find information about .NET Core [here](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nI am planning on using .NET Core 3.1. From what I've found out, I can target .NET Standard 2.1 and anything below it.\r\n\r\nIdeally, I would like my .NET Framework code to also reference the .NET Standard code, which means that I have to use .NET Standard 2.0. However, my concern is that .NET Standard 2.0's support will end soonish, at least compared to 2.1.\r\n\r\nIs that correct? What is EOL for .NET Standard 2.0?\r\n\r\nI did also read that Standard versions are fixed/immutable so new APIs get added to new Standard versions (and so maintenance perhaps doesn't make sense for Standard; new versions just get created). Maybe that partially answers my question. ","Url":"https://github.com/dotnet/standard/issues/1681","RelatedDescription":"Closed issue \"Confused about EOL for .NET Standard versions\" (#1681)"},{"Id":"548387889","IsPullRequest":false,"CreatedAt":"2020-01-13T22:25:56","Actor":"replaysMike","Number":"1679","RawContent":null,"Title":"UTF8 Encoding isn't consistent with .Net Framework","State":"closed","Body":"I found a subtle difference that was revealed in a bunch of hashing code I had written a while back for .Net Framework. I wrote a multi-platform test that shows UTF8Encoding is treated slightly different in .Net Standard and I don't really have a good way to solve it yet.\r\n\r\nConsider the following - I encoded a string in hex to guarantee the bytes are the same for the test:\r\n(hopefully github doesn't mangle the expected string, it looks correct after previewing)\r\n\r\n```csharp\r\n[Test]\r\npublic void ShouldEncodeUTF8()\r\n{\r\n    var netFrameworkExpected = \"�\\u0004[\\u0004�\\u0001�\\v,�\\u001cn]�$«�� )�:�YH̗I5�V���Nl7α��i�g_�ZQW%\\u001d�Dy\\u001eЕ\\u0013w�v+\\u0012*��\\u000f*��\\u0019r��}���8��w��&�\\r���\\f����?���&�t�M��[�`kzhz9\\u0015�\\u0012I�\\u001ey_`�\\u0011\\tF��A�Af~��q��%P�����\\u0003�x�(g���e\\u001fM�32\\u0014��\";\r\n    var hex = \"BC045B0488019F0B2CE61C6E5DFC24C2ABE09BDA2029CC3AE9AD5948CC9749359756B1A2D94E6C37CEB189D269AA675FF75A5157251D8544791ED09513779B762B122A89E10F2A98E91972D7CA7DF9F98038DFDB779FED269A0DE3F8FA0C828993B23F85B5A826B474E84DFECD5B87606B7A687A3915C31249CE1E795F609A11094686DF41E99041667E9DD271A0E22550FDD0C3CEF0039678F328679B8590651F4DBE3332148DBA\";\r\n    var bytes = hex.HexToBytes();\r\n    var utf8Encoded = Encoding.UTF8.GetString(bytes);\r\n    Assert.AreEqual(netFrameworkExpected, utf8Encoded);\r\n}\r\n\r\npublic static byte[] HexToBytes(this string hexString)\r\n{\r\n    return Enumerable.Range(0, hexString.Length)\r\n        .Where(x => x % 2 == 0)\r\n        .Select(x => Convert.ToByte(hexString.Substring(x, 2), 16))\r\n        .ToArray();\r\n}\r\n```\r\n\r\nThis test will pass on .Net Framework 4.8, but will fail on .Net Standard 2.0","Url":"https://github.com/dotnet/standard/issues/1679","RelatedDescription":"Closed issue \"UTF8 Encoding isn't consistent with .Net Framework\" (#1679)"},{"Id":"548955096","IsPullRequest":false,"CreatedAt":"2020-01-13T14:10:16","Actor":"richbryant","Number":"1680","RawContent":null,"Title":"RFC: Add a Unit type to the System namespace","State":"open","Body":"**Abstract**\r\n\r\n`Unit`s are proliferating in the NetCore ecosystem.  Nobody can deny their utility (since you can't return a void) but this does introduce the issue of incompatible structs all called `Unit` provided by different packages.\r\n\r\n**Proposal**\r\n\r\nImplement a `System.Unit` struct, taking on board the needs of the major libraries providing `Unit`s at the moment.\r\n\r\n**Benefits**\r\n\r\n- Provide a `Type` that can be used _interchangeably_ between the major libraries\r\n- Provide a `Unit` for future libraries, preventing yet more proliferation\r\n- Make the lives of everyone who has to work these so much better\r\n\r\n*_Example_*\r\n\r\n[This file](https://github.com/richbryant/BetterUnit/blob/master/BetterUnit/Unit.cs) is an example of integrating `System.Reactive.Unit` (paging @ghuntley @onovotny ) with `Mediatr.Unit` (credit @jbogard) and `language-ext.Unit` (credit @louthy ).\r\n\r\nThis covers 90% of the Use Cases for `Unit`.  If this were implemented in the `System` namespace with other Types, it would solve a lot of issues and prevent a lot of future issues .\r\n","Url":"https://github.com/dotnet/standard/issues/1680","RelatedDescription":"Open issue \"RFC: Add a Unit type to the System namespace\" (#1680)"},{"Id":"546869832","IsPullRequest":false,"CreatedAt":"2020-01-08T13:45:20","Actor":"sudheer876","Number":"1676","RawContent":null,"Title":"Severity Code Description Project File Line Suppression State Warning The primary reference \"Microsoft.Xrm.Sdk\" could not be resolved because it was built against the \".NETFramework,Version=v4.6.2\" framework.","State":"open","Body":"Severity Code Description Project File Line Suppression State\r\nWarning The primary reference \"Microsoft.Xrm.Sdk\" could not be resolved because it was built against the \".NETFramework,Version=v4.6.2\" framework. This is a higher version than the currently targeted framework \".NETFramework,Version=v4.5.2\".\tCRM\t\t\t\r\n","Url":"https://github.com/dotnet/standard/issues/1676","RelatedDescription":"Open issue \"Severity Code Description Project File Line Suppression State Warning The primary reference \"Microsoft.Xrm.Sdk\" could not be resolved because it was built against the \".NETFramework,Version=v4.6.2\" framework.\" (#1676)"},{"Id":"546426210","IsPullRequest":false,"CreatedAt":"2020-01-07T18:00:20","Actor":"sudheer876","Number":"1675","RawContent":null,"Title":"Please explain any one early binding and late binding with sample example code","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1675","RelatedDescription":"Open issue \"Please explain any one early binding and late binding with sample example code\" (#1675)"},{"Id":"546122602","IsPullRequest":false,"CreatedAt":"2020-01-07T12:32:41","Actor":"sudheer876","Number":"1674","RawContent":null,"Title":"which assembly we have to add for fault exception?","State":"closed","Body":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0246\tThe type or namespace name 'FaultException<>' could not be found (are you missing a using directive or an assembly reference?)","Url":"https://github.com/dotnet/standard/issues/1674","RelatedDescription":"Closed issue \"which assembly we have to add for fault exception?\" (#1674)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"563434956","IsPullRequest":true,"CreatedAt":"2020-02-11T19:46:12","Actor":"omajid","Number":"42853","RawContent":null,"Title":"WIP: Dummy commit to see ci status","State":"open","Body":"just want to see the status of ci out of the box","Url":"https://github.com/dotnet/corefx/pull/42853","RelatedDescription":"Open PR \"WIP: Dummy commit to see ci status\" (#42853)"},{"Id":"562912148","IsPullRequest":true,"CreatedAt":"2020-02-11T17:58:08","Actor":"Anipik","Number":"42850","RawContent":null,"Title":"validating build","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42850","RelatedDescription":"Closed or merged PR \"validating build\" (#42850)"},{"Id":"563334512","IsPullRequest":true,"CreatedAt":"2020-02-11T16:43:43","Actor":"omajid","Number":"42852","RawContent":null,"Title":"[release/3.1] Add cgroup2 support","State":"open","Body":"This is a cherry-pick of:\r\n\r\n- #39633\r\n- #39686","Url":"https://github.com/dotnet/corefx/pull/42852","RelatedDescription":"Open PR \"[release/3.1] Add cgroup2 support\" (#42852)"},{"Id":"562931431","IsPullRequest":true,"CreatedAt":"2020-02-11T01:50:20","Actor":"tgani-msft","Number":"42851","RawContent":null,"Title":"Backport attribute to support inline namespaces in C++/CLI ","State":"open","Body":"Port commit cef57de93bab815726f860f79195227c65e4fce5 from dotnet/runtime (5.0) to dotnet/corefx (3.1).\r\n\r\ncommit cef57de93bab815726f860f79195227c65e4fce5\r\nAuthor: Tanveer Gani <45886079+tgani-msft@users.noreply.github.com>\r\nDate:   Thu Jan 30 10:28:26 2020 -0800\r\n\r\n    Add attribute to support inline namespaces in C++/CLI. (#781)\r\n\r\n    * Add attribute to support inline namespaces in C++/CLI.\r\n\r\n    A new assembly-scope custom attribute\r\n\r\n    [CppInlineNamespace(string dottedName)]\r\n\r\n    has been added to implement inline namespaces in C++/CLI. For every\r\n    inline namespace encountered in a translation unit, the C++ compiler\r\n    will emit this attribute with the fully scoped name, in CLR dotted\r\n    form, as the argument for the attribute.\r\n\r\n    * Add [CppInlineNamespace] to refs.","Url":"https://github.com/dotnet/corefx/pull/42851","RelatedDescription":"Open PR \"Backport attribute to support inline namespaces in C++/CLI \" (#42851)"},{"Id":"562902669","IsPullRequest":true,"CreatedAt":"2020-02-11T00:05:21","Actor":"joperezr","Number":"42849","RawContent":null,"Title":"[Release/2.1] Adding .NET Framework asset on OOB packages","State":"open","Body":"Contributes to https://github.com/dotnet/runtime/issues/1625\r\n\r\nPTAL: @ericstj @ahsonkhan \r\n\r\nFYI: @Dmitry-Matveev after this fix is in and shipped, then App Insights will be able to depend on the new version of System.Memory which will stop requiring facades to get binplaced and binding redirects to be required.\r\n\r\nThe changes included in this PR will fix all packages that are supported in .Net Framework, currently provide a .NET Standard asset for one .NET Framework version, and we no longer build on other branches (master or release/3.1). The thing left to do before this goes in, is to analyze the packages that had a reference to one of these and no longer build on other branches, so that we produce a new version of them referencing the new packages.","Url":"https://github.com/dotnet/corefx/pull/42849","RelatedDescription":"Open PR \"[Release/2.1] Adding .NET Framework asset on OOB packages\" (#42849)"},{"Id":"558211552","IsPullRequest":true,"CreatedAt":"2020-01-31T15:50:37","Actor":"bartonjs","Number":"42848","RawContent":null,"Title":"Update test OS matrix for release/3.1","State":"open","Body":"* Run servicing PRs as fullMatrix: true\r\n* Refresh all docker images to their latest tag\r\n* Added Alpine.311 (amd64)\r\n* Added Fedora.30\r\n* Removed Ubuntu.1904\r\n* Added Ubuntu.1910\r\n* Added OSX.1015","Url":"https://github.com/dotnet/corefx/pull/42848","RelatedDescription":"Open PR \"Update test OS matrix for release/3.1\" (#42848)"},{"Id":"558160930","IsPullRequest":true,"CreatedAt":"2020-01-31T15:04:27","Actor":"stephentoub","Number":"42847","RawContent":null,"Title":"Fix readme.md link in contributing.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42847","RelatedDescription":"Closed or merged PR \"Fix readme.md link in contributing.md\" (#42847)"},{"Id":"556561547","IsPullRequest":true,"CreatedAt":"2020-01-29T00:04:27","Actor":"JeremyKuhne","Number":"42845","RawContent":null,"Title":"Fix ReadOnlySequence GetFirstSpan","State":"open","Body":"Ports https://github.com/dotnet/runtime/pull/276 manually, to address https://github.com/dotnet/runtime/issues/2205.\r\n\r\n**Description**\r\n\r\nWhen getting the first span `GetFirstSpan` from a sequence that is made up of a single segment view of a sequence with multiple sequences the `next` `SequencePosition` is incorrect and will lead to failures trying to enumerate in `SequenceReader` (or anything else that tries to use the `GetFirstSpan` and the returned `SequencePosition`).\r\n\r\n**Customer Impact**\r\n\r\nCustomers will see intermittent failures when sequences happen to align in this way. This issue has gotten multiple reports.\r\n\r\n**Regression?**\r\n\r\nNo.\r\n\r\n**Packaging reviewed?**\r\n\r\nBug fix, no API surface change.\r\n\r\n**Risk**\r\n\r\nLow. This fix has been in master for a few months and there are significant tests and upstream users.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42845","RelatedDescription":"Open PR \"Fix ReadOnlySequence GetFirstSpan\" (#42845)"},{"Id":"555744746","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:18","Actor":"danmosemsft","Number":"42843","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42843","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#42843)"},{"Id":"554298803","IsPullRequest":true,"CreatedAt":"2020-01-23T17:26:35","Actor":"bartonjs","Number":"42838","RawContent":null,"Title":"Update test OS matrix for release/2.1","State":"open","Body":"```\r\n- redundant RHEL.7\r\n- EOL Ubuntu.1404\r\n- EOL OpenSUSE.42\r\n- EOL Fedora.27\r\n- EOL Fedora.28\r\n+ Fedora.30\r\n-/+ Update Alpine 3.9 and 3.10 to latest docker images\r\n- EOL OSX.1012\r\n+ OSX.1014\r\n+ OSX.1015\r\n- Unsupported Windows.Nano\r\n```","Url":"https://github.com/dotnet/corefx/pull/42838","RelatedDescription":"Open PR \"Update test OS matrix for release/2.1\" (#42838)"},{"Id":"553888832","IsPullRequest":true,"CreatedAt":"2020-01-23T01:27:49","Actor":"halter73","Number":"42837","RawContent":null,"Title":"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync","State":"open","Body":"3.1 backport of dotnet/runtime#1437.\r\n\r\nFixes dotnet/runtime#1436","Url":"https://github.com/dotnet/corefx/pull/42837","RelatedDescription":"Open PR \"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync\" (#42837)"},{"Id":"550563524","IsPullRequest":true,"CreatedAt":"2020-01-17T22:17:49","Actor":"dotnet-maestro-bot","Number":"42831","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @danmosemsft\n* @Anipik\n* @dotnet-maestro[bot]\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42831","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42831)"},{"Id":"551300317","IsPullRequest":true,"CreatedAt":"2020-01-17T17:54:34","Actor":"dotnet-maestro[bot]","Number":"42834","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200116.2\r\n- **Date Produced**: 1/17/2020 2:55 AM\r\n- **Commit**: fd22fd600a2526a7c58536da0e80325eb710d7f1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20066.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20066.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20066.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42834","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42834)"},{"Id":"551390974","IsPullRequest":true,"CreatedAt":"2020-01-17T13:46:02","Actor":"dotnet-maestro[bot]","Number":"42835","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: 66928e2e-bd95-4f7e-280f-08d690bc5860\r\n- **Build**: 20200116.3\r\n- **Date Produced**: 1/17/2020 6:12 AM\r\n- **Commit**: 259ce7d4619478cfefe7b0c0f6fa765f765f7e37\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.3-servicing.20066.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.3-servicing.20066.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.3-servicing.20066.3\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42835","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#42835)"},{"Id":"550491818","IsPullRequest":true,"CreatedAt":"2020-01-16T22:04:38","Actor":"GrabYourPitchforks","Number":"42829","RawContent":null,"Title":"[release/3.1] Revert changes to EncoderNLS/DecoderNLS.Convert unit tests","State":"closed","Body":"These are the unit test changes to accompany https://github.com/dotnet/coreclr/pull/27996, which was committed to the __release/3.1__ branch in the _coreclr_ repo.\r\n\r\nThis _corefx_ PR isn't a functional product change. It's just updating the unit tests to reflect the incoming _coreclr_ changes. Once a nightly _coreclr_ build is created and it works its way into this repo, this PR will resolve the resulting unit test failures and will unblock future work in this repo.","Url":"https://github.com/dotnet/corefx/pull/42829","RelatedDescription":"Closed or merged PR \"[release/3.1] Revert changes to EncoderNLS/DecoderNLS.Convert unit tests\" (#42829)"},{"Id":"550704048","IsPullRequest":true,"CreatedAt":"2020-01-16T21:35:58","Actor":"dotnet-maestro[bot]","Number":"42832","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.4\r\n- **Date Produced**: 1/16/2020 3:43 AM\r\n- **Commit**: 4e29494f5610ecd739b1b762b36d3b93c61a4a4b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20065.4\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20065.4\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20065.4\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42832","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42832)"},{"Id":"550410091","IsPullRequest":true,"CreatedAt":"2020-01-16T05:32:52","Actor":"dotnet-maestro[bot]","Number":"42827","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: 66928e2e-bd95-4f7e-280f-08d690bc5860\r\n- **Build**: 20200115.2\r\n- **Date Produced**: 1/15/2020 8:41 PM\r\n- **Commit**: c76e272e578101a245e0ff895d1c3879b7995832\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.3-servicing.20065.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.3-servicing.20065.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.3-servicing.20065.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42827","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#42827)"},{"Id":"547574992","IsPullRequest":true,"CreatedAt":"2020-01-16T04:13:22","Actor":"bartonjs","Number":"42809","RawContent":null,"Title":"[release/2.1] Always build the OpenSSL shim in portable mode on macOS.","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42809","RelatedDescription":"Closed or merged PR \"[release/2.1] Always build the OpenSSL shim in portable mode on macOS.\" (#42809)"},{"Id":"547582097","IsPullRequest":true,"CreatedAt":"2020-01-16T04:13:05","Actor":"bartonjs","Number":"42810","RawContent":null,"Title":"[release/3.0] Always build the OpenSSL shim in portable mode on macOS.","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42810","RelatedDescription":"Closed or merged PR \"[release/3.0] Always build the OpenSSL shim in portable mode on macOS.\" (#42810)"},{"Id":"550545725","IsPullRequest":true,"CreatedAt":"2020-01-16T04:10:55","Actor":"dotnet-maestro[bot]","Number":"42830","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.3\r\n- **Date Produced**: 1/15/2020 8:39 PM\r\n- **Commit**: f14483fb2857f507c302815a54d02d275864e423\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20065.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20065.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20065.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42830","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42830)"},{"Id":"550413141","IsPullRequest":true,"CreatedAt":"2020-01-15T23:08:47","Actor":"dotnet-maestro[bot]","Number":"42828","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.1\r\n- **Date Produced**: 1/15/2020 8:47 AM\r\n- **Commit**: c43d0336eb999fe3bc7bf5873effe89cee716c69\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.1-servicing.20065.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.1-servicing.20065.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.1-servicing.20065.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42828","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42828)"},{"Id":"545972653","IsPullRequest":true,"CreatedAt":"2020-01-15T17:52:25","Actor":"bartonjs","Number":"42801","RawContent":null,"Title":"[release/3.1] Always build the OpenSSL shim in portable mode on macOS.","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42801","RelatedDescription":"Closed or merged PR \"[release/3.1] Always build the OpenSSL shim in portable mode on macOS.\" (#42801)"},{"Id":"549897137","IsPullRequest":true,"CreatedAt":"2020-01-15T17:38:38","Actor":"Anipik","Number":"42824","RawContent":null,"Title":"updating assembly version and package version for system.data.sqlclient","State":"closed","Body":"There is no need to update package index here because we update that for 2.x branches after we have published the package. Because we fix that functionality in 3.1\r\n","Url":"https://github.com/dotnet/corefx/pull/42824","RelatedDescription":"Closed or merged PR \"updating assembly version and package version for system.data.sqlclient\" (#42824)"},{"Id":"549892106","IsPullRequest":true,"CreatedAt":"2020-01-15T06:32:14","Actor":"Anipik","Number":"42823","RawContent":null,"Title":"updating assembly versions, packageversions and publishing the packages","State":"closed","Body":"We have serviced 6 commits in 3.1.2\r\n3  -> system.data.sqlclient\r\n1 -> system.text.json\r\n1 -> Reflection.MetadataLoadContext (eric already made that change for this change)\r\n1 -> changes system.Native (part of shared framework)","Url":"https://github.com/dotnet/corefx/pull/42823","RelatedDescription":"Closed or merged PR \"updating assembly versions, packageversions and publishing the packages\" (#42823)"},{"Id":"549865580","IsPullRequest":true,"CreatedAt":"2020-01-15T00:37:58","Actor":"Anipik","Number":"42821","RawContent":null,"Title":"update branding of 2.1.16","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42821","RelatedDescription":"Closed or merged PR \"update branding of 2.1.16\" (#42821)"},{"Id":"549887977","IsPullRequest":true,"CreatedAt":"2020-01-15T00:34:55","Actor":"dotnet-maestro-bot","Number":"42822","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28325-011, servicing-28327-021, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42822","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28325-011, servicing-28327-021, stable, respectively (release/2.1)\" (#42822)"},{"Id":"549772423","IsPullRequest":true,"CreatedAt":"2020-01-14T20:37:06","Actor":"dotnet-maestro-bot","Number":"42820","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @dotnet-maestro[bot]\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42820","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42820)"},{"Id":"549734204","IsPullRequest":true,"CreatedAt":"2020-01-14T19:28:33","Actor":"Anipik","Number":"42818","RawContent":null,"Title":"update branding to 3.0.3","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42818","RelatedDescription":"Closed or merged PR \"update branding to 3.0.3\" (#42818)"},{"Id":"546538978","IsPullRequest":true,"CreatedAt":"2020-01-14T19:22:39","Actor":"Anipik","Number":"42803","RawContent":null,"Title":"update branding to 3.1.2","State":"closed","Body":"No packages were published in 3.1.1 so packages.builds is already cleared\r\nNeeds to merge after we release 3.1.1","Url":"https://github.com/dotnet/corefx/pull/42803","RelatedDescription":"Closed or merged PR \"update branding to 3.1.2\" (#42803)"},{"Id":"546888825","IsPullRequest":true,"CreatedAt":"2020-01-08T14:19:01","Actor":"dotnet-maestro-bot","Number":"42805","RawContent":null,"Title":"Update BuildTools, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-04626-02, servicing-28327-021, rel-28605-00, rel-28605-00, respectively (release/uwp6.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42805","RelatedDescription":"Open PR \"Update BuildTools, CoreFx, ProjectNTfs, ProjectNTfsTestILC to rc1-04626-02, servicing-28327-021, rel-28605-00, rel-28605-00, respectively (release/uwp6.2)\" (#42805)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"563757268","IsPullRequest":true,"CreatedAt":"2020-02-12T05:09:12","Actor":"JoeRobich","Number":"41602","RawContent":null,"Title":"Fix misc build badges on Readme","State":"open","Body":"* Swapped the 'Spanish' and 'Mono' column headers\r\n* Changes 'Linux_Test' mono to 'Linux_Test coreclr'","Url":"https://github.com/dotnet/roslyn/pull/41602","RelatedDescription":"Open PR \"Fix misc build badges on Readme\" (#41602)"},{"Id":"563757079","IsPullRequest":false,"CreatedAt":"2020-02-12T05:08:44","Actor":"davkean","Number":"41601","RawContent":null,"Title":"[Regression] Add items from unimported namespaces does not sort items","State":"open","Body":"**Version Used**: \r\nVersion 16.6.0 Preview 1.0 [29811.143.master]\r\n\r\nBut this could repro on 16.5, but I don't have build.\r\n\r\n**Steps to Reproduce**:\r\n``` C#\r\nusing System;\r\n\r\nnamespace ConsoleApp189\r\n{\r\n  class Program\r\n  {\r\n    static void Main(string[] args)\r\n    {\r\n      AppliesTo\r\n    }\r\n  }\r\n\r\n  class AppliesTo { }\r\n  class AppliesToA { }\r\n\r\n}\r\n\r\nnamespace Another\r\n{\r\n  class AppliesTo { }\r\n  class AppliesToA { }\r\n}\r\n\r\n```\r\n**Expected Behavior**:\r\nOrder to be in:\r\n\r\nAppliesTo\r\nAppliesTo (Another)\r\nAppliesToA\r\nAppliesToA (Another)\r\n\r\n**Actual Behavior**:\r\n\r\nOrder switches between:\r\n\r\nAppliesTo (Another)\r\nAppliesTo\r\nAppliesToA (Another)\r\nAppliesToA\r\n\r\nAppliesTo (Another)\r\nAppliesToA (Another)\r\nAppliesTo\r\nAppliesToA\r\n\r\n![Order](https://user-images.githubusercontent.com/1103906/74301662-debc9700-4da7-11ea-8978-23e10b359c43.gif)","Url":"https://github.com/dotnet/roslyn/issues/41601","RelatedDescription":"Open issue \"[Regression] Add items from unimported namespaces does not sort items\" (#41601)"},{"Id":"563754226","IsPullRequest":false,"CreatedAt":"2020-02-12T05:00:14","Actor":"AlekseyTs","Number":"41600","RawContent":null,"Title":"Incorrect result is produced by DataFlowAnalysis.DataFlowsOut when local functions are involved","State":"open","Body":"```\r\n\r\n        [Fact]\r\n        public void Test1()\r\n        {\r\n            var source =\r\n@\"\r\nclass P\r\n{\r\n    static void Main()\r\n    {\r\n        bool Dummy(params object[] x) {return true;}\r\n\r\n        try {}\r\n        catch when (TakeOutParam(out var x1) && x1 > 0)\r\n        {\r\n            Dummy(x1);\r\n        }\r\n\r\n        try {}\r\n        catch when (Dummy(TakeOutParam(out var x14), \r\n                            TakeOutParam(out var x14), // 2\r\n                            x14))\r\n        {\r\n            Dummy(x14);\r\n        }\r\n\r\n        static bool TakeOutParam(out int x) \r\n        {\r\n            x = 123;\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\";\r\n            var compilation = CreateCompilationWithMscorlib45(source, options: TestOptions.ReleaseDll, parseOptions: TestOptions.Regular);\r\n\r\n            var tree = compilation.SyntaxTrees.Single();\r\n            var model = compilation.GetSemanticModel(tree);\r\n\r\n            var node = tree.GetRoot().DescendantNodes().OfType<InvocationExpressionSyntax>().First();\r\n            Assert.Equal(\"TakeOutParam(out var x1)\", node.ToString());\r\n            var flow = model.AnalyzeDataFlow(node);\r\n            Assert.Equal(\"x1\", flow.DataFlowsOut.Single().Name);\r\n        }\r\n```\r\n\r\nExpected: ```x1``` is returned\r\n\r\nObserved: ```x1``` and ```x14``` are returned.\r\n```\r\n[xUnit.net 00:00:00.01] xUnit.net VSTest Adapter v2.4.1-pre.build.4059 (64-bit .NET Core 3.1.1)\r\n[xUnit.net 00:00:02.27]   Starting:    Microsoft.CodeAnalysis.CSharp.Semantic.UnitTests\r\nThe active test run was aborted. Reason: Test host process crashed : Process terminated. Assertion failed.\r\n   at Microsoft.CodeAnalysis.CSharp.DataFlowsOutWalker.Analyze(CSharpCompilation compilation, Symbol member, BoundNode node, BoundNode firstInRegion, BoundNode lastInRegion, HashSet`1 unassignedVariables, ImmutableArray`1 dataFlowsIn) in F:\\GitHub\\roslyn\\src\\Compilers\\CSharp\\Portable\\FlowAnalysis\\DataFlowsOutWalker.cs:line 40\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpDataFlowAnalysis.get_DataFlowsOut() in F:\\GitHub\\roslyn\\src\\Compilers\\CSharp\\Portable\\FlowAnalysis\\CSharpDataFlowAnalysis.cs:line 156\r\n   at Microsoft.CodeAnalysis.CSharp.UnitTests.OutVarTests.Test1() in F:\\GitHub\\roslyn\\src\\Compilers\\CSharp\\Test\\Semantic\\Semantics\\OutVarTests.cs:line 35332\r\n```\r\n\r\nNo repro when ```TakeOutParam``` and ```Dummy``` are changed to be real methods vs. local functions.  Still reproduces when only ```TakeOutParam``` is converted, but ```Dummy``` remains a local function.","Url":"https://github.com/dotnet/roslyn/issues/41600","RelatedDescription":"Open issue \"Incorrect result is produced by DataFlowAnalysis.DataFlowsOut when local functions are involved\" (#41600)"},{"Id":"563693573","IsPullRequest":true,"CreatedAt":"2020-02-12T02:22:43","Actor":"tmat","Number":"41599","RawContent":null,"Title":"Annotate IDebugStateChangeListener with UIContext guid.","State":"open","Body":"The debugger will use this to delay loading Roslyn EnC until its needed. \r\n\r\nSee https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1006594/\r\n","Url":"https://github.com/dotnet/roslyn/pull/41599","RelatedDescription":"Open PR \"Annotate IDebugStateChangeListener with UIContext guid.\" (#41599)"},{"Id":"563657045","IsPullRequest":false,"CreatedAt":"2020-02-12T00:54:18","Actor":"sharwell","Number":"41598","RawContent":null,"Title":"StackOverflowException in OOP","State":"open","Body":"**Version Used**: 16.5 Preview 2\r\n\r\n```\r\n00000029d6ffc770 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffc7b0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffc7c0 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffc7d0 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffc810 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffc870 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffc890 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffc8d0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffc8e0 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffc8f0 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffc930 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffc990 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffc9b0 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffc9f0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffca00 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffca10 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffca50 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcab0 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcad0 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffcb10 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcb20 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffcb30 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffcb70 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcbd0 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcbf0 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffcc30 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcc40 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffcc50 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffcc90 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffccf0 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcd10 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffcd50 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcd60 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffcd70 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffcdb0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffce10 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffce30 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffce70 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffce80 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffce90 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffced0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcf30 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcf50 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffcf90 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffcfa0 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffcfb0 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffcff0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd050 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd070 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd0b0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd0c0 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffd0d0 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd110 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd170 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd190 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd1d0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd1e0 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffd1f0 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd230 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd290 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd2b0 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd2f0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd300 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffd310 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd350 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd3b0 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd3d0 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd410 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd420 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffd430 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd470 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd4d0 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd4f0 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd530 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd540 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffd550 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd590 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd5f0 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd610 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd650 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd660 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffd670 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd6b0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd710 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd730 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd770 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd780 00007ffd37cd1dc5 (MethodDesc 00007ffd33531798 +0x145 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.TypeParametersAreEquivalent(Microsoft.CodeAnalysis.ITypeParameterSymbol, Microsoft.CodeAnalysis.ITypeParameterSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling 00007ffd39265d80\r\n00000029d6ffd790 00007ffd337a3af1 (MethodDesc 00007ffd33420d48 +0x3d1 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd7d0 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd830 00007ffd33dbe30c (MethodDesc 00007ffd33420da8 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.HandleNamedTypesWorker(Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd850 00007ffd337a377d (MethodDesc 00007ffd33420d48 +0x5d Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd890 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd8f0 00007ffd37b904dc (MethodDesc 00007ffd33531648 +0x37c Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.MethodsAreEquivalent(Microsoft.CodeAnalysis.IMethodSymbol, Microsoft.CodeAnalysis.IMethodSymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd910 00007ffd337a3948 (MethodDesc 00007ffd33420d48 +0x228 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling clr!JIT_ChkCastInterface\r\n00000029d6ffd920 00007ffd337a370a (MethodDesc 00007ffd3341fca8 +0x1a Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer.GetKindAndUnwrapAlias(Microsoft.CodeAnalysis.ISymbol ByRef)), calling 00007ffd34240ce0\r\n00000029d6ffd950 00007ffd337a171d (MethodDesc 00007ffd33420d08 +0xdd Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>)), calling (MethodDesc 00007ffd33420d48 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalentWorker(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.SymbolKind, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd960 00007ffd373c1bf1 (MethodDesc 00007ffd37458d58 +0x31 System.Linq.ImmutableArrayExtensions.Any[[System.__Canon, mscorlib]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>, System.Func`2<System.__Canon,Boolean>))\r\n00000029d6ffd970 00007ffd337d598b (MethodDesc 00007ffd3341fb08 +0x2b Microsoft.CodeAnalysis.FindSymbols.MetadataUnifyingEquivalenceComparer.IsInSource(Microsoft.CodeAnalysis.ISymbol)), calling clr!JIT_GetSharedGCStaticBase_InlineGetAppDomain\r\n00000029d6ffd9b0 00007ffd37c9f5f7 (MethodDesc 00007ffd33530420 +0x87 Microsoft.CodeAnalysis.FindSymbols.MetadataUnifyingEquivalenceComparer.Equals(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol)), calling (MethodDesc 00007ffd33420d08 +0 Microsoft.CodeAnalysis.Shared.Utilities.SymbolEquivalenceComparer+EquivalenceVisitor.AreEquivalent(Microsoft.CodeAnalysis.ISymbol, Microsoft.CodeAnalysis.ISymbol, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol>))\r\n00000029d6ffd9f0 00007ffd37786257 (MethodDesc 00007ffd33565c40 +0x197 System.Collections.Concurrent.ConcurrentDictionary`2[[Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId, Microsoft.CodeAnalysis.Workspaces],[System.Byte, mscorlib]].TryAddInternal(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId, Byte, Boolean, Boolean, Byte ByRef)), calling 00007ffd3421c120\r\n00000029d6ffda00 00007ffd337ce268 (MethodDesc 00007ffd33410848 +0x18 Microsoft.CodeAnalysis.Shared.Extensions.ISymbolExtensions.IsAnonymousType(Microsoft.CodeAnalysis.ISymbol)), calling clr!JIT_IsInstanceOfInterface\r\n00000029d6ffda10 00007ffd337ce268 (MethodDesc 00007ffd33410848 +0x18 Microsoft.CodeAnalysis.Shared.Extensions.ISymbolExtensions.IsAnonymousType(Microsoft.CodeAnalysis.ISymbol)), calling clr!JIT_IsInstanceOfInterface\r\n00000029d6ffdac0 00007ffd3778609a (MethodDesc 00007ffd33565b70 +0x2a System.Collections.Concurrent.ConcurrentDictionary`2[[Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId, Microsoft.CodeAnalysis.Workspaces],[System.Byte, mscorlib]].TryAdd(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId, Byte)), calling (MethodDesc 00007ffd33565c40 +0 System.Collections.Concurrent.ConcurrentDictionary`2[[Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId, Microsoft.CodeAnalysis.Workspaces],[System.Byte, mscorlib]].TryAddInternal(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId, Byte, Boolean, Boolean, Byte ByRef))\r\n00000029d6ffdb00 00007ffd337d54fd (MethodDesc 00007ffd3341fbb0 +0x39d Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine+<DetermineAllSymbolsCoreAsync>d__21.MoveNext()), calling (MethodDesc 00007ffd33565b70 +0 System.Collections.Concurrent.ConcurrentDictionary`2[[Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId, Microsoft.CodeAnalysis.Workspaces],[System.Byte, mscorlib]].TryAdd(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId, Byte))\r\n00000029d6ffdc00 00007ffd37785c91 (MethodDesc 00007ffd336029e8 +0x81 System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine+<DetermineAllSymbolsCoreAsync>d__21, Microsoft.CodeAnalysis.Workspaces]](<DetermineAllSymbolsCoreAsync>d__21 ByRef)), calling (MethodDesc 00007ffd3341fbb0 +0 Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine+<DetermineAllSymbolsCoreAsync>d__21.MoveNext())\r\n00000029d6ffdc10 00007ffd37786dc6 (MethodDesc 00007ffd33602660 +0xb6 System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine+<>c__DisplayClass21_1+<<DetermineAllSymbolsCoreAsync>b__0>d, Microsoft.CodeAnalysis.Workspaces]](<<DetermineAllSymbolsCoreAsync>b__0>d ByRef)), calling (MethodDesc 00007ffd924bff70 +0 System.Threading.ExecutionContextSwitcher.Undo())\r\n```","Url":"https://github.com/dotnet/roslyn/issues/41598","RelatedDescription":"Open issue \"StackOverflowException in OOP\" (#41598)"},{"Id":"563656676","IsPullRequest":true,"CreatedAt":"2020-02-12T00:53:38","Actor":"RikkiGibson","Number":"41597","RawContent":null,"Title":"Fix crash for local function with MaybeNullWhenAttribute","State":"open","Body":"Closes #41479 ","Url":"https://github.com/dotnet/roslyn/pull/41597","RelatedDescription":"Open PR \"Fix crash for local function with MaybeNullWhenAttribute\" (#41597)"},{"Id":"563654642","IsPullRequest":false,"CreatedAt":"2020-02-12T00:50:05","Actor":"vsfeedback","Number":"41596","RawContent":null,"Title":"VS 2019 suggests turning single-line method statements to expression body methods, even if the statement is wrapped in an #if directive.","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/911731/vs-2019-suggests-turning-single-line-method-statem.html)._\n\n---\nVS 2019 suggests turning single-line statements to expression body methods, even if the statement is wrapped in an #if directive.\nIt also does this automatically if I select \"For the whole project\" on another suggestion (I'm including a picture on what I mean)\n\nSome code you can use to reproduce this: \n```\n// Will show a suggestion to turn this in an expression body method, if that's the prefered code-style on the settings.\nprotected static string GetPluginPath() {\n#if FALSE_STATEMENT1 || FALSE_STATEMENT2 || FALSE_STATEMENT3\n\t\tstring x = \"This doesn't matter\";\n\t\treturn x + \".\";\n#elif FALSE_STATEMENT4\n                string x = \"This doesn't matter either\";\n\t\treturn x + \".\";\n#else\n\t\treturn null;\n#endif\n}\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 2/10/2020, 02:37 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41596","RelatedDescription":"Open issue \"VS 2019 suggests turning single-line method statements to expression body methods, even if the statement is wrapped in an #if directive.\" (#41596)"},{"Id":"563654349","IsPullRequest":false,"CreatedAt":"2020-02-12T00:49:36","Actor":"vsfeedback","Number":"41595","RawContent":null,"Title":"VS can't determine which Nuget package needed for fully qualified classnames","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/911709/vs-cant-determine-which-nuget-package-needed-for-f.html)._\n\n---\nI copied some code into a new project that included a reference to Microsoft.CodeAnalysis.CSharp.SymbolDisplay. The required Nuget package wasn't installed so there was an error about an unresolved reference - but Visual Studio couldn't automatically suggest what Nuget package was needed until I removed the namespace (\"Microsoft.CodeAnalysis.CSharp\").  This seems odd - if anything it should be easier to determine the required package if the namespace is provided too!\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 2/9/2020, 07:42 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41595","RelatedDescription":"Open issue \"VS can't determine which Nuget package needed for fully qualified classnames\" (#41595)"},{"Id":"563653681","IsPullRequest":false,"CreatedAt":"2020-02-12T00:48:32","Actor":"vsfeedback","Number":"41594","RawContent":null,"Title":"Inline temporary variable ignores try block","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/911704/inline-temporary-variable-ignores-try-block.html)._\n\n---\nBefore\n\n```c#\nstring Test()\n{\n    var s = \"\";\n\ntry\n    {\n        s = \"foo\";\n    }\n    catch\n    {\n    }\n\nreturn s; // \"foo\"\n}\n```\n\nAfter\n\n```c#\nstring Test()\n{\n    var s = \"\";\n\ntry\n    {\n        s = \"foo\";\n    }\n    catch\n    {\n    }\n\nreturn \"\";\n}\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 2/10/2020, 02:52 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41594","RelatedDescription":"Open issue \"Inline temporary variable ignores try block\" (#41594)"},{"Id":"563648980","IsPullRequest":true,"CreatedAt":"2020-02-12T00:40:13","Actor":"jaredpar","Number":"41593","RawContent":null,"Title":"Don't use IBC on .NET Core","State":"open","Body":"This changes our build so that we don't apply IBC optimization data to\r\nour .NET Core binaries. This data is only applicable for .NET Desktop\r\nscenarios.","Url":"https://github.com/dotnet/roslyn/pull/41593","RelatedDescription":"Open PR \"Don't use IBC on .NET Core\" (#41593)"},{"Id":"563648395","IsPullRequest":false,"CreatedAt":"2020-02-12T00:39:53","Actor":"vsfeedback","Number":"41591","RawContent":null,"Title":"C#, Edit.FormatSelection not formatting code macro-disabled (#if) blocks","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/911070/c-editformatselection-not-formatting-code-macro-di.html)._\n\n---\nSubject line should be sufficient, but for completeness:\n```\nvoid foo()\n{\n#if DISABLED\nint bar;\n#endif\n  int baz;\n}\n```\nSelect all code. Engage subject functionality.\nExpected: Formatting applied to all code, including the currently macro-disabled `int bar;` line.\nActual: Formatting not applied to currently macro-disabled code.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 2/10/2020, 00:12 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41591","RelatedDescription":"Closed issue \"C#, Edit.FormatSelection not formatting code macro-disabled (#if) blocks\" (#41591)"},{"Id":"563648608","IsPullRequest":false,"CreatedAt":"2020-02-12T00:39:35","Actor":"vsfeedback","Number":"41592","RawContent":null,"Title":"C#, Edit.FormatSelection not formatting code macro-disabled (#if) blocks","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/911070/c-editformatselection-not-formatting-code-macro-di.html)._\n\n---\nSubject line should be sufficient, but for completeness:\n```\nvoid foo()\n{\n#if DISABLED\nint bar;\n#endif\n  int baz;\n}\n```\nSelect all code. Engage subject functionality.\nExpected: Formatting applied to all code, including the currently macro-disabled `int bar;` line.\nActual: Formatting not applied to currently macro-disabled code.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 2/10/2020, 00:12 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41592","RelatedDescription":"Open issue \"C#, Edit.FormatSelection not formatting code macro-disabled (#if) blocks\" (#41592)"},{"Id":"563636684","IsPullRequest":false,"CreatedAt":"2020-02-12T00:19:40","Actor":"vsfeedback","Number":"41590","RawContent":null,"Title":"generate task from interface does not add async","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/904547/generate-task-from-interface-does-not-add-async.html)._\n\n---\nHi,\nI have an interface definition like this:\n\n```\npublic interface IUserManager\n{\nTask<AvsWebUser> GetItemById(string id);\n}\n```\nwhen deriving a class from it and use \"implement interface\" I get\n\n```\npublic Task<AvsWebUser> GetItemById(string id){ }\n```\nbut would expect\n```\npublic async Task<AvsWebUser> GetItemById(string id){ }\n```\nAm I  wrong?\nCheers.\nJosef\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 2/3/2020, 09:28 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41590","RelatedDescription":"Open issue \"generate task from interface does not add async\" (#41590)"},{"Id":"563629670","IsPullRequest":true,"CreatedAt":"2020-02-12T00:08:12","Actor":"CyrusNajmabadi","Number":"41589","RawContent":null,"Title":"Remove intermediary stack frame from statement parsing.","State":"open","Body":"The stack is a premium during recursive statement parsing.  To make that scenario nicer, we directly inline ParseEmbeddedStatement into the callers of it.  \r\n","Url":"https://github.com/dotnet/roslyn/pull/41589","RelatedDescription":"Open PR \"Remove intermediary stack frame from statement parsing.\" (#41589)"},{"Id":"563602652","IsPullRequest":false,"CreatedAt":"2020-02-11T23:28:32","Actor":"mikadumont","Number":"41588","RawContent":null,"Title":"Extract members to partial ","State":"open","Body":"This refactoring helps you move selected type members to another part of a partial type. If necessary, we will make the current type partial, create a new part of this type and a file for it.\r\n\r\n**Steps to reproduce:**\r\nThe steps below gives a user the ability to make a type partial and move selected members there.  \r\n\r\n1. Place cursor on the class name or member name.  \r\n\r\n2. Press (Ctrl + .) or (Alt + Enter). \r\n\r\n3. Select Extract Members to Partial  \r\n\r\n4. The Extract Members to Partial dialog will open. \r\n![image](https://user-images.githubusercontent.com/46729679/74289134-17df0380-4ce3-11ea-8b97-28811927414a.png)\r\n\r\n5. If the current type is not partial, we will suggest to create a new part. Otherwise a user can choose whether to create a new part or choose one of the existing parts to move the members.  \r\n\r\n6. Select type members that should be moved to the new part of a partial type.  \r\n\r\n7. To apply the refactoring, click Ok. \r\n\r\n8. If no conflicts are found, the refactoring will be performed immediately.  ","Url":"https://github.com/dotnet/roslyn/issues/41588","RelatedDescription":"Open issue \"Extract members to partial \" (#41588)"},{"Id":"563560777","IsPullRequest":false,"CreatedAt":"2020-02-11T22:50:31","Actor":"jasonmalinowski","Number":"41587","RawContent":null,"Title":"Slow build while compiling Roslyn","State":"open","Body":"Was building Roslyn locally, and I noticed the msbuild output more or less stopped, with VBCSCompiler still spinning CPU. Waited a minute or so and it was still spinning one core, so I attached and got some dump files at various points during the build. Eventually it started going again; it seems like build time might have regressed for some project?","Url":"https://github.com/dotnet/roslyn/issues/41587","RelatedDescription":"Open issue \"Slow build while compiling Roslyn\" (#41587)"},{"Id":"563554589","IsPullRequest":true,"CreatedAt":"2020-02-11T22:44:42","Actor":"jasonmalinowski","Number":"41586","RawContent":null,"Title":"Delete suppressions of CA3053","State":"open","Body":"We suppressed these because we were on the .NET Portable profile and thus couldn't do the anything else. We're no longer on the portable profile.","Url":"https://github.com/dotnet/roslyn/pull/41586","RelatedDescription":"Open PR \"Delete suppressions of CA3053\" (#41586)"},{"Id":"563420351","IsPullRequest":true,"CreatedAt":"2020-02-11T22:37:45","Actor":"cston","Number":"41582","RawContent":null,"Title":"Merge master","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41582","RelatedDescription":"Closed or merged PR \"Merge master\" (#41582)"},{"Id":"563387576","IsPullRequest":true,"CreatedAt":"2020-02-11T21:48:12","Actor":"sharwell","Number":"41579","RawContent":null,"Title":"Enable nullable reference types in projects that do not target netcoreapp3.1","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41579","RelatedDescription":"Closed or merged PR \"Enable nullable reference types in projects that do not target netcoreapp3.1\" (#41579)"},{"Id":"563499820","IsPullRequest":true,"CreatedAt":"2020-02-11T21:48:05","Actor":"CyrusNajmabadi","Number":"41585","RawContent":null,"Title":"Inline statement parsing","State":"open","Body":"This reduces teh amount of stack frames we need when parsing.  It should actually routinely halve the number as there's no need for all the indirections.\r\n\r\nNote: this is a followup to https://github.com/dotnet/roslyn/pull/41556.  That PR should go in first before reviewing this.\r\n\r\nThis should be reviewed with whitespace changes *off*.","Url":"https://github.com/dotnet/roslyn/pull/41585","RelatedDescription":"Open PR \"Inline statement parsing\" (#41585)"},{"Id":"563487094","IsPullRequest":false,"CreatedAt":"2020-02-11T21:24:34","Actor":"sharwell","Number":"41584","RawContent":null,"Title":"CompilationWithAnalyzers.GetAllDiagnosticsAsync() does not respect CompilationWithAnalyzersOptions.ReportSuppressedDiagnostics","State":"open","Body":"**Version Used**: 3.3.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Set `CompilationOptions.ReportSuppressedDiagnostics` to false\r\n2. Get a `CompilationWithAnalyzers`\r\n3. Call `GetAllDiagnosticsAsync()`\r\n\r\n**Expected Behavior**:\r\n\r\nThe suppressed diagnostics are not included in the result.\r\n\r\n**Actual Behavior**:\r\n\r\nThe suppressed diagnostics are included in the result.","Url":"https://github.com/dotnet/roslyn/issues/41584","RelatedDescription":"Open issue \"CompilationWithAnalyzers.GetAllDiagnosticsAsync() does not respect CompilationWithAnalyzersOptions.ReportSuppressedDiagnostics\" (#41584)"},{"Id":"563415828","IsPullRequest":true,"CreatedAt":"2020-02-11T20:30:34","Actor":"333fred","Number":"41581","RawContent":null,"Title":"Merge master","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41581","RelatedDescription":"Closed or merged PR \"Merge master\" (#41581)"},{"Id":"563433454","IsPullRequest":false,"CreatedAt":"2020-02-11T19:43:26","Actor":"mikadumont","Number":"41583","RawContent":null,"Title":"Rename type/file name that already exists bug","State":"open","Body":"When renaming a type that already exists and I select the code fix to rename file the file will automatically rename it with integer 1 at the end of the file name. \r\n![image](https://user-images.githubusercontent.com/46729679/74272116-ea825d80-4cc2-11ea-91be-e44fab09313b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/46729679/74289396-d0a54280-4ce3-11ea-9e5c-728009a5bb9c.png)\r\n\r\nInstead if I select rename file to a type/file name that already exists I should get a warning dialog similar to rename file in solution explorer and not automatically add an integer creating a mismatch in type and file name. \r\n![image](https://user-images.githubusercontent.com/46729679/74272429-7300fe00-4cc3-11ea-8695-ff1abb2e4a8c.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/41583","RelatedDescription":"Open issue \"Rename type/file name that already exists bug\" (#41583)"},{"Id":"563400986","IsPullRequest":true,"CreatedAt":"2020-02-11T18:41:32","Actor":"cston","Number":"41580","RawContent":null,"Title":"Fix typos","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41580","RelatedDescription":"Open PR \"Fix typos\" (#41580)"},{"Id":"563372650","IsPullRequest":false,"CreatedAt":"2020-02-11T17:45:59","Actor":"0x900x90","Number":"41578","RawContent":null,"Title":"FindReferencesAsync returns incomplete references list?","State":"open","Body":"\r\n\r\nHello.\r\n\r\nI use FindReferencesAsync to find references to variable declarations. But i get different results with following code.\r\n\r\nWhen i create solution using this code everything works as expected\r\n```\r\nworkspace = MSBuildWorkspace.Create();\r\nsolution = workspace.OpenSolutionAsync(\"solution.sln\").Result;\r\nproject = solution.Projects.First();\r\n```\r\nWhen i use this code FindReferencesAsync can't find some references.\r\n```\r\nAdhocWorkspace ws = new AdhocWorkspace();\r\nSolutionInfo si = SolutionInfo.Create(SolutionId.CreateNewId(), VersionStamp.Create(), \"sol.sln\");\r\nsolution = ws.AddSolution(si);\r\nproject = solution.AddProject(\"project\", \"assembly\", LanguageNames.CSharp);\r\nsolution = project.Solution;\r\n```\r\n![2020-02-11_202616](https://user-images.githubusercontent.com/13762536/74262142-60131b80-4d0d-11ea-88b0-ca9d9a7548df.png)\r\nAs you can see on the picture \"size\" is not renamed in 1st case. i logged returned locations and compared logs.\r\n\r\nSome references were found in both cases.\r\n![2020-02-11_203641](https://user-images.githubusercontent.com/13762536/74262687-68b82180-4d0e-11ea-8676-5341f0529200.png)\r\n\r\nThe difference is only in solution creation code. Everything else is the same.\r\n\r\n**Version Used**: 3.1.0 with Visual Studio 2017 Also i tried 3.3.0 version with Unity3D.\r\n\r\n**Steps to Reproduce**:\r\nUploaded 2 test projects. Checked both - working.\r\n\r\nhttps://mega.nz/#!wT5VyCDR!hX7KI32bU04aXFZmkqaS6qDZCL0XBTeV_d7Wb8rp8x4\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n","Url":"https://github.com/dotnet/roslyn/issues/41578","RelatedDescription":"Open issue \"FindReferencesAsync returns incomplete references list?\" (#41578)"},{"Id":"563348366","IsPullRequest":false,"CreatedAt":"2020-02-11T17:04:47","Actor":"AdmiralSnyder","Number":"41577","RawContent":null,"Title":"GoToAll window: result order is messed up","State":"open","Body":"**Version Used**: \r\nVS 2019 Version 16.5.0 Preview 2.0\r\n**Steps to Reproduce**:\r\n\r\n1. \r\ncreate a new winforms app (my test is on .Net Framework 4)\r\n2. \r\nclose all files in VS, sometimes you need to restart VS or open Program.cs and close it again\r\n(this is a little fiddly.)\r\n3. \r\nhit Ctrl-. (or Ctrl-T) and type \"form\"\r\n\r\n**Expected Behavior**:\r\nForm1.cs should be the first item in the resulting list\r\n\r\n**Actual Behavior**:\r\nForm1.designer.cs is the first item in the resulting list\r\n\r\ni have multiple issues with a regression of the result quality of the GoToAll-Window, but this one is easiest to repro.\r\n\r\nhere is a screenshot:\r\n![image](https://user-images.githubusercontent.com/16213022/74259863-e113e800-4cf8-11ea-8637-614f963521f3.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/41577","RelatedDescription":"Open issue \"GoToAll window: result order is messed up\" (#41577)"},{"Id":"563335468","IsPullRequest":false,"CreatedAt":"2020-02-11T16:45:10","Actor":"mikadumont","Number":"41576","RawContent":null,"Title":"Update Dialog for Pull Members Up, Extract Interface, and Extract SuperClass","State":"open","Body":"The dialog for Pull Members Up, Extract Interface, and Extract Superclass should be updated to look the same for all 3 options but have different titles and entry points. \r\n\r\nDraft of new dialog UI:\r\n![image](https://user-images.githubusercontent.com/46729679/74257978-6f14b200-4caa-11ea-8a43-c84ef2d83f97.png)\r\n\r\nRelated to extract superclass work item: #40601 \r\n","Url":"https://github.com/dotnet/roslyn/issues/41576","RelatedDescription":"Open issue \"Update Dialog for Pull Members Up, Extract Interface, and Extract SuperClass\" (#41576)"},{"Id":"563206488","IsPullRequest":true,"CreatedAt":"2020-02-11T14:54:00","Actor":"dotnet-maestro[bot]","Number":"41575","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:00c0f9e9-f204-49af-fd58-08d7a4f28342)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 00c0f9e9-f204-49af-fd58-08d7a4f28342\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:00c0f9e9-f204-49af-fd58-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/41575","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#41575)"},{"Id":"563185702","IsPullRequest":false,"CreatedAt":"2020-02-11T12:50:32","Actor":"jnm2","Number":"41574","RawContent":null,"Title":"Fix-all to remove warning suppressions that have become unnecessary (nullability and pragma)","State":"open","Body":"Over time the codebases I've worked in have accumulated pragmas and now nullability warning suppressions as workarounds for limitations or bugs in Visual Studio's analyzers and third-party analyzers. There's no mechanism on the other side to bring it to my attention when the suppressions are no longer relevant because the analysis has been improved.\r\n\r\nI knew that VS 16.5 was fixing several of things that I had added pragmas for years ago and improving nullability analysis, so I wrote https://github.com/jnm2/SuppressionCleanupTool. It initially served as means of querying where the suppressions were actually located, because it's not like I could simply search for the text `!` and find only the instances where it represented the nullability operator. Once it located each suppression, it became obvious that the tool could use Roslyn as the source of truth about whether each `!`, `= default!`, and `#pragma` could be removed.\r\n\r\nIt's currently a console app. I was considering making this a VSIX, maybe a dotnet global tool, maybe an analyzer + code fix. The problem with the tool not running in the context of VS is that it isn't referencing the same versions of Microsoft.CodeAnalysis.Features, so even as a console app it may need to let you dynamically resolve all Roslyn dependencies from vswhere or NuGet.\r\n\r\n@jmarolf suggested that I request this tool to be part of Roslyn itself. Having it be built in would be preferable from my vantage point:\r\n\r\n- Everyone is interested in removing outdated cruft.\r\n- Access to non-public Roslyn API and your code review will increase the likelihood of the tool's efficiency and correctness.\r\n- If you allow it to run automatically by default or opt-in, and show in the error list and fade the syntax in the editor, there will be something to tell us *when* the cruft can be removed. I try to always leave a bug URL comment behind nowadays for easier checking ([e.g.](https://github.com/jnm2/SuppressionCleanupTool/blob/59943752019989dc5a6cb849fff8932823373966/src/SuppressionCleanupTool/Utils.cs#L21-L23)), but mentally evaluating the linked pages still requires spare time.\r\n\r\nThe only concern I have about running inside VS is that it might remove suppressions from a codebase that has users with older or newer versions of VS with a bug or analysis limitation that is not present in the version you used to remove the suppressions.","Url":"https://github.com/dotnet/roslyn/issues/41574","RelatedDescription":"Open issue \"Fix-all to remove warning suppressions that have become unnecessary (nullability and pragma)\" (#41574)"},{"Id":"563111692","IsPullRequest":false,"CreatedAt":"2020-02-11T10:34:39","Actor":"Herrmel","Number":"41573","RawContent":null,"Title":"DiagnosticSuppressor is ignored in FullSolutionAnalysis","State":"open","Body":"**Version Used**: 3.3.1, 3.4.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Write a [DiagnosticSuppressor](https://docs.microsoft.com/en-us/dotnet/api/microsoft.codeanalysis.diagnostics.diagnosticsuppressor)(the Suppressor I wrote is for IDE0051)\r\n2. Enable Full Solution Analysis\r\n\r\n**Expected Behavior**:\r\nSuppressor always supresses the Diagnostic.\r\n\r\n**Actual Behavior**:\r\nSuppressor only supresses the Diagnostic if the document is open in Visual Studio. When the file is closed the Diagnostic is not suppressed and the Supressormethod `ReportSuppressions` is not called.","Url":"https://github.com/dotnet/roslyn/issues/41573","RelatedDescription":"Open issue \"DiagnosticSuppressor is ignored in FullSolutionAnalysis\" (#41573)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"562220228","IsPullRequest":true,"CreatedAt":"2020-02-12T02:14:51","Actor":"yowl","Number":"7974","RawContent":null,"Title":"Wasm: TFM to netstandard2.0 to allow upgrade of LLVMSharp","State":"closed","Body":"Changes the TFM from netstandard 1.6 to 2.0 so that we can upgrade LLVMSharp to 9.0.0-beta which supports netstandard2.0 only.  Upgrade to LLVMSharp 9 would allow upgrade to LLVM Wasm backend which is the new default in Emscripten.","Url":"https://github.com/dotnet/corert/pull/7974","RelatedDescription":"Closed or merged PR \"Wasm: TFM to netstandard2.0 to allow upgrade of LLVMSharp\" (#7974)"},{"Id":"562413407","IsPullRequest":true,"CreatedAt":"2020-02-11T09:01:36","Actor":"MichalStrehovsky","Number":"7975","RawContent":null,"Title":"Avoid creating constructed EEType for type comparison","State":"closed","Body":"Make it so that `typeof(X) == typeof(Y)` doesn't result in vtable of X and Y to be allocated.\r\n\r\nThis is actually two things: a slight refactoring of `UsageBasedMetadataManager` and the actual fix.\r\n\r\nThe refactoring:\r\n* Make it so that `UsageBasedMetadataManager` can be used as a replacement for `EmptyMetadataManager`. Empty metadata manager was generating pretty much the same outputs as usage based manager with a fully blocked policy, with the only exception being type loader templates. I'm adding a temporary workaround to keep the outputs the same. We need to think about the right logic to generate templates - then the workaround can be deleted.\r\n* We were not blocking metadata for `System.__Canon`. Fixed things up to make it so.\r\n\r\nActual fix:\r\n* Do not automatically consider LDTOKEN references from code type construction events, but ask the metadata manager.\r\n* Have metadata manager use the reflection scanner to decide whether to do the upgrade from necessary to constructed.\r\n* This extension point can potentially be outsourced to an outside component that computes reflectability.","Url":"https://github.com/dotnet/corert/pull/7975","RelatedDescription":"Closed or merged PR \"Avoid creating constructed EEType for type comparison\" (#7975)"},{"Id":"562876791","IsPullRequest":false,"CreatedAt":"2020-02-10T22:51:38","Actor":"mjsabby","Number":"7979","RawContent":null,"Title":"Stackoverflow doing WaitOneNoCheck","State":"open","Body":"`DeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\n`","Url":"https://github.com/dotnet/corert/issues/7979","RelatedDescription":"Open issue \"Stackoverflow doing WaitOneNoCheck\" (#7979)"},{"Id":"562433102","IsPullRequest":true,"CreatedAt":"2020-02-10T17:41:03","Actor":"kant2002","Number":"7978","RawContent":null,"Title":"Add IlcSystemModule property","State":"closed","Body":"to control which module hold basetypes.\r\n\r\nInspired by required usage\r\nfrom https://github.com/MichalStrehovsky/SeeSharpSnake/pull/13","Url":"https://github.com/dotnet/corert/pull/7978","RelatedDescription":"Closed or merged PR \"Add IlcSystemModule property\" (#7978)"},{"Id":"562413517","IsPullRequest":true,"CreatedAt":"2020-02-10T16:15:24","Actor":"MichalStrehovsky","Number":"7976","RawContent":null,"Title":"Narrow down contents of ExactMethodInstantiations table","State":"closed","Body":"We don't need to generate entries for all generic methods we compiled, just a subset.","Url":"https://github.com/dotnet/corert/pull/7976","RelatedDescription":"Closed or merged PR \"Narrow down contents of ExactMethodInstantiations table\" (#7976)"},{"Id":"562413619","IsPullRequest":true,"CreatedAt":"2020-02-10T16:14:11","Actor":"MichalStrehovsky","Number":"7977","RawContent":null,"Title":"Match `Type.operator==` with CoreCLR","State":"closed","Body":"Runtime implemented types are never equal to non-runtime implemented types.","Url":"https://github.com/dotnet/corert/pull/7977","RelatedDescription":"Closed or merged PR \"Match `Type.operator==` with CoreCLR\" (#7977)"},{"Id":"562124837","IsPullRequest":true,"CreatedAt":"2020-02-10T10:11:12","Actor":"jkotas","Number":"7973","RawContent":null,"Title":"Thread-safe EqualityCompare singleton","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/31990 to CoreRT","Url":"https://github.com/dotnet/corert/pull/7973","RelatedDescription":"Closed or merged PR \"Thread-safe EqualityCompare singleton\" (#7973)"},{"Id":"561357319","IsPullRequest":false,"CreatedAt":"2020-02-07T02:37:13","Actor":"kant2002","Number":"7969","RawContent":null,"Title":"Instructions for using locally build CoreCLR does not work anymore","State":"closed","Body":"I attempt to modify HelloWorld to use local coreclr instead of package as specified in `how-to-build-and-run-ilcompiler-in-console-shell-prompt.md`\r\n\r\nHere my project file \r\n```\r\n<Project>\r\n  <Import Project=\"$(MSBuildSDKsPath)\\Microsoft.NET.Sdk\\Sdk\\Sdk.props\" />\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n\r\n  <Import Project=\"$(MSBuildSDKsPath)\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets\" />\r\n  <Import Project=\"XXX\\bin\\Windows_NT.x64.Debug\\build\\Microsoft.NETCore.Native.targets\" />\r\n</Project>\r\n```\r\n\r\nPublish process fails with following error message:\r\n```\r\nXXX\\bin\\Windows_NT.x64.Debug\\build\\Microsoft.NETCore.Native.Publish.targets(60,5): error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [XXXX\\samples\\HelloWorld\\HelloWorld.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/7969","RelatedDescription":"Closed issue \"Instructions for using locally build CoreCLR does not work anymore\" (#7969)"},{"Id":"558779960","IsPullRequest":true,"CreatedAt":"2020-02-07T02:36:58","Actor":"Suchiman","Number":"7963","RawContent":null,"Title":"Avoid having the linker generate debug symbols if turned off","State":"closed","Body":"fixes #7957","Url":"https://github.com/dotnet/corert/pull/7963","RelatedDescription":"Closed or merged PR \"Avoid having the linker generate debug symbols if turned off\" (#7963)"},{"Id":"558153699","IsPullRequest":false,"CreatedAt":"2020-02-07T02:36:57","Actor":"YumeMienai","Number":"7957","RawContent":null,"Title":"[Windows] DebugType cannot completely control whether to generate debug info","State":"closed","Body":"Arch: win-x64\r\nCompiler: RyuJIT\r\n\r\nI have set `DebugType` to `none` via the `Release` Configuration, the pdb just isn't been copied to the `publish` directory. But it still will be produced when compiling via RyuJIT in `native` directory and the application in `publish` directory also contain `IMAGE_DEBUG_DIRECTORY` which points to the pdb. I think the compile via RyuJIT should also follow `DebugType` setting to switch whether to generate debug info.\r\n\r\nPart of my project file\r\n```\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <DebugType>none</DebugType>\r\n    <DebugSymbols>false</DebugSymbols>\r\n  </PropertyGroup>\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7957","RelatedDescription":"Closed issue \"[Windows] DebugType cannot completely control whether to generate debug info\" (#7957)"},{"Id":"561363695","IsPullRequest":true,"CreatedAt":"2020-02-07T02:20:53","Actor":"kant2002","Number":"7970","RawContent":null,"Title":"Clarify that IlcPath variable is required","State":"closed","Body":"After issue #7969 add small clarifications.","Url":"https://github.com/dotnet/corert/pull/7970","RelatedDescription":"Closed or merged PR \"Clarify that IlcPath variable is required\" (#7970)"},{"Id":"561372431","IsPullRequest":true,"CreatedAt":"2020-02-07T01:49:12","Actor":"kant2002","Number":"7972","RawContent":null,"Title":"Fix NRE caused by unknown CanonTypesModule","State":"open","Body":"See #7971\r\n\r\nI'm not sure if this is proper diagnositcs, but right now instead of NRE\r\nI have following error message\r\n```\r\nUnhandled Exception: Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Private.CoreLib\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\nFrom now on I can understand that specific module does not found.\r\nProbably for that case should be created specific error message, but I'm not sure what this is means, so cannot make proper text.","Url":"https://github.com/dotnet/corert/pull/7972","RelatedDescription":"Open PR \"Fix NRE caused by unknown CanonTypesModule\" (#7972)"},{"Id":"561371393","IsPullRequest":false,"CreatedAt":"2020-02-07T01:45:04","Actor":"kant2002","Number":"7971","RawContent":null,"Title":"NRE during compilation","State":"open","Body":"I try to make @MichalStrehovsky SeeCharpSnake run using msbuild modifications instead of manual jiggling with command line. I'm not yet fully understand if I doing correct thing, so give me some slack for that.\r\n\r\nI made compilation of project by adding following modifications. Actually there more modifications but they are not related to CSC compilation. Essentially  add /nostdlib and /noconfig but instead of embedding `System.Object` and friends using `/runtimemetadata` (which I cannot make work with Roslyn) I leave only reference to `System.Runtime` and `System.Runtime.InteropServices`\r\n\r\n```\r\n     <PropertyGroup>\r\n <NoStdLib>true</NoStdLib>\r\n    <NoConfig>true</NoConfig>\r\n    <RuntimeMetadataVersion>v4.0.30319</RuntimeMetadataVersion>\r\n  <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"MyBeforeCompile\" BeforeTargets=\"BeforeCompile\" AfterTargets=\"FindReferenceAssembliesForReferences\">\r\n    <Message  Text=\"ReferencePathWithRefAssemblies: @(ReferencePathWithRefAssemblies)\" />\r\n    <ItemGroup>\r\n      <ReferencePathWithRefAssemblies Remove=\"@(ReferencePathWithRefAssemblies)\"  Condition=\"'%(Filename)' != 'System.Runtime' and '%(Filename)' != 'System.Runtime.InteropServices'\"  />\r\n      <!-- <ReferencePath Remove=\"@(ReferencePath)\" /> -->\r\n    </ItemGroup>\r\n\r\n    <Message  Text=\"ReferencePathWithRefAssemblies: @(ReferencePathWithRefAssemblies)\" />\r\n  </Target>\r\n\r\n```\r\n\r\nThen I try to simplify ILC by removing all `AutoInitializedAssemblies` and `IlcReference` so 'rsp' file now looks like this:\r\n```\r\nobj\\Release\\netcoreapp3.1\\win-x64\\SeeSharpSnake.dll\r\n-o:obj\\Release\\netcoreapp3.1\\win-x64\\native\\SeeSharpSnake.obj\r\n-O\r\n-g\r\n--methodbodyfolding\r\n--Os\r\n--disablereflection\r\n--removefeature:EventSource\r\n--removefeature:FrameworkStrings\r\n--removefeature:Globalization\r\n--removefeature:SerializationGuard\r\n--removefeature:Comparers\r\n\r\n```\r\nAnd now I have exception message during ILC compilation\r\n```\r\n  Generating native code\r\nEXEC : error : Object reference not set to an instance of an object. [D:\\d\\kant\\GitHub\\SeeSharpSnake\\SeeSharpSnake.csproj]\r\n  System.NullReferenceException: Object reference not set to an instance of an object.\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nwhich maybe fine, since I likely hit unexpected combinations. What I want to have is better messaging in that area, so if this is some stupid combination, then it will give me at least `simpleName` which ILC expect. This sounds like simple issue to solve and it can be beneficial for newcomers","Url":"https://github.com/dotnet/corert/issues/7971","RelatedDescription":"Open issue \"NRE during compilation\" (#7971)"},{"Id":"559699531","IsPullRequest":false,"CreatedAt":"2020-02-06T22:12:32","Actor":"kant2002","Number":"7968","RawContent":null,"Title":"Build issues for samples","State":"closed","Body":"If I build any project from samples I receive `error NU1101: Unable to find package Microsoft.DotNet.ILCompiler. No packages exist with this id in source(s): nuget.org`. Which indicates that .NET Core SDK does not pickup settings from nuget.config\r\n\r\nWhen I try to troubleshoot by running `dotnet publish -r win-x64 -c release -v d` I see following\r\n```\r\n         NuGet Config files used:\r\n             .\\GitHub\\dotnet\\corert\\samples\\HelloWorld\\NuGet.Config\r\n             C:\\Users\\user\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config\r\n         Feeds used:\r\n             https://api.nuget.org/v3/index.json\r\n```\r\n\r\nIf I run `dotnet restore --configfile .\\nuget.config` everything restored as expected, but I cannot run publish process as in docs, and have to resort to `dotnet publish -r win-x64 -c release --configfile .\\nuget.config`\r\n\r\nMy take on this, is shown in https://github.com/MichalStrehovsky/SeeSharpSnake/pull/10/files where I use `RestoreAdditionalPackageSources` in the project file. This seems to be serve same purpose.\r\n\r\nIf you believe that this is issue in my environment, please correct me. But I really don't know where to look at this point.","Url":"https://github.com/dotnet/corert/issues/7968","RelatedDescription":"Closed issue \"Build issues for samples\" (#7968)"},{"Id":"559369205","IsPullRequest":false,"CreatedAt":"2020-02-04T08:21:19","Actor":"kant2002","Number":"7965","RawContent":null,"Title":"Build does not working when have Preview installed","State":"closed","Body":"I have both Preview and Community installed on my PC. Preview does not have C++ tools installed. What would be good , is to be able specify which toolchain to use.","Url":"https://github.com/dotnet/corert/issues/7965","RelatedDescription":"Closed issue \"Build does not working when have Preview installed\" (#7965)"},{"Id":"559549711","IsPullRequest":true,"CreatedAt":"2020-02-04T08:07:32","Actor":"kant2002","Number":"7967","RawContent":null,"Title":"Remove confusing line about ancient tests","State":"closed","Body":"Was raised in discussion in #7966","Url":"https://github.com/dotnet/corert/pull/7967","RelatedDescription":"Closed or merged PR \"Remove confusing line about ancient tests\" (#7967)"},{"Id":"559430865","IsPullRequest":true,"CreatedAt":"2020-02-04T07:46:53","Actor":"kant2002","Number":"7966","RawContent":null,"Title":"Suggestions to prerequisite docs","State":"closed","Body":"This changes mostly driven by my confusion how to initially start docs. For sure I have to read carefully,\r\nbut I miss important pieces since they was in unexpected places\r\n- Move installing .NET Core to prerequiresite docs\r\n   Assuming this is still valid, since seems to be\r\n   build.cmd/.sh pull .NET Core SDK automatically\r\n- Highlight that Developer Command Prompt needed\r\n   and that you can select environment.\r\n\r\nThis is driven mostly by my confusion in #7965","Url":"https://github.com/dotnet/corert/pull/7966","RelatedDescription":"Closed or merged PR \"Suggestions to prerequisite docs\" (#7966)"},{"Id":"558703713","IsPullRequest":true,"CreatedAt":"2020-02-03T14:17:00","Actor":"MichalStrehovsky","Number":"7962","RawContent":null,"Title":"Get CoreRT Hello World selfcontained binary under 1 MB","State":"closed","Body":"This has actually two things. The actual fix to make self-contained CoreRT Hello World less than 1 MB, and a bunch of tools that helped me find the fix. I’ve had the tools for a while but they don’t get that much use when they only exist on my machine.\r\n\r\n## The tools\r\nI compiled an empty console app with CoreRT. I used the existing `<IlcGenerateMapFile>true</IlcGenerateMapFile>` property to create a map.xml file in the intermediate directory to lists all the things we compiled. I wondered why `DateTime` formatting is needed for an empty app.\r\n\r\nThe existing map file is good to see _what_ was generated, but not _why_ it was generated.\r\n\r\nThe compiler builds a dependency graph internally that captures the whys. There has been a switch to dump the dependency graph into an XML file for a while - it just wasn’t publicly exposed. In this pull request I’m exposing it as `<IlcGenerateDgmlFile>true</ IlcGenerateDgmlFile>`. This generates up to two dgml.xml files in the intermediate directory (two if we’re running an optimized build with the scanner - in that case, the scan.dgml.xml file tends to be more useful).\r\n\r\nThe next thing is interpreting the dependency graph. I wrote a tool for that some time ago, now I’m checking it in.\r\n\r\nThe input to the tool is the DGML file and name of a node of interest. The output is the list of reasons why that node was include.\r\n\r\nIt looks like this for the DateTime formatting case:\r\n\r\n```\r\n() S_P_CoreLib_System_DateTimeFormat__FormatHebrewMonthName\r\n  (call) S_P_CoreLib_System_DateTimeFormat__FormatCustomized\r\n    (call) S_P_CoreLib_System_DateTimeFormat__FormatStringBuilder\r\n      (call) S_P_CoreLib_System_DateTimeFormat__TryFormat_0\r\n        (call) S_P_CoreLib_System_DateTimeFormat__TryFormat\r\n          (call) S_P_CoreLib_System_DateTime__TryFormat\r\n            (reloc) unbox_S_P_CoreLib_System_DateTime__TryFormat\r\n              (Virtual method) (??_7Boxed_S_P_CoreLib_System_DateTime@@6B@ constructed, VirtualMethodUse [S.P.CoreLib]System.DateTime.TryFormat(Span`1<char>,int32&,ReadOnlySpan`1<char>,IFormatProvider))\r\n                (Primary) ??_7Boxed_S_P_CoreLib_System_DateTime@@6B@ constructed\r\n                  (ldtoken) S_P_CoreLib_System_CommonRuntimeTypes___cctor\r\n                    (reloc) S_P_CoreLib_System_CommonRuntimeTypes::__NONGCSTATICS\r\n                      (reloc) __GetGCStaticBase_S_P_CoreLib_System_CommonRuntimeTypes\r\n                        (ldsfld) S_P_CoreLib_System_CommonRuntimeTypes__get_Boolean\r\n                          (call) S_P_CoreLib_Internal_Runtime_Augments_RuntimeAugments__GetEnumUnderlyingType\r\n                            (call) S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation__GetEnumInfo\r\n                              (Virtual method) (??_7S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation@@6B@ constructed, VirtualMethodUse [S.P.CoreLib]Internal.Reflection.Augments.ReflectionCoreCallbacks.GetEnumInfo(Type))\r\n                                (Primary) ??_7S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation@@6B@ constructed\r\n                                  (newobj) S_P_DisabledReflection_Internal_Runtime_CompilerHelpers_LibraryInitializer__InitializeLibrary\r\n                                    (call) HelloWorld__Module___StartupCodeMain\r\n                                      () Startup Code Main Method\r\n                                (Secondary) VirtualMethodUse [S.P.CoreLib]Internal.Reflection.Augments.ReflectionCoreCallbacks.GetEnumInfo(Type)\r\n                                  (callvirt) S_P_CoreLib_System_Enum__GetEnumInfo\r\n                                    (call) S_P_CoreLib_System_Enum__InternalFormat\r\n                                      (call) S_P_CoreLib_System_Enum__ToString\r\n                                        (Virtual method) (??_7S_P_CoreLib_System_Enum@@6B@ constructed, VirtualMethodUse object.ToString())\r\n                                          (Primary) ??_7S_P_CoreLib_System_Enum@@6B@ constructed\r\n                                            (reloc) ??_7Boxed_S_P_CoreLib_System_RuntimeExceptionHelpers_RhFailFastReason@@6B@ constructed\r\n                                              (callvirt) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                                () Runtime export\r\n                                          (Secondary) VirtualMethodUse object.ToString()\r\n                                            (callvirt) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                              () Runtime export\r\n                (Secondary) VirtualMethodUse [S.P.CoreLib]System.DateTime.TryFormat(Span`1<char>,int32&,ReadOnlySpan`1<char>,IFormatProvider)\r\n                  (Interface method) (??_7Boxed_S_P_CoreLib_System_DateTime@@6B@ constructed, VirtualMethodUse [S.P.CoreLib]System.ISpanFormattable.TryFormat(Span`1<char>,int32&,ReadOnlySpan`1<char>,IFormatProvider))\r\n                    (Primary) ??_7Boxed_S_P_CoreLib_System_DateTime@@6B@ constructed\r\n                      (ldtoken) S_P_CoreLib_System_CommonRuntimeTypes___cctor\r\n                        (reloc) S_P_CoreLib_System_CommonRuntimeTypes::__NONGCSTATICS\r\n                          (reloc) __GetGCStaticBase_S_P_CoreLib_System_CommonRuntimeTypes\r\n                            (ldsfld) S_P_CoreLib_System_CommonRuntimeTypes__get_Boolean\r\n                              (call) S_P_CoreLib_Internal_Runtime_Augments_RuntimeAugments__GetEnumUnderlyingType\r\n                                (call) S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation__GetEnumInfo\r\n                                  (Virtual method) (??_7S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation@@6B@ constructed, VirtualMethodUse [S.P.CoreLib]Internal.Reflection.Augments.ReflectionCoreCallbacks.GetEnumInfo(Type))\r\n                                    (Primary) ??_7S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation@@6B@ constructed\r\n                                      (newobj) S_P_DisabledReflection_Internal_Runtime_CompilerHelpers_LibraryInitializer__InitializeLibrary\r\n                                        (call) HelloWorld__Module___StartupCodeMain\r\n                                          () Startup Code Main Method\r\n                                    (Secondary) VirtualMethodUse [S.P.CoreLib]Internal.Reflection.Augments.ReflectionCoreCallbacks.GetEnumInfo(Type)\r\n                                      (callvirt) S_P_CoreLib_System_Enum__GetEnumInfo\r\n                                        (call) S_P_CoreLib_System_Enum__InternalFormat\r\n                                          (call) S_P_CoreLib_System_Enum__ToString\r\n                                            (Virtual method) (??_7S_P_CoreLib_System_Enum@@6B@ constructed, VirtualMethodUse object.ToString())\r\n                                              (Primary) ??_7S_P_CoreLib_System_Enum@@6B@ constructed\r\n                                                (reloc) ??_7Boxed_S_P_CoreLib_System_RuntimeExceptionHelpers_RhFailFastReason@@6B@ constructed\r\n                                                  (callvirt) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                                    () Runtime export\r\n                                              (Secondary) VirtualMethodUse object.ToString()\r\n                                                (callvirt) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                                  () Runtime export\r\n                    (Secondary) VirtualMethodUse [S.P.CoreLib]System.ISpanFormattable.TryFormat(Span`1<char>,int32&,ReadOnlySpan`1<char>,IFormatProvider)\r\n                      (Interface method use) __InterfaceDispatchCell_S_P_CoreLib_System_ISpanFormattable__TryFormat\r\n                        (callvirt) S_P_CoreLib_System_Text_ValueStringBuilder__AppendFormatHelper\r\n                          (call) String__FormatHelper\r\n                            (call) String__Format_1\r\n                              (call) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                () Runtime export\r\n```\r\n\r\nThe reason boils down to pretty much this:\r\n\r\nThe `CommonRuntimeTypes` class has a `typeof` reference to `DateTime`. This means the compiler needs to assume `DateTime` was boxed (we don’t do precise analysis of what happened to the `typeof` and one might just pass the result of the `typeof` to `FormatterServices.GetUninitializedObject` or reflection, which means an instance of the type could get allocated even without an explicit box anywhere in the code).\r\n\r\nOkay, so `DateTime` is considered boxed, what’s the big deal?\r\n\r\nThe reason number 2 (\"Secondary\") listed in the dump is that `ISpanFormattable.TryFormat` is called somewhere. Since `DateTime` implements `ISpanFormattable`, we need to generate the implementations for that because bad things would happen at runtime if someone called `ISpanFormattable` methods on the boxed `DateTime` and we don’t have the code for that.\r\n\r\n## The fix\r\n\r\nTo break this kind of dependency (virtual/interface method call), we need to break one of the two reasons - either get rid of the object allocation, or get rid of the interface call.\r\n\r\nGetting rid of the allocation is pretty straightforward - don’t reference `DateTime` from the `CommonRuntimeTypes` class. That type is used in codepaths that are more rare.\r\n\r\nMakes the AOT compiled empty program go from 1,113,600 bytes to 962,560 bytes.\r\n","Url":"https://github.com/dotnet/corert/pull/7962","RelatedDescription":"Closed or merged PR \"Get CoreRT Hello World selfcontained binary under 1 MB\" (#7962)"},{"Id":"558702617","IsPullRequest":true,"CreatedAt":"2020-02-03T08:56:02","Actor":"MichalStrehovsky","Number":"7961","RawContent":null,"Title":"Add option to disable printing unhandled exceptions to console","State":"closed","Body":"Saves another 100 kB of code in a minimal app.\r\n\r\nMostly helps removing noise in finding big things. I don't expect people to use this which is why it's an Advanced option.\r\n\r\nWe might still want to do something like this for non-console apps though.","Url":"https://github.com/dotnet/corert/pull/7961","RelatedDescription":"Closed or merged PR \"Add option to disable printing unhandled exceptions to console\" (#7961)"},{"Id":"558702451","IsPullRequest":true,"CreatedAt":"2020-02-03T08:55:10","Actor":"MichalStrehovsky","Number":"7960","RawContent":null,"Title":"Make code to support arrays smaller","State":"closed","Body":"Saves a couple hundred bytes per array type. Less code that is specific per each array = savings.","Url":"https://github.com/dotnet/corert/pull/7960","RelatedDescription":"Closed or merged PR \"Make code to support arrays smaller\" (#7960)"},{"Id":"558815916","IsPullRequest":true,"CreatedAt":"2020-02-03T08:49:06","Actor":"jkotas","Number":"7964","RawContent":null,"Title":"Cleanup logic for setting g_heap_type for runtime without server GC","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7964","RelatedDescription":"Closed or merged PR \"Cleanup logic for setting g_heap_type for runtime without server GC\" (#7964)"},{"Id":"558533653","IsPullRequest":true,"CreatedAt":"2020-02-01T16:11:28","Actor":"Suchiman","Number":"7958","RawContent":null,"Title":"Upgrade DependencyGraph Viewer to .NET Core","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7958","RelatedDescription":"Closed or merged PR \"Upgrade DependencyGraph Viewer to .NET Core\" (#7958)"},{"Id":"556890666","IsPullRequest":true,"CreatedAt":"2020-01-29T15:23:31","Actor":"feliwir","Number":"7956","RawContent":null,"Title":"Fix invalid template decleration","State":"closed","Body":"The template parameters are specified for the template class. Redeclaring them here is not allowed.","Url":"https://github.com/dotnet/corert/pull/7956","RelatedDescription":"Closed or merged PR \"Fix invalid template decleration\" (#7956)"},{"Id":"552085171","IsPullRequest":false,"CreatedAt":"2020-01-20T05:59:52","Actor":"akinohana","Number":"7955","RawContent":null,"Title":"[BUG]print stack trace from child thread cause a fastfail exception","State":"open","Body":"![image](https://user-images.githubusercontent.com/29968862/72702124-8faa8a00-3b8c-11ea-980a-966ba2b76836.png)\r\n\r\n\r\ncodes to reproduce:\r\n\r\n\r\n```\r\n\r\n\tclass Program\r\n    {\r\n\t    static void tr()\r\n\t    {\r\n\t\t\tConsole.WriteLine(\"thread start\");\r\n\t\t    Console.WriteLine(\"2\" + Environment.StackTrace);\r\n\r\n\t\t}\r\n\t\tstatic void Main(string[] args)\r\n        {\r\n\t        Console.WriteLine(\"1\" + Environment.StackTrace);\r\n\r\n\t\t\tThreadStart threadStart = tr;\r\n\t        var th = new Thread(threadStart);\r\n\t\t\tth.Start();\r\n\r\n\t\t\tConsole.ReadKey();\r\n        }\r\n    }\r\n\r\n```\r\n\r\nresults:\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/72702208-cda7ae00-3b8c-11ea-883b-746631ae7aed.png)\r\n\r\n\r\nstack trace when crashed:\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/72702271-165f6700-3b8d-11ea-8334-b445bbad823f.png)\r\n","Url":"https://github.com/dotnet/corert/issues/7955","RelatedDescription":"Open issue \"[BUG]print stack trace from child thread cause a fastfail exception\" (#7955)"},{"Id":"549435138","IsPullRequest":true,"CreatedAt":"2020-01-14T14:16:42","Actor":"MichalStrehovsky","Number":"7954","RawContent":null,"Title":"Fix sigantures in calli","State":"closed","Body":"* The called methods accept a byref, not a pointer.\r\n* The called methods don't return anything.\r\n\r\nThis is also a slight perf improvement (no longer need to allocate the lambda for `PinObjectAndCall`).\r\n\r\nFixes #7951.","Url":"https://github.com/dotnet/corert/pull/7954","RelatedDescription":"Closed or merged PR \"Fix sigantures in calli\" (#7954)"},{"Id":"548637124","IsPullRequest":false,"CreatedAt":"2020-01-14T14:16:42","Actor":"yowl","Number":"7951","RawContent":null,"Title":"Wasm: CalliIntrinsics.Call<T> is generating invalid calli","State":"closed","Body":"https://github.com/dotnet/corert/blob/42f1bc077327d6e3647861bec00cfe0458187071/src/System.Private.CoreLib/src/System/Runtime/InteropServices/Marshal.CoreRT.cs#L200-L203\r\n\r\nThis is currently a problem for the wasm backend.  With the input\r\n```\r\n    // something to exercise CalliIntrinsics.Call<T>\r\n    struct NonBlittableToMarshal\r\n    {\r\n        internal int a;\r\n        internal object b;\r\n    }\r\n\r\n    static void TestMarshalStructToPtr()\r\n    {\r\n        StartTest(\"Test marshal struct to ptr\");\r\n        NonBlittableToMarshal s = new NonBlittableToMarshal();\r\n        s.a = 1;\r\n        s.b = null;\r\n        var pParms = Marshal.AllocHGlobal(Marshal.SizeOf(typeof(NonBlittableToMarshal)));\r\n        Marshal.StructureToPtr(s, pParms, false);\r\n        EndTest(true);\r\n    }\r\n```\r\nThis fails at runtime with an invalid signature message, with ASSERTIONS=2, it produces:\r\n\r\n```\r\nInvalid function pointer 4692 called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). This pointer might make sense in another type signature: as sig \"vi\" pointing to function _Internal_CompilerGenerated__Module____ManagedToNative_HelloWasm_Program_NonBlittableToMarshal, \r\n```\r\nThis is saying that there is a method with a void (int) signature at the right function index, but it does not match the called convention which is int (int,int,int).  There is a method produced with a `vi` signature, although it looks incomplete and throws an exception\r\n```\r\ndefine void @\"Internal_CompilerGenerated__Module___<ManagedToNative>HelloWasm_Program_NonBlittableToMarshal\"(i8*) {\r\nProlog:\r\n  br label %Block0\r\n\r\nBlock0:                                           ; preds = %Prolog\r\n  %LoadAddressOfSymbolNode = load i32*, i32** @__Str_Struct__NonBlittableToMarshal__6058104189200C7DE718BE6B8F3608243B48FAFC59CD4893FB0EFFADF26C30EA___SYMBOL\r\n  %1 = getelementptr i8, i8* %0, i32 8\r\n  %Temp0_ = getelementptr i8, i8* %0, i32 8\r\n  %LoadeeType = load i32, i32* bitcast (i32** @__EEType_S_P_CoreLib_System_Exception___SYMBOL to i32*)\r\n  call void @S_P_CoreLib_System_Runtime_RuntimeExports__RhNewObject(i8* %1, i8* %Temp0_, i32 %LoadeeType)\r\n  %2 = getelementptr i8, i8* %0, i32 12\r\n  %Temp0_1 = getelementptr i8, i8* %0, i32 8\r\n  %CastPtrTemp0_ = bitcast i8* %Temp0_1 to i8**\r\n  %LdTemp0_ = load i8*, i8** %CastPtrTemp0_\r\n  %3 = getelementptr i8, i8* %2, i32 0\r\n  %CastPtrTypedStore = bitcast i8* %3 to i8**\r\n  store i8* %LdTemp0_, i8** %CastPtrTypedStore\r\n  %CastPtr = bitcast i32* %LoadAddressOfSymbolNode to i8*\r\n  %4 = getelementptr i8, i8* %2, i32 4\r\n  %CastPtrTypedStore2 = bitcast i8* %4 to i8**\r\n  store i8* %CastPtr, i8** %CastPtrTypedStore2\r\n  call void @S_P_CoreLib_System_Exception___ctor_0(i8* %2)\r\n  call void @llvm.trap()\r\n  unreachable\r\n}\r\n```\r\nAnd the `iiii` signature method would match the calli inside \r\n```\r\n                        CalliIntrinsics.Call<int>(\r\n                            marshalStub,\r\n                            ((void*)((IntPtr*)unboxedStructPtr + offset)),  // safe (need to adjust offset as it could be class)\r\n                            (void*)ptr                                      // unsafe (no need to adjust as it is always struct)\r\n                        );\r\n``` \r\nWith an the extra `i` for the shadow stack.  I guess the question starts with how does the marshal code get generated because it shouldn't terminate in a throw I imagine?","Url":"https://github.com/dotnet/corert/issues/7951","RelatedDescription":"Closed issue \"Wasm: CalliIntrinsics.Call<T> is generating invalid calli\" (#7951)"},{"Id":"548791451","IsPullRequest":false,"CreatedAt":"2020-01-14T09:42:02","Actor":"akinohana","Number":"7953","RawContent":null,"Title":"How to fix Error setting value to Field on XXXXX After CoreRT?","State":"closed","Body":"this happens with following code, it works fine before CoreRT\r\n```\r\n\tinternal class C1\r\n    {\r\n\t    public string p;\r\n    }\r\n\r\n    var res = JsonConvert.DeserializeObject<C1>(jsonString);\r\n```\r\n\r\njsonString = \"{\\\\\"p\\\\\":\\\\\"xxxxx\\\\\"}\"\r\n\r\nis there a way I can solve this issue? \r\n\r\nor it's not possible, maybe because CoreRT can't do reflection which is required by `DeserializeObject`?\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7953","RelatedDescription":"Closed issue \"How to fix Error setting value to Field on XXXXX After CoreRT?\" (#7953)"},{"Id":"548709455","IsPullRequest":false,"CreatedAt":"2020-01-13T05:15:33","Actor":"DenMpei","Number":"7952","RawContent":null,"Title":"Error when publish","State":"open","Body":"Good morning! Sometimes, such an error occurs when publishing (dotnet publish -c Release -r win-x64). They in no way treated, but disappears by itself after a while. Prompt, what to see and how to fix?\r\nMicrosoft.DotNet.ILCompiler package version: 1.0.0-alpha-28327-01, but I tried on 1.0.0-alpha-28510-01\r\n\r\nGenerating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n16:06:21 EXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [D:\\Jenkins\\workspace\\Project.csproj]\r\n16:06:21 EXEC : error : External component has thrown an exception. [D:\\Jenkins\\workspace\\Project.csproj]\r\n16:06:21   System.Runtime.InteropServices.SEHException (0x80004005): External component has thrown an exception.\r\n16:06:21      at ILCompiler.DependencyAnalysis.ObjectWriter.FinishObjWriter(IntPtr objWriter)\r\n16:06:21      at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n16:06:21      at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n16:06:22      at ILCompiler.Program.Run(String[] args)\r\n16:06:22      at ILCompiler.Program.Main(String[] args)\r\n16:06:22 C:\\Users\\rpt-virtual\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28327-01\\build\\Microsoft.NETCore.Native.targets(226,5): error MSB3073: The command \"\"C:\\Users\\user\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28327-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp2.2\\win-x64\\native\\Project.ilc.rsp\"\" exited with code 1. [D:\\Jenkins\\workspace\\Project.csproj]","Url":"https://github.com/dotnet/corert/issues/7952","RelatedDescription":"Open issue \"Error when publish\" (#7952)"},{"Id":"548397442","IsPullRequest":true,"CreatedAt":"2020-01-11T09:03:06","Actor":"jkotas","Number":"7950","RawContent":null,"Title":"Initialize global VEH after runtime instance","State":"closed","Body":"VEH may use the runtime instance","Url":"https://github.com/dotnet/corert/pull/7950","RelatedDescription":"Closed or merged PR \"Initialize global VEH after runtime instance\" (#7950)"},{"Id":"548304234","IsPullRequest":true,"CreatedAt":"2020-01-10T23:57:47","Actor":"jkotas","Number":"7949","RawContent":null,"Title":"Make sure MethodFixupCell is pointer aligned","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7949","RelatedDescription":"Closed or merged PR \"Make sure MethodFixupCell is pointer aligned\" (#7949)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"563622647","IsPullRequest":true,"CreatedAt":"2020-02-11T23:56:48","Actor":"dsplaisted","Number":"10632","RawContent":null,"Title":"Add files to sign check exclusion list","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/10632","RelatedDescription":"Open PR \"Add files to sign check exclusion list\" (#10632)"},{"Id":"563575197","IsPullRequest":false,"CreatedAt":"2020-02-11T23:03:24","Actor":"wli3","Number":"10631","RawContent":null,"Title":"dotnet-install -Channel 3.1 -Runtime aspnetcore fail","State":"open","Body":"AspNetCore's 'latest.version' is like this:\r\n3.1.1\r\na1388f194c30cb21b36b75982962cb5e35954e4e\r\n\r\nRuntime's is like this:\r\na1388f194c30cb21b36b75982962cb5e35954e4e\r\n3.1.1\r\n\r\ndotnet-install assumes the last line is the version: https://github.com/dotnet/sdk/blob/0e105528b3b5fa3d9c509a336fdafd92e464f764/scripts/obtain/dotnet-install.ps1#L180-L189    \r\n","Url":"https://github.com/dotnet/sdk/issues/10631","RelatedDescription":"Open issue \"dotnet-install -Channel 3.1 -Runtime aspnetcore fail\" (#10631)"},{"Id":"563489170","IsPullRequest":false,"CreatedAt":"2020-02-11T21:28:23","Actor":"Xarkam","Number":"10630","RawContent":null,"Title":"Cannot repair SDK 3.1.101","State":"open","Body":"Hello, I tried to repair my sdk but the installer fail:\r\n![image](https://user-images.githubusercontent.com/331816/74280732-6610f880-4d1d-11ea-9680-49d970d62e51.png)\r\nThe dialog say: The specified account already exist\r\n\r\nLog:\r\n```\r\n[26B4:2554][2020-02-11T22:21:49]i001: Burn v3.10.4.4718, Windows v10.0 (Build 18363: Service Pack 0), path: C:\\Users\\benja\\AppData\\Local\\Temp\\{BB4BDBD6-CF86-41B8-A83E-5475122C9AD6}\\.cr\\dotnet-sdk-3.1.101-win-x64.exe\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME_X86' to value '[ProgramFilesFolder]dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME_X64' to value '[ProgramFiles64Folder]dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME' to value '[DOTNETHOME_X64]'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'BUNDLEMONIKER' to value 'Microsoft .NET Core SDK 3.1.101'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETSDKVERSION' to value '3.1.101'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETRUNTIMEVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'ASPNETCOREVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'WINFORMSANDWPFVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOMESIMILARITYCHECKOVERRIDE' to value ''\r\n[26B4:2554][2020-02-11T22:21:49]i009: Command Line: '-burn.clean.room=e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe -burn.filehandle.attached=632 -burn.filehandle.self=636'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleOriginalSource' to value 'e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleOriginalSourceFolder' to value 'e:\\Users\\benja\\Downloads\\'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleLog' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149.log'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleManufacturer' to value 'Microsoft Corporation'\r\n[26B4:3748][2020-02-11T22:21:49]i000: Setting numeric variable 'WixStdBALanguageId' to value 1033\r\n[26B4:3748][2020-02-11T22:21:49]i000: Setting version variable 'WixBundleFileVersion' to value '3.1.101.14848'\r\n[26B4:2554][2020-02-11T22:21:49]i100: Detect begin, 15 packages\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting numeric variable 'DotnetInstallLocationExists_x64' to value 1\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting numeric variable 'DotnetInstallLocationExists_x86' to value 1\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetInstallLocationExists_x64' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'DOTNETHOME_X64' to value 'C:\\Program Files\\dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'NOT DotnetInstallLocationExists_x64' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetExeExists_x64' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetInstallLocationExists_x86' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'DOTNETHOME_X86' to value 'C:\\Program Files (x86)\\dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'NOT DotnetInstallLocationExists_x86' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetExeExists_x86' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_runtime_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_hostfxr_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_host_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: windowsdesktop_runtime_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: netstandard_targeting_pack_2.1.0_win_x64.msi, state: Present, cached: Complete\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_sdk_internal_3.1.101_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: AspNetCoreSharedFramework_x64, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'WixBundleInstalled OR ((NOT (DOTNETHOME_X64 ~= DOTNETHOME_X86)) OR DOTNETHOMESIMILARITYCHECKOVERRIDE)' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i199: Detect complete, result: 0x0\r\n[26B4:2554][2020-02-11T22:21:51]i200: Plan begin, 15 packages, action: Repair\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_runtime_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_000_dotnet_runtime_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_hostfxr_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_001_dotnet_hostfxr_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_host_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_002_dotnet_host_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_windowsdesktop_runtime_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_003_windowsdesktop_runtime_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_004_dotnet_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_005_dotnet_apphost_pack_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_x86.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_006_dotnet_apphost_pack_3.1.1_win_x64_x86.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_arm.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_007_dotnet_apphost_pack_3.1.1_win_x64_arm.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_arm64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_008_dotnet_apphost_pack_3.1.1_win_x64_arm64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_netstandard_targeting_pack_2.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_009_netstandard_targeting_pack_2.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_aspnetcore_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_010_aspnetcore_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_windowsdesktop_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_011_windowsdesktop_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_31templates_3.1.101_servicing_014848_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_012_dotnet_31templates_3.1.101_servicing_014848_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_sdk_internal_3.1.101_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_013_dotnet_sdk_internal_3.1.101_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i052: Condition 'VersionNT64 AND (NOT OPT_NO_SHAREDFX)' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_AspNetCoreSharedFramework_x64' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_014_AspNetCoreSharedFramework_x64.log'\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_runtime_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_hostfxr_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_host_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: windowsdesktop_runtime_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: netstandard_targeting_pack_2.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: No, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_sdk_internal_3.1.101_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: AspNetCoreSharedFramework_x64, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i299: Plan complete, result: 0x0\r\n[26B4:2554][2020-02-11T22:21:51]i300: Apply begin\r\n[26B4:2554][2020-02-11T22:21:51]i010: Launching elevated engine process.\r\n[26B4:2554][2020-02-11T22:21:53]i011: Launched elevated engine process.\r\n[26B4:2554][2020-02-11T22:21:53]i012: Connected to elevated engine.\r\n[1914:0954][2020-02-11T22:21:53]i358: Pausing automatic updates.\r\n[1914:0954][2020-02-11T22:21:53]i359: Paused automatic updates.\r\n[1914:0954][2020-02-11T22:21:53]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: Active, restart initiated: No, disable resume: No\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_runtime_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_runtime_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{ECF3E961-C8E1-4276-BCD2-79C693410CC5}v24.68.28408\\dotnet-runtime-3.1.1-win-x64.msi.\r\n[1914:0954][2020-02-11T22:21:54]i301: Applying execute package: dotnet_runtime_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{ECF3E961-C8E1-4276-BCD2-79C693410CC5}v24.68.28408\\dotnet-runtime-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_hostfxr_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_hostfxr_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{746DF466-E621-440F-9BBF-DDBD496C22EC}v24.68.28408\\dotnet-hostfxr-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_host_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_host_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{B1BF0643-9D94-4F9A-8C21-73E6C8BFA840}v24.68.28408\\dotnet-host-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: windowsdesktop_runtime_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\windowsdesktop_runtime_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{5A278411-F21F-4FFC-80A7-0990EF38BD50}v24.68.28408\\windowsdesktop-runtime-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{31EDE1E7-C855-4633-9D73-56F566136567}v24.64.28315\\dotnet-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{F3B5B020-F99B-4798-A2D0-C859FF27E779}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_x86.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_x86.msi, moving to: C:\\ProgramData\\Package Cache\\{4718B341-DBFC-4F26-BFCB-91EFF2995B2F}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_x86.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_arm.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_arm.msi, moving to: C:\\ProgramData\\Package Cache\\{0DF97BB8-17F0-4F0F-9CAC-425CF74C3561}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, moving to: C:\\ProgramData\\Package Cache\\{8C095070-91CD-41FF-9021-5535C498480A}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i304: Verified existing payload: netstandard_targeting_pack_2.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\{A7036CFB-B403-4598-85FF-D397ABB88173}v24.0.28113\\netstandard-targeting-pack-2.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: aspnetcore_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\aspnetcore_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{D6081EC6-BF59-3128-84D0-D3D8309A4339}v3.1.0.0\\aspnetcore-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: windowsdesktop_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\windowsdesktop_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{7519423C-A977-4160-83A2-48633600A216}v24.64.28315\\windowsdesktop-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{4E8EFEE3-6620-43A3-A038-70AD5020B9D8}v3.1.1.014848\\dotnet-31templates-3.1.101-servicing-014848-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_sdk_internal_3.1.101_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_sdk_internal_3.1.101_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{57C6FEEE-6402-45EE-8F4F-73DC112E4491}v12.16.31232\\dotnet-sdk-internal-3.1.101-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: AspNetCoreSharedFramework_x64 at path: C:\\ProgramData\\Package Cache\\.unverified\\AspNetCoreSharedFramework_x64, moving to: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi.\r\n[26B4:2554][2020-02-11T22:21:59]i319: Applied execute package: dotnet_runtime_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:21:59]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_runtime_24.68.28408_x64, package: dotnet_runtime_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:21:59]i301: Applying execute package: dotnet_hostfxr_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{746DF466-E621-440F-9BBF-DDBD496C22EC}v24.68.28408\\dotnet-hostfxr-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:21:59]i319: Applied execute package: dotnet_hostfxr_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:21:59]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_HostFxr_24.68.28408_x64, package: dotnet_hostfxr_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:21:59]i301: Applying execute package: dotnet_host_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{B1BF0643-9D94-4F9A-8C21-73E6C8BFA840}v24.68.28408\\dotnet-host-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:00]i319: Applied execute package: dotnet_host_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:00]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_SharedHost_24.68.28408_x64, package: dotnet_host_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:00]i301: Applying execute package: windowsdesktop_runtime_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{5A278411-F21F-4FFC-80A7-0990EF38BD50}v24.68.28408\\windowsdesktop-runtime-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:06]i319: Applied execute package: windowsdesktop_runtime_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:06]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: windowsdesktop_runtime_24.68.28408_x64, package: windowsdesktop_runtime_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:06]i301: Applying execute package: dotnet_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{31EDE1E7-C855-4633-9D73-56F566136567}v24.64.28315\\dotnet-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:10]i319: Applied execute package: dotnet_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:10]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_targeting_pack_24.64.28315_x64, package: dotnet_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:10]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{F3B5B020-F99B-4798-A2D0-C859FF27E779}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:10]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:10]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64, package: dotnet_apphost_pack_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:10]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{4718B341-DBFC-4F26-BFCB-91EFF2995B2F}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_x86.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:11]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:11]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_x86, package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi\r\n[1914:0954][2020-02-11T22:22:11]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{0DF97BB8-17F0-4F0F-9CAC-425CF74C3561}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:12]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:12]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_arm, package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi\r\n[1914:0954][2020-02-11T22:22:12]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{8C095070-91CD-41FF-9021-5535C498480A}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:12]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:12]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_arm64, package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi\r\n[1914:0954][2020-02-11T22:22:12]i301: Applying execute package: netstandard_targeting_pack_2.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{A7036CFB-B403-4598-85FF-D397ABB88173}v24.0.28113\\netstandard-targeting-pack-2.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:15]i319: Applied execute package: netstandard_targeting_pack_2.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:15]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: netstandard_targeting_pack_24.0.28113_x64, package: netstandard_targeting_pack_2.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:15]i301: Applying execute package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{D6081EC6-BF59-3128-84D0-D3D8309A4339}v3.1.0.0\\aspnetcore-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:18]i319: Applied execute package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:18]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Microsoft.AspNetCore.TargetingPack_x64_ENU,v3.1.0, package: aspnetcore_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:18]i301: Applying execute package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{7519423C-A977-4160-83A2-48633600A216}v24.64.28315\\windowsdesktop-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:20]i319: Applied execute package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:20]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: windowsdesktop_targeting_pack_24.64.28315_x64, package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:20]i301: Applying execute package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{4E8EFEE3-6620-43A3-A038-70AD5020B9D8}v3.1.1.014848\\dotnet-31templates-3.1.101-servicing-014848-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\" ALLOWMSIINSTALL=\"True\"'\r\n[26B4:2554][2020-02-11T22:22:21]i319: Applied execute package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:21]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: NetCore_Templates_3.1_3.1.1.014848_x64, package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:21]i301: Applying execute package: dotnet_sdk_internal_3.1.101_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{57C6FEEE-6402-45EE-8F4F-73DC112E4491}v12.16.31232\\dotnet-sdk-internal-3.1.101-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\" DOTNETHOME_X86=\"C:\\Program Files (x86)\\dotnet\" DOTNETHOME_X64=\"C:\\Program Files\\dotnet\" EXEFULLPATH=\"e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe\" ALLOWMSIINSTALL=\"True\"'\r\n[26B4:2554][2020-02-11T22:22:45]i319: Applied execute package: dotnet_sdk_internal_3.1.101_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:45]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_3.1.101.014848_x64, package: dotnet_sdk_internal_3.1.101_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:45]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:22:51]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:22:54]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:22:57]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:23:00]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:23:05]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:23:08]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:23:30]i319: Applied execute package: AspNetCoreSharedFramework_x64, result: 0x80070643, restart: None\r\n[26B4:2554][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to execute MSI package.\r\n[1914:0954][2020-02-11T22:23:30]i351: Removing cached package: AspNetCoreSharedFramework_x64, from path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\\r\n[1914:0954][2020-02-11T22:23:30]i372: Session end, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: ARP, restart: None, disable resume: No\r\n[1914:0954][2020-02-11T22:23:30]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: ARP, restart initiated: No, disable resume: No\r\n[26B4:2554][2020-02-11T22:23:30]i399: Apply complete, result: 0x80070643, restart: None, ba requested restart:  No\r\n```","Url":"https://github.com/dotnet/sdk/issues/10630","RelatedDescription":"Open issue \"Cannot repair SDK 3.1.101\" (#10630)"},{"Id":"563466372","IsPullRequest":false,"CreatedAt":"2020-02-11T20:45:39","Actor":"Zubastic","Number":"10629","RawContent":null,"Title":"PrintDialog gets into an infinite loop","State":"open","Body":"When try to print page with System.Windows.Controls.PrintDialog at NetCore 3.1 program goes to infinity loop. If using virtual printer (for example Microsoft Print to PDF) it throw exception:\r\n```\r\nSystem.NotSupportedException: Specified method is not supported.\r\n   at MS.Internal.PrintWin32Thunk.XpsPrintJobStream.Seek(Int64 offset, SeekOrigin origin)\r\n   at System.Printing.PrintQueueStream.Seek(Int64 offset, SeekOrigin origin)\r\n   at System.IO.Compression.ZipArchive.WriteFile()\r\n   at System.IO.Compression.ZipArchive.Dispose(Boolean disposing)\r\n   at System.IO.Compression.ZipArchive.Dispose()\r\n   at System.IO.Packaging.ZipPackage.Dispose(Boolean disposing)\r\n   at System.IO.Packaging.Package.System.IDisposable.Dispose()\r\n   at System.IO.Packaging.Package.Close()\r\n   at System.Windows.Xps.Packaging.XpsDocument.DisposeXpsDocument()\r\n   at System.Printing.PrintQueue.DisposeSerializationManager(Boolean abort)\r\n   at System.Windows.Xps.XpsDocumentWriter.EndWrite(Boolean disposeManager, Boolean abort)\r\n   at System.Windows.Xps.XpsDocumentWriter.SaveAsXaml(Object serializedObject, Boolean isSync)\r\n   at System.Windows.Xps.XpsDocumentWriter.Write(DocumentPaginator documentPaginator, PrintTicket printTicket)\r\n   at System.Windows.Controls.PrintDialog.PrintDocument(DocumentPaginator documentPaginator, String description)\r\n   at WpfNetcoreTest.Program..ctor() in C:\\Users\\Zubastic\\Source\\Repos\\Zubastic\\PrintDialogBug\\WpfNetcoreTest\\Program.cs:line 18\r\n   at WpfNetcoreTest.App..ctor() in C:\\Users\\Zubastic\\Source\\Repos\\Zubastic\\PrintDialogBug\\WpfNetcoreTest\\App.xaml.cs:line 18\r\n   at WpfNetcoreTest.App.Main()\r\n```\r\nRepo for reproduce bug:\r\nhttps://github.com/Zubastic/PrintDialogBug","Url":"https://github.com/dotnet/sdk/issues/10629","RelatedDescription":"Open issue \"PrintDialog gets into an infinite loop\" (#10629)"},{"Id":"562895414","IsPullRequest":true,"CreatedAt":"2020-02-11T20:13:16","Actor":"dsplaisted","Number":"10622","RawContent":null,"Title":"Enable signing for util resources dll","State":"closed","Body":"@JohnTortugo FYI","Url":"https://github.com/dotnet/sdk/pull/10622","RelatedDescription":"Closed or merged PR \"Enable signing for util resources dll\" (#10622)"},{"Id":"563444539","IsPullRequest":false,"CreatedAt":"2020-02-11T20:03:30","Actor":"raymens","Number":"10628","RawContent":null,"Title":"3.1.200-preview-014883 crashes on restoring (newly created) fsharp project","State":"open","Body":"Restoring a project fails with the following error `NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string.`. using the `3.1.200-preview-014883` SDK.\r\n\r\nForcing the SDK to 3.1.101 using `global.json` fixes the issue.\r\n\r\n# Steps to reproduce\r\n\r\n```\r\nPS C:\\Workspace> dotnet new console -lang F# -n SdkErrorSample\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on SdkErrorSample\\SdkErrorSample.fsproj...\r\nC:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string. [C:\\Workspace\\SdkErrorSample\\SdkErrorSample.fsproj]\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n\r\nPS C:\\Workspace> cd .\\SdkErrorSample\\\r\nPS C:\\Workspace\\SdkErrorSample> dotnet restore\r\nC:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string. [C:\\Workspace\\SdkErrorSample\\SdkErrorSample.fsproj]\r\nPS C:\\Workspace\\SdkErrorSample>\r\n```","Url":"https://github.com/dotnet/sdk/issues/10628","RelatedDescription":"Open issue \"3.1.200-preview-014883 crashes on restoring (newly created) fsharp project\" (#10628)"},{"Id":"563352321","IsPullRequest":false,"CreatedAt":"2020-02-11T17:11:06","Actor":"jeffschwMSFT","Number":"10626","RawContent":null,"Title":"\"dotnet Service.dll\" takes 8 seconds more on Windows Server 2019 container vs Windows Server 2016 container for first run","State":"open","Body":"Posted by @shreyagr \r\n\r\nGeneral\r\nWe are running dotnet core 2.1 app on mcr.microsoft.com/dotnet/core/aspnet:2.1-nanoserver-1809 image for container. However, we are seeing that the command \"dotnet service.dll\" takes 8-9 seconds to start.\r\n\r\nIf I try to use Entrypoint to just get a cmd window and manually run \"dotnet service.dll\", the first attempt takes 8-9 seconds, but all following attempts within the same container instance are instantaneous. Does this mean there is some metadata that dotnet loads or tries to get for the first run?","Url":"https://github.com/dotnet/sdk/issues/10626","RelatedDescription":"Open issue \"\"dotnet Service.dll\" takes 8 seconds more on Windows Server 2019 container vs Windows Server 2016 container for first run\" (#10626)"},{"Id":"563191466","IsPullRequest":true,"CreatedAt":"2020-02-11T15:47:23","Actor":"dotnet-maestro[bot]","Number":"10624","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10624","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10624)"},{"Id":"563197402","IsPullRequest":false,"CreatedAt":"2020-02-11T13:12:26","Actor":"couven92","Number":"10625","RawContent":null,"Title":"RuntimeIdentifier does not propagate to dependency projects when multi-targeting TFMs","State":"open","Body":"I have two projects, one is a `ProjectReference` dependency of the other. Both projects multi-target the same two TFMs (`netcoreapp3.1` and `net47`) and I aim to do a RID-specific standalone deployment and therefore need to specify the RID at compile-time.\r\n\r\nHowever, the build fails, appearently due to MSBuild not flowing the `RuntimeIdentifier` property when it is compiling the dependency project, thus resulting in a missing target dependency resolution error. `NETSDK1047: Assets file does not have a target for the specified RID.`\r\n\r\n# Steps to reproduce\r\n\r\n1. Produce a `global.json` file fixing the SDK to version 3.1.101 (current .NET Core SDK when filing the issue). The issue also repros with new preview versions (tested `3.1.200-preview-014883`)\r\n1. Create two projects side-by-side  \r\n   `dotnet new console -n dependency`  \r\n   `dotnet new console -n application`\r\n1. Change both project files to a multi-targeting setup (this issue does not repro when single-targeting one TFM)  \r\n   `<TargetFrameworks>netcoreapp3.1;net47</TargetFrameworks>`\r\n1. Add a reference from one of the projects to the other.  \r\n   `dotnet add application reference dependency`\r\n1. Restore the appliction project with specifying a runtime identifier\r\n   `dotnet restore application --runtime win10-x64 -bl:MSBuild.Restore.binlog`\r\n1. Build the application project with the same runtime identifier as before\r\n   `dotnet build application --runtime win10-x64 -bl:MSBuild.Build.binlog`\r\n\r\n# Expected behaviour\r\n\r\nThe `dotnet build application` command should resolve all dependencies (i.e. `..\\dependency\\dependency.csproj`) build and produce the binary assets for the `application\\application.csproj` project in the `application\\bin\\Debug\\(net47)|(netcoreapp3.1)\\win10-x64` directories. The Build should succeed. Specifically, the binary output for `dependency` should reflect the runtime identifier specification for `win10-x64` as that was passed to the command-line arguments.\r\n\r\n# Current behaviour\r\n\r\nThe build fails:\r\n> [...]\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5): error NETSDK1047: Assets file '[...]\\dependency\\obj\\project.assets.json' doesn't have a target for '.NETFramework,Version=v4.7/win7-x86'. Ensure that restore has run and that you have included 'net47' in the TargetFrameworks for your project. You may also need to include 'win7-x86' in your project's RuntimeIdentifiers. [[...]\\dependency\\dependency.csproj]\r\n\r\nThe error message states that there is a missing target for TFM `net47` and RID `win7-x86`.\r\n\r\nAttached ZIP file containing the project files, and the produced MSBuild binary logs:  \r\n[net47-win10-x64-test.zip](https://github.com/dotnet/sdk/files/4185731/net47-win10-x64-test.zip)\r\n\r\n# Comments\r\n\r\nThe RID shown in the error message specifies `win7-x86` which is a completely different RID compared to `win10-x64` (different OS AND different architecture).\r\n\r\nI have looked at the binary log (`MSBuild.Build.binlog` in the attached [ZIP-file](https://github.com/dotnet/sdk/files/4185731/net47-win10-x64-test.zip)) and discovered that the `ResolveReferences` targets during the build of `application.csproj` invokes the `MSBuild` task to build the dependency. In the parameters passed to that task, the `dependency.csproj` project specifically gains an additional item property `UndefineProperties` which is set to `;RuntimeIdentifier`. And sure enough, in the MSBuild invocation for `dependency.csproj` there is no Property `RuntimeIdentifier` set.\r\n\r\nIf the reference was a PackageReference or binary DLL that was RID-agnostic, the current behaviour would probably be fine. However, in the case when MSBuild recognizes that it needs to compile a dependency (i.e. when using `ProjectReference`) the `RuntimeIdentifier` property should flow with the compilation for the dependency. If the dependency is RID-agnostic, specifying a RID won't do any harm, but if it is RID-sensitive, specifying the RID is necessary.","Url":"https://github.com/dotnet/sdk/issues/10625","RelatedDescription":"Open issue \"RuntimeIdentifier does not propagate to dependency projects when multi-targeting TFMs\" (#10625)"},{"Id":"562926295","IsPullRequest":false,"CreatedAt":"2020-02-11T01:28:26","Actor":"Tandolf","Number":"10623","RawContent":null,"Title":"running any dotnet command on mac just gives empty line","State":"open","Body":"I installed dotnet version 3.1.101 on my mac running macOS catalina 10.15.2\r\n\r\nwhen running the dotnet command in either iterm2 or terminal the following happens.\r\n\r\n```\r\ndotnet --version\r\n3.1.101\r\n```\r\n\r\nand just running `dotnet` displays the usage\r\n```\r\nUsage: dotnet [options]\r\nUsage: dotnet [path-to-application]\r\n\r\nOptions:\r\n  -h|--help         Display help.\r\n  --info            Display .NET Core information.\r\n  --list-sdks       Display the installed SDKs.\r\n  --list-runtimes   Display the installed runtimes.\r\n\r\npath-to-application:\r\n  The path to an application .dll file to execute.\r\n```\r\n\r\nBut if i run `dotnet --help`\r\nor `dotnet -h`\r\nit just goes to a newline and no output, i need to Ctrl+C to exit.\r\n\r\nThe same goes if i try `dotnet new react` or any of the `new` programs.\r\n\r\nIt just gives me a blank new line, the program hangs without any output and i need to Ctrl+C to get back to the terminal prompt.","Url":"https://github.com/dotnet/sdk/issues/10623","RelatedDescription":"Open issue \"running any dotnet command on mac just gives empty line\" (#10623)"},{"Id":"562201532","IsPullRequest":true,"CreatedAt":"2020-02-10T23:52:44","Actor":"danmosemsft","Number":"10619","RawContent":null,"Title":"Old repo issue number mapped to new repo issue number","State":"closed","Body":"This table is useful if you are looking at a migrated issue, recall there was some email or chat discussion about it using the old issue number or URL, and want to find that. Search for the new issue number in the file and find the old issue number to search in email.\r\n\r\nYou can also use this to map from old to new number, but it's probably easier to just go to the old issue URL and see where your browser gets redirected.\r\n\r\nI made a similar PR in dotnet/runtime: https://github.com/dotnet/runtime/pull/31981\r\n\r\nQ: is this your final source structure? In dotnet/runtime they have a `<root>\\docs` repo for docs relevant to the whole repo. In this dotnet/sdk you have `<root>\\sdk\\toolset\\Documentation`. I'm guessing this is just a temporary artefact of the repo merge? It seems a bit clumsy. \r\n\r\ncc @jaredpar @nguerrera @dsplaisted ","Url":"https://github.com/dotnet/sdk/pull/10619","RelatedDescription":"Closed or merged PR \"Old repo issue number mapped to new repo issue number\" (#10619)"},{"Id":"562173352","IsPullRequest":true,"CreatedAt":"2020-02-10T15:35:54","Actor":"dotnet-maestro[bot]","Number":"10618","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200209.1\r\n- **Date Produced**: 2/9/2020 2:00 PM\r\n- **Commit**: b0e8d3944155f94f83deea8afe025debe369e69f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20109.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10618)"},{"Id":"562370626","IsPullRequest":false,"CreatedAt":"2020-02-10T07:21:51","Actor":"enricobenedos","Number":"10621","RawContent":null,"Title":"System.Exception: Publish has encountered an error","State":"open","Body":"I'm facing an issue with `dotnet publish` command. I'm able to compile XX times and then without a valid reason I'm not able to publish the exe anymore.\r\nAlso deleting bin and obj nothing change.\r\nAnother strange thing is that after the first broken publish I need administrator permissions to delete bin folder.\r\nHere the errors\r\n```\r\nPublish has encountered an error.\r\nPublish has encountered an error. We were unable to determine the cause of the error. Check the output log for more details. \r\n\r\nA diagnostic log has been written to the following location:\r\n\"C:\\Users\\enricobenedos\\AppData\\Local\\Temp\\tmp616C.tmp\"\r\n```\r\n`.tmp` file content\r\n```\r\n2/10/2020 8:02:07 AM\r\nSystem.AggregateException: One or more errors occurred. ---> System.Exception: Publish has encountered an error. We were unable to determine the cause of the error. Check the output log for more details. \r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at Microsoft.Publish.Framework.Model.DefaultPublishSteps.<>c__DisplayClass26_0.<IsBuildCompletedSuccessfully>b__2()\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Publish.Framework.Model.DefaultPublishSteps.<DefaultCorePublishStep>d__23.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.Publish.Framework.ViewModel.ProfileSelectorViewModel.<RunPublishTaskAsync>d__213.MoveNext()\r\n---> (Inner Exception #0) System.Exception: Publish has encountered an error. We were unable to determine the cause of the error. Check the output log for more details. <---\r\n\r\nSystem.Exception: Publish has encountered an error. We were unable to determine the cause of the error. Check the output log for more details. \r\n\r\n===================\r\n```\r\nand with PowerShell the result is the same\r\n```\r\ndotnet publish -r win-x64 -c Release /p:PublishSingleFile=true\r\nMicrosoft (R) Build Engine version 16.4.0+e901037fe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 725.51 ms for C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerCore\\FCSInstallerCore.csproj.\r\n  Restore completed in 725.48 ms for C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\FCSInstallerGUI.csproj.\r\n  FCSInstallerCore -> C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerCore\\bin\\Release\\netcoreapp3.1\\FCSInstallerCore.dll\r\n  FCSInstallerGUI -> C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\bin\\Release\\netcoreapp3.1\\win-x64\\FCSInstallerGUI.dll\r\nC:\\Program Files\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(868,5): error MSB4018: The \"GenerateBundle\" task failed unexpectedly. [C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\FCSInstallerGUI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(868,5): error MSB4018: System.ArgumentException: Invalid input specification: Found multiple entries with the same BundleRelativePath [C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\FCSInstallerGUI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(868,5): error MSB4018:    at Microsoft.NET.HostModel.Bundle.Bundler.GenerateBundle(IReadOnlyList`1 fileSpecs) [C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\FCSInstallerGUI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(868,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateBundle.ExecuteCore() [C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\FCSInstallerGUI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(868,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\FCSInstallerGUI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(868,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\FCSInstallerGUI.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(868,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\Projects\\FCSSystem\\Supervisore.NET\\FCSInstallerGUI\\FCSInstallerGUI\\FCSInstallerGUI.csproj]\r\n```\r\nThese are the main project references\r\n![image](https://user-images.githubusercontent.com/12233746/74128729-1a0b6a00-4bde-11ea-89d6-229fdb8c18a6.png)\r\n\r\nAns these are the referenced project dependencies\r\n![image](https://user-images.githubusercontent.com/12233746/74128815-6191f600-4bde-11ea-9d8a-b9b2161b0481.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/10621","RelatedDescription":"Open issue \"System.Exception: Publish has encountered an error\" (#10621)"},{"Id":"561513710","IsPullRequest":false,"CreatedAt":"2020-02-10T01:54:47","Actor":"yuki233","Number":"10611","RawContent":null,"Title":"Dotnet build failed with Error MSB4062 when using x86 SDK 3.1.102","State":"closed","Body":"**Repro step:**\r\n1. On 64bit OS, Install x86 SDK 3.1.102 from Feb Update\r\n2. Create a wpf project then try to build it\r\ndotnet new wpf -o MyWPFApp \r\ncd MyWPFApp \r\ndotnet build\r\n\r\n**Actual Result:**\r\ndotnet build failed with Error MSB4062\r\n\r\nc:\\tt\\MyWPFApp>dotnet build\r\nMicrosoft (R) Build Engine version 16.4.0+e901037fe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 48.25 ms for c:\\tt\\MyWPFApp\\MyWPFApp.csproj.\r\nC:\\Program Files (x86)\\dotnet\\sdk\\3.1.102\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\targets\\Microsoft.WinFX.targets(225,9): error **MSB4062**: The \"Microsoft.Build.Tasks.Windows.MarkupCompilePass1\" task could not be loaded from the assembly C:\\Program Files %28x86%29\\dotnet\\sdk\\3.1.102\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\netcoreapp2.1\\PresentationBuildTasks.dll. Could not load file or assembly 'C:\\Program Files %28x86%29\\dotnet\\sdk\\3.1.102\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\netcoreapp2.1\\PresentationBuildTasks.dll'. The system cannot find the path specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [c:\\tt\\MyWPFApp\\MyWPFApp.csproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files (x86)\\dotnet\\sdk\\3.1.102\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\targets\\Microsoft.WinFX.targets(225,9): error MSB4062: The \"Microsoft.Build.Tasks.Windows.MarkupCompilePass1\" task could not be loaded from the assembly C:\\Program Files %28x86%29\\dotnet\\sdk\\3.1.102\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\netcoreapp2.1\\PresentationBuildTasks.dll. Could not load file or assembly 'C:\\Program Files %28x86%29\\dotnet\\sdk\\3.1.102\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\netcoreapp2.1\\PresentationBuildTasks.dll'. The system cannot find the path specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [c:\\tt\\MyWPFApp\\MyWPFApp.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\n\r\n**Donet --info**\r\nc:\\tt\\MyWPFApp>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.102\r\n Commit:    573d158fea\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x86\r\n Base Path:   C:\\Program Files (x86)\\dotnet\\sdk\\3.1.102\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.2\r\n  Commit:  916b5cba26\r\n\r\n.NET Core SDKs installed:\r\n  3.1.102 [C:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.3 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.3 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.3 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.2 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download","Url":"https://github.com/dotnet/sdk/issues/10611","RelatedDescription":"Closed issue \"Dotnet build failed with Error MSB4062 when using x86 SDK 3.1.102\" (#10611)"},{"Id":"562274292","IsPullRequest":false,"CreatedAt":"2020-02-10T01:08:58","Actor":"wli3","Number":"10620","RawContent":null,"Title":"Dotnet Tools Search Early Preview Documentation","State":"open","Body":"The feature is in preview 5.0.100 SDK\r\n\r\n# Motivation\r\nHelp the user to discover available dotnet tools (global tools/local tools) in nuget.org\r\n\r\n# Command syntax\r\n```\r\nUsage: dotnet tool search [options] <Search Term>\r\n\r\nArguments:\r\n  <Search Term>   Search term from package id or package description. Require at least one character.\r\n\r\nOptions:\r\n  --detail                        Show detail result of the query.\r\n  --skip <Skip>                   The number of results to skip, for pagination.\r\n  --take <Take>                   The number of results to return, for pagination.\r\n  --prerelease                    determining whether to include pre-release packages.\r\n  --semver-level <SemVer Level>   A SemVer 1.0.0 version string.\r\n  -h, --help                      Show command line help.\r\n```\r\n\r\n# Walk through\r\n\r\nI want to find a dotnet tool that can help me format my code. I could use command `dotnet tool search format`. “format” is the search term.\r\n\r\nThe result is the following\r\n```\r\nPackage ID                              Latest Version      Authors                        Downloads      Verified\r\n------------------------------------------------------------------------------------------------------------------\r\ndotnet-format                           3.2.107702          Microsoft                      79281\r\nwk.dotnetformat                         0.2.2               DotNetFormat                   370\r\nxamlstyler.console                      3.2001.0            Xavalon                        8478\r\nproject2015to2017.migrate2017.tool      4.1.2               hvanbakel et. al.              10750\r\nheroesdataparser                        4.5.2               Kevin Oliva                    8570\r\nproject2015to2017.cli                   4.0.0               hvanbakel et. al.              5865\r\nproject2015to2017.migrate2019.tool      4.1.2               hvanbakel et. al.              4937\r\ndotnet-reqube                           1.0.8               Oleg Shevchenko                4307\r\nunxml                                   1.3.0               vivainio                       996\r\ncatj                                    1.0.1               mattleibow                     191\r\ndotnet-dbinfo                           1.4.0               berkid89                       4720\r\napache.avro.tools                       1.9.1               avrogen                        7965\r\nwixgen                                  0.0.1               Junian Triajianto              136\r\nwtc                                     0.0.2.20191104      Filipe Lima                    56\r\ndotnetrsa                               0.3.0               stulzq                         1240\r\ncsprojcli                               1.1.0               guitarrapc                     359\r\ngitlab_security_report_converter        1.0.1               Jürgen Steinblock              221\r\nmbw.tools.csprojformatter               0.1.0               MBW.Tools.CsProjFormatter      75\r\nconventionalcommits.tool                0.1.1               Ryan McCafferty                421\r\nfenrir                                  0.3.10              Jorel Fermin                   2015\r\n```\r\n\r\nTo further investigate dotnet-format. I could use `dotnet tool search format --take 1 --detail` to read the detail.\r\n\r\n```\r\n----------------\r\ndotnet-format\r\nLatest Version: 3.2.107702\r\nAuthors: Microsoft\r\nTags:\r\nDownloads: 79281\r\nVerified: False\r\nDescription: Command line tool for formatting C# and Visual Basic code files based on .editorconfig settings.\r\nVersions:\r\n        3.0.2 Downloads: 1226\r\n        3.0.4 Downloads: 8913\r\n        3.1.37601 Downloads: 63176\r\n        3.2.107702 Downloads: 4594\r\n```\r\n\r\nOnce I decide to use this tool. I can install it by using `dotnet tool install -g dotnet-format`\r\n\r\n# Implementation detail\r\ndotnet tool search utilize a new NuGet search API endpoint underneath. https://azuresearch-usnc.dev.nugettest.org/query?q=&packageType=dotnettool It enables filter by `PackageType`. Dotnet tools has the package type `dotnettool`. Other parameters are similar to the [existing doc]( https://docs.microsoft.com/en-us/nuget/api/search-query-service-resource#search-for-packages).\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/10620","RelatedDescription":"Open issue \"Dotnet Tools Search Early Preview Documentation\" (#10620)"},{"Id":"562016139","IsPullRequest":true,"CreatedAt":"2020-02-08T15:42:09","Actor":"dotnet-maestro[bot]","Number":"10617","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200207.14\r\n- **Date Produced**: 2/8/2020 1:30 AM\r\n- **Commit**: c84720afc91b635e2fbeb5dbd7e2742f18773e0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20107.14\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10617","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10617)"},{"Id":"561945772","IsPullRequest":true,"CreatedAt":"2020-02-08T01:09:12","Actor":"tmat","Number":"10616","RawContent":null,"Title":"[WIP pending 3.1.3xx] Order GenerateAssemblyInfo target before BeforeCompile (#10613)","State":"open","Body":"Port from master.\r\nFixes https://github.com/dotnet/sdk/issues/10614","Url":"https://github.com/dotnet/sdk/pull/10616","RelatedDescription":"Open PR \"[WIP pending 3.1.3xx] Order GenerateAssemblyInfo target before BeforeCompile (#10613)\" (#10616)"},{"Id":"561279697","IsPullRequest":true,"CreatedAt":"2020-02-08T00:23:47","Actor":"dotnet-maestro[bot]","Number":"10609","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84c11fd7-408f-4ada-5766-08d76e1d56cb)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 84c11fd7-408f-4ada-5766-08d76e1d56cb\r\n- **Build**: 5.5.0.6422\r\n- **Date Produced**: 2/7/2020 1:55 AM\r\n- **Commit**: 7bac015acc5b7e0161a058c8febc98abe2386d51\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-rtm.6422\r\n\r\n[marker]: <> (End:84c11fd7-408f-4ada-5766-08d76e1d56cb)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10609","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#10609)"},{"Id":"561927258","IsPullRequest":true,"CreatedAt":"2020-02-07T23:45:43","Actor":"wli3","Number":"10615","RawContent":null,"Title":"WIP Revert \"Turn off Helix testing for now\"","State":"open","Body":"This reverts commit 3c42d1970a44c8c2d199989747ea8d24861930bc.","Url":"https://github.com/dotnet/sdk/pull/10615","RelatedDescription":"Open PR \"WIP Revert \"Turn off Helix testing for now\"\" (#10615)"},{"Id":"561805642","IsPullRequest":true,"CreatedAt":"2020-02-07T21:48:45","Actor":"tmat","Number":"10613","RawContent":null,"Title":"Order GenerateAssemblyInfo target before BeforeCompile","State":"closed","Body":"Fixes https://github.com/dotnet/sdk/issues/10614","Url":"https://github.com/dotnet/sdk/pull/10613","RelatedDescription":"Closed or merged PR \"Order GenerateAssemblyInfo target before BeforeCompile\" (#10613)"},{"Id":"561806357","IsPullRequest":false,"CreatedAt":"2020-02-07T18:41:55","Actor":"tmat","Number":"10614","RawContent":null,"Title":"GenerateAssemblyInfo is not ordered before BeforeCompile","State":"open","Body":"The common targets convention is to generate all source inputs to the compiler before BeforeCompile target.\r\n\r\nTargets that fail to do so break Source Link (see https://github.com/dotnet/sourcelink/issues/572).","Url":"https://github.com/dotnet/sdk/issues/10614","RelatedDescription":"Open issue \"GenerateAssemblyInfo is not ordered before BeforeCompile\" (#10614)"},{"Id":"561668324","IsPullRequest":false,"CreatedAt":"2020-02-07T14:25:48","Actor":"matkoch","Number":"10612","RawContent":null,"Title":"'dotnet new globaljson' creates file without newline at the end","State":"open","Body":"### Reproduction\r\n\r\n1. Execute `dotnet new globaljson`\r\n\r\n### Expectation\r\n\r\nFile has a newline at the end-of-file.\r\n\r\n### Actual\r\n\r\nFile has no newline at the end-of-file.","Url":"https://github.com/dotnet/sdk/issues/10612","RelatedDescription":"Open issue \"'dotnet new globaljson' creates file without newline at the end\" (#10612)"},{"Id":"561352178","IsPullRequest":false,"CreatedAt":"2020-02-07T00:35:13","Actor":"MSLukeWest","Number":"10610","RawContent":null,"Title":"Publish test PublishItemsOutputGroupTests.GroupPopulatedCorrectlyWithSingleFile was disabled for Ubuntu due to unresolved test issue","State":"open","Body":"When creating this test it would consistently fail the Ubuntu check in gates due to an unresolved test issue, so we marked it CoreMSBuildAndWindowsOnly.  We don't loose meaningful test coverage here because the tested scenario is only valid on Windows platforms anyway, but I'm still tracking the test issue in case it affects other tests as well.  Here's the details:\r\n\r\n\r\nIn order to verify the contents of an output group I add a custom build target to the test project that copies all items in the output group to a folder under the test directory (Example: \\TestPublishOutputGroup\\TestOutput). You can see how this is done here: \r\n\r\nhttps://github.com/dotnet/sdk/blob/9e18c1c22e2cd5c2d0a1cc3a5dc3459e6f2390a6/src/Tests/Microsoft.NET.TestFramework/ProjectConstruction/TestProject.cs#L306 \r\n\r\nNormally this works fine when running in the Ubuntu flavor, the two other tests do the same thing and pass. But for some reason in this one test when we go to verify the contents of this folder (using DirectoryInfo.Should().HaveFile()) we get an exception:\r\n\r\n_Expected File \"TestPublishOutputGroup\" cannot be found in directory \"/datadisks/disk1/workspace/work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/TestOutput\"._\r\n\r\nHowever, all other logging I've added to the test shows that this folder does indeed exist. I tried simply creating the directory before the build starts and verifying it exists using Directory.Exists, which reported true even though the exception still happens later on. I've also had the test output a diagnostic MSBuild log and confirmed it's creating the directory and placing items in it. From a sample log (where the directory was not explicitly created before the build):\r\n\r\n_Task \"Copy\" (TaskId:101)\r\nTask Parameter:\r\nSourceFiles=\r\n/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/obj/Debug/netcoreapp3.0/win-x86/TestPublishOutputGroup.pdb\r\nCopyToPublishDirectory=PreserveNewest\r\nExcludeFromSingleFile=true\r\nIsKeyOutput=\r\nOutputGroup=PublishItemsOutputGroup\r\nRelativePath=TestPublishOutputGroup.pdb\r\nTargetPath=TestPublishOutputGroup.pdb\r\n/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/bin/Debug/netcoreapp3.0/win-x86/publish/TestPublishOutputGroup.exe\r\nIsKeyOutput=true\r\nOutputGroup=PublishItemsOutputGroup\r\nRelativePath=TestPublishOutputGroup.exe\r\nTargetPath=TestPublishOutputGroup.exe (TaskId:101)\r\nTask Parameter:DestinationFolder=/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/TestOutput (TaskId:101)\r\nCopying file from \"/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/obj/Debug/netcoreapp3.0/win-x86/TestPublishOutputGroup.pdb\" to \"/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/TestOutput/TestPublishOutputGroup.pdb\". (TaskId:101)\r\nCopying file from \"/datadisks/disk1/workspace/_work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/bin/Debug/netcoreapp3.0/win-x86/publish/TestPublishOutputGroup.exe\" to \"/datadisks/disk1/workspace/work/11/s/artifacts/tmp/Debug/GroupPopulate---C21094DA/TestPublishOutputGroup/TestOutput/TestPublishOutputGroup.exe\". (TaskId:101)\r\nDone executing task \"Copy\". (TaskId:101)_\r\n\r\nAs you can see, MSBuild explicitly mentions copying files to this directory, and the copy task passes. So it's not clear to me why this exception is happening. This is why I've marked this test CoreMSBuildAndWindowsOnlyFact. It should also be noted that the PublishItemsOutputGroup was created for use by the Visual Studio Installer Projects extension, which only runs on Windows platforms anyway.","Url":"https://github.com/dotnet/sdk/issues/10610","RelatedDescription":"Open issue \"Publish test PublishItemsOutputGroupTests.GroupPopulatedCorrectlyWithSingleFile was disabled for Ubuntu due to unresolved test issue\" (#10610)"},{"Id":"561271996","IsPullRequest":false,"CreatedAt":"2020-02-06T21:11:36","Actor":"swaroop-sridhar","Number":"10608","RawContent":null,"Title":"`dotnet publish --no-build` surprising behavior","State":"open","Body":"Trying the following sequence: \r\n\r\n```\r\ndotnet new console\r\ndotnet build -r win-x64 \r\ndotnet publish --no-build -r win-x64 --self-contained=false\r\n```\r\nWill generate an inconsistent app. The published output only contains the files for a fw-dependent build, but contains the `deps.json` and `runtimeconfig.json` from the self-contained build step. This causes the app to fail at runtime.\r\n\r\nThis can lead to surprising failures for customers (reported by @ryknuth), especially because:\r\n* Mentioning the RID implicitly generates a self-contained build\r\n* There's no --self-contained=false option on the build step\r\n* Some of the properties may be imported from various csproj files, and the distinction may not be obvious to the customer.\r\n* The failure mode is not intuitive. The app fails with:\r\n `Message: A fatal error was encountered. The library 'hostpolicy.dll' required to execute the application was not found in 'C:\\Program Files\\dotnet'.`\r\n\r\nIn this case, I think the publish step should fail with an error, rather than generating a wrong app.\r\n\r\n@nguerrera @jeffschwMSFT ","Url":"https://github.com/dotnet/sdk/issues/10608","RelatedDescription":"Open issue \"`dotnet publish --no-build` surprising behavior\" (#10608)"},{"Id":"561129670","IsPullRequest":false,"CreatedAt":"2020-02-06T04:31:05","Actor":"Banyc","Number":"10607","RawContent":null,"Title":"Privacy Risk: Development Environment Leaks after `dotnet publish`","State":"open","Body":"**Version Used**: \r\n\r\ndotnet core version 3.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. `dotnet new console`\r\n1. type something like `int[] err = new int[0]; err[1] = err[2];`\r\n1. `dotnet publish -c Release -r xxx --self-contained false`\r\n1. run the executive\r\n\r\n**Expected Behavior**:\r\n\r\nNo leakage on development environment info like a source code path\r\n\r\n**Actual Behavior**:\r\n\r\nIt leaks.\r\n","Url":"https://github.com/dotnet/sdk/issues/10607","RelatedDescription":"Open issue \"Privacy Risk: Development Environment Leaks after `dotnet publish`\" (#10607)"},{"Id":"560623771","IsPullRequest":false,"CreatedAt":"2020-02-05T20:55:57","Actor":"jeffschwMSFT","Number":"10606","RawContent":null,"Title":"MSBuild condition for runtime identifier \"family\"","State":"open","Body":"moved from https://github.com/dotnet/runtime/issues/2037\r\n\r\nfrom @AnthonyMastrean\r\n\r\nSo, I'm experimenting with some of the new compile/deploy options. Maybe I want to do something different depending on the runtime identifier that I'm passed. But, I might not really know if I'm going to get win, win-x64, or win7-x64, for example.\r\n\r\n```\r\n<PropertyGroup Condition=\"'$(RuntimeIdentifier)'=='win-x64'\">\r\n```\r\n\r\nIs there anyway to detect the \"family\" of runtime identifier or to have access to the entire graph in MSBuild?\r\n\r\nAre you going to tell me to use a string property function? Would that be reliable? Is this a bad idea?\r\n\r\n```\r\n<PropertyGroup Condition=\"$(RuntimeIdentifier.StartsWith('win')\">\r\n```","Url":"https://github.com/dotnet/sdk/issues/10606","RelatedDescription":"Open issue \"MSBuild condition for runtime identifier \"family\"\" (#10606)"},{"Id":"560132279","IsPullRequest":false,"CreatedAt":"2020-02-05T04:26:28","Actor":"danmosemsft","Number":"10604","RawContent":null,"Title":"dotnet new dumps stack if it can't write to the directory","State":"open","Body":"I accidentally ran dotnet new inside a folder I did not have permission to write into:\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview>dotnet new console\r\nTemplate \"Console Application\" could not be created.\r\nError while processing file /content/ConsoleApplication-CSharp/Company.ConsoleApplication1.csproj\r\nSystem.UnauthorizedAccessException: Access to the path 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Preview.csproj' is denied.\r\n   at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)\r\n   at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n   at System.IO.File.Create(String path)\r\n   at Microsoft.TemplateEngine.Utils.PhysicalFileSystem.CreateFile(String path)\r\n   at Microsoft.TemplateEngine.Core.Util.Orchestrator.ProcessFile(IFile sourceFile, String sourceRel, String targetDir, IGlobalRunSpec spec, IProcessor fallback, IEnumerable`1 fileGlobProcessors, IReadOnlyList`1 locOperations)\r\n```\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20061.5\r\n Commit:    d83e406520\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19546\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha.1.20061.5\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.20060.7\r\n  Commit:  ff03a08acc\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009597 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview9-014004 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014459 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha.1.20061.5 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview9.19424.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-alpha.1.20056.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.DesktopUI.App 3.0.0-alpha-27017-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.DesktopUI.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-alpha.1.20060.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview9-19423-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-alpha.1.20061.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\nMy expectation is that I get the message but not the ugly callstack.","Url":"https://github.com/dotnet/sdk/issues/10604","RelatedDescription":"Open issue \"dotnet new dumps stack if it can't write to the directory\" (#10604)"},{"Id":"560070946","IsPullRequest":false,"CreatedAt":"2020-02-05T00:35:46","Actor":"AnthonyMastrean","Number":"10603","RawContent":null,"Title":"A compatible SDK version was not found","State":"open","Body":"For local development, we're stuck on the last .NET Core SDK 2.2 version that supports VS2017 (that's 2.2.110 as of writing this).\r\n\r\nI thought I'd use a global.json with the \"latestPatch\" strategy.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"allowPrerelease\": false,\r\n        \"rollForward\": \"latestPatch\",\r\n        \"version\": \"2.2.110\"\r\n    }\r\n}\r\n```\r\n\r\nBut, now my CI pipeline can't build the same app using the official Docker image.\r\n\r\n```\r\nA compatible SDK version for global.json version: [2.2.110] from [/build/global.json] was not found\r\nDid you mean to run dotnet SDK commands? Please install dotnet SDK from:\r\n  https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n```\r\n\r\nThe Docker image uses the 2.2.207 version.\r\n\r\n```\r\n$ docker run --rm mcr.microsoft.com/dotnet/core/sdk:2.2 dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.207   \r\n Commit:    f7b16a2cd5\r\n\r\nRuntime Environment:  \r\n OS Name:     debian  \r\n OS Version:  9       \r\n OS Platform: Linux   \r\n RID:         debian.9-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.207/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.8\r\n  Commit:  b9aa1abc51\r\n\r\n.NET Core SDKs installed:\r\n  2.2.207 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.8 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.8 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nSo, I switched the global.json to use \"latestFeature\". But, that still doesn't work. I don't know what I'm doing wrong and I, apparently, am not grokking the rules in this article.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/core/tools/global-json?tabs=netcore2x#matching-rules","Url":"https://github.com/dotnet/sdk/issues/10603","RelatedDescription":"Open issue \"A compatible SDK version was not found\" (#10603)"},{"Id":"560623494","IsPullRequest":false,"CreatedAt":"2020-01-31T11:30:36","Actor":"eriawan","Number":"10605","RawContent":null,"Title":"How to get referenced FrameworkReference of a .NET Core classlib (dll) programmatically?","State":"open","Body":"Hi folks,\r\n\r\nI apologize if this question has been asked before.\r\n\r\n## Background\r\n\r\nSince .NET Core 3.0, we could have multiple FrameworkReference in the project file (vbproj, csproj, fsproj). For example:\r\n\r\nhttps://github.com/eriawan/netcore-fsharp-sample/blob/2535996eb50fa9208cc6ceb1888cfeb0b47ac8e7/src/netcore3.1/FSWindowsDesktop/FSWindowsDesktop.fsproj#L1-L11\r\n\r\nThis will render the project in VS 2019 16.3.x/16.4.x as this:\r\n\r\n![image](https://user-images.githubusercontent.com/8773147/73535971-6d035580-4457-11ea-8e04-cb1ebdeab750.png)\r\n\r\n## Question\r\n\r\nOk, is there a way to deduce or get the list of referenced FrameworkReferences of a class library programmatically?\r\nBecause I need this to analyze and calculate the references in terms of FrameworkReference, instead of referenced assembly. \r\n","Url":"https://github.com/dotnet/sdk/issues/10605","RelatedDescription":"Open issue \"How to get referenced FrameworkReference of a .NET Core classlib (dll) programmatically?\" (#10605)"},{"Id":"563415603","IsPullRequest":false,"CreatedAt":"2020-01-28T12:17:04","Actor":"talboren","Number":"10627","RawContent":null,"Title":"Directory separator for TargetPath is not normalized","State":"open","Body":"<!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting non-security bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Describe the bug\r\nMy application is using NServiceBus as the implementation to the Service Bus pattern.\r\n\r\nNServiceBus generates several SQL scripts for its persistence mechanism and then executes those script when starting up (to create the necessary tables), these scripts are generated by an MSBuild task at compile time.\r\nThe scripts are generated in to a folder called NServiceBus.Persistence.Sql which then has a few more folders for the relevant database types (e.g: MsSqlServer, MySql etc..) as you can see here:\r\n\r\n![image](https://user-images.githubusercontent.com/18400664/73262135-3074f700-41d6-11ea-87f5-124325f35141.png)\r\n\r\nNServiceBus will then search for the specific files under NServiceBus.Persistence.Sql directory at the parent app directory - at this point everything seems to be working fine.\r\n\r\nThe problem begins when moving to a \"Single File Executable\" with the \"PublishSingleFile\" parameter set.\r\nAfter reading https://github.com/dotnet/designs/blob/master/accepted/single-file/extract.md it seems like I understood the way the extraction mechanism works but it seems like there's a buggy situation where folders that contains folders inside get extracted faulty (when looking at \"/var/tmp/.net/AppName/bov1qdmu.xn3/\":\r\n\r\n![image](https://user-images.githubusercontent.com/18400664/73262814-c65d5180-41d7-11ea-888c-c5f05260bdad.png)\r\n\r\nand the following error message appears:\r\n\r\n> appname_1               | 2020-01-27 16:49:54.790 INFO  Directory '/var/tmp/.net/AppName/bov1qdmu.xn3/NServiceBus.PersistenceSql/MySql/Sagas' not found so no saga creation scripts will be executed.\r\n\r\n\r\n### To Reproduce\r\n<!--\r\nWhat steps can we follow to reproduce the issue?\r\n\r\nWe ❤ code! Include a complete code listing or point us to a minimalistic GitHub repo.\r\n\r\n``` C#\r\nConsole.WriteLine(\"Hello, World!\");\r\n```\r\n\r\nGot Exceptions? Include both the message and the stack trace\r\n-->\r\nHaving a project with NServiceBus using persistence mechanism, reproduce this issue easily by just switching from:\r\n`RUN dotnet publish AppName.csproj -c Release -r linux-musl-x64 -o /app`\r\nTo\r\n`RUN dotnet publish AppName.csproj -c Release -r linux-musl-x64 /p:PublishSingleFile=true -o /app`\r\n\r\n### Further technical details\r\n- ASP.NET Core version: **mcr.microsoft.com/dotnet/core/runtime-deps:3.1-alpine** (3.1.101), \r\n- Include the output of `dotnet --info`: **No runtime is installed, app is self-contained**\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and it's version: **Microsoft Visual Studio Professional 2019 Version 16.4.3**\r\n","Url":"https://github.com/dotnet/sdk/issues/10627","RelatedDescription":"Open issue \"Directory separator for TargetPath is not normalized\" (#10627)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1227375174762106882","CreatedAt":"2020-02-11T23:33:39+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"1227347585666551808","CreatedAt":"2020-02-11T21:44:02+00:00","UserScreenname":"dotnet","Text":"#dotNET Design Review. Learn 1st hand what's coming: https://t.co/d87N1JtnAP\n✅ Add an API to perform streaming tran… https://t.co/o4SmbvxC0n","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1227266049856430080","CreatedAt":"2020-02-11T16:20:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, Azure Event Hubs team members @KaracaSerkant and @ShubhaVijaya join to talk about how… https://t.co/m1xyQjU2fM","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"1226982178904514560","CreatedAt":"2020-02-10T21:32:02+00:00","UserScreenname":"dotnet","Text":"Next up in the series... in this episode of #OnDotNET, Azure Event Hubs team members @KaracaSerkant and… https://t.co/jl1qqRKv3p","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":16,"FavoriteCount":2,"RawContent":null},{"Id":"1226903659155468290","CreatedAt":"2020-02-10T16:20:01+00:00","UserScreenname":"dotnet","Text":"We're always looking for ways to speed up navigation and track values during debugging... Today's @DailyDotNETTips… https://t.co/hB7JVKLwUm","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":35,"FavoriteCount":17,"RawContent":null},{"Id":"1225815992460288001","CreatedAt":"2020-02-07T16:18:01+00:00","UserScreenname":"dotnet","Text":".@SHanselman has a super-interesting post outlining how @MStrehovsky found a way to run some #CSharp code in two se… https://t.co/PNeEbATmX2","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":123,"FavoriteCount":51,"RawContent":null},{"Id":"1225538165072629762","CreatedAt":"2020-02-06T21:54:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, we learn about defining cloud resources in #dotNET code with #Pulumi. Watch here:… https://t.co/Xbh53y0fDC","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"1225464070964297728","CreatedAt":"2020-02-06T16:59:37+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":16,"FavoriteCount":7,"RawContent":null},{"Id":"1225450333180190721","CreatedAt":"2020-02-06T16:05:01+00:00","UserScreenname":"dotnet","Text":"#dotNETConf session on demand - @StevenSanderson shows us the future of #Blazor w/ WebAssembly, PWAs, Hybrid, or Na… https://t.co/dN1XppUJMj","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":56,"FavoriteCount":23,"RawContent":null},{"Id":"1225179297582845957","CreatedAt":"2020-02-05T22:08:01+00:00","UserScreenname":"dotnet","Text":"Egil Hansen gives us the best practices for unit testing #Blazor components in another great #dotNETConf session on… https://t.co/iuWqmS4A21","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":33,"FavoriteCount":17,"RawContent":null},{"Id":"1225091973549318144","CreatedAt":"2020-02-05T16:21:02+00:00","UserScreenname":"dotnet","Text":"How do you build client-side applications? \n\n#dotNETRocks! talks to @BrianLagunas about his work in client-side dev… https://t.co/OZlk1l21zk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":52,"FavoriteCount":14,"RawContent":null},{"Id":"1224811623321362434","CreatedAt":"2020-02-04T21:47:01+00:00","UserScreenname":"dotnet","Text":"Learn to create beautiful web UI w/ #Blazor &amp; CSS as @EngstromJimmy takes us deep into adaptive rendering, responsi… https://t.co/s6KJBFvAd9","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":69,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2020-02-12T05:30:37.3281272Z","RunDurationInMilliseconds":14590}