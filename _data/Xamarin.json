{"Data":{"Blog":{"FeedItems":[{"Title":"Colonial Life Drives Field Sales Productivity with .NET, Mobile, and DevOps","PublishedOn":"2018-01-05T19:59:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET community is millions of developers strong, with people around the world turning ideas into apps across web, mobile, desktop, and the newest connected device platforms. Colonial Life’s...","Href":"https://blog.xamarin.com/colonial-life-drives-field-sales-productivity-net-mobile-devops/","RawContent":null},{"Title":"CoreML Programming with Xamarin.Mac and F#","PublishedOn":"2018-01-04T18:08:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Xamarin technologies are most commonly used to develop mobile applications, Xamarin.Mac makes it easy to use your preferred .NET language to develop desktop Mac apps. There are many C#...","Href":"https://blog.xamarin.com/coreml-programming-xamarin-mac-f/","RawContent":null},{"Title":"Xamarin Developer Events This January","PublishedOn":"2018-01-03T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s only the beginning of the year, but there are already many opportunities to get out and start building on your mobile app development education! Network with local user groups to learn...","Href":"https://blog.xamarin.com/xamarin-developer-events-january/","RawContent":null},{"Title":"The Top 12 Xamarin Blog Posts of 2017","PublishedOn":"2018-01-02T20:36:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2017 marked our first full year as part of the Microsoft family. Along the way, we saw new operating systems, new devices, and updates to the tools we use every day, and the many authors behind the...","Href":"https://blog.xamarin.com/top-12-xamarin-blog-posts-2017/","RawContent":null},{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null},{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null},{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7072885243","Type":"PullRequestEvent","CreatedAt":"2018-01-09T03:22:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1167","RelatedDescription":"Merged pull request \"Bump to Java.Interop/d15-6/eb6e3c4f\" (#1167) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1149"},{"Id":"7072853391","Type":"PullRequestEvent","CreatedAt":"2018-01-09T03:09:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1166","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/d8862d89\" (#1166) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1149\r\n\r\nAdds support for `$(JI_MAX_JDK)` (not yet used).\r\n\r\nFix many, *many*, Gendarme warnings in `Java.Interop.dll`."},{"Id":"7072652116","Type":"PullRequestEvent","CreatedAt":"2018-01-09T01:53:38","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1167","RelatedDescription":"Opened pull request \"Bump to Java.Interop/d15-6/eb6e3c4f\" (#1167) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1149"},{"Id":"7072645954","Type":"PullRequestEvent","CreatedAt":"2018-01-09T01:51:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1166","RelatedDescription":"Opened pull request \"Bump to Java.Interop/master/d8862d89\" (#1166) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1149\r\n\r\nAdds support for `$(JI_MAX_JDK)` (not yet used).\r\n\r\nFix many, *many*, Gendarme warnings in `Java.Interop.dll`."},{"Id":"7072627561","Type":"IssuesEvent","CreatedAt":"2018-01-09T01:44:21","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1149","RelatedDescription":"Closed issue \"Can not Export CREATOR Field for IParcelable instance\" (#1149) at xamarin/xamarin-android","RelatedBody":"#### Sample link\r\n\r\nhttps://github.com/xamarin/monodroid-samples/blob/f944f42001fa134915069fa7bbb9cb493bfd446d/ExportAttribute/ExportAttributeTest/MainActivity.cs#L55\r\nhttps://github.com/xamarin/monodroid-samples/blob/f944f42001fa134915069fa7bbb9cb493bfd446d/android5.0/Topeka/Topeka/Models/Player.cs#L18\r\n\r\nVerified on Monodroid v8.2.0.1\r\n\r\n#### Issue description\r\n\r\nCan not ExportField  CREATOR for IParcelable instance\r\n\r\n#### Steps to reproduce the issue\r\n\r\n1.  Open Topeka sample.\r\n2. Input login info.\r\n3. Tap Login button.\r\n\r\n#### What's the expected result?\r\n\r\n- User successfully login.\r\n\r\n#### What's the actual result?\r\n\r\n- Application crashes.\r\n\r\n#### Steps to reproduce the issue\r\n\r\n1.  Open ExportAttributeTest sample.\r\n2. Tap button.\r\n\r\n#### What's the expected result?\r\n\r\n- Parcelable object handled properly.\r\n\r\n#### What's the actual result?\r\n\r\n- Application crashes.\r\n\r\n#### Additional details / screenshot (Optional)\r\n![image](https://user-images.githubusercontent.com/5435980/34485695-9f9fda4c-efd4-11e7-9e8b-5f00514d1027.png)\r\n\r\nInitializeCreator method is not reachable via debugger.\r\n[MSBuildOutput.log](https://github.com/xamarin/xamarin-android/files/1597918/MSBuildOutput.log)\r\n[logCat.txt](https://github.com/xamarin/xamarin-android/files/1597919/logCat.txt)\r\n\r\n"},{"Id":"7070183482","Type":"IssuesEvent","CreatedAt":"2018-01-08T15:33:39","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1165","RelatedDescription":"Opened issue \"Add $(AndroidSdkPlatformToolsVersion) MSBuild property, update $(AndroidSdkBuildToolsVersion)\" (#1165) at xamarin/xamarin-android","RelatedBody":"Add `$(AndroidSdkPlatformToolsVersion)` MSBuild property, update `$(AndroidSdkBuildToolsVersion)` to be consistent."},{"Id":"7068629363","Type":"IssuesEvent","CreatedAt":"2018-01-08T09:23:06","Actor":"B1337","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1164","RelatedDescription":"Opened issue \"Referenced dll's get deleted\" (#1164) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Create 2 projects, a droid project and a pcl project.\r\n2. Add references to the pcl project that are in the output folder.\r\n3.  Set both projects to output in the same output folder.\r\n4.  Build the pcl project and then build the droid project.\r\n5. Referenced dlls in the pcl project are deleted after building droid the second time.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nDlls should not be deleted even if they are in the same output folder.\r\n### Actual Behavior\r\nSome dlls are deleted when building droid for the second time.\r\n### Version Information\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nSeem to be Xamarin.Droid 8.1.0.25\r\nIn earlier versions this wasnt a problem\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7068328000","Type":"IssuesEvent","CreatedAt":"2018-01-08T07:45:19","Actor":"jamesmontemagno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1163","RelatedDescription":"Opened issue \"Setting Target Version to \"Use Compile\" Does not set targetSdkVersion in Manifest\" (#1163) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In VS or VS for Mac set Target SDK Version to \"Use Compile\" this is the default\r\n2. Look at current manifest (does not contain: targetSdkVersion)\r\n3. Compile application\r\n4. Look at output of AndroidManifest.xml that is generated in obj/android, still does not contain targetSdkVersion\r\n\r\n### Expected Behavior\r\n\r\nThe Value should be set correct for the targetSdkVersion in the AndroidManifest.xml. So if I compile against 25, it should show android:targetSdkVersion=\"25\".\r\n\r\nFailure to do this has some not so great side effects. Material design doesn't display correct, permissions don't work correctly, and a lot more.\r\n\r\n### Actual Behavior\r\n\r\nNothing is set in the AndroidManifest.xml\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7072298617","Type":"PullRequestEvent","CreatedAt":"2018-01-08T23:43:18","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1535","RelatedDescription":"Closed pull request \"Rename ConvertExtensions to ColorExtensions and change access to public\" (#1535) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nColor extensions to convert a Forms Color to a UWP color / brush are not accessible since the class is marked as internal instead of public. I also renamed the class to ColorExtensions to be consistent with all other platforms.\r\n\r\n### Bugs Fixed ###\r\n- fixes #1522\r\n\r\n### API Changes ###\r\n\r\nChanged:\r\n - internal static class ConvertExtensions => public static class ColorExtensions\r\n\r\n### Behavioral Changes ###\r\n/\r\n\r\n### PR Checklist ###\r\nI don't think this requires tests?\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7072295690","Type":"PullRequestEvent","CreatedAt":"2018-01-08T23:42:17","Actor":"mubold","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1535","RelatedDescription":"Opened pull request \"Rename ConvertExtensions to ColorExtensions and change access to public\" (#1535) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nColor extensions to convert a Forms Color to a UWP color / brush are not accessible since the class is marked as internal instead of public. I also renamed the class to ColorExtensions to be consistent with all other platforms.\r\n\r\n### Bugs Fixed ###\r\n- fixes #1522\r\n\r\n### API Changes ###\r\n\r\nChanged:\r\n - internal static class ConvertExtensions => public static class ColorExtensions\r\n\r\n### Behavioral Changes ###\r\n/\r\n\r\n### PR Checklist ###\r\nI don't think this requires tests?\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7071749605","Type":"PullRequestEvent","CreatedAt":"2018-01-08T21:17:02","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1533","RelatedDescription":"Opened pull request \"[XamlC] resolve generic types with generic and non-generic parameters\" (#1533) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[XamlC] resolve generic types with generic and non-generic parameters\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1497\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"7071298784","Type":"PullRequestEvent","CreatedAt":"2018-01-08T19:30:45","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1532","RelatedDescription":"Opened pull request \"[iOS] ViewDidLayoutSubviews after removing page fixes #1426\" (#1532) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe issue is related by ViewDidLayoutSubviews run before the CurrentPage is set. This method is normally called by the OS, but we update the stack asynchrony.  That means when for example we are checking if the CurrentPage has a NavigationPage is still checking the previous page, when CurrentPage is updated this code was not running. We not force to run when a page is removed. \r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1426 \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7071296131","Type":"PullRequestEvent","CreatedAt":"2018-01-08T19:30:11","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1531","RelatedDescription":"Closed pull request \"[iOS] ViewDidLayoutSubviews after removing page fixes #1426\" (#1531) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe issue is related by ViewDidLayoutSubviews run before the CurrentPage is set. This method is normally called by the OS, but we update the stack asynchrony.  That means when for example we are checking if the CurrentPage has a NavigationPage is still checking the previous page, when CurrentPage is updated this code was not running. We not force to run when a page is removed. \r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1426 \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n  "},{"Id":"7071248993","Type":"PullRequestEvent","CreatedAt":"2018-01-08T19:19:20","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1506","RelatedDescription":"Merged pull request \"[Tizen] Support Page embedding to Tizen backend\" (#1506) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nJust like #1124, this PR allows a developer to navigate to a page expressed as a Xamarin.Forms XAML ContentPage in Tizen Native application.\r\n\r\nOf course this PR also includes Tizen native test bed project (Embedding.Tizen) for this feature.\r\n\r\n- On Tizen Mobile Emulator\r\n<img src=\"https://user-images.githubusercontent.com/1029134/34596234-76f5abd6-f221-11e7-9f8c-7b8b6da7b62e.gif\" alt=\"On Tizen Mobile Emulator\" width=\"240\" >\r\n\r\n- On Tizen TV Emulator\r\n<img src=\"https://user-images.githubusercontent.com/1029134/34596236-7b211aa6-f221-11e7-85a4-978071f3ec3b.gif\" alt=\"On Tizen TV Emulator\" width=\"800\" >\r\n\r\n### Bugs Fixed ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\nXamarin.Forms.Platform.Tizen\r\n - `public static CreateEvasObject CreateEvasObject(this ContentPage page, EvasObject parent, bool hasAlpha)`\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7071220003","Type":"PullRequestEvent","CreatedAt":"2018-01-08T19:12:29","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1531","RelatedDescription":"Opened pull request \"[iOS] ViewDidLayoutSubviews after removing page fixes #1426\" (#1531) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe issue is related by ViewDidLayoutSubviews run before the CurrentPage is set. This method is normally called by the OS, but we update the stack asynchrony.  That means when for example we are checking if the CurrentPage has a NavigationPage is still check the previous page, when CurrentPage is updated this code was not running. We not force to run when a page is removed. \r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1426 \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"7070628318","Type":"IssuesEvent","CreatedAt":"2018-01-08T16:59:04","Actor":"MarcosCobena","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1530","RelatedDescription":"Opened issue \"Custom BoxViewRenderer in UWP doesn't fire from external lib.\" (#1530) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nHaving a Custom Renderer for a custom BoxView does nothing if such is placed in a library. However, just moving it to the Forms UWP app works fine. Passing the container assembly at Forms.Init(e, rendererAssemblies) neither works.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download GradientBoxView sol. from https://github.com/DevsDNA/GradientBoxView/tree/features/UWP\r\n2. Run UWP Example\r\n\r\n### Expected Behavior\r\n\r\nTo show a gradient at the center of the screen.\r\n\r\n### Actual Behavior\r\n\r\nYou see the screen empty. However, adding a link to UWP GradientBoxViewRenderer.cs at UWP Example app it just works.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.121934\r\n- Last known good version: N/A\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - UWP:  10.0.16299.0 (min.: 10.0.10586.0)\r\n- Nuget Packages: N/A\r\n- Affected Devices: N/A"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7072707856","Type":"PullRequestEvent","CreatedAt":"2018-01-09T02:15:09","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3181","RelatedDescription":"Opened pull request \"[macos][photos] Add some missing error codes and constants for XM\" (#3181) at xamarin/xamarin-macios","RelatedBody":"xtro data updated"},{"Id":"7071674583","Type":"PullRequestEvent","CreatedAt":"2018-01-08T20:59:27","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3180","RelatedDescription":"Merged pull request \"[msbuild] Tweak the codesign logic for iOS Simulator builds\" (#3180) at xamarin/xamarin-macios","RelatedBody":"Don't *always* codesign, especially for Xcode 8 which seems to break.\r\n\r\niOS Simulator builds should only be codesigned if they require\r\nEntitlements (signified by RequireProvisionProfile)."},{"Id":"7071668341","Type":"PullRequestEvent","CreatedAt":"2018-01-08T20:57:59","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3179","RelatedDescription":"Merged pull request \"[msbuild] Repack all iOS Task assemblies into Xamarin.iOS.Tasks.dll\" (#3179) at xamarin/xamarin-macios","RelatedBody":"This is the back-port of https://github.com/xamarin/xamarin-macios/pull/3168 to the 15.6 branch"},{"Id":"7071360101","Type":"PullRequestEvent","CreatedAt":"2018-01-08T19:45:02","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3180","RelatedDescription":"Opened pull request \"[msbuild] Tweak the codesign logic for iOS Simulator builds\" (#3180) at xamarin/xamarin-macios","RelatedBody":"Don't *always* codesign, especially for Xcode 8 which seems to break.\r\n\r\niOS Simulator builds should only be codesigned if they require\r\nEntitlements (signified by RequireProvisionProfile)."},{"Id":"7071304223","Type":"PullRequestEvent","CreatedAt":"2018-01-08T19:32:01","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3114","RelatedDescription":"Merged pull request \"[msbuild] Tweak the codesign logic for iOS Simulator builds\" (#3114) at xamarin/xamarin-macios","RelatedBody":"Don't *always* codesign, especially for Xcode 8 which seems to break.\r\n\r\niOS Simulator builds should only be codesigned if they require\r\nEntitlements (signified by RequireProvisionProfile)."},{"Id":"7071294950","Type":"PullRequestEvent","CreatedAt":"2018-01-08T19:29:54","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3168","RelatedDescription":"Merged pull request \"[msbuild] Repack all iOS Task assemblies into Xamarin.iOS.Tasks.dll\" (#3168) at xamarin/xamarin-macios","RelatedBody":"This is the same patch as was committed/accepted in PR #3007 (and later reverted) but should\r\nhopefully work better now that the Move task has been fixed by PR #3104.\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"950410272363163649","CreatedAt":"2018-01-08T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/k8IzINY3SW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":86,"FavoriteCount":38,"RawContent":null},{"Id":"950049897843105792","CreatedAt":"2018-01-07T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDfY3Ep https://t.co/6yNTVxdVbh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":16,"RawContent":null},{"Id":"949688768231104512","CreatedAt":"2018-01-06T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/EvDnR69pjy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":104,"FavoriteCount":47,"RawContent":null},{"Id":"949372052758302723","CreatedAt":"2018-01-05T20:08:30+00:00","UserScreenname":"xamarinhq","Text":"Learn how Colonial Life drives field sales productivity with #dotNET and #DevOps using #XamarinForms:… https://t.co/Y1wBTN0TJA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"949323858972233734","CreatedAt":"2018-01-05T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"948981959132368901","CreatedAt":"2018-01-04T18:18:24+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/VAkrZo84pP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":37,"RawContent":null},{"Id":"948961974766972934","CreatedAt":"2018-01-04T16:59:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":16,"RawContent":null},{"Id":"948635192490590211","CreatedAt":"2018-01-03T19:20:29+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/sV84us2Np4 https://t.co/tduUDgg9oS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":6,"RawContent":null},{"Id":"948604119945760768","CreatedAt":"2018-01-03T17:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/tuqMBJJWpq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"948294578192437248","CreatedAt":"2018-01-02T20:47:00+00:00","UserScreenname":"xamarinhq","Text":"Did your favorite make the cut? Get the full list of the top #Xamarin blog posts of 2017, and see the top post of t… https://t.co/dVcXEnCo7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":26,"RawContent":null},{"Id":"947216981937319938","CreatedAt":"2017-12-30T21:25:01+00:00","UserScreenname":"xamarinhq","Text":"The countdown is winding down! Post No. 2 in the #12DaysofXamarin walks you through implementing push notifications… https://t.co/uiyyYhL6zW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"946830183532724235","CreatedAt":"2017-12-29T19:48:01+00:00","UserScreenname":"xamarinhq","Text":"Just getting started with #XamarinForms? Let PM @davidortinau show you how to beat the learning curve in post No. 3… https://t.co/0y63QrYo5f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":20,"RawContent":null},{"Id":"946788653736583169","CreatedAt":"2017-12-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":15,"RawContent":null},{"Id":"946472572895588353","CreatedAt":"2017-12-28T20:07:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with C# 7 with @jamesmontemagno in the 4th post in our #12DaysofXamarin countdown: https://t.co/nWuAmDsr0R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":31,"RawContent":null},{"Id":"946430293401067521","CreatedAt":"2017-12-28T17:19:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/VlbopDlbd6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":21,"RawContent":null},{"Id":"946110438961541121","CreatedAt":"2017-12-27T20:08:01+00:00","UserScreenname":"xamarinhq","Text":"Our eBook on building \"Enterprise Application Patterns using #XamarinForms\" takes the 5th spot in our… https://t.co/HPidr9WU7g","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":56,"RawContent":null},{"Id":"946049788914683905","CreatedAt":"2017-12-27T16:07:01+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/YpY9vtHgsp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":17,"RawContent":null},{"Id":"945745033117995009","CreatedAt":"2017-12-26T19:56:01+00:00","UserScreenname":"xamarinhq","Text":"\"5 Ways to Boost #XamarinForms App Startup Time\" from David Ortinau marks the halfway point at No. 6 the… https://t.co/ch9JL4J1fe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":81,"FavoriteCount":39,"RawContent":null},{"Id":"944704928630693888","CreatedAt":"2017-12-23T23:03:01+00:00","UserScreenname":"xamarinhq","Text":"Today in the #12DaysofXamarin, learn how to make your UIs adaptive with #XamarinForms with the 7th most popular… https://t.co/0g7tgzIrEZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":56,"RawContent":null}]}},"RunOn":"2018-01-09T05:30:40.1700701Z","RunDurationInMilliseconds":3827}