{"Data":{"GitHub":{"Issues":[{"Id":"514227734","IsPullRequest":true,"CreatedAt":"2019-10-30T05:23:44","Actor":"codemzs","Number":"4412","RawContent":null,"Title":"Move Microsoft.ML.Vision to stable package.","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4412","RelatedDescription":"Closed or merged PR \"Move Microsoft.ML.Vision to stable package.\" (#4412)"},{"Id":"514128690","IsPullRequest":true,"CreatedAt":"2019-10-30T05:22:10","Actor":"bpstark","Number":"4410","RawContent":null,"Title":"Modify ImageClassification API to use a workspace for saving data","State":"closed","Body":"Originally this API saved data to the same directory as the DLL, this\r\ncould cause issues if the DLL was in a read only path. Instead moving to\r\ndefault to a temporary workspace path which can be defined in the\r\noptions by the user. This will allow all the data to be saved in one\r\npath.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4410","RelatedDescription":"Closed or merged PR \"Modify ImageClassification API to use a workspace for saving data\" (#4410)"},{"Id":"514294370","IsPullRequest":true,"CreatedAt":"2019-10-29T23:31:10","Actor":"michaelgsharp","Number":"4413","RawContent":null,"Title":"Initial featurizers project","State":"open","Body":"This is the initial featurizers PR to split apart PR #4157 and get all the common code into master.\r\nOnce this code goes in, I will create separate PR's for each of the 5 featurizers.\r\n\r\nThis is the common code for the featurizers. Its mostly changes to project files and solution files. Common.cs is for all the shared code for the featurizers. The change in Utils.cs is to allow `Marshal.Invoke` with multiple type parameters. The RowToRowMapperTransform.cs change has it create a new mapper when possible. This helps with thread safety/local caching of the mappers when run in a multi threaded approach.","Url":"https://github.com/dotnet/machinelearning/pull/4413","RelatedDescription":"Open PR \"Initial featurizers project\" (#4413)"},{"Id":"514001912","IsPullRequest":true,"CreatedAt":"2019-10-29T20:42:29","Actor":"codemzs","Number":"4408","RawContent":null,"Title":"Rename Microsoft.ML.Dnn to Microsoft.ML.Vision and reverse dependency between Microsoft.ML.TensorFlow and Microsoft.ML.Dnn","State":"closed","Body":"- Refactors Microsoft.ML.TensorFlow and Microsoft.ML.Dnn such that Microsoft.ML.Dnn depends on Microsoft.ML.TensorFlow and not vice-versa and fixes #4305.\r\n\r\n- Renames Microsoft.ML.Dnn nuget and namespace to Microsoft.ML.Vision.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4408","RelatedDescription":"Closed or merged PR \"Rename Microsoft.ML.Dnn to Microsoft.ML.Vision and reverse dependency between Microsoft.ML.TensorFlow and Microsoft.ML.Dnn\" (#4408)"},{"Id":"514139113","IsPullRequest":false,"CreatedAt":"2019-10-29T18:40:24","Actor":"ThomasIE","Number":"4411","RawContent":null,"Title":"Getting RegressionTree from ITransformer model","State":"open","Body":"### System information\r\n\r\nWindows 10 & Visual Studio 2019\r\n\r\n### Issue\r\n\r\nHi, I want to know how to get RegressionTree object from a FastTree regression model because the RegressionTree is private and not available to access. (For your information, I have attached my code below. I got it from **https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/predict-prices)**\r\n\r\nAlso, due to the combination of left and right nodes, is it allowed to use binary splits, not multiple splits per node?\r\n\r\nFinally, how can I use the function in \"SaveAsCode\" in FastTree.cs? Is there any example to take a look at?\r\n\r\nThanks in advance.\r\n\r\nSincerely,\r\n\r\n### Source code / logs\r\n        static readonly string _trainDataPath = Path.Combine(Environment.CurrentDirectory, \"Data\", \"taxi-fare-train.csv\");\r\n        static readonly string _testDataPath = Path.Combine(Environment.CurrentDirectory, \"Data\", \"taxi-fare-test.csv\");\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            MLContext mlContext = new MLContext(seed: 0);\r\n            ITransformer model = Train(mlContext, _trainDataPath);\r\n            \r\n            \r\n        }\r\n\r\n        public static ITransformer Train(MLContext mlContext, string dataPath)\r\n        {\r\n            IDataView dataView = mlContext.Data.LoadFromTextFile<TaxiTrip>(dataPath, hasHeader: true, separatorChar: ',');\r\n            var pipeline = mlContext.Transforms.CopyColumns(outputColumnName: \"Label\", inputColumnName: \"FareAmount\")\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"VendorIdEncoded\", inputColumnName: \"VendorId\"))\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"RateCodeEncoded\", inputColumnName: \"RateCode\"))\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: \"PaymentTypeEncoded\", inputColumnName: \"PaymentType\"))\r\n                .Append(mlContext.Transforms.Concatenate(\"Features\", \"VendorIdEncoded\", \"RateCodeEncoded\", \"PassengerCount\", \"TripTime\", \"TripDistance\", \"PaymentTypeEncoded\"))\r\n                .Append(mlContext.Regression.Trainers.FastTree());\r\n\r\n            var model = pipeline.Fit(dataView);\r\n\r\n\r\n            return model;\r\n        }","Url":"https://github.com/dotnet/machinelearning/issues/4411","RelatedDescription":"Open issue \"Getting RegressionTree from ITransformer model\" (#4411)"},{"Id":"513583649","IsPullRequest":true,"CreatedAt":"2019-10-29T18:24:51","Actor":"tannergooding","Number":"4403","RawContent":null,"Title":"Updating the DatabaseLoader to not force vector for single element columns","State":"closed","Body":"This resolves https://github.com/dotnet/machinelearning-samples/issues/722","Url":"https://github.com/dotnet/machinelearning/pull/4403","RelatedDescription":"Closed or merged PR \"Updating the DatabaseLoader to not force vector for single element columns\" (#4403)"},{"Id":"514093594","IsPullRequest":false,"CreatedAt":"2019-10-29T17:27:52","Actor":"eerhardt","Number":"4409","RawContent":null,"Title":"TensorFlowUtils should add the caught exception as an inner exception","State":"open","Body":"https://github.com/dotnet/machinelearning/blob/4c3be03282db29b65eb8f33888d8cb8c1a8dadac/src/Microsoft.ML.Dnn/DnnUtils.cs#L84-L87\r\n\r\nThis code is catching an exception and throwing a new one, but not using the caught exception as an inner exception. This loses the information of what the original exception was.\r\n\r\nSee https://github.com/dotnet/machinelearning/pull/4408#discussion_r340181047","Url":"https://github.com/dotnet/machinelearning/issues/4409","RelatedDescription":"Open issue \"TensorFlowUtils should add the caught exception as an inner exception\" (#4409)"},{"Id":"513598956","IsPullRequest":true,"CreatedAt":"2019-10-29T15:28:27","Actor":"eerhardt","Number":"4404","RawContent":null,"Title":"Dispose the DataViewRowCursor in CountRows.","State":"closed","Body":"Not disposing this cursor is causing the training file to remain locked even after training is completed.\r\n\r\nFix #4361\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4404","RelatedDescription":"Closed or merged PR \"Dispose the DataViewRowCursor in CountRows.\" (#4404)"},{"Id":"512919669","IsPullRequest":true,"CreatedAt":"2019-10-29T11:18:17","Actor":"codemzs","Number":"4395","RawContent":null,"Title":"Integrate Image Classification API in AutoML.","State":"closed","Body":"- Integrates Image Classification API in AutoML\r\n- Code generation for Image Classification API.\r\n- Unit-tests\r\n- Increases build timeout to 75 minutes.\r\n- Changes Image Classification defaults.\r\n\r\naddressed comments from #4384 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4395","RelatedDescription":"Closed or merged PR \"Integrate Image Classification API in AutoML.\" (#4395)"},{"Id":"513415393","IsPullRequest":true,"CreatedAt":"2019-10-29T03:12:04","Actor":"maryamariyan","Number":"4401","RawContent":null,"Title":"Add missing linePragmas to ConsumeModel.tt","State":"closed","Body":"Fix for publishing symbols during official build.\r\n\r\nThe other 6 tt files in the `src/Microsoft.ML.CodeGenerator/Templates/Console/` folder already set linePragmas to false.\r\n\r\nFixes #4400\r\ncc: @eerhardt ","Url":"https://github.com/dotnet/machinelearning/pull/4401","RelatedDescription":"Closed or merged PR \"Add missing linePragmas to ConsumeModel.tt\" (#4401)"},{"Id":"513383048","IsPullRequest":false,"CreatedAt":"2019-10-29T03:12:04","Actor":"eerhardt","Number":"4400","RawContent":null,"Title":"Error while publishing symbols during official build","State":"closed","Body":"See the error here: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3186964\r\n\r\n```\r\nE:\\A\\_work\\718\\s\\packages\\microsoft.symboluploader.build.task\\1.0.0-beta-62824-02\\build\\PublishSymbols.targets(29,7): warning : Invalid file type: LICENSE [E:\\A\\_work\\718\\s\\build\\publish.proj]\r\n  Processing input package E:\\A\\_work\\718\\s\\bin\\packages\\Microsoft.ML.CodeGenerator.symbols.0.16.0-preview3-28228-1.nupkg\r\n  Converting portable PDB lib/netstandard2.0/Microsoft.ML.CodeGenerator.pdb to Windows\r\n##[error]packages\\microsoft.symboluploader.build.task\\1.0.0-beta-62824-02\\build\\PublishSymbols.targets(29,7): Error : PDB0021: Document name doesn't match any pattern in Source Link: 'C:\\CodeHub\\machinelearning\\src\\Microsoft.ML.CodeGenerator\\Templates\\Console\\ConsumeModel.tt'\r\nE:\\A\\_work\\718\\s\\packages\\microsoft.symboluploader.build.task\\1.0.0-beta-62824-02\\build\\PublishSymbols.targets(29,7): error : PDB0021: Document name doesn't match any pattern in Source Link: 'C:\\CodeHub\\machinelearning\\src\\Microsoft.ML.CodeGenerator\\Templates\\Console\\ConsumeModel.tt' [E:\\A\\_work\\718\\s\\build\\publish.proj]\r\n##[error]packages\\microsoft.symboluploader.build.task\\1.0.0-beta-62824-02\\build\\PublishSymbols.targets(29,7): Error : PDB0021: Document name doesn't match any pattern in Source Link: 'C:\\CodeHub\\machinelearning\\src\\Microsoft.ML.CodeGenerator\\Templates\\Console\\Annotation.ttinclude'\r\nE:\\A\\_work\\718\\s\\packages\\microsoft.symboluploader.build.task\\1.0.0-beta-62824-02\\build\\PublishSymbols.targets(29,7): error : PDB0021: Document name doesn't match any pattern in Source Link: 'C:\\CodeHub\\machinelearning\\src\\Microsoft.ML.CodeGenerator\\Templates\\Console\\Annotation.ttinclude' [E:\\A\\_work\\718\\s\\build\\publish.proj]\r\n```\r\n\r\nTo fix this, we should be putting `linePragmas=\"false\"` in the .tt files:\r\n\r\n```\r\n<#@ template language=\"C#\" linePragmas=\"false\" #>\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4400","RelatedDescription":"Closed issue \"Error while publishing symbols during official build\" (#4400)"},{"Id":"513623792","IsPullRequest":true,"CreatedAt":"2019-10-29T02:48:50","Actor":"antoniovs1029","Number":"4406","RawContent":null,"Title":"Fixes #4405 About publishing nugets to public feed","State":"closed","Body":"Fixes #4405 about publishing nugets to this public feed:\r\nhttps://dev.azure.com/dnceng/public/_packaging?_a=feed&feed=MachineLearning\r\n\r\nThis will be executed by the AzureDevOps build pipeline whenever a new commit is added to the master branch of this repo. Notice that sometimes there are some problems on the side of Azure DevOps, and it might fail when executing the build pipeline, even in steps that were not modified in this PR, and producing errors that prevent the pipeline to actually publish the nugets to the feed; this unplanned errors already existed before the changes introduced in this PR, and they are somewhat unpredictable. The solution to this is to rerun the build manually until the pipeline succeeds.\r\n\r\nWorked this out following @safern instructions.","Url":"https://github.com/dotnet/machinelearning/pull/4406","RelatedDescription":"Closed or merged PR \"Fixes #4405 About publishing nugets to public feed\" (#4406)"},{"Id":"513620169","IsPullRequest":false,"CreatedAt":"2019-10-29T02:48:49","Actor":"antoniovs1029","Number":"4405","RawContent":null,"Title":"NuGet packages not being published to public feed","State":"closed","Body":"It's desirable to have NuGets being published to a public feed as soon as the master branch of this repo gets updated.\r\n\r\nIn the past, this was tried to be done by publishing them to MyGet, but currently the lines of code that do this are commented out. https://github.com/dotnet/machinelearning/blob/f0fb7203d7597d2779a298662970b1f74b47f4b8/build/vsts-ci.yml#L237-L242\r\n\r\nAs discussed offline with @codemzs it would be better to instead publish them into this other public feed in Azure DevOps:\r\nhttps://dev.azure.com/dnceng/public/_packaging?_a=feed&feed=MachineLearning","Url":"https://github.com/dotnet/machinelearning/issues/4405","RelatedDescription":"Closed issue \"NuGet packages not being published to public feed\" (#4405)"},{"Id":"513642400","IsPullRequest":true,"CreatedAt":"2019-10-29T01:33:00","Actor":"jeremytieman","Number":"4407","RawContent":null,"Title":"SEAL Homomorphic Encryption support","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4407","RelatedDescription":"Open PR \"SEAL Homomorphic Encryption support\" (#4407)"},{"Id":"513474821","IsPullRequest":true,"CreatedAt":"2019-10-28T18:17:06","Actor":"gvashishtha","Number":"4402","RawContent":null,"Title":"Adding release process documentation to README.md","State":"open","Body":"This PR better documents the release process for ML.NET\r\n\r\n- [ x ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [  ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ x ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ x ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4402","RelatedDescription":"Open PR \"Adding release process documentation to README.md\" (#4402)"},{"Id":"513360653","IsPullRequest":false,"CreatedAt":"2019-10-28T15:01:07","Actor":"IgnasZ","Number":"4399","RawContent":null,"Title":"Memory leak in ML.NET 1.3.1 and 1.4.0-preview2","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Microsoft Windows [Version 10.0.18362.418]\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0.100 04339c3a26\r\n\r\n### Issue\r\n\r\n- **What did you do?** Detected potential memory leak in production application, so I wrote simple application to see if problem persists.\r\n- **What happened?** Microsoft.ML 1.3.1 and 1.4.0-preview2 both appear to be leaking memory\r\n\r\n### Source code / logs\r\n\r\nMinimal code that consistently reproduces this problem:\r\n```\r\n    class ModelInput\r\n    {\r\n        [ColumnName(\"TextColumn\"), LoadColumn(0)]\r\n        public string ItemDescription { get; set; }\r\n        [ColumnName(\"Label\"), LoadColumn(1)]\r\n        public int ItemId { get; set; }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Sleeping for 5 seconds. Collect initial memory snapshot...\");\r\n            while(true)\r\n            {\r\n                Thread.Sleep(5000);\r\n                BuildAndTrainModel();\r\n                Console.WriteLine(\"Training done. Collect memory snapshot...\");\r\n            }\r\n        }\r\n\r\n        static void BuildAndTrainModel()\r\n        {\r\n            MLContext context = new MLContext(seed: 1);\r\n\r\n            var dataView = context.Data.LoadFromTextFile<ModelInput>(\"input.csv\", separatorChar: ',');\r\n\r\n            var trainingPipeline = context.Transforms.Conversion.MapValueToKey(new[] { new InputOutputColumnPair(\"Label\", \"Label\") })\r\n                .Append(context.Transforms.Text.FeaturizeText(\"TextColumn\", \"TextColumn\"))\r\n                .Append(context.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \"Label\", featureColumnName: \"TextColumn\", maximumNumberOfIterations: 1));\r\n\r\n            var model = trainingPipeline.Fit(dataView);\r\n        }\r\n    }\r\n```\r\nAfter each call to BuildAndTrainModel following objects appear to leak:\r\n![image](https://user-images.githubusercontent.com/22596768/67688033-de87bf80-f9a1-11e9-9d8b-79fc687e19e5.png)\r\n\r\nAmount of objects leaked appears to correlate with number of iterations (increasing maximumNumberOfIterations increases leaked object count).","Url":"https://github.com/dotnet/machinelearning/issues/4399","RelatedDescription":"Open issue \"Memory leak in ML.NET 1.3.1 and 1.4.0-preview2\" (#4399)"},{"Id":"513347051","IsPullRequest":false,"CreatedAt":"2019-10-28T14:39:39","Actor":"zubr1","Number":"4398","RawContent":null,"Title":"Image recognition rotation invariant","State":"open","Body":"After completing model training, prediction didn't recognize differences between rotated images. Let's assume I have an image of right hand and left hand. I'd like to classify it differently so right hand image should be classified as right hand, and left hand image respectively as left. Unfortunately my current model sees no differences between them and it constantly fluctuates between both labels. \r\nIs there any solution for this like turning off data augmentation, or changing some settings? Or maybe it's problem of insufficient data for training (I use around 33-35 images for one label)?","Url":"https://github.com/dotnet/machinelearning/issues/4398","RelatedDescription":"Open issue \"Image recognition rotation invariant\" (#4398)"},{"Id":"513065150","IsPullRequest":false,"CreatedAt":"2019-10-28T02:28:45","Actor":"MaxAkbar","Number":"4397","RawContent":null,"Title":"TextCatalog.ApplyWordEmbedding to KMeans Trainer generates IndexOutOfRangeException","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 PRO 10.0.18362\r\n- **.NET Version (eg., dotnet --info)**: 3.1.100-preview1-014459\r\n\r\n### Issue\r\nI am trying to cluster a group of documents. For this sample, I used news articles short descriptions. If I run this sample with `FeaturizeText` the sample builds a model. If I try to apply `TextCatalog.ApplyWordEmbedding` I get a `System.IndexOutOfRangeException`.\r\n\r\n- **What did you do?** Applying Wordembedding to KMeans Trainer\r\n- **What happened?** IndexOutOfRangeException\r\n- **What did you expect?** For the ML.NET to build my model\r\n\r\n### Source code / logs\r\nSample code to reproduce the problem can be found [here](https://github.com/MaxAkbar/machinelearning-samples/tree/MachineLearningSampleBench/samples/csharp/getting-started/Clustering_NewsArticles).\r\n\r\nStackTrace: | \r\n------------ | \r\nSystem.AggregateException: One or more errors occurred. (Index was outside the bounds of the array.) (Index was outside the bounds of the array.) (Index was outside the bounds of the array.)\r\n ---> System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Trainers.KMeansBarBarInitialization.<>c__DisplayClass3_1.<Initialize>b__2(VBuffer`1& point, Int32 pointRowIndex, Single[] weights, Random rand)\r\n   at Microsoft.ML.Trainers.KMeansUtils.<>c__DisplayClass8_1`2.<ParallelMapReduce>b__0()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.WaitAllCore(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.WaitAll(Task[] tasks)\r\n   at System.Threading.Tasks.Parallel.Invoke(ParallelOptions parallelOptions, Action[] actions)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(Exception source)\r\n   at System.Threading.Tasks.Parallel.ThrowSingleCancellationExceptionOrOtherException(ICollection exceptions, CancellationToken cancelToken, Exception otherException)\r\n   at System.Threading.Tasks.Parallel.Invoke(ParallelOptions parallelOptions, Action[] actions)\r\n   at Microsoft.ML.Trainers.KMeansUtils.ParallelMapReduce[TPartitionState,TGlobalState](Int32 numThreads, IHost baseHost, Factory factory, RowIndexGetter rowIndexGetter, InitAction`1 initChunk, MapAction`1 mapper, ReduceAction`2 reducer, TPartitionState[]& buffer, TGlobalState& result)\r\n   at Microsoft.ML.Trainers.KMeansBarBarInitialization.Initialize(IHost host, Int32 numThreads, IChannel ch, Factory cursorFactory, Int32 k, Int32 dimensionality, VBuffer`1[] centroids, Int64 accelMemBudgetMb, Int64& missingFeatureCount, Int64& totalTrainingInstances)\r\n   at Microsoft.ML.Trainers.KMeansTrainer.TrainCore(IChannel ch, RoleMappedData data, Int32 dimensionality)\r\n   at Microsoft.ML.Trainers.KMeansTrainer.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at ClusteringNewsArticles.Train.Program.Main(String[] args) in C:\\Users\\maxim\\Source\\Repos\\machinelearning-samples\\samples\\csharp\\getting-started\\Clustering_NewsArticles\\ClusteringNewsArticles.Train\\Program.cs:line 54\r\n ---> (Inner Exception #1) System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Trainers.KMeansBarBarInitialization.<>c__DisplayClass3_1.<Initialize>b__2(VBuffer`1& point, Int32 pointRowIndex, Single[] weights, Random rand)\r\n   at Microsoft.ML.Trainers.KMeansUtils.<>c__DisplayClass8_1`2.<ParallelMapReduce>b__0()\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)<---\r\n\r\n ---> (Inner Exception #2) System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Trainers.KMeansBarBarInitialization.<>c__DisplayClass3_1.<Initialize>b__2(VBuffer`1& point, Int32 pointRowIndex, Single[] weights, Random rand)\r\n   at Microsoft.ML.Trainers.KMeansUtils.<>c__DisplayClass8_1`2.<ParallelMapReduce>b__0()\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)<--- |","Url":"https://github.com/dotnet/machinelearning/issues/4397","RelatedDescription":"Open issue \"TextCatalog.ApplyWordEmbedding to KMeans Trainer generates IndexOutOfRangeException\" (#4397)"},{"Id":"512986116","IsPullRequest":false,"CreatedAt":"2019-10-27T16:04:51","Actor":"quantasm","Number":"4396","RawContent":null,"Title":"Cross validation with stratified folds","State":"open","Body":"\r\nThere does not appear to be a way to stratify data in ML.NET, is this likely to be implemented anytime soon?\r\n\r\nSay I have data that has an uneven predictor field split 90% / 10%, I would like to cross-validate the data with k folds so that each fold will produce an even predictor split of 50% / 50% (or any desired split setting value).\r\n\r\nThis does not seem possible yet but is a major feature that is required as part of ML modelling.","Url":"https://github.com/dotnet/machinelearning/issues/4396","RelatedDescription":"Open issue \"Cross validation with stratified folds\" (#4396)"},{"Id":"512908324","IsPullRequest":false,"CreatedAt":"2019-10-27T15:53:09","Actor":"aslotte","Number":"4394","RawContent":null,"Title":"ProviderFactory is null when using DatabaseLoader in Jupyter","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10 \r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0\r\n\r\nNuGet\r\n- ML.NET preview2\r\n- Microsoft.ML. Experimental 0.0.16-preview\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI attempted to load data from a SQL Server DB using the DatabaseLoader from a Jupyter Notebook.\r\nI was first using System.Data.SqlClient as the ProviderFactory, but I got multiple re-direct issues in Jupyter. I moved to Microsoft.Data.SqlClient, which is supposed to work better with .NET Core and continued passed that issue. However, I instead run in to an issue where it says the provider factory is null. \r\n\r\nJust to make sure, I tested this in Visual Studio 2019. It works just fine there, this seems to be an issue with the Jupyter env.\r\n\r\n![image](https://user-images.githubusercontent.com/30201569/67628425-60a9a400-f83b-11e9-9a1e-93f45247c71e.png)\r\n\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4394","RelatedDescription":"Closed issue \"ProviderFactory is null when using DatabaseLoader in Jupyter\" (#4394)"},{"Id":"512267257","IsPullRequest":true,"CreatedAt":"2019-10-27T04:47:51","Actor":"codemzs","Number":"4384","RawContent":null,"Title":"Integrate Image Classification API in AutoML","State":"closed","Body":"This change also contains ImageClassification API change to convert the API to ITrainerEstimator as it has not been checked-in yet but it is only temporary and I will remove it before checking this in change into master branch. Code gen changes will come in a different PR.","Url":"https://github.com/dotnet/machinelearning/pull/4384","RelatedDescription":"Closed or merged PR \"Integrate Image Classification API in AutoML\" (#4384)"},{"Id":"512785698","IsPullRequest":true,"CreatedAt":"2019-10-26T03:51:12","Actor":"NeoXtreem","Number":"4393","RawContent":null,"Title":"Fixes #4392 Add AddPredictionEnginePool overload for implementation factory","State":"open","Body":"This is an additional overload for `AddPredictionEnginePool` to allow middleware dependencies to be used in a custom `ModelLoader`.  This will allow the following code to be used in `Startup` in a similar manner to the corresponding overloads on `AddSingleton`, `AddScoped` and `AddTransient`:\r\n\r\n```\r\nservices.AddPredictionEnginePool<Foo, Bar>(serviceProvider =>\r\n{\r\n    services.AddOptions<PredictionEnginePoolOptions<Foo, Bar>>().Configure(options =>\r\n    {\r\n        options.ModelLoader = new MyModelLoader(serviceProvider.GetService<IMyService>());\r\n    });\r\n    return new PredictionEnginePool<Foo, Bar>();\r\n});\r\n```\r\n\r\nThis fixes issue #4392, and is related to a [answer to a question](https://stackoverflow.com/a/57698799/197591) on Stack Overflow given by @eerhardt.","Url":"https://github.com/dotnet/machinelearning/pull/4393","RelatedDescription":"Open PR \"Fixes #4392 Add AddPredictionEnginePool overload for implementation factory\" (#4393)"},{"Id":"512785252","IsPullRequest":false,"CreatedAt":"2019-10-26T03:45:11","Actor":"NeoXtreem","Number":"4392","RawContent":null,"Title":"Cannot use middleware dependencies when using custom ModelLoader on AddPredictionEnginePool","State":"open","Body":"If a custom `ModelLoader` is used for the `PredictionEnginePool` that has a dependency on a configured service, there is no possibility to add this dependency via `AddPredictionEnginePool` as it does not offer an overload that accepts an implementation factory, unlike `AddSingleton`, `AddScoped` and `AddTransient`.\r\n\r\nThis is how it should be expected to happen in `Startup`:\r\n\r\n```\r\nservices.AddPredictionEnginePool<Foo, Bar>(serviceProvider =>\r\n{\r\n    services.AddOptions<PredictionEnginePoolOptions<Foo, Bar>>().Configure(options =>\r\n    {\r\n        options.ModelLoader = new MyModelLoader(serviceProvider.GetService<IMyService>());\r\n    });\r\n    return new PredictionEnginePool<Foo, Bar>();\r\n});\r\n```\r\n\r\nSince this is not possible with the current code, the creation of a model via middleware is therefore very difficult.  The only option is to use `ServiceProvider.BuildServiceProvider` which causes a warning as it results in an additional copy of singleton services being created:\r\n\r\n```\r\nservices.AddPredictionEnginePool<Foo, Bar>()\r\nservices.AddOptions<PredictionEnginePoolOptions<Foo, Bar>>().Configure(options =>\r\n{\r\n    var serviceProvider = services.BuildServiceProvider();\r\n    options.ModelLoader = new MyModelLoader(serviceProvider.GetService<IMyService>());\r\n});\r\n```\r\n\r\nA new `AddPredictionEnginePool` overload should be added that accepts an implementation factory delegate to allow middleware services to be accessed via the `IServiceProvider`.","Url":"https://github.com/dotnet/machinelearning/issues/4392","RelatedDescription":"Open issue \"Cannot use middleware dependencies when using custom ModelLoader on AddPredictionEnginePool\" (#4392)"},{"Id":"512661104","IsPullRequest":true,"CreatedAt":"2019-10-26T01:19:31","Actor":"eerhardt","Number":"4388","RawContent":null,"Title":"Add caching to the DatabaseLoaderTests.","State":"closed","Body":"The IrisSdcaMaximumEntropy were taking over 1 minute in CI. This change drops it to around 3 seconds.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4388","RelatedDescription":"Closed or merged PR \"Add caching to the DatabaseLoaderTests.\" (#4388)"},{"Id":"512729290","IsPullRequest":true,"CreatedAt":"2019-10-26T00:30:52","Actor":"harshithapv","Number":"4390","RawContent":null,"Title":"Changed LoadImages method that returns raw images bytes to LoadRawImageBytes","State":"closed","Body":"Changed LoadImages method that returns raw images bytes to LoadRawImageBytes.\r\nThis addresses issue #4313","Url":"https://github.com/dotnet/machinelearning/pull/4390","RelatedDescription":"Closed or merged PR \"Changed LoadImages method that returns raw images bytes to LoadRawImageBytes\" (#4390)"},{"Id":"512756423","IsPullRequest":true,"CreatedAt":"2019-10-25T23:21:45","Actor":"maryamariyan","Number":"4391","RawContent":null,"Title":"Adding CodeGen piece for MatrixFactorization trainer","State":"open","Body":"This PR adds CodeGen piece for MatrixFactorization trainer (For the recommendation task)\r\n\r\ncc: @eerhardt @LittleLittleCloud \r\n\r\nTODO:\r\n- [x] Add MatrixFactorization trainer generator\r\n- [x] Add tests for the trainer generator\r\n- [x] Review other CodeGen tests to find more use cases that can be tested","Url":"https://github.com/dotnet/machinelearning/pull/4391","RelatedDescription":"Open PR \"Adding CodeGen piece for MatrixFactorization trainer\" (#4391)"},{"Id":"512692430","IsPullRequest":false,"CreatedAt":"2019-10-25T19:55:14","Actor":"codemzs","Number":"4389","RawContent":null,"Title":"Unit-test for older model versions that use multiclass scorer","State":"open","Body":"https://github.com/dotnet/machinelearning/pull/4372#discussion_r339196504","Url":"https://github.com/dotnet/machinelearning/issues/4389","RelatedDescription":"Open issue \"Unit-test for older model versions that use multiclass scorer\" (#4389)"},{"Id":"512658934","IsPullRequest":false,"CreatedAt":"2019-10-25T18:35:18","Actor":"maryamariyan","Number":"4387","RawContent":null,"Title":"Incorrect header comments in CodeGen template files","State":"open","Body":"The auto generated files under `src/Microsoft.ML.CodeGenerator/Templates/` directory are creating incorrect header comments and need to be modified.\r\n\r\nRefer to:\r\nhttps://github.com/dotnet/machinelearning/pull/4365#discussion_r338733805\r\n\r\ncc: @JakeRadMSFT @LittleLittleCloud @rustd @eerhardt @sharwell ","Url":"https://github.com/dotnet/machinelearning/issues/4387","RelatedDescription":"Open issue \"Incorrect header comments in CodeGen template files\" (#4387)"},{"Id":"512599912","IsPullRequest":false,"CreatedAt":"2019-10-25T16:09:51","Actor":"grahamehorner","Number":"4386","RawContent":null,"Title":"[Feature Request] ImageTypeAttribute","State":"open","Body":"Please consider exposing the int height, int width as getter properties; this will allow developers to use reflection to detect the image height, width from the supplied input model as apposed to having to supply configuration values that may not match via a separate model object class ","Url":"https://github.com/dotnet/machinelearning/issues/4386","RelatedDescription":"Open issue \"[Feature Request] ImageTypeAttribute\" (#4386)"},{"Id":"512481166","IsPullRequest":false,"CreatedAt":"2019-10-25T12:11:31","Actor":"antoniovs1029","Number":"4385","RawContent":null,"Title":"Create methods not being called when loading models from disk","State":"open","Body":"There are some classes that define a Create method which is supposed to be called when loading a model from disk, but the problem is that the method is not being called at all.\r\n\r\nFor example, I've noticed this unexpected behavior in the following classes:\r\n1. [LinearBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.StandardTrainers/Standard/LinearModelParameters.cs#L473)\r\n2. [GamBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/GamClassification.cs#L233)\r\n3. [FastTreeBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/FastTreeClassification.cs#L87)\r\n4. [FastForestBinaryModelParameters](https://github.com/dotnet/machinelearning/blob/d531ea801a34a3018b8fa2a2f352902eb703cd25/src/Microsoft.ML.FastTree/RandomForestClassification.cs#L102)\r\n5. [PlattCalibrator](https://github.com/dotnet/machinelearning/blob/c922529e669d1c4dcb4d2bf8157a579b10a60cee/src/Microsoft.ML.Data/Prediction/Calibrator.cs#L1569)\r\n\r\nwhen loading a model that uses any of these classes, their Create method is expected to be called, but, as stated, the method is not being called.\r\n\r\nI also noticed this behavior in 3 other classes of the [Calibrator.cs](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/Prediction/Calibrator.cs#L1569) file (namely, the `ParameterMixingCalibratedModelParameters`, `ValueMapperCalibratedModelParameters`, and `FeatureWeightsCalibratedModelParameters` classes), but I've fixed this problem for those specific classes in my recent PR #4306 (which, as of the moment of writing this, is still waiting to get approved). It was while working on that PR that I noticed this problem on these classes, and I commented about it [there](https://github.com/dotnet/machinelearning/pull/4306#discussion_r336139379)... but it is appropriate to open this separate issue to better document this, since it is a problem that affects different classes across different files.\r\n\r\nIn fact, as I will describe below, there's a certain code pattern that is related to this problem, and I've seen this pattern in other classes of the Calibrator.cs file as well. So, the problem I describe here might be affecting even more classes than the ones I've mentioned.\r\n\r\n### Cause of the problem\r\nThe [CreateInstanceCore](https://github.com/dotnet/machinelearning/blob/7c067854b564275b0d6387ca59c0ec83e8fc91b9/src/Microsoft.ML.Core/ComponentModel/ComponentCatalog.cs#L186) method in the `ComponentCatalog.cs` file is responsible to try to call the `Create` method of any class when loading a model from disk.\r\n\r\nThe current implementation of the method actually checks first if the class has a constructor with parameters `(IHostEnvironment env, ModelLoadContext ctx)` and invokes that constructor through reflection. If the class doesn't have such a constructor, then it checks if it has a `Create((IHostEnvironment env, ModelLoadContext ctx)` method, and it gets invoked through reflection.\r\n\r\nThis behavior is not desired for the classes I've mentioned (and potentially other classes), since they define both a constructor and a Create method with those parameters, but in these cases it's actually expected that the Create method gets called instead of the constructor. Thus, if a class follows the pattern of having a private or internal constructor (with the `(env, ctx)` parameters) and also has a Create method, then this problem might also be affecting that class.\r\n\r\nSince the Create method typically only runs some security checks before calling the constructor, it turns out that the overall process of loading models doesn't seem affected by this issue. But the problem remains that these security checks are being missed along with whatever behavior the Create method adds to the process.\r\n\r\nAs explained by @yaeldekel in [her comment](https://github.com/dotnet/machinelearning/pull/4306#discussion_r337981820) on my recent PR #4306 (under \"Answer 1\"), this problem might had been introduced before the official release of ML.net, when the `ComponentCatalog` method was modified in a way that permitted the `CreateInstanceCore` method to use private and internal constructors, which didn't use to happen... so before those changes were made, classes could have private or internal constructors and a Create method, and the latter would appropriately be called. But now the constructor gets called, and this is the case of all the classes mentioned in this issue.\r\n\r\nSince these changes were made while trying to internalize as many APIs as possible before the ML.net official release, many constructors where also made private or internal, and thus the changes in ComponentCatalog that permit using those constructors are also necessary.\r\n\r\nBecause of these, further investigation is needed to know for sure which classes are being affected by this problem, so to better find a way to fix this problem without affecting all of the other classes that doesn't present this situation.","Url":"https://github.com/dotnet/machinelearning/issues/4385","RelatedDescription":"Open issue \"Create methods not being called when loading models from disk\" (#4385)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-30T05:30:42.0006475Z","RunDurationInMilliseconds":1216}