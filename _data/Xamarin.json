{"Data":{"Blog":{"FeedItems":[{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8243487456","Type":"IssuesEvent","CreatedAt":"2018-09-11T00:34:27","Actor":"gamesguru","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2169","RelatedDescription":"Opened issue \"Linux support\" (#2169) at xamarin/xamarin-android","RelatedBody":"I noticed the Azure artifacts haven't been updated in almost four months now.  Our team relies on this for testing and we are wondering what the fate of the project is.  We are concerned support will break for v8.3.99.189\r\n\r\nI looked through [one of the build logs](https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/1248/consoleFull#595808325ae1da302-70c8-400e-9aed-bc1cd416a1c7) and the error messages don't seem that horrible.  Mostly stuff with nunit?  It turns into some failed downloads after what's quoted, maybe because it failed to build?\r\n\r\n@jonpryor @atsushieno \r\nI'm hoping someone can look into this or give us clues as to what's missing in the build environment and we can try ourselves.  Thanks\r\n```\r\n16:15:05 Build FAILED.\r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/xa-prep-tasks/xa-prep-tasks.csproj\" (default target) (2:2) ->\r\n16:15:05 (ResolveAssemblyReferences target) -> \r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3277: Found conflicts between different versions of \"System.IO.Compression\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/xa-prep-tasks/xa-prep-tasks.csproj]\r\n16:15:05 \r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj\" (default target) (3:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj\" (default target) (7:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj\" (default target) (8:2) ->\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"nunit.engine\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"nunit.engine.api\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"nunit-agent\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"nunit-agent-x86\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05 \r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj\" (default target) (3:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj\" (default target) (7:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj\" (default target) (8:2) ->\r\n16:15:05 (CoreCompile target) -> \r\n16:15:05   Native.cs(44,18): warning CS0649: Field 'Native.zip_source_args_seek_t.offset' is never assigned to, and will always have its default value 0 [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05   Native.cs(45,15): warning CS0649: Field 'Native.zip_source_args_seek_t.whence' is never assigned to, and will always have its default value 0 [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05 \r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj\" (default target) (3:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj\" (default target) (7:2) ->\r\n16:15:05 (ResolveAssemblyReferences target) -> \r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3277: Found conflicts between different versions of \"System.IO.Compression\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj]\r\n16:15:05 \r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj\" (default target) (3:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj\" (default target) (7:2) ->\r\n16:15:05 (CoreCompile target) -> \r\n16:15:05   Xamarin.Android.Tools.BootstrapTasks/RunUITests.cs(18,26): warning CS0114: 'RunUITests.AfterCommand(int, Adb.CommandInfo)' hides inherited member 'Adb.AfterCommand(int, Adb.CommandInfo)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj]\r\n16:15:05   Xamarin.Android.Tools.BootstrapTasks/RunInstrumentationTests.cs(42,27): warning CS0169: The field 'RunInstrumentationTests.logcatWriter' is never used [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj]\r\n16:15:05 \r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj\" (default target) (3:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj\" (default target) (7:3) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj\" (default target) (8:6) ->\r\n16:15:05 (ResolveAssemblyReferences target) -> \r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"nunit.engine\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"nunit.engine.api\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"nunit-agent\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"nunit-agent-x86\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/external/LibZipSharp/libZipSharp.csproj]\r\n16:15:05 \r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj\" (default target) (3:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj\" (default target) (7:3) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/xa-prep-tasks/xa-prep-tasks.csproj\" (default target) (2:15) ->\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3277: Found conflicts between different versions of \"System.IO.Compression\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/xa-prep-tasks/xa-prep-tasks.csproj]\r\n16:15:05 \r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj\" (default target) (3:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj\" (default target) (7:3) ->\r\n16:15:05   /usr/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2127,5): warning MSB3277: Found conflicts between different versions of \"System.IO.Compression\" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj]\r\n16:15:05 \r\n16:15:05 \r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/src/mono-runtimes/mono-runtimes.csproj\" (default target) (1) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/android-toolchain/android-toolchain.csproj\" (default target) (3:2) ->\r\n16:15:05 \"/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj\" (default target) (7:3) ->\r\n16:15:05 (CoreCompile target) -> \r\n16:15:05   Xamarin.Android.Tools.BootstrapTasks/RunUITests.cs(18,26): warning CS0114: 'RunUITests.AfterCommand(int, Adb.CommandInfo)' hides inherited member 'Adb.AfterCommand(int, Adb.CommandInfo)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword. [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj]\r\n16:15:05   Xamarin.Android.Tools.BootstrapTasks/RunInstrumentationTests.cs(42,27): warning CS0169: The field 'RunInstrumentationTests.logcatWriter' is never used [/mnt/jenkins/workspace/xamarin-android-linux/xamarin-android/build-tools/Xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj]\r\n```"},{"Id":"8242914037","Type":"PullRequestEvent","CreatedAt":"2018-09-10T21:45:55","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2168","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] simplify LINQ in ResolveAssemblies\" (#2168) at xamarin/xamarin-android","RelatedBody":"Looking at `ResolveAssemblies`, I noticed a lot of LINQ usage that\r\ncould be simplified.\r\n\r\nWe were using `HashSet<string>` that contains a list of all\r\nassemblies, and the following code:\r\n\r\n    if (!topLevel && assemblies.All (a => new AssemblyNameDefinition (a, null).Name != assembly.Name.Name))\r\n        assemblies.Add (fullPath);\r\n\r\nThis was called from a *recursive* function and needlessly calls\r\n`new AssemblyNameDefinition ().Name` for every other assembly...\r\nRoughly a O(N^2) operation.\r\n\r\nSo I changed the `HashSet<string>` to be a `Dictionary<string,\r\nstring>`, where the \"key\" is the `assembly.Name.Name` and the value\r\nthe full path to the assembly.\r\n\r\nI also fixed up usage of `assembly.MainModule.FullyQualifiedName`,\r\nwhich was deprecated mentioning to use `FileName` instead.\r\n\r\nLastly, I fixed up several LINQ expressions on the `Outputs` of\r\n`ResolveAssemblies`. I rewrote them to use a single `foreach` loop\r\ninstead of the equivalent LINQ that would loop over the list multiple\r\ntimes.\r\n\r\n### Results\r\n\r\nThe build time improvements here were \"not zero\", but also not huge.\r\nTesting the `tests/Xamarin.Forms-Performance-Integration` project, a\r\nbuild with no changes...\r\n\r\nBefore:\r\n\r\n    188 ms  ResolveAssemblies                          1 calls\r\n\r\nAfter:\r\n\r\n    181 ms  ResolveAssemblies                          1 calls\r\n\r\nI think this change is still worthwhile, since:\r\n- The code is a bit cleaner, less LINQ for others to profile/look at,\r\n  and I plan to refactor this task more soon.\r\n- The time savings is part of the dev-loop, and even builds with no\r\n  changes.\r\n- There should be overall less allocations.\r\n\r\nOther changes:\r\n- Removed extraneous log messages for inputs/outputs"},{"Id":"8242203646","Type":"PullRequestEvent","CreatedAt":"2018-09-10T19:29:33","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2167","RelatedDescription":"Opened pull request \"[Tests] Make sure emulator is killed after tests fail\" (#2167) at xamarin/xamarin-android","RelatedBody":"We currently fail to kill the emulator if any of the steps executing APK tests\r\nfail. This is because the failed task stops execution of all the other targets\r\ndefined in that file. In effect we leave running instances of the emulator on\r\nthe build bots, should such a failure happen.\r\n\r\nThis diff adds `ContinueOnError=\"ErrorAndContinue\" to each task in the target\r\nfile so that we are sure to hit the `ReleaseAndroidTarget` target no matter what."},{"Id":"8240769863","Type":"PullRequestEvent","CreatedAt":"2018-09-10T15:13:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2163","RelatedDescription":"Merged pull request \"[docs] Update $(AndroidGenerateLayoutBindings) info\" (#2163) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1671\r\nContext: https://github.com/xamarin/xamarin-android/issues/1669\r\n\r\nThe new Bindings and Code-Behind features were breaking some existing\r\nprojects, so the default value of `$(AndroidGenerateLayoutBindings)` was\r\nchanged from `True` to `False`.  This commit adjusts the documentation\r\naccordingly so that users will know how to enable those features if they\r\nwant to try them.  This new wording can be changed back once the default\r\nvalue of `$(AndroidGenerateLayoutBindings)` is switched back to `True`."},{"Id":"8240751624","Type":"PullRequestEvent","CreatedAt":"2018-09-10T15:10:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2164","RelatedDescription":"Merged pull request \"[download-bundle] Update mono bundle download URL\" (#2164) at xamarin/xamarin-android","RelatedBody":"Around 2018-Aug-15, the Jenkins config for xamarin-android was changed\r\nin a way which [altered the URL for where files are uploaded][0] so\r\nthat it contained `${BUILD_NUMBER}`, which is a value which increments\r\non every build.  A consequence of this change is that the bundle could\r\nno longer used, as it could no longer be *found*, as there is no way\r\nof knowing what `${BUILD_NUMBER}` could possibly be, which in turn\r\ncaused increased build times for PRs and master builds, as mono would\r\nnow always need to be rebuilt.\r\n\r\nOn 2018-Sep-7, the [Jenkins config was updated][1] to remove\r\n`${BUILD_NUMBER}` from the URL, allowing for \"static\" URLs which works\r\nwith our bundle mechansism.\r\n\r\nWith the removal of `${BUILD_NUMBER}`, we're good, right?  The bundle\r\nshould now be used?\r\n\r\nNot so much.  One other part needs updating: the *rest* of the URL\r\n*also* changed as part of the 2018-Aug-15 change!\r\n`download-bundle.targets` was attempting to download e.g.:\r\n\r\n\thttps://xamjenkinsartifact.azureedge.net/xamarin-android/xamarin-android/bin/Debug/bundle-v21-h7419ab9f-Debug-Darwin-libzip=b95cf3f,llvm=bdb3a11,mono=cca6805.zip\r\n\r\nHowever, the *correct* URL we now need to download is e.g.:\r\n\r\n\thttps://xamjenkinsartifact.blob.core.windows.net/mono-jenkins/xamarin-android/bin/Debug/bundle-v21-h7419ab9f-Debug-Darwin-libzip=b95cf3f,llvm=bdb3a11,mono=cca6805.zip\r\n\r\nUpdate `$(_AzureBaseUri)` so that we now download from the correct\r\nbase URL, so that the mono bundle can actually be downloaded.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/jobConfigHistory/showDiffFiles?timestamp1=2018-07-23_19-09-25&timestamp2=2018-08-15_22-31-28\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/jobConfigHistory/showDiffFiles?timestamp1=2018-08-31_14-49-55&timestamp2=2018-09-07_18-49-53"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8243384724","Type":"IssuesEvent","CreatedAt":"2018-09-10T23:58:09","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2183","RelatedDescription":"Closed issue \"[Android] Entry Focused/Unfocused problems\" (#2183) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add 2 Entry Controls in Grid\r\n2. Assign Focused and Unfocused event handlers to them (I do this with lamda expressions)\r\n3. First tap on first Entry, then on second \r\n\r\n### Expected Behavior\r\nExpected behavior is to trigger only Focused event when you tap on Entry. Another issue with that is that Text value of 2nd Entry will be assigned to 1st Entry control even tho I am not setting it to the 1st Entry control. And since I have XamForms.Controls.Calendar package from rebeccaXam Calendar is showing after Unfocused event on 2nd Entry even tho I never stated for that control to be visible. Initial is false for property IsVisible for that calendar control. When I remove that calendar control issue is still here so that calendar control is not a problem.\r\n\r\n### Actual Behavior\r\nWhen I first tap on first Entry only Focused event is triggered which is ok, but after that when I tap on 2nd Entry first Focused is triggered then Unfocused after Focused even tho I didn't unfocused that Entry.\r\n\r\n### Basic Information\r\nI have basic Xamarin.Forms project where in Grid I placed one Entry after another (I have two of them) which I placed in Row=\"1\" and Row=\"2\". I am deploying this app on Android 7.0 and this issue happen on both my Samsung Galaxy S7 Edge and friends Huawei\r\n\r\n- Version with issue: Last Xamarin.Forms version\r\n- Last known good version: (tested on random several versions of Xamarin and had same issues on all of them)\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - Android: 7.0\r\n- Nuget Packages: XamForms.Controls.Calendar (rebeccaXam), Newtonsoft JSON\r\n- Affected Devices: Samsung Galaxy S7 Edge (SM-G935F), HuaweiP9 Lite (HUAWEI VNS-L31)\r\n"},{"Id":"8242359200","Type":"IssuesEvent","CreatedAt":"2018-09-10T19:59:43","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3538","RelatedDescription":"Closed issue \"Error while loading Xamarin.iOS.Tasks.dll\" (#3538) at xamarin/Xamarin.Forms","RelatedBody":"I am getting this error:\r\n error MSB4062: Die Xamarin.iOS.Tasks.CopyFileToWindows-Aufgabe konnte nicht aus der C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Tasks.dll-Assembly geladen werden.  Stellen Sie sicher, dass die <UsingTask>-Deklaration korrekt ist, die Assembly und alle zugehörigen Abhängigkeiten verfügbar sind und die Aufgabe eine öffentliche Klasse enthält, die Microsoft.Build.Framework.ITask implementiert.\r\n\r\nError MSB4062: the Xamarin. iOS. Tasks. CopyFileToWindows task could not be loaded from the C:Program Files (x86) microsoft Visual Studio2017EnterpriseMSBuildXamariniOSXamarin.iOS.Tasks.dll-Assembly. Make sure that the declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\r\n\r\nAccording to some research it appears to be related to what is also happening here:\r\nhttps://github.com/GitTools/GitVersion/issues/1307\r\n\r\nIf you know an alternative way to make the build process copy the dsym folder to windows again that would also help a lot. It stopped doing that at some point during components. Switching laptop to upload symbols manually instead of automation is awful"},{"Id":"8242161938","Type":"IssuesEvent","CreatedAt":"2018-09-10T19:21:17","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3370","RelatedDescription":"Closed issue \"EntryCell not filling width\" (#3370) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nIn the attached image you can see that the EntryCell is not filling the entire width although I set the HorizontalOptions of the TableView to FillAndExpand which cause for example the number not show all digits (there is a missing 4 for example)./\r\n\r\nI think the EntryCell should fill the width of the screen - the width of the Label\r\n\r\n<img width=\"392\" alt=\"screen shot 2018-07-22 at 01 09 02\" src=\"https://user-images.githubusercontent.com/6236241/43040077-e4a8d3b8-8d4b-11e8-801b-29472ae0d506.png\">\r\n\r\n\r\nThanks,\r\nJassim"},{"Id":"8242161046","Type":"IssuesEvent","CreatedAt":"2018-09-10T19:21:06","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3272","RelatedDescription":"Closed issue \"[iOS] MTOUCH : error MT2002: Failed to resolve \"CoreSpotlight.CSSearchableItemAttributeSet\"\" (#3272) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nMy project is Xamarin.Forms project PCL\r\nI'm referencing the correct version of Xamarin.iOS 11.12.0.4 which should include CoreSpotlight\r\n\r\nBut I continually get the below message for my iOS project\r\n \r\nMTOUCH : error MT2002: Failed to resolve \"CoreSpotlight.CSSearchableItemAttributeSet\" reference from \"Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065\"\r\n\r\n### Steps to Reproduce\r\n\r\n1. Updated Xamarin Studio project to Visual Studio 2017, all projects work except iOS.\r\n2. Have also reinstalled Xamarin.iOS and Visual Studio \r\n3. \r\n\r\n### Expected Behavior\r\n\r\niOS project should build\r\n\r\n### Actual Behavior\r\n\r\niOS project doesn't build \r\nMTOUCH : error MT2002: Failed to resolve \"CoreSpotlight.CSSearchableItemAttributeSet\" reference from \"Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065\"\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: Xamarin Studio\r\n- IDE: Visual Studio 7.5.3 Build 7\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.12.0.4\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: \r\n  <ItemGroup>\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"System.Xml\" />\r\n    <Reference Include=\"System.Core\" />\r\n   \r\n    <Reference Include=\"System.Net.Http\" />\r\n    <Reference Include=\"Xamarin.Insights\">\r\n      <HintPath>..\\packages\\Xamarin.Insights.1.10.5\\lib\\Xamarin.iOS10\\Xamarin.Insights.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"PLCrashReporterUnifiedBinding\">\r\n      <HintPath>..\\packages\\Xamarin.Insights.1.10.5\\lib\\Xamarin.iOS10\\PLCrashReporterUnifiedBinding.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Reactive.Interfaces\">\r\n      <HintPath>..\\packages\\Rx-Interfaces.2.2.5\\lib\\portable-windows8+net45+wp8\\System.Reactive.Interfaces.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Reactive.Core\">\r\n      <HintPath>..\\packages\\Rx-Core.2.2.5\\lib\\portable-windows8+net45+wp8\\System.Reactive.Core.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Reactive.Linq\">\r\n      <HintPath>..\\packages\\Rx-Linq.2.2.5\\lib\\portable-windows8+net45+wp8\\System.Reactive.Linq.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Reactive.PlatformServices\">\r\n      <HintPath>..\\packages\\Rx-PlatformServices.2.2.5\\lib\\portable-windows8+net45+wp8\\System.Reactive.PlatformServices.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"ReactiveUI\">\r\n      <HintPath>..\\packages\\reactiveui-core.6.5.0\\lib\\Xamarin.iOS10\\ReactiveUI.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Net.Http.Primitives\">\r\n      <HintPath>..\\packages\\Microsoft.Net.Http.2.2.28\\lib\\portable-net45+win8\\System.Net.Http.Primitives.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Net.Http.Extensions\">\r\n      <HintPath>..\\packages\\Microsoft.Net.Http.2.2.28\\lib\\portable-net45+win8\\System.Net.Http.Extensions.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"SQLitePCL\">\r\n      <HintPath>..\\packages\\SQLitePCL.3.8.7.2\\lib\\Xamarin.iOS10\\SQLitePCL.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"SQLitePCL.Ext\">\r\n      <HintPath>..\\packages\\SQLitePCL.3.8.7.2\\lib\\Xamarin.iOS10\\SQLitePCL.Ext.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Calabash\">\r\n      <HintPath>..\\packages\\Xamarin.TestCloud.Agent.0.14.1\\lib\\Xamarin.iOS10\\Calabash.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Splat\">\r\n      <HintPath>..\\packages\\Splat.1.6.2\\lib\\Xamarin.iOS10\\Splat.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Newtonsoft.Json\">\r\n      <HintPath>..\\packages\\Newtonsoft.Json.7.0.1\\lib\\portable-net40+sl5+wp80+win8+wpa81\\Newtonsoft.Json.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"OxyPlot\">\r\n      <HintPath>..\\packages\\OxyPlot.Core.2015.1.873-alpha\\lib\\portable-net4+sl5+netcore45+wpa81+wp8+MonoAndroid1+MonoTouch1+Xamarin.iOS10\\OxyPlot.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"OxyPlot.Xamarin.Forms.Platform.iOS\">\r\n      <HintPath>..\\packages\\OxyPlot.Xamarin.Forms.2015.1.873-alpha\\lib\\Xamarin.iOS10\\OxyPlot.Xamarin.Forms.Platform.iOS.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"OxyPlot.Xamarin.Forms\">\r\n      <HintPath>..\\packages\\OxyPlot.Xamarin.Forms.2015.1.873-alpha\\lib\\Xamarin.iOS10\\OxyPlot.Xamarin.Forms.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"OxyPlot.Xamarin.iOS\">\r\n      <HintPath>..\\packages\\OxyPlot.Xamarin.iOS.2015.1.873-alpha\\lib\\Xamarin.iOS10\\OxyPlot.Xamarin.iOS.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.WindowsAzure.Mobile.Ext\">\r\n      <HintPath>Third Party\\Microsoft.WindowsAzure.Mobile.Ext.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"zxing.ios\">\r\n      <HintPath>..\\packages\\ZXing.Net.Mobile.1.4.7.1\\lib\\Xamarin.iOS\\zxing.ios.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"ZXing.Net.Mobile\">\r\n      <HintPath>..\\packages\\ZXing.Net.Mobile.1.4.7.1\\lib\\Xamarin.iOS\\ZXing.Net.Mobile.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Acr.BarCodes\">\r\n      <HintPath>..\\packages\\Acr.BarCodes.3.1.0\\lib\\Xamarin.iOS10\\Acr.BarCodes.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Acr.BarCodes.Interface\">\r\n      <HintPath>..\\packages\\Acr.BarCodes.3.1.0\\lib\\Xamarin.iOS10\\Acr.BarCodes.Interface.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Mindscape.Raygun4Net.Xamarin.iOS.Unified\">\r\n      <HintPath>..\\Components\\raygun4net-5.2.0\\lib\\ios-unified\\Mindscape.Raygun4Net.Xamarin.iOS.Unified.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"XamSvg.XamForms\">\r\n      <HintPath>..\\packages\\Vapolia.XamSvg.Forms.2.0.6\\lib\\Xamarin.iOS\\XamSvg.XamForms.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"XamSvg.XamForms.iOS\">\r\n      <HintPath>..\\packages\\Vapolia.XamSvg.Forms.2.0.6\\lib\\Xamarin.iOS\\XamSvg.XamForms.iOS.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"XamSvg.Shared\">\r\n      <HintPath>..\\packages\\Softlion.XamSvg.2.0.6\\lib\\Xamarin.iOS\\XamSvg.Shared.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"XamSvg.Ios\">\r\n      <HintPath>..\\packages\\Softlion.XamSvg.2.0.6\\lib\\Xamarin.iOS\\XamSvg.Ios.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Acr.DeviceInfo\">\r\n      <HintPath>..\\packages\\Acr.DeviceInfo.3.2.3\\lib\\Xamarin.iOS10\\Acr.DeviceInfo.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Acr.DeviceInfo.Interface\">\r\n      <HintPath>..\\packages\\Acr.DeviceInfo.3.2.3\\lib\\Xamarin.iOS10\\Acr.DeviceInfo.Interface.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Acr.Support.iOS\">\r\n      <HintPath>..\\packages\\Acr.Support.1.1.1\\lib\\Xamarin.iOS10\\Acr.Support.iOS.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Acr.UserDialogs\">\r\n      <HintPath>..\\packages\\Acr.UserDialogs.4.1.0\\lib\\Xamarin.iOS10\\Acr.UserDialogs.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Acr.UserDialogs.Interface\">\r\n      <HintPath>..\\packages\\Acr.UserDialogs.4.1.0\\lib\\Xamarin.iOS10\\Acr.UserDialogs.Interface.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"BTProgressHUD\">\r\n      <HintPath>..\\packages\\Acr.UserDialogs.4.1.0\\lib\\Xamarin.iOS10\\BTProgressHUD.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Toasts.Forms.Plugin.Abstractions\">\r\n      <HintPath>..\\packages\\Toasts.Forms.Plugin.2.0.3\\lib\\Xamarin.iOS10\\Toasts.Forms.Plugin.Abstractions.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Toasts.Forms.Plugin.iOS\">\r\n      <HintPath>..\\packages\\Toasts.Forms.Plugin.2.0.3\\lib\\Xamarin.iOS10\\Toasts.Forms.Plugin.iOS.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"MR.Gestures.iOS\">\r\n      <HintPath>..\\packages\\MR.Gestures.1.3.4\\lib\\Xamarin.iOS10\\MR.Gestures.iOS.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"MR.Gestures\">\r\n      <HintPath>..\\packages\\MR.Gestures.1.3.4\\lib\\Xamarin.iOS10\\MR.Gestures.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"MWBarcodeScanner\">\r\n      <HintPath>..\\Components\\MWBarcodeScanner-1.5.3\\lib\\ios-unified\\MWBarcodeScanner.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Xamarin.Forms.Core\">\r\n      <HintPath>..\\packages\\Xamarin.Forms.2.4.0.91020\\lib\\Xamarin.iOS10\\Xamarin.Forms.Core.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Xamarin.Forms.Platform\">\r\n      <HintPath>..\\packages\\Xamarin.Forms.2.4.0.91020\\lib\\Xamarin.iOS10\\Xamarin.Forms.Platform.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Xamarin.Forms.Platform.iOS\">\r\n      <HintPath>..\\packages\\Xamarin.Forms.2.4.0.91020\\lib\\Xamarin.iOS10\\Xamarin.Forms.Platform.iOS.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Xamarin.Forms.Xaml\">\r\n      <HintPath>..\\packages\\Xamarin.Forms.2.4.0.91020\\lib\\Xamarin.iOS10\\Xamarin.Forms.Xaml.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"Xamarin.iOS\">\r\n      <HintPath>..\\..\\..\\..\\..\\Library\\Frameworks\\Xamarin.iOS.framework\\Versions\\11.12.0.4\\lib\\64bits\\Xamarin.iOS.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8242142512","Type":"IssuesEvent","CreatedAt":"2018-09-10T19:17:21","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3057","RelatedDescription":"Closed issue \"Invalid cast in Xamarin.Forms/Xamarin.Forms.Platform.Android/Renderers/NavigationRenderer.cs\" (#3057) at xamarin/Xamarin.Forms","RelatedBody":"I'm inheriting from NavigationRenderer class for my Android project and overriding this method: protected override void OnElementChanged(ElementChangedEventArgs<NavigationPage> e)\r\n\r\nWhen I call \"base.OnElementChanged(e);\" it throws an \"invalid cast\" exception in line 227 of NavigationRenderer.cs. Line 227 is this:\r\n\r\n((Platform)Element.Platform).NavAnimationInProgress = true;\r\n\r\n\r\nWhen I put a breakpoint there and add the below to the Watch window during runtime:\r\n\r\n((Platform)Element.Platform).NavAnimationInProgress\r\n\r\nthen the result is \"Invalid cast\".\r\n\r\n\r\nHowever when I change it to this the Watch window:\r\n\r\n((Xamarin.Forms.Platform.Android.AppCompat.Platform)Element.Platform)\r\n\r\nthen it returns a valid value (true or false), as the author of NavigationRenderer.cs intended for the cast to work.\r\n\r\n\r\nSo this exception seems to be caused by an ambiguous definition of the Platform class.\r\n\r\nThe problem can be resolved by specifying the full name (including the prefixes) where the cast is performed on line 227. There are other similar locations where this cast is performed, those locations should be updated as well.\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8243859686","Type":"PullRequestEvent","CreatedAt":"2018-09-11T02:47:17","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4784","RelatedDescription":"Opened pull request \"[security] Add new SecCertificateCopyKey and SecTrustEvaluateWithError API with unit tests\" (#4784) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8243467847","Type":"PullRequestEvent","CreatedAt":"2018-09-11T00:27:17","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4783","RelatedDescription":"Opened pull request \"[security] Fix 'SecCertificate2.Certificate' call and add some tests\" (#4783) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8242589748","Type":"IssuesEvent","CreatedAt":"2018-09-10T20:43:06","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4772","RelatedDescription":"Closed issue \"Disable the GC pump by default\" (#4772) at xamarin/xamarin-macios","RelatedBody":"Disable the GC pump by default, since it may interfere with debugging (objects are collected when inspecting them).\r\n\r\nReference: https://developercommunity.visualstudio.com/content/problem/210870/objects-in-list-are-being-garbage-collected-during.html?childToView=329416#comment-329416"},{"Id":"8242587692","Type":"PullRequestEvent","CreatedAt":"2018-09-10T20:42:43","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4781","RelatedDescription":"Merged pull request \"Disable the GC pump by default. Fixes #4772.\" (#4781) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/4772"},{"Id":"8241978663","Type":"PullRequestEvent","CreatedAt":"2018-09-10T18:45:57","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4696","RelatedDescription":"Closed pull request \"[msbuild] Set 'CopyNuGetImplementations' to true for app extensions. Fixes #4235 and #4237. (#4512) (#4648)\" (#4696) at xamarin/xamarin-macios","RelatedBody":"* [msbuild] Set 'CopyNuGetImplementations' to true for app extensions. Fixes #4235 and #4237.\n\nIn Xamarin.iOS.Common.targets, just before the _CompileToNative target, we\nmodify the mtouch references to ensure that we get the lib assemblies for\nnugets, and not the ref references:\n\nhttps://github.com/xamarin/xamarin-macios/blob/9e31d07ecc08a64372dd562e843c3d8950d24985/msbuild/Xamarin.iOS.Tasks.Core/Xamarin.iOS.Common.targets#L784-L791\n\nThis logic removes nuget references, and then re-adds any copy-local dll\nreferences.\n\nThis works fine in executable projects, but not in library projects (aka\nextensions), because nugets aren't copied for library projects:\n\nhttps://github.com/NuGet/NuGet.BuildTasks/blob/cf4b0a12cf1f75e0654f28c2a9020251c41d126a/src/Microsoft.NuGet.Build.Tasks/Microsoft.NuGet.targets#L86\n\nSo we need to set the CopyNuGetImplementations variable to 'true' for our\nlibrary projects.\n\nFixes https://github.com/xamarin/xamarin-macios/issues/4235.\nFixes https://github.com/xamarin/xamarin-macios/issues/4237.\n\n* [tests] Redirect MSBuildExtensionsPath to MSBuildExtensionsPathFallbackPathsOverride when running msbuild for package reference tests.\n\nThis fixes a problem where nuget restore would fail for projects with\nPackageReferences, because a variable would be empty and msbould would try to\nwrite to /:\n\n    nuget restore ../MyAppWithPackageReference/MyAppWithPackageReference.csproj\n    MSBuild auto-detection: using msbuild version '15.0' from '/Library/Frameworks/Mono.framework/Versions/Current/lib/mono/msbuild/15.0/bin/'.\n    Restoring packages for /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/msbuild/tests/MyAppWithPackageReference/MyAppWithPackageReference.csproj...\n    Committing restore...\n    Generating MSBuild file /MyAppWithPackageReference.csproj.nuget.g.props.\n    Path / is a directory\n\nThis will become unnecessary when PR #4111 is merged.\n\n* Add Xamarin.Mac test showing that fix is not needed (?!?)\n\n* Add AppExtension test with packagereference\n\n* Make extension actually have json code generated\n\n* Fix ProjectTypeGuids of checked in extension projects, as they were not openable in VSfM\n\n* XM extension test now correctly fails\n\n* Now that we have a failing test, fix XM same as rest of platforms\n\n* Disable XM tests due to msbuild redirect sadness\n\n* Disable iOS tests as well due to #4110\n\n* Disable iOS tests by using the Ignore attribute.\n\nDisable tests by using the Ignore attribute, because just commenting out the\nTestCase attributes makes the test fail:\n\n    1) NotRunnable : Xamarin.iOS.Tasks.ProjectReferenceTests.BasicTest\n       No suitable constructor was found"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":31,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":42,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":86,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2018-09-11T05:30:52.8434715Z","RunDurationInMilliseconds":3920}