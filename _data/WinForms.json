{"Data":{"GitHub":{"Issues":[{"Id":"514290960","IsPullRequest":true,"CreatedAt":"2019-10-30T03:45:07","Actor":"cston","Number":"2241","RawContent":null,"Title":"Remove References from Directory.Build.props","State":"closed","Body":"Investigate CI build failures - see #2107\r\n\r\n## Proposed changes\r\n\r\nAvoid References in Directory.Build.props.\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Risk\r\n\r\nLow\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2241)","Url":"https://github.com/dotnet/winforms/pull/2241","RelatedDescription":"Closed or merged PR \"Remove References from Directory.Build.props\" (#2241)"},{"Id":"513869486","IsPullRequest":true,"CreatedAt":"2019-10-29T23:59:08","Actor":"dotnet-maestro[bot]","Number":"2236","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/28/2019 11:43 PM\r\n- **Commit**: 96e8fc12aa98264c4e1980252e962b908eaae956\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19528.5\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2236)","Url":"https://github.com/dotnet/winforms/pull/2236","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2236)"},{"Id":"513880773","IsPullRequest":true,"CreatedAt":"2019-10-29T23:58:46","Actor":"dotnet-maestro[bot]","Number":"2237","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/28/2019 5:34 PM\r\n- **Commit**: 6c6a130ba15615a4b589b6e2d8120f4f30f8275f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19528.5\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2237)","Url":"https://github.com/dotnet/winforms/pull/2237","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#2237)"},{"Id":"513982465","IsPullRequest":true,"CreatedAt":"2019-10-29T23:18:23","Actor":"hughbe","Number":"2238","RawContent":null,"Title":"Cleanup ADVF constants","State":"closed","Body":"## Proposed Changes\r\n- Move ADVF to `Interop.Ole32`.\r\n- Make `IViewObject.SetAdvise` and `IViewObject.GetAdvise` `PreserveSig`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2238)","Url":"https://github.com/dotnet/winforms/pull/2238","RelatedDescription":"Closed or merged PR \"Cleanup ADVF constants\" (#2238)"},{"Id":"513005244","IsPullRequest":true,"CreatedAt":"2019-10-29T22:06:32","Actor":"gpetrou","Number":"2217","RawContent":null,"Title":"Use separate file for MARGINS in UxTheme","State":"closed","Body":"## Proposed changes\r\n\r\n- Move MARGINS struct to a separate file in UxTheme.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2217)","Url":"https://github.com/dotnet/winforms/pull/2217","RelatedDescription":"Closed or merged PR \"Use separate file for MARGINS in UxTheme\" (#2217)"},{"Id":"514103441","IsPullRequest":true,"CreatedAt":"2019-10-29T17:43:26","Actor":"hughbe","Number":"2240","RawContent":null,"Title":"Cleanup GetClientRect interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup GetClientRect interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2240)","Url":"https://github.com/dotnet/winforms/pull/2240","RelatedDescription":"Open PR \"Cleanup GetClientRect interop\" (#2240)"},{"Id":"513992601","IsPullRequest":true,"CreatedAt":"2019-10-29T15:09:10","Actor":"hughbe","Number":"2239","RawContent":null,"Title":"Cleanup AdjustWindowRectEx and friends","State":"open","Body":"## Proposed Changes\r\n- Cleanup AdjustWindowRectEx/AdjustWindowRectExForDpi\r\n- Cleanup LPToDp\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2239)","Url":"https://github.com/dotnet/winforms/pull/2239","RelatedDescription":"Open PR \"Cleanup AdjustWindowRectEx and friends\" (#2239)"},{"Id":"512966503","IsPullRequest":true,"CreatedAt":"2019-10-29T11:07:08","Actor":"gpetrou","Number":"2212","RawContent":null,"Title":"Remove WS constants","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove WS constants and replace theirs usages with WS enum values.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2212)","Url":"https://github.com/dotnet/winforms/pull/2212","RelatedDescription":"Closed or merged PR \"Remove WS constants\" (#2212)"},{"Id":"513374749","IsPullRequest":true,"CreatedAt":"2019-10-29T10:39:26","Actor":"hughbe","Number":"2229","RawContent":null,"Title":"Add more Control tests","State":"closed","Body":"## Proposed Changes\r\n- Add more tests for Control and some base classes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2229)","Url":"https://github.com/dotnet/winforms/pull/2229","RelatedDescription":"Closed or merged PR \"Add more Control tests\" (#2229)"},{"Id":"513802861","IsPullRequest":true,"CreatedAt":"2019-10-29T10:35:22","Actor":"hughbe","Number":"2233","RawContent":null,"Title":"Cleanup formatting of EventHandler invokes","State":"closed","Body":"They should be on their own lines\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2233)","Url":"https://github.com/dotnet/winforms/pull/2233","RelatedDescription":"Closed or merged PR \"Cleanup formatting of EventHandler invokes\" (#2233)"},{"Id":"513824279","IsPullRequest":false,"CreatedAt":"2019-10-29T10:30:16","Actor":"hughbe","Number":"2235","RawContent":null,"Title":"Don't force creation of `Handle` in `OnHandleCreated`","State":"open","Body":"See https://github.com/dotnet/winforms/pull/2141\r\n\r\nThe base class `Control.OnHandleCreated` checks for `IsHandleCreated` and does nothing if the handle isn't created.\r\n\r\nIn other sub-classes, we do not check `if (IsHandleCreated)` before accessing `this.Handle` which forces creation. This leads to strange recursive behaviour as `OnHandleCreated` is called again.\r\n\r\nMy opinion is that we should fix this oversight in base classes to ensure that they don't create the `Handle` in `OnHandleCreated` if a `Handle` doesn't exist\r\n","Url":"https://github.com/dotnet/winforms/issues/2235","RelatedDescription":"Open issue \"Don't force creation of `Handle` in `OnHandleCreated`\" (#2235)"},{"Id":"513803462","IsPullRequest":false,"CreatedAt":"2019-10-29T09:50:49","Actor":"hughbe","Number":"2234","RawContent":null,"Title":"Test failures can cause hangs by calling `OnThreadException` resulting in dialog","State":"open","Body":"E.g. in https://github.com/dotnet/winforms/pull/2141\r\nSee https://github.com/dotnet/winforms/pull/2141#issuecomment-547281156 and https://github.com/dotnet/winforms/pull/2141#issuecomment-547328796\r\n\r\nWe either need to override `_threadExceptionHandler` (i.e. `Application.ThreadException`) to simply throw the exception or to disable `SystemInformation.UserInteractive`","Url":"https://github.com/dotnet/winforms/issues/2234","RelatedDescription":"Open issue \"Test failures can cause hangs by calling `OnThreadException` resulting in dialog\" (#2234)"},{"Id":"513763045","IsPullRequest":true,"CreatedAt":"2019-10-29T08:30:11","Actor":"vladimir-krestov","Number":"2232","RawContent":null,"Title":"Adding DateTimeEditor unit tests cases","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n## Issue\r\n- There aren't unit tests cases for DateTimeEditor\r\n\r\n## Proposed changes\r\n\r\n- Add test cases to test DateTimeEditor\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- No\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- The unit testing\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core version: 3.1.100-preview2-014533\r\n- Microsoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2232)","Url":"https://github.com/dotnet/winforms/pull/2232","RelatedDescription":"Open PR \"Adding DateTimeEditor unit tests cases\" (#2232)"},{"Id":"513262492","IsPullRequest":true,"CreatedAt":"2019-10-29T02:08:02","Actor":"dotnet-maestro[bot]","Number":"2225","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191027.3\r\n- **Date Produced**: 10/27/2019 7:01 PM\r\n- **Commit**: 5ce0aaed2f8df9cd2fe0221a426c021efe37f655\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19527.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19527.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19527.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19527.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2225)","Url":"https://github.com/dotnet/winforms/pull/2225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2225)"},{"Id":"513271880","IsPullRequest":true,"CreatedAt":"2019-10-29T02:07:06","Actor":"dotnet-maestro[bot]","Number":"2226","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191027.2\r\n- **Date Produced**: 10/27/2019 4:16 PM\r\n- **Commit**: b3749864f47f38599a94070497225c665124fe82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19527.2\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2226)","Url":"https://github.com/dotnet/winforms/pull/2226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#2226)"},{"Id":"513518060","IsPullRequest":true,"CreatedAt":"2019-10-28T19:45:12","Actor":"weltkante","Number":"2230","RawContent":null,"Title":"WIP: add designer attribute tests","State":"open","Body":"Add tests to ensure that strings specified in designer attributes correspond to existing metadata\r\n\r\nContributes to #2185, #2172, #1115 \r\n\r\n## Proposed changes\r\n\r\n- Attributes may specify strings to refer to types and other metadata (properties, events). Make sure these actually still exist in the product. These tests help preventing dead references when porting from Desktop to Core and also can detect regressions in future refactoring when renaming something which is technically internal but forgetting that it may have been referenced by attribute strings.\r\n\r\n## Customer Impact\r\n\r\n- Raise product quality by detecting dead metadata references in attributes\r\n\r\n## Regression? \r\n\r\n- Yes (most of the references which are dead now did exist in Desktop Framework)\r\n\r\n## Risk\r\n\r\n- None, the change is test-only and exists only to detect regressions.\r\n\r\n### Before\r\n\r\n- Some types and properties carry attributes which refer to nonexisting metadata. These go by undetected until reported by someone.\r\n\r\n### After\r\n\r\n- Attributes referring to nonexistant metadata should be detected during testing.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual lookup of attributes which may refer to other metadata by name. May have missed some but the list can be extended anytime.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2230)","Url":"https://github.com/dotnet/winforms/pull/2230","RelatedDescription":"Open PR \"WIP: add designer attribute tests\" (#2230)"},{"Id":"513330858","IsPullRequest":true,"CreatedAt":"2019-10-28T14:13:50","Actor":"M-Lipin","Number":"2228","RawContent":null,"Title":"Porting Narrator announcement for StringCollectionEditor items","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2188 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding StringCollectionEditorTextBox class derived from standard TextBox with enhanced accessibility (UI Automation and UI Notification) support.\r\n- Adding UIA notification announcement for item navigation within StringCollectionEditorTextBox.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Visually impaired user will be able to distinguish the currently edited/selected/navigated string item within StringCollectionEditor control.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nNo announcement for SringCollectionEditor navigation.\r\n\r\n### After\r\n\r\nSringCollectionEditor item navigation is announced properly.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Automation tests (to run)\r\n- Unit tests (to be implemented)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\nThere is no UI changes but changes in accessibility providers: IAccessible is partially changed to UI Automation.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\nNet Core version: 3.1.0-preview1.19458.7\r\nMicrosoft Windows [Version 10.0.18362.418]\r\n\r\nInitial PR: #2189 \r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2228)","Url":"https://github.com/dotnet/winforms/pull/2228","RelatedDescription":"Open PR \"Porting Narrator announcement for StringCollectionEditor items\" (#2228)"},{"Id":"513274718","IsPullRequest":false,"CreatedAt":"2019-10-28T13:56:24","Actor":"KamranShahid","Number":"2227","RawContent":null,"Title":"Trying to publish a windows .net core 3.0 application for linux","State":"closed","Body":"I have created a winform desktop application in .net core 3.0.\r\nApplication is publishing for windows but not for linux\r\nIs it not supported yet?\r\nAnyway i can test that application on linux (e.g. ubuntu 16.0 x64)\r\n","Url":"https://github.com/dotnet/winforms/issues/2227","RelatedDescription":"Closed issue \"Trying to publish a windows .net core 3.0 application for linux\" (#2227)"},{"Id":"513210738","IsPullRequest":true,"CreatedAt":"2019-10-28T11:54:25","Actor":"vladimir-krestov","Number":"2224","RawContent":null,"Title":"Porting System.ComponentModel.Design.DateTimeEditor","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2019\r\nRelated issue: #1115\r\nRelated PR: #2165\r\nHave you experienced this same bug with .NET Framework?: No\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add System.ComponentModel.Design.DateTimeEditor class\r\n- Make code refactoring\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Changed DateTime editor to compliance with .Net 4.8.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- TextBox editor:\r\n![image](https://user-images.githubusercontent.com/49272759/67670170-65c63a80-f984-11e9-8af0-438a2727a30c.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n- DateTime editor:\r\n![image](https://user-images.githubusercontent.com/49272759/67670185-6e1e7580-f984-11e9-97f2-4c9f95bf2d48.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.418]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2224)","Url":"https://github.com/dotnet/winforms/pull/2224","RelatedDescription":"Closed or merged PR \"Porting System.ComponentModel.Design.DateTimeEditor\" (#2224)"},{"Id":"513139320","IsPullRequest":true,"CreatedAt":"2019-10-28T07:37:50","Actor":"gpetrou","Number":"2223","RawContent":null,"Title":"Remove UnsafeNativeMethods class from DesignerActionPanel.cs","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove UnsafeNativeMethods class from DesignerActionPanel.cs\r\n- Use existing Interop methods and enum instead.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2223)","Url":"https://github.com/dotnet/winforms/pull/2223","RelatedDescription":"Closed or merged PR \"Remove UnsafeNativeMethods class from DesignerActionPanel.cs\" (#2223)"},{"Id":"513127511","IsPullRequest":true,"CreatedAt":"2019-10-28T07:11:50","Actor":"RussKie","Number":"2222","RawContent":null,"Title":"Repalce `ToolStripImageIndexEditor` with `ImageIndexEditor`","State":"closed","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nResolves #2122\r\nOriginal https://github.com/dotnet/winforms/pull/2140\r\n\r\n## Proposed changes\r\n\r\n- `ToolStripImageIndexEditor` does not exist, replace it with `ImageIndexEditor`\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2222)","Url":"https://github.com/dotnet/winforms/pull/2222","RelatedDescription":"Closed or merged PR \"Repalce `ToolStripImageIndexEditor` with `ImageIndexEditor`\" (#2222)"},{"Id":"513115781","IsPullRequest":true,"CreatedAt":"2019-10-28T07:11:14","Actor":"RussKie","Number":"2220","RawContent":null,"Title":"fix 2017 port `BinaryEditor`","State":"closed","Body":"Port BinaryEditor from NET Fx\r\n\r\nCloses #2017\r\n\r\nOriginal PR: https://github.com/dotnet/winforms/pull/2123\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2220)","Url":"https://github.com/dotnet/winforms/pull/2220","RelatedDescription":"Closed or merged PR \"fix 2017 port `BinaryEditor`\" (#2220)"},{"Id":"513126393","IsPullRequest":true,"CreatedAt":"2019-10-28T06:50:21","Actor":"gpetrou","Number":"2221","RawContent":null,"Title":"WIP: cleanup `DesignerActionPanel`","State":"open","Body":"## Proposed changes\r\n\r\n- SafeNativeMethods class seems to be unused, so remove it.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2221)","Url":"https://github.com/dotnet/winforms/pull/2221","RelatedDescription":"Open PR \"WIP: cleanup `DesignerActionPanel`\" (#2221)"},{"Id":"513004100","IsPullRequest":true,"CreatedAt":"2019-10-28T00:54:07","Actor":"gpetrou","Number":"2216","RawContent":null,"Title":"Use separate file for PALETTEENTRY in Gdi32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add Interop.PALETTEENTRY struct.\r\n- Replace usages of PALETTEENTRY with the above struct.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2216)","Url":"https://github.com/dotnet/winforms/pull/2216","RelatedDescription":"Closed or merged PR \"Use separate file for PALETTEENTRY in Gdi32\" (#2216)"},{"Id":"513039473","IsPullRequest":false,"CreatedAt":"2019-10-27T23:39:10","Actor":"hughbe","Number":"2219","RawContent":null,"Title":"Correct cases of `Control.Handle != IntPtr.Zero`","State":"open","Body":"E.g.  `VisualStyleRenderer`\r\n```cs\r\n\r\n/// <summary>\r\n///  Given a graphics object and bounds to draw in, this method effectively asks the passed in\r\n///  control's parent to draw itself in there (it sends WM_ERASEBKGND & WM_PRINTCLIENT messages\r\n///  to the parent).\r\n/// </summary>\r\npublic void DrawParentBackground(IDeviceContext dc, Rectangle bounds, Control childControl)\r\n{\r\n    if (dc == null)\r\n    {\r\n        throw new ArgumentNullException(nameof(dc));\r\n    }\r\n    if (childControl == null)\r\n    {\r\n        throw new ArgumentNullException(nameof(childControl));\r\n    }\r\n\r\n    if (bounds.Width < 0 || bounds.Height < 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if (childControl.Handle != IntPtr.Zero)\r\n    {\r\n        using (WindowsGraphicsWrapper wgr = new WindowsGraphicsWrapper(dc, AllGraphicsProperties))\r\n        {\r\n            HandleRef hdc = new HandleRef(wgr, wgr.WindowsGraphics.DeviceContext.Hdc);\r\n            RECT rc = bounds;\r\n            lastHResult = (int)UxTheme.DrawThemeParentBackground(childControl, hdc, ref rc);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIntention clearly to check `IsHandleCreated`, but `Handle != IntPtr.Zero` forces handle created","Url":"https://github.com/dotnet/winforms/issues/2219","RelatedDescription":"Open issue \"Correct cases of `Control.Handle != IntPtr.Zero`\" (#2219)"},{"Id":"513002178","IsPullRequest":true,"CreatedAt":"2019-10-27T20:32:29","Actor":"gpetrou","Number":"2213","RawContent":null,"Title":"Add WS_EX enum and remove WS_EX constants","State":"closed","Body":"## Proposed changes\r\n\r\n- Add WS_EX enum.\r\n- Remove WS_EX constants and replace their usages with the values from the new enum.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2213)","Url":"https://github.com/dotnet/winforms/pull/2213","RelatedDescription":"Closed or merged PR \"Add WS_EX enum and remove WS_EX constants\" (#2213)"},{"Id":"513003515","IsPullRequest":true,"CreatedAt":"2019-10-27T20:30:37","Actor":"gpetrou","Number":"2215","RawContent":null,"Title":"Move RGBQUAD struct to Gdi32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move RGBQUAD from NativeMethods.cs to a separate file in Gdi32.\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2215)","Url":"https://github.com/dotnet/winforms/pull/2215","RelatedDescription":"Closed or merged PR \"Move RGBQUAD struct to Gdi32\" (#2215)"},{"Id":"513002857","IsPullRequest":true,"CreatedAt":"2019-10-27T20:29:41","Actor":"gpetrou","Number":"2214","RawContent":null,"Title":"Rename ODS to Interop.ODS for consistency","State":"closed","Body":"## Proposed changes\r\n\r\n- All other files use Interop. prefix, so change this file to be consistent.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2214)","Url":"https://github.com/dotnet/winforms/pull/2214","RelatedDescription":"Closed or merged PR \"Rename ODS to Interop.ODS for consistency\" (#2214)"},{"Id":"513006287","IsPullRequest":true,"CreatedAt":"2019-10-27T18:59:14","Actor":"gpetrou","Number":"2218","RawContent":null,"Title":"Add COLORREF helper class and move COLORREF methods there","State":"open","Body":"##  Proposed changes\r\n\r\n- Add COLORREF helper class.\r\n- Move COLORREF methods from SafeNativeMethods there and update usages.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2218)","Url":"https://github.com/dotnet/winforms/pull/2218","RelatedDescription":"Open PR \"Add COLORREF helper class and move COLORREF methods there\" (#2218)"},{"Id":"512952364","IsPullRequest":false,"CreatedAt":"2019-10-27T11:15:21","Actor":"raffaeler","Number":"2211","RawContent":null,"Title":"Support injecting forms with DI","State":"open","Body":"The new \"Worker Service\" template in VS2019 provide a very elegant way to use dependency injection even for simple console applications, by using the ASP.NET Core infrastructure.\r\nI created a small sample that is able to use the same infrastructure to inject forms and the ability to receive DI-registered services into the forms constructor.\r\n\r\nThe problem is of course the designer pretending to deal with default constructors. The designer should be modified to support the DI and non-default constructors.\r\n\r\nOnce the designer will support DI, it would also be useful to create a new template for Winforms creating a skeleton application with all the required references and code to use DI, logging and configuration normally used in ASP.NET Core apps.\r\n\r\nP.S. I added this requesti for WPF in Visual Studio Developer Community because designer-related features are managed there: https://developercommunity.visualstudio.com/idea/795364/modify-the-wpf-designer-to-support-dependency-inje.html","Url":"https://github.com/dotnet/winforms/issues/2211","RelatedDescription":"Open issue \"Support injecting forms with DI\" (#2211)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-30T05:30:59.4077017Z","RunDurationInMilliseconds":598}