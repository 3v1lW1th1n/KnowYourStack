{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null},{"Title":"Previewing Files Inside Your Xamarin.iOS App","PublishedOn":"2018-07-25T18:21:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If your app interacts with files, such as email attachments or photos, allowing users to preview those files without leaving your app is a great way to enhance the user&#8217;s experience....","Href":"https://blog.xamarin.com/previewing-files-with-xamarin-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8060149023","Type":"PullRequestEvent","CreatedAt":"2018-08-03T02:11:59","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2028","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] _LinkAssembliesNoShrink timestamps\" (#2028) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/3d999d32c3dcd78f687f0976f0b5a6a985736a75#diff-42a9402e6466c65d49d0ee7caf21f327R164\r\n\r\nSince 3d999d32, a test is failing downstream in monodroid that is\r\ntesting the following scenario:\r\n- With `Fast Deployment` enabled, run `/t:Install`\r\n- Make a small code change\r\n- Run `/t:Install` again\r\n- Assemblies are getting uploaded to the device that should already be\r\n  up to date!\r\n\r\n3d999d32 was addressing a symptom of the problem, but not the root\r\ncause. The `OutputStep` of the linker has various uses of `File.Copy`,\r\nwhich *preserves* the timestamp of the source file.\r\n\r\nhttps://github.com/mono/linker/blob/615f62c32705322aeb0f3f15212a3dbb94b7f0aa/linker/Linker.Steps/OutputStep.cs#L187\r\n\r\nThe solution, then, is to run the `<Touch />` MSBuild task on the\r\nlinker's output. This will keep the proper timestamps, and a portion\r\nof the changes in 3d999d32 are no longer needed.\r\n\r\nI updated the `CheckTimestamps` test to validate `Debug` and `Release`\r\nconfigurations, so `_LinkAssembliesShrink` is also tested in this\r\nmanner. It turns out `_LinkAssembliesShrink` is currently working\r\nfine, since it uses `$(_AndroidLinkFlag)` as its `Outputs`."},{"Id":"8059355158","Type":"PullRequestEvent","CreatedAt":"2018-08-02T21:38:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2036","RelatedDescription":"Opened pull request \"Bump to xamarin/xamarin-android-tools:d15-9@e5f2000b\" (#2036) at xamarin/xamarin-android","RelatedBody":"Context: https://paper.dropbox.com/doc/OpenJDK-and-You--AH1yWKdVXgno~uXYfmcUAZTwAg-NoECAe2XkBQeoxFfGL6ea\r\nContext: https://github.com/xamarin/xamarin-android-tools/pull/29#issuecomment-400048306\r\n\r\nFixes: http://work.devdiv.io/646086\r\nFixes: http://work.devdiv.io/652760\r\nFixes: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/597752\r\nFixes: https://github.com/xamarin/xamarin-android-tools/issues/26\r\nFixes: https://github.com/xamarin/xamarin-android-tools/issues/39\r\n\r\nUpdate & export `%JAVA_HOME%`, `%PATH%` on Windows."},{"Id":"8058596371","Type":"IssuesEvent","CreatedAt":"2018-08-02T18:59:48","Actor":"Ranzed","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2035","RelatedDescription":"Opened issue \"Android native crash on Lo\" (#2035) at xamarin/","RelatedBody":"I have complex cross-platform application. After updating to Xamarin.Android 8.0 (not target framework, just update IDE+sdk) and releasing new version of my app i got native crash\r\n```\r\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\npid: 0, tid: 0 >>> com.mypackage.myapp <<<\r\n\r\nbacktrace:\r\n  #00  pc 00000000002bb0ad  /system/lib64/libhoudini.so\r\n  #01  pc 00000000002d8f21  /system/lib64/libhoudini.so\r\n  #02  pc 00000000002becf4  /system/lib64/libhoudini.so\r\n  #03  pc 00000000002beda1  /system/lib64/libhoudini.so\r\n  #04  pc 00000000002f73b4  /system/lib64/libhoudini.so\r\n  #05  pc 00000000002f754b  /system/lib64/libhoudini.so\r\n  #06  pc 0000000000000e7a  <unknown>\r\n  #07  pc 00000000007fb0bf  <unknown>\r\n```\r\nIt happens only on Xiaomi MiPad 2 with Lollipop (_Build: Xiaomi/latte/latte:5.1/LMY47I_).\r\nPrevious version, build with prevoius Xamarin.Android 7.* works fine. \r\nlibhoudini is a proprietary ARM translation layer for x86-powered Android devices. But all my libs have version for all ABI's in single apk file.\r\n![lib_abi](https://user-images.githubusercontent.com/11093752/43604242-5c11b31c-96a6-11e8-8804-c415fa72b16f.png)\r\n\r\nThe only diff i found is that in assemblies there is no Mono.CSharp.dll in new version, but it was in previous version.\r\n![dll_in_zip](https://user-images.githubusercontent.com/11093752/43604270-6a32b914-96a6-11e8-8c5a-ee5056a81b19.png)\r\n\r\nApp works fine on other devices (Xiaomi phones, Lenovo tab with Intel Atom CPU and Lollipop), so i have no idea why only MiPad2 got a crash.\r\nI can't get physical acces to this device and see logcat (crash on customer's device), but have full bugreport log (tombstone in attach file)\r\nCan anyone help? \r\n[tombstone_log.txt](https://github.com/xamarin/xamarin-android/files/2254776/tombstone_log.txt)"},{"Id":"8058596371","Type":"IssuesEvent","CreatedAt":"2018-08-02T18:59:48","Actor":"Ranzed","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2035","RelatedDescription":"Opened issue \"Android native crash on Lo\" (#2035) at xamarin/","RelatedBody":"I have complex cross-platform application. After updating to Xamarin.Android 8.0 (not target framework, just update IDE+sdk) and releasing new version of my app i got native crash\r\n```\r\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\npid: 0, tid: 0 >>> com.mypackage.myapp <<<\r\n\r\nbacktrace:\r\n  #00  pc 00000000002bb0ad  /system/lib64/libhoudini.so\r\n  #01  pc 00000000002d8f21  /system/lib64/libhoudini.so\r\n  #02  pc 00000000002becf4  /system/lib64/libhoudini.so\r\n  #03  pc 00000000002beda1  /system/lib64/libhoudini.so\r\n  #04  pc 00000000002f73b4  /system/lib64/libhoudini.so\r\n  #05  pc 00000000002f754b  /system/lib64/libhoudini.so\r\n  #06  pc 0000000000000e7a  <unknown>\r\n  #07  pc 00000000007fb0bf  <unknown>\r\n```\r\nIt happens only on Xiaomi MiPad 2 with Lollipop (_Build: Xiaomi/latte/latte:5.1/LMY47I_).\r\nPrevious version, build with prevoius Xamarin.Android 7.* works fine. \r\nlibhoudini is a proprietary ARM translation layer for x86-powered Android devices. But all my libs have version for all ABI's in single apk file.\r\n![lib_abi](https://user-images.githubusercontent.com/11093752/43604242-5c11b31c-96a6-11e8-8804-c415fa72b16f.png)\r\n\r\nThe only diff i found is that in assemblies there is no Mono.CSharp.dll in new version, but it was in previous version.\r\n![dll_in_zip](https://user-images.githubusercontent.com/11093752/43604270-6a32b914-96a6-11e8-8c5a-ee5056a81b19.png)\r\n\r\nApp works fine on other devices (Xiaomi phones, Lenovo tab with Intel Atom CPU and Lollipop), so i have no idea why only MiPad2 got a crash.\r\nI can't get physical acces to this device and see logcat (crash on customer's device), but have full bugreport log (tombstone in attach file)\r\nCan anyone help? \r\n[tombstone_log.txt](https://github.com/xamarin/xamarin-android/files/2254776/tombstone_log.txt)"},{"Id":"8058586460","Type":"PullRequestEvent","CreatedAt":"2018-08-02T18:57:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2031","RelatedDescription":"Merged pull request \"Bump to xamarin/Java.Interop:d15-9@b873e81b\" (#2031) at xamarin/xamarin-android","RelatedBody":"`generator` \"fixed\" output now contains all of the `class-parse` XML\r\nattributes, not a select subset.\r\n\r\nDynamic JVM loading instead of `Java.Runtime.Environment.dll.config`."},{"Id":"8057762668","Type":"PullRequestEvent","CreatedAt":"2018-08-02T16:17:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2033","RelatedDescription":"Merged pull request \"Bump to xamarin/xamarin-android-api-compatibility:d15-9@74bcc72b\" (#2033) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/2031\r\nContext: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/3700/\r\nContext: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/3700/API_20Compatibility_20Checks/\r\n\r\nThis will hopefully allow the Java.Interop bump on d15-9 to pass."},{"Id":"8057238559","Type":"PullRequestEvent","CreatedAt":"2018-08-02T14:53:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2027","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix Aapt2 warnings showing as errors\" (#2027) at xamarin/xamarin-android","RelatedBody":"Fixes (again) #1770\r\n\r\nOn windows we are hitting the same issue where the warnings\r\n`aapt2` is producing are being logged as errors.\r\n\r\nThe weird part is that the \"file\" group was not being populated\r\nwith the right informaton.. This turns out to be down to how\r\n`aapt2` is reporting the warnings..\r\n\r\n\tW/ResourceType(23681): For resource 0x0101053d, entry index(1341) is beyond type entryCount(733)\r\n\tW/ResourceType( 5536): For resource 0x0101053d, entry index(1341) is beyond type entryCount(1155)\r\n\t\t       ^\r\n\t\t    Hmmmmm.\r\n\r\nThis space throws off our regex and results in the entire line\r\nending up in the `message` property.\r\nSo the fix is to update the regex to allow spaces for the `line`\r\ncapture group. We then also need to Trim that value before passing\r\nit into `int.Parse` to ensure we don't get an error."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8060615009","Type":"PullRequestEvent","CreatedAt":"2018-08-03T05:21:49","Actor":"sung-su","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3473","RelatedDescription":"Opened pull request \"[Tizen] Fix minor bugs on CarouselPage and ActivityIndicator\" (#3473) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n1. Fixed `CarouselPage` \r\n- Fixed the issue of `CarouselPage`, The current page is not chagned when `CarouselPage` have one page and another page is added after.\r\n- When children of `CarouselPage` is changed, the layout bound should be reset. Because inner container is temporarily empty by `UnPackAll` method of inner container.\r\n\r\n2. Fixed ActivityIndicator.IsRunning condition\r\n- Update `IsRunning` property when the `IsEnabled` property is updated.\r\n![ai-tv](https://user-images.githubusercontent.com/10704816/43625471-2bb58d7e-9728-11e8-8dcf-6272618b5452.gif)\r\n![ai-mobile](https://user-images.githubusercontent.com/10704816/43625475-2eedfc42-9728-11e8-87cd-2f0a70d48abc.gif)\r\n\r\n\r\n### Platforms Affected ###\r\n\r\nTizen\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8060408568","Type":"IssuesEvent","CreatedAt":"2018-08-03T03:52:53","Actor":"knightmeister","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3472","RelatedDescription":"Opened issue \"[UWP] Cannot set GroupTemplate height in Xamarin Forms\" (#3472) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThis happens only on UWP. I am trying to set a different height on a group header within my `ListView`, and it's not working. The content of the header is cropped, but the layout height for the group header is not reduced.\r\n\r\n### Steps to Reproduce\r\n\r\nTo do a quick reproduction of this, I started with the [Xamarin Forms listview grouping sample][2]. I've included the XAML and code behind, the view models are [available at Github][3].\r\n\r\n    <?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n    <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n                 xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n                 xmlns:local=\"clr-namespace:ListView\"\r\n                 x:Class=\"ListView.MainPage\"\r\n                 BackgroundColor=\"#181f32\">\r\n    \r\n        <ContentPage.Content>\r\n            <ListView x:Name =\"lstView\" IsGroupingEnabled=\"true\" \r\n                      GroupDisplayBinding=\"{Binding LongName}\" \r\n                      GroupShortNameBinding=\"{Binding ShortName}\"\r\n                      HasUnevenRows=\"True\">\r\n                <ListView.GroupHeaderTemplate>\r\n                    <DataTemplate>\r\n                        <ViewCell Height=\"10\">\r\n                            <ContentView BackgroundColor=\"Red\">\r\n                                <Label Text=\"{Binding LongName}\"\r\n                                   FontAttributes=\"Bold\"\r\n                                   FontSize=\"12\"\r\n                                   TextColor=\"Black\"\r\n                                   BackgroundColor=\"Yellow\"/>\r\n    \r\n                            </ContentView>\r\n                        </ViewCell>\r\n                    </DataTemplate>\r\n                </ListView.GroupHeaderTemplate>\r\n                <ListView.ItemTemplate>\r\n                    <DataTemplate>\r\n                        <ViewCell Height=\"44\">\r\n                            <Grid BackgroundColor=\"White\">\r\n                                <Grid.RowDefinitions>\r\n                                    <RowDefinition Height=\"*\" />\r\n                                    <RowDefinition Height=\"*\" />\r\n                                </Grid.RowDefinitions>\r\n                                <Label Text=\"{Binding Name}\" Grid.Row=\"0\" />\r\n                                <Label Text=\"{Binding Comment}\" Grid.Row=\"1\" />\r\n                            </Grid>\r\n                        </ViewCell>\r\n                    </DataTemplate>\r\n                </ListView.ItemTemplate>\r\n            </ListView>\r\n        </ContentPage.Content>\r\n    \r\n    </ContentPage>\r\n\r\nAnd the code behind:\r\n\r\n\tpublic partial class MainPage : ContentPage\r\n\t{\r\n\r\n        private ObservableCollection<GroupedVeggieModel> grouped { get; set; }\r\n\r\n        public MainPage()\r\n\t\t{\r\n\t\t\tInitializeComponent();\r\n\r\n            grouped = new ObservableCollection<GroupedVeggieModel>();\r\n            var veggieGroup = new GroupedVeggieModel() { LongName = \"vegetables\", ShortName = \"v\" };\r\n            var fruitGroup = new GroupedVeggieModel() { LongName = \"fruit\", ShortName = \"f\" };\r\n            veggieGroup.Add(new VeggieModel() { Name = \"celery\", IsReallyAVeggie = true, Comment = \"try ants on a log\" });\r\n            veggieGroup.Add(new VeggieModel() { Name = \"tomato\", IsReallyAVeggie = false, Comment = \"pairs well with basil\" });\r\n            veggieGroup.Add(new VeggieModel() { Name = \"zucchini\", IsReallyAVeggie = true, Comment = \"zucchini bread > bannana bread\" });\r\n            veggieGroup.Add(new VeggieModel() { Name = \"peas\", IsReallyAVeggie = true, Comment = \"like peas in a pod\" });\r\n            fruitGroup.Add(new VeggieModel() { Name = \"banana\", IsReallyAVeggie = false, Comment = \"available in chip form factor\" });\r\n            fruitGroup.Add(new VeggieModel() { Name = \"strawberry\", IsReallyAVeggie = false, Comment = \"spring plant\" });\r\n            fruitGroup.Add(new VeggieModel() { Name = \"cherry\", IsReallyAVeggie = false, Comment = \"topper for icecream\" });\r\n            grouped.Add(veggieGroup); grouped.Add(fruitGroup);\r\n            lstView.ItemsSource = grouped;\r\n        }\r\n\t}\r\n\r\n### Expected Behavior\r\nThe list view group headers do not have padding between the header and the first list item. This works as expected in Android and iOS.\r\n\r\n### Actual Behavior\r\nUWP only - There is a large space between the group header and the first list item.\r\n\r\n  [1]: https://i.stack.imgur.com/OprXZ.png\r\n  [2]: https://github.com/xamarin/xamarin-forms-samples/blob/master/UserInterface/ListView/Grouping/\r\n  [3]: https://github.com/xamarin/xamarin-forms-samples/blob/master/UserInterface/ListView/Grouping/groupingSampleListView/groupingSampleListView/ViewModel/veggieModel.cs\r\n\r\n### Screenshots\r\n![bug](https://user-images.githubusercontent.com/1528425/43623409-6e88c368-9724-11e8-85ae-cbb68ff162e5.png)\r\n\r\n"},{"Id":"8059921173","Type":"IssuesEvent","CreatedAt":"2018-08-03T00:40:05","Actor":"somkun","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3471","RelatedDescription":"Opened issue \"Feature Request - Dotnet New Templates\" (#3471) at xamarin/Xamarin.Forms","RelatedBody":"With Xamarin Forms being .net standard, could we get dotnet templates? I'd love to be able to develop Android apps on my Linux machine.\r\n\r\nI'd be willing to do the work if someone could link me to the Visual Studio templates to base them off."},{"Id":"8059812361","Type":"PullRequestEvent","CreatedAt":"2018-08-02T23:56:20","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3468","RelatedDescription":"Merged pull request \"[C] fix TargetNullValue Bindings\" (#3468) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nDue to a flux in the matrix, Bindings with a TargetNullValue assigned\r\nwere always returning that value. It had the advantage of being right\r\nsometimes, but the inconvenient for being wrong, most of the times.\r\n\r\nBy properly aligning the bits of the register with the sun at beer time,\r\nwe can avoid that side effect, and actually returns a value when the\r\nbinding is succesful, and the TargetNullValue whem the Binding returns\r\nnull.\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #3467\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Platforms Affected ###\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8059799697","Type":"PullRequestEvent","CreatedAt":"2018-08-02T23:51:37","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2965","RelatedDescription":"Merged pull request \"[Android] Add IsSmoothScrollEnabled platform specific to control tab change animation\" (#2965) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis adds `IsSmoothScrollEnabled` platform specific to Android's `TabbedPage` to enable/disable scroll animation as the user navigates from one tab to another manually or programmatically. Previously, a user sitting on the last tab and tapping the first one would see a flipbook-like animation visiting every tab in between which may not be ideal for some use cases. This platform-specific controls this behavior.\r\n\r\nAlso, `EnableGesture` property should not be set by `IsSmoothScrollEnabled` (previously `UseAnimations`). This property is being controlled by `IsSwipePagingEnabled` and initially should be set by that platform specific instead.\r\n\r\nPlease let me know how to update docs.\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #2948 \r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `IsSmoothScrollEnabled`  boolean and its platform specific methods\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"8059799690","Type":"IssuesEvent","CreatedAt":"2018-08-02T23:51:37","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2948","RelatedDescription":"Closed issue \"[Android] Create a platform specific for UseAnimations in TabbedPageRenderer\" (#2948) at xamarin/Xamarin.Forms","RelatedBody":"Through a platform specific, please let us control whether the new current page should have a transition animation.\r\n\r\n```\r\ninternal bool UseAnimations\r\n{\r\n\tget { return _useAnimations; }\r\n\tset\r\n\t{\r\n\t\tFormsViewPager pager = _viewPager;\r\n\r\n\t\t_useAnimations = value;\r\n\t\tif (pager != null)\r\n\t\t\tpager.EnableGesture = value;\r\n\t}\r\n}\r\n```\r\n\r\nThis property is used when `_viewPager` is being constructed:\r\n\r\n```\r\nFormsViewPager CreateFormsViewPager(Context context, TabbedPage tabbedPage)\r\n{\r\n\treturn new FormsViewPager(context)\r\n\t{\r\n\t\tOverScrollMode = OverScrollMode.Never,\r\n\t\tEnableGesture = UseAnimations,\r\n\t\tLayoutParameters = new LayoutParams(LayoutParams.MatchParent, LayoutParams.MatchParent),\r\n\t\tAdapter = new FormsFragmentPagerAdapter<Page>(tabbedPage, FragmentManager) { CountOverride = tabbedPage.Children.Count }\r\n\t};\r\n}\r\n```\r\n\r\nAs you can see, it's setting `EnableGesture` which is also being set by the platform specific `IsSwipePagingEnabled` to control swiping on the page:\r\n\r\n```\r\nvoid UpdateSwipePaging()\r\n{\r\n\t_viewPager.EnableGesture = Element.OnThisPlatform().IsSwipePagingEnabled();\r\n}\r\n```\r\n\r\nThis is a conflict of interest. In my opinion, `IsSwipePagingEnabled` should control `EnableGesture` everywhere and a platform specific should be created which controls the second parameter when invoking `_viewPager.SetCurrentItem()`.\r\n\r\nRight now, we can disable swiping on a `TabbedPage`, but we cannot control transition animations when we programmatically change current page or use the tab bar.\r\n\r\n"},{"Id":"8059429023","Type":"IssuesEvent","CreatedAt":"2018-08-02T21:56:53","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3354","RelatedDescription":"Closed issue \"3.2.0.637442-pre1 nuget 0.0.0.0 Version number\" (#3354) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nXamarin Forms from 3.2.0.637442-pre1 nuget does not start in UWP it says\r\nXamarin.Forms.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null not found\r\nI looked into the Version number of the File and the Version Number is now\r\nXamarin.Forms.Core, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\r\n\r\nIs this intended to have a Version number of 0.0.0.0 because before it was Version number 2.0.0.0\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Xamarin.Froms.UWP Project move to neweset version.\r\n2. Start Project exception occours \r\nXamarin.Forms.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null not found\r\n\r\n### Expected Behavior\r\nProject Works after upgrade\r\n\r\n### Actual Behavior\r\nProject crashes\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: 3.1.0.637273\r\n- IDE: Visual Studio 2017.8 (Preview)\r\n- Platform Target Frameworks:  \r\n  - UWP:  TargetVersion 17134\r\n                MinVersion 16299\r\n- Nuget Packages:\r\n              Xamarin.Forms.GoogleMaps/3.0.0-beta3\r\n              FFimageLoading/2.4.3.840\r\n              RG.Plugins.Popup/1.0.4\r\n              Caliburn.Micro.Xamarin.Forms/3.2.0\r\n\r\n- Affected Devices:\r\nUWP Desktop\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8059429009","Type":"IssuesEvent","CreatedAt":"2018-08-02T21:56:53","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3314","RelatedDescription":"Closed issue \"Setting Span.Style to a Device Style from C# throws an exception\" (#3314) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIn XAML, setting the `Span.Style` property to one of the `Device` styles works fine. However, it fails in C#.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample.\r\n\r\n### Expected Behavior\r\n\r\n`Device.Styles.TitleStyle` is applied to the `Span`.\r\n\r\n### Actual Behavior\r\n\r\nCrashes on both iOS and Android. On iOS a `NullReferenceException` will be thrown. On Android a `MissingMethodException` is thrown (Xamarin.Forms.Span.set_style).\r\n\r\nRemoving the `Style` property setter from the `Span` causes the app to run.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.1.0.637273\r\n- IDE: VSMac\r\n- Platform Target Frameworks:\r\n  - iOS: 11.4\r\n  - Android: API 27\r\n  - UWP:  Not tried.\r\n\r\n### Reproduction Link\r\n\r\n[SpanTest.zip](https://github.com/xamarin/Xamarin.Forms/files/2198131/SpanTest.zip)"},{"Id":"8059428998","Type":"IssuesEvent","CreatedAt":"2018-08-02T21:56:53","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3280","RelatedDescription":"Closed issue \"No XAML TypeConverter for Size, results in IL error\" (#3280) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nUsing the new `ShadowOffset` with platform specific results in an IL error.\r\n\r\n<img width=\"851\" alt=\"screenshot 2018-07-11 14 41 59\" src=\"https://user-images.githubusercontent.com/41873/42597558-c018b17e-851e-11e8-9eb1-1a5689aceb69.png\">\r\n\r\n### Steps to Reproduce\r\n\r\n1. Code https://github.com/davidortinau/TheLittleThingsPlayground/blob/master/TheLittleThingsPlayground/Views/ThreeOnePage.xaml#L13\r\n2. Add `ShadowOffset` like this:\r\n```\r\n<BoxView WidthRequest=\"100\" HeightRequest=\"100\"\r\n                      x:Name=\"ShadowBox\"\r\n                    BackgroundColor=\"Black\"\r\n                    ios:VisualElement.ShadowColor=\"Red\"\r\n                    ios:VisualElement.ShadowOpacity=\"1\"\r\n                    ios:VisualElement.ShadowRadius=\"10\"\r\n                    ios:VisualElement.ShadowOffset=\"4,10\"\r\n                    ios:VisualElement.IsShadowEnabled=\"true\"\r\n                    />\r\n```\r\n\r\n3. Run and observe the IL error\r\n\r\n### Expected Behavior\r\nThe size should work just like in C#:\r\n\r\n```\r\nShadowBox.On<iOS>().SetShadowOffset(new Size(0, 20));\r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/\r\n"},{"Id":"8059428948","Type":"IssuesEvent","CreatedAt":"2018-08-02T21:56:52","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3333","RelatedDescription":"Closed issue \"[UWP]with ListView on page, Navigation.PopAsync() throws exception\" (#3333) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nHappens on UWP, Android seems to be OK, iOS not used.\r\n```\r\nContentPage\r\n-Grid\r\n--ScrollView\r\n---Grid\r\n----StackLayout\r\n-----ListView \r\n```\r\ncalling Navigation.PopAsync();\r\nthrows Exception:\r\n```\r\nObject reference not set to an instance of an object.\r\nStackTrace:\r\n   at Xamarin.Forms.Platform.UWP.TaskExtensions.<>c.<WatchForError>b__2_1(Object e)\r\n   at System.Threading.WinRTSynchronizationContextBase.Invoker.InvokeCore()\r\n```\r\n\r\nWithout the ListView on the page PopAsync() works fine.\r\nUp to Version 2.5.1.527436 it works even with ListView on page.\r\nCould not test latest preview version due to compile errors in project.\r\n\r\n### Steps to Reproduce\r\n1. Navigate to page with ListView control\r\n2. Pop from page\r\n3. Exception is thrown\r\n\r\n### Expected Behavior\r\nno exception is thrown\r\n### Actual Behavior\r\nexception is thrown\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.637273\r\n- Last known good version: 2.5.1.527436\r\n- IDE: VS2017 15.7.1\r\n- Platform Target Frameworks: \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n\r\n"},{"Id":"8059032784","Type":"PullRequestEvent","CreatedAt":"2018-08-02T20:29:27","Actor":"dotMorten","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3470","RelatedDescription":"Opened pull request \"Improve error message when not calling base.OnCreate\" (#3470) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis change detects that OnCreate was called prior to calling LoadApplication and throws a better error message to help the developer.\r\n\r\n### Issues Resolved ###\r\n\r\nNullReferenceException with no information is thrown if you don't call `base.OnCreate(bundle)` in your subclass. I found lots of forum issues with people reporting the same thing. \r\n\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\nAndroid\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8058866761","Type":"IssuesEvent","CreatedAt":"2018-08-02T19:56:00","Actor":"DennisWelu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3469","RelatedDescription":"Opened issue \"Android pan TotalX/TotalY bad when the gesture recognizer view is affected by layout change\" (#3469) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nOn Android, if the view that holds a pan gesture recognizer is affected by a layout change while the pan is running, then the TotalX and TotalY values are incorrect. iOS and UWP do not have this problem. The values are less than they should be, and there is \"jitter\" in the values as they step up and partially back during a linear pan operation.\r\n\r\nOthers have noticed this problem:\r\n1. https://forums.xamarin.com/discussion/118226/android-pangesturerecognizer-jumps-back-and-forth\r\n2. https://forums.xamarin.com/discussion/87287/pangesturerecognizer-behaves-not-as-expected\r\n\r\nI have attached a very simple iOS/Android/UWP project that illustrates the problem. The view with the pan gesture is in the bottom row of a grid, and the grid rows are resized as the pan occurs. See the screenshot below.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add a PanGestureRecognizer to a control on a page\r\n2. Handle the PanUpdated event, and update the location of the control (or its container) relative to the PanUpdated TotalX/TotalY values\r\n\r\n### Expected Behavior\r\nOn iOS and UWP, the TotalX/TotalY values in the PanUpdated event args will be correct and the affected control moves as expected\r\n\r\n### Actual Behavior\r\nOn Android, the control location lags the mouse position, and the location has \"jitter\"...jumps around as it moves\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.x, 3.x\r\n- Last known good version: Unknown if any\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1 (but the problem existed in previous versions as well)\r\n\r\n### Screenshots\r\n\r\nHere it is in action (the jitter is not apparent in this compressed gif format):\r\n\r\n![panresizerow](https://user-images.githubusercontent.com/2190011/43607114-ea252bb4-9662-11e8-910e-65adf8b5e11f.gif)\r\n\r\n### Reproduction Link\r\n\r\n[PanResizeRowApp.zip](https://github.com/xamarin/Xamarin.Forms/files/2254960/PanResizeRowApp.zip)\r\n\r\n"},{"Id":"8058851957","Type":"PullRequestEvent","CreatedAt":"2018-08-02T19:53:07","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3468","RelatedDescription":"Opened pull request \"[C] fix TargetNullValue Bindings\" (#3468) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nDue to a flux in the matrix, Bindings with a TargetNullValue assigned\r\nwere always returning that value. It had the advantage of being right\r\nsometimes, but the inconvenient for being wrong, most of the times.\r\n\r\nBy properly aligning the bits of the register with the sun at beer time,\r\nwe can avoid that side effect, and actually returns a value when the\r\nbinding is succesful, and the TargetNullValue whem the Binding returns\r\nnull.\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #3467\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Platforms Affected ###\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8059898720","Type":"PullRequestEvent","CreatedAt":"2018-08-03T00:30:42","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4547","RelatedDescription":"Merged pull request \"[CoreGraphics] Add missing API added in Xcode 10 beta 1.\" (#4547) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8059896622","Type":"PullRequestEvent","CreatedAt":"2018-08-03T00:29:51","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4551","RelatedDescription":"Merged pull request \"[arkit] Add ARAnchorCopyingCtorTest\" (#4551) at xamarin/xamarin-macios","RelatedBody":"- Fixes https://github.com/xamarin/xamarin-macios/issues/4497."},{"Id":"8059895191","Type":"PullRequestEvent","CreatedAt":"2018-08-03T00:29:16","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4559","RelatedDescription":"Merged pull request \"[AudioToolbox] Add Xcode 10 beta 5 support.\" (#4559) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8059376047","Type":"PullRequestEvent","CreatedAt":"2018-08-02T21:43:48","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4562","RelatedDescription":"Opened pull request \"[metal] Update for Xcode 10 beta 1, 2, 3 & 4\" (#4562) at xamarin/xamarin-macios","RelatedBody":"_Disclaimer: this PR is marked as `do-not-merge` because it needs a little bit more work (pushing because I'm off tomorrow)._\r\n\r\nXtro should report no unclassified but intro (maybe other tests) should fail (haven't check why exactly yet).\r\n\r\nAlso there were no changes for Metal in beta 5."},{"Id":"8059198664","Type":"IssuesEvent","CreatedAt":"2018-08-02T21:03:39","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4540","RelatedDescription":"Closed issue \"[XI]App with deployment target less than 11.0 fails to build with Invalid architecture error\" (#4540) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Open sample app, https://www.dropbox.com/s/wv0o3k7pu8g59ru/simpleapp-with-nativereferences.zip?dl=0 in Debug|iPhone config\r\n2. Change the supported architecture to ARMv7+ARMv64\r\n3. Make sure that no devices are attached while building\r\n\r\n### Expected Behavior\r\nApp should build successfully\r\n\r\n### Actual Behavior\r\nApp fails to build. http://xqa.blob.core.windows.net/gist/report-e3d7a84a235f4b3d81d028843b3e4b3e.txt\r\n\r\nError:  MTOUCH : error MT0116: Invalid architecture: ARMv7. 32-bit architectures are not supported when deployment target is 11 or later.\r\n\r\n### Environment\r\n```\r\nhttps://gist.github.com/GouriKumari/a4291fe22b8ea5c8b6b7ea575d0f70ba\r\n```\r\n\r\n### Build Logs\r\nhttp://xqa.blob.core.windows.net/gist/report-e3d7a84a235f4b3d81d028843b3e4b3e.txt\r\n\r\n### Example Project (If Possible)\r\nhttps://www.dropbox.com/s/wv0o3k7pu8g59ru/simpleapp-with-nativereferences.zip?dl=0 \r\n\r\n### Additional Details\r\nApp builds successfully when a device is attached or supported architecture is changed only to ARM64\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":42,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":56,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":29,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":260,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":90,"FavoriteCount":42,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":33,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":42,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":57,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null}]}},"RunOn":"2018-08-03T05:30:51.5148375Z","RunDurationInMilliseconds":4082}