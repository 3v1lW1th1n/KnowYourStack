{"Data":{"Sdk":{"Events":[{"Id":"7375582453","Type":"PullRequestEvent","CreatedAt":"2018-03-14T01:20:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/439","RelatedDescription":"Merged pull request \"Use single property for OpenXmlPackage.ChildrenParts and PartDictionary\" (#439) at OfficeDev/Open-XML-SDK","RelatedBody":"There are two properties that point to the same instance of data. This also obsoletes a couple of methods that are redundant with simple LINQ operators that we don't need to maintain in the long run. With the next major version, we'll remove them, but for now they are marked with the ObsoleteAttribute."},{"Id":"7374932127","Type":"PullRequestEvent","CreatedAt":"2018-03-13T22:02:17","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/442","RelatedDescription":"Merged pull request \"Add individual tests for validation per version\" (#442) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7374876069","Type":"PullRequestEvent","CreatedAt":"2018-03-13T21:49:46","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/442","RelatedDescription":"Opened pull request \"Add individual tests for validation per version\" (#442) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7374685209","Type":"IssuesEvent","CreatedAt":"2018-03-13T21:09:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/441","RelatedDescription":"Opened issue \"Add some security/fuzz testing\" (#441) at OfficeDev/Open-XML-SDK","RelatedBody":"We should add some sort of fuzz testing to test for potential security/reliability issues:\r\n\r\n\r\n"},{"Id":"7371380990","Type":"IssuesEvent","CreatedAt":"2018-03-13T11:33:32","Actor":"slgal","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/440","RelatedDescription":"Closed issue \"Library generate invalid file if add more than 26 columns\" (#440) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nLibrary generate corrupted XLSX file if add more than 26 columns. Looks like the problem with cell order in obtained file.  \r\n```xml\r\n<x:row r=\"1\" xmlns:x=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">\r\n  <x:c r=\"A1\" t=\"n\">\r\n    <x:v>0</x:v>\r\n  </x:c>\r\n  <x:c r=\"AA1\" t=\"n\">\r\n    <x:v>26</x:v>\r\n  </x:c>\r\n  <x:c r=\"B1\" t=\"n\">\r\n    <x:v>1</x:v>\r\n  </x:c>\r\n```\r\nI guess somewhere there is a sort method by R field which cause this issue. \r\n\r\nThank you!\r\n\r\n**Information**\r\n\r\n- .NET Framework 4.5.2\r\n- DocumentFormat.OpenXml Version: 2.8.2\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\nusing System;\r\n\r\nnamespace BugDocumentFormatXLSX\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (SpreadsheetDocument document = SpreadsheetDocument.Create(\"test.xlsx\", SpreadsheetDocumentType.Workbook))\r\n            {\r\n                WorkbookPart workbookPart = document.AddWorkbookPart();\r\n                workbookPart.Workbook = new Workbook();\r\n\r\n                WorksheetPart worksheetPart = workbookPart.AddNewPart<WorksheetPart>();\r\n                worksheetPart.Worksheet = new Worksheet(new SheetData());\r\n\r\n                Sheets sheets = workbookPart.Workbook.AppendChild(new Sheets());\r\n\r\n                Sheet sheet = new Sheet() { Id = workbookPart.GetIdOfPart(worksheetPart), SheetId = 1, Name = \"Test Sheet\" };\r\n\r\n                sheets.Append(sheet);\r\n\r\n                SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();\r\n\r\n                var columnsCount = 27; //TO GENERATE VALID XLSX FILE CHANGE THIS VALUE TO 26 or less\r\n\r\n                Row row = new Row() { RowIndex = 1u };\r\n                for (int i = 0; i < columnsCount; i++)\r\n                    CreateCell(row, worksheetPart, i, i);\r\n\r\n                sheetData.Append(row);\r\n\r\n                worksheetPart.Worksheet.Save();\r\n                workbookPart.Workbook.Save();\r\n            }\r\n\r\n            Console.ReadKey();\r\n        }\r\n\r\n\r\n        public static Cell CreateCell(Row row, WorksheetPart worksheetPart, int col, decimal value)\r\n        {\r\n            var columnName = GetStandardExcelColumnName(col);\r\n            //just to make sure that column name is resoulved properly\r\n            Console.WriteLine(string.Format(\"{0} => {1}\", col, columnName));\r\n\r\n            var cell = InsertCellInWorksheet(columnName, row, worksheetPart);\r\n            cell.CellValue = new CellValue(value.ToString());\r\n            cell.DataType = new EnumValue<CellValues>(CellValues.Number);\r\n            return cell;\r\n        }\r\n\r\n        private static Cell InsertCellInWorksheet(string columnName, Row row, WorksheetPart worksheetPart)\r\n        {\r\n            string cellReference = columnName + row.RowIndex;\r\n            Cell refCell = null;\r\n            foreach (Cell cell in row.Elements<Cell>())\r\n            {\r\n                if (string.Compare(cell.CellReference.Value, cellReference, true) > 0)\r\n                {\r\n                    refCell = cell;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            Cell newCell = new Cell() { CellReference = cellReference };\r\n            row.InsertBefore(newCell, refCell);\r\n\r\n            return newCell;\r\n        }\r\n\r\n        public static string GetStandardExcelColumnName(int columnNumberOneBased)\r\n        {\r\n            int baseValue = Convert.ToInt32('A');\r\n            int columnNumberZeroBased = columnNumberOneBased;\r\n\r\n            string ret = \"\";\r\n\r\n            if (columnNumberOneBased > 25)\r\n            {\r\n                ret = GetStandardExcelColumnName((columnNumberZeroBased / 26) - 1);\r\n            }\r\n\r\n            return ret + Convert.ToChar(baseValue + (columnNumberZeroBased % 26));\r\n        }\r\n    }\r\n}\r\n\r\n``` \r\n\r\n**Observed**\r\n![image](https://user-images.githubusercontent.com/1153279/37310583-072b111e-264d-11e8-975a-7d73df8287c4.png)\r\n\r\nInvalid excel file. \r\n[test.xlsx](https://github.com/OfficeDev/Open-XML-SDK/files/1804626/test.xlsx)\r\n\r\n![image](https://user-images.githubusercontent.com/1153279/37310616-27c98a2c-264d-11e8-9df4-eba0adb0053f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1153279/37310636-3b4d4458-264d-11e8-9ff1-7746beda1fb7.png)\r\n\r\n\r\n**Expected**\r\n\r\nValid file with more that 26 columns.\r\n"},{"Id":"7368428677","Type":"IssuesEvent","CreatedAt":"2018-03-12T21:32:07","Actor":"slgal","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/440","RelatedDescription":"Opened issue \"Library generate invalid file if add more than 26 columns\" (#440) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nLibrary generate corrupted XLSX file if add more than 26 columns. Looks like the problem with cell orders in obtained file.  \r\n```xml\r\n<x:row r=\"1\" xmlns:x=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">\r\n  <x:c r=\"A1\" t=\"n\">\r\n    <x:v>0</x:v>\r\n  </x:c>\r\n  <x:c r=\"AA1\" t=\"n\">\r\n    <x:v>26</x:v>\r\n  </x:c>\r\n  <x:c r=\"B1\" t=\"n\">\r\n    <x:v>1</x:v>\r\n  </x:c>\r\n```\r\nI guess somewhere there is a sort method by R field which cause this issue. \r\n\r\nThank you!\r\n\r\n**Information**\r\n\r\n- .NET Framework 4.5.2\r\n- DocumentFormat.OpenXml Version: 2.8.2\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\nusing System;\r\n\r\nnamespace BugDocumentFormatXLSX\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (SpreadsheetDocument document = SpreadsheetDocument.Create(\"test.xlsx\", SpreadsheetDocumentType.Workbook))\r\n            {\r\n                WorkbookPart workbookPart = document.AddWorkbookPart();\r\n                workbookPart.Workbook = new Workbook();\r\n\r\n                WorksheetPart worksheetPart = workbookPart.AddNewPart<WorksheetPart>();\r\n                worksheetPart.Worksheet = new Worksheet(new SheetData());\r\n\r\n                Sheets sheets = workbookPart.Workbook.AppendChild(new Sheets());\r\n\r\n                Sheet sheet = new Sheet() { Id = workbookPart.GetIdOfPart(worksheetPart), SheetId = 1, Name = \"Test Sheet\" };\r\n\r\n                sheets.Append(sheet);\r\n\r\n                SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();\r\n\r\n                var columnsCount = 27; //TO GENERATE VALID XLSX FILE CHANGE THIS VALUE TO 26 or less\r\n\r\n                Row row = new Row() { RowIndex = 1u };\r\n                for (int i = 0; i < columnsCount; i++)\r\n                    CreateCell(row, worksheetPart, i, i);\r\n\r\n                sheetData.Append(row);\r\n\r\n                worksheetPart.Worksheet.Save();\r\n                workbookPart.Workbook.Save();\r\n            }\r\n\r\n            Console.ReadKey();\r\n        }\r\n\r\n\r\n        public static Cell CreateCell(Row row, WorksheetPart worksheetPart, int col, decimal value)\r\n        {\r\n            var columnName = GetStandardExcelColumnName(col);\r\n            //just to make sure that column name is resoulved properly\r\n            Console.WriteLine(string.Format(\"{0} => {1}\", col, columnName));\r\n\r\n            var cell = InsertCellInWorksheet(columnName, row, worksheetPart);\r\n            cell.CellValue = new CellValue(value.ToString());\r\n            cell.DataType = new EnumValue<CellValues>(CellValues.Number);\r\n            return cell;\r\n        }\r\n\r\n        private static Cell InsertCellInWorksheet(string columnName, Row row, WorksheetPart worksheetPart)\r\n        {\r\n            string cellReference = columnName + row.RowIndex;\r\n            Cell refCell = null;\r\n            foreach (Cell cell in row.Elements<Cell>())\r\n            {\r\n                if (string.Compare(cell.CellReference.Value, cellReference, true) > 0)\r\n                {\r\n                    refCell = cell;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            Cell newCell = new Cell() { CellReference = cellReference };\r\n            row.InsertBefore(newCell, refCell);\r\n\r\n            return newCell;\r\n        }\r\n\r\n        public static string GetStandardExcelColumnName(int columnNumberOneBased)\r\n        {\r\n            int baseValue = Convert.ToInt32('A');\r\n            int columnNumberZeroBased = columnNumberOneBased;\r\n\r\n            string ret = \"\";\r\n\r\n            if (columnNumberOneBased > 25)\r\n            {\r\n                ret = GetStandardExcelColumnName((columnNumberZeroBased / 26) - 1);\r\n            }\r\n\r\n            return ret + Convert.ToChar(baseValue + (columnNumberZeroBased % 26));\r\n        }\r\n    }\r\n}\r\n\r\n``` \r\n\r\n**Observed**\r\n![image](https://user-images.githubusercontent.com/1153279/37310583-072b111e-264d-11e8-975a-7d73df8287c4.png)\r\n\r\nInvalid excel file. \r\n[test.xlsx](https://github.com/OfficeDev/Open-XML-SDK/files/1804626/test.xlsx)\r\n\r\n![image](https://user-images.githubusercontent.com/1153279/37310616-27c98a2c-264d-11e8-9df4-eba0adb0053f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1153279/37310636-3b4d4458-264d-11e8-9ff1-7746beda1fb7.png)\r\n\r\n\r\n**Expected**\r\n\r\nValid file with more that 26 columns.\r\n"},{"Id":"7361267775","Type":"PullRequestEvent","CreatedAt":"2018-03-11T04:55:42","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/439","RelatedDescription":"Opened pull request \"Use single property for OpenXmlPackage.ChildrenParts and PartDictionary\" (#439) at OfficeDev/Open-XML-SDK","RelatedBody":"There are two properties that point to the same instance of data. This also obsoletes a couple of methods that are redundant with simple LINQ operators that we don't need to maintain in the long run. With the next major version, we'll remove them, but for now they are marked with the ObsoleteAttribute."},{"Id":"7361187703","Type":"PullRequestEvent","CreatedAt":"2018-03-11T03:40:57","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/438","RelatedDescription":"Merged pull request \"Organize fields in OpenXmlBasePart\" (#438) at OfficeDev/Open-XML-SDK","RelatedBody":"- Uses `private protected` for `_rootElement`\r\n- Renames `_metroPackage` to `_package`"},{"Id":"7360940415","Type":"PullRequestEvent","CreatedAt":"2018-03-11T00:07:00","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/437","RelatedDescription":"Merged pull request \"Simplify app-specific target path retrieval\" (#437) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7360879009","Type":"PullRequestEvent","CreatedAt":"2018-03-10T23:19:00","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/435","RelatedDescription":"Merged pull request \"Add tests for part extension provider\" (#435) at OfficeDev/Open-XML-SDK","RelatedBody":"This also fixes the case where a content type already exists and a new part extension is added."},{"Id":"7360856827","Type":"PullRequestEvent","CreatedAt":"2018-03-10T23:03:49","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/438","RelatedDescription":"Opened pull request \"Organize fields in OpenXmlBasePart\" (#438) at OfficeDev/Open-XML-SDK","RelatedBody":"- Uses `private protected` for `_rootElement`\r\n- Renames `_metroPackage` to `_package`"},{"Id":"7360852892","Type":"PullRequestEvent","CreatedAt":"2018-03-10T23:00:58","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/437","RelatedDescription":"Opened pull request \"Simplify app-specific target path retrieval\" (#437) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7360817245","Type":"PullRequestEvent","CreatedAt":"2018-03-10T22:35:28","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/436","RelatedDescription":"Merged pull request \"Organize fields in OpenXmlPackage\" (#436) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7360762867","Type":"PullRequestEvent","CreatedAt":"2018-03-10T21:57:40","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/436","RelatedDescription":"Opened pull request \"Organize fields in OpenXmlPackage\" (#436) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7360751005","Type":"PullRequestEvent","CreatedAt":"2018-03-10T21:49:40","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/435","RelatedDescription":"Opened pull request \"Add tests for part extension provider\" (#435) at OfficeDev/Open-XML-SDK","RelatedBody":"This also fixes the case where a content type already exists and a new part extension is added."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7366833000","Type":"IssuesEvent","CreatedAt":"2018-03-12T16:34:29","Actor":"arthurvb","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/216","RelatedDescription":"Opened issue \"Add support for exporting images in .net core\" (#216) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Dear Reader,\r\n\r\nCurrently I cannot export images in .net core since ImageInfo has a bitmap property, where I get the following error:\r\n\r\nError\tCS7069\tReference to type 'Bitmap' claims it is defined in 'System.Drawing', but it could not be found\tDefaultProcessorImplementation\t\r\n\r\nwhen I want to use 'imageInfo.Bitmap.Save(ms, imageFormat);' in the ImageHandler. I did try to add the 'System.Drawing.Common' package from nuget, but that did not resolve the error.\r\n\r\nThank you in advance for your help and for making this package available,\r\n\r\nArthur"},{"Id":"7333791977","Type":"IssuesEvent","CreatedAt":"2018-03-05T20:33:47","Actor":"XzaR90","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/215","RelatedDescription":"Opened issue \"Copy custom xml and SharePoint metadata on merging document\" (#215) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\n**Description**\r\nCopy custom XML and SharePoint metadata on merging document does not work using DocumentBuilder?\r\n\r\n\r\n**Information**\r\n\r\n- .NET Target: NET Framework 4.5.2\r\n- DocumentFormat.OpenXml Version: OpenXMLSDK-MOT 2.6.0.0\r\n\r\n**Expected**\r\n\r\nWhen I comment out if (itemList.Contains(propertyPartDoc.Root.Attribute(DS.itemID).Value)) I get the expected result.\r\n\r\n```csharp\r\n        private static void CopyCustomXml(WordprocessingDocument sourceDocument, WordprocessingDocument newDocument,\r\n            IEnumerable<XElement> newContent)\r\n        {\r\n            List<string> itemList = new List<string>();\r\n            foreach (string itemId in newContent\r\n                .Descendants(W.dataBinding)\r\n                .Select(e => (string)e.Attribute(W.storeItemID)))\r\n                if (!itemList.Contains(itemId))\r\n                    itemList.Add(itemId);\r\n\r\n            foreach (CustomXmlPart customXmlPart in sourceDocument.MainDocumentPart.CustomXmlParts)\r\n            {\r\n                OpenXmlPart propertyPart = customXmlPart\r\n                    .Parts\r\n                    .Select(p => p.OpenXmlPart)\r\n                    .Where(p => p.ContentType == \"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\")\r\n                    .FirstOrDefault();\r\n\r\n                if (propertyPart != null)\r\n                {\r\n                    XDocument propertyPartDoc = propertyPart.GetXDocument();\r\n                    //if (itemList.Contains(propertyPartDoc.Root.Attribute(DS.itemID).Value))\r\n                    //{\r\n                        CustomXmlPart newPart = newDocument.MainDocumentPart.AddCustomXmlPart(customXmlPart.ContentType);\r\n                        newPart.GetXDocument().Add(customXmlPart.GetXDocument().Root);\r\n                        foreach (OpenXmlPart propPart in customXmlPart.Parts.Select(p => p.OpenXmlPart))\r\n                        {\r\n                            CustomXmlPropertiesPart newPropPart = newPart.AddNewPart<CustomXmlPropertiesPart>();\r\n                            newPropPart.GetXDocument().Add(propPart.GetXDocument().Root);\r\n                        }\r\n                    //}\r\n                }\r\n            }\r\n        }\r\n``` "},{"Id":"7332381011","Type":"IssuesEvent","CreatedAt":"2018-03-05T16:10:43","Actor":"pedro-w","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/214","RelatedDescription":"Opened issue \"Regression in OpenXmlRegex.Replace \" (#214) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I've got a program using OpenXmlRegex.Replace to replace text 'templates' in a Word document with new values. I am getting problems with version 4.5.3.2 which weren't in 4.5.3.1. It looks like, once the document exceeds a certain size, it starts to replace characters off by one position. I've done some work to get the smallest example I can.\r\n```` C#\r\nusing System.IO;\r\nusing System.Text.RegularExpressions;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing OpenXmlPowerTools;\r\n\r\nnamespace ConsoleApp3\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var src = Path.GetFullPath(\"..\\\\..\\\\me.docx\");\r\n            var dest = Path.GetFullPath(\"..\\\\you.docx\");\r\n            File.Copy(src, dest, true);\r\n            var doc = WordprocessingDocument.Open(dest, true);\r\n            foreach (var part in doc.ContentParts())\r\n            {\r\n                var xdoc = part.GetXDocument();\r\n                var content = xdoc.Descendants(W.p);\r\n                OpenXmlRegex.Replace(content, rex, \"\", null);\r\n                part.PutXDocument();\r\n            }\r\n            doc.Save();\r\n        }\r\n        static readonly Regex rex = new Regex(\"rd\");\r\n    }\r\n}\r\n\r\n````\r\nThis program is supposed to replace all instances of 'rd' in file 'me.docx' with nothing and write the result into 'you.docx'\r\n\r\nMy input file looks like\r\n````\r\nword 1 word 2 word 3 word 4 word 5 word 6 word 7 word 8 word 9 word 10 word 11 word 12 \r\nword 13 word 14 word 15 word 16 word 17 word 18 word 19 word 20 word 21 word 22 \r\nword 23 word 24 \r\n````\r\n... down to ...\r\n````\r\nword 5991 word 5992 word 5993 word 5994 word 5995 word 5996 word 5997 word 5998 \r\nword 5999 word 6000 \r\n````\r\nAnd the output file starts off OK\r\n````\r\nwo 1 wo 2 wo 3 wo 4 wo 5 wo 6 wo 7 wo 8 wo 9 wo 10 wo 11 wo 12 wo 13 wo 14 wo 15 wo 16 wo \r\n```` \r\nbut later becomes\r\n````\r\n481 wo 482 wo 483 wo 484 wo 485 wo 486 wo 487 wo 488 wo 489 wo 490 wo 491 wd 492 wd 493 \r\nwd 494 wd 495 wd 496 wd 497 wd 498 wd 499 wd 500 wd 501 wd 502 wd 503 wd 504 wd 505 wd \r\n````\r\nand stays like that to the end.\r\nI've tried different combinations of text, regex and replacement but there is no obvious way to calculate when it will go wrong.\r\n\r\nHowever if I downgrade my NuGet packages to 4.5.3.1 it works OK. It seems to be independent of the version of `DocumentFormat.OpenXml` used, I can upgrade that to 2.8.1 (from 2.7.1/2.7.2) with no effect.\r\n\r\nI am happy to do some more investigation but I found it difficult to work out which revision in git corresponds to which version in NuGet as there are no git tags.\r\n\r\nI am using Visual Studio 2017, .NET 4.6.2"},{"Id":"7324436741","Type":"PullRequestEvent","CreatedAt":"2018-03-02T22:43:00","Actor":"twsouthwick","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/50","RelatedDescription":"Closed pull request \"[Fix] Order of sources influences insertId outcome\" (#50) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"When doing a BuildDocument, Source objects without Id should be processed first, to ensure Source object with insertId can be inserted.\n\nI do an Orderby to ensure the 'optimized' order of execution.\n"},{"Id":"7324426127","Type":"PullRequestEvent","CreatedAt":"2018-03-02T22:39:58","Actor":"twsouthwick","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/213","RelatedDescription":"Merged pull request \"Add AppVeyor badge\" (#213) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"7324425337","Type":"PullRequestEvent","CreatedAt":"2018-03-02T22:39:44","Actor":"twsouthwick","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/213","RelatedDescription":"Opened pull request \"Add AppVeyor badge\" (#213) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"7324418905","Type":"PullRequestEvent","CreatedAt":"2018-03-02T22:37:55","Actor":"twsouthwick","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/212","RelatedDescription":"Merged pull request \"Add support for appveyor\" (#212) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""}],"ResultType":"GitHubEvent"}},"RunOn":"2018-03-14T05:30:29.9065298Z","RunDurationInMilliseconds":2043}