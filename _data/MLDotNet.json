{"Data":{"GitHub":{"Issues":[{"Id":"531693256","IsPullRequest":false,"CreatedAt":"2019-12-03T03:36:49","Actor":"JakeRadMSFT","Number":"4516","RawContent":null,"Title":"GPU Training doesn't work with AutoML on Surface Book 2","State":"open","Body":"- **What did you do?**\r\nTried to train with GPU on a Surface Book 2\r\n- **What happened?**\r\nStalls after 3rd cross val ... I think\r\n- **What did you expect?**\r\n10 Cross Vals and best model.\r\n\r\n### Source code / logs\r\n\r\n[weather-small-train-logs-cpu.txt](https://github.com/dotnet/machinelearning/files/3914431/weather-small-train-logs-cpu.txt)\r\n[weather-small-train-logs-gpu.txt](https://github.com/dotnet/machinelearning/files/3914432/weather-small-train-logs-gpu.txt)\r\n[weather-small.zip](https://github.com/dotnet/machinelearning/files/3914434/weather-small.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4516","RelatedDescription":"Open issue \"GPU Training doesn't work with AutoML on Surface Book 2\" (#4516)"},{"Id":"531641247","IsPullRequest":true,"CreatedAt":"2019-12-03T01:07:13","Actor":"Lynx1820","Number":"4515","RawContent":null,"Title":"Adds PriorTrainer Onnx conversion","State":"open","Body":"\r\n1. Adding Onnx support for PriorTrainer \r\n       To follow the onnx construction pattern of other binary classifiers, this trainer uses the probability to predict labels, instead of score\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4515","RelatedDescription":"Open PR \"Adds PriorTrainer Onnx conversion\" (#4515)"},{"Id":"530706490","IsPullRequest":false,"CreatedAt":"2019-12-02T17:55:11","Actor":"hahsm","Number":"4513","RawContent":null,"Title":"Multiclass classification - Prediction Output ","State":"closed","Body":"Hi,\r\n\r\nThe following code helps to get the predicted label with score. Is there any way that I can get additional details (columns) of each prediction based on score. What are the columns that I could include as output in a multiclass prediction (other than Label and Score). Can I include additional columns from DataSet in my output?\r\n\r\n`\r\nprivate static Dictionary<string, float> GetScoresWithLabelsSorted(DataViewSchema schema, string name, float[] scores)\r\n        {\r\n            Dictionary<string, float> result = new Dictionary<string, float>();\r\n\r\n            var column = schema.GetColumnOrNull(name);\r\n\r\n            var slotNames = new VBuffer<ReadOnlyMemory<char>>();\r\n            column.Value.GetSlotNames(ref slotNames);\r\n            var x = slotNames.GetIndices();\r\n\r\n            var num = 0;\r\n            foreach (var denseValue in slotNames.DenseValues())\r\n            {\r\n                result.Add(denseValue.ToString(), scores[num++]);\r\n            }\r\n\r\n            return result.OrderByDescending(c => c.Value).ToDictionary(i => i.Key, i => i.Value);\r\n        }`","Url":"https://github.com/dotnet/machinelearning/issues/4513","RelatedDescription":"Closed issue \"Multiclass classification - Prediction Output \" (#4513)"},{"Id":"531013626","IsPullRequest":true,"CreatedAt":"2019-12-02T09:53:51","Actor":"yaeldekel","Number":"4514","RawContent":null,"Title":"Learning with counts (Dracula) transformer","State":"open","Body":"Fixes #4016.","Url":"https://github.com/dotnet/machinelearning/pull/4514","RelatedDescription":"Open PR \"Learning with counts (Dracula) transformer\" (#4514)"},{"Id":"530439237","IsPullRequest":false,"CreatedAt":"2019-11-30T20:03:46","Actor":"CBrauer","Number":"4511","RawContent":null,"Title":"Build problem","State":"closed","Body":"HI,\r\nPlease help me with an install problem.  Here is my install script output:\r\n\r\n```\r\nPS H:\\ML.NET\\machinelearning-master> ./build.cmd\r\nTools are already initialized.\r\nRunning: H:\\ML.NET\\machinelearning-master\\Tools\\dotnetcli\\dotnet msbuild /nologo /verbosity:minimal /clp:Summary /maxcpucount /l:BinClashLogger,Tools\\Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log /p:Configuration=Debug  /flp:v=normal  /flp2:warningsonly;logfile=msbuild.wrn  /flp3:errorsonly;logfile=msbuild.err  build.proj\r\n  fatal: Not a git repository (or any of the parent directories): .git\r\n  Restoring all projects...\r\n  Restore completed in 90.2 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj.\r\n  Restore completed in 6.32 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj.\r\n  Restore completed in 5.13 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DataView\\Microsoft.ML.DataView.csproj.\r\n  Restore completed in 127.06 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.Extensions.ML\\Microsoft.Extensions.ML.csproj.\r\n  Restore completed in 127.57 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.AutoML\\Microsoft.ML.AutoML.csproj.\r\n  Restore completed in 127.65 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Console\\Microsoft.ML.Console.csproj.\r\n  Restore completed in 127.75 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.Samples\\Microsoft.ML.Samples.csproj.\r\n  Restore completed in 127.59 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.AutoML.Samples\\Microsoft.ML.AutoML.Samples.csproj.\r\n  Restore completed in 127.87 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.Samples.GPU\\Microsoft.ML.Samples.GPU.csproj.\r\n  Restore completed in 135.73 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.CodeGenerator\\Microsoft.ML.CodeGenerator.csproj.\r\n  Restore completed in 16.42 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Ensemble\\Microsoft.ML.Ensemble.csproj.\r\n  Restore completed in 20.53 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet18\\Microsoft.ML.DnnImageFeaturizer.ResNet18.csproj.\r\n  Restore completed in 20.46 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj.\r\n  Restore completed in 24.78 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet50\\Microsoft.ML.DnnImageFeaturizer.ResNet50.csproj.\r\n  Restore completed in 25.59 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.AlexNet\\Microsoft.ML.DnnImageFeaturizer.AlexNet.csproj.\r\n  Restore completed in 34.91 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet101\\Microsoft.ML.DnnImageFeaturizer.ResNet101.csproj.\r\n  Restore completed in 40.05 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.EntryPoints\\Microsoft.ML.EntryPoints.csproj.\r\n  Restore completed in 40.93 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Maml\\Microsoft.ML.Maml.csproj.\r\n  Restore completed in 42.72 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnAnalyzer\\Microsoft.ML.DnnAnalyzer\\Microsoft.ML.DnnAnalyzer.csproj.\r\n  Restore completed in 12.1 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.KMeansClustering\\Microsoft.ML.KMeansClustering.csproj.\r\n  Restore completed in 9.56 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.ImageAnalytics\\Microsoft.ML.ImageAnalytics.csproj.\r\n  Restore completed in 26.51 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Experimental\\Microsoft.ML.Experimental.csproj.\r\n  Restore completed in 21.27 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.FastTree\\Microsoft.ML.FastTree.csproj.\r\n  Restore completed in 16.34 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Mkl.Components\\Microsoft.ML.Mkl.Components.csproj.\r\n  Restore completed in 16.61 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.LightGbm\\Microsoft.ML.LightGbm.csproj.\r\n  Restore completed in 11.04 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.OnnxConverter\\Microsoft.ML.OnnxConverter.csproj.\r\n  Restore completed in 21.94 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.OnnxTransformer\\Microsoft.ML.OnnxTransformer.csproj.\r\n  Restore completed in 16.24 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Parquet\\Microsoft.ML.Parquet.csproj.\r\n  Restore completed in 12.7 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Recommender\\Microsoft.ML.Recommender.csproj.\r\n  Restore completed in 20.06 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.SamplesUtils\\Microsoft.ML.SamplesUtils.csproj.\r\n  Restore completed in 15.85 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.ResultProcessor\\Microsoft.ML.ResultProcessor.csproj.\r\n  Restore completed in 23.91 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.PCA\\Microsoft.ML.PCA.csproj.\r\n  Restore completed in 18.12 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.StandardTrainers\\Microsoft.ML.StandardTrainers.csproj.\r\n  Restore completed in 30.13 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Sweeper\\Microsoft.ML.Sweeper.csproj.\r\n  Restore completed in 23.27 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.TensorFlow\\Microsoft.ML.TensorFlow.csproj.\r\n  Restore completed in 17.56 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Transforms\\Microsoft.ML.Transforms.csproj.\r\n  Restore completed in 36.79 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Vision\\Microsoft.ML.Vision.csproj.\r\n  Restore completed in 86.71 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.TimeSeries\\Microsoft.ML.TimeSeries.csproj.\r\n  Restore completed in 77.17 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.Extensions.ML.Tests\\Microsoft.Extensions.ML.Tests.csproj.\r\n  Restore completed in 58.66 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.AutoML.Tests\\Microsoft.ML.AutoML.Tests.csproj.\r\n  Restore completed in 35.71 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Benchmarks\\Microsoft.ML.Benchmarks.csproj.\r\n  Restore completed in 46.71 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Benchmarks.Tests\\Microsoft.ML.Benchmarks.Tests.csproj.\r\n  Restore completed in 29.64 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CodeAnalyzer.Tests\\Microsoft.ML.CodeAnalyzer.Tests.csproj.\r\n  Restore completed in 14.44 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.FSharp.Tests\\Microsoft.ML.FSharp.Tests.fsproj.\r\n  Restore completed in 62.28 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Core.Tests\\Microsoft.ML.Core.Tests.csproj.\r\n  Restore completed in 81.34 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CpuMath.PerformanceTests\\Microsoft.ML.CpuMath.PerformanceTests.csproj.\r\n  Restore completed in 22.24 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CodeGenerator.Tests\\Microsoft.ML.CodeGenerator.Tests.csproj.\r\n  Restore completed in 14.73 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.OnnxTransformerTest\\Microsoft.ML.OnnxTransformerTest.csproj.\r\n  Restore completed in 21.84 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CpuMath.UnitTests\\Microsoft.ML.CpuMath.UnitTests.csproj.\r\n  Restore completed in 21.58 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Functional.Tests\\Microsoft.ML.Functional.Tests.csproj.\r\n  Restore completed in 36.2 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.NugetPackageVersionUpdater\\Microsoft.ML.NugetPackageVersionUpdater.csproj.\r\n  Restore completed in 16.37 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TestFramework\\Microsoft.ML.TestFramework.csproj.\r\n  Restore completed in 22.45 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Predictor.Tests\\Microsoft.ML.Predictor.Tests.csproj.\r\n  Restore completed in 23.95 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Sweeper.Tests\\Microsoft.ML.Sweeper.Tests.csproj.\r\n  Restore completed in 35.88 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TimeSeries.Tests\\Microsoft.ML.TimeSeries.Tests.csproj.\r\n  Restore completed in 14.08 ms for H:\\ML.NET\\machinelearning-master\\tools-local\\Microsoft.ML.InternalCodeAnalyzer\\Microsoft.ML.InternalCodeAnalyzer.csproj.\r\n  Restore completed in 10.07 ms for H:\\ML.NET\\machinelearning-master\\test\\RemoteExecutorConsoleApp\\RemoteExecutorConsoleApp.csproj.\r\n  Restore completed in 29.37 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TestFrameworkCommon\\Microsoft.ML.TestFrameworkCommon.csproj.\r\n  Restore completed in 83.45 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Tests\\Microsoft.ML.Tests.csproj.\r\n  Restore completed in 20.63 ms for H:\\ML.NET\\machinelearning-master\\tools-local\\Microsoft.ML.StableApi\\Microsoft.ML.StableApi.csproj.\r\n  Building redist components...\r\n  Building native components...\r\n  H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.4.0-pre.6.0\r\n  ** Copyright (c) 2019 Microsoft Corporation\r\n  **********************************************************************\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.4.0-pre.6.0\r\n  ** Copyright (c) 2019 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: 'x86_x64'\r\n  Commencing native build of dotnet/machinelearning\r\n\r\n  Calling \"H:\\ML.NET\\machinelearning-master\\src\\Native\\\\gen-buildsys-win.bat\" \"H:\\ML.NET\\machinelearning-master\\src\\Native\\\" \"16 2019\" x64\r\n  CMake Warning (dev) in CMakeLists.txt:\r\n    No project() command is present.  The top-level CMakeLists.txt file must\r\n    contain a literal, direct call to the project() command.  Add a line of\r\n    code such as\r\n\r\n      project(ProjectName)\r\n\r\n    near the top of the file, but after cmake_minimum_required().\r\n\r\n    CMake is pretending there is a \"project(Project)\" command on the first\r\n    line.\r\n  This warning is for project developers.  Use -Wno-dev to suppress it.\r\n\r\n  -- The C compiler identification is MSVC 19.24.28314.0\r\n  -- The CXX compiler identification is MSVC 19.24.28314.0\r\n  -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe\r\n  -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works\r\n  -- Detecting C compiler ABI info\r\n  -- Detecting C compiler ABI info - done\r\n  -- Detecting C compile features\r\n  -- Detecting C compile features - done\r\n  -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe\r\n  -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works\r\n  -- Detecting CXX compiler ABI info\r\n  -- Detecting CXX compiler ABI info - done\r\n  -- Detecting CXX compile features\r\n  -- Detecting CXX compile features - done\r\n  CMAKE_C_FLAGS_DEBUG is /MDd /Zi /Ob0 /Od /RTC1\r\n  In a future version, if the CMake that ships with VS2019 no longer contains the /ZI flag, delete this message block and the two lines below.\r\n  -- Found OpenMP_C: -openmp (found version \"2.0\")\r\n  -- Found OpenMP_CXX: -openmp (found version \"2.0\")\r\n  -- Found OpenMP: TRUE (found version \"2.0\")\r\n  -- Configuring done\r\n  CMake Error at MatrixFactorizationNative/CMakeLists.txt:28 (add_library):\r\n    Cannot find source file:\r\n\r\n      libmf/mf.cpp\r\n\r\n    Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm\r\n    .hpp .hxx .in .txx\r\n\r\n\r\n  CMake Error at MatrixFactorizationNative/CMakeLists.txt:28 (add_library):\r\n    No SOURCES given to target: MatrixFactorizationNative\r\n\r\n\r\n  CMake Generate step failed.  Build files cannot be regenerated correctly.\r\n  Failed to generate native component build project!\r\nH:\\ML.NET\\machinelearning-master\\src\\Native\\build.proj(67,5): error MSB3073: The command \"\"H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd\" Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nH:\\ML.NET\\machinelearning-master\\src\\Native\\build.proj(67,5): error MSB3073: The command \"\"H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd\" Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:56.68\r\nCommand execution failed with exit code 1.\r\nPS H:\\ML.NET\\machinelearning-master>\r\n```\r\n\r\nAny suggestions will be greatly apprecated.\r\n\r\nCharles\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4511","RelatedDescription":"Closed issue \"Build problem\" (#4511)"},{"Id":"529580561","IsPullRequest":false,"CreatedAt":"2019-11-30T18:43:01","Actor":"vsfeedback","Number":"4508","RawContent":null,"Title":"AI - Machine Learning - Fuzzy Logic - Genetic Algos","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/795363/ai-machine-learning-fuzzy-logic-genetic-algos.html)._\n\n---\n<p>Hello, I am looking for AI libraries while I can not find them through .Net</p><p>Would you add new libraries for using or I have to switch <strong><em>Matlab Software</em></strong>?</p> <p>Please replay clear answer to know what I should do? Because AI is most needed tool these days...</p>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/28/2019, 01:29 AM: \n\nThank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We'll provide an update once the issue has been triaged by the product team.\n#### Touraj Ostovari on 10/29/2019, 08:02 AM: \n\n<p>is there any new update??</p>\n","Url":"https://github.com/dotnet/machinelearning/issues/4508","RelatedDescription":"Closed issue \"AI - Machine Learning - Fuzzy Logic - Genetic Algos\" (#4508)"},{"Id":"529052670","IsPullRequest":false,"CreatedAt":"2019-11-30T18:33:19","Actor":"luisquintanilla","Number":"4504","RawContent":null,"Title":"[Image Classification] Low Accuracy on EuroSAT Dataset","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.1\r\n- **ML.NET Version**: 1.4.0\r\n- **Model Builder Version**: 16.0.1911.1103\r\n\r\n### Issue\r\n\r\nThe [EuroSAT paper](https://www.researchgate.net/publication/319463676_EuroSAT_A_Novel_Dataset_and_Deep_Learning_Benchmark_for_Land_Use_and_Land_Cover_Classification), a geo-referenced aerial/satellite image dataset of 27,000 images categorized into 10 different classes is said to achieve 98.57% classification accuracy using CNNs. More specifically, using ResNet50, it achieves 96.37% accuracy using a 90/10 train/test split. Using ML.NET Image Classification API as well as Model Builder achieves 99%+ accuracy while training. However, when evaluating the model, both with and without cross validation, accuracy drops between 61-69% using only the CPU and 59% using the GPU. See performance comparisons in table below.\r\n\r\n| Method | Number of Images | Cross-Validation | Training Accuracy | Evaluation Accuracy | \r\n| --- | --- | --- | --- | --- |\r\n| API (CPU) | 20000 (18000 Train, 2000 Test) | No | 0.9946118 | 0.698\r\n| Model Builder (CPU) | 27000 | Yes | 0.9954983 | 0.6168\r\n| Model Builder (GPU) | 27000 | Yes | N/A | 0.5949\r\n\r\n### Source code / logs\r\n\r\nThe source code is at the following repo: https://github.com/luisquintanilla/EuroSATTrainSample\r\n\r\n[Dataset download link](http://madm.dfki.de/files/sentinel/EuroSAT.zip)\r\n\r\nOutput logs:\r\n\r\n[ImageClassificationTrainResultsModelBuilder.txt](https://github.com/dotnet/machinelearning/files/3894631/ImageClassificationTrainResultsModelBuilder.txt)\r\n[ImageClassificationTrainResultsAPI.txt](https://github.com/dotnet/machinelearning/files/3894632/ImageClassificationTrainResultsAPI.txt)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4504","RelatedDescription":"Closed issue \"[Image Classification] Low Accuracy on EuroSAT Dataset\" (#4504)"},{"Id":"530490802","IsPullRequest":true,"CreatedAt":"2019-11-29T21:27:07","Actor":"r0ss88","Number":"4512","RawContent":null,"Title":"Fixes #4505 Remove reliance on getting product version for model.zip/version.txt from FileVersionInfo and replace with using assembly custom attributes","State":"open","Body":"Refer to original issue for further details of the reasons for this change.\r\n\r\nI have used AssemblyInformationalVersionAttribute to match the same behaviour as was introduced with the change to reliance of FileVersionInfo.GetVersionInfo. There is already a test covering -ModelFiles.DetermineNugetVersionFromModel in Microsoft.ML.FunctionalTests.","Url":"https://github.com/dotnet/machinelearning/pull/4512","RelatedDescription":"Open PR \"Fixes #4505 Remove reliance on getting product version for model.zip/version.txt from FileVersionInfo and replace with using assembly custom attributes\" (#4512)"},{"Id":"529522768","IsPullRequest":false,"CreatedAt":"2019-11-28T08:31:45","Actor":"jsgonsette","Number":"4506","RawContent":null,"Title":"\"Op type not registered 'FusedBatchNormV3'\" exception when trying to use a TensorFlow 2.0 model","State":"closed","Body":"### System information\r\n\r\nSDK .NET Core (reflétant tous les global.json) :\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nEnvironnement d'exécution :\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nAnaconda Navigator 1.9.7 with TensorFlow 2.0.0\r\n\r\nVisual Studio 2019 Community Edition, version  16.3.10\r\nwith \r\n* Microsoft ML v1.4.0\r\n* TensorFlow.NET v0.12.0\r\n\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTaking inspiration from this [ML.Net project](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ImageClassification_TensorFlow), \r\nI trained a neural network with Tensorflow 2.0, saved it to disk (with python function `tf.saved_model.save`) and then tried to load it and use it in a custom .Net project in C#.\r\n\r\n- **What happened?**\r\nI expected my C# program to be able to load a picture, to push it through the Tensorflow model and to get an output vector corresponding to classification results.\r\n\r\nEverything is fine when I load my model with function *LoadTensorFlowModel*. Calling *GetInputSchema* or *GetModelSchema* on the model returns coherent information.\r\n\r\nFitting my pipeline with *Fit* also works fine. However, as soon as I try to push a picture in the pipeline, I get an exception `Op type not registered 'FusedBatchNormV3` (see below).\r\n\r\n- **What did you expect?**\r\nI didn't expect to get this strange exception during inference.\r\nObviously this exception seems to happen inside the TensorFlow library called by ML.NET. I have no idea if the bug is on the TensorFlow side, or on the ML.NET side, or if missed something.\r\n\r\nBelow you can find minimal code to reproduce the problem.\r\n\r\n### Exception\r\n2019-11-27 16:17:24.783604: I tensorflow/cc/saved_model/reader.cc:31] Reading SavedModel from: D:\\training\\model\\\r\n2019-11-27 16:17:24.820727: I tensorflow/cc/saved_model/reader.cc:54] Reading meta graph with tags { serve }\r\n2019-11-27 16:17:25.045189: I tensorflow/cc/saved_model/loader.cc:182] Restoring SavedModel bundle.\r\n2019-11-27 16:17:25.954912: I tensorflow/cc/saved_model/loader.cc:132] Running initialization op on SavedModel bundle.\r\n2019-11-27 16:17:26.205591: I tensorflow/cc/saved_model/loader.cc:285] SavedModel load for tags { serve }; Status: success. Took 1421948 microseconds.\r\n2019-11-27 16:17:33.391938: W tensorflow/core/kernels/partitioned_function_ops.cc:197] Grappler optimization failed. Error: Op type not registered 'FusedBatchNormV3' in binary running on AUTISTE. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.\r\n2019-11-27 16:17:33.409723: W tensorflow/core/framework/op_kernel.cc:1401] OP_REQUIRES failed at partitioned_function_ops.cc:118 : Not found: Op type not registered 'FusedBatchNormV3' in binary running on AUTISTE. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.\r\nOp type not registered 'FusedBatchNormV3' in binary running on AUTISTE. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed.\r\n\t [[{{node StatefulPartitionedCall}}]]\r\n\t [[{{node StatefulPartitionedCall}}]]\r\nException levée : 'System.InvalidOperationException' dans Microsoft.ML.Data.dll\r\nUne exception non gérée du type 'System.InvalidOperationException' s'est produite dans Microsoft.ML.Data.dll\r\n\r\n\r\n### Source code - TensorFlow side\r\n\r\n`import os`\r\n`import tensorflow as tf`\r\n`from tensorflow.keras.layers import Dense, GlobalAveragePooling2D`\r\n`from tensorflow.keras.models import Model`\r\n\r\n`base_model = tf.keras.applications.ResNet50 (include_top=False, weights='imagenet', input_shape=(224, 224, 3))`\r\n`x = base_model.output`\r\n`x = GlobalAveragePooling2D (name=\"top_avgpool2d\")(x)`\r\n`x = Dense (512, activation='relu', name=\"top_mlp\")(x)`\r\n`predictions = Dense (2, activation='softmax', name=\"top_gender\")(x)`\r\n`model = Model (inputs=base_model.input, outputs=predictions)`\r\n\r\n`tf.saved_model.save (model, 'D:\\\\training\\\\model\\\\')`\r\n\r\n### Source code - Visual Studio side\r\nSee attached file\r\n[VS Code.txt](https://github.com/dotnet/machinelearning/files/3898390/VS.Code.txt)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4506","RelatedDescription":"Closed issue \"\"Op type not registered 'FusedBatchNormV3'\" exception when trying to use a TensorFlow 2.0 model\" (#4506)"},{"Id":"529626089","IsPullRequest":true,"CreatedAt":"2019-11-28T00:09:53","Actor":"frank-dong-ms","Number":"4510","RawContent":null,"Title":"Only for test - test add fail retry for all tests","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4510","RelatedDescription":"Open PR \"Only for test - test add fail retry for all tests\" (#4510)"},{"Id":"529622803","IsPullRequest":true,"CreatedAt":"2019-11-27T23:55:38","Actor":"ashbhandare","Number":"4509","RawContent":null,"Title":"Correct inferring tensor shape for Tensorflow Transform","State":"open","Body":"Fixes #4364 partially.\r\nThe above issue brought into attention that there was a wrong assumption while inferring input tensor shape in TensorflowTransform. It was assumed that for a input node of a graph with unknown dimensions, all the dimensions would be the same, even though that is not true in most cases. For example, the most common tensor shape format for dealing with Image- based models is (batch_size, height, width, channels).\r\nThis change replaces this wrong check with more comprehensive method of inferring the input tensor shape.\r\nMore tests might need to be added for code coverage.  \r\n","Url":"https://github.com/dotnet/machinelearning/pull/4509","RelatedDescription":"Open PR \"Correct inferring tensor shape for Tensorflow Transform\" (#4509)"},{"Id":"529531672","IsPullRequest":true,"CreatedAt":"2019-11-27T19:19:33","Actor":"harishsk","Number":"4507","RawContent":null,"Title":"Fixed onnx export support for WordBagEstimator","State":"open","Body":"Fixed a bug in ngram transform and added test for WordBagEstimator","Url":"https://github.com/dotnet/machinelearning/pull/4507","RelatedDescription":"Open PR \"Fixed onnx export support for WordBagEstimator\" (#4507)"},{"Id":"529460918","IsPullRequest":false,"CreatedAt":"2019-11-27T16:41:22","Actor":"r0ss88","Number":"4505","RawContent":null,"Title":"Version.txt should use file version from assembly custom attributes not FileVersionInfo","State":"open","Body":"The changes made in issue https://github.com/dotnet/machinelearning/issues/3132 have introduced a bug due to relying on a physical location for the assembly. If the Microsoft.ML.Core assembly is loaded from memory the assembly.location will be empty. Using **FileVersionInfo.GetVersionInfo** relies on a physical path - so an argument exception is thrown inside System.IO.Path since the supplied path is empty.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/37ed3361f330ed439c9bd477abcfe5a27e06c0a1/src/Microsoft.ML.Core/Data/Repository.cs#L308-L311\r\n\r\nInstead of using FileVersionInfo.GetVersionInfo the assembly custom attributes should be used, for example:\r\n`var productVersion = assembly.CustomAttributes.FirstOrDefault(a => a.AttributeType == typeof(AssemblyFileVersionAttribute)).ConstructorArguments.First();`\r\n\r\nThis will return the same product string version as the FileVersionInfo.GetVersionInfo does.","Url":"https://github.com/dotnet/machinelearning/issues/4505","RelatedDescription":"Open issue \"Version.txt should use file version from assembly custom attributes not FileVersionInfo\" (#4505)"},{"Id":"525111121","IsPullRequest":false,"CreatedAt":"2019-11-26T16:11:27","Actor":"mayoatte","Number":"4487","RawContent":null,"Title":"QuestionL Handling Comma Separated List Of Ids Per Row","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**:  3.0.0\r\n\r\n### Issue\r\n\r\n**I'm trying to use the FieldAwareFactorizationMachine for classification. One of my most important features is a list of comma separated ids e.g. \"3499430, 3499435, 34995430\" (these are ids of items in a shopping cart) that are passed in (as a single column) with each row in the dataset. \r\n\r\nI'm struggling with the right transformations to use on this column so that the feature can have the proper effect during training. So far i've only been able to use a OneHotHashEncoding but i'm not sure if that's right.  Seems like i should be splitting up the list and converting the values to keys and then to vectors but the resulting vectors do not have fixed sizes (which FFM requires). \r\n\r\nThe general idea is to classify if some other item goes with this shopping cart.\r\n\r\nCan you please help with some ideas on how to proceed?**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4487","RelatedDescription":"Closed issue \"QuestionL Handling Comma Separated List Of Ids Per Row\" (#4487)"},{"Id":"528450600","IsPullRequest":true,"CreatedAt":"2019-11-26T02:38:15","Actor":"frank-dong-ms","Number":"4503","RawContent":null,"Title":"improve test stability","State":"open","Body":"1. add datatime when start/finish tests\r\n2. add timeout for thread waiting to prevent infinite wait\r\n3. fix cancel token cancel twice issue\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4503","RelatedDescription":"Open PR \"improve test stability\" (#4503)"},{"Id":"527485845","IsPullRequest":true,"CreatedAt":"2019-11-25T22:14:48","Actor":"antoniovs1029","Number":"4500","RawContent":null,"Title":"Reenabling MacOS tests that had an issue with libgdiplus","State":"closed","Body":"### Edited First Post:\r\nPR #4492 disabled some tests that threw a `System.DllNotFoundException : Unable to load DLL 'libgdiplus'`, when trying to run them on our MacOS CI Pipeline.\r\n\r\nAs explained below in this thread, the problem was on homebrew's side, and this PR was meant to give a provitional solution for the problem. Nonetheless, this problem has just been fixed on homebrew's side, so now this PR simply reenables those tests.\r\n\r\n-----------------------------\r\n\r\n### Original First Post:\r\nSolves the problem with MacOS Pipeline where certain tests threw a\r\n`System.DllNotFoundException : Unable to load DLL 'libgdiplus': The specified module could not be found`\r\n\r\nThe issue was caused somewhere in homebrew's installation, and one way to solve this issue is to actually make homebrew to build the libgdiplus library after downloading it (instead of downloading a prebuilt version from [https://homebrew.bintray.com/bottles/mono-libgdiplus-6.0.4.high_sierra.bottle.tar.gz](https://homebrew.bintray.com/bottles/mono-libgdiplus-6.0.4.high_sierra.bottle.tar.gz) which is where it gets libgdiplus if homebrew doesn't build it). For some reason that's still unknown to me, this prebuilt version isn't working as expected, and the above exception is thrown.","Url":"https://github.com/dotnet/machinelearning/pull/4500","RelatedDescription":"Closed or merged PR \"Reenabling MacOS tests that had an issue with libgdiplus\" (#4500)"},{"Id":"527600602","IsPullRequest":false,"CreatedAt":"2019-11-25T18:37:33","Actor":"KSemenenko","Number":"4501","RawContent":null,"Title":"Visual Designer tools for neural networks","State":"closed","Body":"It would be great if in VS it will be possible to create neural networks in a visual editor.","Url":"https://github.com/dotnet/machinelearning/issues/4501","RelatedDescription":"Closed issue \"Visual Designer tools for neural networks\" (#4501)"},{"Id":"528071386","IsPullRequest":false,"CreatedAt":"2019-11-25T18:36:46","Actor":"hahsm","Number":"4502","RawContent":null,"Title":"Best algorithm to use (ML.Net 1.4.0)","State":"closed","Body":"Hi,\r\nI have a dataset in the following format,\r\n\r\nItem (feature) |  Model (feature) |  Brand (feature) | ItemId (PredictedLabel)\r\nIphone X         | X MAX                |  Apple               | 1\r\nSamsung 10S | 10S                      | Samsung          | 2\r\nSamsung Note 9 | 9                      | Samsung          | 3\r\nLikewise.. \r\n\r\nBased on the Item, Model and Size given as test data, I wanted to predict the ItemId. How is this possible, and what algorithm should I use to achieve this. I tried using Multiclass classification, and since Label column contains unique sequential values, each is considered as a separate class, and even with few data, it takes a very long time to train, with 0% accuracy. I am using ML.Net 1.4.0. Would appreciate if a sample code is shared.\r\n\r\nThank you.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4502","RelatedDescription":"Closed issue \"Best algorithm to use (ML.Net 1.4.0)\" (#4502)"},{"Id":"525965178","IsPullRequest":true,"CreatedAt":"2019-11-25T18:06:29","Actor":"antoniovs1029","Number":"4489","RawContent":null,"Title":"Test MacOS pipeline problem","State":"closed","Body":"Do not approve this branch.\r\n\r\nIt's only meant for testing the problems with the MacOS pipeline\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4489","RelatedDescription":"Closed or merged PR \"Test MacOS pipeline problem\" (#4489)"},{"Id":"527384658","IsPullRequest":false,"CreatedAt":"2019-11-22T21:02:59","Actor":"mayoatte","Number":"4499","RawContent":null,"Title":"Out of Memory Exception In Model Builder","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .Net Core 3.0 \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nTried to use a Model Builder (AutoML) with a 1 GB csv file. \r\n\r\n- **What happened?**\r\n\r\nOut of Memory Exception\r\n\r\n![image](https://user-images.githubusercontent.com/29760620/69455746-e840e080-0d1d-11ea-9932-4ea1ef8a1780.png)\r\n\r\n\r\n- **What did you expect?**\r\n\r\nThe file would get loaded. It looks like the Model Builder is trying to use  a StringBuilder here. That's naturally going to fall down after a certain size of csv. Stream?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4499","RelatedDescription":"Closed issue \"Out of Memory Exception In Model Builder\" (#4499)"},{"Id":"527364014","IsPullRequest":true,"CreatedAt":"2019-11-22T19:03:16","Actor":"LittleLittleCloud","Number":"4498","RawContent":null,"Title":"CodeGen For AzureAttach","State":"open","Body":"Transformer added:\r\n\r\nExtractPixel\r\nNormalizeMapping\r\nResizeImage\r\nApplyOnnxModel\r\nNotify that those are transformers that not exist in AutoML\r\n\r\nMake some refactor a bit in `AzureAttachImageCodeGenerator` so that it can expand to support Azure Attach smoothly plus more test friendly(it should be easily updated to `AzureAttachCodeGenerator` when @Dmitry-A 's code get in)\r\n\r\nSee [IgniteDemoTest](https://github.com/dotnet/machinelearning/blob/71c9bf0eacafa2c14863afc63424e276129cb69b/test/Microsoft.ML.CodeGenerator.Tests/ApprovalTests/ConsoleCodeGeneratorTests.cs#L69) for usage\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4498","RelatedDescription":"Open PR \"CodeGen For AzureAttach\" (#4498)"},{"Id":"527343723","IsPullRequest":true,"CreatedAt":"2019-11-22T19:01:17","Actor":"LittleLittleCloud","Number":"4497","RawContent":null,"Title":"wip - CodeGen for Azure Attach Image","State":"closed","Body":"Transformer added:\r\n- ExtractPixel\r\n- NormalizeMapping\r\n- ResizeImage\r\n- ApplyOnnxModel\r\n\r\nNotify that those are transformers that not exist in AutoML","Url":"https://github.com/dotnet/machinelearning/pull/4497","RelatedDescription":"Closed or merged PR \"wip - CodeGen for Azure Attach Image\" (#4497)"},{"Id":"525343749","IsPullRequest":false,"CreatedAt":"2019-11-22T17:09:09","Actor":"aslotte","Number":"4488","RawContent":null,"Title":"Error loading Tensorflow Session in Jupyter Notebooks","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Home\r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 3.0\r\n- **ML.NET Version**: v1.4.0.0\r\n### Issue\r\n\r\nI wasn't sure if this issue belonged in `/dotnet/try` or here, but I figured I start here as I think it may be ML.NET related.\r\n\r\n- **What did you do?** Ran a Transfer Learning sample in Jupyter Notebooks\r\n- **What happened?** Got an exception from Tensorflow loading the TF model\r\n- **What did you expect?** `.Fit()` to work as expected\r\n\r\n### Source code / logs\r\nSource code can be found here\r\nhttps://github.com/aslotte/mlnet-jupyter/blob/master/src/image%20classification.ipynb\r\n\r\nException:\r\n![image](https://user-images.githubusercontent.com/30201569/69198007-45ac1600-0b01-11ea-8500-76e5d3e2764d.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4488","RelatedDescription":"Closed issue \"Error loading Tensorflow Session in Jupyter Notebooks\" (#4488)"},{"Id":"526934018","IsPullRequest":true,"CreatedAt":"2019-11-22T01:30:13","Actor":"maryamariyan","Number":"4496","RawContent":null,"Title":"Adds mlnet src and test projects from feature branch","State":"open","Body":"Adds mlnet src and test projects from features/automl into master branch\r\n\r\n- [x] pack mlnet\r\n\r\ncc: @LittleLittleCloud @eerhardt ","Url":"https://github.com/dotnet/machinelearning/pull/4496","RelatedDescription":"Open PR \"Adds mlnet src and test projects from feature branch\" (#4496)"},{"Id":"526273043","IsPullRequest":false,"CreatedAt":"2019-11-21T23:16:55","Actor":"daholste","Number":"4491","RawContent":null,"Title":"Ignore hidden columns in AutoML schema checks of validation data","State":"closed","Body":"When the AutoML API consumes data, it validates schema consistency between the train and validation data.\r\n\r\nThere are two bugs in this logic:\r\n1. The API asserts that the count of columns in the train and validation data must be equal. This throws an exception if the two data views have the same number of active columns but a different number of hidden columns. This should be updated to assert that the # of active (not hidden) columns in the train and validation data are equal.\r\n\r\n2. If either the train or validation data has a hidden column with a type that differs from an active column of the same name, an exception is thrown. Type consistency checks should be restricted to active columns only.","Url":"https://github.com/dotnet/machinelearning/issues/4491","RelatedDescription":"Closed issue \"Ignore hidden columns in AutoML schema checks of validation data\" (#4491)"},{"Id":"526266701","IsPullRequest":true,"CreatedAt":"2019-11-21T23:16:55","Actor":"daholste","Number":"4490","RawContent":null,"Title":"Ignore hidden columns in AutoML schema checks of validation data","State":"closed","Body":"Closes #4491\r\n\r\nWhen the AutoML API consumes data, it validates schema consistency between the train and validation data.\r\n\r\nThere are two bugs in this logic:\r\n\r\n1. The API asserts that the count of columns in the train and validation data must be equal. This throws an exception if the two data views have the same number of active columns but a different number of hidden columns. This PR updates to assert that the # of active (not hidden) columns in the train and validation data are equal.\r\n\r\n2. If either the train or validation data has a hidden column with a type that differs from an active column of the same name, an exception is thrown. This PR restricts type consistency checks to active columns only.","Url":"https://github.com/dotnet/machinelearning/pull/4490","RelatedDescription":"Closed or merged PR \"Ignore hidden columns in AutoML schema checks of validation data\" (#4490)"},{"Id":"526885975","IsPullRequest":true,"CreatedAt":"2019-11-21T22:51:20","Actor":"frank-dong-ms","Number":"4495","RawContent":null,"Title":"Only for test - disable test parallelization ","State":"open","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4495","RelatedDescription":"Open PR \"Only for test - disable test parallelization \" (#4495)"},{"Id":"526770949","IsPullRequest":true,"CreatedAt":"2019-11-21T18:36:39","Actor":"ashbhandare","Number":"4494","RawContent":null,"Title":"Add SQL command timeout option to database loader.","State":"open","Body":"Fixes #4484 \r\n\r\nThis change adds a way to specify the SQL command timeout https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlcommand.commandtimeout?view=netframework-4.8\r\nwhile creating the DatabaseSource.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4494","RelatedDescription":"Open PR \"Add SQL command timeout option to database loader.\" (#4494)"},{"Id":"526660716","IsPullRequest":false,"CreatedAt":"2019-11-21T15:18:47","Actor":"eerhardt","Number":"4493","RawContent":null,"Title":"model saving can't handle datetime columns","State":"open","Body":"@FranzBl commented on [Wed Nov 20 2019](https://github.com/dotnet/machinelearning-samples/issues/746)\n\nSorry I couldn't answer earlier. To change column type of database, I had to change the program that generates it (in many places) and to setup a new database.\r\nIndeed with data type real instead of float the program works incl. evaluating, training etc. With one exception: Trying to save the model to a zip file for later use on end fails. Reason: One table column is type datetime (in SQL). During generation of the data view this is converted into string, and training works. Saving the model attempts to change these column data back from string to datetime, so an exception is thrown.\r\nIs this as should be? If model saving tries to reconstruct the original data types, so I think it should be able to parse a string as datetime.\r\nIn fact I could store the timestamps as simple strings in the database. But many database queries use datetime arithmetics, e. g. retrieving all data between two timestamps (SQL can do this very easy, while the date arithmetics on strings would be a little tricky).\r\n\r\n_Originally posted by @FranzBl in https://github.com/dotnet/machinelearning-samples/issues/744#issuecomment-556653945_\n\n","Url":"https://github.com/dotnet/machinelearning/issues/4493","RelatedDescription":"Open issue \"model saving can't handle datetime columns\" (#4493)"},{"Id":"526282350","IsPullRequest":true,"CreatedAt":"2019-11-21T05:22:19","Actor":"codemzs","Number":"4492","RawContent":null,"Title":"Disable tests on macOS that depend on GDI+ library.","State":"closed","Body":"Disabling bitmap related tests temporarily on macOS to unblock PRs that are stalled because macOS CI images don't seem to have GDI+ or related library.","Url":"https://github.com/dotnet/machinelearning/pull/4492","RelatedDescription":"Closed or merged PR \"Disable tests on macOS that depend on GDI+ library.\" (#4492)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-03T05:30:42.9865083Z","RunDurationInMilliseconds":515}