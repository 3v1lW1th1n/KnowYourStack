{"Data":{"Vue-Issues":{"Issues":[{"Id":"403481095","IsPullRequest":false,"CreatedAt":"2019-01-27T20:03:00","Actor":"danyadev","Number":"9375","RawContent":null,"Title":"Lags when updating the class","State":"closed","Body":"### Version\r\n2.6.0-beta.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/danyadev/pen/wNGaQo](https://codepen.io/danyadev/pen/wNGaQo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Scroll to end (hide button)\r\n2) Scroll up (show button)\r\n\r\n### What is expected?\r\nNo lags (everything is fine in versions below 2.6-beta.1)\r\n\r\n### What is actually happening?\r\nLags while scrolling (if they are not, then increase the number of elements in v-for)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9375","RelatedDescription":"Closed issue \"Lags when updating the class\" (#9375)"},{"Id":"403512547","IsPullRequest":false,"CreatedAt":"2019-01-27T15:14:18","Actor":"rominf","Number":"9378","RawContent":null,"Title":"Add possibility to modify the URL in the browser status bar on hovering router-link","State":"closed","Body":"### What problem does this feature solve?\r\nI want to create something like a search engine. To count user clicks I use `<router-link>` instead of `<a>`. When the user clicks on a link (let say https://google.com/) Vue Router catches that it looks like an external link and `beforeEnter` hook counts this click and replaces `window.location` to an appropriate value.\r\n\r\nThe problem is that when the user hovers the link, he sees https://mysite.com/https://google.com/ instead of https://google.com/. I want to fix this.\r\n\r\nThere is a way to replace an URL, displayed in the status bar, used by Google and other search engines: https://stackoverflow.com/questions/2813648/how-do-google-and-yahoo-replace-the-url-in-the-browser-status-bar\r\n\r\nI propose to implement this in `<router-link>` by adding an optional tag `external`.\r\n\r\n### What does the proposed API look like?\r\n`<router-link to=\"https://google.com/\" external>Google</router-link>`\r\n\r\nProbably, it would be worth to create a separate handler for external links in routes:\r\n```javascipt\r\nconst routes = [\r\n  {\r\n    path: '*',\r\n    external: true,\r\n  }\r\n]\r\n```\r\nwhich will catch all clicks of `<router-link>` with `external` tag and add:\r\n```javascript\r\nbeforeEnter(to, from, next) {\r\n  window.location = to.path.slice(1);\r\n}\r\n```\r\nto redirect to external link.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9378","RelatedDescription":"Closed issue \"Add possibility to modify the URL in the browser status bar on hovering router-link\" (#9378)"},{"Id":"403554530","IsPullRequest":true,"CreatedAt":"2019-01-27T14:05:44","Actor":"andoshin11","Number":"9379","RawContent":null,"Title":"feat(types): expose ElementAttributesProperty for TSX","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n# Descriptions\r\nWith current type definitions, it's extremely difficult for developers to pass props to children components when writing TSX since there's no exposed property that JSX can handle as element attributes properties.\r\n\r\n![2019-01-27 22 45 39](https://user-images.githubusercontent.com/8381075/51801762-4e3b1380-2285-11e9-8262-18136c6afbe1.png)\r\n \r\nThis PullRequest achieves 2 things.\r\n- Creates new property `_attrs` to the `ExtendedVue` type so it can be used inside `JSX.ElementAttributesProperty`.(Examples are below)\r\n- Transform non-required props into optional properties of `props` interface.\r\n\r\n## Example\r\n\r\nGiven these 2 children components...\r\n\r\n```js\r\n// PrimaryButton.tsx\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'Primary Button',\r\n  props: {\r\n    label: {\r\n      type: String,\r\n      required: true as true\r\n    },\r\n    color: String\r\n  },\r\n  computed: {\r\n    style(): string {\r\n      return `color: ${this.color || 'blue'};`\r\n    }\r\n  },\r\n  render() {\r\n    return <button style={this.style}>{this.label}</button>\r\n  }\r\n})\r\n```\r\n\r\n```js\r\n// SecondaryButton.tsx\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'Secondary Button',\r\n  props: ['color', 'label'],\r\n  computed: {\r\n    style(): string {\r\n      return `color: ${this.color || 'blue'};`\r\n    }\r\n  },\r\n  render() {\r\n    return <button style={this.style}>{this.label}</button>\r\n  }\r\n})\r\n```\r\n\r\nand prepare `shims-tsx.d.ts` like this\r\n\r\n```js\r\n// shims-tsx.d.ts\r\nimport Vue, { VNode } from 'vue'\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface Element extends VNode {}\r\n    interface ElementClass extends Vue {}\r\n    interface ElementAttributesProperty {\r\n      _attrs: any\r\n    }\r\n    interface IntrinsicElements {\r\n      [elem: string]: any\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nProperty completion works as expected.\r\n\r\n![2019-01-27 22 55 58](https://user-images.githubusercontent.com/8381075/51801907-2e0c5400-2287-11e9-95db-6d99dfa59ddb.png)\r\n\r\nType error warned as expected.\r\n\r\n![2019-01-27 22 56 15](https://user-images.githubusercontent.com/8381075/51801908-2e0c5400-2287-11e9-8953-9f0357920edb.png)\r\n\r\nand no more errors with correct props declaration 👍 \r\n\r\n![2019-01-27 23 00 09](https://user-images.githubusercontent.com/8381075/51801914-52683080-2287-11e9-8b29-31700b54c77f.png)\r\n","Url":"https://github.com/vuejs/vue/pull/9379","RelatedDescription":"Open PR \"feat(types): expose ElementAttributesProperty for TSX\" (#9379)"},{"Id":"403511058","IsPullRequest":false,"CreatedAt":"2019-01-27T03:56:46","Actor":"buguima","Number":"9377","RawContent":null,"Title":"vue + typescript beforeRouteEnter ","State":"closed","Body":"在main.ts中\r\n// 注册钩子\r\nComponent.registerHooks([\r\n  'beforeRouteEnter',\r\n  'beforeRouteLeave',\r\n  'beforeRouteUpdate',\r\n]);\r\n在组件中 钩子不触发\r\n![image](https://user-images.githubusercontent.com/34476914/51796312-85c8a200-222a-11e9-986b-88d32009b2e5.png)\r\n![image](https://user-images.githubusercontent.com/34476914/51796313-937e2780-222a-11e9-86b1-20027401e695.png)\r\n","Url":"https://github.com/vuejs/vue/issues/9377","RelatedDescription":"Closed issue \"vue + typescript beforeRouteEnter \" (#9377)"},{"Id":"403481833","IsPullRequest":false,"CreatedAt":"2019-01-26T22:07:41","Actor":"mrodal","Number":"9376","RawContent":null,"Title":"Component with extends imported with import() breaks HMR when changing base component","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[Here](https://github.com/mrodal/reported-issues/tree/vue-extended-comp-hmr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Have a Base and Extended component. \r\n- Extended extends Base\r\n- Import Extended with dynamic import()\r\n- Run site with HMR\r\n- Change Base script\r\n\r\n### What is expected?\r\nExtended is rendered\r\n\r\n### What is actually happening?\r\nBase is being rendered\r\n\r\n---\r\nThis doesnt happen with normal `import Extended from 'Extended.vue'`\r\n\r\n**Edit:** I take that last thing back, now it seems to be happening with the normal import too\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9376","RelatedDescription":"Closed issue \"Component with extends imported with import() breaks HMR when changing base component\" (#9376)"},{"Id":"403412710","IsPullRequest":false,"CreatedAt":"2019-01-26T15:29:54","Actor":"nkgwnoto","Number":"9374","RawContent":null,"Title":"Please put the uninstall command in the official document.","State":"closed","Body":"### What problem does this feature solve?\r\nPremise\r\n· The npm install vue described in the installation page of the official documentation page https://vuejs.org/v2/guide/installation.html has been executed and installed.\r\n· I wanted to revert to a state that was not installed once and install it again.\r\n\r\ntrouble\r\n· Uninstall command corresponding to installation command of official document could not be found\r\n\r\nSuggestion\r\n· I want you to put the uninstall command in the official document.\r\n\r\n### What does the proposed API look like?\r\nSince this is an issue for the document this time, there is no proposal for the API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9374","RelatedDescription":"Closed issue \"Please put the uninstall command in the official document.\" (#9374)"},{"Id":"403400807","IsPullRequest":true,"CreatedAt":"2019-01-26T04:21:59","Actor":"yyx990803","Number":"9373","RawContent":null,"Title":"Dynamic directive arguments","State":"closed","Body":"Implementation per https://github.com/vuejs/rfcs/pull/4","Url":"https://github.com/vuejs/vue/pull/9373","RelatedDescription":"Closed or merged PR \"Dynamic directive arguments\" (#9373)"},{"Id":"403313440","IsPullRequest":true,"CreatedAt":"2019-01-26T03:34:07","Actor":"yyx990803","Number":"9371","RawContent":null,"Title":"perf: improve scoped slots change detection accuracy","State":"closed","Body":"Ensure that state mutations that only affect parent scope only trigger parent update and does not affect child components with only scoped slots.\r\n\r\nImplications:\r\n\r\n- For optimal performance, scoped slots should always be preferred. (In v3 all slots are unified to work like scoped slots so that will be the default)\r\n\r\n- In 2.6, any slots using the new `v-slot` syntax are compiled as scopedSlots internally. This doesn't affect the child if it's using template, since `<slot/>` can render both scoped and normal slots, but if the child is using render functions, it is recommended to always use `this.$scopedSlots`. It is safe to do so in 2.6 since all normal slots are proxied on `this.$scopedSlots` as well.\r\n\r\n- Unfortunately, any child components with static slot content still need to be forced updated. This means the common use case of `<parent><child></child></parent>` doesn't benefit from this change, unless the default slot is explicitly forced into a scoped slot by using `<parent v-slot:default><child></child></parent>`. (We cannot directly force all slots into scoped slots as that would break existing render function code that expects the slot to be present on `this.$slots` instead of `this.$scopedSlots)","Url":"https://github.com/vuejs/vue/pull/9371","RelatedDescription":"Closed or merged PR \"perf: improve scoped slots change detection accuracy\" (#9371)"},{"Id":"403400014","IsPullRequest":false,"CreatedAt":"2019-01-26T03:24:22","Actor":"meteorlxy","Number":"9372","RawContent":null,"Title":"Types of FunctionalComponentOptions breaks","State":"open","Body":"### Version\r\n\r\nvue: 2.5.22\r\n\r\ntypescript: 3.2.4\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/meteorlxy/9x2ts16a/1/](https://jsfiddle.net/meteorlxy/9x2ts16a/1/)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ts\r\n// works with vue 2.5.17\r\n// fails with vue 2.5.18+\r\nimport Vue, { FunctionalComponentOptions } from 'vue'\r\n\r\nconst testFunctionalOptions: FunctionalComponentOptions = {\r\n  functional: true,\r\n}\r\n\r\nVue.component('Test', testFunctionalOptions)\r\n```\r\n\r\n### What is expected?\r\nNo types error as in v2.5.17\r\n\r\n### What is actually happening?\r\n```sh\r\nerror TS2345: Argument of type 'FunctionalComponentOptions<Record<string, any>, PropsDefinition<Record<string, any>>>' is not assignable to parameter of type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Record<string, any>>, Record<string, any>>'.\r\n  Types of property 'render' are incompatible.\r\n    Type '(this: undefined, createElement: CreateElement, context: RenderContext<Record<string, any>>) => VNode | VNode[]' is not assignable to type '(createElement: CreateElement, hack: RenderContext<Record<string,\r\nany>>) => VNode'.\r\n      Type 'VNode | VNode[]' is not assignable to type 'VNode'.\r\n        Type 'VNode[]' is missing the following properties from type 'VNode': isRootInsert, isComment\r\n```\r\n\r\n### PS\r\n\r\nIt seems to be introduced here:\r\n\r\nhttps://github.com/vuejs/vue/commit/bf2e2ed159f680cd4e230427ce94739c657c1b61#diff-23d7799dcc9e9be419d28a15348b0d99R116\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9372","RelatedDescription":"Open issue \"Types of FunctionalComponentOptions breaks\" (#9372)"},{"Id":"403265757","IsPullRequest":false,"CreatedAt":"2019-01-25T18:29:17","Actor":"yamsellem","Number":"9370","RawContent":null,"Title":"Clarify v-model in the docs","State":"closed","Body":"### What problem does this feature solve?\r\nOn multiple occasions, the docs clearly stated that \"v-model on a component uses value as the prop and input as the event\" ([here](https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model) and [there](https://vuejs.org/v2/guide/components.html#Using-v-model-on-Components)) but this is not true.\r\n\r\n* on `input[type=text]` and `textarea`, v-model uses `value` as the prop and `input` as the event\r\n* on `input[type=radio]` and `input[type=checkbox]`, v-model uses `checked` as the prop and `input` as the event\r\n* on `select`, v-model uses `value` as the prop and `change` as the event\r\n\r\nMore relevant issues related to this:\r\n* dynamic input value with radio buttons don't work in IE11 [#8379](https://github.com/vuejs/vue/issues/8379)\r\n* <select @input=\"...\"> doesn't work in IE11 but works with v-model [#4701](https://github.com/vuejs/vue/issues/4701)\r\n\r\nMay you please consider detailing for each control (input, radio, checkbox, select, etc) what is the role of v-model? This would be of great help!\r\n\r\n### What does the proposed API look like?\r\n--\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9370","RelatedDescription":"Closed issue \"Clarify v-model in the docs\" (#9370)"},{"Id":"403088059","IsPullRequest":true,"CreatedAt":"2019-01-25T10:08:52","Actor":"andoshin11","Number":"9369","RawContent":null,"Title":"feat(types): add DOM type definition for JSX element","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\n# Descriptions\r\n- Inspired by [vue-tsx-support](https://github.com/wonderful-panda/vue-tsx-support) by @wonderful-panda who was also inspired by [@types/react](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react/v15)\r\n- This PR is not aiming for perfection. I'd love to hear feedbacks from Vue core team as this is my very first PR.\r\n\r\nBy providing officially maintained HTML Attributes Types, developers can get a huge benefit when they are writing TSX.\r\n\r\n![2019-01-25 19 04 08](https://user-images.githubusercontent.com/8381075/51739106-07f28280-20d4-11e9-849f-ce708eef0765.png)\r\n\r\nAll you need is just a few tweaks on `shims-tsx.d.ts`\r\n\r\n```js\r\n// shims-tsx.d.ts\r\nimport Vue, { VNode, VIntrinsicElementAttributes } from 'vue'\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    // tslint:disable no-empty-interface\r\n    interface Element extends VNode {}\r\n    // tslint:disable no-empty-interface\r\n    interface ElementClass extends Vue {}\r\n    interface IntrinsicElements extends VIntrinsicElementAttributes {\r\n      [elem: string]: any\r\n    }\r\n  }\r\n}\r\n```","Url":"https://github.com/vuejs/vue/pull/9369","RelatedDescription":"Open PR \"feat(types): add DOM type definition for JSX element\" (#9369)"},{"Id":"403083321","IsPullRequest":true,"CreatedAt":"2019-01-25T09:56:48","Actor":"f2009","Number":"9368","RawContent":null,"Title":"Rhe dev","State":"closed","Body":"The First PR!!!","Url":"https://github.com/vuejs/vue/pull/9368","RelatedDescription":"Closed or merged PR \"Rhe dev\" (#9368)"},{"Id":"402975561","IsPullRequest":false,"CreatedAt":"2019-01-25T02:11:27","Actor":"Sweetjqq","Number":"9367","RawContent":null,"Title":"vue中引用外部html！！！！！！！！！！！！！！！！！！！！！！！！！！","State":"closed","Body":"vue项目中读取到后台接口返回的html，访问不到405，在火狐上面可以，谷歌上面不可以","Url":"https://github.com/vuejs/vue/issues/9367","RelatedDescription":"Closed issue \"vue中引用外部html！！！！！！！！！！！！！！！！！！！！！！！！！！\" (#9367)"},{"Id":"402969886","IsPullRequest":true,"CreatedAt":"2019-01-25T01:41:55","Actor":"Itisfilipe","Number":"9366","RawContent":null,"Title":"Explicitly disable a transition by setting it to false (fix #9320)","State":"open","Body":"<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nWith this change will be possible to set `appear` to `false` and disable it dynamically. fix #9320\r\n\r\n### Appear set to false\r\n![image](https://user-images.githubusercontent.com/4977614/51719568-16d42900-2031-11e9-9591-2a05321e4342.png)\r\n\r\n### Appear defined but not set \r\n![image](https://user-images.githubusercontent.com/4977614/51719593-33706100-2031-11e9-85cb-230ea21333cb.png)\r\n\r\n### Appear not defined\r\nNotice that consider `appear` to be `False` when absent would require either a change for the corner case or a breaking change\r\n![image](https://user-images.githubusercontent.com/4977614/51719626-53a02000-2031-11e9-9b47-2ffea06e9422.png)\r\n\r\n","Url":"https://github.com/vuejs/vue/pull/9366","RelatedDescription":"Open PR \"Explicitly disable a transition by setting it to false (fix #9320)\" (#9366)"},{"Id":"402709688","IsPullRequest":true,"CreatedAt":"2019-01-24T13:35:29","Actor":"Itisfilipe","Number":"9365","RawContent":null,"Title":"fix inline-template crashing (fix #9361)","State":"open","Body":"<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nThe generator function for inline templates `genInlineTemplate ` did not prevent the generation of code when an invalid template was being introduced. \r\n\r\nThe solution introduced is verifying the existence of the first child before checking for its type, this should prevent the application from crashing trying to access attributes in an `undefined` child variable.\r\n\r\ncloses #9361\r\n\r\n### How to Reproduce\r\n\r\n<details>\r\n<summary>Index HTML</summary>\r\n\r\n```HTML\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <title>Hello World!</title>\r\n    <!-- This is a development version of Vue.js! -->\r\n    <!-- <script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script> -->\r\n    <script src=\"./vue.js\"></script>\r\n    <script src=\"/main.js\" type=\"module\"></script>\r\n  </head>\r\n  <body>\r\n    <div id=\"app\"></div>\r\n  </body>\r\n</html>\r\n\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>JS code</summary>\r\n\r\n```JavaScript\r\n// ### main.js ###\r\nimport App from \"./App.js\";\r\n\r\nVue.config.productionTip = false;\r\n\r\nnew Vue({\r\n  render: h => h(App),\r\n}).$mount(`#app`);\r\n\r\n\r\n// ### App.js ###\r\nvar HelloWorld = {\r\n  name: 'HelloWorld',\r\n  template: `<div></div>`,\r\n  props: {\r\n    msg: String\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    HelloWorld\r\n  },\r\n  template: `\r\n    <div id=\"app\">\r\n      <div is=\"helloWorld\" inline-template></div>\r\n    </div>\r\n  `,\r\n};\r\n\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>Error with current implementation</summary>\r\n\r\n![image](https://user-images.githubusercontent.com/4977614/51681442-b8c12a80-1fcb-11e9-9b05-ff1d464df307.png)\r\n\r\n</details>\r\n\r\n<details><summary>Error with this fix</summary>\r\n\r\n![image](https://user-images.githubusercontent.com/4977614/51681469-d1c9db80-1fcb-11e9-88db-1577caa2c6d1.png)\r\n\r\n</details>","Url":"https://github.com/vuejs/vue/pull/9365","RelatedDescription":"Open PR \"fix inline-template crashing (fix #9361)\" (#9365)"},{"Id":"402677279","IsPullRequest":false,"CreatedAt":"2019-01-24T12:07:38","Actor":"badz0","Number":"9364","RawContent":null,"Title":"Transition not triggering @appear when used as the root of a component with appear attr","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codepen.io/bogdan-muranets/pen/ErjOXy](https://codepen.io/bogdan-muranets/pen/ErjOXy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen repro, click on the \"show\" button and note that \"animated on enter\" text appeared.\r\n\r\n### What is expected?\r\nTo see a text \"animated on appear\" which has to be added by `@appear` hook.\r\n\r\n### What is actually happening?\r\nThe `@enter` hook is called instead of `@appear`.\r\n\r\n---\r\nImportant is that `transition` is moved to separate component. Also, everything works as expected if `transition` isn't a root element in a separate component or the component is `functional`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9364","RelatedDescription":"Open issue \"Transition not triggering @appear when used as the root of a component with appear attr\" (#9364)"},{"Id":"402597541","IsPullRequest":false,"CreatedAt":"2019-01-24T08:42:13","Actor":"phouri","Number":"9363","RawContent":null,"Title":"transition-group replacing group flicker","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/y3910wr9j9](https://codesandbox.io/s/y3910wr9j9)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the change button in the link, no matter if animation is on or off (changing the animation name) - there is a brief flicker where both groups are present. \r\n\r\nThis is barely visible in this scenario, but on a full page and more rows it's a lot more visible.\r\n(Might need to click multiple times to notice) \r\n\r\n### What is expected?\r\nGroups would transition \"atomically\" without having a moment where both groups are present\r\n\r\n### What is actually happening?\r\nBoth groups are present for a moment \r\n\r\n---\r\nThe only way to solve this is to remove the the transition-group component completely, not even changing the name of the transition to null or something that doesn't match works.\r\n\r\nHappened when I was working on a data table and was using the move transition for sorting, and then when replacing rows completely I saw this flicker and couldn't get around it easily.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9363","RelatedDescription":"Open issue \"transition-group replacing group flicker\" (#9363)"},{"Id":"402538732","IsPullRequest":true,"CreatedAt":"2019-01-24T04:33:41","Actor":"Kermit-Xuan","Number":"9362","RawContent":null,"Title":"fix(#9361): appear error when using inline-template with no children","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nadd a dev-only warning for inline-template with no children.","Url":"https://github.com/vuejs/vue/pull/9362","RelatedDescription":"Open PR \"fix(#9361): appear error when using inline-template with no children\" (#9362)"},{"Id":"402358413","IsPullRequest":false,"CreatedAt":"2019-01-23T17:50:36","Actor":"ChristianStornowski","Number":"9361","RawContent":null,"Title":"Warn when using inline-template attribute but no children","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/r71q8py7mp](https://codesandbox.io/s/r71q8py7mp)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen https://codesandbox.io/s/r71q8py7mp and read console log\r\n\r\n### What is expected?\r\nDon't execute following code from `genInlineTemplate` when `el.children.length !== 1 || ast.type !== 1` is true because `ast` is undefined.\r\n\r\n```\r\nfunction genInlineTemplate (el, state) {\r\n    var ast = el.children[0];\r\n    if (el.children.length !== 1 || ast.type !== 1) {\r\n      state.warn(\r\n        'Inline-template components must have exactly one child element.',\r\n        { start: el.start }\r\n      );\r\n    }\r\n    if (ast.type === 1) {\r\n      var inlineRenderFns = generate(ast, state.options);\r\n      return (\"inlineTemplate:{render:function(){\"   (inlineRenderFns.render)   \"},staticRenderFns:[\"   (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\"   code   \"}\"); }).join(','))   \"]}\")\r\n    }\r\n  }\r\n```\r\n\r\n### What is actually happening?\r\nExecuting\r\n\r\n```\r\n var inlineRenderFns = generate(ast, state.options);\r\n      return (\"inlineTemplate:{render:function(){\"   (inlineRenderFns.render)   \"},staticRenderFns:[\"   (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\"   code   \"}\"); }).join(','))   \"]}\")\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9361","RelatedDescription":"Open issue \"Warn when using inline-template attribute but no children\" (#9361)"},{"Id":"402357498","IsPullRequest":false,"CreatedAt":"2019-01-23T17:48:53","Actor":"k4rz4","Number":"9360","RawContent":null,"Title":"Variable is defined as number but on event v-model changes to string","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/48r5zeLy/2/](https://jsfiddle.net/48r5zeLy/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nv-model on input field converts variable from number to string.\r\n\r\n### What is expected?\r\nFor instance i want to send some data to api and i have declared type of item in object as 'Number', should stay as number\r\n\r\n\r\n### What is actually happening?\r\nVar type is converted to 'String'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9360","RelatedDescription":"Closed issue \"Variable is defined as number but on event v-model changes to string\" (#9360)"},{"Id":"402329210","IsPullRequest":false,"CreatedAt":"2019-01-23T16:44:13","Actor":"xak2000","Number":"9359","RawContent":null,"Title":"Clarify in documentation that \"slot-scope\" is named \"scope\" before 2.5.0","State":"closed","Body":"### What problem does this feature solve?\r\nThe [documentation](https://vuejs.org/v2/guide/components-slots.html#Scoped-Slots) about Scoped Slots says:\r\n\r\n> In 2.5.0 , `slot-scope` is no longer limited to the `<template>` element, but can instead be used on any element or component in the slot.\r\n\r\nBut it is not says, that until 2.5.0, `slot-scope` doesn't work at all, even inside `<template>` element. To make it work, It must be `scope` inside `<template>` element.\r\n\r\n### What does the proposed API look like?\r\nIt will be good to mention in the same warning element in documentation, that `slot-scope` not works until 2.5.0 and `slot` must be used instead.\r\n\r\nSomething, like:\r\n\r\n> Until 2.5.0, `slot-scope` was named `scope` and was limited to the `<template>` element.\r\n> In 2.5.0 , `slot-scope` is no longer limited to the `<template>` element, but can instead be used on any element or component in the slot.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9359","RelatedDescription":"Closed issue \"Clarify in documentation that \"slot-scope\" is named \"scope\" before 2.5.0\" (#9359)"},{"Id":"402151085","IsPullRequest":true,"CreatedAt":"2019-01-23T09:43:35","Actor":"posva","Number":"9358","RawContent":null,"Title":"feat(props): allow defining a required prop as null","State":"open","Body":"Based on #1961. It wasn't possible to specify a required prop of type object and pass null as the\r\nvalue\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThe tests cases reflect what I'm trying to fix. I remember this was pointed out multiple times in the past. We cannot explicitely pass a `null` prop when the type is `Object` and the prop is required. This would keep current behaviour but allow having the type `null` for explicit null values. I want to add more tests and maybe refactor but I remember this was problematic as it could break some validation, so I would like so feedback about types you may use that would break with this","Url":"https://github.com/vuejs/vue/pull/9358","RelatedDescription":"Open PR \"feat(props): allow defining a required prop as null\" (#9358)"},{"Id":"401968802","IsPullRequest":false,"CreatedAt":"2019-01-22T21:48:26","Actor":"kjleitz","Number":"9357","RawContent":null,"Title":"Function-type props broken in TypeScript","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/keegan_openbay/gehkx7pf/10/](https://jsfiddle.net/keegan_openbay/gehkx7pf/10/)\r\n\r\n(More explanation in the fiddle, but keep in mind that JSFiddle doesn't show TS errors)\r\n\r\n### Steps to reproduce\r\n1. Declare a prop of type `Function`, and with a default function that returns some value; e.g.,\r\n\r\n```ts\r\n// ...\r\n  props: {\r\n    fooFn: {\r\n      type: Function,\r\n      default: () => true,\r\n    },\r\n  },\r\n// ...\r\n```\r\n\r\n2. Try to use that function elsewhere in your component options; e.g.,\r\n\r\n```ts\r\n// ...\r\n  methods: {\r\n    useFooFn(): void {\r\n      const bar = this.fooFn();\r\n      // ...\r\n    },\r\n  },\r\n// ...\r\n```\r\n\r\n### What is expected?\r\n```ts\r\ntype FooFn = typeof this.fooFn; // Function\r\nthis.fooFn(); // no errors\r\n```\r\n\r\n### What is actually happening?\r\n```ts\r\ntype FooFn = typeof this.fooFn; // boolean | Function\r\nthis.fooFn();\r\n// Cannot invoke an expression whose type lacks a call signature.\r\n// Type 'boolean | Function' has no compatible call signatures.\r\n```\r\n\r\n---\r\nVue version: 2.5.22\r\nTypeScript version: 3.0.3\r\n\r\ntsconfig.json:\r\n\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"declaration\": false,\r\n    \"emitDecoratorMetadata\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"lib\": [\"es7\", \"dom\"],\r\n    \"module\": \"es2015\",\r\n    \"moduleResolution\": \"node\",\r\n    \"sourceMap\": true,\r\n    \"target\": \"es5\",\r\n    \"allowSyntheticDefaultImports\": true,\r\n    \"esModuleInterop\": true,\r\n    \"baseUrl\": \"./app/javascript\",\r\n    \"noImplicitThis\": true\r\n  },\r\n  \"include\": [\r\n    \"app/javascript/**/*.ts\",\r\n    \"app/javascript/**/*.tsx\",\r\n    \"app/javascript/**/*.vue\"\r\n  ],\r\n  \"exclude\": [\r\n    \"**/*.spec.ts\",\r\n    \"node_modules\"\r\n  ],\r\n  \"compileOnSave\": false\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9357","RelatedDescription":"Open issue \"Function-type props broken in TypeScript\" (#9357)"},{"Id":"401690024","IsPullRequest":true,"CreatedAt":"2019-01-22T11:27:54","Actor":"gooqiao","Number":"9356","RawContent":null,"Title":"feat: add $filters property","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] This feature can be used in JavaScript or JSX since there is not such shortcut in javascript.\r\n\r\n\r\n\r\n**For example:**\r\n ``` js\r\nmethods: {\r\n    rowClick(row, _, column) {\r\n      var time = this.$filters.dateFilter(row.date,\"YYYY-MM-DD\")\r\n    },\r\n}\r\n```","Url":"https://github.com/vuejs/vue/pull/9356","RelatedDescription":"Closed or merged PR \"feat: add $filters property\" (#9356)"},{"Id":"401664466","IsPullRequest":false,"CreatedAt":"2019-01-22T09:11:28","Actor":"zlumer","Number":"9355","RawContent":null,"Title":"Inconsistent Vue.set() and Vue.delete() TypeScript types","State":"open","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://bit.ly/2W6bvIu](https://bit.ly/2W6bvIu)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Make sure you have `strict: true` in your `tsconfig.json` to handle all type mismatch cases.\r\n2. Run TypeScript compiler against provided code.\r\n\r\n### What is expected?\r\nVue mimics TypeScript behaviour, triggers compiler errors on not allowed operations.\r\n\r\n### What is actually happening?\r\nVue doesn't trigger any compilation errors.\r\n\r\n---\r\nAs discussed in #9347 and #9353, TypeScript typings for `Vue.set()` and `Vue.delete()` are not consistent with TypeScript behavior.\r\nWhile TypeScript helps catch bugs at compile time with its type system, Vue breaks certain TypeScript rules due to incomplete type definitions in `vue.d.ts`\r\n\r\nI propose changing `Vue.set()`/`Vue.delete()` typings to the following:\r\n```typescript\r\nset<T, K extends keyof T>(object: T, key: K, value: T[K]): T[K];\r\ndelete<T>(object: T, key: keyof T): void;\r\n```\r\nThis will match TypeScript behaviour on provided examples.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9355","RelatedDescription":"Open issue \"Inconsistent Vue.set() and Vue.delete() TypeScript types\" (#9355)"},{"Id":"401624086","IsPullRequest":false,"CreatedAt":"2019-01-22T07:04:16","Actor":"vegetaandbulma","Number":"9354","RawContent":null,"Title":"What do you think of the https://github.com/Meituan-Dianping/mpvue  project? Can the Vue project add a plug-in-like function to improve this requirement?","State":"closed","Body":"### What problem does this feature solve?\r\nWhat do you think of the https://github.com/Meituan-Dianping/mpvue  project? Can the Vue project add a plug-in-like function to improve this requirement?\r\n\r\n### What does the proposed API look like?\r\nWhat do you think of the https://github.com/Meituan-Dianping/mpvue  project? Can the Vue project add a plug-in-like function to improve this requirement?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9354","RelatedDescription":"Closed issue \"What do you think of the https://github.com/Meituan-Dianping/mpvue  project? Can the Vue project add a plug-in-like function to improve this requirement?\" (#9354)"},{"Id":"401460694","IsPullRequest":false,"CreatedAt":"2019-01-21T18:03:50","Actor":"zlumer","Number":"9353","RawContent":null,"Title":"Inconsistent Vue.set() and Vue.delete() TypeScript types","State":"closed","Body":"As mentioned in #9347, there are certain cases right now where Vue types for `Vue.set()` and `Vue.delete()` work unexpectedly:\r\n\r\n1. Setting the value of a field that doesn't exist on the object type:\r\n```typescript\r\nlet obj = { height: 100 }\r\nVue.set(obj, \"heigth\", 50) // typo in the field name is ignored, obj becomes { height: 100, heigth: 50 }\r\n```\r\n\r\n2. Deleting a field that's not supposed to exist:\r\n```typescript\r\nlet obj = { foo: 'bar' }\r\nVue.delete(obj, 'fooo') // typo is ignored, obj remains { foo: 'bar' }\r\n```\r\n\r\n3. Setting the value of an incorrect type:\r\n```typescript\r\nlet obj: { width?: number } = { }\r\nVue.set(obj, \"width\", \"0px\") // field type is ignored, obj becomes { width: \"0px\" } while still typed as { width?: number }\r\nif (typeof obj.width !== \"undefined\")\r\n  obj.width.toFixed(10) // compiles in TS but throws in runtime\r\n```\r\n\r\n4. Adding a new field to the object and then accessing it:\r\n```typescript\r\nlet x = {}\r\nVue.set(x, 'foo', 'bar') // compiles without errors\r\nx.foo // tsc error\r\n```\r\n\r\nWhile I agree that fix in #9347 may not be up to standard, I'm pretty confident that this issue needs to be tackled in one way or another.\r\n\r\nWhat are your thoughts on this?","Url":"https://github.com/vuejs/vue/issues/9353","RelatedDescription":"Closed issue \"Inconsistent Vue.set() and Vue.delete() TypeScript types\" (#9353)"},{"Id":"401422244","IsPullRequest":false,"CreatedAt":"2019-01-21T16:17:03","Actor":"fxdave","Number":"9352","RawContent":null,"Title":"Child component with props only updating if the prop is used in the child's template","State":"closed","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/te8kcj1u/](https://jsfiddle.net/te8kcj1u/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nDo not use props in child template, and try to catch the updated property in the child's updated hook.\r\n\r\n### What is expected?\r\nIt should catch the prop\r\n\r\n### What is actually happening?\r\nIt is not catching the prop\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9352","RelatedDescription":"Closed issue \"Child component with props only updating if the prop is used in the child's template\" (#9352)"},{"Id":"401283422","IsPullRequest":false,"CreatedAt":"2019-01-21T10:52:24","Actor":"lxmfly123","Number":"9351","RawContent":null,"Title":"Custom directives must be provided value in pug template","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/lxm9/pen/pGzWWz?editors=1011](https://codepen.io/lxm9/pen/pGzWWz?editors=1011)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust open the reproduction link and watch\r\n\r\n### What is expected?\r\nThe `input` element should be focused.\r\n\r\n### What is actually happening?\r\nThe console output error: v is not defined.\r\n\r\n---\r\nCustom directives must be provided value in pug template, or it will raise an error: v is not defined.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9351","RelatedDescription":"Closed issue \"Custom directives must be provided value in pug template\" (#9351)"},{"Id":"401250190","IsPullRequest":false,"CreatedAt":"2019-01-21T08:54:53","Actor":"Joeycz","Number":"9350","RawContent":null,"Title":"动态插入的页面javascript怎么配置crossorigin=\"anonymous\"","State":"closed","Body":"![image](https://user-images.githubusercontent.com/7298176/51463010-11f74700-1d9d-11e9-9482-4a486e13918b.png)\r\n\r\n如题。\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/9350","RelatedDescription":"Closed issue \"动态插入的页面javascript怎么配置crossorigin=\"anonymous\"\" (#9350)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"403528797","IsPullRequest":true,"CreatedAt":"2019-01-27T15:14:57","Actor":"Alex-Sokolov","Number":"2599","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/c3e587238a4e6d4e650e762b3442b286fcb9fe36#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2599","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2599)"},{"Id":"403531058","IsPullRequest":false,"CreatedAt":"2019-01-27T11:32:03","Actor":"rominf","Number":"2600","RawContent":null,"Title":"beforeEnter next callback is not called","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2ykhv8jq/](https://jsfiddle.net/2ykhv8jq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with `beforeEnter` handler which calls `next` with a callback function.\r\n\r\nIn jsfiddle.net click the button and check the console.\r\n\r\n### What is expected?\r\n\"Am i called\" and the `vm` should be present. \r\n\r\n### What is actually happening?\r\nLine with \"Am i called\" is not present.\r\n\r\n---\r\nCode borrowed from https://github.com/vuejs/vue-router/issues/737#issuecomment-446565958\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2600","RelatedDescription":"Closed issue \"beforeEnter next callback is not called\" (#2600)"},{"Id":"402747012","IsPullRequest":true,"CreatedAt":"2019-01-24T15:02:10","Actor":"jcoyne","Number":"2598","RawContent":null,"Title":"Update vue-router version to match package.json","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2598","RelatedDescription":"Closed or merged PR \"Update vue-router version to match package.json\" (#2598)"},{"Id":"402626070","IsPullRequest":false,"CreatedAt":"2019-01-24T09:56:40","Actor":"cybermerlin","Number":"2597","RawContent":null,"Title":"hey guys, I have trouble with dynamic imports in routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509](https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\npls, watch on the screenshot\r\n\r\n### What is expected?\r\ngood work\r\n\r\n### What is actually happening?\r\nnot work\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2597","RelatedDescription":"Closed issue \"hey guys, I have trouble with dynamic imports in routes\" (#2597)"},{"Id":"402529730","IsPullRequest":false,"CreatedAt":"2019-01-24T08:23:24","Actor":"mice33","Number":"2596","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mice33/router-demo](https://github.com/mice33/router-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.run dev && visit website  \r\n2.click 'go to h2' link  \r\n3.click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\n### What is expected?\r\n3.click 'go back' link, can go back\r\n\r\n### What is actually happening?\r\n3.click 'go back' link, can't go back\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nSame problem #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2596","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2596)"},{"Id":"402518493","IsPullRequest":false,"CreatedAt":"2019-01-24T07:49:51","Actor":"ovarte","Number":"2594","RawContent":null,"Title":"vue-router and axios 拦截器一起使用 出现的异步问题","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwdtae9u/3/](https://jsfiddle.net/jwdtae9u/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n详见JSFiddle。通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，请问怎么解决呢\r\n\r\n### What is expected?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。请问怎么解决呢\r\n\r\n### What is actually happening?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。\r\n\r\n---\r\n怎么解决 vue-router和 axios 拦截器 一起使用的问题呢 非常感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2594","RelatedDescription":"Closed issue \"vue-router and axios 拦截器一起使用 出现的异步问题\" (#2594)"},{"Id":"402529161","IsPullRequest":false,"CreatedAt":"2019-01-24T03:41:50","Actor":"mice33","Number":"2595","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"Demo: https://github.com/mice33/router-demo\r\n\r\nChrome 70\r\n\r\ncan't from 'h2' page go back 'Hello World' page when the onload event of window not triggered\r\n\r\nsteps:\r\n1. run dev && visit website\r\n2. click 'go to h2' link\r\n3. click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\nlink #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2595","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2595)"},{"Id":"401790731","IsPullRequest":false,"CreatedAt":"2019-01-22T14:29:48","Actor":"yegorLitvinov","Number":"2593","RawContent":null,"Title":"replaceState Error when path starts with // and scrollBehavior is set","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/yegorLitvinov/vue-router-bug](https://github.com/yegorLitvinov/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSet scrollBehavior property in router config. Put two forward slashes into beginning of the url (e.g. http://localhost:8081//about)\r\n\r\n### What is expected?\r\nNo errors in console\r\n\r\n### What is actually happening?\r\nIn firefox: SecurityError: The operation is insecure.\r\nIn Chrome: Uncaught DOMException: Failed to execute 'replaceState' on 'History': A history state object with URL 'http://about/' cannot be created in a document with origin 'http://localhost:8081' and URL 'http://localhost:8081//about'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2593","RelatedDescription":"Open issue \"replaceState Error when path starts with // and scrollBehavior is set\" (#2593)"},{"Id":"401651538","IsPullRequest":true,"CreatedAt":"2019-01-22T08:34:55","Actor":"zrh122","Number":"2592","RawContent":null,"Title":"fix(router-view): add condition to see whether the tree is inactive (fix #2552)","State":"open","Body":"close #2552\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2592","RelatedDescription":"Open PR \"fix(router-view): add condition to see whether the tree is inactive (fix #2552)\" (#2592)"},{"Id":"401560199","IsPullRequest":true,"CreatedAt":"2019-01-22T01:15:28","Actor":"Sayegh7","Number":"2591","RawContent":null,"Title":"Warn about root paths without a leading slash (fix #2550)","State":"open","Body":"close #2550\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR creates the following warning message when a root route exists without a leading slash:\r\n<img width=\"583\" alt=\"screen shot 2019-01-22 at 3 12 15 am\" src=\"https://user-images.githubusercontent.com/13800170/51506192-b2785600-1df3-11e9-8ef0-7607ac68aa2b.png\">\r\n\r\nThis facilitates the debugging process as the current behavior does not generate any warnings or errors.","Url":"https://github.com/vuejs/vue-router/pull/2591","RelatedDescription":"Open PR \"Warn about root paths without a leading slash (fix #2550)\" (#2591)"},{"Id":"401548570","IsPullRequest":true,"CreatedAt":"2019-01-22T00:02:47","Actor":"zigomir","Number":"2590","RawContent":null,"Title":"feat: add browser ESM build","State":"open","Body":"POC\r\n\r\nfixes https://github.com/vuejs/vue-router/issues/2589\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2590","RelatedDescription":"Open PR \"feat: add browser ESM build\" (#2590)"},{"Id":"401532763","IsPullRequest":false,"CreatedAt":"2019-01-21T22:37:34","Actor":"zigomir","Number":"2589","RawContent":null,"Title":"Browser ES module build","State":"open","Body":"### What problem does this feature solve?\r\nNow with https://github.com/vuejs/vue/pull/7110 in place and https://github.com/vuejs/vuex/pull/1401 we should probably expose `vue-router` ES module build (minified and non–minifed) so that develpers can use main three vue libraries with `<script type=\"module>` and without any build step.\r\n\r\nWould you merge a PR that solves that?\r\n\r\n\r\n### What does the proposed API look like?\r\nNo changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2589","RelatedDescription":"Open issue \"Browser ES module build\" (#2589)"},{"Id":"401382250","IsPullRequest":true,"CreatedAt":"2019-01-21T14:39:41","Actor":"pfeiferbit","Number":"2588","RawContent":null,"Title":"docs: add descriptions for parseQuery / stringifyQuery","State":"open","Body":"This clears up what the implementor of these functions has to expect.\r\n\r\n---\r\n\r\nStumbled across this while trying to use the [qs](https://www.npmjs.com/package/qs) package for `parseQuery` and `stringifyQuery` since I work with a PHP backend that relies on `foo[bar][baz]=qux` syntax with a strict RFC-3986 encoding.\r\n\r\nWording could probably be better since English ain't my primary language.\r\n\r\nGreetings","Url":"https://github.com/vuejs/vue-router/pull/2588","RelatedDescription":"Open PR \"docs: add descriptions for parseQuery / stringifyQuery\" (#2588)"},{"Id":"401250071","IsPullRequest":true,"CreatedAt":"2019-01-21T09:53:43","Actor":"bbbbx","Number":"2587","RawContent":null,"Title":"docs: make title more understandable","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nThe title does not match the body description.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2587","RelatedDescription":"Closed or merged PR \"docs: make title more understandable\" (#2587)"},{"Id":"401127483","IsPullRequest":true,"CreatedAt":"2019-01-20T18:53:21","Actor":"Aferz","Number":"2586","RawContent":null,"Title":"feat(transition): Using router push/replace instead of private history functions","State":"open","Body":"I've found myself overriding the main Router to be able to control the `.back` method to prevent the user clicks on my app button a leaves the application. Check this example:\r\n\r\n```javascript\r\nclass Router extends VueRouter {\r\n  constructor (...args) {\r\n    super(...args)\r\n\r\n    this.counter = 0\r\n  }\r\n\r\n  push (location, ...args) {\r\n    super.push(location, ...args)\r\n\r\n    this.counter++\r\n  }\r\n\r\n  go (n) {\r\n    if (this.counter + n < 0) {\r\n      super.replace({ name: 'home.feed' })\r\n    } else {\r\n      super.go(n)\r\n    }\r\n\r\n    this.counter += n\r\n  }\r\n}\r\n```\r\n\r\nThanks to this approach, product links can be shared without worring the back button that linked pages contain will destroy the application once pressed. (The same behaviour as Twitter PWA)\r\n\r\n---\r\n\r\nWhat I mean is the `beforeEach` guard is not respecting the overriden methods (push, replace, etc...), because it uses the `history` driver directly when it has to redirect to a route, instead of using the router instance.\r\n\r\nThis could be taken as a _Breaking Change_ for users like me that decided to wrap the router in their own classes, but I honestly think that this usage of the router is outside of the scope of the vue-router maintainers.\r\n\r\nWhat do you all think?","Url":"https://github.com/vuejs/vue-router/pull/2586","RelatedDescription":"Open PR \"feat(transition): Using router push/replace instead of private history functions\" (#2586)"},{"Id":"400645992","IsPullRequest":false,"CreatedAt":"2019-01-18T09:43:00","Actor":"zpcalan","Number":"2585","RawContent":null,"Title":"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2585","RelatedDescription":"Closed issue \"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效\" (#2585)"},{"Id":"400532266","IsPullRequest":false,"CreatedAt":"2019-01-18T08:36:39","Actor":"igorveremsky","Number":"2584","RawContent":null,"Title":"router-view mounted lifehook?","State":"closed","Body":"### What problem does this feature solve?\r\nI use preloader at my spa and want to hide it only if page DOM ready, for not clone code to mounted lifehook of all my routes components will be good to have general mounted lifehook for `router-view` \r\n\r\n### What does the proposed API look like?\r\n```js\r\nRouter.viewMounted(() => {\r\n\t// do some on router view mounted\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2584","RelatedDescription":"Closed issue \"router-view mounted lifehook?\" (#2584)"},{"Id":"398942715","IsPullRequest":true,"CreatedAt":"2019-01-17T19:28:16","Actor":"tuxinghuan","Number":"2578","RawContent":null,"Title":"docs(zh):fix a mistake of style","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2578","RelatedDescription":"Closed or merged PR \"docs(zh):fix a mistake of style\" (#2578)"},{"Id":"400231452","IsPullRequest":true,"CreatedAt":"2019-01-17T11:58:02","Actor":"SetSplin","Number":"2583","RawContent":null,"Title":"fix(create-matcher): \"cannot assign to read only property path\"","State":"closed","Body":"In create-matcher.js in match function location was marked as constant. That course as error described here (https://github.com/vuejs/vue-router/issues/1381)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2583","RelatedDescription":"Closed or merged PR \"fix(create-matcher): \"cannot assign to read only property path\"\" (#2583)"},{"Id":"400009896","IsPullRequest":false,"CreatedAt":"2019-01-16T21:39:40","Actor":"trainiac","Number":"2582","RawContent":null,"Title":"Ability to set and reference redirectParams","State":"open","Body":"### What problem does this feature solve?\r\nIn order to issue a 301 redirect vs a 302 redirect in vue router there is no easy way to do that in userland.  Currently you have to write a custom redirect function and throw an error with the information that you need.\r\n\r\n```\r\n{ \r\n  path: '/old-path': \r\n  redirect() => {\r\n    const error = new Error('Permanent Redirect')\r\n    error.redirect = {\r\n      code: 301,\r\n      url: '/new-path',\r\n    }\r\n    throw error\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nIn your redirects you can define\r\n```js\r\n{ \r\n  path: '/old-path': \r\n  redirect: '/new-path', \r\n  redirectParams: { \r\n    responseCode: 301 \r\n  } \r\n}\r\n```\r\n\r\nAnd in a `beforeEach` handler you could reference the meta info\r\n```\r\nrouter.beforeEach((to, from, next) => {\r\n   to.redirectedFrom === '/old-path'\r\n   to.redirectParams.responseCode === 301\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2582","RelatedDescription":"Open issue \"Ability to set and reference redirectParams\" (#2582)"},{"Id":"399751623","IsPullRequest":false,"CreatedAt":"2019-01-16T13:04:21","Actor":"JeromeDeLeon","Number":"2581","RawContent":null,"Title":"Unknown element of vue router (e.g. router-link, router-view)","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/JeromeDeLeon/vue-router-bug](https://github.com/JeromeDeLeon/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Create a project using vue-cli choosing manual preset.\r\n* Enable the following features:\r\n   -  Babel\r\n   -  Router\r\n   -  Vuex\r\n   -  Use config files\r\n* Run the application in development\r\n\r\n### What is expected?\r\nShow the template of Home.vue\r\n\r\n### What is actually happening?\r\nThe app was just showing the \"Home | About\" and nothing else. In console (dev tools), there's an error showing unknown elements for router-link and router-view.\r\n\r\n---\r\nI just did nothing but follow the documentation when creating a project but did a side note of manually selecting the features.\r\nI tried again to create another project, but same result. Again, I tried, same result but there's no error in the console (dev tools)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2581","RelatedDescription":"Closed issue \"Unknown element of vue router (e.g. router-link, router-view)\" (#2581)"},{"Id":"399397648","IsPullRequest":false,"CreatedAt":"2019-01-15T18:41:38","Actor":"salomvary","Number":"2580","RawContent":null,"Title":"beforeRouteUpdate is not called on the first navigation when routing to the same component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/salomvary/qcfg8xm7/18/](https://jsfiddle.net/salomvary/qcfg8xm7/18/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open the linked JSFiddle link\r\n- Open the developer console\r\n- Click on \"Go to /foo/one\"\r\n- Look at the console logs\r\n\r\n### What is expected?\r\n'foo:beforeRouteUpdate'  to be logged on the first navigation.\r\n\r\n### What is actually happening?\r\n'foo:beforeRouteUpdate'  is not logged on the first navigation.\r\n\r\n---\r\nWorkaround: watching `$route` seems to work as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2580","RelatedDescription":"Closed issue \"beforeRouteUpdate is not called on the first navigation when routing to the same component\" (#2580)"},{"Id":"399242944","IsPullRequest":true,"CreatedAt":"2019-01-15T08:51:35","Actor":"CharlesOkwuagwu","Number":"2579","RawContent":null,"Title":"Change `url=\"/\"` to `url=\"index.html\"`","State":"open","Body":"When `publicPath` is set, for some reason `url=\"/\"` fails in the Rewrite.\r\n\r\n`url=\"index.html\"` works regardless of `publicPath` setting\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2579","RelatedDescription":"Open PR \"Change `url=\"/\"` to `url=\"index.html\"`\" (#2579)"},{"Id":"398212810","IsPullRequest":true,"CreatedAt":"2019-01-11T09:59:34","Actor":"tuxinghuan","Number":"2577","RawContent":null,"Title":"docs(zh): link to the correct website","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2577","RelatedDescription":"Closed or merged PR \"docs(zh): link to the correct website\" (#2577)"},{"Id":"398186851","IsPullRequest":true,"CreatedAt":"2019-01-11T09:23:49","Actor":"tuxinghuan","Number":"2576","RawContent":null,"Title":"fix: fix typo in examples","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\njust fix a typo","Url":"https://github.com/vuejs/vue-router/pull/2576","RelatedDescription":"Closed or merged PR \"fix: fix typo in examples\" (#2576)"},{"Id":"398124430","IsPullRequest":true,"CreatedAt":"2019-01-11T09:23:11","Actor":"Jinjiang","Number":"2575","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vue-router/compare/d97d902...4bf3ba5\r\n/ping @Justineo","Url":"https://github.com/vuejs/vue-router/pull/2575","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#2575)"},{"Id":"397551510","IsPullRequest":true,"CreatedAt":"2019-01-10T00:17:03","Actor":"Alex-Sokolov","Number":"2574","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/5ae633e900aea1e975f1ca94284924d0ef172e26#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2574","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2574)"},{"Id":"397398002","IsPullRequest":false,"CreatedAt":"2019-01-09T14:34:37","Actor":"joenil","Number":"2573","RawContent":null,"Title":"manually url navigation canceled messes up history","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l9omkjv939](https://codesandbox.io/s/l9omkjv939)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Let's say the page url now is `/?animal=dog`, and the `animal` field only accept `dot` or `cat`\r\n2. When a user manually change the `dog` to `duck`, or via back button, it triggered `next(false)` for prevent the url change inside `beforeRouteUpdate`\r\n3. Due to the `next(false)` or `next(error)` pushed a new location history, the previous record is `/?animal=duck` and current record is `/?animal=dog`\r\n4. Then we click the browser's back button, it turn to the step 2. and I can't go back to the earlier state!\r\n\r\n### What is expected?\r\nI don't know... how can I handle this scenario?\r\n\r\n### What is actually happening?\r\nCan't go back via back button after called next(false/error)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2573","RelatedDescription":"Open issue \"manually url navigation canceled messes up history\" (#2573)"},{"Id":"396735569","IsPullRequest":false,"CreatedAt":"2019-01-08T12:28:09","Actor":"zbjy","Number":"2572","RawContent":null,"Title":"跳转到新页面通过params传参，取不到参数值","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/pwjrx9r6lm](https://codesandbox.io/s/pwjrx9r6lm)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nconst {href} = this.$router.resolve({\r\n                        name: \"test\",\r\n                        params: {\r\n                            id:2\r\n                        }\r\n                    });\r\n                    window.open(href, '_blank');\r\n在新页面获取不到参数id的值\r\nlet params = this.$route.params;\r\n                alert(params.id)\r\n\r\n### What is expected?\r\n期望在新页面能取到通过params传递的参数值\r\n\r\n### What is actually happening?\r\n在新页面未能取到通过params传递的参数值\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2572","RelatedDescription":"Closed issue \"跳转到新页面通过params传参，取不到参数值\" (#2572)"},{"Id":"396691605","IsPullRequest":false,"CreatedAt":"2019-01-07T23:33:05","Actor":"jakob-e","Number":"2571","RawContent":null,"Title":"History state key as timestamp to detect back/forward navigation","State":"open","Body":"### What problem does this feature solve?\r\nUsing Date.now() as key will provide a unique and comparable* identifier in relation to history navigation allowing back/forward navigation to be detected and used to define transition directions (slide left/right) etc.... and maybe it could be the first step in having vue-router provide this information out of the box :-)\r\n\r\n*the current performance.now key does ensure increment upon re-enter.\r\n![image](https://user-images.githubusercontent.com/1699461/50818472-5f989c00-1327-11e9-907d-2eee36d7f354.png)\r\n\r\n\r\n\r\n\r\n*A quick detection example based on Date.now as key:* \r\n````\r\n//  direction   \r\n//  -1 = history.back\r\n//   0 = normal route\r\n//   1 = history.forward \r\nlet direction = 0;\r\n\r\n//   key value of the from route (0 = entering)\r\nlet fromKey = 0;\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    //  add state in case it's missing \r\n    if(!history.state) { history.replaceState({key: Date.now() }, to.name, location.href); }\r\n\r\n    //  get state key from history \r\n    const toKey = history.state.key;\r\n\r\n    //  if we are entering  or the from and to keys (time-stamps) are identical => normal route\r\n    //  if from is less than to to was created after from    => history.forward\r\n    //  if from is less than to to was created before from   => history.back \r\n    direction = !fromKey || fromKey === toKey ? 0 : fromKey < toKey ? 1 : -1;   \r\n    \r\n    //  call next\r\n    next();\r\n})\r\n\r\n\r\nrouter.afterEach((to, from) => {\r\n    //  use nextTick to await key to be generated \r\n    Vue.nextTick(vm => { \r\n\r\n        //  save key for next beforeEach \r\n        fromKey = history.state.key; \r\n    })\r\n})\r\n```` \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n### What does the proposed API look like?\r\nfunction genKey () {\r\n  return Date.now()\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2571","RelatedDescription":"Open issue \"History state key as timestamp to detect back/forward navigation\" (#2571)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-01-24T09:32:52","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"open","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Open issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-01-15T11:56:19","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Open issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"398365001","IsPullRequest":true,"CreatedAt":"2019-01-11T16:39:11","Actor":"fsblemos","Number":"1484","RawContent":null,"Title":"docs: complement preserveState information","State":"open","Body":"It is not very clear the purpose of `preserveState` option in the docs. \r\n\r\n[This comment](https://github.com/vuejs/vuex/issues/1130#issuecomment-356612119) clarified the behavior, so I included in a dedicated `preserveState` subsection.","Url":"https://github.com/vuejs/vuex/pull/1484","RelatedDescription":"Open PR \"docs: complement preserveState information\" (#1484)"},{"Id":"397755794","IsPullRequest":true,"CreatedAt":"2019-01-10T10:14:56","Actor":"lishihong","Number":"1483","RawContent":null,"Title":"Revert 1457 patch 1","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1483","RelatedDescription":"Closed or merged PR \"Revert 1457 patch 1\" (#1483)"},{"Id":"397745237","IsPullRequest":true,"CreatedAt":"2019-01-10T09:40:39","Actor":"lishihong","Number":"1482","RawContent":null,"Title":"Update index.js","State":"closed","Body":"test","Url":"https://github.com/vuejs/vuex/pull/1482","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1482)"},{"Id":"397545948","IsPullRequest":true,"CreatedAt":"2019-01-09T20:17:57","Actor":"periscuelo","Number":"1481","RawContent":null,"Title":"docs: Update to version 3.1.0 [pt-br]","State":"open","Body":"I made one update to be equal to english version explanation.\r\n@ktsn Can you review / merge it?\r\n\r\nThanks","Url":"https://github.com/vuejs/vuex/pull/1481","RelatedDescription":"Open PR \"docs: Update to version 3.1.0 [pt-br]\" (#1481)"},{"Id":"396165778","IsPullRequest":false,"CreatedAt":"2019-01-07T10:20:13","Actor":"SebastianS90","Number":"1480","RawContent":null,"Title":"Store getters do not re-evaluate on dynamic module registration","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ll6zjklq97](https://codesandbox.io/s/ll6zjklq97)\r\n\r\n### Steps to reproduce\r\n- Open the CodeSandbox\r\n- Click \"Register Module\"\r\n\r\n### What is expected?\r\nAll four values should switch to true\r\n\r\n### What is actually happening?\r\nOnly the values based on watchers from the component switch to true\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1480","RelatedDescription":"Closed issue \"Store getters do not re-evaluate on dynamic module registration\" (#1480)"},{"Id":"395304196","IsPullRequest":false,"CreatedAt":"2019-01-02T16:31:37","Actor":"brophdawg11","Number":"1479","RawContent":null,"Title":"registerModule causing unneccesary getter evaluations","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kkrn0zojqr](https://codesandbox.io/s/kkrn0zojqr)\r\n\r\n### Steps to reproduce\r\n* Open the code sandbox\r\n* Open the console\r\n* Reload the sandbox and note the log of \"Running Getter\"\r\n* Click `Register Module`\r\n* Note that \"Running Getter\" is logged again, even though state.foo hasn't changed\r\n\r\n### What is expected?\r\nJust like normal reactivity, I wouldn't expect the `foo` getter to re-run unless one of it's dependencies (`state.foo`) was changed.\r\n\r\n### What is actually happening?\r\nCalling `registerModule` causes getters to re-execute regardless\r\n\r\n---\r\nThis is more noticeable and more problematic if the getters return non-primitives, since they can then trigger re-renders down the component tree\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1479","RelatedDescription":"Open issue \"registerModule causing unneccesary getter evaluations\" (#1479)"},{"Id":"395119125","IsPullRequest":true,"CreatedAt":"2019-01-01T23:03:14","Actor":"haversnail","Number":"1478","RawContent":null,"Title":"Fix: add `devtools` to StoreOptions interface","State":"open","Body":"Updates `StoreOptions` type to include the [`devtools`](https://vuex.vuejs.org/api/#devtools) option, resolving TypeScript error when option is included in store constructor.","Url":"https://github.com/vuejs/vuex/pull/1478","RelatedDescription":"Open PR \"Fix: add `devtools` to StoreOptions interface\" (#1478)"},{"Id":"395077834","IsPullRequest":true,"CreatedAt":"2019-01-01T12:17:21","Actor":"hkthai","Number":"1477","RawContent":null,"Title":"docs & examples: rewrite state object to functions everywhere","State":"open","Body":"## Overview\r\nRewrite state, object to function everywhere.\r\n\r\n## Details\r\nTo avoid shared state on the server side, we should change our state from object to functions everywhere.\r\n\r\n## Related Pages\r\n[stack overflow](https://stackoverflow.com/questions/49557177/vuex-state-returned-as-function-or-object-literal)\r\n\r\n\r\nIf it is wrong, please close this pr:bow:","Url":"https://github.com/vuejs/vuex/pull/1477","RelatedDescription":"Open PR \"docs & examples: rewrite state object to functions everywhere\" (#1477)"},{"Id":"395016740","IsPullRequest":true,"CreatedAt":"2018-12-31T18:27:47","Actor":"angeliski","Number":"1476","RawContent":null,"Title":"docs: Removed english from translated guide [pt-br]","State":"open","Body":"Hi!\r\nI noticed a english paragraph forgotten  in the guide translated,\r\nthe pr is just to fix.","Url":"https://github.com/vuejs/vuex/pull/1476","RelatedDescription":"Open PR \"docs: Removed english from translated guide [pt-br]\" (#1476)"},{"Id":"394976929","IsPullRequest":false,"CreatedAt":"2018-12-31T14:48:24","Actor":"mbana","Number":"1475","RawContent":null,"Title":"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug](https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug)\r\n\r\n### Steps to reproduce\r\n```sh\r\ngit clone git@github.com:banaio/vue_js_samples.git\r\ncd vue_js_samples\r\ncd vuex_accessing_nested_property_bug\r\nyarn install\r\nyarn serve\r\nopen http://localhost:8080/\r\n```\r\n\r\n### What is expected?\r\nWe should see the message `{ \"level_3_field\": \"level_3_field_value\" }` twice, however it\r\nappears only once. Please see the screenshot.\r\n\r\n### What is actually happening?\r\nThe message `{ \"level_3_field\": \"level_3_field_value\" }` appears only once. As per this screenshot:\r\n\r\n![Image of broken](https://raw.githubusercontent.com/banaio/vue_js_samples/master/vuex_accessing_nested_property_bug/broken.png)\r\n\r\n---\r\n\r\nWhen `state`, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js), is defined as:\r\n\r\n```js\r\n  state: {\r\n    level_1: {\r\n      level_2: {\r\n        level_3: {\r\n          level_3_field: 'level_3_field_value',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  getters: {\r\n    level_1: (state) => state.level_1,\r\n  },\r\n```\r\n\r\nAnd used as, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue),\r\nthe `level_3_broken` does not work, but the `level_3_working` seems to work:\r\n\r\n```js\r\n  computed: {\r\n    ...mapGetters({\r\n      level_3_broken: 'level_1.level_2.level_3',\r\n    }),\r\n    level_3_working() {\r\n      return this.$store.getters['level_1']['level_2'].level_3;\r\n    },\r\n  },\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1475","RelatedDescription":"Closed issue \"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store\" (#1475)"},{"Id":"394070232","IsPullRequest":false,"CreatedAt":"2018-12-31T10:26:24","Actor":"devindwan","Number":"1474","RawContent":null,"Title":"Provide a way to re-compute a getter","State":"closed","Body":"### What problem does this feature solve?\r\nAs we all know `Vue` does not support `Map`(ES6) right now. However, this `Map` feature is useful and it can not be replaced by normal object totally. Maybe we can provide an approach  to manually re-compute a getter when the depended `Map object` has been changed. It's not quite elegant and break reactivity rule, but we can temporarily improve such reactivity support by this patch like function before Vue 3.0 is released.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst state = {\r\n  map: new Map()\r\n}\r\n\r\n// Some getters depend on the map object. Not a necessary use case, just for example.\r\nconst getters = {\r\n  keys: state => {\r\n    return state.map.keys()\r\n  },\r\n  values: state => {\r\n    return state.map.values()\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  SOME_MUTATION (state, value) {\r\n    state.map = value\r\n    // Try to re-compute relevant getters\r\n    recompute(['keys', 'values'])\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1474","RelatedDescription":"Closed issue \"Provide a way to re-compute a getter\" (#1474)"},{"Id":"392025334","IsPullRequest":false,"CreatedAt":"2018-12-18T07:15:58","Actor":"hqzh","Number":"1473","RawContent":null,"Title":"辅助函数连接多个store","State":"open","Body":"### What problem does this feature solve?\r\n有时我的组件需要连多个store,比如公共的和我自己的\r\n\r\n### What does the proposed API look like?\r\n```\r\nimport { createNamespacedHelpers } from \"vuex\";\r\n\r\nconst {\r\n    mapState,\r\n    mapGetters,\r\n    mapActions,\r\n    mapMutations\r\n         } = createNamespacedHelpers([\"myStore\",\"commonStore\"]);\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1473","RelatedDescription":"Open issue \"辅助函数连接多个store\" (#1473)"},{"Id":"391765521","IsPullRequest":true,"CreatedAt":"2018-12-17T15:33:35","Actor":"s-pace","Number":"1472","RawContent":null,"Title":"doc: Enabling DocSearch","State":"open","Body":"👋 vuex,\r\n\r\nI am [working on DocSearch](https://community.algolia.com/docsearch/), this PR will enable vuex to use the same search [experience as vuepress](https://vuepress.vuejs.org/theme/default-theme-config.html#algolia-search), [vuejs](https://vuejs.org/), [bootstrap](https://getbootstrap.com/docs/4.1/getting-started/introduction/) ...\r\n\r\nOur scraper will run every 24H to update your Algolia index. Feel free to [PR your configuration](https://github.com/algolia/docsearch-configs/blob/0b171ddf626dac501b2d9bf4a80e79613c874918/configs/vuex.json) if you need any update, the search is out of the box.\r\n\r\nLet us know if you need anything.","Url":"https://github.com/vuejs/vuex/pull/1472","RelatedDescription":"Open PR \"doc: Enabling DocSearch\" (#1472)"},{"Id":"390153226","IsPullRequest":false,"CreatedAt":"2018-12-12T10:11:47","Actor":"jdoubleu","Number":"1471","RawContent":null,"Title":"Destroy hook in plugin for hotReload","State":"open","Body":"### What problem does this feature solve?\r\nSo far it is only possible for a plugin to be registered through a single function. On the other hand it is not possible to hook into a plugins destroy/replacement.\r\nIn production mode there is no need for such hook, because it's not possible to remove a plugin (this might be reconsidered after https://github.com/vuejs/vuex/issues/467#issuecomment-266493888).\r\n\r\nBut given the [plugin example](https://vuex.vuejs.org/guide/plugins.html#committing-mutations-inside-plugins) which registers event handlers on the `socket` and taking [hot reloading](https://vuex.vuejs.org/guide/hot-reload.html) into account, the handlers are registered multiple times.\r\nThere is no way to unregister an event handler before the plugin gets replaced.\r\n\r\nI'm not sure if this is a general problem with a HMR system (like webpack's) or if its caused by the [`store.hotUpdate()`](https://vuex.vuejs.org/api/#hotupdate) function. I suspect, that even `store.subscribe()` gets called multiple times causing the code to be executed multiple times after some hot replacements.\r\n\r\n**Workaround**:\r\nStore event handlers in a local variable outside the plugin's context.\r\n\r\n### What does the proposed API look like?\r\nEither additional methods exposed by the plugin (similar to [this](https://github.com/vuejs/vuex/issues/467#issuecomment-270836284)):\r\n```\r\nconst myPlugin = {\r\n  init(store) {\r\n     registerAllEventListeners()\r\n\r\n     store.subscribe((mutation, state) => {\r\n        doSomething()\r\n     })\r\n  },\r\n  beforeDestroy(store) {\r\n     unregisterAllEventListeners()\r\n  }\r\n}\r\n```\r\n\r\nOr as a store instance method:\r\n```\r\nconst myPlugin = (store) => {\r\n   registerAllEventListeners()\r\n\r\n   store.subscribe((mutation, state) => {\r\n       doSomething()\r\n   })\r\n\r\n  store.subscribeBeforeDestroy(() => {\r\n     unregisterAllEventListeners()\r\n  }\r\n}\r\n```\r\n\r\nThe latter wouldn't introduce breaking changes of the plugin API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1471","RelatedDescription":"Open issue \"Destroy hook in plugin for hotReload\" (#1471)"},{"Id":"390120640","IsPullRequest":false,"CreatedAt":"2018-12-12T08:46:41","Actor":"oxiaojiano","Number":"1470","RawContent":null,"Title":"actions and mutations 异同","State":"open","Body":"### What problem does this feature solve?\r\n在文档上应该明确说明，actions和mutations都是用来改变state，mutations是只能是同步执行，在执行异步操作的时候在devtools中追踪不到state数据的变化，而actions是可以处理异步函数的数据的\r\n\r\n### What does the proposed API look like?\r\n改变一下描述文字\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1470","RelatedDescription":"Open issue \"actions and mutations 异同\" (#1470)"},{"Id":"388967040","IsPullRequest":false,"CreatedAt":"2018-12-08T22:49:51","Actor":"superbiche","Number":"1469","RawContent":null,"Title":"Access modules easily from store","State":"open","Body":"### What problem does this feature solve?\r\nI'd like to register dynamically a module that would have access to already registered modules - native module, with custom attributes - thus allowing these modules to leverage presenters and other utilities.\r\nCurrently I can do this with `store._modules.root._children` but the fact it takes two `_` makes me feel I'm doing something really dirty\r\n\r\n### What does the proposed API look like?\r\nSomething like `store.getModules = () => store._modules.root._children`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1469","RelatedDescription":"Open issue \"Access modules easily from store\" (#1469)"},{"Id":"388904450","IsPullRequest":true,"CreatedAt":"2018-12-08T09:24:41","Actor":"NataliaTepluhina","Number":"1468","RawContent":null,"Title":"docs: add a description of providing store to Vue instance","State":"open","Body":"_Note:_ This change was already introduced in #858 and it's still crucial for Vuex docs but since this PR exists for 1.5 years and has conflicts with a base branch, I'm opening a new one.\r\n\r\nAdded a short description of how to provide a store to Vue instance to have access to it from inside Vue components.\r\n\r\n**Update:** found docs on injecting store in the `State` doc. I still think they should be moved to `Getting started` part because it's just easier not to miss it in the entry doc.","Url":"https://github.com/vuejs/vuex/pull/1468","RelatedDescription":"Open PR \"docs: add a description of providing store to Vue instance\" (#1468)"},{"Id":"388672064","IsPullRequest":false,"CreatedAt":"2018-12-07T14:16:19","Actor":"xereda","Number":"1467","RawContent":null,"Title":"Vuex getters arguments","State":"open","Body":"### What problem does this feature solve?\r\nIs there a specific reason for a getter to get store context through separate arguments?\r\n\r\nI like how the actions receive the context of the store, that is, with only one argument, this being an object. With this, we have the possibility of using es6 destructuring to extract something specific.\r\n\r\nIf I just need to trigger a mutation (the most common behavior), I just to extract commit from context object. But, if I need to access a getter from a parent module, for example, I extract together with dispatch, the rootGetters.\r\n\r\nAlthough they are exceptional cases, I have some situations that I need, inside a getter, access a getter from another module (parent module). With this, I need to inform arguments that I will not use in the getter scope.\r\n\r\nAnalyze the following example:\r\n\r\n```js\r\nisLoading: (state, getters, rootState, rootGetters) => {\r\n  // getters and rootState not used\r\n  return state.isLoading || rootGetters.module.isLoading;\r\n};\r\n```\r\n\r\nSee that I have passed the getters and rootState arguments, even though, in this case, I do not need them.\r\n\r\nThe question I have is: Is there any specific reason why it has been treated differently from how it is handled in the vuex actions? Why does an vuex action get only one argument and vuex getter get 4 arguments?\r\n\r\nThanks in advance for the time spent by friends. Sorry for bad English.\r\n\r\n### What does the proposed API look like?\r\nJust document, through this issue, the difference between the behavior of getters and actions.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1467","RelatedDescription":"Open issue \"Vuex getters arguments\" (#1467)"},{"Id":"388670505","IsPullRequest":false,"CreatedAt":"2018-12-07T14:11:58","Actor":"xereda","Number":"1466","RawContent":null,"Title":"Vuex getters arguments","State":"closed","Body":"Is there a specific reason for a getter to get store context through separate arguments?\r\n\r\nI like how the actions receive the context of the store, that is, with only one argument, this being an object. With this, we have the possibility of using es6 destructuring to extract something specific.\r\n\r\nIf I just need to trigger a mutation (the most common behavior), I just to extract commit from context object. But, if I need to access a getter from a parent module, for example, I extract together with dispatch, the rootGetters.\r\n\r\nAlthough they are exceptional cases, I have some situations that I need, inside a getter, access a getter from another module (parent module). With this, I need to inform arguments that I will not use in the getter scope.\r\n\r\nAnalyze the following example:\r\n\r\n```javascript\r\nisLoading: (state, getters, rootState, rootGetters) => {\r\n  // getters and rootState not used\r\n  return state.isLoading || rootGetters.module.isLoading;\r\n};\r\n```\r\n\r\nSee that I have passed the getters and rootState arguments, even though, in this case, I do not need them.\r\n\r\nThe question I have is: Is there any specific reason why it has been treated differently from how it is handled in the vuex actions? Why does an vuex action get only one argument and vuex getter get 4 arguments?\r\n\r\nThanks in advance for the time spent by friends. Sorry for bad English.\r\n","Url":"https://github.com/vuejs/vuex/issues/1466","RelatedDescription":"Closed issue \"Vuex getters arguments\" (#1466)"},{"Id":"388075586","IsPullRequest":true,"CreatedAt":"2018-12-06T06:34:01","Actor":"Jinjiang","Number":"1465","RawContent":null,"Title":"docs: fixed links to vm.$watch","State":"open","Body":"In [\"API Reference\" > \"Vuex.Store Instance Methods\" > \"watch\"](https://vuex.vuejs.org/api/#watch) section of the `en` docs, there is a link of \"Vue's `vm.$watch` method\" but linked to `watch` options. It should be https://vuejs.org/v2/api/#vm-watch if I don't misunderstand it.\r\n\r\nI also fixed the `zh` docs. And the `ru` docs seems right. but other language docs seems not same to the latest `en` version. So I am not sure whether should be updated too.\r\n\r\nThanks.\r\n","Url":"https://github.com/vuejs/vuex/pull/1465","RelatedDescription":"Open PR \"docs: fixed links to vm.$watch\" (#1465)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-01-28T05:31:00.7514158Z","RunDurationInMilliseconds":3876}