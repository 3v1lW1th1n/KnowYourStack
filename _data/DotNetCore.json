{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework November 2019 Preview of Quality Rollup","PublishedOn":"2019-11-20T05:28:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2019 Preview of Quality Rollup\nQuality and Reliability\nThis release contains the following quality and reliability improvements for .NET Framework for Windows 8.1,...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core November 2019 Updates – 2.1.14, 2.2.8, and 3.0.1","PublishedOn":"2019-11-19T20:11:16+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November 2019 Update. These updates only contain non-security fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-november-2019/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 3","PublishedOn":"2019-11-14T17:16:36+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 3. .NET Core 3.1 is a small and short release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0.. It...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/","RawContent":null},{"Title":".NET Framework November 13, 2019, Update for .NET Framework 4.8","PublishedOn":"2019-11-14T06:16:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we released an update for .NET Framework 4.8 to Microsoft Update Catalog.\nQuality and Reliability\nThis release contains the following reliability improvement.\nCLR1\nAddresses an issue where some...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/","RawContent":null},{"Title":"ML.NET Model Builder Updates","PublishedOn":"2019-11-12T20:51:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ML.NET is a cross-platform, machine learning framework for .NET developers, and Model Builder is the UI tooling in Visual Studio that uses Automated Machine Learning (AutoML) to easily allow you to...","Href":"https://devblogs.microsoft.com/dotnet/model-builder-updates-mlnet/","RawContent":null},{"Title":".NET Framework Repair Tool","PublishedOn":"2019-11-12T00:51:20+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are announcing an update to .NET Framework Repair tool.\nIn case you are not familiar with previous releases of this tool, here is a bit of background. Occasionally, some customers will run...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-repair-tool/","RawContent":null},{"Title":"Building Modern Cloud Applications using Pulumi and .NET Core","PublishedOn":"2019-11-11T15:00:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post from the Pulumi team. Pulumi is an open source infrastructure as code tool that helps developers and infrastructure teams work better together to create, deploy, and manage cloud...","Href":"https://devblogs.microsoft.com/dotnet/building-modern-cloud-applications-using-pulumi-and-net-core/","RawContent":null},{"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","PublishedOn":"2019-11-06T17:01:16+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Coinciding with the Microsoft Ignite 2019 conference, we are thrilled to announce the GA release of ML.NET 1.4 and updates to Model Builder in Visual Studio, with exciting new machine learning...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/","RawContent":null},{"Title":".NET Core with Jupyter Notebooks –  Available today | Preview 1","PublishedOn":"2019-11-06T17:00:21+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"When you think about Jupyter Notebooks, you probably think about writing your code in Python, R, Julia, or Scala and not .NET. Today we are excited to announce you can write .NET code in Jupyter...","Href":"https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/","RawContent":null},{"Title":".NET Core 3 for Windows Desktop","PublishedOn":"2019-11-05T14:00:11+00:00","CommentsCount":87,"FacebookCount":0,"Summary":"Intro\nIn September, we released .NET Core support for building Windows desktop applications, including WPF and Windows Forms. Since then, we have been delighted to see so many developers share their...","Href":"https://devblogs.microsoft.com/dotnet/net-core-3-for-windows-desktop/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10879854793","Type":"IssuesEvent","CreatedAt":"2019-11-17T05:53:48","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Opened issue \"Typos in CLA bot profile\" (#155) at dotnet/foundation","RelatedBody":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)"},{"Id":"10878192098","Type":"PullRequestEvent","CreatedAt":"2019-11-16T15:59:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Opened pull request \"Fix broken links\" (#154) at dotnet/foundation","RelatedBody":""},{"Id":"10864162405","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:22:28","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Opened pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"10863953091","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:00:24","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Opened pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"10823146740","Type":"PullRequestEvent","CreatedAt":"2019-11-08T23:32:03","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Merged pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68"},{"Id":"10822052136","Type":"PullRequestEvent","CreatedAt":"2019-11-08T20:13:07","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Opened pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":""},{"Id":"10806560653","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:43:05","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Merged pull request \"(GH-111) Update Source Link location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"10806557022","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:42:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Merged pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10806555226","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:41:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Merged pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10873564628","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:51:28","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`."},{"Id":"10873546016","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:49:05","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`."},{"Id":"10864634140","Type":"IssuesEvent","CreatedAt":"2019-11-14T17:15:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 3\" (#139) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"},{"Id":"10862597044","Type":"IssuesEvent","CreatedAt":"2019-11-14T13:37:29","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Opened issue \"November 2019 .NET Updates\" (#138) at dotnet/announcements","RelatedBody":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10856924757","Type":"IssuesEvent","CreatedAt":"2019-11-13T21:41:07","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Opened issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137) at dotnet/announcements","RelatedBody":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Framework Samples\r\n\r\n"},{"Id":"10847180825","Type":"IssuesEvent","CreatedAt":"2019-11-12T22:05:52","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Opened issue \".NET Core Docker images support for Windows Server, version 1909\" (#136) at dotnet/announcements","RelatedBody":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n"},{"Id":"10822538366","Type":"IssuesEvent","CreatedAt":"2019-11-08T21:33:13","Actor":"CESARDELATORRE","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Opened issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135) at dotnet/announcements","RelatedBody":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n**- New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n**- Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n**- Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n**- PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n**- ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n"},{"Id":"10780907118","Type":"IssuesEvent","CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 2\" (#134) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/XXXX has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/XXXX, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10748742804","Type":"IssuesEvent","CreatedAt":"2019-10-30T15:14:54","Actor":"jaredpar","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Opened issue \"Repository Consolidation Timeline\" (#133) at dotnet/announcements","RelatedBody":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository."},{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"},{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10930292006","Type":"IssuesEvent","CreatedAt":"2019-11-23T00:40:00","Actor":"albahari","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27929","RelatedDescription":"Opened issue \"NativeLibrary.Load(string, Assembly, DllImportSearchPath?) should honor assembly's ALC\" (#27929) at dotnet/coreclr","RelatedBody":"The following overload of NativeLibrary.Load:\r\n\r\n`NativeLibrary.Load(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)`\r\n\r\nshould invoke the `LoadUnmanagedDll` method and `ResolvingUnmanagedDll` event of the assembly's ALC, in keeping with the API's design intention:\r\n\r\n> - NativeLibrary.Load(string) is a low-level API that wraps the underlying library load OS API and nothing else. It is meant to be used e.g. for loading OS and similar libraries that are outside the application.\r\n> - NativeLibrary.Load(string libraryName, Assembly assembly, DllImportSearchPath? searchPath) is a higher level API. The intention for this API was to **behave as if DllImport was used in the given assembly**.\r\n\r\nRight now, it does not behave as such and ignores the assembly's ALC. Consequently, any assembly calling this method will almost certainly break **unless that assembly is loaded into the default ALC**. An example is Microsoft.Data.Sqlite, which calls SQLitePCLRaw.nativelibrary. This breaks right now when loaded into a non-default ALC (or when loaded dynamically).\r\n\r\nThe other overload - NativeLibrary.Load(string libraryPath) - should remain as-is.\r\n\r\nSee the second/third comment in #26864 for a full discussion."},{"Id":"10930227914","Type":"PullRequestEvent","CreatedAt":"2019-11-23T00:21:14","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27928","RelatedDescription":"Opened pull request \"[WIP] enabling ci for 2.1 branches\" (#27928) at dotnet/coreclr","RelatedBody":""},{"Id":"10930214865","Type":"PullRequestEvent","CreatedAt":"2019-11-23T00:17:22","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27921","RelatedDescription":null,"RelatedBody":""},{"Id":"10930198408","Type":"PullRequestEvent","CreatedAt":"2019-11-23T00:12:45","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27921","RelatedDescription":"Closed pull request \"update branding for 3.1 sevicing\" (#27921) at dotnet/coreclr","RelatedBody":""},{"Id":"10930055175","Type":"PullRequestEvent","CreatedAt":"2019-11-22T23:36:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27927","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#27927) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n"},{"Id":"10929706477","Type":"IssuesEvent","CreatedAt":"2019-11-22T22:21:53","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/9918","RelatedDescription":"Closed issue \"Don't copy *-ms-win-* into non-windows test overlay\" (#9918) at dotnet/coreclr","RelatedBody":"We shouldn't be copying these files into Core_Root for non-windows: see https://github.com/dotnet/coreclr/pull/9907/files#diff-e99015da4fdea5ed8c0b58186a5e4b70R396"},{"Id":"10929559936","Type":"PullRequestEvent","CreatedAt":"2019-11-22T21:55:29","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27925","RelatedDescription":"Merged pull request \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27925) at dotnet/coreclr","RelatedBody":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @davmason\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10930894665","Type":"PullRequestEvent","CreatedAt":"2019-11-23T05:15:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13115","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13115) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191122.16\r\n- **Date Produced**: 11/23/2019 4:29 AM\r\n- **Commit**: 9fded4c4aad794c7bb1152375a2eff092bb52a86\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19572.16\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10930789486","Type":"PullRequestEvent","CreatedAt":"2019-11-23T04:13:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13110","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13110) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.05\r\n- **Date Produced**: 11/23/2019 2:41 AM\r\n- **Commit**: 84c8bdc161ce5f1e414eb76993a8ec388dc6f167\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19572-05\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10930713757","Type":"PullRequestEvent","CreatedAt":"2019-11-23T03:32:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13084","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13084) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191122.12\r\n- **Date Produced**: 11/23/2019 2:03 AM\r\n- **Commit**: 6902b14471fca81af0854696b335bef198d38dfd\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19572.12\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10930211101","Type":"PullRequestEvent","CreatedAt":"2019-11-23T00:16:17","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13111","RelatedDescription":"Merged pull request \"update branding 3.1.101 servicing\" (#13111) at dotnet/cli","RelatedBody":""},{"Id":"10930103822","Type":"PullRequestEvent","CreatedAt":"2019-11-22T23:48:19","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13114","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13114) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n"},{"Id":"10930059532","Type":"PullRequestEvent","CreatedAt":"2019-11-22T23:37:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13113","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13113) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n"},{"Id":"10930023447","Type":"PullRequestEvent","CreatedAt":"2019-11-22T23:28:44","Actor":"dotnet-maestro-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13112","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13112) at dotnet/cli","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10929960956","Type":"PullRequestEvent","CreatedAt":"2019-11-22T23:14:20","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13097","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13097) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10930418668","Type":"PullRequestEvent","CreatedAt":"2019-11-23T01:19:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1658","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1658) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10930127226","Type":"PullRequestEvent","CreatedAt":"2019-11-22T23:54:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1658","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1658) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10919172652","Type":"IssuesEvent","CreatedAt":"2019-11-21T18:26:22","Actor":"arizvisa","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1657","RelatedDescription":"Opened issue \"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed\" (#1657) at dotnet/standard","RelatedBody":"Hey guys, the signature check for this package seems to be failing. Not sure what that actually means, but here's the checksum as of 2019/11/21 12:23 (CST).\r\n\r\n```\r\n# fetch https://packages.microsoft.com/fedora/30/prod/netstandard-targeting-pack-2.1.0-x64.rpm\r\nnetstandard-targeting-pack-2.1.0-x64.rpm 100% 2201944 2201944\r\n# openssl dgst -sha256 netstandard-targeting-pack-2.1.0-x64.rpm \r\nSHA256(netstandard-targeting-pack-2.1.0-x64.rpm)= 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480\r\n```\r\n\r\nThen with dnf actually complaining about it.\r\n```\r\n# dnf repository-packages packages-microsoft-com-prod install netstandard-targeting-pack-2.1                                                                                 \r\nenabling fedora-modular-debuginfo repository                                                                  \r\nenabling updates-modular-debuginfo repository       \r\nenabling updates-debuginfo repository                                                                         \r\nenabling fedora-debuginfo repository\r\nenabling rpmfusion-free-updates-debuginfo repository\r\nenabling rpmfusion-free-debuginfo repository                                                                  \r\nLast metadata expiration check: 0:13:30 ago on Thu 21 Nov 2019 12:03:15 PM CST.\r\nDependencies resolved.     \r\n==============================================================================================================\r\n Package                               Architecture  Version         Repository                          Size \r\n==============================================================================================================\r\nInstalling:\r\n netstandard-targeting-pack-2.1        x86_64        2.1.0-1         packages-microsoft-com-prod        2.1 M\r\n\r\nTransaction Summary\r\n==============================================================================================================\r\nInstall  1 Package\r\n\r\nTotal download size: 2.1 M\r\nInstalled size: 2.1 M\r\nIs this ok [y/N]: y\r\nDownloading Packages:\r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8\r\nd24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8\r\nd24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8\r\nd24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8\r\nd24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[FAILED] netstandard-targeting-pack-2.1.0-x64.rpm: No more mirrors to try - All mirrors were already tried without success\r\n```\r\n\r\nHopefully this doesn't entail the need for ir. Heh."},{"Id":"10910131465","Type":"PullRequestEvent","CreatedAt":"2019-11-20T20:02:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10910014017","Type":"PullRequestEvent","CreatedAt":"2019-11-20T19:47:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10901887261","Type":"IssuesEvent","CreatedAt":"2019-11-19T23:58:30","Actor":"SetTrend","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1655","RelatedDescription":"Closed issue \"Change .NET Framework in version table from 4.6.1 to 4.7.1\" (#1655) at dotnet/standard","RelatedBody":"Currently, the [.NET Standard version table](/dotnet/standard/blob/master/docs/versions.md) shows `.NET Framework 4.6.1` to be compatible with `.NET Standard >= 1.5`.\r\n\r\nHowever, a footnote clarifies that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nMoreover, many issues on [StackOverflow.com](https://stackoverflow.com/questions/49925484/you-must-add-a-reference-to-assembly-netstandard-version-2-0-0-0) and [GitHub](542) give evidence that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nWouldn't it be wise then to update above version table to provide **_true_** information than just spout some wannabe information?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10930791659","Type":"IssuesEvent","CreatedAt":"2019-11-23T04:14:59","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42043","RelatedDescription":"Closed issue \".net core 3.0 system.text.json option for ignoring property at runtime like newstonsoft DefaultContractResolver\" (#42043) at dotnet/corefx","RelatedBody":"I am migrating my .net core 2.1 application to .net core 3.0 and getting rid of newtonsoft\r\nI am using following code\r\n\r\n```\r\npublic class PropertyRenameAndIgnoreSerializerContractResolver : DefaultContractResolver\r\n    {\r\n        private readonly Dictionary<Type, HashSet<string>> _ignores;\r\n\r\n        public PropertyRenameAndIgnoreSerializerContractResolver()\r\n        {\r\n            _ignores = new Dictionary<Type, HashSet<string>>();\r\n        }\r\n\r\n        public void IgnoreProperty(Type type, params string[] jsonPropertyNames)\r\n        {\r\n            if (!_ignores.ContainsKey(type))\r\n                _ignores[type] = new HashSet<string>();\r\n\r\n            foreach (var prop in jsonPropertyNames)\r\n                _ignores[type].Add(prop);\r\n        }\r\n    }\r\n\t\r\n\tthen in calling program i have some thing like\r\n\tif(condition)\r\n\t{\r\n\t\t\t\tvar jsonResolver = new PropertyRenameAndIgnoreSerializerContractResolver();\r\n                jsonResolver.IgnoreProperty(typeof(ResponseJson), \"Log_id\");\r\n                jsonResolver.IgnoreProperty(typeof(ResponseJson), \"Log_status\");\r\n                var json = JsonConvert.SerializeObject(response, Formatting.None,\r\n                    new JsonSerializerSettings { ContractResolver = jsonResolver });\r\n...\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\tvar json = JsonConvert.SerializeObject(response, Formatting.None);\r\n...\t\r\n\t\t\t\t\t}\r\n```\r\nwhat should i do to achieve same without newtonsoft"},{"Id":"10930766796","Type":"IssuesEvent","CreatedAt":"2019-11-23T04:00:55","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42692","RelatedDescription":"Closed issue \"Json Deserialize issue with class has \"new modifier\" property\" (#42692) at dotnet/corefx","RelatedBody":"Here is simple code:\r\n```\r\npublic class Program\r\n{\r\n\tpublic static void Main()\r\n\t{\r\n\t\tvar str = \"{\\\"P1\\\": 123}\";\r\n\t\tvar obj = JsonSerializer.Deserialize<B>(str);\t//--> throw\r\n\t\t\r\n\t}\r\n}\r\n\r\npublic class A{\r\n\tpublic int P1{get;set;}\t\r\n\tpublic int P2{get;set;}\r\n}\r\n\r\npublic class B: A{\r\n\tpublic new float P1{get;set;}\r\n}\r\n```\r\nAnd I got an error:\r\n```\r\nUnhandled exception. System.InvalidOperationException: The JSON property name for 'B.P1' collides with another property.\r\n   at System.Text.Json.ThrowHelper.ThrowInvalidOperationException_SerializerPropertyNameConflict(JsonClassInfo jsonClassInfo, JsonPropertyInfo jsonPropertyInfo)\r\n   at System.Text.Json.JsonClassInfo..ctor(Type type, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializerOptions.GetOrAddClass(Type classType)\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.ParseCore(String json, Type returnType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonSerializerOptions options)\r\n   at Program.Main()\r\nCommand terminated by signal 6\r\n```"},{"Id":"10930712992","Type":"IssuesEvent","CreatedAt":"2019-11-23T03:32:20","Actor":"FolkCoder","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42693","RelatedDescription":"Opened issue \"JsonSerializer throws InvalidCastException\" (#42693) at dotnet/corefx","RelatedBody":"Using .NET Core 3.0 or 3.1.100-preview3-014645, an `ICollection<string>` property with a private backing field assigned a custom implementation fails to serialize. \r\n\r\n```\r\n    public class Client\r\n    {\r\n        private ICollection<string> _allowedGrantTypes = new GrantTypeValidatingHashSet();\r\n\r\n        // this works \r\n        // public GrantTypeValidatingHashSet AllowedGrantTypes { get; set; }\r\n\r\n        // this works \r\n        // public ICollection<string> AllowedGrantTypes { get; set; } = new GrantTypeValidatingHashSet();\r\n\r\n        // this errors\r\n        public ICollection<string> AllowedGrantTypes\r\n        {\r\n            get { return _allowedGrantTypes; }\r\n            set\r\n            {\r\n                _allowedGrantTypes = new GrantTypeValidatingHashSet();\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n#### Error message\r\n```\r\nSystem.InvalidCastException: 'Unable to cast object of type 'SerializationSample.GrantTypeValidatingHashSet' to type 'System.Collections.Generic.IList`1[System.String]'.'\r\n```\r\n\r\n#### Stack trace\r\n```\r\nat System.Text.Json.JsonSerializer.ApplyValueToEnumerable[TProperty](TProperty& value, ReadStack& state)\r\n   at System.Text.Json.JsonPropertyInfoNotNullable`4.OnReadEnumerable(ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonPropertyInfo.ReadEnumerable(JsonTokenType tokenType, ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonPropertyInfo.Read(JsonTokenType tokenType, ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& readStack)\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.Deserialize(String json, Type returnType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonSerializerOptions options)\r\n   at SerializationSample.Program.Main() in C:\\SerializationSample\\SerializationSample\\Program.cs:line 13\r\n```\r\n\r\nThis was discovered while attempting to serialize a `Client` model from [IdentityServer4](https://github.com/IdentityServer/IdentityServer4/blob/master/src/Storage/src/Models/Client.cs). I've recreated a [bare-bones project](https://github.com/FolkCoder/SerializationSample/tree/master) duplicating the error. Serialization occurs correctly with Newtonsoft.Json."},{"Id":"10930685833","Type":"IssuesEvent","CreatedAt":"2019-11-23T03:18:44","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37564","RelatedDescription":"Closed issue \"[System.Text.Json] Consider adding a feature JsonSerializer to allow deserializing JsonElement\" (#37564) at dotnet/corefx","RelatedBody":"Probably the same as this - https://github.com/dotnet/corefx/issues/36169, but better worded. It would be useful to have an API that allows deserializing `JsonElement` in to \"T\" e.g.\r\n\r\n```C#\r\nJsonElement element = jsonDocument.Root[0];\r\nSomePoco poco = JsonSerializer.Parse<SomePoco>(element);\r\n```\r\n\r\nRight now the only way to do this is to get to the raw text of the element which just results in needless allocations:\r\n\r\n```C#\r\nJsonElement element = jsonDocument.Root[0];\r\nSomePoco poco = JsonSerializer.Parse<SomePoco>(element.GetRawText());\r\n```\r\n"},{"Id":"10930685092","Type":"IssuesEvent","CreatedAt":"2019-11-23T03:18:21","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37565","RelatedDescription":"Closed issue \"Provide a recipe for creating JsonDocument via the serializer\" (#37565) at dotnet/corefx","RelatedBody":"See here: https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers/commit/9a80d10c494ff5d505bf427e72dd2bc6f0c508fb#diff-f9b7fb28139b9e23c519bca3be7c2930R154\r\n\r\nThis is a community project that @Tratcher was helping with, so this could be considered external customer feedback.\r\n\r\nThey are trying to use `JsonDocument` as part of their object model to represent some unstructured JSON data, but there's no easy recipe to create a `JsonDocument` unless you are starting from a string or bytes. \r\n\r\n----\r\n\r\nHere's the cool workaround that they used:\r\n\r\n```C#\r\n        private async Task CopyPayloadAsync(Dictionary<string, StringValues> content, IBufferWriter<byte> bufferWriter)\r\n        {\r\n            await using (var writer = new Utf8JsonWriter(bufferWriter))\r\n            {\r\n                writer.WriteStartObject();\r\n                foreach (var item in content)\r\n                {\r\n                    writer.WriteString(item.Key, item.Value);\r\n                }\r\n                writer.WriteEndObject();\r\n                await writer.FlushAsync();\r\n            }\r\n\r\n            return JsonDocument.Parse(bufferWriter.WrittenMemory);\r\n        }\r\n```\r\n\r\nThis example uses a dictionary, but there are cases where they have the data already is structured like a POCO object.\r\n\r\n----\r\n\r\nA proposal to make this much better would be the serializer could be used to create a `JsonDocument` directly. This would work really well for cases where you need to transform strongly-typed data into a \"JSON Container\". We'll also end up needing this anyway once it becomes possible to mutate `JsonDocument`.\r\n\r\nIn JSON.NET this is exposed as: https://www.newtonsoft.com/json/help/html/M_Newtonsoft_Json_Linq_JObject_FromObject.htm\r\n\r\n```\r\nreturn JObject.FromObject(content);\r\n```\r\n"},{"Id":"10930637474","Type":"PullRequestEvent","CreatedAt":"2019-11-23T02:54:36","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42663","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42663) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 10:35 PM\r\n- **Commit**: 016d9d67a7be81c68c6d870b7e7de31c4b4fb468\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-rtm.19572.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-rtm.19572.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-rtm.19572.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10930467917","Type":"IssuesEvent","CreatedAt":"2019-11-23T01:38:35","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/40399","RelatedDescription":"Closed issue \"System.Text.Json: Custom Constructor Support \" (#40399) at dotnet/corefx","RelatedBody":"Please provide support for custom constructors and allow to specify the constructor with an attribute."},{"Id":"10930411286","Type":"IssuesEvent","CreatedAt":"2019-11-23T01:17:17","Actor":"nhuthan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42692","RelatedDescription":"Opened issue \"Json Deserialize issue with class has \"new modifier\" property\" (#42692) at dotnet/corefx","RelatedBody":"Here is simple code:\r\n```\r\npublic class Program\r\n{\r\n\tpublic static void Main()\r\n\t{\r\n\t\tvar str = \"{\\\"P1\\\": 123}\";\r\n\t\tvar obj = JsonSerializer.Deserialize<B>(str);\t//--> throw\r\n\t\t\r\n\t}\r\n}\r\n\r\npublic class A{\r\n\tpublic int P1{get;set;}\t\r\n\tpublic int P2{get;set;}\r\n}\r\n\r\npublic class B: A{\r\n\tpublic new float P1{get;set;}\r\n}\r\n```\r\nAnd I got an error:\r\n```\r\nUnhandled exception. System.InvalidOperationException: The JSON property name for 'B.P1' collides with another property.\r\n   at System.Text.Json.ThrowHelper.ThrowInvalidOperationException_SerializerPropertyNameConflict(JsonClassInfo jsonClassInfo, JsonPropertyInfo jsonPropertyInfo)\r\n   at System.Text.Json.JsonClassInfo..ctor(Type type, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializerOptions.GetOrAddClass(Type classType)\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.ParseCore(String json, Type returnType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonSerializerOptions options)\r\n   at Program.Main()\r\nCommand terminated by signal 6\r\n```"},{"Id":"10930377647","Type":"IssuesEvent","CreatedAt":"2019-11-23T01:06:14","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42515","RelatedDescription":"Reopened issue \"System.Text.Json.JsonSerializer doesn't deserialize into existing sub-objects\" (#42515) at dotnet/corefx","RelatedBody":"If a parent object doesn't contain setters for all sub-object properties, the sub-objects are not deserialized. This is inconsistent with other JSON serializers, and seems like a major oversight - current behavior requires a large amount of mutability in the deserialized object model.\r\n\r\nIt's also a normal pattern to provide sub-objects with default values before deserialization.\r\n\r\nFor example, in this class, the `SubObject1` property won't be deserialized, and no exception is thrown.\r\n```c#\r\n    public class Container1\r\n    {\r\n        // Not deserialized due to missing setter. No exceptions thrown.\r\n        public SubObject1 SubObject1 { get; } = new SubObject1();\r\n    }\r\n```\r\n\r\nFull test project:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <Description>Unit tests demonstrating JsonSerializer bugs</Description>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <Platform>x64</Platform>\r\n    <Platforms>x64</Platforms>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"16.4.0\" />\r\n    <PackageReference Include=\"xunit\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.1\" PrivateAssets=\"All\"/>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```c#\r\nusing System.Text.Json;\r\nusing Xunit;\r\n\r\nnamespace JsonSerializer_SubObjects\r\n{\r\n    public class JsonSerializerTest\r\n    {\r\n        [Fact] // Fails\r\n        public void DeserializesSubObjectsWithoutSetters()\r\n        {\r\n            const string jsonFooValue = \"str1\";\r\n            var json = \"{ \\\"SubObject1\\\": { \\\"Foo\\\": \\\"\" + jsonFooValue + \"\\\" }}\";\r\n\r\n            var c1 = JsonSerializer.Deserialize<Container1>(json);\r\n\r\n            // BUG #1: Value isn't deserialized (this assertion fails)\r\n            Assert.Equal(jsonFooValue, c1.SubObject1.Foo);\r\n            // BUG #2: If value can't be deserialized, exception should be thrown\r\n        }\r\n\r\n        [Fact] // Passes\r\n        public void DeserializesSubObjectsWithSetters()\r\n        {\r\n            const string jsonFooValue = \"str1\";\r\n            var json = \"{ \\\"SubObject1\\\": { \\\"Foo\\\": \\\"\" + jsonFooValue + \"\\\" }}\";\r\n\r\n            var c2 = JsonSerializer.Deserialize<Container2>(json);\r\n\r\n            Assert.Equal(jsonFooValue, c2.SubObject1.Foo);\r\n        }\r\n\r\n    }\r\n\r\n    public class Container1\r\n    {\r\n        // Not deserialized due to no setter. No exceptions thrown.\r\n        public SubObject1 SubObject1 { get; } = new SubObject1();\r\n    }\r\n\r\n    public class Container2\r\n    {\r\n        public SubObject1 SubObject1 { get; set; } = new SubObject1();\r\n    }\r\n\r\n    public class SubObject1\r\n    {\r\n        public string Foo { get; set; } = \"foo\";\r\n    }\r\n}\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10930592838","Type":"PullRequestEvent","CreatedAt":"2019-11-23T02:32:31","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39985","RelatedDescription":"Merged pull request \"Merge master to features/local-function-attributes\" (#39985) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10930592690","Type":"PullRequestEvent","CreatedAt":"2019-11-23T02:32:26","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39984","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#39984) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10930341014","Type":"IssuesEvent","CreatedAt":"2019-11-23T00:54:40","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39992","RelatedDescription":"Opened issue \"UnexpectedValue exception is thrown for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.DiagnosticTest.GetDiagnosticsCalledTwice unit-test\" (#39992) at dotnet/roslyn","RelatedBody":"For the ```Microsoft.CodeAnalysis.CSharp.UnitTests.DiagnosticTest.GetDiagnosticsCalledTwice``` unit-test:\r\n- Add \r\n```\r\ncompilation.GetDiagnostics();\r\ncompilation.GetEmitDiagnostics();\r\n```\r\nright after creation of the compilation.\r\n- Run the test\r\n\r\nObserved UnexpectedValue exception is thrown during ```GetEmitDiagnostics``` call (doesn't repro without calling ```GetDiagnostics``` before it):\r\n```\r\n \tMicrosoft.CodeAnalysis.dll!Roslyn.Utilities.ExceptionUtilities.UnexpectedValue(object o) Line 20\tC#\r\n>\tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.IteratorRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement body, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator slotAllocatorOpt, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, out Microsoft.CodeAnalysis.CSharp.IteratorStateMachine stateMachineType) Line 73\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CSharp.BoundStatement body, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState, bool instrumentForDynamicAnalysis, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider debugDocumentProvider, ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeGen.SourceSpan> dynamicAnalysisSpans, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, ref Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator lazyVariableSlotAllocator, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo> lambdaDebugInfoBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo> closureDebugInfoBuilder, out Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol stateMachineTypeOpt) Line 1380\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol methodSymbol, int methodOrdinal, ref Microsoft.CodeAnalysis.CSharp.Binder.ProcessedFieldInitializers processedInitializers, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState) Line 1138\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol containingType) Line 518\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.VisitNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol symbol, Microsoft.CodeAnalysis.CSharp.TypeCompilationState arg) Line 396\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.Accept<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object>(Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object> visitor, Microsoft.CodeAnalysis.CSharp.TypeCompilationState argument) Line 572\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamespace(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol symbol) Line 375\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBeingBuiltOpt, bool emittingPdb, bool emitTestCoverageData, bool hasDeclarationErrors, bool emitMethodBodies, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol> filterOpt, System.Threading.CancellationToken cancellationToken) Line 156\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CompileMethods(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBuilder, bool emittingPdb, bool emitMetadataOnly, bool emitTestCoverageData, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.Symbols.ISymbolInternal> filterOpt, System.Threading.CancellationToken cancellationToken) Line 2771\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2497\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c) Line 388\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.VerifyUsedAssemblyReferences(System.Func<Microsoft.CodeAnalysis.CSharp.CSharpCompilation> createCompilationLambda) Line 1062\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationCore(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable, Microsoft.CodeAnalysis.CSharp.MessageID? experimentalFeature) Line 1051\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateEmptyCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1009\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1000\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Syntax.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.DiagnosticTest.GetDiagnosticsCalledTwice() Line 2245\tC#\r\n```\r\n"},{"Id":"10930299875","Type":"IssuesEvent","CreatedAt":"2019-11-23T00:42:17","Actor":"jmarolf","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39991","RelatedDescription":"Opened issue \"Render all XML doc comments in the editor as they appear in quickinfo\" (#39991) at dotnet/roslyn","RelatedBody":"\r\nWhen I click inside the XML doc comments show me the regular XML format. When I am just scrolling through the file, render the comment like it would appear in quickinfo."},{"Id":"10930286405","Type":"PullRequestEvent","CreatedAt":"2019-11-23T00:38:20","Actor":"dpoeschl","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39989","RelatedDescription":"Closed pull request \"[Draft/Ignore] Messing around with IBrokeredSettingsManager\" (#39989) at dotnet/roslyn","RelatedBody":"Nowhere near ready for review. This exists to facilitate discussion with a partner team."},{"Id":"10930271665","Type":"PullRequestEvent","CreatedAt":"2019-11-23T00:33:54","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39990","RelatedDescription":"Opened pull request \"Move reporting of ERR_IteratorMustBeAsync to avoid race condition\" (#39990) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/39970"},{"Id":"10930271378","Type":"PullRequestEvent","CreatedAt":"2019-11-23T00:33:48","Actor":"dpoeschl","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39989","RelatedDescription":"Opened pull request \"[Draft/Ignore] Messing around with IBrokeredSettingsManager\" (#39989) at dotnet/roslyn","RelatedBody":"Nowhere near ready for review. This exists to facilitate discussion with a partner team."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10925887257","Type":"PullRequestEvent","CreatedAt":"2019-11-22T13:35:46","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7885","RelatedDescription":null,"RelatedBody":"…straintMethodApprox does not return a method.\r\n\r\nConstrained calls on value types to methods like ToString were not boxing the struct and hence failing."},{"Id":"10925885955","Type":"PullRequestEvent","CreatedAt":"2019-11-22T13:35:36","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7885","RelatedDescription":"Closed pull request \"Wasm: Adds a test and a box for callvirt on value types where TryResolveCon…\" (#7885) at dotnet/corert","RelatedBody":"…straintMethodApprox does not return a method.\r\n\r\nConstrained calls on value types to methods like ToString were not boxing the struct and hence failing."},{"Id":"10922585586","Type":"PullRequestEvent","CreatedAt":"2019-11-22T04:31:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7886","RelatedDescription":"Merged pull request \"Revert \"Support custom modifier for method signature\"\" (#7886) at dotnet/corert","RelatedBody":"This reverts commit 5575cc060201ad462809f48db25a56c35e4eaca0."},{"Id":"10921263885","Type":"PullRequestEvent","CreatedAt":"2019-11-21T23:26:20","Actor":"cshung","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7886","RelatedDescription":"Opened pull request \"Revert \"Support custom modifier for method signature\"\" (#7886) at dotnet/corert","RelatedBody":"This reverts commit 5575cc060201ad462809f48db25a56c35e4eaca0."},{"Id":"10921227177","Type":"PullRequestEvent","CreatedAt":"2019-11-21T23:19:26","Actor":"cshung","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7884","RelatedDescription":"Closed pull request \"[WIP] Porting changes from CoreCLR\" (#7884) at dotnet/corert","RelatedBody":"WIP - this port minimal changes from CoreCLR to allow `EcmaSignatureParser.cs` to have identical content with the CoreCLR (now dotnet/runtime) copy."},{"Id":"10921187648","Type":"PullRequestEvent","CreatedAt":"2019-11-21T23:11:56","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7885","RelatedDescription":"Opened pull request \"Wasm: Adds a test and a box for callvirt on value types where TryResolveCon…\" (#7885) at dotnet/corert","RelatedBody":"…straintMethodApprox does not return a method.\r\n\r\nConstrained calls on value types to methods like ToString were not boxing the struct and hence failing."},{"Id":"10911559435","Type":"PullRequestEvent","CreatedAt":"2019-11-20T23:32:54","Actor":"cshung","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7884","RelatedDescription":"Opened pull request \"[WIP] Porting changes from CoreCLR\" (#7884) at dotnet/corert","RelatedBody":"WIP - this port minimal changes from CoreCLR to allow `EcmaSignatureParser.cs` to have identical content with the CoreCLR (now dotnet/runtime) copy."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10930868333","Type":"PullRequestEvent","CreatedAt":"2019-11-23T05:00:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3961","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3961) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.6\r\n- **Date Produced**: 11/23/2019 3:51 AM\r\n- **Commit**: 97a18215497e8b54d0773452b2d77802657b7fad\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19572.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10930689348","Type":"PullRequestEvent","CreatedAt":"2019-11-23T03:20:25","Actor":"dotnet-maestro-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3960","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#3960) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wli3\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10930682458","Type":"PullRequestEvent","CreatedAt":"2019-11-23T03:16:56","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3956","RelatedDescription":"Merged pull request \"update branding 3.1.101 servicing\" (#3956) at dotnet/sdk","RelatedBody":""},{"Id":"10930560691","Type":"PullRequestEvent","CreatedAt":"2019-11-23T02:17:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3958","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3958) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n"},{"Id":"10930078529","Type":"PullRequestEvent","CreatedAt":"2019-11-22T23:41:57","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3959","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3959) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n"},{"Id":"10930076882","Type":"PullRequestEvent","CreatedAt":"2019-11-22T23:41:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3958","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3958) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n"},{"Id":"10929862478","Type":"PullRequestEvent","CreatedAt":"2019-11-22T22:53:21","Actor":"sfoslund","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3957","RelatedDescription":"Opened pull request \"Add Incremental publishing\" (#3957) at dotnet/sdk","RelatedBody":"Adding incremental publishing and test coverage for the following cases:\r\n- Single file publishes\r\n- Renaming project between publishes\r\n- Trimmed publishes\r\n- MVC project publishes\r\n- Custom output directories"},{"Id":"10929309258","Type":"PullRequestEvent","CreatedAt":"2019-11-22T21:14:05","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3956","RelatedDescription":"Opened pull request \"update branding 3.1.101 servicing\" (#3956) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2019-11-14T16:22:27","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Open PR \"Fix broken links\" (#153)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2019-11-14T16:00:23","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Open PR \"Fix broken links\" (#152)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"527479946","IsPullRequest":false,"CreatedAt":"2019-11-23T00:40:00","Actor":"albahari","Number":"27929","RawContent":null,"Title":"NativeLibrary.Load(string, Assembly, DllImportSearchPath?) should honor assembly's ALC","State":"open","Body":"The following overload of NativeLibrary.Load:\r\n\r\n`NativeLibrary.Load(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)`\r\n\r\nshould invoke the `LoadUnmanagedDll` method and `ResolvingUnmanagedDll` event of the assembly's ALC, in keeping with the API's design intention:\r\n\r\n> - NativeLibrary.Load(string) is a low-level API that wraps the underlying library load OS API and nothing else. It is meant to be used e.g. for loading OS and similar libraries that are outside the application.\r\n> - NativeLibrary.Load(string libraryName, Assembly assembly, DllImportSearchPath? searchPath) is a higher level API. The intention for this API was to **behave as if DllImport was used in the given assembly**.\r\n\r\nRight now, it does not behave as such and ignores the assembly's ALC. Consequently, any assembly calling this method will almost certainly break **unless that assembly is loaded into the default ALC**. An example is Microsoft.Data.Sqlite, which calls SQLitePCLRaw.nativelibrary. This breaks right now when loaded into a non-default ALC (or when loaded dynamically).\r\n\r\nThe other overload - NativeLibrary.Load(string libraryPath) - should remain as-is.\r\n\r\nSee the second/third comment in #26864 for a full discussion.","Url":"https://github.com/dotnet/coreclr/issues/27929","RelatedDescription":"Open issue \"NativeLibrary.Load(string, Assembly, DllImportSearchPath?) should honor assembly's ALC\" (#27929)"},{"Id":"527475916","IsPullRequest":true,"CreatedAt":"2019-11-23T00:21:14","Actor":"Anipik","Number":"27928","RawContent":null,"Title":"enabling ci for 2.1 branches","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27928","RelatedDescription":"Open PR \"enabling ci for 2.1 branches\" (#27928)"},{"Id":"527464367","IsPullRequest":true,"CreatedAt":"2019-11-22T23:36:35","Actor":"dotnet-maestro[bot]","Number":"27927","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27927","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#27927)"},{"Id":"527424040","IsPullRequest":true,"CreatedAt":"2019-11-22T21:55:28","Actor":"dotnet-maestro-bot","Number":"27925","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @davmason\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27925","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27925)"},{"Id":"527429360","IsPullRequest":true,"CreatedAt":"2019-11-22T21:44:17","Actor":"jashook","Number":"27926","RawContent":null,"Title":"Do not fast tail call with callee stack space.","State":"open","Body":"This change is pessimistic, but it will guarentee correctness.\r\nWe specifically know that LowerFastTailCall fundamentally is broken.\r\nThis has been fixed in https://github.com/dotnet/coreclr/pull/26255.\r\nThis change exists only to make sure that we do not have SBC in older releases.\r\n\r\nNote that this changes behavoir, there are valid fast tail calls which could have avoided StackOverFlow exceptions.\r\n\r\nThese tail calls must have not had overlapping slot locations, for a flawed definition of slot location. Which simply means they got lucky when generating code.","Url":"https://github.com/dotnet/coreclr/pull/27926","RelatedDescription":"Open PR \"Do not fast tail call with callee stack space.\" (#27926)"},{"Id":"526811526","IsPullRequest":true,"CreatedAt":"2019-11-22T21:27:52","Actor":"Anipik","Number":"27915","RawContent":null,"Title":"branding for release 2.2.9","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27915","RelatedDescription":"Closed or merged PR \"branding for release 2.2.9\" (#27915)"},{"Id":"527413257","IsPullRequest":false,"CreatedAt":"2019-11-22T21:02:55","Actor":"jkotas","Number":"27924","RawContent":null,"Title":"Bad GCInfo generated for Unsafe.ByteOffset","State":"open","Body":"Repro:\r\n\r\n```\r\nusing System;\r\nusing System.Threading;\r\nusing System.Runtime.CompilerServices;\r\n\r\nclass Program\r\n{\r\n    static byte[][] s = new byte[1000][];\r\n\r\n    static void Work()\r\n    {\r\n        uint i = 0;\r\n        for (;;) {\r\n             var a = s[i++ % s.Length];\r\n\r\n             ref byte p = ref a[0];\r\n             ref byte q = ref a[1];\r\n\r\n             if (Unsafe.ByteOffset(ref p, ref q) != new IntPtr(1))\r\n                 Console.WriteLine(\"ERROR\");\r\n\r\n             p = 1; q = 2;\r\n        }\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        for(int i = 0; i < s.Length; i++) s[i] = new byte[2];\r\n\r\n        for(int i = 0; i < 20; i++) new Thread(Work).Start();\r\n\r\n        Random r = new Random();\r\n        for (;;) {\r\n            s[r.Next(s.Length)] = new byte[3 + r.Next(100)];\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nResult: Run with `dotnet run -c Release`. ERROR is printed occasionally.","Url":"https://github.com/dotnet/coreclr/issues/27924","RelatedDescription":"Open issue \"Bad GCInfo generated for Unsafe.ByteOffset\" (#27924)"},{"Id":"527384463","IsPullRequest":false,"CreatedAt":"2019-11-22T19:51:15","Actor":"vitidev","Number":"27923","RawContent":null,"Title":"Compiler generate the wrong code when enabled \"optimize code\" for Unsafe.As","State":"open","Body":"[origin issue](https://github.com/Tornhoof/SpanJson/issues/139)\r\n\r\nIt looks like the compiler is generating the wrong code when enabled \"optimize code\" for `Unsafe.As`\r\n\r\nI use SpanJson library for json serialization and there are code:\r\n\r\n    var buffer = JsonSerializer.Generic.Utf8.SerializeToArrayPool(response);\r\n    \r\nwhich serialize directly to ArrayPool.\r\n\r\nInternally it use:\r\n\r\n      [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n      public static ArraySegment<byte> InnerSerializeToByteArrayPool(T input)\r\n      {\r\n          var jsonWriter = new JsonWriter<TSymbol>(_lastSerializationSizeEstimate);\r\n          try\r\n          {\r\n              Formatter.Serialize(ref jsonWriter, input);\r\n              _lastSerializationSizeEstimate = jsonWriter.Data.Length;\r\n              var temp = jsonWriter.Data;\r\n              var data = Unsafe.As<TSymbol[], byte[]>(ref temp);\r\n              return new ArraySegment<byte>(data, 0, jsonWriter.Position);\r\n          }\r\n          catch\r\n          {\r\n              jsonWriter.Dispose();\r\n              throw;\r\n          }\r\n      }\r\n\r\nwho sometimes under certain and unknown conditions cause error \r\n\r\n     An unhandled exception of type 'System.ExecutionEngineException' occurred in Unknown Module.\r\n     \r\nthat can be fixed by `[MethodImpl(MethodImplOptions.NoOptimization)]`\r\n\r\nBut also can be fixed if rewrite and prevent optimization inlining `var data = Unsafe.As<TSymbol[], byte[]>(ref temp);` to `return new ArraySegment(buff, 0, jsonWriter.Position);`\r\n\r\n    [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n    public static ArraySegment<byte> InnerSerializeToByteArrayPool(T input)\r\n    {\r\n        byte[] buff = new byte[0]; // !!!\r\n        var jsonWriter = new JsonWriter<TSymbol>(_lastSerializationSizeEstimate);\r\n        try\r\n        {\r\n            Formatter.Serialize(ref jsonWriter, input);\r\n            _lastSerializationSizeEstimate = jsonWriter.Data.Length;\r\n            var temp = jsonWriter.Data;\r\n            var data = Unsafe.As<TSymbol[], byte[]>(ref temp);\r\n            buff = data; !!!\r\n            return new ArraySegment<byte>(buff, 0, jsonWriter.Position);\r\n        }\r\n        catch\r\n        {\r\n            jsonWriter.Dispose();\r\n            throw new ApplicationException(buff.ToString()); !!!!\r\n        }\r\n    }\r\n\r\ndump say reasons:\r\n\r\n    The thread tried to read from or write to a virtual address for which it does not have the appropriate access\r\n\r\n     FAILURE_BUCKET_ID:  NULL_POINTER_READ_c0000005_coreclr.dll!TypeHandle::HasTypeEquivalence\r\n\r\nreproduced on on 3.0, 3.1, 5.0 Alpha (@Tornhoof)\r\n\r\nIt is very strange and very very  very very subtle heisenbug. I could not reproduce the error by writing test code, so I had to isolate the environment by removing unnecessary details and created reproducible example. Result is monstrous, but reproducing the problem\r\n[https://github.com/vitidev/CoreClrBug](https://github.com/vitidev/CoreClrBug)\r\n","Url":"https://github.com/dotnet/coreclr/issues/27923","RelatedDescription":"Open issue \"Compiler generate the wrong code when enabled \"optimize code\" for Unsafe.As\" (#27923)"},{"Id":"527369677","IsPullRequest":true,"CreatedAt":"2019-11-22T19:16:48","Actor":"dotnet-maestro-bot","Number":"27922","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"open","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @mmitche\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27922","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27922)"},{"Id":"526727740","IsPullRequest":true,"CreatedAt":"2019-11-22T19:01:43","Actor":"dotnet-maestro[bot]","Number":"27910","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9a4bff4b-85c2-4174-9247-08d6c732a216)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.02\r\n- **Date Produced**: 11/21/2019 6:39 PM\r\n- **Commit**: 07f338c15044f71b1ea6acdfcbb917d790fa4cc2\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.2-servicing-19571-02\r\n\r\n[marker]: <> (End:9a4bff4b-85c2-4174-9247-08d6c732a216)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27910","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/core-setup\" (#27910)"},{"Id":"527349069","IsPullRequest":true,"CreatedAt":"2019-11-22T18:30:34","Actor":"Anipik","Number":"27921","RawContent":null,"Title":"update branding for 3.1 sevicing","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27921","RelatedDescription":"Open PR \"update branding for 3.1 sevicing\" (#27921)"},{"Id":"527345998","IsPullRequest":true,"CreatedAt":"2019-11-22T18:28:53","Actor":"dotnet-maestro-bot","Number":"27920","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27920","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27920)"},{"Id":"526811069","IsPullRequest":true,"CreatedAt":"2019-11-22T18:17:06","Actor":"Anipik","Number":"27914","RawContent":null,"Title":"update branding for 2.1.15","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27914","RelatedDescription":"Closed or merged PR \"update branding for 2.1.15\" (#27914)"},{"Id":"527310555","IsPullRequest":false,"CreatedAt":"2019-11-22T17:03:26","Actor":"EgorBo","Number":"27919","RawContent":null,"Title":"JIT: optimize (T)x | (T)y to (T)(x | y)","State":"open","Body":"Noticed in https://github.com/dotnet/coreclr/issues/27917#issuecomment-557519701 We can optimize some movs away for patterns like `(byte)x | (byte)y` with `(byte)(x | y)`, etc.\r\nFor example:\r\n```csharp\r\nstatic int Downcast(int a, int b)\r\n{\r\n    return (byte)a | (byte)b;\r\n}\r\n\r\nstatic long Upcast(int a, int b)\r\n{\r\n    return (long)a & (long)b; // not only \"|\"\r\n}\r\n```\r\nCurrent codegen:\r\n```asm\r\n; Method Foo:Downcast(int,int):int\r\n       movzx    rax, cl\r\n       movzx    rdx, dl\r\n       or       eax, edx\r\n       ret      \r\n\r\n\r\n; Method Foo:Upcast(int,int):long\r\n       movsxd   rax, ecx\r\n       movsxd   rdx, edx\r\n       and      rax, rdx\r\n       ret      \r\n```\r\nExpected codegen\r\n```asm\r\n; Method Foo:Downcast(int,int):int\r\n       or       edi, esi\r\n       movzx    eax, dil\r\n       ret\r\n\r\n\r\n; Method Foo:Upcast(int,int):long\r\n       and      edi, esi\r\n       movsxd   rax, edi\r\n       ret\r\n```\r\nShould be a simple optimization, e.g.:\r\n```\r\n\\--*  OR        int   \r\n   +--*  CAST      int <- ubyte <- int\r\n   |  \\--*  LCL_VAR   int    V00 arg0    \r\n   \\--*  CAST      int <- ubyte <- int\r\n      \\--*  LCL_VAR   int    V01 arg1   \r\n```\r\nTo:\r\n```\r\n\\--*  CAST      int <- ubyte <- int\r\n   \\--*  OR        int   \r\n      +--*  LCL_VAR   int    V00 arg0    \r\n      \\--*  LCL_VAR   int    V01 arg1 \r\n```\r\nSeems like it's indeed would be nice to have a separate (from morph and lowering) phase for peephole optimizations 🙂 (e.g. to keep these two clean, don't run the peephole phase for tier0 and probably run it twice - after `morphing` and before `lowering`).\r\n\r\nAlso, should work for pointers:\r\n```csharp\r\nstatic unsafe int DowncastPtr(int a, int b)\r\n{\r\n    return *((byte*)&a) | *((byte*)&b);\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27919","RelatedDescription":"Open issue \"JIT: optimize (T)x | (T)y to (T)(x | y)\" (#27919)"},{"Id":"527299936","IsPullRequest":false,"CreatedAt":"2019-11-22T16:41:00","Actor":"mikernet","Number":"27918","RawContent":null,"Title":"Add Unsafe.As() non-ref overload","State":"open","Body":"The ref parameter prevents being able to one-line code using `Unsafe.As` and adds a bunch of temp variables so I find myself often adding this utility method:\r\n\r\n```c#\r\nprivate static TTo UnsafeAs<TFrom, TTo>(TFrom value) => Unsafe.As<TFrom, TTo>(ref value);\r\n```\r\n\r\nTo turn code like this:\r\n\r\n```c#\r\nbyte v = processor.ReadByte();\r\nvalue = Unsafe.As<byte, T>(ref v);\r\n```\r\n\r\nInto this:\r\n\r\n```c#\r\nvalue = UnsafeAs<byte, T>(processor.ReadByte());\r\n```\r\n\r\nIs there a reason not to add that overload? The asm generated by the JIT is the same in all the cases where I've done this.","Url":"https://github.com/dotnet/coreclr/issues/27918","RelatedDescription":"Open issue \"Add Unsafe.As() non-ref overload\" (#27918)"},{"Id":"526559406","IsPullRequest":false,"CreatedAt":"2019-11-22T16:06:25","Actor":"Ghasan","Number":"27908","RawContent":null,"Title":"Single .NET Core app targeting multiple runtimes","State":"closed","Body":"I am sorry if is this the wrong repo, I am not sure where to ask.\r\n\r\nI have a .NET Core app project that calls a native library using `[DllImport]`. I have 3 versions of the native library for win-x86, win-x64, and linux-x64 inside `runtimes` folder following this structure: `runtimes\\win-x86\\native\\native.dll`, and the same for the others (except Linux as `libnative.so`).\r\n\r\nAnd I have this in the project file:\r\n```xml\r\n    <Content Include=\"runtimes\\**\\*\">\r\n      <PackagePath>%(Identity)</PackagePath>\r\n      <Pack>true</Pack>\r\n    </Content>\r\n```\r\nWhen I run the app, it crashes with \"DLL not found\" errors, even though the runtimes folder is correctly copied to the output folder.\r\n\r\nI have tried to use MSBuild targets, and it works by placing the `native.dll` next to `myapp.dll` in the output folder. But I don't want this, since I want a single built app to work for all supported runtimes specified above, I don't want to build 3 separate builds. I am expect .NET Core host to choose the proper one based on RID of the host.\r\n\r\nIs this possible?\r\n\r\nI have noticed that if I package my the native.dlls to a `nupkg`, and then import it to myapp project, it will work, and .NET Core runtime can find the proper native.dll inside `runtimes` folder. But I don't want to keep packaging to a nupkg locally and copying it to .nuget cache each time the native libraries change.\r\n\r\nBtw, SkiaSharp, HarfBuzzSharp, SharpFont, all of them keep their native libraries in the `runtimes` folder, and they work like a charm.\r\n\r\nAppreciate your help.\r\nIs this possible?","Url":"https://github.com/dotnet/coreclr/issues/27908","RelatedDescription":"Closed issue \"Single .NET Core app targeting multiple runtimes\" (#27908)"},{"Id":"526794325","IsPullRequest":false,"CreatedAt":"2019-11-22T16:02:58","Actor":"RajeshAKumar","Number":"27913","RawContent":null,"Title":"Patching of the SCD based deployement.","State":"closed","Body":"We are shipping a product where a service component uses ASP.NET Core 3.0 in Self Contained deployment model.\r\nDoes Dot net core register this anywhere to be patched via MS update?\r\nOr are we responsible to patch whenever newer framework version comes up.\r\nIf later, that is a big commitment from our part and reduces the usability of SCD especially considering the security.\r\n\r\nIt is hard to explain to normal IT admins that our service has a very small attack surface area and only when it runs, not otherwise.\r\nThe fact that we are carrying and running a web server, the IT can be after us.\r\n\r\nPlease advise.","Url":"https://github.com/dotnet/coreclr/issues/27913","RelatedDescription":"Closed issue \"Patching of the SCD based deployement.\" (#27913)"},{"Id":"527154915","IsPullRequest":false,"CreatedAt":"2019-11-22T11:57:34","Actor":"mikernet","Number":"27917","RawContent":null,"Title":"JIT Optimization (Stack Usage?)","State":"open","Body":"On the surface, it seems like the JIT shouldn't have a problem producing the optimal code here as it is doing the proper branch elimination but that is not what's happening. Take the following method:\r\n\r\n```c#\r\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\r\npublic static bool HasFlag(T value, T flag) where T : struct, Enum\r\n{\t\t\t\r\n    int size = Unsafe.SizeOf<T>();\r\n\r\n    if (size == 1)\r\n        return (Unsafe.As<T, byte>(ref value) | Unsafe.As<T, byte>(ref flag)) == Unsafe.As<T, byte>(ref value);\r\n    else if (size == 2)\r\n        return (Unsafe.As<T, short>(ref value) | Unsafe.As<T, short>(ref flag)) == Unsafe.As<T, short>(ref value);\r\n    else if (size == 4)\r\n        return (Unsafe.As<T, int>(ref value) | Unsafe.As<T, int>(ref flag)) == Unsafe.As<T, int>(ref value);\r\n    else // size == 8\r\n        return (Unsafe.As<T, long>(ref value) | Unsafe.As<T, long>(ref flag)) == Unsafe.As<T, long>(ref value);\r\n}\r\n```\r\n\r\nWith the branch elimination it is doing it should be able to produce the optimal ASM, i.e.:\r\n\r\n```\r\n    L0000: or edx, ecx\r\n    L0002: cmp edx, ecx\r\n    L0004: setz al\r\n    L0007: movzx eax, al\r\n    L000a: ret\r\n```\r\n\r\nIt gets somewhat close but produces this instead (for size 4 types):\r\n\r\n```\r\n    L0000: mov [rsp+0x8], ecx\r\n    L0004: mov [rsp+0x10], edx\r\n    L0008: mov eax, [rsp+0x8]\r\n    L000c: mov edx, [rsp+0x10]\r\n    L0010: or edx, eax\r\n    L0012: cmp edx, eax\r\n    L0014: setz al\r\n    L0017: movzx eax, al\r\n    L001a: ret\r\n```\r\n\r\nWhich runs about half as fast and uses 16 additional bytes (26 instead of just 10). I'm not sure exactly what is going on here but I believe it has to do with the way the stack is used when there are multiple branches that use locals causing some optimizations not to be done because this produces the optimal ASM:\r\n\r\n```c#\r\npublic static bool HasFlag(T value, T flag) where T : struct, Enum\r\n{\t\t\t\r\n    int size = Unsafe.SizeOf<T>();\r\n\r\n    if (size == 4)\r\n        return (Unsafe.As<T, int>(ref value) | Unsafe.As<T, int>(ref flag)) == Unsafe.As<T, int>(ref value);\r\n    \r\n    throw new NotSupportedException();    \r\n}\r\n```\r\n\r\nI imagine that improving this could reduce JITted code size and bump performance in many cases. One of the concerns about adding generic enum methods is the JIT bloat it will produce and this could potentially help with that given that most of the methods would be simple bitwise operations like the one above.","Url":"https://github.com/dotnet/coreclr/issues/27917","RelatedDescription":"Open issue \"JIT Optimization (Stack Usage?)\" (#27917)"},{"Id":"525384378","IsPullRequest":false,"CreatedAt":"2019-11-22T04:25:02","Actor":"clamp03","Number":"27902","RawContent":null,"Title":"Startup Time on Embedded System","State":"closed","Body":"One of the most time-consuming jobs during startup time is JIT compilation.\r\nWe reduced most JIT compilation overhead with NGEN(FNV), preload and MPGO.\r\n\r\nHowever, some JIT compilation overhead still remains.\r\nI found that if we remove all, then startup time can be improved by 5%~.\r\nI want to share my experiments and ask some questions.\r\n\r\nThere two types of JIT overhead.\r\n- Methods with generic (value type)\r\nI did two experiments.\r\nFirst, compile the methods only by NGEN and bind to callers.\r\nSecond, give force inline attribute to the methods during NGEN.\r\n\r\n| Launching Time (ms) | Before | First Opt | Second Opt |\r\n| --- | --- | --- | --- |\r\n| Alarm | 580.8 | 555.2 | 563.2 |\r\n| Calculator | 662.4 | 648.8 | 651.2 |\r\n| HeartRateMonitor | 621.6 | 583.2 | 589.6 |\r\n| VoiceMemo | 792.8 | 780.8 | 788 |\r\n| Weather\t| 1234.4 | 1208.8 | 1216 |\r\n| XStopWatch | 608 | 600 | 609.6 |\r\n\r\nIt shows improvements with 3% and 2%.\r\nI implemented these for PoC. I think these approaches are not acceptable.\r\nIf you have any other ways to compile the methods in NGEN, could you share it?\r\n\r\n- IL STUB: IL_STUB_InstantiatingStub and IL_STUB_UnboxingStub\r\nI disabled IL_STUB FEATURE. (Just for a test.)\r\n\r\n| Launching Time (ms) | Before | After |\r\n| --- | --- | --- |\r\n| Alarm | 721.6 | 685.6 |\r\n| Calculator | 824.0 | 810.4 |\r\n| HeartRateMonitor | 760.8 | 772.8 |\r\n| VoiceMemo | 989.6 | 949.6 |\r\n| Weather\t| 1647.2 | 1592.0 |\r\n| XStopWatch | 770.4 | 733.6 |\r\n\r\nI think if NGEN compiles IL STUBs, it will be similar.\r\nIs it possible to compile IL InstantiatingStub and IL UnboxingStub by NGEN?\r\nIf it is possible, could you share any plan (if you have) or give some guides to implement?","Url":"https://github.com/dotnet/coreclr/issues/27902","RelatedDescription":"Closed issue \"Startup Time on Embedded System\" (#27902)"},{"Id":"526812011","IsPullRequest":true,"CreatedAt":"2019-11-21T20:06:22","Actor":"dotnet-maestro-bot","Number":"27916","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27916","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27916)"},{"Id":"526768733","IsPullRequest":false,"CreatedAt":"2019-11-21T18:31:35","Actor":"wfurt","Number":"27912","RawContent":null,"Title":"unnecessary fsync in perf tracing code","State":"open","Body":"I was trying to profile some networking code on Linux using perfollect. I noticed large chunk of time spent in fsync and related code. In my test code of 200 SslHandshake I saw 7000+ `fsync` calls. \r\nAfter some digging this points to \r\n\r\nhttps://github.com/dotnet/runtime/blob/7b408c199276ce43f2c240ef76ec0413ce096139/src/coreclr/src/pal/src/misc/perfjitdump.cpp#L225-L281\r\n\r\n```c\r\n    int LogMethod(void* pCode, size_t codeSize, const char* symbol, void* debugInfo, void* unwindInfo)\r\n    {\r\n        int result = 0;\r\n\r\n\r\n        if (enabled)\r\n        {\r\n            size_t symbolLen = strlen(symbol);\r\n\r\n\r\n            JitCodeLoadRecord record;\r\n\r\n\r\n            record.vma = (uint64_t) pCode;\r\n            record.code_addr = (uint64_t) pCode;\r\n            record.code_size = codeSize;\r\n            record.code_index = ++codeIndex;\r\n            record.header.total_size = sizeof(JitCodeLoadRecord) + symbolLen + 1 + codeSize;\r\n\r\n\r\n            result = pthread_mutex_lock(&mutex);\r\n\r\n\r\n            if (result != 0)\r\n                return FatalError(false);\r\n\r\n\r\n            if (!enabled)\r\n                goto exit;\r\n\r\n\r\n            // ToDo write debugInfo and unwindInfo immediately before the JitCodeLoadRecord (while lock is held).\r\n\r\n\r\n            record.header.timestamp = GetTimeStampNS();\r\n\r\n\r\n            result = write(fd, &record, sizeof(JitCodeLoadRecord));\r\n\r\n\r\n            if (result == -1)\r\n                return FatalError(true);\r\n\r\n\r\n            result = write(fd, symbol, symbolLen + 1);\r\n\r\n\r\n            if (result == -1)\r\n                return FatalError(true);\r\n\r\n\r\n            result = write(fd, pCode, codeSize);\r\n\r\n\r\n            if (result == -1)\r\n                return FatalError(true);\r\n\r\n\r\n            result = fsync(fd);\r\n\r\n\r\n            if (result == -1)\r\n                return FatalError(true);\r\n\r\n\r\nexit:\r\n            result = pthread_mutex_unlock(&mutex);\r\n\r\n\r\n            if (result != 0)\r\n                return FatalError(false);\r\n\r\n\r\n        }\r\n        return 0;\r\n    }\r\n```\r\n\r\n`fsync` seems unnecessary as we don't expect correct behavior on abnormal exits https://github.com/dotnet/diagnostics/issues/570. When `write()` is done, data will be written even if .NET process crashes as OS will close all handles and flush all buffers. \r\nTo make this worse, the `fsync` is currently done under lock and that can significanly increase critical section. \r\n\r\nThere seems to be other issues with this code. We only check for negative value returned from `write`. However `write` can write less then asked for and return written bytes. We would miss such case and we could write corrupted entries unnoticed. \r\n\r\nSince we write fixed number records we should be able to to have iovec on stack and use single `writev()` That would limit context switches to kernel and it would make this less impactful to traced code. \r\n\r\ncc @sdmaclea @janvorli @noahfalk @jkotas ","Url":"https://github.com/dotnet/coreclr/issues/27912","RelatedDescription":"Open issue \"unnecessary fsync in perf tracing code\" (#27912)"},{"Id":"526336720","IsPullRequest":true,"CreatedAt":"2019-11-21T17:31:02","Actor":"jashook","Number":"27906","RawContent":null,"Title":"Move off of the old arm32 queue","State":"closed","Body":"Port #27905 to release/3.1\r\n\r\n/cc @hoyosjs @lpereira @trylek @ilyas1974 ","Url":"https://github.com/dotnet/coreclr/pull/27906","RelatedDescription":"Closed or merged PR \"Move off of the old arm32 queue\" (#27906)"},{"Id":"526728194","IsPullRequest":true,"CreatedAt":"2019-11-21T17:08:44","Actor":"dotnet-maestro[bot]","Number":"27911","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d7eb9992-d759-446e-f8f0-08d6910be5f1)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.9\r\n- **Date Produced**: 10/16/2019 10:28 PM\r\n- **Commit**: c1778515a3bee34cc09c757b5563d0af0c8b1e99\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-servicing.19516.9\r\n\r\n[marker]: <> (End:d7eb9992-d759-446e-f8f0-08d6910be5f1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27911","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#27911)"},{"Id":"526622122","IsPullRequest":false,"CreatedAt":"2019-11-21T14:15:53","Actor":"Const-me","Number":"27909","RawContent":null,"Title":"The new SIMD support could use some improvements","State":"open","Body":"Here's the source code of a function which computes brightness of RGBA images. Very typical SIMD code for image processing I traditionally do in C++. Decided to try the new C# for a change.\r\n```\r\n/// <summary>Load 4 pixels of RGB</summary>\r\nstatic unsafe Vector128<int> load4( byte* src )\r\n{\r\n\treturn Sse2.LoadVector128( (int*)src );\r\n}\r\n\r\n/// <summary>Pack red channel of 8 pixels into ushort values in [ 0xFF00 .. 0 ] interval</summary>\r\nstatic Vector128<ushort> packRed( Vector128<int> a, Vector128<int> b )\r\n{\r\n\tVector128<int> mask = Vector128.Create( 0xFF );\r\n\ta = Sse2.And( a, mask );\r\n\tb = Sse2.And( b, mask );\r\n\treturn Sse2.ShiftLeftLogical128BitLane( Sse41.PackUnsignedSaturate( a, b ), 1 );\r\n}\r\n\r\n/// <summary>Pack green channel of 8 pixels into ushort values in [ 0xFF00 .. 0 ] interval</summary>\r\nstatic Vector128<ushort> packGreen( Vector128<int> a, Vector128<int> b )\r\n{\r\n\tVector128<int> mask = Vector128.Create( 0xFF00 );\r\n\ta = Sse2.And( a, mask );\r\n\tb = Sse2.And( b, mask );\r\n\treturn Sse41.PackUnsignedSaturate( a, b );\r\n}\r\n\r\n/// <summary>Pack blue channel of 8 pixels into ushort values in [ 0xFF00 .. 0 ] interval</summary>\r\nstatic Vector128<ushort> packBlue( Vector128<int> a, Vector128<int> b )\r\n{\r\n\ta = Sse2.ShiftRightLogical128BitLane( a, 1 );\r\n\tb = Sse2.ShiftRightLogical128BitLane( b, 1 );\r\n\tVector128<int> mask = Vector128.Create( 0xFF00 );\r\n\ta = Sse2.And( a, mask );\r\n\tb = Sse2.And( b, mask );\r\n\treturn Sse41.PackUnsignedSaturate( a, b );\r\n}\r\n\r\n/// <summary>Load 8 pixels, split into RGB channels.</summary>\r\nstatic unsafe void loadRgb( byte* src, out Vector128<ushort> red, out Vector128<ushort> green, out Vector128<ushort> blue )\r\n{\r\n\tvar a = load4( src );\r\n\tvar b = load4( src + 16 );\r\n\tred = packRed( a, b );\r\n\tgreen = packGreen( a, b );\r\n\tblue = packBlue( a, b );\r\n}\r\n\r\nconst ushort mulRed = (ushort)( 0.29891 * 0x10000 );\r\nconst ushort mulGreen = (ushort)( 0.58661 * 0x10000 );\r\nconst ushort mulBlue = (ushort)( 0.11448 * 0x10000 );\r\n\r\n/// <summary>Compute brightness of 8 pixels</summary>\r\nstatic Vector128<short> brightness( Vector128<ushort> r, Vector128<ushort> g, Vector128<ushort> b )\r\n{\r\n\tr = Sse2.MultiplyHigh( r, Vector128.Create( mulRed ) );\r\n\tg = Sse2.MultiplyHigh( g, Vector128.Create( mulGreen ) );\r\n\tb = Sse2.MultiplyHigh( b, Vector128.Create( mulBlue ) );\r\n\tvar result = Sse2.AddSaturate( Sse2.AddSaturate( r, g ), b );\r\n\treturn Vector128.AsInt16( Sse2.ShiftRightLogical( result, 8 ) );\r\n}\r\n\r\n/// <summary>Convert buffer from RGBA to grayscale.</summary>\r\n/// <remarks>\r\n/// <para>If your image has line paddings, you'll want to call this once per line, not for the complete image.</para>\r\n/// <para>If width of the image is not multiple of 16 pixels, you'll need to do more work to handle the last few pixels of every line.</para>\r\n/// </remarks>\r\nstatic unsafe void convertToGrayscale( byte* src, byte* dst, int count )\r\n{\r\n\tbyte* srcEnd = src + count * 4;\r\n\twhile( src < srcEnd )\r\n\t{\r\n\t\tloadRgb( src, out var r, out var g, out var b );\r\n\t\tvar low = brightness( r, g, b );\r\n\t\tloadRgb( src + 32, out r, out g, out b );\r\n\t\tvar hi = brightness( r, g, b );\r\n\r\n\t\tvar bytes = Sse2.PackUnsignedSaturate( low, hi );\r\n\t\tSse2.Store( dst, bytes );\r\n\r\n\t\tsrc += 64;\r\n\t\tdst += 16;\r\n\t}\r\n}\r\n```\r\nFirst of all, nice job inlining the code. The complete `convertToGrayscale` is compiled into a single function without any calls.\r\n\r\nBut there’s still room for improvements. When looking at the disassembly in VS2019 debugger, I noticed 2 things.\r\n\r\n1. You don’t propagate invariants. There’re many magic numbers involved. Instead of caching values in a register, the generated code creates them on demand inside the loop, with instructions like this:\r\n```\r\nmov         r8d,0FF00h\r\nvmovd       xmm5,r8d\r\nvpbroadcastd xmm5,xmm5\r\n```\r\nThe code only uses first 6 out of 16 available vector registers. There're enough unused registers for all the invariant constants involved in the algorithm.\r\n\r\n2. There’re redundant instructions like this:\r\n```\r\nvmovaps     xmm3,xmm1\r\nvmovaps     xmm4,xmm2\r\n```\r\nIf you’ll manage to apply these 2 optimizations, I would expect up to 2x speedup, because it will be twice as few instructions in the body of the loop.\r\n","Url":"https://github.com/dotnet/coreclr/issues/27909","RelatedDescription":"Open issue \"The new SIMD support could use some improvements\" (#27909)"},{"Id":"526422961","IsPullRequest":true,"CreatedAt":"2019-11-21T07:51:04","Actor":"tqinli","Number":"27907","RawContent":null,"Title":"fixed VirtualMemoryLogging::logRecords overflow with negative indexing","State":"open","Body":"when VirtualMemoryLogging::recordNumber increments from LONG_MAX,\r\nit became negative number, and the result of i % MaxRecords became\r\na number from -127 to 0.\r\n\r\nWhen that happens we will ovewrite CRITICAL_SECTION virtual_critsec\r\nwhich are stored in bss right before logRecords with garbage data.\r\nThen most likely the process will have a GC hang with one or more\r\nGC threads stuck trying to enter or leave critical section.\r\n\r\nThe fix is to ensure ULONG value are passed to modulo operation.","Url":"https://github.com/dotnet/coreclr/pull/27907","RelatedDescription":"Open PR \"fixed VirtualMemoryLogging::logRecords overflow with negative indexing\" (#27907)"},{"Id":"526259354","IsPullRequest":true,"CreatedAt":"2019-11-21T03:00:18","Actor":"jashook","Number":"27905","RawContent":null,"Title":"Move off of the old arm32 queue","State":"closed","Body":"/cc @mmitche \r\n\r\n/cc @trylek @lpereira @ilyas1974 \r\n","Url":"https://github.com/dotnet/coreclr/pull/27905","RelatedDescription":"Closed or merged PR \"Move off of the old arm32 queue\" (#27905)"},{"Id":"525914661","IsPullRequest":false,"CreatedAt":"2019-11-20T16:24:38","Actor":"rossgurbutt","Number":"27904","RawContent":null,"Title":"Netcore3.0 app aborts in release configuration on a Linux machine","State":"open","Body":"Possibly related to this previous issue: https://github.com/dotnet/coreclr/issues/27734\r\n\r\nRunning the attached app (which targets netcoreapp3.0) in release configuration on our Linux machines aborts  with one of the following errors:\r\n\r\n- System.AccessViolationException: 'Attempted to read or write protected memory. This is often an indication that other memory is corrupt.'\r\n- Segmentation fault\r\n\r\nAlthough unlike the previous bug, the occurrence is not 100% deterministic. It does however, usually occur on the first run of the program at some point and has been observed to occur more frequently when the following environment variables were set for debugging purposes.\r\n\r\n- COMPlus_DbgEnableMiniDump=1\r\n- COMPlus_StressLog=1\r\n- COMPlus_DbgMiniDumpType=4 (we found that our symbols weren't loading properly without this)\r\n\r\nThe program is reasonably simple, contains no unmanaged code, no third party dependencies, and has some fairly simple logic intended to use some memory (but not anywhere close to all of it) and stress the cpu in a manner similar to the way our full program does.\r\n\r\n```\r\nOperating system: CentOS Linux 7 (Core)\r\nKernel: Linux 3.10.0-862.11.6.el7.x86_64\r\n```\r\n\r\ndotnet --info\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n[Program.zip](https://github.com/dotnet/coreclr/files/3870218/Program.zip)","Url":"https://github.com/dotnet/coreclr/issues/27904","RelatedDescription":"Open issue \"Netcore3.0 app aborts in release configuration on a Linux machine\" (#27904)"},{"Id":"525796413","IsPullRequest":false,"CreatedAt":"2019-11-20T13:15:03","Actor":"dryszkowski","Number":"27903","RawContent":null,"Title":"JIT: Duplicated addition in compiled IL","State":"open","Body":"The JIT compiles IL code below into something that seems to be incorrect\r\n```\r\n    call       void [mscorlib]System.Diagnostics.Debugger::Break()\r\n    ldarg.0\r\n    ldc.i4 100\r\n    \r\n    Label_A:\r\n    add\r\n    dup\r\n    ldc.i4.0\r\n    brtrue.s   Label_A\r\n    \r\n    starg.s    theSequenceNumber\r\n    pop\r\n    ldarg.0\r\n    ret\r\n```\r\n```\r\n01130950 56                   push        esi  \r\n01130951 8B F1                mov         esi,ecx  \r\n01130953 E8 30 E4 74 71       call        7287ED88  \r\n01130958 8B D6                mov         edx,esi  \r\n0113095A B8 64 00 00 00       mov         eax,64h  \r\n0113095F 83 C2 64             add         edx,64h  \r\n01130962 03 C2                add         eax,edx  \r\n01130964 5E                   pop         esi  \r\n01130965 C3                   ret  \r\n```\r\nSignature of this method is\r\n```\r\n  .method public hidebysig static int32 Test1(int32 theSequenceNumber) cil managed\r\n```\r\n`ECX` contains value of `theSequenceNumber` argument\r\n\r\nIn produced compiled code addition occurs twice but if I remove\r\n```\r\n    ldc.i4.0\r\n    brtrue.s   Label_A\r\n```\r\neverything back to normal and addition is not duplicated anymore. IL code from my example is simplified version of code that after obfuscation start to behave differently from original version. ","Url":"https://github.com/dotnet/coreclr/issues/27903","RelatedDescription":"Open issue \"JIT: Duplicated addition in compiled IL\" (#27903)"},{"Id":"525372747","IsPullRequest":false,"CreatedAt":"2019-11-20T01:59:19","Actor":"VincentBu","Number":"27901","RawContent":null,"Title":"Test failed: JIT/Directed/tailcall/tailcall/tailcall.sh","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20191118.1](https://dev.azure.com/dnceng/public/_build/results?buildId=431634)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/2a770028-bc31-4095-ba9f-19a2dde3d0ec/workitems/JIT.Directed/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\nosx x64\r\n\r\n**Mode:**\r\nlinux x64\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_JitStress=2\r\n\r\n**Log:**\r\n```\r\nJIT/Directed/tailcall/tailcall/tailcall.sh [FAIL]\r\n      Stack overflow.\r\n      /home/helixbot/work/2a770028-bc31-4095-ba9f-19a2dde3d0ec/Work/0d044de3-9f5f-40c1-a164-17b43629bf6b/Exec/JIT/Directed/tailcall/tailcall/tailcall.sh: line 275: 17731 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/2a770028-bc31-4095-ba9f-19a2dde3d0ec/Work/0d044de3-9f5f-40c1-a164-17b43629bf6b/Exec/JIT/Directed/Reports/JIT.Directed/tailcall/tailcall/tailcall.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/2a770028-bc31-4095-ba9f-19a2dde3d0ec/Payload/corerun tailcall.dll ''\r\n      Test Start\r\n      Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.17731.dmp\r\n      Written 96120832 bytes (23467 pages) to core file\r\n      Expected: 100\r\n      Actual: 134\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27901","RelatedDescription":"Open issue \"Test failed: JIT/Directed/tailcall/tailcall/tailcall.sh\" (#27901)"},{"Id":"525170050","IsPullRequest":true,"CreatedAt":"2019-11-19T17:58:30","Actor":"dotnet-maestro-bot","Number":"27900","RawContent":null,"Title":"Update BuildTools, CoreFx to rc1-04230-01, servicing-28208-01, respectively (release/uwp6.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/27900","RelatedDescription":"Open PR \"Update BuildTools, CoreFx to rc1-04230-01, servicing-28208-01, respectively (release/uwp6.2)\" (#27900)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"527512289","IsPullRequest":true,"CreatedAt":"2019-11-23T05:15:11","Actor":"dotnet-maestro[bot]","Number":"13115","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191122.16\r\n- **Date Produced**: 11/23/2019 4:29 AM\r\n- **Commit**: 9fded4c4aad794c7bb1152375a2eff092bb52a86\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19572.16\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13115","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13115)"},{"Id":"527087356","IsPullRequest":true,"CreatedAt":"2019-11-23T04:13:46","Actor":"dotnet-maestro[bot]","Number":"13110","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.05\r\n- **Date Produced**: 11/23/2019 2:41 AM\r\n- **Commit**: 84c8bdc161ce5f1e414eb76993a8ec388dc6f167\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19572-05\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13110","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13110)"},{"Id":"527406566","IsPullRequest":true,"CreatedAt":"2019-11-23T00:16:17","Actor":"wli3","Number":"13111","RawContent":null,"Title":"update branding 3.1.101 servicing","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13111","RelatedDescription":"Closed or merged PR \"update branding 3.1.101 servicing\" (#13111)"},{"Id":"527467895","IsPullRequest":true,"CreatedAt":"2019-11-22T23:48:18","Actor":"dotnet-maestro[bot]","Number":"13114","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13114","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13114)"},{"Id":"527464709","IsPullRequest":true,"CreatedAt":"2019-11-22T23:37:38","Actor":"dotnet-maestro[bot]","Number":"13113","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13113","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13113)"},{"Id":"527462382","IsPullRequest":true,"CreatedAt":"2019-11-22T23:28:43","Actor":"dotnet-maestro-bot","Number":"13112","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13112","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13112)"},{"Id":"526204872","IsPullRequest":true,"CreatedAt":"2019-11-22T23:14:20","Actor":"dotnet-maestro[bot]","Number":"13097","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13097","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13097)"},{"Id":"527041854","IsPullRequest":true,"CreatedAt":"2019-11-22T08:40:38","Actor":"dotnet-maestro[bot]","Number":"13109","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.09\r\n- **Date Produced**: 11/22/2019 6:59 AM\r\n- **Commit**: e16006fdb878571435c093f2fda5f4e6daa55654\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19571-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19571-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19571-09\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19571-09\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19571-09\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13109","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13109)"},{"Id":"526989771","IsPullRequest":true,"CreatedAt":"2019-11-22T05:35:29","Actor":"dotnet-maestro[bot]","Number":"13108","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.08\r\n- **Date Produced**: 11/22/2019 4:11 AM\r\n- **Commit**: ced6a9739002ddbc2470f0b42a21306c49b18ab1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19571-08\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19571-08\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19571-08\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19571-08\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19571-08\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13108","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13108)"},{"Id":"526948890","IsPullRequest":true,"CreatedAt":"2019-11-22T02:55:28","Actor":"dotnet-maestro[bot]","Number":"13107","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.06\r\n- **Date Produced**: 11/22/2019 1:26 AM\r\n- **Commit**: 67d553d070f4e1e25e64ba45c5de21e71675af7a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19571-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19571-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19571-06\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19571-06\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19571-06\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13107","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13107)"},{"Id":"526925066","IsPullRequest":true,"CreatedAt":"2019-11-22T00:57:39","Actor":"dotnet-maestro-bot","Number":"13106","RawContent":null,"Title":"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'","State":"open","Body":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* mmitche\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13106","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#13106)"},{"Id":"526916355","IsPullRequest":true,"CreatedAt":"2019-11-22T00:55:27","Actor":"dotnet-maestro[bot]","Number":"13105","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.04\r\n- **Date Produced**: 11/21/2019 11:30 PM\r\n- **Commit**: 1c5c5dc1d535de9af2a3115cacec9f1ee2e730e1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19571-04\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19571-04\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19571-04\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19571-04\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19571-04\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13105","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13105)"},{"Id":"526897636","IsPullRequest":true,"CreatedAt":"2019-11-21T23:24:35","Actor":"dsplaisted","Number":"13104","RawContent":null,"Title":"Update branding to 2.1.803","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/13104","RelatedDescription":"Open PR \"Update branding to 2.1.803\" (#13104)"},{"Id":"526799044","IsPullRequest":true,"CreatedAt":"2019-11-21T20:05:29","Actor":"dotnet-maestro[bot]","Number":"13103","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.02\r\n- **Date Produced**: 11/21/2019 6:39 PM\r\n- **Commit**: 07f338c15044f71b1ea6acdfcbb917d790fa4cc2\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19571-02\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19571-02\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19571-02\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19571-02\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19571-02\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13103","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13103)"},{"Id":"526289337","IsPullRequest":true,"CreatedAt":"2019-11-21T00:15:31","Actor":"dotnet-maestro[bot]","Number":"13102","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.6\r\n- **Date Produced**: 11/23/2019 3:51 AM\r\n- **Commit**: 97a18215497e8b54d0773452b2d77802657b7fad\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19572.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19572.6\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19572.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19572.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19572.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19572.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13102","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13102)"},{"Id":"526289230","IsPullRequest":true,"CreatedAt":"2019-11-21T00:15:15","Actor":"dotnet-maestro[bot]","Number":"13101","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191122.4\r\n- **Date Produced**: 11/23/2019 3:51 AM\r\n- **Commit**: 60555c372e896ef409723d9f813bf3c8fdf6c7a6\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.101-servicing.19572.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13101","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13101)"},{"Id":"526250973","IsPullRequest":true,"CreatedAt":"2019-11-20T22:56:22","Actor":"dotnet-maestro[bot]","Number":"13099","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 10:06 PM\r\n- **Commit**: 7a6c23bdddc0f12d7f0dee0a1b655375a08888c7\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.1-servicing.19570.3\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13099","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#13099)"},{"Id":"526254496","IsPullRequest":true,"CreatedAt":"2019-11-20T22:35:16","Actor":"dotnet-maestro[bot]","Number":"13100","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191122.2\r\n- **Date Produced**: 11/22/2019 8:23 PM\r\n- **Commit**: 2ee1524a4c4241ea98d138b68d9abfea37c53443\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.102-servicing.19572.2\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13100","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13100)"},{"Id":"526233170","IsPullRequest":true,"CreatedAt":"2019-11-20T22:20:30","Actor":"dotnet-maestro[bot]","Number":"13098","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191120.2\r\n- **Date Produced**: 11/20/2019 9:18 PM\r\n- **Commit**: b275b18fd7014d67078e2477f693301ea04e6549\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.0-rtm.19570.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13098","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13098)"},{"Id":"526070734","IsPullRequest":true,"CreatedAt":"2019-11-20T21:53:50","Actor":"dsplaisted","Number":"13095","RawContent":null,"Title":"Update branding to 2.1.608","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13095","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.608\" (#13095)"},{"Id":"526106318","IsPullRequest":true,"CreatedAt":"2019-11-20T21:16:15","Actor":"dotnet-maestro[bot]","Number":"13096","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13096","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13096)"},{"Id":"526035193","IsPullRequest":true,"CreatedAt":"2019-11-20T21:09:41","Actor":"dsplaisted","Number":"13094","RawContent":null,"Title":"Update branding to 2.1.511","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13094","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.511\" (#13094)"},{"Id":"525947486","IsPullRequest":true,"CreatedAt":"2019-11-20T17:53:27","Actor":"mmitche","Number":"13093","RawContent":null,"Title":"[release/3.0.1xx] Update branding for 3.0.102","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13093","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update branding for 3.0.102\" (#13093)"},{"Id":"525334948","IsPullRequest":true,"CreatedAt":"2019-11-20T01:36:34","Actor":"wli3","Number":"13092","RawContent":null,"Title":"Merge 485c50a4a257 to release/2.1.6xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13092","RelatedDescription":"Closed or merged PR \"Merge 485c50a4a257 to release/2.1.6xx\" (#13092)"},{"Id":"525334146","IsPullRequest":true,"CreatedAt":"2019-11-20T01:36:29","Actor":"wli3","Number":"13091","RawContent":null,"Title":"Merge 535180a8c to release/2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13091","RelatedDescription":"Closed or merged PR \"Merge 535180a8c to release/2.1.5xx\" (#13091)"},{"Id":"525333251","IsPullRequest":true,"CreatedAt":"2019-11-20T00:35:20","Actor":"wli3","Number":"13090","RawContent":null,"Title":"Merge 37a6c12733d87 to release/2.2.2xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13090","RelatedDescription":"Closed or merged PR \"Merge 37a6c12733d87 to release/2.2.2xx\" (#13090)"},{"Id":"525314072","IsPullRequest":true,"CreatedAt":"2019-11-19T23:57:11","Actor":"wli3","Number":"13089","RawContent":null,"Title":"Merge 4797dab into release/2.2.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13089","RelatedDescription":"Closed or merged PR \"Merge 4797dab into release/2.2.1xx\" (#13089)"},{"Id":"525173317","IsPullRequest":true,"CreatedAt":"2019-11-19T18:35:30","Actor":"dotnet-maestro[bot]","Number":"13088","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191119.3\r\n- **Date Produced**: 11/19/2019 5:22 PM\r\n- **Commit**: 7891c8318f1026deb1c96054eebead058bb4f50f\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.2-servicing.19569.3\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13088","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#13088)"},{"Id":"525166027","IsPullRequest":true,"CreatedAt":"2019-11-19T17:50:35","Actor":"dotnet-maestro-bot","Number":"13087","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13087","RelatedDescription":"Open PR \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13087)"},{"Id":"525165930","IsPullRequest":true,"CreatedAt":"2019-11-19T17:50:24","Actor":"dotnet-maestro-bot","Number":"13086","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13086","RelatedDescription":"Open PR \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13086)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"527469491","IsPullRequest":true,"CreatedAt":"2019-11-23T01:19:55","Actor":"dotnet-maestro[bot]","Number":"1658","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1658","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1658)"},{"Id":"526765953","IsPullRequest":false,"CreatedAt":"2019-11-21T18:26:21","Actor":"arizvisa","Number":"1657","RawContent":null,"Title":"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed","State":"open","Body":"Hey guys, the signature check for this package seems to be failing. Not sure what that actually means, but here's the checksum as of 2019/11/21 12:23 (CST).\r\n\r\n```\r\n# fetch https://packages.microsoft.com/fedora/30/prod/netstandard-targeting-pack-2.1.0-x64.rpm\r\nnetstandard-targeting-pack-2.1.0-x64.rpm 100% 2201944 2201944\r\n# openssl dgst -sha256 netstandard-targeting-pack-2.1.0-x64.rpm \r\nSHA256(netstandard-targeting-pack-2.1.0-x64.rpm)= 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480\r\n```\r\n\r\nThen with dnf actually complaining about it.\r\n```\r\n# dnf repository-packages packages-microsoft-com-prod install netstandard-targeting-pack-2.1                                                                                 \r\nenabling fedora-modular-debuginfo repository                                                                  \r\nenabling updates-modular-debuginfo repository       \r\nenabling updates-debuginfo repository                                                                         \r\nenabling fedora-debuginfo repository\r\nenabling rpmfusion-free-updates-debuginfo repository\r\nenabling rpmfusion-free-debuginfo repository                                                                  \r\nLast metadata expiration check: 0:13:30 ago on Thu 21 Nov 2019 12:03:15 PM CST.\r\nDependencies resolved.     \r\n==============================================================================================================\r\n Package                               Architecture  Version         Repository                          Size \r\n==============================================================================================================\r\nInstalling:\r\n netstandard-targeting-pack-2.1        x86_64        2.1.0-1         packages-microsoft-com-prod        2.1 M\r\n\r\nTransaction Summary\r\n==============================================================================================================\r\nInstall  1 Package\r\n\r\nTotal download size: 2.1 M\r\nInstalled size: 2.1 M\r\nIs this ok [y/N]: y\r\nDownloading Packages:\r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[FAILED] netstandard-targeting-pack-2.1.0-x64.rpm: No more mirrors to try - All mirrors were already tried without success\r\n```\r\n\r\nHopefully this doesn't entail the need for ir. Heh.","Url":"https://github.com/dotnet/standard/issues/1657","RelatedDescription":"Open issue \"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed\" (#1657)"},{"Id":"526119676","IsPullRequest":true,"CreatedAt":"2019-11-20T20:02:50","Actor":"dotnet-maestro[bot]","Number":"1656","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656)"},{"Id":"523456559","IsPullRequest":false,"CreatedAt":"2019-11-19T23:58:30","Actor":"SetTrend","Number":"1655","RawContent":null,"Title":"Change .NET Framework in version table from 4.6.1 to 4.7.1","State":"closed","Body":"Currently, the [.NET Standard version table](/dotnet/standard/blob/master/docs/versions.md) shows `.NET Framework 4.6.1` to be compatible with `.NET Standard >= 1.5`.\r\n\r\nHowever, a footnote clarifies that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nMoreover, many issues on [StackOverflow.com](https://stackoverflow.com/questions/49925484/you-must-add-a-reference-to-assembly-netstandard-version-2-0-0-0) and [GitHub](542) give evidence that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nWouldn't it be wise then to update above version table to provide **_true_** information than just spout some wannabe information?","Url":"https://github.com/dotnet/standard/issues/1655","RelatedDescription":"Closed issue \"Change .NET Framework in version table from 4.6.1 to 4.7.1\" (#1655)"},{"Id":"523175041","IsPullRequest":false,"CreatedAt":"2019-11-15T00:02:51","Actor":"replaysMike","Number":"1654","RawContent":null,"Title":"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator","State":"open","Body":"I'm trying to use certificate based authentication using HttpClient in .Net Standard 2.0. However, I've noticed TLS negotiation doesn't succeed unless running the application in Administrator mode.\r\n\r\n```\r\nvar requestMessage = new HttpRequestMessage() {\r\n    RequestUri = new Uri(new Uri(_configuration.Endpoint), \"someendpoint\"),\r\n    Method = HttpMethod.Get\r\n};\r\nvar handler = new HttpClientHandler {\r\n    ClientCertificateOptions = ClientCertificateOption.Manual,\r\n    SslProtocols = SslProtocols.Tls12,\r\n};          \r\nhandler.ClientCertificates.Add(certificate);\r\nhandler.CheckCertificateRevocationList = false;\r\n// this is required to get around untrusted self-signed certs\r\nhandler.ServerCertificateCustomValidationCallback = (httpRequestMessage, cert, cetChain, policyErrors) => true;\r\nvar client = new HttpClient(handler);\r\nrequestMessage.Headers.Add(\"X-ARR-ClientCert\", certificate.GetRawCertDataString());\r\nvar response = await client.SendAsync(requestMessage);\r\n```\r\nThe client certificate is valid and installed in the local computer `My` store.\r\n\r\nWithout Administrator privileges a generic error is thrown: `The request was aborted: Could not create SSL/TLS secure channel` when not Administrator.\r\n\r\nAnyone have a clue as to why?","Url":"https://github.com/dotnet/standard/issues/1654","RelatedDescription":"Open issue \"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator\" (#1654)"},{"Id":"522886300","IsPullRequest":false,"CreatedAt":"2019-11-14T14:14:42","Actor":"tndata","Number":"1653","RawContent":null,"Title":"Broken link","State":"open","Body":"\r\nI found a broken link in this sentence:\r\n\r\nThe plan for handling .NET Framework 4.6.1 and .NET Standard 2.0 is outlined in the **spec**.\r\n\r\nOn this page \r\nhttps://github.com/dotnet/standard/blob/master/docs/faq.md\r\n","Url":"https://github.com/dotnet/standard/issues/1653","RelatedDescription":"Open issue \"Broken link\" (#1653)"},{"Id":"522854157","IsPullRequest":true,"CreatedAt":"2019-11-14T13:46:23","Actor":"dotnet-maestro[bot]","Number":"1652","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 7:13 AM\r\n- **Commit**: 5cee7c97d602f294e27c582d4dab81ec388f1d7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1652)"},{"Id":"522220691","IsPullRequest":true,"CreatedAt":"2019-11-13T13:59:11","Actor":"dotnet-maestro[bot]","Number":"1651","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.8\r\n- **Date Produced**: 11/13/2019 9:07 AM\r\n- **Commit**: a528006b4536e5b73227285b57d2a56116532506\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1651","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1651)"},{"Id":"522208590","IsPullRequest":true,"CreatedAt":"2019-11-13T13:01:39","Actor":"dotnet-maestro[bot]","Number":"1650","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191121.10\r\n- **Date Produced**: 11/22/2019 3:08 AM\r\n- **Commit**: 6ade65ab9d2d63b3fcb73647fc109e2b36ffdc80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19571.10\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1650","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1650)"},{"Id":"521547575","IsPullRequest":true,"CreatedAt":"2019-11-12T14:07:43","Actor":"dotnet-maestro[bot]","Number":"1649","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.1\r\n- **Date Produced**: 11/12/2019 10:06 AM\r\n- **Commit**: 21278249c6b417469737b20445a0dd045cd1b16e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1649","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1649)"},{"Id":"520598776","IsPullRequest":true,"CreatedAt":"2019-11-10T13:31:00","Actor":"dotnet-maestro[bot]","Number":"1648","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.6\r\n- **Date Produced**: 11/10/2019 6:07 AM\r\n- **Commit**: bc115700c3ece60acd6b8dbe4b0bdb8f6f80c756\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1648","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1648)"},{"Id":"520424908","IsPullRequest":true,"CreatedAt":"2019-11-09T14:01:26","Actor":"dotnet-maestro[bot]","Number":"1647","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.1\r\n- **Date Produced**: 11/9/2019 9:20 AM\r\n- **Commit**: f546aa9e76c776f2c27e30dfb91c50d8f62da2f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1647","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1647)"},{"Id":"520010128","IsPullRequest":true,"CreatedAt":"2019-11-08T13:28:42","Actor":"dotnet-maestro[bot]","Number":"1646","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191107.22\r\n- **Date Produced**: 11/8/2019 8:30 AM\r\n- **Commit**: 7a318879f787e9feee9266fe9e876ee2411b548f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19557.22\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1646","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1646)"},{"Id":"519262813","IsPullRequest":true,"CreatedAt":"2019-11-07T13:26:42","Actor":"dotnet-maestro[bot]","Number":"1645","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191106.12\r\n- **Date Produced**: 11/7/2019 8:14 AM\r\n- **Commit**: a4f04476ea74c61a52168cf0b31c0281822ecad3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19556.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1645","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1645)"},{"Id":"518467413","IsPullRequest":true,"CreatedAt":"2019-11-06T13:31:10","Actor":"dotnet-maestro[bot]","Number":"1644","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191105.8\r\n- **Date Produced**: 11/6/2019 9:54 AM\r\n- **Commit**: 9e94e2552ad869005f30f6a59eb638c544d3efdd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19555.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1644","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1644)"},{"Id":"518175351","IsPullRequest":false,"CreatedAt":"2019-11-06T01:11:51","Actor":"tchitnis","Number":"1643","RawContent":null,"Title":"Debug.Assert causing entire test run to be aborted","State":"open","Body":"Similar to the issues reported here:\r\n\r\nhttps://github.com/Microsoft/vstest/issues/1022\r\nhttps://github.com/dotnet/coreclr/issues/22569\r\n\r\nI still see the same error/issue on .net standard 2.0 with MSTest. Sounds like it was fixed with .Net Core 3.0, can someone comment on whether a similar fix was applied to .Net Standard as well?","Url":"https://github.com/dotnet/standard/issues/1643","RelatedDescription":"Open issue \"Debug.Assert causing entire test run to be aborted\" (#1643)"},{"Id":"517769508","IsPullRequest":true,"CreatedAt":"2019-11-05T13:42:32","Actor":"dotnet-maestro[bot]","Number":"1642","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191104.10\r\n- **Date Produced**: 11/5/2019 7:44 AM\r\n- **Commit**: ee038925bde85c1c45c52f235ab09ea03b9c126c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19554.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1642","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1642)"},{"Id":"517192004","IsPullRequest":false,"CreatedAt":"2019-11-04T14:33:56","Actor":"peni4142","Number":"1641","RawContent":null,"Title":"Regex Bug","State":"open","Body":"Hi guys,\r\nI have a test for you\r\n\r\n[x] Bug Report\r\n\r\nThe following regex test will return an empty string in the group[0], which in my opinion can't be true.\r\n\r\n\r\n```C#\r\n        [TestMethod()]\r\n        public void BugTest()\r\n        {\r\n            Match matchEnsureObject = new Regex(\"^\\\\[MERGE-CMD: ENSURE OBJECT\\\\(([^)]+)\\\\)\\\\]$\").Match(\"[MERGE-CMD: ENSURE OBJECT(aLong) AT 1]\");\r\n            if(matchEnsureObject.Groups[0].Value == \"\")\r\n            {\r\n                throw new Exception(\"Match can't be an empty value\");\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/standard/issues/1641","RelatedDescription":"Open issue \"Regex Bug\" (#1641)"},{"Id":"517142571","IsPullRequest":true,"CreatedAt":"2019-11-04T13:21:47","Actor":"dotnet-maestro[bot]","Number":"1640","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1640","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1640)"},{"Id":"516826733","IsPullRequest":true,"CreatedAt":"2019-11-03T13:44:18","Actor":"dotnet-maestro[bot]","Number":"1639","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191102.6\r\n- **Date Produced**: 11/3/2019 4:48 AM\r\n- **Commit**: bfaed4d48a921a339f9691c74425bec9d2f760a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19552.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1639","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1639)"},{"Id":"516615712","IsPullRequest":false,"CreatedAt":"2019-11-02T14:52:31","Actor":"bernd5","Number":"1638","RawContent":null,"Title":"_dummy and _dummyPrimitive in System.Span","State":"closed","Body":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?","Url":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Closed issue \"_dummy and _dummyPrimitive in System.Span\" (#1638)"},{"Id":"516573954","IsPullRequest":true,"CreatedAt":"2019-11-02T12:25:00","Actor":"dotnet-maestro[bot]","Number":"1637","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1637","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1637)"},{"Id":"516079198","IsPullRequest":true,"CreatedAt":"2019-11-01T12:30:54","Actor":"dotnet-maestro[bot]","Number":"1636","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.13\r\n- **Date Produced**: 11/1/2019 5:06 AM\r\n- **Commit**: a24db0ba5666f46f50649810fe698ad267b60331\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1636","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1636)"},{"Id":"515387745","IsPullRequest":true,"CreatedAt":"2019-10-31T12:31:11","Actor":"dotnet-maestro[bot]","Number":"1635","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1635)"},{"Id":"514625134","IsPullRequest":true,"CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Number":"1634","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1634)"},{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"},{"Id":"512958771","IsPullRequest":true,"CreatedAt":"2019-10-27T12:45:49","Actor":"dotnet-maestro[bot]","Number":"1630","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1630)"},{"Id":"512829066","IsPullRequest":true,"CreatedAt":"2019-10-26T12:30:59","Actor":"dotnet-maestro[bot]","Number":"1629","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/26/2019 7:24 AM\r\n- **Commit**: 8245ee1e8f6063ccc7a3a60cafe821d29e85b02f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19525.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1629","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1629)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"527487830","IsPullRequest":false,"CreatedAt":"2019-11-23T04:00:54","Actor":"nhuthan","Number":"42692","RawContent":null,"Title":"Json Deserialize issue with class has \"new modifier\" property","State":"closed","Body":"Here is simple code:\r\n```\r\npublic class Program\r\n{\r\n\tpublic static void Main()\r\n\t{\r\n\t\tvar str = \"{\\\"P1\\\": 123}\";\r\n\t\tvar obj = JsonSerializer.Deserialize<B>(str);\t//--> throw\r\n\t\t\r\n\t}\r\n}\r\n\r\npublic class A{\r\n\tpublic int P1{get;set;}\t\r\n\tpublic int P2{get;set;}\r\n}\r\n\r\npublic class B: A{\r\n\tpublic new float P1{get;set;}\r\n}\r\n```\r\nAnd I got an error:\r\n```\r\nUnhandled exception. System.InvalidOperationException: The JSON property name for 'B.P1' collides with another property.\r\n   at System.Text.Json.ThrowHelper.ThrowInvalidOperationException_SerializerPropertyNameConflict(JsonClassInfo jsonClassInfo, JsonPropertyInfo jsonPropertyInfo)\r\n   at System.Text.Json.JsonClassInfo..ctor(Type type, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializerOptions.GetOrAddClass(Type classType)\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.ParseCore(String json, Type returnType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonSerializerOptions options)\r\n   at Program.Main()\r\nCommand terminated by signal 6\r\n```","Url":"https://github.com/dotnet/corefx/issues/42692","RelatedDescription":"Closed issue \"Json Deserialize issue with class has \"new modifier\" property\" (#42692)"},{"Id":"527503474","IsPullRequest":false,"CreatedAt":"2019-11-23T03:32:20","Actor":"FolkCoder","Number":"42693","RawContent":null,"Title":"JsonSerializer throws InvalidCastException","State":"open","Body":"Using .NET Core 3.0 or 3.1.100-preview3-014645, an `ICollection<string>` property with a private backing field assigned a custom implementation fails to serialize. \r\n\r\n```\r\n    public class Client\r\n    {\r\n        private ICollection<string> _allowedGrantTypes = new GrantTypeValidatingHashSet();\r\n\r\n        // this works \r\n        // public GrantTypeValidatingHashSet AllowedGrantTypes { get; set; }\r\n\r\n        // this works \r\n        // public ICollection<string> AllowedGrantTypes { get; set; } = new GrantTypeValidatingHashSet();\r\n\r\n        // this errors\r\n        public ICollection<string> AllowedGrantTypes\r\n        {\r\n            get { return _allowedGrantTypes; }\r\n            set\r\n            {\r\n                _allowedGrantTypes = new GrantTypeValidatingHashSet();\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n#### Error message\r\n```\r\nSystem.InvalidCastException: 'Unable to cast object of type 'SerializationSample.GrantTypeValidatingHashSet' to type 'System.Collections.Generic.IList`1[System.String]'.'\r\n```\r\n\r\n#### Stack trace\r\n```\r\nat System.Text.Json.JsonSerializer.ApplyValueToEnumerable[TProperty](TProperty& value, ReadStack& state)\r\n   at System.Text.Json.JsonPropertyInfoNotNullable`4.OnReadEnumerable(ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonPropertyInfo.ReadEnumerable(JsonTokenType tokenType, ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonPropertyInfo.Read(JsonTokenType tokenType, ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& readStack)\r\n   at System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\n   at System.Text.Json.JsonSerializer.Deserialize(String json, Type returnType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonSerializer.Deserialize[TValue](String json, JsonSerializerOptions options)\r\n   at SerializationSample.Program.Main() in C:\\SerializationSample\\SerializationSample\\Program.cs:line 13\r\n```\r\n\r\nThis was discovered while attempting to serialize a `Client` model from [IdentityServer4](https://github.com/IdentityServer/IdentityServer4/blob/master/src/Storage/src/Models/Client.cs). I've created a [bare-bones project](https://github.com/FolkCoder/SerializationSample/tree/master) duplicating the error. Serialization occurs correctly with Newtonsoft.Json.","Url":"https://github.com/dotnet/corefx/issues/42693","RelatedDescription":"Open issue \"JsonSerializer throws InvalidCastException\" (#42693)"},{"Id":"526426643","IsPullRequest":true,"CreatedAt":"2019-11-23T02:54:35","Actor":"dotnet-maestro[bot]","Number":"42663","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 10:35 PM\r\n- **Commit**: 016d9d67a7be81c68c6d870b7e7de31c4b4fb468\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-rtm.19572.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-rtm.19572.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-rtm.19572.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42663","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42663)"},{"Id":"527479227","IsPullRequest":true,"CreatedAt":"2019-11-23T00:36:46","Actor":"dotnet-maestro[bot]","Number":"42691","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19572.3\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19572.3\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42691","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42691)"},{"Id":"527472956","IsPullRequest":true,"CreatedAt":"2019-11-23T00:10:29","Actor":"dotnet-maestro-bot","Number":"42690","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42690","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#42690)"},{"Id":"527468053","IsPullRequest":true,"CreatedAt":"2019-11-22T23:48:57","Actor":"dotnet-maestro[bot]","Number":"42689","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19572.3\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19572.3\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42689","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#42689)"},{"Id":"527457520","IsPullRequest":false,"CreatedAt":"2019-11-22T23:10:54","Actor":"mkArtakMSFT","Number":"42688","RawContent":null,"Title":"Blazor - Add JsonSerializerOptions as parameter to HttpClient.GetJsonAsync<T>  ","State":"open","Body":"_From @GoranHalvarsson on Sunday, June 16, 2019 7:49:28 PM_\r\n\r\nI suggest you add JsonSerializerOptions as a parameter(could be optional) to the HttpClient.GetJsonAsync<T> method. For the deserialization of json you are using `JsonSerializer.Parse<T>(await httpClient.GetStringAsync(requestUri), JsonSerializerOptionsProvider.Options)`. \r\n\r\nThe  parameter `JsonSerializerOptionsProvider.Options`  should be accessible.\r\n\r\nThis should probably be added to all extension methods in `Microsoft.AspNetCore.Components.HttpClientJsonExtensions`\r\n\r\n_Copied from original issue: aspnet/AspNetCore#11266_","Url":"https://github.com/dotnet/corefx/issues/42688","RelatedDescription":"Open issue \"Blazor - Add JsonSerializerOptions as parameter to HttpClient.GetJsonAsync<T>  \" (#42688)"},{"Id":"527457252","IsPullRequest":false,"CreatedAt":"2019-11-22T23:09:53","Actor":"mkArtakMSFT","Number":"42687","RawContent":null,"Title":"HttpClientJsonExtensions should be able to notify callers about responses from the server that can't be serialized to type T","State":"open","Body":"_From @BenjaminCharlton on Sunday, June 30, 2019 3:16:27 PM_\r\n\r\n### Is your feature request related to a problem? Please describe.\r\n\r\nThere are some very useful extension methods for the `System.Net.Http.HttpClient` found in `Microsoft.AspNetCore.Components.HttpClientJsonExtensions`. These are used extensively in Blazor apps but are also useful in Console and Windows Forms apps, in fact, any app that interacts with a remote server.\r\n\r\nHowever, with a small change, they could be more useful. They're a bit of a mysterious black-box at the moment. If you don't can't serialize the response from the server into the JSON type T passed as a parameter, it's hard for a client to know what went wrong. It would be much nicer if I could pass an optional delegate (or `Func`, or `Action`) to these methods to say what I'd like to do with the response if it can't be serialized to type `T`. If that delegate could take, as a parameter, the entire `HttpResponseMessage` object, it would have everything it needed to process the unexpected response gracefully.\r\n\r\n### Describe the solution you'd like\r\n\r\nI think that this, below, or something like it, would work nicely and not break anything.\r\nAmend the class in the file `AspNetCore/src/Components/Components/src/HttpClientJsonExtensions.cs` to read:\r\n\r\n```\r\npublic static class HttpClientJsonExtensions\r\n    {\r\n        /// <summary>\r\n        /// Sends a GET request to the specified URI, and parses the JSON response body\r\n        /// to create an object of the generic type.\r\n        /// </summary>\r\n        /// <typeparam name=\"T\">A type into which the response body can be JSON-deserialized.</typeparam>\r\n        /// <param name=\"httpClient\">The <see cref=\"HttpClient\"/>.</param>\r\n        /// <param name=\"requestUri\">The URI that the request will be sent to.</param>\r\n        /// <param name=\"actionOnFailure\">An action to be executed if the response from the server cannot be\r\n        /// serialized into the expected type <typeparamref name=\"T\"/></param>\r\n        /// <returns>The response parsed as an object of the generic type.</returns>\r\n        public static async Task<T> GetJsonAsync<T>(this HttpClient httpClient, string requestUri, Action<string> actionOnFailure = null)\r\n        {\r\n            var stringContent = await httpClient.GetStringAsync(requestUri);\r\n            T result = default;\r\n\r\n            try\r\n            {\r\n                result = JsonSerializer.Deserialize<T>(stringContent, JsonSerializerOptionsProvider.Options);\r\n            }\r\n            catch\r\n            {\r\n                if (actionOnFailure != null)\r\n                {\r\n                    actionOnFailure.Invoke(stringContent);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        /// <summary>\r\n        /// Sends a POST request to the specified URI, including the specified <paramref name=\"content\"/>\r\n        /// in JSON-encoded format, and parses the JSON response body to create an object of the generic type.\r\n        /// </summary>\r\n        /// <param name=\"httpClient\">The <see cref=\"HttpClient\"/>.</param>\r\n        /// <param name=\"requestUri\">The URI that the request will be sent to.</param>\r\n        /// <param name=\"content\">Content for the request body. This will be JSON-encoded and sent as a string.</param>\r\n        /// <param name=\"actionOnFailure\">An action to be executed if the response from the server cannot be\r\n        /// serialized into the expected type <typeparamref name=\"T\"/></param>\r\n        /// <returns>The response parsed as an object of the generic type.</returns>\r\n        public static Task PostJsonAsync(this HttpClient httpClient,\r\n            string requestUri, \r\n            object content,\r\n            Action<HttpResponseMessage> actionOnFailure = null)\r\n            => httpClient.SendJsonAsync(HttpMethod.Post, requestUri, content);\r\n\r\n        /// <summary>\r\n        /// Sends a POST request to the specified URI, including the specified <paramref name=\"content\"/>\r\n        /// in JSON-encoded format, and parses the JSON response body to create an object of the generic type.\r\n        /// </summary>\r\n        /// <typeparam name=\"T\">A type into which the response body can be JSON-deserialized.</typeparam>\r\n        /// <param name=\"httpClient\">The <see cref=\"HttpClient\"/>.</param>\r\n        /// <param name=\"requestUri\">The URI that the request will be sent to.</param>\r\n        /// <param name=\"content\">Content for the request body. This will be JSON-encoded and sent as a string.</param>\r\n        /// <param name=\"actionOnFailure\">An action to be executed if the response from the server cannot be\r\n        /// serialized into the expected type <typeparamref name=\"T\"/></param>\r\n        /// <returns>The response parsed as an object of the generic type.</returns>\r\n        public static Task<T> PostJsonAsync<T>(this HttpClient httpClient,\r\n            string requestUri, \r\n            object content, \r\n            Action<HttpResponseMessage> actionOnFailure = null)\r\n            => httpClient.SendJsonAsync<T>(HttpMethod.Post, requestUri, content, actionOnFailure);\r\n\r\n        /// <summary>\r\n        /// Sends a PUT request to the specified URI, including the specified <paramref name=\"content\"/>\r\n        /// in JSON-encoded format.\r\n        /// </summary>\r\n        /// <param name=\"httpClient\">The <see cref=\"HttpClient\"/>.</param>\r\n        /// <param name=\"requestUri\">The URI that the request will be sent to.</param>\r\n        /// <param name=\"content\">Content for the request body. This will be JSON-encoded and sent as a string.</param>\r\n        /// <param name=\"actionOnFailure\">An action to be executed if the response from the server cannot be\r\n        /// serialized into the expected type <typeparamref name=\"T\"/></param>\r\n        public static Task PutJsonAsync(this HttpClient httpClient, \r\n            string requestUri,\r\n            object content,\r\n            Action<HttpResponseMessage> actionOnFailure = null)\r\n            => httpClient.SendJsonAsync(HttpMethod.Put, requestUri, content, actionOnFailure);\r\n\r\n        /// <summary>\r\n        /// Sends a PUT request to the specified URI, including the specified <paramref name=\"content\"/>\r\n        /// in JSON-encoded format, and parses the JSON response body to create an object of the generic type.\r\n        /// </summary>\r\n        /// <typeparam name=\"T\">A type into which the response body can be JSON-deserialized.</typeparam>\r\n        /// <param name=\"httpClient\">The <see cref=\"HttpClient\"/>.</param>\r\n        /// <param name=\"requestUri\">The URI that the request will be sent to.</param>\r\n        /// <param name=\"content\">Content for the request body. This will be JSON-encoded and sent as a string.</param>\r\n        /// <param name=\"actionOnFailure\">An action to be executed if the response from the server cannot be\r\n        /// serialized into the expected type <typeparamref name=\"T\"/></param>\r\n        /// <returns>The response parsed as an object of the generic type.</returns>\r\n        public static Task<T> PutJsonAsync<T>(this HttpClient httpClient,\r\n            string requestUri, \r\n            object content,\r\n            Action<HttpResponseMessage> actionOnFailure = null)\r\n            => httpClient.SendJsonAsync<T>(HttpMethod.Put, requestUri, content, actionOnFailure);\r\n\r\n        /// <summary>\r\n        /// Sends an HTTP request to the specified URI, including the specified <paramref name=\"content\"/>\r\n        /// in JSON-encoded format.\r\n        /// </summary>\r\n        /// <param name=\"httpClient\">The <see cref=\"HttpClient\"/>.</param>\r\n        /// <param name=\"method\">The HTTP method.</param>\r\n        /// <param name=\"requestUri\">The URI that the request will be sent to.</param>\r\n        /// <param name=\"actionOnFailure\">An action to be executed if the response from the server cannot be\r\n        /// serialized into the expected type <typeparamref name=\"T\"/></param>\r\n        /// <param name=\"content\">Content for the request body. This will be JSON-encoded and sent as a string.</param>\r\n        public static Task SendJsonAsync(this HttpClient httpClient,\r\n            HttpMethod method, \r\n            string requestUri,\r\n            object content,\r\n            Action<HttpResponseMessage> actionOnFailure = null)\r\n            => httpClient.SendJsonAsync<IgnoreResponse>(method, requestUri, content, actionOnFailure);\r\n\r\n        /// <summary>\r\n        /// Sends an HTTP request to the specified URI, including the specified <paramref name=\"content\"/>\r\n        /// in JSON-encoded format, and parses the JSON response body to create an object of the generic type.\r\n        /// </summary>\r\n        /// <typeparam name=\"T\">A type into which the response body can be JSON-deserialized.</typeparam>\r\n        /// <param name=\"httpClient\">The <see cref=\"HttpClient\"/>.</param>\r\n        /// <param name=\"method\">The HTTP method.</param>\r\n        /// <param name=\"requestUri\">The URI that the request will be sent to.</param>\r\n        /// <param name=\"content\">Content for the request body. This will be JSON-encoded and sent as a string.</param>\r\n        /// <param name=\"actionOnFailure\">An action to be executed if the response from the server cannot be\r\n        /// serialized into the expected type <typeparamref name=\"T\"/></param>\r\n        /// <returns>The response parsed as an object of the generic type.</returns>\r\n        public static async Task<T> SendJsonAsync<T>(this HttpClient httpClient, \r\n            HttpMethod method, \r\n            string requestUri,\r\n            object content,\r\n            Action<HttpResponseMessage> actionOnFailure = null)\r\n        {\r\n            var requestJson = JsonSerializer.Serialize(content, JsonSerializerOptionsProvider.Options);\r\n\r\n            var response = await httpClient.SendAsync(new HttpRequestMessage(method, requestUri)\r\n            {\r\n                Content = new StringContent(requestJson, Encoding.UTF8, \"application/json\")\r\n            });\r\n\r\n            if (actionOnFailure is null)\r\n            {\r\n                // Make sure the call was successful before we\r\n                // attempt to process the response content\r\n                response.EnsureSuccessStatusCode();\r\n            }\r\n\r\n            if (typeof(T) == typeof(IgnoreResponse))\r\n            {\r\n                return default;\r\n            }\r\n            else\r\n            {\r\n                var stringContent = await response.Content.ReadAsStringAsync();\r\n\r\n                try\r\n                {\r\n                    return JsonSerializer.Deserialize<T>(stringContent, JsonSerializerOptionsProvider.Options);\r\n                }\r\n                catch\r\n                {\r\n                    actionOnFailure.Invoke(response);\r\n                    return default;\r\n                }\r\n            }\r\n        }\r\n\r\n        private class IgnoreResponse { }\r\n    }\r\n```\r\n\r\n\r\n### Additional context\r\n\r\nTo use this new feature, we can now say:\r\n\r\n\r\n```\r\nvar client = new HttpClient();\r\nclient.PostJsonAsync<Book>(\r\n            \"http://bookwebsite.com/api/getbook\", \r\n            request,\r\n            SomethingToDoWhenItDoesntWork)\r\n\r\nprivate void SomethingToDoWhenItDoesntWork(HttpResponseMessage response)\r\n{\r\n// We can read the response from the server here, log it or do something else with it.\r\n}\r\n```\r\n\r\n\r\n\r\n_Copied from original issue: aspnet/AspNetCore#11725_","Url":"https://github.com/dotnet/corefx/issues/42687","RelatedDescription":"Open issue \"HttpClientJsonExtensions should be able to notify callers about responses from the server that can't be serialized to type T\" (#42687)"},{"Id":"527349825","IsPullRequest":true,"CreatedAt":"2019-11-22T22:48:14","Actor":"Anipik","Number":"42679","RawContent":null,"Title":"branding changes for 3.1 servicing","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42679","RelatedDescription":"Closed or merged PR \"branding changes for 3.1 servicing\" (#42679)"},{"Id":"527450642","IsPullRequest":false,"CreatedAt":"2019-11-22T22:47:30","Actor":"GrabYourPitchforks","Number":"42686","RawContent":null,"Title":"Add ISO-8859-1 accessor to the Encoding class","State":"open","Body":"The ISO-8859-1 encoding is used somewhat commonly in web scenarios since it's the encoding normally specified for headers. We should consider having a fast-access property for this encoding just like we have for `Encoding.UTF8`.\r\n\r\nThe workaround for now is to use `Encoding.GetEncoding(\"iso-8859-1\", ...)`, which works but is not convenient or optimized.\r\n\r\n/cc @davidfowl ","Url":"https://github.com/dotnet/corefx/issues/42686","RelatedDescription":"Open issue \"Add ISO-8859-1 accessor to the Encoding class\" (#42686)"},{"Id":"527441915","IsPullRequest":true,"CreatedAt":"2019-11-22T22:26:24","Actor":"dotnet-maestro-bot","Number":"42685","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42685","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#42685)"},{"Id":"527425623","IsPullRequest":false,"CreatedAt":"2019-11-22T21:34:25","Actor":"krwq","Number":"42684","RawContent":null,"Title":"Support Rfc3279 signature format for DSA and EcDSA","State":"open","Body":"When DSA/EcDSA API was defined the specs did not clarify how signature should look like - current version of our API returns a concatenation of R and S (also known as IEEEP1363). Multiple specs call out to use ASN.1 encoded signature as described in Rfc3279 (DER sequence of R and S). The same format is also returned internally by OpenSSL (we internally convert it to IEEEP1363). Proposed APIs are meant to bridge the gap between two worlds and make it much easier to use those APIs in various contexts.\r\n\r\n```csharp\r\nnamespace System.Security.Cryptography {\r\n\r\npublic enum DSASignatureFormat\r\n{\r\n    IeeeP1363FixedFieldConcatenation,\r\n    Rfc3279DerSequence\r\n}\r\n\r\npublic abstract partial class DSA : System.Security.Cryptography.AsymmetricAlgorithm\r\n{\r\n    public byte[] SignData(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual byte[] SignDataCore(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public byte[] SignData(byte[] data, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public byte[] SignData(Stream data, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual byte[] SignDataCore(Stream data, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool TrySignData(ReadOnlySpan<byte> data, Span<byte> destination, HashAlgorithmName hashAlgorithm, out int bytesWritten, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool TrySignDataCore(ReadOnlySpan<byte> data, Span<byte> destination, HashAlgorithmName hashAlgorithm, out int bytesWritten, DSASignatureFormat signatureFormat) { throw null; }\r\n\r\n    public byte[] CreateSignature(byte[] rgbHash, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual byte[] CreateSignatureCore(byte[] rgbHash, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool TryCreateSignature(ReadOnlySpan<byte> hash, Span<byte> destination, out int bytesWritten, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool TryCreateSignatureCore(ReadOnlySpan<byte> hash, Span<byte> destination, out int bytesWritten, DSASignatureFormat signatureFormat) { throw null; }\r\n\r\n    public bool VerifyData(byte[] data, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool VerifyData(byte[] data, int offset, int count, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifyDataCore(byte[] data, int offset, int count, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool VerifyData(Stream data, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifyDataCore(Stream data, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool VerifyData(ReadOnlySpan<byte> data, ReadOnlySpan<byte> signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifyDataCore(ReadOnlySpan<byte> data, ReadOnlySpan<byte> signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n\r\n    public bool VerifySignature(byte[] rgbHash, byte[] rgbSignature, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifySignatureCore(byte[] rgbHash, byte[] rgbSignature, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool VerifySignature(ReadOnlySpan<byte> hash, ReadOnlySpan<byte> signature, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifySignatureCore(ReadOnlySpan<byte> hash, ReadOnlySpan<byte> signature, DSASignatureFormat signatureFormat) { throw null; }\r\n}\r\n\r\npublic partial class DSASignatureDeformatter : System.Security.Cryptography.AsymmetricSignatureDeformatter\r\n{\r\n    public bool VerifySignature(byte[] rgbHash, byte[] rgbSignature, DSASignatureFormat signatureFormat) { throw null; }\r\n}\r\n\r\npublic partial class DSASignatureFormatter : System.Security.Cryptography.AsymmetricSignatureFormatter\r\n{\r\n    public byte[] CreateSignature(byte[] rgbHash, DSASignatureFormat signatureFormat) { throw null; }\r\n}\r\n\r\npublic abstract partial class ECDsa : System.Security.Cryptography.AsymmetricAlgorithm\r\n{\r\n    public byte[] SignData(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual byte[] SignDataCore(byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public byte[] SignData(byte[] data, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual byte[] SignDataCore(byte[] data, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public byte[] SignData(Stream data, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual byte[] SignDataCore(Stream data, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool TrySignData(ReadOnlySpan<byte> data, Span<byte> destination, HashAlgorithmName hashAlgorithm, out int bytesWritten, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected bool TrySignDataCore(ReadOnlySpan<byte> data, Span<byte> destination, HashAlgorithmName hashAlgorithm, out int bytesWritten, DSASignatureFormat signatureFormat) { throw null; }\r\n\r\n    public byte[] SignHash(byte[] hash, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual byte[] SignHashCore(byte[] hash, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool TrySignHash(ReadOnlySpan<byte> hash, Span<byte> destination, out int bytesWritten, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected bool TrySignHashCore(ReadOnlySpan<byte> hash, Span<byte> destination, out int bytesWritten, DSASignatureFormat signatureFormat) { throw null; }\r\n\r\n    public bool VerifyData(byte[] data, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool VerifyData(byte[] data, int offset, int count, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifyDataCore(byte[] data, int offset, int count, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool VerifyData(Stream data, byte[] signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool VerifyData(ReadOnlySpan<byte> data, ReadOnlySpan<byte> signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifyDataCore(ReadOnlySpan<byte> data, ReadOnlySpan<byte> signature, HashAlgorithmName hashAlgorithm, DSASignatureFormat signatureFormat) { throw null; }\r\n\r\n    public bool VerifyHash(byte[] hash, byte[] signature, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifyHashCore(byte[] hash, byte[] signature, DSASignatureFormat signatureFormat) { throw null; }\r\n    public bool VerifyHash(ReadOnlySpan<byte> hash, ReadOnlySpan<byte> signature, DSASignatureFormat signatureFormat) { throw null; }\r\n    protected virtual bool VerifyHashCore(ReadOnlySpan<byte> hash, ReadOnlySpan<byte> signature, DSASignatureFormat signatureFormat) { throw null; }\r\n}\r\n}\r\n```\r\n\r\ncc: @bartonjs","Url":"https://github.com/dotnet/corefx/issues/42684","RelatedDescription":"Open issue \"Support Rfc3279 signature format for DSA and EcDSA\" (#42684)"},{"Id":"527403340","IsPullRequest":true,"CreatedAt":"2019-11-22T20:37:17","Actor":"eanova","Number":"42682","RawContent":null,"Title":"Update FileSystemAclExtensions.cs null checks (#41907)","State":"open","Body":"Fix for issue #41907 \r\nAdded necessary null checks and exceptions to GetAccessControl and SetAccessControl .  Removed  braces in Create(this FileInfo,..) method.\r\n\r\ncc: @carlossanlop @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42682","RelatedDescription":"Open PR \"Update FileSystemAclExtensions.cs null checks (#41907)\" (#42682)"},{"Id":"527376041","IsPullRequest":true,"CreatedAt":"2019-11-22T19:31:38","Actor":"dotnet-maestro-bot","Number":"42681","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"open","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @mmitche\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42681","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42681)"},{"Id":"527375105","IsPullRequest":false,"CreatedAt":"2019-11-22T19:30:25","Actor":"aqunovus","Number":"42680","RawContent":null,"Title":"Dictionary allows duplicate keys!","State":"closed","Body":"# Issue Title\r\n\r\nWhen I try to add same key to Dictionary, I am always expecting to get \"ArgumentException\" however after a while Dictionary accepts same key and its count is increased.\r\n\r\n# General\r\n\r\nVersion = .NET Core 3\r\nOS = Win10 Pro\r\nIDE = Visual Studio 2019 Community 2019\r\n\r\nExample Code:\r\n\r\nI am using Dictionary which is **not thread-safe**. (System.Collections.Generic).\r\nSo, I am fully aware of race conditions (such as ArgumentException etc.) may occur but duplicated keys are not expected.\r\n\r\n```C#\r\nprivate void Run()\r\n        {\r\n            bool isError = true;\r\n            while (isError)\r\n            {\r\n                var dict = new Dictionary<int, int>();\r\n                dict.Add(10, 10);\r\n\r\n                try\r\n                {\r\n                    Parallel.Invoke(\r\n                       () =>\r\n                       {\r\n                           // action1\r\n                           Thread.Sleep(500);\r\n                           dict.Add(20, 20);\r\n                       },\r\n                       () =>\r\n                       {\r\n                           // action2\r\n                           Thread.Sleep(500);\r\n                           dict.Add(20, 30);\r\n                       }\r\n                   );\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    isError = true;\r\n                    continue;\r\n                }\r\n\r\n                isError = false;\r\n                Console.WriteLine($\"It should never be reached: dictCount={dict.Count} dict[10]={dict[10]} dict[20]={dict[20]}\");\r\n                // Eg: It should never be reached: dictCount=3 dict[10]=10 dict[20]=30\r\n            }\r\n        }\r\n```\r\n\r\nIt should never reach to the message but it reaches! Also, It gives 3 for Dictionary item Count with two 20s as key.\r\n\r\nScreenshot:\r\n![image](https://user-images.githubusercontent.com/2474419/69447256-36c69d00-0d67-11ea-99c5-b27cec3a1555.png)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42680","RelatedDescription":"Closed issue \"Dictionary allows duplicate keys!\" (#42680)"},{"Id":"526926093","IsPullRequest":true,"CreatedAt":"2019-11-22T18:39:32","Actor":"dotnet-maestro-bot","Number":"42673","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @safern\n* @Anipik\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42673","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42673)"},{"Id":"527013546","IsPullRequest":false,"CreatedAt":"2019-11-22T18:30:15","Actor":"valakhin","Number":"42675","RawContent":null,"Title":"getaddrinfo() API not working in a specific case","State":"closed","Body":"We are facing an issue with getaddrinfo() API. \r\n \r\nWe are trying to resolve IP address of remote host using getaddrinfo() from our server.  My server is enabled only with IPv4 and Remote host(windows server) is enabled with only with IPv6. The getaddrinfo() failed to retrieve remote host IP details.\r\n \r\nhints.ai_family = AF_UNSPEC;\r\nhints.ai_socktype = SOCK_STREAM;\r\nhints.ai_protocol = IPPROTO_TCP;\r\ndwRetval = getaddrinfo(\"remotehostname\", \"port\", &hints, &result);\r\n \r\nNote: If I do nslookup command from my server to remote host, I am able to get IPv6 address of my remote host.\r\n \r\nIf getaddrinfo() API could not provide IP address of remote server in this scenario, Is there any other API to get the IP address of remote server?. Appreciate your help regarding this.\r\n","Url":"https://github.com/dotnet/corefx/issues/42675","RelatedDescription":"Closed issue \"getaddrinfo() API not working in a specific case\" (#42675)"},{"Id":"527152772","IsPullRequest":false,"CreatedAt":"2019-11-22T16:48:59","Actor":"rlaci999","Number":"42676","RawContent":null,"Title":"Is NuGet major version upgrade allowed or not? Microsoft.Extensions.Logging.Abstractions","State":"closed","Body":"We have `netstandard2.0` projects with `EF Core` `2.2.6`. I tried to upgrade a console application's NuGet `Microsoft.Extensions.Logging.Abstractions` from `2.2` to `3.0.1` but got runtime error:\r\n\r\n> Could not load type 'Microsoft.Extensions.Logging.Abstractions.Internal.NullScope' from \r\n> assembly 'Microsoft.Extensions.Logging.Abstractions, Version=3.0.1.0 \r\n\r\nThe error message seems legit, because `NullScope` was removed: [[Compare link]](https://www.fuget.org/packages/Microsoft.Extensions.Logging.Abstractions/3.0.1/lib/netstandard2.0/diff/2.2.0/?code=true), and Semantic Versioning enables breaking changes at major version change.\r\n\r\n**But why is it not written at the NuGet dependencies?** [[NuGet link]](https://www.nuget.org/packages/Microsoft.Extensions.Logging.Abstractions/3.0.1)\r\n\r\nThere are some other `Microsoft.Extensions.*` `3.0.1` packages that seem working well.\r\n\r\n**What is the right way to determine on which version can I update? Is it mandatory to stick to always the current major version?**\r\nIf so, then at which NuGets? For example `Microsoft.NET.Test.Sdk` `16.4.0` works pretty well.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42676","RelatedDescription":"Closed issue \"Is NuGet major version upgrade allowed or not? Microsoft.Extensions.Logging.Abstractions\" (#42676)"},{"Id":"527261188","IsPullRequest":false,"CreatedAt":"2019-11-22T15:27:20","Actor":"304NotModified","Number":"42678","RawContent":null,"Title":"XElement - LoadOptions.SetLineInfo - very slow & memory times 2","State":"open","Body":"Hi,\r\n\r\nI noticed that using `XElement.Load(stream, LoadOptions.SetLineInfo)` is very slow and memory consuming is times 2 compared to `XElement.Load(stream, LoadOptions.None)`\r\n\r\nSee table. For the completeness, I also added the results for the generated for class (XSD to C#) - which is very fast and not using much memory but is lacking the lineinfo. \r\n\r\nTested it with a XML file of 914MB\r\n\r\n| Method\t\t\t\t\t\t\t|      Memory\t\t\t\t\t\t| Time\t\t\t\t\t\r\n|-----------------------------------|----------------------------------:|----------------------:\t\r\n| XElement without lineinfo (`LoadOptions.None`)| 2.213.541 Mb (2.271.092.736 bytes)| 27 Sec (26.502 ms)\t\r\n| XElement with lineinfo (`LoadOptions.SetLineInfo`)| 5.523.492 Mb (5.667.102.720 bytes)| 46 Sec (45.781 ms)\t\r\n| Own \"XElement\" without lineinfo| 2.825.026 Mb (2.898.477.056 bytes)| 25 Sec (24.584 ms)\r\n| Own \"XElement\" with lineinfo| 2.825.226 Mb (2.898.681.856 bytes)| 26 Sec (25.969 ms)\t\r\n| XSD generated classes\t\t\t\t| 845.057 Mb (867.028.992 bytes)\t| 27 Sec (26.966 ms)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/5808377/69438621-a75cc200-0d45-11ea-81a1-a3133f227d1a.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5808377/69438634-aa57b280-0d45-11ea-9edf-948e2749823a.png)\r\n\r\n\r\n##  Own \"XElement\"\r\nThe funny part is that I wrote my own \"XElement\" in the past, and there is nearly no difference in capturing the lineInfo compared to non-capure. I'm doing for *all* element and *all* attributes `XmlPosition.Create(reader)`:\r\n\r\n```c#\r\npublic struct XmlPosition\r\n{\r\n    public XmlPosition(int lineNumber, int columnNumber)\r\n    {\r\n        if (lineNumber < 0)\r\n        {\r\n            throw new ArgumentOutOfRangeException(nameof(lineNumber));\r\n        }\r\n\r\n        if (columnNumber < 0)\r\n        {\r\n            throw new ArgumentOutOfRangeException(nameof(columnNumber));\r\n        }\r\n\r\n        LineNumber = lineNumber;\r\n        ColumnNumber = columnNumber;\r\n    }\r\n    \r\n    public int LineNumber { get; }\r\n\r\n    public int ColumnNumber { get;  }\r\n\r\n    public static XmlPosition Create(System.Xml.XmlReader reader)\r\n    {\r\n        if(reader is IXmlLineInfo lineInfo)\r\n        {\r\n            return new XmlPosition(lineInfo.LineNumber, lineInfo.LinePosition);\r\n        }\r\n        \r\n        throw new NotImplementedException(\"ow noos\");\r\n    }\r\n}\r\n```\r\n\r\nSo I can't understand why the XElement is using so much memory/time for SetLineInfo!\r\n\r\n## XmlReaderSettings\r\n\r\nPS: also tried, but no significant change.\r\n\r\n\r\n```c#\r\nvar options = new XmlReaderSettings();\r\noptions.IgnoreWhitespace = true;\r\noptions.DtdProcessing = DtdProcessing.Ignore;\r\noptions.MaxCharactersFromEntities = 10000000L;\r\noptions.Async = true;\r\noptions.CloseInput = true;\r\n\r\n\r\nXElement xml;\r\nusing (XmlReader reader = XmlReader.Create(s, options))\r\n{\r\n    xml = XElement.Load(reader, LoadOptions.SetLineInfo);\r\n}\r\n\r\n```\r\n\r\n## Test\r\n\r\n- using ` Process.GetCurrentProcess().WorkingSet64` for memory \r\n- using System.Diagnostics.StopWatch for timings\r\n\r\n## Env\r\n\r\nTested with .NET Core 2.2, Windows Server 2016 datacenter","Url":"https://github.com/dotnet/corefx/issues/42678","RelatedDescription":"Open issue \"XElement - LoadOptions.SetLineInfo - very slow & memory times 2\" (#42678)"},{"Id":"527209454","IsPullRequest":false,"CreatedAt":"2019-11-22T13:56:09","Actor":"edespong","Number":"42677","RawContent":null,"Title":"Font.Clone() not creating an exact copy?","State":"open","Body":"According to the documentation, `Font.Clone()`\r\n\r\n> Creates an exact copy of this Font.\r\n\r\nBut running the following code:\r\n```\r\nFont f1 = new Font(\"MS Outlook\", 2.5f);\r\nFont f2 = (Font)f1.Clone();\r\n\r\nFont f3 = new Font(\"Arial\", 2.5f);\r\nFont f4 = (Font)f3.Clone();\r\n\r\nConsole.WriteLine(f1.Equals(f2));\r\nConsole.WriteLine(f3.Equals(f4));\r\n```\r\n\r\nGives the result:\r\n\r\n> False\r\n> True\r\n\r\nThis is likely due to MS Outlook not being installed on my machine, but does this still not contradict the documentation? An **exact** copy should equal its original, otherwise it is not an exact copy.","Url":"https://github.com/dotnet/corefx/issues/42677","RelatedDescription":"Open issue \"Font.Clone() not creating an exact copy?\" (#42677)"},{"Id":"526900484","IsPullRequest":true,"CreatedAt":"2019-11-22T00:58:17","Actor":"safern","Number":"42671","RawContent":null,"Title":"[release/3.0] Use helix SDK bootstrapping for package testing and use repo one locally","State":"closed","Body":"Port of: https://github.com/dotnet/corefx/commit/edcbf94941121022162b2e3085cada121861d54e\r\nFixes: https://github.com/dotnet/runtime/issues/195\r\n\r\ncc: @Anipik @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42671","RelatedDescription":"Closed or merged PR \"[release/3.0] Use helix SDK bootstrapping for package testing and use repo one locally\" (#42671)"},{"Id":"526922812","IsPullRequest":false,"CreatedAt":"2019-11-22T00:49:24","Actor":"njy","Number":"42672","RawContent":null,"Title":"Proposal: ExperimentalAttribute","State":"open","Body":"## The scene\r\nSometimes there's the need to create (for personal/internal use) and maybe even release (for public consumption) some code that is useful in and on itself, but it's just not ready to be set in stone regarding its shape, api surface area, namespaces and so on.\r\nMaybe we are talking about an early stage pre-v1.0 release so the expectations about stability of code/design/api may be clear, but maybe they are in a new release that is adding new capabilities along the way.\r\n\r\n## The need\r\nThere should be a clear way of warning developers that the specific feature they are using is marked as experimental, meaning that it can change shape, break or disappear at any time in the near future, until it will get eventually stabilized.\r\n\r\n## The solution\r\nThe new ExperimentalAttribute can clearly signal all that has been said above, with the optional custom message already familiar from the `ObsoleteAttribute` for which this new attribute is kind of in the opposite direction, time-wise: \"obsolete\" meaning \"this thing had its time, don't use it anymore\" while \"experimental\" meaning \"it's not yet ready for prime time\").\r\n\r\n```csharp\r\nnamespace System\r\n{\r\n\t[AttributeUsage(AttributeTargets.All, AllowMultiple = false, Inherited = true)]\r\n\tpublic sealed class ExperimentalAttribute : Attribute\r\n\t{\r\n\t\tpublic ExperimentalAttribute()\r\n\t\tpublic ExperimentalAttribute(string message)\r\n\t\tpublic string Message { get; }\r\n\t}\r\n}\r\n```\r\n\r\n## The output\r\nIt should be possible to configure what output it would produce (info/warning/error), either per project/solution or globally.\r\nProbably it would also be a good idea to be able to configure that via an editorconfig setting like other rules already existing:\r\n\r\n```editorconfig\r\n# Experimental features\r\ndotnet_use_code_with_experimental_attribute = false : error\r\n```\r\nThe above example means \"do not allow using code marked as experimental, and threat such usage as an error\".\r\n\r\nThe default should probably be ` = true : warning` meaning experimental code can be used, but they should output a warning.\r\n\r\n![exp-attr-output](https://user-images.githubusercontent.com/1010086/69388529-68892680-0cc9-11ea-94f1-ced235b73287.png)\r\n\r\n## Other options considered\r\nA way to warn developers about code that may be problematic to use is the `ObsoleteAttribute` : the problem is that it is kind of heavy handed as already said by others, and the wording \"obsolete\" would probably be confusing for something \"new\".\r\n\r\nThere's also the pre-release story inside Nuget, but there the scope is package-wide so it's not granular enough, not suitable for specific classes/interfaces/methods/props/etc being added to an existing codebase: as a thought exercise imagine having the \"obsolete\" concept but only expressable package-wide for an entire nuget packge, that wouldn't cut it.\r\nAdditionally it's something available only in nuget packages, and only usable as a filter while adding new ones.\r\nInstead it should be possible to open an existing project, set a line in editorconfig (or the options panel or similar), compile, and see if anything experimental is being used.\r\nAlso, it should be usable in codebases that may not be published as nuget packages but referenced in other ways only inside the company or team, and it would still be useful to communicate with other team members about the potential breakage that may ensue by using some pieces of code.","Url":"https://github.com/dotnet/corefx/issues/42672","RelatedDescription":"Open issue \"Proposal: ExperimentalAttribute\" (#42672)"},{"Id":"526891955","IsPullRequest":false,"CreatedAt":"2019-11-21T23:08:23","Actor":"tick-rick","Number":"42670","RawContent":null,"Title":"HttpClient SocketsHttpHandler ignores SslClientAuthenticationOptions","State":"open","Body":"Moving from https://github.com/dotnet/corefx/issues/21577#issuecomment-556932989\r\nPackage installed via (dotnet add package System.Net.Http --version 4.3.4)\r\n\r\nI think I must be missing something with that API. The following code enables 1 cipher suite, yet the result in wireshark TLS1.3 ClientHello lists 31 cipher suites (of which TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 is indeed one, but that is beside the question)\r\n\r\n            var sslOptions = new SslClientAuthenticationOptions {\r\n                CipherSuitesPolicy  = new CipherSuitesPolicy(new List<TlsCipherSuite>{ TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 })\r\n            };\r\n            var socketsHttpHandler = new SocketsHttpHandler { SslOptions = sslOptions };\r\n            var httpClient = new HttpClient(socketsHttpHandler, true);\r\n            httpClient.GetAsync(\"https://www.google.com\").Wait();\r\n\r\n## Dotnet Info\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:\r\n OS Platform: Linux\r\n RID:         debian-x64\r\n Base Path:   /home/user/.dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [/home/user/.dotnet/sdk]\r\n  3.0.100-rc1-014190 [/home/user/.dotnet/sdk]\r\n  3.0.100 [/home/user/.dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [/home/user/.dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [/home/user/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [/home/user/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/home/user/.dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/home/user/.dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [/home/user/.dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/home/user/.dotnet/shared/Microsoft.NETCore.App]\r\n```\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n","Url":"https://github.com/dotnet/corefx/issues/42670","RelatedDescription":"Open issue \"HttpClient SocketsHttpHandler ignores SslClientAuthenticationOptions\" (#42670)"},{"Id":"526786855","IsPullRequest":true,"CreatedAt":"2019-11-21T19:09:36","Actor":"cheenamalhotra","Number":"42667","RawContent":null,"Title":"[release/3.1] Remove throw in exception handling of dispose","State":"open","Body":"Back port a fix from Microsoft.Data.SqlClient issue [#20](https://github.com/dotnet/SqlClient/issues/20).\r\n\r\nThe same PR #42457 is already merged on master branch.\r\n\r\n**3.1 Servicing:**\r\n\r\n### Summary\r\nUser gets `System.IO.IOException: Unable to write data to the transport connection: Broken pipe.` \r\nwith or without MARS enabled\r\n\r\n### Customer Impact\r\n\r\nCustomer reported.\r\n\r\nUsers using older verions of EFCore (< 3.0) cannot use Microsoft.Data.SqlClient. They need this change in order to not get the `Unable to write data to the transport connection: Broken pipe` error intermittently.\r\n\r\n### Regression?\r\n\r\nNo, this issue exist in 2.1 as well.\r\n\r\n### Risk\r\n\r\nLow: The code change is already in Microsoft.Data.SqlClient, and users have reported the fix works for them.\r\n\r\ncc @danmosemsft @stephentoub ","Url":"https://github.com/dotnet/corefx/pull/42667","RelatedDescription":"Open PR \"[release/3.1] Remove throw in exception handling of dispose\" (#42667)"},{"Id":"526740659","IsPullRequest":true,"CreatedAt":"2019-11-21T17:33:14","Actor":"shutdown256","Number":"42666","RawContent":null,"Title":"SequenceReader nextPosition fix","State":"open","Body":"While working with `PipeReader` I ran into a rare issue when using `SequenceReader` with the returned `ReadOnlySequence`. In my code I'm splitting incoming data by newlines (\\r\\n) like this : \r\n```c#\r\nvar rr = await reader.ReadAsync();\r\nvar sr = new SequenceReader<byte>(rr.Buffer);\r\nvar r = sr.TryReadTo(out line, M_CRNL.Span);\r\n```\r\nOn rare occasions last line of this code throws following exception:\r\n```\r\nSystem.InvalidOperationException: End position was not reached during enumeration.\r\n   at System.ThrowHelper.ThrowInvalidOperationException_EndPositionNotReached()\r\n   at System.Buffers.SequenceReader`1.IsNextSlow(ReadOnlySpan`1 next, Boolean advancePast)\r\n   at System.Buffers.SequenceReader`1.TryReadTo(ReadOnlySequence`1& sequence, ReadOnlySpan`1 delimiter, Boolean advancePastDelimiter)\r\n...\r\n```\r\n\r\nAfter extensive investigation I have determined the true StackTrace was:\r\n```\r\n   at System.ThrowHelper.ThrowInvalidOperationException_EndPositionNotReached()\r\n   at System.Buffers.ReadOnlySequence.TryGetBuffer(in SequencePosition position, out ReadOnlyMemory<T> memory, out SequencePosition next) line 42 (ReadOnlySequence.Helpers.cs)\r\n   at System.Buffers.ReadOnlySequence.TryGet(ref SequencePosition position, out ReadOnlyMemory<T> memory, bool advance = true) line 549\r\n   at System.Buffers.SequenceReader.IsNextSlow(ReadOnlySpan<T> next, Boolean advancePast) line 752\r\n   at System.Buffers.SequenceReader.IsNext(ReadOnlySpan<T> next, bool advancePast = false) line 724\r\n   at System.Buffers.SequenceReader.TryReadTo(out ReadOnlySequence<T> sequence, ReadOnlySpan<T> delimiter, bool advancePastDelimiter = true) line 444\r\n...\r\n```\r\nand that this issue only happened when the Sequence was spanning only one segment (but this segment references another segment (next)) and the first segment's memory ends exactly with the first byte of the delimiter.\r\n\r\nI believe constructor `public SequenceReader(ReadOnlySequence<T> sequence)` incorrectly sets `_nextPosition` trough `ReadOnlySequence.GetFirstSpan(out ReadOnlySpan<T> first, out SequencePosition next)` where `next` is set to segment's Next (`next = new SequencePosition(segment.Next, 0);`) regardless of whether or not the sequence actually spans this segment. This ultimately causes fail inside `ReadOnlySequence.TryGetBuffer()` when `SequenceReader.IsNextSlow` tries to search outside the sequence's boundary.\r\n\r\nThis PR aimes to fix this issue and it adds a test which would fail with the old code (and thus can serve as repro).","Url":"https://github.com/dotnet/corefx/pull/42666","RelatedDescription":"Open PR \"SequenceReader nextPosition fix\" (#42666)"},{"Id":"526700475","IsPullRequest":false,"CreatedAt":"2019-11-21T16:22:06","Actor":"Tratcher","Number":"42665","RawContent":null,"Title":"Can't use network locations","State":"open","Body":"_From @Leonardo-Ferreira on Thursday, November 21, 2019 2:55:06 PM_\r\n\r\n### Describe the bug\r\n.Net Core 3 is prepending supplied paths with the local solution path.\r\n\r\n### To Reproduce\r\nCreate a empty console app using .net 3.0 or 3.1 and insert\r\n``` C#\r\nSystem.IO.File.ReadAllBytes(\"smb://yourshare/file.txt\");\r\nSystem.IO.File.ReadAllBytes(\"\\\\\\\\yourshare/file.txt\");\r\n```\r\nand you will get a exception very similar to:  \r\n```\r\nSystem.IO.DirectoryNotFoundException: Could not find a part of the path '/Users/leonardoferreira/Projects/MySolution/MySolution.Console/bin/Debug/netcoreapp3.1/smb:/myshare/myfile.txt'.\r\n   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n   at System.IO.FileStream.OpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n   at System.IO.File.ReadAllBytes(String path)\r\n   at MySolution.Console.Main() in /Users/leonardoferreira/Projects/MySolution/MySolution.Console/Program.cs:line 13\r\n```\r\n### Further technical details\r\n- ASP.NET Core version: 3 and 3.1\r\n- Include the output of `dotnet --info`:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview3-014645\r\n Commit:    b32d27f4b3\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.1.100-preview3-014645/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview3.19553.2\r\n  Commit:  13f35c3d86\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n  3.1.100-preview2-014569 [/usr/local/share/dotnet/sdk]\r\n  3.1.100-preview3-014645 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview2.19528.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview3.19555.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview2.19525.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview3.19553.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and it's version\r\nVS4MAC 8.4 Preview (8.4 build 2535)\r\n\r\n_Copied from original issue: aspnet/AspNetCore#17295_\r\n\r\n[edited for formatting]","Url":"https://github.com/dotnet/corefx/issues/42665","RelatedDescription":"Open issue \"Can't use network locations\" (#42665)"},{"Id":"526835869","IsPullRequest":false,"CreatedAt":"2019-11-21T13:31:25","Actor":"LeonardoMS01","Number":"42668","RawContent":null,"Title":"JsonIgnore","State":"open","Body":"\r\nI am confused with \"JsonIgnore\", which one should I use? NewtonSoft.Json or System.Text.Json.Serialization both do not work fully.\r\n","Url":"https://github.com/dotnet/corefx/issues/42668","RelatedDescription":"Open issue \"JsonIgnore\" (#42668)"},{"Id":"526428068","IsPullRequest":true,"CreatedAt":"2019-11-21T08:04:04","Actor":"tmds","Number":"42664","RawContent":null,"Title":"SmtpConnection: fix Socket not getting Disposed when LingerState cannot be set.","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/40711\r\n\r\ncc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/42664","RelatedDescription":"Open PR \"SmtpConnection: fix Socket not getting Disposed when LingerState cannot be set.\" (#42664)"},{"Id":"526837619","IsPullRequest":false,"CreatedAt":"2019-11-14T18:00:31","Actor":"arosado2895","Number":"42669","RawContent":null,"Title":"Problems Starting dotnet (First Timer)","State":"open","Body":"λ dotnet new webApp -o myWebApp --no-https cd myWebApp\r\nUnhandled exception. System.TypeInitializationException: The type initializer for 'Microsoft.DotNet.PlatformAbstractions.RuntimeEnvironment' threw an exception.\r\n ---> System.ArgumentException: External component has thrown an exception.\r\n   at System.Globalization.CompareInfo.CompareString(ReadOnlySpan`1 string1, ReadOnlySpan`1 string2, CompareOptions options)\r\n   at System.Globalization.CompareInfo.Compare(String string1, String string2, CompareOptions options)\r\n   at System.Globalization.TextInfo.PopulateIsAsciiCasingSameAsInvariant()\r\n   at System.Globalization.TextInfo.ChangeCaseCommon[TConversion](String source)\r\n   at System.Globalization.TextInfo.ToLower(String str)\r\n   at System.String.ToLowerInvariant()\r\n   at Microsoft.DotNet.PlatformAbstractions.RuntimeEnvironment.GetArch()\r\n   at Microsoft.DotNet.PlatformAbstractions.RuntimeEnvironment..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.DotNet.PlatformAbstractions.RuntimeEnvironment.GetRuntimeIdentifier()\r\n   at Microsoft.DotNet.Cli.MulticoreJitProfilePathCalculator.CalculateProfileRootPath()\r\n   at Microsoft.DotNet.Cli.MulticoreJitActivator.StartCliProfileOptimization()\r\n   at Microsoft.DotNet.Cli.MulticoreJitActivator.TryActivateMulticoreJit()\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)","Url":"https://github.com/dotnet/corefx/issues/42669","RelatedDescription":"Open issue \"Problems Starting dotnet (First Timer)\" (#42669)"},{"Id":"526969052","IsPullRequest":false,"CreatedAt":"2019-06-12T17:57:01","Actor":"ocean2706","Number":"42674","RawContent":null,"Title":"EventLog GetEventsLog is very very very poorly implemented","State":"open","Body":"In real life, EventLog.GetEventsLog() is far away from being ready to use in order to acces local (or remote) computer events in a way similar to Event Viewer. If you try to use the provided sample code in current documentation (2019-06-12), it will fail with System.InvalidOperationException , {\"Cannot open log Parameters on machine .. Windows has not provided an error code.\"}\r\n \r\nThis is because, according to reference page https://referencesource.microsoft.com/#System/services/monitoring/system/diagnosticts/EventLog.cs,4d9fa3c597ae17eb it use\r\nprivate const string EventLogKey = \"SYSTEM\\\\CurrentControlSet\\\\Services\\\\EventLog\"; in order to list subkeys on corresponding HKLM registry, wich contain of course EventLog service parameters and of course the key does not conatain anything suitable for a log. At least in Windows 10.\r\n\r\nAs a workaround, you can try to use WMI (https://docs.microsoft.com/en-us/windows/desktop/wmisdk/wmi-tasks--event-logs) - not sure about the outcome,  or read logs from C:\\Windows\\System32\\winevt\\Logs where you can find them in .evtx fromat.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42674","RelatedDescription":"Open issue \"EventLog GetEventsLog is very very very poorly implemented\" (#42674)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"527465891","IsPullRequest":true,"CreatedAt":"2019-11-23T02:32:30","Actor":"dotnet-bot","Number":"39985","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39985","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#39985)"},{"Id":"527465840","IsPullRequest":true,"CreatedAt":"2019-11-23T02:32:25","Actor":"dotnet-bot","Number":"39984","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39984","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39984)"},{"Id":"527483155","IsPullRequest":false,"CreatedAt":"2019-11-23T00:54:40","Actor":"AlekseyTs","Number":"39992","RawContent":null,"Title":"UnexpectedValue exception is thrown for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.DiagnosticTest.GetDiagnosticsCalledTwice unit-test","State":"open","Body":"For the ```Microsoft.CodeAnalysis.CSharp.UnitTests.DiagnosticTest.GetDiagnosticsCalledTwice``` unit-test:\r\n- Add \r\n```\r\ncompilation.GetDiagnostics();\r\ncompilation.GetEmitDiagnostics();\r\n```\r\nright after creation of the compilation.\r\n- Run the test\r\n\r\nObserved UnexpectedValue exception is thrown during ```GetEmitDiagnostics``` call (doesn't repro without calling ```GetDiagnostics``` before it):\r\n```\r\n \tMicrosoft.CodeAnalysis.dll!Roslyn.Utilities.ExceptionUtilities.UnexpectedValue(object o) Line 20\tC#\r\n>\tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.IteratorRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement body, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator slotAllocatorOpt, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, out Microsoft.CodeAnalysis.CSharp.IteratorStateMachine stateMachineType) Line 73\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CSharp.BoundStatement body, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState, bool instrumentForDynamicAnalysis, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider debugDocumentProvider, ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeGen.SourceSpan> dynamicAnalysisSpans, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, ref Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator lazyVariableSlotAllocator, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo> lambdaDebugInfoBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo> closureDebugInfoBuilder, out Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol stateMachineTypeOpt) Line 1380\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol methodSymbol, int methodOrdinal, ref Microsoft.CodeAnalysis.CSharp.Binder.ProcessedFieldInitializers processedInitializers, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState) Line 1138\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol containingType) Line 518\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.VisitNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol symbol, Microsoft.CodeAnalysis.CSharp.TypeCompilationState arg) Line 396\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.Accept<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object>(Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object> visitor, Microsoft.CodeAnalysis.CSharp.TypeCompilationState argument) Line 572\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamespace(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol symbol) Line 375\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBeingBuiltOpt, bool emittingPdb, bool emitTestCoverageData, bool hasDeclarationErrors, bool emitMethodBodies, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol> filterOpt, System.Threading.CancellationToken cancellationToken) Line 156\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CompileMethods(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBuilder, bool emittingPdb, bool emitMetadataOnly, bool emitTestCoverageData, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.Symbols.ISymbolInternal> filterOpt, System.Threading.CancellationToken cancellationToken) Line 2771\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2497\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c) Line 388\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.VerifyUsedAssemblyReferences(System.Func<Microsoft.CodeAnalysis.CSharp.CSharpCompilation> createCompilationLambda) Line 1062\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationCore(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable, Microsoft.CodeAnalysis.CSharp.MessageID? experimentalFeature) Line 1051\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateEmptyCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1009\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1000\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Syntax.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.DiagnosticTest.GetDiagnosticsCalledTwice() Line 2245\tC#\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/39992","RelatedDescription":"Open issue \"UnexpectedValue exception is thrown for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.DiagnosticTest.GetDiagnosticsCalledTwice unit-test\" (#39992)"},{"Id":"527480451","IsPullRequest":false,"CreatedAt":"2019-11-23T00:42:17","Actor":"jmarolf","Number":"39991","RawContent":null,"Title":"Render all XML doc comments in the editor as they appear in quickinfo","State":"open","Body":"\r\nWhen I click inside the XML doc comments show me the regular XML format. When I am just scrolling through the file, render the comment like it would appear in quickinfo.","Url":"https://github.com/dotnet/roslyn/issues/39991","RelatedDescription":"Open issue \"Render all XML doc comments in the editor as they appear in quickinfo\" (#39991)"},{"Id":"527478595","IsPullRequest":true,"CreatedAt":"2019-11-23T00:38:19","Actor":"dpoeschl","Number":"39989","RawContent":null,"Title":"[Draft/Ignore] Messing around with IBrokeredSettingsManager","State":"closed","Body":"Nowhere near ready for review. This exists to facilitate discussion with a partner team.","Url":"https://github.com/dotnet/roslyn/pull/39989","RelatedDescription":"Closed or merged PR \"[Draft/Ignore] Messing around with IBrokeredSettingsManager\" (#39989)"},{"Id":"527478607","IsPullRequest":true,"CreatedAt":"2019-11-23T00:33:53","Actor":"jcouv","Number":"39990","RawContent":null,"Title":"Move reporting of ERR_IteratorMustBeAsync to avoid race condition","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/39970","Url":"https://github.com/dotnet/roslyn/pull/39990","RelatedDescription":"Open PR \"Move reporting of ERR_IteratorMustBeAsync to avoid race condition\" (#39990)"},{"Id":"527471514","IsPullRequest":false,"CreatedAt":"2019-11-23T00:02:25","Actor":"tmat","Number":"39988","RawContent":null,"Title":"Require analyzers to target netstandard1.x or netstandard2.0","State":"open","Body":"This requirement is needed for moving analysis to OOP.\r\n\r\nReport a load error when an analyzer does not target `netstandard2.0`. We could start by reporting a warning and flip it to error later.\r\n\r\nWe currently support analyzers to be loaded from a VSIX package. This means the analyzer assembly can actually call VS APIs. For example, analyzer authors might have options UI for their analyzer. We need a migration path for these kind of analyzers. E.g. for the options UI, the recommendation would be to persist the options in `.editorconfig` file that the analyzer then reads.\r\n\r\nWe need to document this requirement and recommendations how to migrate existing analyzers that do not target netstandard2.0.\r\n","Url":"https://github.com/dotnet/roslyn/issues/39988","RelatedDescription":"Open issue \"Require analyzers to target netstandard1.x or netstandard2.0\" (#39988)"},{"Id":"527467154","IsPullRequest":true,"CreatedAt":"2019-11-22T23:45:22","Actor":"agocke","Number":"39987","RawContent":null,"Title":"Update list of C# Next features and reviewers","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39987","RelatedDescription":"Open PR \"Update list of C# Next features and reviewers\" (#39987)"},{"Id":"527466696","IsPullRequest":true,"CreatedAt":"2019-11-22T23:43:47","Actor":"dotnet-maestro[bot]","Number":"39986","RawContent":null,"Title":"[release/dev16.3-vs-deps] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ef0a7d9c-37a9-4bca-b183-08d73687fe54)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:ef0a7d9c-37a9-4bca-b183-08d73687fe54)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/39986","RelatedDescription":"Open PR \"[release/dev16.3-vs-deps] Update dependencies from dotnet/arcade\" (#39986)"},{"Id":"527463216","IsPullRequest":true,"CreatedAt":"2019-11-22T23:32:21","Actor":"cston","Number":"39983","RawContent":null,"Title":"More tests for [MaybeNull]","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39983","RelatedDescription":"Open PR \"More tests for [MaybeNull]\" (#39983)"},{"Id":"527458277","IsPullRequest":true,"CreatedAt":"2019-11-22T23:13:43","Actor":"genlu","Number":"39982","RawContent":null,"Title":"Change to telemetry logger","State":"open","Body":"This PR contains following changes to telemetry reporting:\r\n\r\n1. Make it easier to query results reported by `HistogramLogAggregator`, i.e. represent the buckets as an array instead of a collection of individual properties.\r\n\r\n![image](https://user-images.githubusercontent.com/788783/69466849-9064a280-0d3a-11ea-8423-4d4cef9f5537.png)\r\n\r\n2. Additional usage data for import completion","Url":"https://github.com/dotnet/roslyn/pull/39982","RelatedDescription":"Open PR \"Change to telemetry logger\" (#39982)"},{"Id":"527371485","IsPullRequest":true,"CreatedAt":"2019-11-22T22:17:44","Actor":"tmat","Number":"39972","RawContent":null,"Title":"Do not convert PDBs when building bootstrap compiler","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39972","RelatedDescription":"Closed or merged PR \"Do not convert PDBs when building bootstrap compiler\" (#39972)"},{"Id":"527437466","IsPullRequest":false,"CreatedAt":"2019-11-22T22:06:10","Actor":"cston","Number":"39981","RawContent":null,"Title":"Consider adding MaybeDefault to Microsoft.CodeAnalysis.NullableFlowState","State":"open","Body":"Consider adding `MaybeDefault` to `Microsoft.CodeAnalysis.NullableFlowState` to allow analyzers to differentiate values that may be `null` even if the type may be not nullable.\r\n\r\nFor instance, to represent the flow state of `item`:\r\n```C#\r\nstatic void M<T>(List<T> list)\r\n{\r\n    T item =  list.FirstOrDefault();\r\n    // ...\r\n}\r\n```\r\nSee https://github.com/dotnet/csharplang/issues/2946\r\nSee https://github.com/dotnet/roslyn/pull/39778","Url":"https://github.com/dotnet/roslyn/issues/39981","RelatedDescription":"Open issue \"Consider adding MaybeDefault to Microsoft.CodeAnalysis.NullableFlowState\" (#39981)"},{"Id":"527435794","IsPullRequest":true,"CreatedAt":"2019-11-22T22:01:17","Actor":"mavasani","Number":"39980","RawContent":null,"Title":"Move the ClosedFileDiagnostic option used by TS back to Features layer","State":"open","Body":"#39955 re-added the option back to Workspaces instead of Features, its original location. This PR fixes it.","Url":"https://github.com/dotnet/roslyn/pull/39980","RelatedDescription":"Open PR \"Move the ClosedFileDiagnostic option used by TS back to Features layer\" (#39980)"},{"Id":"527435538","IsPullRequest":false,"CreatedAt":"2019-11-22T22:00:34","Actor":"AlekseyTs","Number":"39979","RawContent":null,"Title":"An assert is fired for scenario from Microsoft.CodeAnalysis.CSharp.UnitTests.Symbols.Source.EventTests.VoidEvent unit-test","State":"open","Body":"Add ```.GetEmitDiagnostics()``` at the end of the ```Microsoft.CodeAnalysis.CSharp.UnitTests.Symbols.Source.EventTests.VoidEvent``` unit-test and run it.\r\n\r\nObserved:\r\n```\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(string message, string detailMessage) Line 24\tC#\r\n \tSystem.dll!System.Diagnostics.TraceListener.Fail(string message) Line 181\tC#\r\n \tSystem.dll!System.Diagnostics.TraceInternal.Fail(string message) Line 225\tC#\r\n \tSystem.dll!System.Diagnostics.Debug.Assert(bool condition) Line 100\tC#\r\n>\tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal.SynthesizedLocal(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol containingMethodOpt, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations type, Microsoft.CodeAnalysis.SynthesizedLocalKind kind, Microsoft.CodeAnalysis.SyntaxNode syntaxOpt, bool isPinned, Microsoft.CodeAnalysis.RefKind refKind, int createdAtLineNumber, string createdAtFilePath) Line 44\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodBodySynthesizer.ConstructFieldLikeEventAccessorBody_Regular(Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol eventSymbol, bool isAddMethod, Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.DiagnosticBag diagnostics) Line 427\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodBodySynthesizer.ConstructFieldLikeEventAccessorBody(Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol eventSymbol, bool isAddMethod, Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.DiagnosticBag diagnostics) Line 213\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileFieldLikeEventAccessor(Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol eventSymbol, bool isAddMethod) Line 835\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol containingType) Line 543\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.VisitNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol symbol, Microsoft.CodeAnalysis.CSharp.TypeCompilationState arg) Line 396\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.Accept<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object>(Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object> visitor, Microsoft.CodeAnalysis.CSharp.TypeCompilationState argument) Line 572\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamespace(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol symbol) Line 375\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBeingBuiltOpt, bool emittingPdb, bool emitTestCoverageData, bool hasDeclarationErrors, bool emitMethodBodies, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol> filterOpt, System.Threading.CancellationToken cancellationToken) Line 156\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CompileMethods(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBuilder, bool emittingPdb, bool emitMetadataOnly, bool emitTestCoverageData, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.Symbols.ISymbolInternal> filterOpt, System.Threading.CancellationToken cancellationToken) Line 2771\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2497\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c) Line 388\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.VerifyUsedAssemblyReferences(System.Func<Microsoft.CodeAnalysis.CSharp.CSharpCompilation> createCompilationLambda) Line 1062\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationCore(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable, Microsoft.CodeAnalysis.CSharp.MessageID? experimentalFeature) Line 1051\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateEmptyCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1009\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1000\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Symbol.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.Symbols.Source.EventTests.VoidEvent() Line 864\tC#\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39979","RelatedDescription":"Open issue \"An assert is fired for scenario from Microsoft.CodeAnalysis.CSharp.UnitTests.Symbols.Source.EventTests.VoidEvent unit-test\" (#39979)"},{"Id":"527428401","IsPullRequest":true,"CreatedAt":"2019-11-22T21:41:34","Actor":"jcouv","Number":"39978","RawContent":null,"Title":"Extra check for EnumeratorCancellation parameter type","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/39961","Url":"https://github.com/dotnet/roslyn/pull/39978","RelatedDescription":"Open PR \"Extra check for EnumeratorCancellation parameter type\" (#39978)"},{"Id":"527375457","IsPullRequest":true,"CreatedAt":"2019-11-22T21:18:00","Actor":"mavasani","Number":"39973","RawContent":null,"Title":"Ensure that work coordinator sees change to \"RunAnalyzers\" project pr…","State":"closed","Body":"…operty as a configuration change that needs to kick off re-analysis.\r\n\r\nVerified that added unit tests fail before the fix.","Url":"https://github.com/dotnet/roslyn/pull/39973","RelatedDescription":"Closed or merged PR \"Ensure that work coordinator sees change to \"RunAnalyzers\" project pr…\" (#39973)"},{"Id":"527412628","IsPullRequest":false,"CreatedAt":"2019-11-22T21:01:10","Actor":"JohanLarsson","Number":"39977","RawContent":null,"Title":"Move introduce local to the top of the list","State":"open","Body":"![indroduce_local](https://user-images.githubusercontent.com/1640096/69460061-75faeb00-0d73-11ea-8bad-1a332b0836c7.gif)\r\n\r\nI'm thinking discard should be rare.","Url":"https://github.com/dotnet/roslyn/issues/39977","RelatedDescription":"Open issue \"Move introduce local to the top of the list\" (#39977)"},{"Id":"527398746","IsPullRequest":false,"CreatedAt":"2019-11-22T20:26:07","Actor":"AlekseyTs","Number":"39976","RawContent":null,"Title":"An assert is fired in NullableWalker for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenTupleTests.HugeTupleCreationParses unit-test","State":"open","Body":"Add ```.GetDiagnostics()``` at the end of the ```Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenTupleTests.HugeTupleCreationParses``` unit-test and run it.\r\n\r\nObserved:\r\n```\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(string message, string detailMessage) Line 24\tC#\r\n \tSystem.dll!System.Diagnostics.TraceListener.Fail(string message) Line 181\tC#\r\n \tSystem.dll!System.Diagnostics.TraceInternal.Fail(string message) Line 225\tC#\r\n \tSystem.dll!System.Diagnostics.Debug.Assert(bool condition) Line 100\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.GetOrCreateSlot(Microsoft.CodeAnalysis.CSharp.Symbol symbol, int containingSlot, bool forceSlotEvenIfEmpty) Line 110\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.DescendThroughTupleRestFields(ref Microsoft.CodeAnalysis.CSharp.Symbol symbol, int containingSlot, bool forceContainingSlotsToExist) Line 205\tC#\r\n>\tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.LocalDataFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.GetOrCreateSlot(Microsoft.CodeAnalysis.CSharp.Symbol symbol, int containingSlot, bool forceSlotEvenIfEmpty) Line 114\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.TrackNullableStateOfTupleElements.__trackState|195_0(Microsoft.CodeAnalysis.CSharp.BoundExpression value, Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol field, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState valueType, ref Microsoft.CodeAnalysis.CSharp.NullableWalker.<>c__DisplayClass195_0 value) Line 4795\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.TrackNullableStateOfTupleElements(int slot, Microsoft.CodeAnalysis.CSharp.Symbols.TupleTypeSymbol tupleType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.BoundExpression> values, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithState> types, bool useRestField) Line 4782\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitTupleExpression(Microsoft.CodeAnalysis.CSharp.BoundTupleExpression node) Line 4743\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitTupleLiteral(Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral node) Line 4713\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundTupleLiteral.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor visitor) Line 5574\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 362\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 1693\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(ref int recursionDepth, Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 203\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 353\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitAlways(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 340\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 315\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node, bool expressionIsRead) Line 1785\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 1771\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitWithoutDiagnostics(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 968\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitConvertedTupleLiteral(Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral node) Line 4721\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundConvertedTupleLiteral.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor visitor) Line 5605\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 362\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 1693\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 227\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(ref int recursionDepth, Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 207\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 353\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitAlways(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 340\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 315\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node, bool expressionIsRead) Line 1785\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 1771\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitRvalue(Microsoft.CodeAnalysis.CSharp.BoundExpression node, bool isKnownToBeAnLvalue) Line 974\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitRvalueWithState(Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 994\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitOptionalImplicitConversion(Microsoft.CodeAnalysis.CSharp.BoundExpression expr, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations targetTypeOpt, bool useLegacyWarnings, bool trackMembers, Microsoft.CodeAnalysis.CSharp.NullableWalker.AssignmentKind assignmentKind) Line 4667\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitLocalDeclaration(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration node) Line 1665\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor visitor) Line 2672\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 356\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitAlways(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 340\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 315\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node, bool expressionIsRead) Line 1785\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 1771\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitStatement(Microsoft.CodeAnalysis.CSharp.BoundStatement statement) Line 1794\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock node) Line 1550\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor visitor) Line 2571\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 356\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.VisitAlways(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 340\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 315\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node, bool expressionIsRead) Line 1785\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 1771\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.Scan(ref bool badRegion) Line 400\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Scan(ref bool badRegion) Line 443\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState, Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalFunctionState>.Analyze(ref bool badRegion, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.NullableWalker.LocalState> initialState) Line 423\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(Microsoft.CodeAnalysis.CSharp.NullableWalker walker, Microsoft.CodeAnalysis.CSharp.Symbol symbol, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState initialState, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder snapshotBuilderOpt) Line 667\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Symbol symbol, Microsoft.CodeAnalysis.CSharp.BoundNode node, Microsoft.CodeAnalysis.CSharp.Binder binder, Microsoft.CodeAnalysis.CSharp.Conversions conversions, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool useMethodSignatureParameterTypes, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol delegateInvokeMethodOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.VariableState initialState, System.Collections.Immutable.ImmutableDictionary<Microsoft.CodeAnalysis.CSharp.BoundExpression, (Microsoft.CodeAnalysis.NullabilityInfo, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)>.Builder analyzedNullabilityMapOpt, Microsoft.CodeAnalysis.CSharp.NullableWalker.SnapshotManager.Builder snapshotBuilderOpt, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations)> returnTypesOpt) Line 647\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, Microsoft.CodeAnalysis.CSharp.BoundNode node, Microsoft.CodeAnalysis.DiagnosticBag diagnostics) Line 459\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.Analyze(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol member, Microsoft.CodeAnalysis.CSharp.BoundNode node, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool requireOutParamsAssigned) Line 413\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.FlowAnalysisPass.Analyze(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, Microsoft.CodeAnalysis.CSharp.BoundBlock block, Microsoft.CodeAnalysis.DiagnosticBag diagnostics) Line 133\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.FlowAnalysisPass.Rewrite(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, Microsoft.CodeAnalysis.CSharp.BoundBlock block, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool hasTrailingExpression, bool originalBodyNested) Line 42\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol methodSymbol, int methodOrdinal, ref Microsoft.CodeAnalysis.CSharp.Binder.ProcessedFieldInitializers processedInitializers, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState) Line 1067\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol containingType) Line 518\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.VisitNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol symbol, Microsoft.CodeAnalysis.CSharp.TypeCompilationState arg) Line 396\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.Accept<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object>(Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object> visitor, Microsoft.CodeAnalysis.CSharp.TypeCompilationState argument) Line 572\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamespace(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol symbol) Line 375\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBeingBuiltOpt, bool emittingPdb, bool emitTestCoverageData, bool hasDeclarationErrors, bool emitMethodBodies, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol> filterOpt, System.Threading.CancellationToken cancellationToken) Line 156\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnosticsForAllMethodBodies(Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool doLowering, System.Threading.CancellationToken cancellationToken) Line 2415\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnosticsWithoutFiltering(Microsoft.CodeAnalysis.CompilationStage stage, bool includeEarlierStages, Microsoft.CodeAnalysis.DiagnosticBag builder, System.Threading.CancellationToken cancellationToken) Line 2388\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnostics(Microsoft.CodeAnalysis.CompilationStage stage, bool includeEarlierStages, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Threading.CancellationToken cancellationToken) Line 2302\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnostics(Microsoft.CodeAnalysis.CompilationStage stage, bool includeEarlierStages, System.Threading.CancellationToken cancellationToken) Line 2294\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnostics(System.Threading.CancellationToken cancellationToken) Line 2288\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.VerifyUsedAssemblyReferences(System.Func<Microsoft.CodeAnalysis.CSharp.CSharpCompilation> createCompilationLambda) Line 1061\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationCore(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable, Microsoft.CodeAnalysis.CSharp.MessageID? experimentalFeature) Line 1051\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateEmptyCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1009\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1000\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Emit.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenTupleTests.HugeTupleCreationParses() Line 3146\tC#\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39976","RelatedDescription":"Open issue \"An assert is fired in NullableWalker for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenTupleTests.HugeTupleCreationParses unit-test\" (#39976)"},{"Id":"527383949","IsPullRequest":false,"CreatedAt":"2019-11-22T19:49:56","Actor":"AlekseyTs","Number":"39975","RawContent":null,"Title":"An assert tasked to intercept unconverted expressions is firing for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.SyntaxBinderTests.BinaryIntrinsicSymbols2 unit-test","State":"open","Body":"Add ```compilation.GetDiagnostics()``` after compilation is created in ```Microsoft.CodeAnalysis.CSharp.UnitTests.SyntaxBinderTests.BinaryIntrinsicSymbols2``` unit-test and run it.\r\n\r\nObserved the assert:\r\n```\r\n        protected override void VisitRvalue(BoundExpression node, bool isKnownToBeAnLvalue = false)\r\n        {\r\n            Debug.Assert(\r\n                node is null ||\r\n                !_shouldCheckConverted ||\r\n                isKnownToBeAnLvalue ||\r\n                !node.NeedsToBeConverted() ||\r\n                node.WasCompilerGenerated, \"expressions should have been converted\");\r\n            base.VisitRvalue(node, isKnownToBeAnLvalue);\r\n        }\r\n```\r\n\r\nCall stack:\r\n```\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(string message, string detailMessage) Line 24\tC#\r\n \tSystem.dll!System.Diagnostics.TraceListener.Fail(string message) Line 181\tC#\r\n \tSystem.dll!System.Diagnostics.TraceInternal.Fail(string message) Line 226\tC#\r\n \tSystem.dll!System.Diagnostics.Debug.Assert(bool condition, string message) Line 109\tC#\r\n>\tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.VisitRvalue(Microsoft.CodeAnalysis.CSharp.BoundExpression node, bool isKnownToBeAnLvalue) Line 201\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.VisitCompoundAssignmentOperator(Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator node) Line 1790\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor visitor) Line 1413\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 362\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 227\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(ref int recursionDepth, Microsoft.CodeAnalysis.CSharp.BoundExpression node) Line 207\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 353\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitAlways(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 340\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 315\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitRvalue(Microsoft.CodeAnalysis.CSharp.BoundExpression node, bool isKnownToBeAnLvalue) Line 638\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.VisitRvalue(Microsoft.CodeAnalysis.CSharp.BoundExpression node, bool isKnownToBeAnLvalue) Line 207\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement node) Line 1136\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor visitor) Line 2936\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 356\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitAlways(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 340\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 315\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.VisitStatementsWithLocalFunctions(Microsoft.CodeAnalysis.CSharp.BoundBlock block) Line 1517\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock node) Line 1460\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor visitor) Line 2571\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 356\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.VisitAlways(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 340\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode node) Line 315\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.Scan(ref bool badRegion) Line 400\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.Scan(ref bool badRegion) Line 234\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.AbstractFlowPass<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState, Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalFunctionState>.Analyze(ref bool badRegion, Microsoft.CodeAnalysis.Optional<Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.LocalState> initialState) Line 423\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.Analyze(ref bool badRegion, Microsoft.CodeAnalysis.DiagnosticBag diagnostics) Line 423\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.DefiniteAssignmentPass.Analyze(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol member, Microsoft.CodeAnalysis.CSharp.BoundNode node, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool requireOutParamsAssigned) Line 394\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.FlowAnalysisPass.Analyze(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, Microsoft.CodeAnalysis.CSharp.BoundBlock block, Microsoft.CodeAnalysis.DiagnosticBag diagnostics) Line 133\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.FlowAnalysisPass.Rewrite(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, Microsoft.CodeAnalysis.CSharp.BoundBlock block, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool hasTrailingExpression, bool originalBodyNested) Line 42\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol methodSymbol, int methodOrdinal, ref Microsoft.CodeAnalysis.CSharp.Binder.ProcessedFieldInitializers processedInitializers, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState) Line 1067\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol containingType) Line 518\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.VisitNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol symbol, Microsoft.CodeAnalysis.CSharp.TypeCompilationState arg) Line 396\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.Accept<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object>(Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object> visitor, Microsoft.CodeAnalysis.CSharp.TypeCompilationState argument) Line 572\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamespace(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol symbol) Line 375\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBeingBuiltOpt, bool emittingPdb, bool emitTestCoverageData, bool hasDeclarationErrors, bool emitMethodBodies, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol> filterOpt, System.Threading.CancellationToken cancellationToken) Line 156\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnosticsForAllMethodBodies(Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool doLowering, System.Threading.CancellationToken cancellationToken) Line 2415\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnosticsWithoutFiltering(Microsoft.CodeAnalysis.CompilationStage stage, bool includeEarlierStages, Microsoft.CodeAnalysis.DiagnosticBag builder, System.Threading.CancellationToken cancellationToken) Line 2388\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnostics(Microsoft.CodeAnalysis.CompilationStage stage, bool includeEarlierStages, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Threading.CancellationToken cancellationToken) Line 2302\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnostics(Microsoft.CodeAnalysis.CompilationStage stage, bool includeEarlierStages, System.Threading.CancellationToken cancellationToken) Line 2294\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnostics(System.Threading.CancellationToken cancellationToken) Line 2288\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.VerifyUsedAssemblyReferences(System.Func<Microsoft.CodeAnalysis.CSharp.CSharpCompilation> createCompilationLambda) Line 1060\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationCore(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable, Microsoft.CodeAnalysis.CSharp.MessageID? experimentalFeature) Line 1050\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateEmptyCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1008\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 999\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Semantic.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.SyntaxBinderTests.BinaryIntrinsicSymbols2() Line 7562\tC#\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39975","RelatedDescription":"Open issue \"An assert tasked to intercept unconverted expressions is firing for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.SyntaxBinderTests.BinaryIntrinsicSymbols2 unit-test\" (#39975)"},{"Id":"527378241","IsPullRequest":true,"CreatedAt":"2019-11-22T19:36:37","Actor":"CyrusNajmabadi","Number":"39974","RawContent":null,"Title":"Pool intermediary allocations when generating unique names for features.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/24548","Url":"https://github.com/dotnet/roslyn/pull/39974","RelatedDescription":"Open PR \"Pool intermediary allocations when generating unique names for features.\" (#39974)"},{"Id":"527370192","IsPullRequest":false,"CreatedAt":"2019-11-22T19:18:06","Actor":"AlekseyTs","Number":"39971","RawContent":null,"Title":"An assert is firing for scenario in BadIteratorReturnInRefReturningMethod unit-test.","State":"open","Body":"Add ```.GetEmitDiagnostics();``` at the end of the ```Microsoft.CodeAnalysis.CSharp.UnitTests.Semantics.RefLocalsAndReturnsTests.BadIteratorReturnInRefReturningMethod``` unit-test and run it.\r\n\r\nObserved:\r\n```\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(string message, string detailMessage) Line 24\tC#\r\n \tSystem.dll!System.Diagnostics.TraceListener.Fail(string message) Line 181\tC#\r\n \tSystem.dll!System.Diagnostics.TraceInternal.Fail(string message) Line 225\tC#\r\n \tSystem.dll!System.Diagnostics.Debug.Assert(bool condition) Line 100\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory.Return(Microsoft.CodeAnalysis.CSharp.BoundExpression expression) Line 468\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.IteratorRewriter.GenerateEnumeratorImplementation() Line 231\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.IteratorRewriter.GenerateMethodImplementations() Line 179\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.StateMachineRewriter.Rewrite() Line 120\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.IteratorRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement body, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator slotAllocatorOpt, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, out Microsoft.CodeAnalysis.CSharp.IteratorStateMachine stateMachineType) Line 84\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CSharp.BoundStatement body, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState, bool instrumentForDynamicAnalysis, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider debugDocumentProvider, ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeGen.SourceSpan> dynamicAnalysisSpans, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, ref Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator lazyVariableSlotAllocator, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo> lambdaDebugInfoBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo> closureDebugInfoBuilder, out Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol stateMachineTypeOpt) Line 1380\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol methodSymbol, int methodOrdinal, ref Microsoft.CodeAnalysis.CSharp.Binder.ProcessedFieldInitializers processedInitializers, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState) Line 1138\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol containingType) Line 518\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.VisitNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol symbol, Microsoft.CodeAnalysis.CSharp.TypeCompilationState arg) Line 396\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.Accept<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object>(Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object> visitor, Microsoft.CodeAnalysis.CSharp.TypeCompilationState argument) Line 572\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamespace(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol symbol) Line 375\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBeingBuiltOpt, bool emittingPdb, bool emitTestCoverageData, bool hasDeclarationErrors, bool emitMethodBodies, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol> filterOpt, System.Threading.CancellationToken cancellationToken) Line 156\tC#\r\n>\tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CompileMethods(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBuilder, bool emittingPdb, bool emitMetadataOnly, bool emitTestCoverageData, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.Symbols.ISymbolInternal> filterOpt, System.Threading.CancellationToken cancellationToken) Line 2771\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2497\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c) Line 388\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.VerifyUsedAssemblyReferences(System.Func<Microsoft.CodeAnalysis.CSharp.CSharpCompilation> createCompilationLambda) Line 1061\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationCore(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable, Microsoft.CodeAnalysis.CSharp.MessageID? experimentalFeature) Line 1050\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateEmptyCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1008\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 999\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationWithMscorlib46(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName) Line 904\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Semantic.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.Semantics.RefLocalsAndReturnsTests.BadIteratorReturnInRefReturningMethod() Line 3468\tC#\r\n```\r\n\r\nWe probably shouldn't do lowering in this scenario since we have rather serious binding errors:\r\n```\r\n// (7,28): error CS8089: The body of 'C.ObjEnumerator()' cannot be an iterator block because 'C.ObjEnumerator()' returns by reference\r\n//     public ref IEnumerator ObjEnumerator()\r\nDiagnostic(ErrorCode.ERR_BadIteratorReturnRef, \"ObjEnumerator\").WithArguments(\"C.ObjEnumerator()\").WithLocation(7, 28),\r\n// (12,28): error CS8089: The body of 'C.ObjEnumerable()' cannot be an iterator block because 'C.ObjEnumerable()' returns by reference\r\n//     public ref IEnumerable ObjEnumerable()\r\nDiagnostic(ErrorCode.ERR_BadIteratorReturnRef, \"ObjEnumerable\").WithArguments(\"C.ObjEnumerable()\").WithLocation(12, 28),\r\n// (17,33): error CS8089: The body of 'C.GenEnumerator()' cannot be an iterator block because 'C.GenEnumerator()' returns by reference\r\n//     public ref IEnumerator<int> GenEnumerator()\r\nDiagnostic(ErrorCode.ERR_BadIteratorReturnRef, \"GenEnumerator\").WithArguments(\"C.GenEnumerator()\").WithLocation(17, 33),\r\n// (22,33): error CS8089: The body of 'C.GenEnumerable()' cannot be an iterator block because 'C.GenEnumerable()' returns by reference\r\n//     public ref IEnumerable<int> GenEnumerable()\r\nDiagnostic(ErrorCode.ERR_BadIteratorReturnRef, \"GenEnumerable\").WithArguments(\"C.GenEnumerable()\").WithLocation(22, 33));\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39971","RelatedDescription":"Open issue \"An assert is firing for scenario in BadIteratorReturnInRefReturningMethod unit-test.\" (#39971)"},{"Id":"527356383","IsPullRequest":false,"CreatedAt":"2019-11-22T18:45:49","Actor":"AlekseyTs","Number":"39970","RawContent":null,"Title":"UnexpectedValue exception is thrown for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenAsyncIteratorTests.AsyncIterator_WithoutAwait_WithoutAsync unit-test","State":"open","Body":"Add ```comp.GetEmitDiagnostics();``` at the end of the unit-test and run it.\r\n\r\nObserved:\r\n```\r\n \tMicrosoft.CodeAnalysis.dll!Roslyn.Utilities.ExceptionUtilities.UnexpectedValue(object o) Line 20\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.IteratorRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement body, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator slotAllocatorOpt, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, out Microsoft.CodeAnalysis.CSharp.IteratorStateMachine stateMachineType) Line 73\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CSharp.BoundStatement body, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState, bool instrumentForDynamicAnalysis, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider debugDocumentProvider, ref System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeGen.SourceSpan> dynamicAnalysisSpans, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, ref Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator lazyVariableSlotAllocator, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo> lambdaDebugInfoBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo> closureDebugInfoBuilder, out Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol stateMachineTypeOpt) Line 1380\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol methodSymbol, int methodOrdinal, ref Microsoft.CodeAnalysis.CSharp.Binder.ProcessedFieldInitializers processedInitializers, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState) Line 1138\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol containingType) Line 518\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.VisitNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol symbol, Microsoft.CodeAnalysis.CSharp.TypeCompilationState arg) Line 396\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.Accept<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object>(Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor<Microsoft.CodeAnalysis.CSharp.TypeCompilationState, object> visitor, Microsoft.CodeAnalysis.CSharp.TypeCompilationState argument) Line 572\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamespace(Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol symbol) Line 375\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBeingBuiltOpt, bool emittingPdb, bool emitTestCoverageData, bool hasDeclarationErrors, bool emitMethodBodies, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.CSharp.Symbol> filterOpt, System.Threading.CancellationToken cancellationToken) Line 156\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CompileMethods(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBuilder, bool emittingPdb, bool emitMetadataOnly, bool emitTestCoverageData, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate<Microsoft.CodeAnalysis.Symbols.ISymbolInternal> filterOpt, System.Threading.CancellationToken cancellationToken) Line 2771\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2497\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c) Line 388\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.VerifyUsedAssemblyReferences(System.Func<Microsoft.CodeAnalysis.CSharp.CSharpCompilation> createCompilationLambda) Line 1061\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationCore(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable, Microsoft.CodeAnalysis.CSharp.MessageID? experimentalFeature) Line 1050\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateEmptyCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1008\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 999\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationWithTasksExtensions(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName) Line 988\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Emit.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenAsyncIteratorTests.CreateCompilationWithAsyncIterator(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options) Line 126\tC#\r\n>\tMicrosoft.CodeAnalysis.CSharp.Emit.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenAsyncIteratorTests.AsyncIterator_WithoutAwait_WithoutAsync() Line 1894\tC#\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39970","RelatedDescription":"Open issue \"UnexpectedValue exception is thrown for scenario in Microsoft.CodeAnalysis.CSharp.UnitTests.CodeGen.CodeGenAsyncIteratorTests.AsyncIterator_WithoutAwait_WithoutAsync unit-test\" (#39970)"},{"Id":"527348923","IsPullRequest":false,"CreatedAt":"2019-11-22T18:30:18","Actor":"AlekseyTs","Number":"39969","RawContent":null,"Title":"Compiler lacks proper checks for existence of an Extension attribute when it attempts to synthesize one on an assembly ","State":"open","Body":"Add ```appCompilation.GetEmitDiagnostics();``` at the end of ```Microsoft.CodeAnalysis.CSharp.UnitTests.AssemblyAttributeTests.Bug16910``` unit-test and run it.\r\n\r\nObserve an assert thrown due to the lack of an Extension attribute type:\r\n```\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(string message, string detailMessage) Line 24\tC#\r\n \tSystem.dll!System.Diagnostics.TraceListener.Fail(string message) Line 181\tC#\r\n \tSystem.dll!System.Diagnostics.TraceInternal.Fail(string message) Line 225\tC#\r\n \tSystem.dll!System.Diagnostics.Debug.Assert(bool condition) Line 100\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpCompilation.TrySynthesizeAttribute(Microsoft.CodeAnalysis.WellKnownMember constructor, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TypedConstant> arguments, System.Collections.Immutable.ImmutableArray<System.Collections.Generic.KeyValuePair<Microsoft.CodeAnalysis.WellKnownMember, Microsoft.CodeAnalysis.TypedConstant>> namedArguments, bool isOptionalUse) Line 399\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol.AddSynthesizedAttributes(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBuilder, ref Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData> attributes) Line 1752\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol.GetCustomAttributesToEmit(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBuilder, bool emittingRefAssembly, bool emittingAssemblyAttributesInNetModule) Line 18\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder.GetSourceAssemblyAttributes(bool isRefAssembly) Line 113\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.ReferenceIndexer.Visit(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder module) Line 26\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.MetadataWriter.CreateIndices() Line 492\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.MetadataWriter.BuildMetadataAndIL(Microsoft.Cci.PdbWriter nativePdbWriterOpt, System.Reflection.Metadata.BlobBuilder ilBuilder, System.Reflection.Metadata.BlobBuilder mappedFieldDataBuilder, System.Reflection.Metadata.BlobBuilder managedResourceDataBuilder, out System.Reflection.Metadata.Blob mvidFixup, out System.Reflection.Metadata.Blob mvidStringFixup) Line 1769\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.PeWriter.WritePeToStream(Microsoft.CodeAnalysis.Emit.EmitContext context, Microsoft.CodeAnalysis.CommonMessageProvider messageProvider, System.Func<System.IO.Stream> getPeStream, System.Func<System.IO.Stream> getPortablePdbStreamOpt, Microsoft.Cci.PdbWriter nativePdbWriterOpt, string pdbPathOpt, bool metadataOnly, bool isDeterministic, bool emitTestCoverageData, System.Security.Cryptography.RSAParameters? privateKeyOpt, System.Threading.CancellationToken cancellationToken) Line 67\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.SerializePeToStream(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBeingBuilt, Microsoft.CodeAnalysis.DiagnosticBag metadataDiagnostics, Microsoft.CodeAnalysis.CommonMessageProvider messageProvider, System.Func<System.IO.Stream> getPeStream, System.Func<System.IO.Stream> getMetadataPeStreamOpt, System.Func<System.IO.Stream> getPortablePdbStreamOpt, Microsoft.Cci.PdbWriter nativePdbWriterOpt, string pdbPathOpt, bool metadataOnly, bool includePrivateMembers, bool isDeterministic, bool emitTestCoverageData, System.Security.Cryptography.RSAParameters? privateKeyOpt, System.Threading.CancellationToken cancellationToken) Line 2880\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.SerializeToPeStream(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBeingBuilt, Microsoft.CodeAnalysis.Compilation.EmitStreamProvider peStreamProvider, Microsoft.CodeAnalysis.Compilation.EmitStreamProvider metadataPEStreamProvider, Microsoft.CodeAnalysis.Compilation.EmitStreamProvider pdbStreamProvider, System.Func<Microsoft.DiaSymReader.ISymWriterMetadataProvider, Microsoft.DiaSymReader.SymUnmanagedWriter> testSymWriterFactory, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool metadataOnly, bool includePrivateMembers, bool emitTestCoverageData, string pePdbFilePath, System.Security.Cryptography.RSAParameters? privateKeyOpt, System.Threading.CancellationToken cancellationToken) Line 2779\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2545\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.CSharp.CSharpCompilation>(Microsoft.CodeAnalysis.CSharp.CSharpCompilation c) Line 388\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.VerifyUsedAssemblyReferences(System.Func<Microsoft.CodeAnalysis.CSharp.CSharpCompilation> createCompilationLambda) Line 1061\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationCore(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable, Microsoft.CodeAnalysis.CSharp.MessageID? experimentalFeature) Line 1050\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateEmptyCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 1008\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilation(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, string assemblyName, string sourceFileName, bool skipUsesIsNullable) Line 999\tC#\r\n \tMicrosoft.CodeAnalysis.CSharp.Test.Utilities.dll!Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CreateCompilationWithMscorlib40(Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestSource source, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references, Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions options, Microsoft.CodeAnalysis.CSharp.CSharpParseOptions parseOptions, string assemblyName, string sourceFileName) Line 878\tC#\r\n>\tMicrosoft.CodeAnalysis.CSharp.Emit.UnitTests.dll!Microsoft.CodeAnalysis.CSharp.UnitTests.AssemblyAttributeTests.Bug16910() Line 1678\tC#\r\n```\r\n\r\nAt the very least we should avoid the assert firing if we don't make this scenario into an error.","Url":"https://github.com/dotnet/roslyn/issues/39969","RelatedDescription":"Open issue \"Compiler lacks proper checks for existence of an Extension attribute when it attempts to synthesize one on an assembly \" (#39969)"},{"Id":"527348504","IsPullRequest":false,"CreatedAt":"2019-11-22T18:29:23","Actor":"CyrusNajmabadi","Number":"39968","RawContent":null,"Title":"SyntaxGenerator.LocalDeclaratoinStatement should be updated to add 'add using' attribute.","State":"open","Body":"From discussion in PR here: https://github.com/dotnet/roslyn/pull/39958#discussion_r349699500","Url":"https://github.com/dotnet/roslyn/issues/39968","RelatedDescription":"Open issue \"SyntaxGenerator.LocalDeclaratoinStatement should be updated to add 'add using' attribute.\" (#39968)"},{"Id":"527328068","IsPullRequest":false,"CreatedAt":"2019-11-22T17:41:41","Actor":"mavasani","Number":"39967","RawContent":null,"Title":"Re-enable DocumentationComment tests skipped due to inferred indentation overriding UseTabs option","State":"open","Body":"See https://github.com/dotnet/roslyn/pull/39914#issuecomment-557561139 for details\r\n\r\nSkipped tests:\r\n1. Microsoft.CodeAnalysis.Editor.VisualBasic.UnitTests.DocumentationComments.DocumentationCommentTests.TestPressingEnter_Indentation5_UseTabs\r\n2. Microsoft.CodeAnalysis.Editor.VisualBasic.UnitTests.DocumentationComments.DocumentationCommentTests.TestOpenLineBelow4_Tabs\r\n3. Microsoft.CodeAnalysis.Editor.VisualBasic.UnitTests.DocumentationComments.DocumentationCommentTests.TestOpenLineAbove4_Tabs\r\n4. Microsoft.CodeAnalysis.Editor.CSharp.UnitTests.DocumentationComments.DocumentationCommentTests.TestOpenLineAbove4_Tabs\r\n5. Microsoft.CodeAnalysis.Editor.CSharp.UnitTests.DocumentationComments.DocumentationCommentTests.TestOpenLineBelow4_Tabs\r\n6. Microsoft.CodeAnalysis.Editor.CSharp.UnitTests.DocumentationComments.DocumentationCommentTests.PressingEnter_Indentation5_UseTabs\r\n","Url":"https://github.com/dotnet/roslyn/issues/39967","RelatedDescription":"Open issue \"Re-enable DocumentationComment tests skipped due to inferred indentation overriding UseTabs option\" (#39967)"},{"Id":"527157135","IsPullRequest":true,"CreatedAt":"2019-11-22T17:00:35","Actor":"dotnet-bot","Number":"39963","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39963","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39963)"},{"Id":"527157179","IsPullRequest":true,"CreatedAt":"2019-11-22T13:37:55","Actor":"dotnet-bot","Number":"39964","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39964","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#39964)"},{"Id":"527195500","IsPullRequest":false,"CreatedAt":"2019-11-22T13:28:36","Actor":"LokiMidgard","Number":"39966","RawContent":null,"Title":"Unexpected nullable warning on Property initialisation and [AllowNull]","State":"open","Body":"**Version Used**: \r\nVS 16.3.10\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nusing System;\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nnamespace ConsoleApp\r\n{\r\n\r\n    public class Foo\r\n    {\r\n        private string? bar;\r\n\r\n        [AllowNull]\r\n        public string Bar { get => this.bar ?? string.Empty; set => this.bar = value; }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var f1 = new Foo()\r\n            {\r\n                Bar = null // CS8625 \r\n            };\r\n            var f2 = new Foo();\r\n            f2.Bar = null; // No Warning\r\n        }\r\n\r\n    }\r\n}\r\n```\r\n**Expected Behavior**:\r\nf1.Bar will be assigned without warning in the propertery initialisation.\r\n**Actual Behavior**:\r\nShows a Warning in property initilizer.","Url":"https://github.com/dotnet/roslyn/issues/39966","RelatedDescription":"Open issue \"Unexpected nullable warning on Property initialisation and [AllowNull]\" (#39966)"},{"Id":"527186040","IsPullRequest":true,"CreatedAt":"2019-11-22T13:08:53","Actor":"dotnet-maestro[bot]","Number":"39965","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191121.10\r\n- **Date Produced**: 11/22/2019 3:08 AM\r\n- **Commit**: 6ade65ab9d2d63b3fcb73647fc109e2b36ffdc80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19571.10\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/39965","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#39965)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"526898250","IsPullRequest":true,"CreatedAt":"2019-11-22T04:31:51","Actor":"cshung","Number":"7886","RawContent":null,"Title":"Revert \"Support custom modifier for method signature\"","State":"closed","Body":"This reverts commit 5575cc060201ad462809f48db25a56c35e4eaca0.","Url":"https://github.com/dotnet/corert/pull/7886","RelatedDescription":"Closed or merged PR \"Revert \"Support custom modifier for method signature\"\" (#7886)"},{"Id":"526275945","IsPullRequest":true,"CreatedAt":"2019-11-21T23:19:25","Actor":"cshung","Number":"7884","RawContent":null,"Title":"[WIP] Porting changes from CoreCLR","State":"closed","Body":"WIP - this port minimal changes from CoreCLR to allow `EcmaSignatureParser.cs` to have identical content with the CoreCLR (now dotnet/runtime) copy.","Url":"https://github.com/dotnet/corert/pull/7884","RelatedDescription":"Closed or merged PR \"[WIP] Porting changes from CoreCLR\" (#7884)"},{"Id":"526893131","IsPullRequest":true,"CreatedAt":"2019-11-21T23:11:56","Actor":"yowl","Number":"7885","RawContent":null,"Title":"Wasm: Adds a test and a box for callvirt on value types where TryResolveCon…","State":"open","Body":"…straintMethodApprox does not return a method.\r\n\r\nConstrained calls on value types to methods like ToString were not boxing the struct and hence failing.","Url":"https://github.com/dotnet/corert/pull/7885","RelatedDescription":"Open PR \"Wasm: Adds a test and a box for callvirt on value types where TryResolveCon…\" (#7885)"},{"Id":"523136354","IsPullRequest":true,"CreatedAt":"2019-11-15T00:35:44","Actor":"Dotnet-GitSync-Bot","Number":"7883","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @elinor-fung @john-h-k @manandre @tannergooding @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7883","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7883)"},{"Id":"522914006","IsPullRequest":false,"CreatedAt":"2019-11-14T15:00:12","Actor":"AArnott","Number":"7882","RawContent":null,"Title":"UWP .NET Native compilation fails when nutc_driver.exe returns exit code -2147483645","State":"open","Body":"**Repro steps**\r\n\r\n1. Create a new UWP Test project in VS 2019\r\n1. Switch to the Release|x86 solution configuration\r\n1. Build (which succeeds, but with many warnings about a missing assembly)\r\n1. Install the `System.Xml.XPath.XmlDocument` package. Build again. No warnings this time. ❓ Why is this package necessary in the default proejct yet somehow not included in the default project?\r\n1. Set the `AllowUnsafeBlocks=true` msbuild property.\r\n1. Add this method to the UWP test project (or any dependency project/package):\r\n\r\n    ```cs\r\n        private static IntPtr GetAddress(object value)\r\n        {\r\n            unsafe\r\n            {\r\n                TypedReference tr = __makeref(value);\r\n                return **(IntPtr**)(&tr);\r\n            }\r\n        }\r\n    ```\r\n\r\n1. Build again.\r\n\r\n**Expected**\r\n\r\nBuild succeeds.\r\n\r\n**Actual**\r\n\r\nBuild fails with:\r\n\r\n> C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\UWPUnitTestProject2.rsp\"' returned exit code -2147483645\r\n\r\n\r\nFull log follows\r\n\r\n```\r\n1>------ Build started: Project: UWPUnitTestProject2, Configuration: Release x86 ------\r\n1>  UWPUnitTestProject2 -> D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\bin\\x86\\Release\\UWPUnitTestProject2.exe\r\n1>  Processing application code\r\n1>  Computing application closure and generating interop code\r\n1>    Loading 139 modules...\r\n1>    Generating code...\r\n1>    Interop code generated.\r\n1>  Generating serialization code\r\n1>  Compiling interop code\r\n1>  Generating System.Reflection.DispatchProxy proxy code.\r\n1>  Cleaning up unreferenced code\r\n1>  Generating native code\r\n1>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\UWPUnitTestProject2.rsp\"' returned exit code -2147483645\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```","Url":"https://github.com/dotnet/corert/issues/7882","RelatedDescription":"Open issue \"UWP .NET Native compilation fails when nutc_driver.exe returns exit code -2147483645\" (#7882)"},{"Id":"522521151","IsPullRequest":true,"CreatedAt":"2019-11-14T02:41:52","Actor":"jkotas","Number":"7881","RawContent":null,"Title":"Delete dead files","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7881","RelatedDescription":"Closed or merged PR \"Delete dead files\" (#7881)"},{"Id":"522441624","IsPullRequest":false,"CreatedAt":"2019-11-13T20:02:05","Actor":"Shadow4walker","Number":"7880","RawContent":null,"Title":"HttpWebRequest/HttpWebResponse Not Working!","State":"open","Body":"HttpWebRequest request= with Headers ....etc\r\nvar httpWebResponse = (HttpWebResponse) await request.GetResponseAsync()\r\nnever passed this code >fail fast!! idk what to put in the rd.xml or if event i should put anything there!","Url":"https://github.com/dotnet/corert/issues/7880","RelatedDescription":"Open issue \"HttpWebRequest/HttpWebResponse Not Working!\" (#7880)"},{"Id":"518910070","IsPullRequest":true,"CreatedAt":"2019-11-12T22:51:55","Actor":"cshung","Number":"7869","RawContent":null,"Title":"Adding signature matching unit test","State":"closed","Body":"This unit test is meant to validate https://github.com/dotnet/coreclr/pull/27676 \r\n\r\n@dotnet/crossgen-contrib ","Url":"https://github.com/dotnet/corert/pull/7869","RelatedDescription":"Closed or merged PR \"Adding signature matching unit test\" (#7869)"},{"Id":"521355526","IsPullRequest":true,"CreatedAt":"2019-11-12T08:01:33","Actor":"Dotnet-GitSync-Bot","Number":"7879","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @ts2do @elinor-fung","Url":"https://github.com/dotnet/corert/pull/7879","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7879)"},{"Id":"521113889","IsPullRequest":true,"CreatedAt":"2019-11-12T06:24:24","Actor":"Dotnet-GitSync-Bot","Number":"7878","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7878","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7878)"},{"Id":"520572011","IsPullRequest":true,"CreatedAt":"2019-11-10T14:20:44","Actor":"jkotas","Number":"7877","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7877","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7877)"},{"Id":"520423064","IsPullRequest":true,"CreatedAt":"2019-11-09T19:45:59","Actor":"Dotnet-GitSync-Bot","Number":"7876","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jnm2 @rob313663 @CoffeeFlux","Url":"https://github.com/dotnet/corert/pull/7876","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7876)"},{"Id":"520311915","IsPullRequest":true,"CreatedAt":"2019-11-09T13:00:37","Actor":"Dotnet-GitSync-Bot","Number":"7875","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7875","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7875)"},{"Id":"520020083","IsPullRequest":true,"CreatedAt":"2019-11-08T19:44:36","Actor":"jkotas","Number":"7874","RawContent":null,"Title":"Port CoreCLR change","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7874","RelatedDescription":"Closed or merged PR \"Port CoreCLR change\" (#7874)"},{"Id":"519847099","IsPullRequest":true,"CreatedAt":"2019-11-08T13:36:23","Actor":"Dotnet-GitSync-Bot","Number":"7873","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @TamarChristinaArm @tannergooding @CoffeeFlux @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7873","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7873)"},{"Id":"519029005","IsPullRequest":true,"CreatedAt":"2019-11-08T06:54:52","Actor":"Dotnet-GitSync-Bot","Number":"7870","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7870","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7870)"},{"Id":"519547667","IsPullRequest":true,"CreatedAt":"2019-11-08T06:54:33","Actor":"yowl","Number":"7872","RawContent":null,"Title":"Wasm: Fix compilation error for `build wasm`","State":"closed","Body":"`build wasm` was failing as mentioned at https://github.com/dotnet/corert/pull/7609#issuecomment-527250119.  Extend the `#if` to include `_WASM_` which allows compilation to succeed.","Url":"https://github.com/dotnet/corert/pull/7872","RelatedDescription":"Closed or merged PR \"Wasm: Fix compilation error for `build wasm`\" (#7872)"},{"Id":"519466012","IsPullRequest":false,"CreatedAt":"2019-11-07T19:28:54","Actor":"erherhh4herh","Number":"7871","RawContent":null,"Title":"build.cmd Setting build variables failed.","State":"open","Body":"Whenever I execute build.cmd from \"x64 Native Tools Command Prompt for VS 2017\" I get this message:\r\n\r\nChecking pre-requisites...\r\n\r\nThe system cannot find the batch label specified - CheckMSBuild\r\nSetting build variables failed.\r\n\r\nIf it makes any difference, I clone the repo using `git clone --recursive https://github.com/dotnet/corert.git`.\r\n\r\nI have cmake-3.16.0-rc3 installed, I am on windows 10 pro x64 1903, using visual studio 2017.\r\n\r\nAny help is greatly appreciated,\r\nerherhh4herh.","Url":"https://github.com/dotnet/corert/issues/7871","RelatedDescription":"Open issue \"build.cmd Setting build variables failed.\" (#7871)"},{"Id":"518713147","IsPullRequest":true,"CreatedAt":"2019-11-07T04:02:17","Actor":"Dotnet-GitSync-Bot","Number":"7868","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @elinor-fung","Url":"https://github.com/dotnet/corert/pull/7868","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7868)"},{"Id":"518273496","IsPullRequest":true,"CreatedAt":"2019-11-06T14:36:00","Actor":"Dotnet-GitSync-Bot","Number":"7867","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7867","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7867)"},{"Id":"517973637","IsPullRequest":true,"CreatedAt":"2019-11-05T21:39:36","Actor":"Dotnet-GitSync-Bot","Number":"7866","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @JesperTreetop","Url":"https://github.com/dotnet/corert/pull/7866","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7866)"},{"Id":"517276028","IsPullRequest":true,"CreatedAt":"2019-11-05T19:15:32","Actor":"Dotnet-GitSync-Bot","Number":"7865","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @TamarChristinaArm","Url":"https://github.com/dotnet/corert/pull/7865","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7865)"},{"Id":"516882257","IsPullRequest":true,"CreatedAt":"2019-11-03T22:07:03","Actor":"Dotnet-GitSync-Bot","Number":"7864","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7864","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7864)"},{"Id":"516869037","IsPullRequest":true,"CreatedAt":"2019-11-03T20:14:49","Actor":"Dotnet-GitSync-Bot","Number":"7863","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7863","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7863)"},{"Id":"516829077","IsPullRequest":true,"CreatedAt":"2019-11-03T18:21:29","Actor":"Dotnet-GitSync-Bot","Number":"7862","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7862","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7862)"},{"Id":"516781561","IsPullRequest":false,"CreatedAt":"2019-11-03T14:35:21","Actor":"josephmoresena","Number":"7860","RawContent":null,"Title":"Error compilling console app with System.Data.SqlClient on Linux","State":"closed","Body":"I'm getting the following error when I'm trying to compile a simple console app which connects to a Sql Server database in Ubuntu 19.10.\r\n\r\n`  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__ImportPrincipalName':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/BooleanStorage.cs:180: undefined reference to `NetSecurityNative_ImportPrincipalName'\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__InitSecContext_0':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/ByteStorage.cs:162: undefined reference to `NetSecurityNative_InitSecContextEx'`","Url":"https://github.com/dotnet/corert/issues/7860","RelatedDescription":"Closed issue \"Error compilling console app with System.Data.SqlClient on Linux\" (#7860)"},{"Id":"516817732","IsPullRequest":true,"CreatedAt":"2019-11-03T13:34:02","Actor":"Dotnet-GitSync-Bot","Number":"7861","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7861","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7861)"},{"Id":"516763323","IsPullRequest":true,"CreatedAt":"2019-11-03T00:42:36","Actor":"Dotnet-GitSync-Bot","Number":"7859","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7859","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7859)"},{"Id":"516597160","IsPullRequest":true,"CreatedAt":"2019-11-02T14:00:46","Actor":"Dotnet-GitSync-Bot","Number":"7858","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7858","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7858)"},{"Id":"515738596","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:00","Actor":"Dotnet-GitSync-Bot","Number":"7857","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7857)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"527510977","IsPullRequest":true,"CreatedAt":"2019-11-23T05:00:29","Actor":"dotnet-maestro[bot]","Number":"3961","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.6\r\n- **Date Produced**: 11/23/2019 3:51 AM\r\n- **Commit**: 97a18215497e8b54d0773452b2d77802657b7fad\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19572.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3961","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3961)"},{"Id":"527502218","IsPullRequest":true,"CreatedAt":"2019-11-23T03:20:24","Actor":"dotnet-maestro-bot","Number":"3960","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wli3\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3960","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#3960)"},{"Id":"527417691","IsPullRequest":true,"CreatedAt":"2019-11-23T03:16:55","Actor":"wli3","Number":"3956","RawContent":null,"Title":"update branding 3.1.101 servicing","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3956","RelatedDescription":"Closed or merged PR \"update branding 3.1.101 servicing\" (#3956)"},{"Id":"527465986","IsPullRequest":true,"CreatedAt":"2019-11-23T02:17:40","Actor":"dotnet-maestro[bot]","Number":"3958","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3958","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3958)"},{"Id":"527466091","IsPullRequest":true,"CreatedAt":"2019-11-22T23:41:56","Actor":"dotnet-maestro[bot]","Number":"3959","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3959","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3959)"},{"Id":"527452448","IsPullRequest":true,"CreatedAt":"2019-11-22T22:53:20","Actor":"sfoslund","Number":"3957","RawContent":null,"Title":"Add Incremental publishing","State":"open","Body":"Adding incremental publishing and test coverage for the following cases:\r\n- Single file publishes\r\n- Renaming project between publishes\r\n- Trimmed publishes\r\n- MVC project publishes\r\n- Custom output directories","Url":"https://github.com/dotnet/sdk/pull/3957","RelatedDescription":"Open PR \"Add Incremental publishing\" (#3957)"},{"Id":"527379700","IsPullRequest":true,"CreatedAt":"2019-11-22T19:40:02","Actor":"dotnet-maestro-bot","Number":"3955","RawContent":null,"Title":"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'","State":"open","Body":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3955","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#3955)"},{"Id":"525952675","IsPullRequest":true,"CreatedAt":"2019-11-22T19:24:26","Actor":"mmitche","Number":"3944","RawContent":null,"Title":"[release/3.0.1xx] Update branding for 3.0.102","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3944","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update branding for 3.0.102\" (#3944)"},{"Id":"525811976","IsPullRequest":false,"CreatedAt":"2019-11-22T16:17:17","Actor":"clstr","Number":"3940","RawContent":null,"Title":"NETSDK1045 Can't build 3.0 applications in CLI or VS2019 16.3.9","State":"closed","Body":"I had VS2019 installed, but I was still building dotnet applications 2.1, i decided to try out dotnet 3.0 and Visual Studio 2019 lets me create a 3.0 template with React with Redux, I try to run the project it fails stating, even trying a simple console app gives the same build error.\r\n\r\n\"An error occurred attempting to determine the process id of dotnet.exe which is hosting your application. a task was canceled\"\r\n\r\nIn the project GUI properties Target Framework is blank and my only options are\r\n\r\n.Net Core 1.0\r\n.Net Core 1.1\r\n.Net Core 2.0\r\n.Net Core 2.1\r\n\r\nI even went out and downloaded the 3.0.101 SDK x64, still blank.\r\n\r\n![vs2019](https://user-images.githubusercontent.com/1195526/69243492-319ffd00-0b71-11ea-931c-10ae5c0cb05b.png)\r\n\r\n\r\nI tried building the application in CLI, and i get a different message\r\n\r\ndotnet build\r\n```\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.1.802\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(137,5): error NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. [C:\\Users\\palomins\\source\\repos\\DotNet3ConsoleApp\\DotNet3ConsoleApp\\DotNet3ConsoleApp.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\ndotnet --info\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.802\r\n Commit:    177d0b2525\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.802\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.1\r\n  Commit:  32085cbc72\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.107 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nI have tried uninstalling/reinstalling the 3.0SDKs and Visual Studio 2019, I am not sure what else to try.\r\n\r\nThe only thing i see is when i build via cli i see something about this path being referenced for some reason\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.802\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\r\n```\r\n\r\nand in the info printout\r\n\r\n```\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.802\\\r\n```\r\nBut i have no idea how to change the Base Path, and i don't think i'm using any global.json files in any of my projects.","Url":"https://github.com/dotnet/sdk/issues/3940","RelatedDescription":"Closed issue \"NETSDK1045 Can't build 3.0 applications in CLI or VS2019 16.3.9\" (#3940)"},{"Id":"527182653","IsPullRequest":true,"CreatedAt":"2019-11-22T14:26:52","Actor":"dotnet-maestro[bot]","Number":"3954","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191121.10\r\n- **Date Produced**: 11/22/2019 3:08 AM\r\n- **Commit**: 6ade65ab9d2d63b3fcb73647fc109e2b36ffdc80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19571.10\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3954","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3954)"},{"Id":"526939335","IsPullRequest":true,"CreatedAt":"2019-11-22T03:20:52","Actor":"dotnet-maestro[bot]","Number":"3953","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.5\r\n- **Date Produced**: 11/22/2019 12:55 AM\r\n- **Commit**: 4e1bb23ca12cfe3de0b7e834872ed7327377d420\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3953","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3953)"},{"Id":"526784083","IsPullRequest":false,"CreatedAt":"2019-11-22T00:28:30","Actor":"DerAlbertCom","Number":"3951","RawContent":null,"Title":"SDK 3.0.101 is not delivered via Visual Studio","State":"closed","Body":"A promise of the SDK 3.0 was that a new version of an patch level SDK will uninstall the the previous Version. Great, less hassle keeping the machine cleaner.\r\n\r\nSo I downloaded the SDK (main download page), installed it and, of course SDK 3.0.100 still present on the machine.\r\n![image](https://user-images.githubusercontent.com/136992/69367812-42e42900-0c99-11ea-9f18-caa18c4c47d1.png)\r\n\r\nSo there is a Visual Studio Version of the SDK and an \"other\" Version of the SDK. Or what is happening here? \r\n\r\nAnd why is Visual Studio (Released 2019/10/20) not updating the SDK (Released 2019/10/19). \r\n\r\nThe SDK Update mess is really confusing. \r\n","Url":"https://github.com/dotnet/sdk/issues/3951","RelatedDescription":"Closed issue \"SDK 3.0.101 is not delivered via Visual Studio\" (#3951)"},{"Id":"526799014","IsPullRequest":true,"CreatedAt":"2019-11-21T19:35:11","Actor":"dotnet-maestro[bot]","Number":"3952","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.05\r\n- **Date Produced**: 11/23/2019 2:41 AM\r\n- **Commit**: 84c8bdc161ce5f1e414eb76993a8ec388dc6f167\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19572-05\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3952","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3952)"},{"Id":"526780721","IsPullRequest":false,"CreatedAt":"2019-11-21T18:57:01","Actor":"DerAlbertCom","Number":"3950","RawContent":null,"Title":"SDK 2.2.403 is missing","State":"open","Body":"Your SDK Upgrade Rules and Policies are getting not better.\r\n\r\nThere is no SDK 2.2.403 (for VS 16.2 and V16.3) and which includes Runtime 2.2.8. With that in mind the should not Specificy an ASP.NET Core Version in the .csproj means that even with Runtime 2.2.8 installed only Runtime 2.2.7 will be used at compile and debug time. Because without a Version Number on the ASP.NET Core PackageReference the Runtime from the SDK will be used.\r\n\r\nSo how I am supposed to test against 2.2.8?","Url":"https://github.com/dotnet/sdk/issues/3950","RelatedDescription":"Open issue \"SDK 2.2.403 is missing\" (#3950)"},{"Id":"526580384","IsPullRequest":true,"CreatedAt":"2019-11-21T15:02:27","Actor":"dotnet-maestro[bot]","Number":"3949","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191120.6\r\n- **Date Produced**: 11/21/2019 7:07 AM\r\n- **Commit**: be36a2fb1898f4eb69b29a1150a507e371618b8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19570.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19570.6\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19570.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3949","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3949)"},{"Id":"526328247","IsPullRequest":false,"CreatedAt":"2019-11-21T02:36:12","Actor":"tttttvf","Number":"3948","RawContent":null,"Title":"Project build operation","State":"open","Body":"I found a phenomenon yesterday, but I seem to submit it to another team\r\n\r\nhttps://github.com/aspnet/AspNetCore/issues/17255\r\n\r\nThis is still the case with the command 'dotnet build'","Url":"https://github.com/dotnet/sdk/issues/3948","RelatedDescription":"Open issue \"Project build operation\" (#3948)"},{"Id":"526289307","IsPullRequest":true,"CreatedAt":"2019-11-21T01:41:07","Actor":"dotnet-maestro[bot]","Number":"3947","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 11:20 PM\r\n- **Commit**: c16a31965d1ff8c4564d420610e2991265e77501\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3947","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3947)"},{"Id":"526209758","IsPullRequest":true,"CreatedAt":"2019-11-20T22:39:17","Actor":"dotnet-maestro[bot]","Number":"3946","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3946","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3946)"},{"Id":"526099229","IsPullRequest":true,"CreatedAt":"2019-11-20T21:11:50","Actor":"dotnet-maestro[bot]","Number":"3945","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3945","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3945)"},{"Id":"525871440","IsPullRequest":false,"CreatedAt":"2019-11-20T15:21:21","Actor":"NicolasDorier","Number":"3943","RawContent":null,"Title":"ApplicationIcon does not work when cross building win-x64 from Linux","State":"open","Body":"# How to reproduce\r\n\r\nOn linux (using Buster 3.0.101):\r\n```bash\r\ndotnet new console\r\n# Add myicon.ico to the project\r\ndotnet publish --runtime win-x64 -p:ApplicationIcon=myicon.ico\r\n```\r\nGrab `bin/Debug/netcoreapp3.0/publish/*.exe`\r\nNotice that the executable does not show any icon on windows explorer.\r\nThe same process on windows works as expected.\r\n\r\n# Expected\r\n\r\nThe executable should have the application icon properly set.\r\n\r\n# Workaround\r\n\r\nPost process the `.exe` with wine and `rcedit.exe`.\r\nhttps://github.com/btcpayserver/BTCPayServer.Vault/blob/abf575728b9b1f64bade6cd3a590ed8ac8baf6ee/Build/build.win-x64.Dockerfile#L28\r\n\r\n# Version\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.101\r\n Commit:    bc5f8df0f5\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.101/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.1\r\n  Commit:  32085cbc72\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3943","RelatedDescription":"Open issue \"ApplicationIcon does not work when cross building win-x64 from Linux\" (#3943)"},{"Id":"525867163","IsPullRequest":false,"CreatedAt":"2019-11-20T15:14:35","Actor":"JonasSamuelsson","Number":"3942","RawContent":null,"Title":"dotnet tool restore should support version ranges and/or wildcards","State":"open","Body":"I want to use a `dotnet-tools.json` manifest file for defining local tools used in my cicd pipelines.\r\n\r\nFrom what I can tell the manifest only accepts the exact version, I would like to specify a range or use wildcards so I always use the latest version, just like when installing global tools.\r\n\r\nExample\r\n``` json\r\n{\r\n    \"version\": 1,\r\n    \"isRoot\": true,\r\n    \"tools\": {\r\n      \"dotnetsay\": {\r\n        \"version\": \"1.*\",\r\n        \"commands\": [\r\n          \"dotnetsay\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n```","Url":"https://github.com/dotnet/sdk/issues/3942","RelatedDescription":"Open issue \"dotnet tool restore should support version ranges and/or wildcards\" (#3942)"},{"Id":"525789259","IsPullRequest":true,"CreatedAt":"2019-11-20T14:57:02","Actor":"dotnet-maestro[bot]","Number":"3939","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.6\r\n- **Date Produced**: 11/19/2019 10:31 PM\r\n- **Commit**: c29c916a0d1736522cfd944fcc06ead33b5e27db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19569.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3939","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3939)"},{"Id":"525815749","IsPullRequest":false,"CreatedAt":"2019-11-20T13:49:56","Actor":"Jakst","Number":"3941","RawContent":null,"Title":"Manage sources with dotnet cli","State":"open","Body":"Dotnet SDK does not currently support managing sources through the cli. This is problematic because it forces users of other platforms than Windows to install mono in order to run nuget.exe. It works okay, but the nuget cli, being designed for windows, feels alien and and has a cumbersome and error prone install process.\r\n\r\nAnother consequence of this is that we have to jump through hoops when restoring private packages in CI environments - either starting out with a mono-enabled environment and copying over packages to the final build, or editing the nuget.config file by inserting config in a build step in order to use the dotnet cli.\r\n\r\nAll of this makes developing and running dotnet core in non-windows environments a second-class experience. There is more to it than managing private sources, but this is the use case that seems to be the most common and something that users trying to adopt dotnet-core in a lot of corporate environments will battle with early on.\r\n\r\nAre there any plans for adopting the feature of nuget.exe in dotnet cli?","Url":"https://github.com/dotnet/sdk/issues/3941","RelatedDescription":"Open issue \"Manage sources with dotnet cli\" (#3941)"},{"Id":"525744307","IsPullRequest":false,"CreatedAt":"2019-11-20T11:28:29","Actor":"artecoop","Number":"3938","RawContent":null,"Title":"The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.","State":"open","Body":"On my fresh install of Fedora 30, I installed donet-sdk 2.2 (I need to stick with this version right now) as per \r\nhttps://dotnet.microsoft.com/download/linux-package-manager/sdk-2.2.207\r\n\r\nthen verified with donet --info\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  30\r\n OS Platform: Linux\r\n RID:         fedora.30-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.402/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.8\r\n  Commit:  b9aa1abc51\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.2.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nNow I'm creating a simple app\r\n```\r\nmkidr foo-2.2\r\ncd foo-2.2\r\ndotnet new web\r\nThe template \"ASP.NET Core Empty\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /folder/foo-2.2/foo-2.2.csproj...\r\n  Restore completed in 1.08 sec for  /folder/foo-2.2/foo-2.2.csproj.\r\n\r\nRestore succeeded.\r\n```\r\n\r\nPerfect. Now without any editing do `dotnet run'\r\nVoilà:\r\n```\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      /usr/share/dotnet/\r\n  - Installing .NET Core prerequisites might help resolve this problem:\r\n      https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n```\r\n\r\nWHY?\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3938","RelatedDescription":"Open issue \"The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\" (#3938)"},{"Id":"525399962","IsPullRequest":false,"CreatedAt":"2019-11-20T03:24:59","Actor":"niteshrestha","Number":"3937","RawContent":null,"Title":"[dotnet tool] pwsh won't run resulting in command or file was not found","State":"open","Body":"# Steps to reproduce\r\nInstall PowerShell Core 6 as dotnet global tool\r\n```powershell\r\ndotnet tool install --global PowerShell\r\n```\r\nrun\r\n```powershell\r\npwsh\r\n```\r\n# Expected behavior\r\nPowerShell Core 6 starts\r\n\r\n# Actual behavior\r\n![image](https://user-images.githubusercontent.com/4751915/69206444-cd7f3800-0b74-11ea-888e-662f13b1362b.png)\r\n\r\n# Environment data\r\nOS: Windows 10 Enterprise\r\nBuild: 18363.476\r\nVersion: 1909\r\ndotnet version: 3.0.100","Url":"https://github.com/dotnet/sdk/issues/3937","RelatedDescription":"Open issue \"[dotnet tool] pwsh won't run resulting in command or file was not found\" (#3937)"},{"Id":"525363618","IsPullRequest":false,"CreatedAt":"2019-11-20T01:28:22","Actor":"wli3","Number":"3936","RawContent":null,"Title":"Do not expand existing environment variable on PATH when adding global tools to PATH","State":"open","Body":"Directly set registry in Windows using \"[DoNotExpandEnvironmentNames ](https://docs.microsoft.com/en-us/dotnet/api/microsoft.win32.registryvalueoptions?view=netframework-4.8)\"","Url":"https://github.com/dotnet/sdk/issues/3936","RelatedDescription":"Open issue \"Do not expand existing environment variable on PATH when adding global tools to PATH\" (#3936)"},{"Id":"525225946","IsPullRequest":false,"CreatedAt":"2019-11-19T19:46:41","Actor":"avifatal","Number":"3935","RawContent":null,"Title":"A fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/app/'.","State":"open","Body":"Hi,\r\nI am getting the following error when deploying donet core 3.0 with docker:\r\n`A fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/app/'.`\r\n\r\nThis is my Dockerfile:\r\n`\r\nFROM mcr.microsoft.com/dotnet/core/aspnet:3.0-buster-slim AS base\r\nWORKDIR /app\r\nEXPOSE 8080\r\n\r\nFROM mcr.microsoft.com/dotnet/core/sdk:3.0-buster AS build\r\nWORKDIR /src\r\nCOPY [\"TestCloudRun.csproj\", \"TestCloudRun/\"]\r\nRUN dotnet restore \"TestCloudRun/TestCloudRun.csproj\"\r\nCOPY . .\r\nWORKDIR \"/src/TestCloudRun\"\r\nRUN dotnet build \"TestCloudRun.csproj\" -c Release -o /app/build\r\n\r\nFROM build AS publish\r\nRUN dotnet publish \"TestCloudRun.csproj\" -c Release -o /app/publish\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app/publish .\r\nENTRYPOINT [\"dotnet\", \"TestCloudRun.dll\"] \r\n`\r\nThis is the repo: https://github.com/avifatal/core3deployment-issue\r\n\r\nI should mention that I'm deploying to google cloud run.\r\n\r\nThanks\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3935","RelatedDescription":"Open issue \"A fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/app/'.\" (#3935)"},{"Id":"525208385","IsPullRequest":true,"CreatedAt":"2019-11-19T19:13:27","Actor":"wli3","Number":"3934","RawContent":null,"Title":"Test CI Helix simple queue","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3934","RelatedDescription":"Open PR \"Test CI Helix simple queue\" (#3934)"},{"Id":"524995140","IsPullRequest":true,"CreatedAt":"2019-11-19T15:25:18","Actor":"dotnet-maestro[bot]","Number":"3933","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191118.10\r\n- **Date Produced**: 11/19/2019 1:15 AM\r\n- **Commit**: 303e0fac8703c7147c9e1f1046082c8db4fb66fa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19568.10\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19568.10\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19568.10\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3933","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3933)"},{"Id":"524824621","IsPullRequest":true,"CreatedAt":"2019-11-19T09:06:00","Actor":"dotnet-maestro[bot]","Number":"3932","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191118.2\r\n- **Date Produced**: 11/19/2019 6:36 AM\r\n- **Commit**: 93ee64d467eeccd7006e370e78cf6dae31c1f3e2\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3932","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3932)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1197990894588350468","CreatedAt":"2019-11-22T21:31:01+00:00","UserScreenname":"dotnet","Text":"Decision: Do you go Native or use Forms for your cross-platform mobile app in #Xamarin? @CODEmagazine weighs the pr… https://t.co/dzt83q8eML","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":23,"FavoriteCount":3,"RawContent":null},{"Id":"1197917159181160448","CreatedAt":"2019-11-22T16:38:01+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @VickyHarp joins to talk #MicrosoftDataSqlClient, why it was created, feature scenari… https://t.co/sU3kalQUYZ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":18,"FavoriteCount":11,"RawContent":null},{"Id":"1197643853257486337","CreatedAt":"2019-11-21T22:32:00+00:00","UserScreenname":"dotnet","Text":"Hey! Did you know we updated the #dotNET Framework Repair tool? See what's changed and then download it (just in ca… https://t.co/O6rg8WQ9Kk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":22,"FavoriteCount":9,"RawContent":null},{"Id":"1197629766091841537","CreatedAt":"2019-11-21T21:36:01+00:00","UserScreenname":"dotnet","Text":"#VS4Mac has come a long way since its initial #Xamarin development days. This month's @CODEmagazine has a great art… https://t.co/amT38JtrGm","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":32,"FavoriteCount":14,"RawContent":null},{"Id":"1197574221255151616","CreatedAt":"2019-11-21T17:55:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"1197565340529631233","CreatedAt":"2019-11-21T17:20:01+00:00","UserScreenname":"dotnet","Text":"...news you may have missed from #MSIgnite...\n\n#MLdotNET 1.4 and updates to Model Builder in #VisualStudio are now… https://t.co/MFTOiXcgqi","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":35,"FavoriteCount":27,"RawContent":null},{"Id":"1197261086912843776","CreatedAt":"2019-11-20T21:11:01+00:00","UserScreenname":"dotnet","Text":"\"...forward-looking tech to approach Web dev in very different ways. There are now more ways than ever to create gr… https://t.co/WT8OdC1tqI","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":47,"FavoriteCount":14,"RawContent":null},{"Id":"1197200191230791681","CreatedAt":"2019-11-20T17:09:03+00:00","UserScreenname":"dotnet","Text":"What's up with #EntityFramework? #dotNETRocks talks to @JulieLerman about the exciting times, the latest updates, a… https://t.co/2D0gilroYx","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":44,"FavoriteCount":18,"RawContent":null},{"Id":"1196936259236614144","CreatedAt":"2019-11-19T23:40:16+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"1196857275866071040","CreatedAt":"2019-11-19T18:26:25+00:00","UserScreenname":"dotnet","Text":"Want to see some of the cool tooling available for @ASPNET devs in @VisualStudioMac? @sayedihashimi &amp;… https://t.co/ypc1rn5GWM","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"1196844946835169280","CreatedAt":"2019-11-19T17:37:26+00:00","UserScreenname":"dotnet","Text":"Join us in about 30 minutes for another API backlog review. https://t.co/tvOiJYwUyl","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":5,"RawContent":null},{"Id":"1196481702283161601","CreatedAt":"2019-11-18T17:34:02+00:00","UserScreenname":"dotnet","Text":"&lt;3 this. Here's a great story on how the #dotNET Infrastructure Team streamlined their developer collaboration and… https://t.co/lomvhBr27b","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":30,"FavoriteCount":13,"RawContent":null},{"Id":"1196374992251805696","CreatedAt":"2019-11-18T10:30:00+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 3.0 development using Visual Studio for Mac\n\nhttps://t.co/LdtPORIt4H #aspnetcore #visualstudio","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":16,"RawContent":null},{"Id":"1195407626525462528","CreatedAt":"2019-11-15T18:26:02+00:00","UserScreenname":"dotnet","Text":"Blazor is challenging the status quo with a new web framework that’s powerful and productive. \n\n@CODEmagazine lays… https://t.co/YaxiSfHaum","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":150,"FavoriteCount":64,"RawContent":null},{"Id":"1195049383756255233","CreatedAt":"2019-11-14T18:42:30+00:00","UserScreenname":"dotnet","Text":"In this episode, @julielerman shares some insight and great tips for working with Entity Framework in Docker.… https://t.co/6vEWKT6q98","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":17,"RawContent":null},{"Id":"1195034460477108224","CreatedAt":"2019-11-14T17:43:12+00:00","UserScreenname":"dotnet","Text":".@CODEmagazine tackles the evolution and rework of Entity Framework Core 3.0 as they tout the impressive and solid… https://t.co/ppuCmvPP6M","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":17,"FavoriteCount":10,"RawContent":null},{"Id":"1195029111753920517","CreatedAt":"2019-11-14T17:21:57+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 Preview 3 https://t.co/z1YLDZ5dpS","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":314,"FavoriteCount":165,"RawContent":null}]}},"RunOn":"2019-11-23T05:30:37.0851949Z","RunDurationInMilliseconds":15357}