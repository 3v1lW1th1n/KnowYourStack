{"Data":{"Blog":{"FeedItems":[{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7173872699","Type":"IssuesEvent","CreatedAt":"2018-01-30T21:27:13","Actor":"ajcvickers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2838","RelatedDescription":"Closed issue \"one to one relationships that are not unique\" (#2838) at aspnet/Home","RelatedBody":"Version: Entity Framework Core 2.0.1\r\nProvider: SQL Server\r\n\r\nI am finding that entity framework seems to want to ensure uniqueness for foreign key values where there is a one to one relationship.  I have scenarios where uniqueness is not desired.   The fabricated scenario below has an optional contact associated with an order.  Both order 1 and order 2 should be saved with contact \"John Smith\" but order 1 ends up with a null value for OptionalContactId.  Note also that EF will automatically create a unique index for OptionalContactId unless a non-unique index is explicitly created, but this seems to have no effect on the actual behavor when saving changes.\r\n\r\nIs there a way to override this behavior for one to one relationships to have EF allow duplicate values for foreign key fields?  \r\n\r\nNote also that we have upgraded from EF Core 1.1.0 in recent months and I have only started to encounter this issue since upgrading to EF Core 2.0.1.  \r\n\r\n    public class Contact\r\n    {\r\n        public int Id { get; set; }\r\n        public string ContactName { get; set; }\r\n    }\r\n\r\n    public class Order\r\n    {\r\n        public int Id { get; set; }\r\n        public string OrderNumber { get; set; }\r\n\r\n        public int? OptionalContactId { get; set; }\r\n        public Contact OptionalContact { get; set; }\r\n    }\r\n\r\n    public class TestContext : DbContext\r\n    {\r\n        public DbSet<Order> Orders { get; set; }\r\n        public DbSet<Contact> Contacts { get; set; }\r\n\r\n        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\r\n            => optionsBuilder.UseSqlServer(@\"Server=(localdb)\\mssqllocaldb;Database=EfForeignKeys;Trusted_Connection=True;MultipleActiveResultSets=true\");\r\n\r\n        protected override void OnModelCreating(ModelBuilder modelBuilder)\r\n        {\r\n            var orderEntityBuilder = modelBuilder.Entity<Order>();\r\n\r\n            orderEntityBuilder\r\n                .HasKey(t => t.Id);\r\n\r\n            orderEntityBuilder\r\n                .Property(t => t.OrderNumber)\r\n                .HasMaxLength(35);\r\n\r\n            orderEntityBuilder\r\n                .HasOne(t => t.OptionalContact)\r\n                .WithOne()\r\n                .OnDelete(DeleteBehavior.SetNull);\r\n\r\n            orderEntityBuilder.HasIndex(t => t.OptionalContactId).IsUnique(false);   // Have to add this to ensure EF does not create a unique index\r\n\r\n            var contactEntityBuilder = modelBuilder.Entity<Contact>();\r\n\r\n            contactEntityBuilder\r\n                .HasKey(t => t.Id);\r\n\r\n            contactEntityBuilder\r\n                .Property(t => t.ContactName)\r\n                .HasMaxLength(35);\r\n        }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (var context = new TestContext())\r\n            {\r\n                context.Database.EnsureDeleted();\r\n                context.Database.EnsureCreated();\r\n\r\n                if (!context.Orders.Any())\r\n                {\r\n                    var contact = new Contact { ContactName = \"John Smith\" };\r\n                    context.Add(contact);\r\n                    context.Add(new Order { OrderNumber = \"1\", OptionalContact = contact });\r\n                    context.Add(new Order { OrderNumber = \"2\", OptionalContact = contact });\r\n                    context.SaveChanges();\r\n                }\r\n            }\r\n\r\n            using (var context = new TestContext())\r\n            {\r\n                var orders = context.Orders.Include(o => o.OptionalContact);\r\n\r\n                foreach (var order in orders)\r\n                {\r\n                    Console.WriteLine($\"Order: {order.OrderNumber}, Contact: {order.OptionalContact?.ContactName}\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\nOutput:\r\n![image](https://user-images.githubusercontent.com/1825468/35590569-265adc46-066c-11e8-955e-d33000c8bc4b.png)\r\n\r\n"},{"Id":"7173817850","Type":"IssuesEvent","CreatedAt":"2018-01-30T21:15:39","Actor":"andrew-hickton","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2838","RelatedDescription":"Opened issue \"one to one relationships that are not unique\" (#2838) at aspnet/Home","RelatedBody":"Version: Entity Framework Core 2.0.1\r\nProvider: SQL Server\r\n\r\nI am finding that entity framework seems to want to ensure uniqueness for foreign key values where there is a one to one relationship.  I have scenarios where uniqueness is not desired.   The fabricated scenario below has an optional contact associated with an order.  Both order 1 and order 2 should be saved with contact \"John Smith\" but order 1 ends up with a null value for OptionalContactId.  Note also that EF will automatically create a unique index for OptionalContactId unless a non-unique index is explicitly created, but this seems to have no effect on the actual behavor when saving changes.\r\n\r\nIs there a way to override this behavior for one to one relationships to have EF allow duplicate values for foreign key fields?  \r\n\r\nNote also that we have upgraded from EF Core 1.1.0 in recent months and I have only started to encounter this issue since upgrading to EF Core 2.0.1.  \r\n\r\n    public class Contact\r\n    {\r\n        public int Id { get; set; }\r\n        public string ContactName { get; set; }\r\n    }\r\n\r\n    public class Order\r\n    {\r\n        public int Id { get; set; }\r\n        public string OrderNumber { get; set; }\r\n\r\n        public int? OptionalContactId { get; set; }\r\n        public Contact OptionalContact { get; set; }\r\n    }\r\n\r\n    public class TestContext : DbContext\r\n    {\r\n        public DbSet<Order> Orders { get; set; }\r\n        public DbSet<Contact> Contacts { get; set; }\r\n\r\n        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\r\n            => optionsBuilder.UseSqlServer(@\"Server=(localdb)\\mssqllocaldb;Database=EfForeignKeys;Trusted_Connection=True;MultipleActiveResultSets=true\");\r\n\r\n        protected override void OnModelCreating(ModelBuilder modelBuilder)\r\n        {\r\n            var orderEntityBuilder = modelBuilder.Entity<Order>();\r\n\r\n            orderEntityBuilder\r\n                .HasKey(t => t.Id);\r\n\r\n            orderEntityBuilder\r\n                .Property(t => t.OrderNumber)\r\n                .HasMaxLength(35);\r\n\r\n            orderEntityBuilder\r\n                .HasOne(t => t.OptionalContact)\r\n                .WithOne()\r\n                .OnDelete(DeleteBehavior.SetNull);\r\n\r\n            orderEntityBuilder.HasIndex(t => t.OptionalContactId).IsUnique(false);   // Have to add this to ensure EF does not create a unique index\r\n\r\n            var contactEntityBuilder = modelBuilder.Entity<Contact>();\r\n\r\n            contactEntityBuilder\r\n                .HasKey(t => t.Id);\r\n\r\n            contactEntityBuilder\r\n                .Property(t => t.ContactName)\r\n                .HasMaxLength(35);\r\n        }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (var context = new TestContext())\r\n            {\r\n                context.Database.EnsureDeleted();\r\n                context.Database.EnsureCreated();\r\n\r\n                if (!context.Orders.Any())\r\n                {\r\n                    var contact = new Contact { ContactName = \"John Smith\" };\r\n                    context.Add(contact);\r\n                    context.Add(new Order { OrderNumber = \"1\", OptionalContact = contact });\r\n                    context.Add(new Order { OrderNumber = \"2\", OptionalContact = contact });\r\n                    context.SaveChanges();\r\n                }\r\n            }\r\n\r\n            using (var context = new TestContext())\r\n            {\r\n                var orders = context.Orders.Include(o => o.OptionalContact);\r\n\r\n                foreach (var order in orders)\r\n                {\r\n                    Console.WriteLine($\"Order: {order.OrderNumber}, Contact: {order.OptionalContact?.ContactName}\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\nOutput:\r\n![image](https://user-images.githubusercontent.com/1825468/35590569-265adc46-066c-11e8-955e-d33000c8bc4b.png)\r\n\r\n"},{"Id":"7173375178","Type":"IssuesEvent","CreatedAt":"2018-01-30T19:44:17","Actor":"jbagga","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2803","RelatedDescription":"Closed issue \"OSSkipCondition should not allow invalid arguments\" (#2803) at aspnet/Home","RelatedBody":"OSSkipCondition should not allow invalid arguments such as:\r\n\r\n[OSSkipCondition(OperatingSystems.Linux | OperatingSystems.MacOSX)]\r\n\r\nThis does not throw an error but does not work as intended. The test still tries to run in one of the two listed operating systems (I did not investigate if it consistently chooses the first or the second).\r\n\r\ncc @Eilon "},{"Id":"7172938850","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:17:38","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Home/pull/2815","RelatedDescription":"Merged pull request \"Update CONTRIBUTING.md due to obsolete 'Templates' repository\" (#2815) at aspnet/Home","RelatedBody":"Recommending a change to the Contributing guidelines now that the 'Templates' repository is obsolete.  Perhaps this is the desired intent for history; otherwise, just FYI that you may want to update this document.  Thanks.\r\n\r\nContributing guidelines for this repository reference an obsolete [Templates](https://github.com/aspnet/Templates) repository.  \r\n\r\nInstead, potentially suggesting links to appropriate ASP.NET Core template repository."},{"Id":"7169720081","Type":"IssuesEvent","CreatedAt":"2018-01-30T07:54:17","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2836","RelatedDescription":"Closed issue \"Add Assembly at Runtime\" (#2836) at aspnet/Home","RelatedBody":"Original Issue:\r\nhttps://github.com/domaindrivendev/Swashbuckle.AspNetCore/issues/580\r\n\r\n> \r\n> When I load an application part with a controller in it, Swashbuckle doesn't add the controller to the Swagger.\r\n> \r\n> ```\r\n> List<System.Reflection.Assembly> ExtraControllerAssemblies { get; set; }\r\n> \r\n> public void ConfigureServices(IServiceCollection services)\r\n> {\r\n>   foreach (var assembly in ExtraControllerAssemblies)\r\n>   {\r\n>       services.AddMvc().AddApplicationPart(assembly);\r\n>   }\r\n> }\r\n> ```\r\n> I can invoke actions on the runtime-loaded controller just fine, so it's clearly loaded properly, but Swashbuckle hasn't generated any Swagger for it.\r\n\r\nThis is apparently and issue with ApiExplorer. How can I add my assembly for API exploration?"},{"Id":"7169496967","Type":"IssuesEvent","CreatedAt":"2018-01-30T06:47:51","Actor":"topnguyen","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2835","RelatedDescription":"Closed issue \"[Localization] IsResourceNotFound always true\" (#2835) at aspnet/Home","RelatedBody":"I follow [this tutorial](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization) then inject `IHtmlLocalizer<SharedResources> htmlLocalizer` in `HomeController`.\r\n\r\n### Not Exist Key Case\r\n\r\n```csharp\r\nvar notExistKey = _htmlLocalizer[\"NotExistKey\"];\r\n```\r\nThe output is:\r\n- Name: \"NotExistKey\"\r\n- Value: \"NotExistKey\"\r\n- IsResourceNotFound: true\r\n\r\nIt's right and the method return Name and Value as Key's name if not found.\r\n\r\n---\r\n\r\n### Exist Key Case\r\n\r\n```csharp\r\nvar languageCode = _htmlLocalizer[\"LanguageCode\"];\r\n```\r\n\r\nThe output is:\r\n- Name: \"VI\"\r\n- Value: \"VI\"\r\n- IsResourceNotFound: true\r\n\r\nThe method returns correct Value but I have no idea why `IsResourceNotFound` always `true` and `Name` must be `LanguageCode`\r\n\r\nPlease view the image below to see the debug info\r\n![2018-01-30_1-13-08](https://user-images.githubusercontent.com/15808788/35526713-f40df316-055a-11e8-9b68-136140d70a99.png)\r\n\r\n---\r\n\r\n### My Expectation\r\n\r\nThe result of `IsResourceNotFound` must be `false` if found the resource. And `Name` must be respected Key Name"},{"Id":"7169319538","Type":"IssuesEvent","CreatedAt":"2018-01-30T05:45:56","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2834","RelatedDescription":"Closed issue \"DependencyInjection - Add Feature  for multiple registrations of service - named service\" (#2834) at aspnet/Home","RelatedBody":"It would be useful to have multiple service registrations for the same interface, many DependencyInjection containers implement this feature, so it woudn't be hard to implement.\r\n\r\nHere are some examples where this feature would be useful\r\n\r\n1) I have one property in my customer database that stores the name of the service that I use to validate the customer order, each customer has it's own validation ( by value, by quantity, for example) and this way I can configure it by customer.\r\n\r\n2) I have some logwriter Services, (E-Mail, Event Viewer, file, Database) and I want to pass them all in a constructor of the controller, to log the services to all services.\r\n\r\nMy idea of implementation is to have this Methods:\r\n\r\n`IEnumerable<T> GetServices<T>();`\r\n`IEnumerable<T> GetService<T>(string name);`\r\n`IDictionary<string,T> GetServiceRegistrations<T>(); // this should return the service and the registration name`\r\n\r\nIn addition to this, I have some extensions that I use in unity that I think would be useful, for example \r\n\r\nIf I have a base class Animal, and two subclasses Dog and Cat, I could register many validation services using the interface IValidator<in T>, for example\r\n\r\n`AnimalRegistrationComplete:IValidator<Animal>`\r\n\r\n`DogRegistrationComplete:IValidator<Dog>`\r\n`CatRegistrationComplete:IValidator<Cat>`\r\n\r\n\r\nand It would be useful to have another version of GetServices<T> that instead of using the equal operator, could use the isSubClassOf operator, this way if I call  GetServices<IValidator<Dog>>, I should receive two services, the DogRegistrationComplete and the AnimalRegistrationComplete\r\n\r\n\r\n"},{"Id":"7168212795","Type":"IssuesEvent","CreatedAt":"2018-01-29T23:24:04","Actor":"carl-thomas","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2837","RelatedDescription":"Opened issue \"Add DataContract and JsonProperty attribute serialisation\" (#2837) at aspnet/Home","RelatedBody":"Having a model \r\n```\r\n[DataContract]\r\npublic class MyModel \r\n{\r\n    [DataMember(Name = \"full_name\")]\r\n    public string Name { get; set; }\r\n}\r\n```\r\nWhen sending a standard JsonPatch request \r\n```\r\n[\r\n    { \"op\": \"add\", \"path\": \"/full_name\", \"value\": \"John Doe\" }\r\n]\r\n```\r\nThe serilizer does not map `/full_name` to the property `Name` of `MyModel`. However, if you use change tha path to `/Name` it will then map the property.\r\n\r\nThe JsonPatch needs to adhere to the `JsonProperty` and `DataContract` attributes and default to `PropertyName` if no attribute is present.\r\nThis will follow the conventions used else where in the MVC framework when building API's\r\n\r\nThanks"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7175342411","Type":"IssuesEvent","CreatedAt":"2018-01-31T04:51:37","Actor":"JanEggers","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1375","RelatedDescription":"Opened issue \"TS2304: Cannot find name 'XMLHttpRequestResponseType'.\" (#1375) at aspnet/SignalR","RelatedBody":"i updated my playground to \r\n\r\n\"@aspnet/signalr\": \"^1.0.0-preview1-28189\"\r\n\r\nand now i cant compile anymore.\r\n\r\n    [at-loader] ./node_modules/@aspnet/signalr/dist/esm/HttpClient.d.ts:7:20 \r\nTS2304: Cannot find name 'XMLHttpRequestResponseType'.\r\n\r\ncan you give me a hint what im missing?\r\n\r\nhere is the code:\r\n\r\nhttps://github.com/JanEggers/Playground/tree/signalr\r\n"},{"Id":"7174115767","Type":"IssuesEvent","CreatedAt":"2018-01-30T22:18:19","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1374","RelatedDescription":"Opened issue \"Investigate Reconnect \" (#1374) at aspnet/SignalR","RelatedBody":"We want to look at adding reconnect functionality in preview 2. "},{"Id":"7173910524","Type":"IssuesEvent","CreatedAt":"2018-01-30T21:35:06","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1373","RelatedDescription":"Opened issue \"Transport Fallback\" (#1373) at aspnet/SignalR","RelatedBody":"Looks like it will be coming back.  \r\n"},{"Id":"7173435741","Type":"PullRequestEvent","CreatedAt":"2018-01-30T19:56:08","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1219","RelatedDescription":"Closed pull request \"[WIP] Deflaking Tests\" (#1219) at aspnet/SignalR","RelatedBody":"It's only flaky in travis so I'm opening a PR to play around with some things."},{"Id":"7173224145","Type":"IssuesEvent","CreatedAt":"2018-01-30T19:14:25","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1372","RelatedDescription":"Opened issue \"Can't use SignalR Client for UWP App\" (#1372) at aspnet/SignalR","RelatedBody":"When using the Nuget Package manager to try and bring in the alpha2 SignalR Client into a UWP app I get this error.\r\n\r\n`Package restore failed. Rolling back package changes for 'UWPTest'`\r\n"},{"Id":"7173201231","Type":"IssuesEvent","CreatedAt":"2018-01-30T19:09:44","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1357","RelatedDescription":"Closed issue \"Suggestion - Change default PollTimeout for LongPolling\" (#1357) at aspnet/SignalR","RelatedBody":"For the LongPolling transport I've noticed the default timeout is set to 110 seconds.  \r\n\r\nThe issue I had is that CloudFlare have a default timeout of ~100 seconds ([details](https://support.cloudflare.com/hc/en-us/articles/200171926-Error-524-A-timeout-occurred)) which was causing my client to error intermittently due to CloudFlares timeout.  \r\n\r\nI am aware that this can be overridden in the configure section using the following (which has resolved issue for me).\r\n\r\n```\r\napp.UseSignalR(routes =>\r\n\t{\r\n\t\troutes.MapHub<RemoteAgentHub>(\"remoteagent\", options =>\r\n\t\t{\r\n\t\t\toptions.LongPolling.PollTimeout = TimeSpan.FromSeconds(60);\r\n\t\t});\r\n\t});\r\n```\r\n\r\nMy suggestion is that you drop the default from 110 seconds to something below 100 seconds, as the current configuration means that everyone hosting a site behind Cloudflare will encounter this issue with the default configuration."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7173909342","Type":"IssuesEvent","CreatedAt":"2018-01-30T21:34:50","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7243","RelatedDescription":"Closed issue \"502.5 Process Failure - Deploy to IIS\" (#7243) at aspnet/Mvc","RelatedBody":"I have a .net core 2 MVC app. It runs fine via IISExpress in VS but as soon as I deploy it to IIS I get 502.5 in the browser and logs give me:\r\n\r\n```\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions,\r\nVersion=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\n   at Microsoft.AspNetCore.WebHost.CreateDefaultBuilder(String[] args)\r\n   at Project.Web.Core.Program.BuildWebHost(String[] args) in PATH\\Project\\Project.Web.Core\\Program.cs:line 15\r\n   at Project.Web.Core.Program.Main(String[] args) in PATH\\Project\\Project.Web.Core\\Program.cs:line 11\r\n```\r\n\r\nCoping `Microsoft.Extensions.Configuration.Abstractions.dll` from the nuget package doesn't seem to make a difference. I'm reference 2.0.0 nuget in all layers of my n-tier project.\r\n\r\nI've read several of the other issues here and SO posts, none of which has helped me. My publish profile deletes all files in the deploy directory. I have cleared nuget cache, I've cleaned and rebuilt and deleted bin folders."},{"Id":"7173864301","Type":"IssuesEvent","CreatedAt":"2018-01-30T21:25:27","Actor":"timdoke","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7319","RelatedDescription":"Opened issue \"DefaultAuthorizationService fails second time through when having a global AuthorizeAttribute and a decorated AuthorizeAttribute\" (#7319) at aspnet/Mvc","RelatedBody":"I have an output like the below.. (I changed some of the names to be generic).\r\n\r\nThere doesn't seem to be a way to disable the second call to the DefaultAuthorizationService when you have a global AuthorizationFilter defined and an AuthorizationAttribute decorated on an api method.  The first call goes through the global filter and the second seems to go through the attribute.  What I would like to do, is disable the global filter when the method is decorated with an AuthorizationAttribute and only use the authentication schemes (preferably just successful on one of the schemes but it seems to call both) from the attribute.  I tried creating my own version of the AuthorizeFilter but this default filter still seems to get called from somewhere.  Also, the authorization I already passed seems to get ignored the second time through for some reason.  The policy is only a ValidUserAuthorizationPolicy..\r\n\r\nWorkflow.Audit.Service> info: MyCustomTokenAuthenticationHandler[8]\r\nWorkflow.Audit.Service>       AuthenticationScheme: MyTokenType was successfully authenticated.\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]\r\nWorkflow.Audit.Service>       Authorization was successful for user: myUser.\r\nWorkflow.Audit.Service> info: MyCustomTokenAuthenticationHandler[8]\r\nWorkflow.Audit.Service>       AuthenticationScheme: MyTokenType was successfully authenticated.\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[2]\r\nWorkflow.Audit.Service>       Authorization failed for user: (null).\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[3]\r\nWorkflow.Audit.Service>       Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Mvc.ForbidResult[1]\r\nWorkflow.Audit.Service>       Executing ForbidResult with authentication schemes (MyTokenType).\r\nWorkflow.Audit.Service> info: MyCustomTokenAuthenticationHandler[13]\r\nWorkflow.Audit.Service>       AuthenticationScheme: MyTokenType was forbidden.\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\nWorkflow.Audit.Service>       Executed action ValuesController.Post (Solution) in 597.3095ms\r\nWorkflow.Audit.Service> info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7173588244","Type":"PullRequestEvent","CreatedAt":"2018-01-30T20:27:34","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1606","RelatedDescription":"Merged pull request \"Make Razor.Sdk a build time dependency\" (#1606) at aspnet/Identity","RelatedBody":""},{"Id":"7173053992","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:40:40","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1606","RelatedDescription":"Opened pull request \"Make Razor.Sdk a build time dependency\" (#1606) at aspnet/Identity","RelatedBody":""},{"Id":"7173017840","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:33:24","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1605","RelatedDescription":"Closed pull request \"Make Razor.Design a build time dependency\" (#1605) at aspnet/Identity","RelatedBody":""},{"Id":"7173000004","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:29:50","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1605","RelatedDescription":"Opened pull request \"Make Razor.Design a build time dependency\" (#1605) at aspnet/Identity","RelatedBody":""},{"Id":"7170880516","Type":"PullRequestEvent","CreatedAt":"2018-01-30T12:02:49","Actor":"lkubis","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1604","RelatedDescription":"Opened pull request \"Update README.md\" (#1604) at aspnet/Identity","RelatedBody":"Add link to Cassandra provider"},{"Id":"7169050157","Type":"PullRequestEvent","CreatedAt":"2018-01-30T03:55:43","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1603","RelatedDescription":"Opened pull request \"[WIP] Add functional tests for the default identity UI\" (#1603) at aspnet/Identity","RelatedBody":""},{"Id":"7167422710","Type":"PullRequestEvent","CreatedAt":"2018-01-29T20:30:16","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1595","RelatedDescription":"Closed pull request \"[Fixes #1572] Improve the extensibility of the default identity UI\" (#1595) at aspnet/Identity","RelatedBody":"Allows changing the user type while still reusing the precompiled views.\r\n* Splits page models in two classes:\r\n  * The base class is non-generic contains the contract with the View and the definition of the handlers.\r\n  * The derived class is generic and contains the implementation of the contract defined by the base class.\r\n* At runtime we update the page application model of each page to update the model type with the implementation class."},{"Id":"7166651829","Type":"IssuesEvent","CreatedAt":"2018-01-29T17:54:31","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1601","RelatedDescription":"Closed issue \"netcore 1.3 WebListener + WIndows Auth: Safe handle has been closed\" (#1601) at aspnet/Identity","RelatedBody":"Windows Identity with ASP.net Core 1.3 self-hosted app with WebListener\r\n\r\n```\r\nvar host = new WebHostBuilder()\r\n                .UseWebListener(options =>\r\n                {\r\n                    options.ListenerSettings.Authentication.Schemes = AuthenticationSchemes.Negotiate | AuthenticationSchemes.NTLM;\r\n                    options.ListenerSettings.Authentication.AllowAnonymous = true;\r\n                })\r\n```\r\nSome times i'm getting error\r\n\r\n> An unhandled exception has occurred: Safe handle has been closed\r\n\r\nat methods like 'User.IsInRole(group)' or 'User.Identity.Name' and app crashed at this dumb method\r\n\r\n```\r\nstring userName;\r\ntry\r\n{\r\n    userName = User.Identity.Name;\r\n}\r\ncatch\r\n{\r\n    userName = \"undefined\";\r\n}\r\nreturn userName;\r\n```\r\nThe stack trace looks like that:\r\n\r\n```\r\n Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke Error: An unhandled exception has occurred: Safe handle has been closed Safe handle has been closed    at System.Runtime.InteropServices.SafeHandle.DangerousAddRef(Boolean& success)\r\n       at System.StubHelpers.StubHelpers.SafeHandleAddRef(SafeHandle pHandle, Boolean& success)\r\n       at Interop.mincore.LsaLookupSids(SafeLsaPolicyHandle handle, Int32 count, IntPtr[] sids, SafeLsaMemoryHandle& referencedDomains, SafeLsaMemoryHandle& names)\r\n       at System.Security.Principal.SecurityIdentifier.TranslateToNTAccounts(IdentityReferenceCollection sourceSids, Boolean& someFailed)\r\n       at System.Security.Principal.SecurityIdentifier.Translate(IdentityReferenceCollection sourceSids, Type targetType, Boolean forceSuccess)\r\n       at System.Security.Principal.SecurityIdentifier.Translate(Type targetType)\r\n       at System.Security.Principal.WindowsIdentity.<GetName>b__42_0()\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n       at System.Security.Principal.WindowsIdentity.RunImpersonatedInternal(SafeAccessTokenHandle token, Action action)\r\n       at System.Security.Principal.WindowsIdentity.GetName()\r\n       at Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.GetUserNameForLogging(ClaimsPrincipal user)\r\n       at Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.<AuthorizeAsync>d__8.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.<OnAuthorizationAsync>d__16.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeAsync>d__20.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>d__6.MoveNext() AsyncTaskMethodBuilder.Start => <Invoke>d__4.MoveNext => ExceptionHandlerMiddleware.Invokee\r\n\r\n```\r\nCan't reproduce it on debug, but at production get crashed once a week.\r\n\r\nAny suggestions?"},{"Id":"7166343066","Type":"IssuesEvent","CreatedAt":"2018-01-29T16:56:47","Actor":"wiktor-golonka","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1602","RelatedDescription":"Opened issue \"Consider changing the 'purpose' to device identifier\" (#1602) at aspnet/Identity","RelatedBody":"Hi,\r\nCurrently the method `ValidateAsync `from the `IUserTwoFactorTokenProvider<TUser>` contains a parameter called 'purpose' which is always equals to 'TwoFactory' if the default method in `UserManager `is not overridden. \r\n\r\nThis is because the default implementation inside the `Microsoft.AspNetCore.Identity.UserManager<TUser>`\r\nof the method `VerifyTwoFactorTokenAsync(TUser user,string tokenProvider, token)`\r\nlooks that: \r\n`var result = await _tokenProviders[tokenProvider].ValidateAsync(\"TwoFactor\", token, this, user);`\r\n \r\nSo this 'purpose' parameter seems to be pretty useless right now. However it could be replaced by some kind of device identifier so it would be easier to implement multiple 2FA device for the same TokenProvider (so the single user could have 2 devices for the same token provider).\r\n\r\nPlease let me know what you think."},{"Id":"7161621142","Type":"IssuesEvent","CreatedAt":"2018-01-28T15:50:37","Actor":"sandrey80","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1601","RelatedDescription":"Opened issue \"netcore 1.1 WebListener + WIndows Auth: Safe handle has been closed\" (#1601) at aspnet/Identity","RelatedBody":"Windows Identity with ASP.net Core 1.1 self-hosted app with WebListener\r\n\r\n```\r\nvar host = new WebHostBuilder()\r\n                .UseWebListener(options =>\r\n                {\r\n                    options.ListenerSettings.Authentication.Schemes = AuthenticationSchemes.Negotiate | AuthenticationSchemes.NTLM;\r\n                    options.ListenerSettings.Authentication.AllowAnonymous = true;\r\n                })\r\n```\r\nSome times i'm getting error\r\n\r\n> An unhandled exception has occurred: Safe handle has been closed\r\n\r\nat methods like 'User.IsInRole(group)' or 'User.Identity.Name' and app crashed at this dumb method\r\n\r\n```\r\nstring userName;\r\ntry\r\n{\r\n    userName = User.Identity.Name;\r\n}\r\ncatch\r\n{\r\n    userName = \"undefined\";\r\n}\r\nreturn userName;\r\n```\r\nThe stack trace looks like that:\r\n\r\n```\r\n Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke Error: An unhandled exception has occurred: Safe handle has been closed Safe handle has been closed    at System.Runtime.InteropServices.SafeHandle.DangerousAddRef(Boolean& success)\r\n       at System.StubHelpers.StubHelpers.SafeHandleAddRef(SafeHandle pHandle, Boolean& success)\r\n       at Interop.mincore.LsaLookupSids(SafeLsaPolicyHandle handle, Int32 count, IntPtr[] sids, SafeLsaMemoryHandle& referencedDomains, SafeLsaMemoryHandle& names)\r\n       at System.Security.Principal.SecurityIdentifier.TranslateToNTAccounts(IdentityReferenceCollection sourceSids, Boolean& someFailed)\r\n       at System.Security.Principal.SecurityIdentifier.Translate(IdentityReferenceCollection sourceSids, Type targetType, Boolean forceSuccess)\r\n       at System.Security.Principal.SecurityIdentifier.Translate(Type targetType)\r\n       at System.Security.Principal.WindowsIdentity.<GetName>b__42_0()\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n       at System.Security.Principal.WindowsIdentity.RunImpersonatedInternal(SafeAccessTokenHandle token, Action action)\r\n       at System.Security.Principal.WindowsIdentity.GetName()\r\n       at Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.GetUserNameForLogging(ClaimsPrincipal user)\r\n       at Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.<AuthorizeAsync>d__8.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.<OnAuthorizationAsync>d__16.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeAsync>d__20.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n    --- End of stack trace from previous location where exception was thrown ---\r\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n       at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>d__6.MoveNext() AsyncTaskMethodBuilder.Start => <Invoke>d__4.MoveNext => ExceptionHandlerMiddleware.Invokee\r\n\r\n```\r\nCan't reproduce it on debug, but at production get crashed once a week.\r\n\r\nAny suggestions?"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7174478923","Type":"IssuesEvent","CreatedAt":"2018-01-30T23:50:47","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2271","RelatedDescription":"Closed issue \"Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\" (#2271) at aspnet/KestrelHttpServer","RelatedBody":"`dotnet new web`\r\n\r\nSwitch from `Microsoft.AspNetCore.All` to Microsoft.AspNetCore.App.\r\n\r\n`dotnet restore`\r\n\r\n`dotnet run`\r\n\r\n```\r\nC:\\Users\\daroth\\Desktop\\test2>dotnet run\r\nUsing launch settings from C:\\Users\\daroth\\Desktop\\test2\\Properties\\launchSettings.json...\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to bind to https://localhost:44321 on the IPv4 loopback interface: 'Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\nwarn: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to bind to https://localhost:44321 on the IPv6 loopback interface: 'Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.'.\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unable to start Kestrel.\r\nSystem.IO.IOException: Failed to bind to address https://localhost:44321. ---> System.AggregateException: One or more errors occurred. (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at System.Buffers.MemoryPool..ctor()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread..ctor(LibuvTransport transport)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n\r\nUnhandled Exception: System.IO.IOException: Failed to bind to address https://localhost:44321. ---> System.AggregateException: One or more errors occurred. (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) (Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.) ---> System.TypeLoadException: Method 'Pin' in type 'System.Buffers.MemoryPoolBlock' from assembly 'System.IO.Pipelines, Version=0.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' does not have an implementation.\r\n   at System.Buffers.MemoryPool..ctor()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread..ctor(LibuvTransport transport)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.LibuvTransport.<BindAsync>d__20.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindEndpointAsync>d__3.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.<BindAsync>d__2.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindAsync>d__0.MoveNext()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<StartAsync>d__22`1.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.<StartAsync>d__26.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__5.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at test2.Program.Main(String[] args) in C:\\Users\\daroth\\Desktop\\test2\\Program.cs:line 17\r\n\r\nC:\\Users\\daroth\\Desktop\\test2>dotnet --info\r\n.NET Command Line Tools (2.1.300-preview2-008017)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview2-008017\r\n Commit SHA-1 hash:  f4a0d2db0e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008017\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-26123-02\r\n  Build    : b64cb46124df1f7e64d7b7cde1034f693b270ceb\r\n```"},{"Id":"7168015797","Type":"PullRequestEvent","CreatedAt":"2018-01-29T22:34:49","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2275","RelatedDescription":"Merged pull request \"React to pipelines changes\" (#2275) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7167985070","Type":"PullRequestEvent","CreatedAt":"2018-01-29T22:27:48","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2280","RelatedDescription":"Merged pull request \"Use the OnWriterCompleted and OnReaderCompleted events directly.\" (#2280) at aspnet/KestrelHttpServer","RelatedBody":"Since the leak is fixed this should be fine now."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7174855027","Type":"PullRequestEvent","CreatedAt":"2018-01-31T01:49:22","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1994","RelatedDescription":"Opened pull request \"Use ManualResetEventSlim instead of TaskCompletionSource\" (#1994) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/issues/1991\r\n\r\nDoing this fixes the flakiness in two tests."},{"Id":"7174523109","Type":"IssuesEvent","CreatedAt":"2018-01-31T00:04:02","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1982","RelatedDescription":"Closed issue \"Change EditorSettingsManager's lifetime to not be per-workspace.\" (#1982) at aspnet/Razor","RelatedBody":"Today `EditorSettingsManager` is exposed as a MEF service but ultimately is bound to a single workspace. The MEF service today delegates all of its state tracking and event handling down to the single workspace its bound to. It functions this way because when it was initially created we thought that the workspace was lived as long as the IDE. Now that we know that's not the case we need to change how the editor settings manager works without breaking public API. We can do this by lifting its state / event handling functionality (`EditorSettingsManagerInternal`) into its MEF implementation. Next we can re-purpose `EditorSettingsManagerInternal` into a less-API heavy middleman for any workspace services concerned with editor settings to consume.\r\n\r\nFunctionally this will work 100% the same in VS windows and will make it possible to work over multiple workspaces in VS Mac."},{"Id":"7174516456","Type":"PullRequestEvent","CreatedAt":"2018-01-31T00:01:57","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1983","RelatedDescription":"Merged pull request \"Change EditorSettingsManager to not be per-workspace.\" (#1983) at aspnet/Razor","RelatedBody":"- Lifted `DefaultEditorSettingsManagerInternal`s state / event handling functionality into its `DefaultEditorSettingsManager`.\r\n- Re-purposed `EditorSettingsManagerInternal` into a less-API heavy middleman for any workspace services concerned with editor settings to consume.\r\n- Moved `DefaultEditorSettingsManagerInternal` into the Editor.Razor assembly since it needed the `EditorSettingsManager` API to function properly. The contract still exists at the `CodeANalysis.Razor.Workspace` level.\r\n- Made the new `DefaultEditorSettingsManager` clean-up dereferenced event handlers since we don't know when workspaces go away and don't want to leak memory and/or trigger bad OnChanged code.\r\n- Added tests to validate new garbage collection functionality and the separation between editorsettingsmanager and the editorsettingmanger internal.\r\n\r\n#1982\r\n\r\n/cc @mkArtakMSFT "},{"Id":"7174509511","Type":"PullRequestEvent","CreatedAt":"2018-01-30T23:59:59","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1988","RelatedDescription":"Merged pull request \"Some pre requisites for adding build server integration tests\" (#1988) at aspnet/Razor","RelatedBody":"#1958 \r\nMeta - #1921 \r\n\r\nThis PR adds a test fixture to handle build server shutdown after all tests have finished executing.\r\n- Also added a way to pass in pipe name for the server in our tasks\r\n- Added a sample build server integration test. (Will add more soon)\r\n- Renamed a few test infrastructure pieces to make them more generic\r\n\r\nFYI @mkArtakMSFT "}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"},{"Id":"7107011065","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:28:07","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/522","RelatedDescription":"Closed issue \"Asp.Net project with Build platform x86 \" (#522) at aspnet/Tooling","RelatedBody":"Here are threads in CLI and MVC repo https://github.com/aspnet/Mvc/issues/4663 and  https://github.com/dotnet/cli/issues/3091 with no real answers. Thought it would be VS Tooling bug.\n\nI have a asp.net project that reference a native dll via Nuget package. This native DLL is only build for x86. I've changed my project.json to set buildOptions\n \"platform\": \"x86\"\n\nBut when I build this asp.net project via visual studio, it creates \"bin\\Debug\\net46\\win7-x64\" as oppose to \"win7-x86\". If I run the resulting \".exe\" file it would crash.\n\nI've tried to use \"dotnet build -r win7-x86\" and it would create the right folder \"bin\\Debug\\net46\\win7-x86\" and then I can run the \".exe\" file.\n\nStill cannot test the application in x86 mode.\n\nThen I've uninstalled Microsoft .NET Code 1.0.0 RC2 - SDK Preview 1 (x64) which was installed via \"VS 2015 Tooling Preview\" and installed the \"x86\" one, and everything seems to be working.\n\nI think it is not right. I should be have the option to install x64 and x86 and then via that buildOption I should be able to tell dotnet how to compile. Just like MSBuild and ASP.Net projects where I set the build options from Project Properties.\n"},{"Id":"7106985478","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:22:30","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/557","RelatedDescription":"Closed issue \"Question: Typescript with ASP.NET Core RC2\" (#557) at aspnet/Tooling","RelatedBody":"Is it possible to compile Typescript code directly in Visual Studio 2015 using the ASP.NET Core RC2 project templates?  This used to work in RC1, but since updating to RC2 I can't get Typescript and ASP.NET Core working together simultaneously.  If I create a .NET Core project (e.g., **ASP.NET Core Web Application (.NET Core)** template), then I don't see \"Typescript Build\" properties page in Project Properties (the only property pages available are Application, Build, Debug).  I can create a Typescript project (e.g., **HTML Application with Typescript** template, which uses the csproj format), and Typescript works as expected, but of course I can't use .NET Core in that project.\n\nI have confirmed that my .xproj file does include a reference to Microsoft.DotNet.Web.targets, which I understand is supposed to bring in Typescript support:\n\n```\n<Import Project=\"$(VSToolsPath)\\DotNet.Web\\Microsoft.DotNet.Web.targets\"\n        Condition=\"'$(VSToolsPath)' != ''\" />\n```\n\nIs the built-in Typescript compilation no longer supported with RC2, or am I missing something somewhere?\n"},{"Id":"7065973641","Type":"PullRequestEvent","CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed pull request \"Update migrate-sql-server.md\" (#1062) at aspnet/Tooling","RelatedBody":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7168812814","Type":"IssuesEvent","CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Opened issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287) at aspnet/Announcements","RelatedBody":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, and it now depends on *Microsoft.AspNetCore.App*, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually."},{"Id":"7082740966","Type":"IssuesEvent","CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Opened issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286) at aspnet/Announcements","RelatedBody":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229."},{"Id":"7076432273","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:08:19","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/285","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\" (#285) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0784\r\n##  ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0783](https://github.com/aspnet/Announcements/issues/284), which is in the same templates. Finally installing the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ will update the templates to correct the issue for any new applications created.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method and search for the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nReplace this line with the following code, removing the call to `Html.Raw()`\r\n\r\n```C#\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` and search for the following line, inside the `OnGetAsync()` method;\r\n\r\n```C#\r\nawait LoadSharedKeyAndQrCodeUriAsync(user);\r\n```\r\n\r\nRemove the code shown below which follows the call to `LoadSharedKeyAndQrCodeUriAsync(user);`\r\n\r\n```C#\r\nif (string.IsNullOrEmpty(SharedKey))\t\t\r\n{\t\t\r\n    await _userManager.ResetAuthenticatorKeyAsync(user);\t\t\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\t\t\r\n}\r\n```\r\n\r\nThe `OnGetAsync()` method should now look like\r\n\r\n```C#\r\npublic async Task<IActionResult> OnGetAsync()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\r\n\r\n    return Page();\r\n}\r\n```\r\n\r\n3. Still in the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` file  and search for the `LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user) function` and replace it with \r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user)\r\n{\r\n    // Load the authenticator key & QR code URI to display on the form\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n     }\r\n\r\n    SharedKey = FormatKey(unformattedKey);\r\n    AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n }\r\n```\r\n\r\n4. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find the declaration for `private const string AuthenticatorUriFormat`. Add the following new const declaration below it;\r\n\r\n```C#\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator()` function. Replace its contents with\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> EnableAuthenticator()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    var model = new EnableAuthenticatorViewModel();\r\n    await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n\r\n    return View(model);\r\n}\r\n```\r\n\r\n3. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. Replace its contents with\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> EnableAuthenticator(EnableAuthenticatorViewModel model)\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!ModelState.IsValid)\r\n    {\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n     }\r\n\r\n    // Strip spaces and hypens\r\n    var verificationCode = model.Code.Replace(\" \", string.Empty).Replace(\"-\", string.Empty);\r\n\r\n    var is2faTokenValid = await _userManager.VerifyTwoFactorTokenAsync(\r\n        user, _userManager.Options.Tokens.AuthenticatorTokenProvider, verificationCode);\r\n\r\n    if (!is2faTokenValid)\r\n    {\r\n        ModelState.AddModelError(\"Code\", \"Verification code is invalid.\");\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n    }\r\n\r\n    await _userManager.SetTwoFactorEnabledAsync(user, true);\r\n    _logger.LogInformation(\"User with ID {UserId} has enabled 2FA with an authenticator app.\", user.Id);\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    TempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\n\r\n    return RedirectToAction(nameof(ShowRecoveryCodes));\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` file create the following method after `EnableAuthenticator(EnableAuthenticatorViewModel model)`;\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file create the following method after the `GenerateQrCodeUri(string email, string unformattedKey)` method\r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user, EnableAuthenticatorViewModel model)\r\n{\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    }\r\n\r\n    model.SharedKey = FormatKey(unformattedKey);\r\n    model.AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n}\r\n```\r\n\r\n6. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n7. Open the `Models\\ManageViewModels\\EnableAuthenticatorViewModel.cs` file and add the following `using` reference;\r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\n```\r\n\r\nthen replace the class declaration with \r\n\r\n```C# \r\npublic class EnableAuthenticatorViewModel\r\n{\r\n    [Required]\r\n    [StringLength(7, ErrorMessage = \"The {0} must be at least {2} and at max {1} characters long.\", MinimumLength = 6)]\r\n    [DataType(DataType.Text)]\r\n    [Display(Name = \"Verification Code\")]\r\n    public string Code { get; set; }\r\n\r\n    [BindNever]\r\n    public string SharedKey { get; set; }\r\n\r\n    [BindNever]\r\n    public string AuthenticatorUri { get; set; }\r\n}\r\n```\r\n\r\n8. Open the `Views\\Manage\\EnableAuthenticator.cshtml` file and replace the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nwith\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\nremove the call to `Html.Raw()`.\r\n\r\n9. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0784](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0784)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  "},{"Id":"7076428623","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:07:27","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/284","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery\" (#284) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0785\r\n## ASP.NET Core Templates enable Cross Site Request Forgery\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Cross Site Request Forgery vulnerability in the individual authentication templates for ASP.NET Core 2.0. An attacker who successfully exploited this vulnerability could change the recovery codes associated with the victim's user account without his/her consent. As a result, a victim of this attack may be permanently locked out of his/her account after loosing access to his/her 2FA device, as the initial recovery codes would be no longer valid.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  CVE-2018-0784, which is in the same templates.  ***** TODO: ADD LINK TO OTHER ISSUE ***** \r\n\r\nYou should also install the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ as will update the templates to correct the issue for any _new_ applications created after its installation. Existing applications must be manually updated using the instructions below.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method. The last line of this file should be\r\n\r\n```C#\r\nreturn RedirectToPage(\"./GenerateRecoveryCodes\");\r\n```\r\n\r\nReplace this line with the following code\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\nreturn RedirectToPage(\"./ShowRecoveryCodes\");\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml` and replace its contents with \r\n\r\n```C#\r\n@page\r\n@model GenerateRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n3. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs` file. Replace its contents with\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.Extensions.Logging;\r\nusing Company.WebApplication1.Data;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class GenerateRecoveryCodesModel : PageModel\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly ILogger<GenerateRecoveryCodesModel> _logger;\r\n\r\n        public GenerateRecoveryCodesModel(\r\n            UserManager<ApplicationUser> userManager,\r\n            ILogger<GenerateRecoveryCodesModel> logger)\r\n        {\r\n            _userManager = userManager;\r\n            _logger = logger;\r\n        }\r\n\r\n        public async Task<IActionResult> OnGetAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n\r\n        public async Task<IActionResult> OnPostAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n            }\r\n\r\n            var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n            TempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\n\r\n            _logger.LogInformation(\"User with ID '{UserId}' has generated new 2FA recovery codes.\", user.Id);\r\n\r\n            return RedirectToPage(\"./ShowRecoveryCodes\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n4. Create a new file, `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml` with the following contents \r\n\r\n```C#\r\n@page\r\n@model ShowRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n5. Create a new file `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs` with the following contents\r\n\r\n```C#\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class ShowRecoveryCodesModel : PageModel\r\n    {\r\n        public string[] RecoveryCodes { get; private set; }\r\n\r\n        public IActionResult OnGet()\r\n        {\r\n            RecoveryCodes = (string[])TempData[\"RecoveryCodes\"];\r\n            if (RecoveryCodes == null)\r\n            {\r\n                return RedirectToPage(\"TwoFactorAuthentication\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n6. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find \r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\n```\r\n  and add a new declaration underneath,\r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. The last line in this method should be\r\n\r\n```C#\r\nreturn RedirectToAction(nameof(GenerateRecoveryCodes));\r\n```\r\n\r\nReplace this final line with\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\nreturn RedirectToAction(nameof(ShowRecoveryCodes));\r\n```\r\n\r\n3. Create a new method in `Controllers\\ManageController.cs` called `ShowRecoveryCodes()` with the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file and find the `GenerateRecoveryCodes()` method. The code should look as follows\r\n\r\n```C# \r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    ...\r\n}\r\n```\r\nReplace the method with the following\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n    }\r\n\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    _logger.LogInformation(\"User with ID {UserId} has generated new 2FA recovery codes.\", user.Id);\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes.ToArray() };\r\n\r\n    return View(nameof(ShowRecoveryCodes), model);\r\n}\r\n```\r\n\r\n6. Create a new View in `Views\\Manage\\ShowRecoveryCodes.cshtml` with the following content\r\n\r\n```\r\n@model ShowRecoveryCodesViewModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n7. Create a new `ShowRecoveryCodesViewModel` class in the `Models\\ManageViewModels` folder and create the class as follows\r\n\r\n```c#\r\npublic class ShowRecoveryCodesViewModel\r\n{\r\n    public string[] RecoveryCodes { get; set; }\r\n}\r\n``` \r\n\r\n8.  Delete the `Models\\ManageViewModels\\generateRecoveryCodesViewModel.cs` file.\r\n\r\n9. Open the `Views\\Manage\\GenerateRecoveryCodes.cshtml` file. Replace the contents with \r\n\r\n```\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h2>@ViewData[\"Title\"]</h2>\r\n\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form asp-action=\"GenerateRecoveryCodes\" method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n\r\n10. Edit `Views\\Manage\\TwoFactorAuthentication.cshtml` to change `<a asp-action=\"GenerateRecoveryCodes\" class=\"btn btn-default\">Reset recovery codes</a>` to ` <a asp-action=\"GenerateRecoveryCodesWarning\" class=\"btn btn-default\">Reset recovery codes</a>`.\r\n\r\n11. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0785](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0785)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n\r\n  \r\n  \r\n  "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"958482115208781824","CreatedAt":"2018-01-30T23:28:38+00:00","UserScreenname":"aspnet","Text":"Starting soon: #ASPNET Community Standup at 3:45 PM Pacific / 23:45 GMT.\n\nToday's community links: https://t.co/Va4tu6Rv47","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":7,"RawContent":null},{"Id":"958121957295140864","CreatedAt":"2018-01-29T23:37:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup tomorrow at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":3,"RawContent":null},{"Id":"956668144784846849","CreatedAt":"2018-01-25T23:20:34+00:00","UserScreenname":"aspnet","Text":"Just blogged: @Azure Storage for Serverless .NET apps in Minutes.\nhttps://t.co/5vSYYtzt8p","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":81,"FavoriteCount":52,"RawContent":null},{"Id":"956524881121771521","CreatedAt":"2018-01-25T13:51:17+00:00","UserScreenname":"aspnet","Text":"Jeff and Maira - improving https://t.co/y1SqotEH5B LIVE at 10am ET / 15:00 UTC.  Check it out! https://t.co/IXsNIkHfWB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"955862764530024448","CreatedAt":"2018-01-23T18:00:16+00:00","UserScreenname":"aspnet","Text":"Starting now: #ASPNET Community Standup with Ryan Nowak on HttpClientFactory\n\nhttps://t.co/3dFxSj11IQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":8,"RawContent":null},{"Id":"955790962739040256","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"aspnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BDz2cgCTrt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"955640761793495042","CreatedAt":"2018-01-23T03:18:07+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is Jan 23 10 AM PT / 1800 GMT with special guest Ryan Nowak talking about Htt… https://t.co/5a8Ga9AJNL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"954763537884372997","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"aspnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/0zBt67tqGg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":3,"RawContent":null},{"Id":"954724179403837440","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"aspnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/Y02invGhm1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"953279227012542464","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/PfmelAvxS2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":7,"RawContent":null},{"Id":"952185961147969537","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"aspnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/H2wBoF77Ri","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"950775244016332800","CreatedAt":"2018-01-09T17:04:17+00:00","UserScreenname":"aspnet","Text":"Join us for the @aspnet Community Standup at 10 AM Pacific / 18:00 UTC today. We've got special guest… https://t.co/o5WiTdUXQC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":18,"RawContent":null},{"Id":"949414507759124480","CreatedAt":"2018-01-05T22:57:12+00:00","UserScreenname":"aspnet","Text":"Announcing Preview 1 of #ASPNET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 https://t.co/xVYhW7ospD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":68,"RawContent":null},{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":5,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-01-31T05:30:10.2999505Z","RunDurationInMilliseconds":8694}