{"Data":{"Vue":{"Events":[{"Id":"7620635964","Type":"IssuesEvent","CreatedAt":"2018-05-03T04:11:42","Actor":"jackframework","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/8123","RelatedDescription":"Opened issue \"在Element属性中的转义字符在VUE单文件模板中没有生效\" (#8123) at vuejs/vue","RelatedBody":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jackframework/pn6jk62c/1/](https://jsfiddle.net/jackframework/pn6jk62c/1/)\r\n\r\n### Steps to reproduce\r\n在VUE单文件组件的template中插入带转义字符的属性 <span icon=\"&amp;#x41;\"></span>\r\n\r\n### What is expected?\r\nicon 属性应该被转义成Unicode字符\\ue000\r\n\r\n### What is actually happening?\r\nicon 属性被原样输出成了字符串\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7619680801","Type":"IssuesEvent","CreatedAt":"2018-05-02T22:09:43","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2183","RelatedDescription":"Closed issue \"Configruation for enable/disable ensureSlash() in hash mode \" (#2183) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nUse Case:\r\nvue-route is used beside other scripts, where plain anchors are used.\r\nClicking a link for `#top` we get `#/top` because of ensureSlash() in hash mode. (There is no route defined for `/top`).\r\nTherefore the other script can't complete because the hash with slash is not recognized.\r\n\r\nI guess the ensureSlash() is only required for matching the `/` home route or `/any...` any other route.\r\n\r\nIs there otherwise a dependency I don't see, where ensureHash() is required?\r\n\r\n### What does the proposed API look like?\r\nHaving a configuration is preferable for disabling the default behaviour.\r\n\r\n```js\r\nrouter  = new VueRouter({\r\n    ensureHash: false\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7619607906","Type":"PullRequestEvent","CreatedAt":"2018-05-02T21:51:31","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2180","RelatedDescription":"Merged pull request \"chore(package.json): add sideEffects: false field to package.json\" (#2180) at vuejs/vue-router","RelatedBody":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR adds the `\"sideEffects\": false` property in vue-router's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vue-routers's original source files (instead of the flattened esm bundles) and want to remove flow type through a babel-transform, then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system (if they exist!)\r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`).\r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) "},{"Id":"7615691840","Type":"IssuesEvent","CreatedAt":"2018-05-02T09:18:53","Actor":"sheggi","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2183","RelatedDescription":"Opened issue \"Configruation for enable/disable ensureSlash() in hash mode \" (#2183) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nUse Case:\r\nvue-route is used beside other scripts, where plain anchors are used.\r\nClicking a link for `#top` we get `#/top` because of ensureSlash() in hash mode. (There is no route defined for `/top`).\r\nTherefore the other script can't complete because the hash with slash is not recognized.\r\n\r\nI guess the ensureSlash() is only required for matching the `/` home route or `/any...` any other route.\r\n\r\nIs there otherwise a dependency I don't see, where ensureHash() is required?\r\n\r\n### What does the proposed API look like?\r\nHaving a configuration is preferable for disabling the default behaviour.\r\n\r\n```js\r\nrouter  = new VueRouter({\r\n    ensureHash: false\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7614489619","Type":"IssuesEvent","CreatedAt":"2018-05-02T03:12:32","Actor":"xsbchen","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1706","RelatedDescription":"Closed issue \"ssr: memory and cpu problem\" (#1706) at vuejs/vue-router","RelatedBody":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-hackernews-2.0](https://github.com/vuejs/vue-hackernews-2.0)\r\n\r\n### Steps to reproduce\r\n1. git clone https://github.com/vuejs/vue-hackernews-2.0\r\n2. npm i\r\n3. add `beforeRouteEnter` event to `src/views/CreateListView.js`:\r\n```js\r\n  beforeRouteEnter(to, from, next) {\r\n    next((vm) => {\r\n      console.log('before enter user view');\r\n    });\r\n  }\r\n```\r\n4. add `console.log` to `vue-router.common.js` line `2058`:\r\n```js\r\nfunction poll (\r\n  cb, // somehow flow cannot infer this is a function\r\n  instances,\r\n  key,\r\n  isValid\r\n) {\r\n  if (instances[key]) {\r\n    cb(instances[key]);\r\n  } else if (isValid()) {\r\n    setTimeout(function () {\r\n      console.log('vue-router poll');\r\n      poll(cb, instances, key, isValid);\r\n    }, 16);\r\n  }\r\n}\r\n```\r\n5. npm run dev\r\n6. open `http://127.0.0.1:8080/`\r\n\r\n### What is expected?\r\nmemory can be gc collected\r\n\r\n### What is actually happening?\r\nmemory and cpu grow up, and it keeps printing `vue-router poll`\r\n\r\n\r\n---\r\n![cpu profier](https://raw.githubusercontent.com/xsbchen/assets/master/a.png)\r\n![heapdump](https://raw.githubusercontent.com/xsbchen/assets/master/b.jpg)\r\n![logs](https://raw.githubusercontent.com/xsbchen/assets/master/c.png)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7616910988","Type":"IssuesEvent","CreatedAt":"2018-05-02T13:32:58","Actor":"acan13","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1257","RelatedDescription":"Opened issue \"registerModule option to preserve state while initializing attributes added since previous initialization\" (#1257) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nContext: Currently if you use registerModule with {preserveState: false} it will reinitialize the entire module state and overwrite all the values. If you use {preserveState: true} it will not do anything to the current values.\r\n\r\n\r\nProblem: What if you wish to preserve the values, but you have added attributes since the last time the module was initialized? If you use {preserveState: true} it will not add the new attribute (possible breaking things) while if you use {preserveState: false} it will overwrite all of the state already there. \r\n\r\n\r\nFeature request: Could there be a happy medium where vuex will only initialize attributes that aren't already present?\r\n\r\n\r\nUse case: We are using vue persisted state to persist UI settings stored in vuex. Because we reuse these settings in a few different apps, we store the module definitions in a shared folder and then import them into our different apps using registerModule. If we use {preserveState: false} then the settings in place are overwritten while if we use {preserveState: true} the new settings we add don't get added to the store.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nThe current behavior makes sense to me, so I would propose leaving it and adding another option. I have no idea what to call it, but something like:\r\n```javascript\r\nVue.registerModule('mymodule', myModule, {preserveState: true, updateAttributes: true});\r\n```\r\n\r\nI'm new to this, but I would be willing to look into how to implement it if people think it would be a good idea.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7615590072","Type":"IssuesEvent","CreatedAt":"2018-05-02T08:58:32","Actor":"jatarga","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1256","RelatedDescription":"Opened issue \"Module reusing is not working\" (#1256) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/18l8w90v34](https://codesandbox.io/s/18l8w90v34)\r\n\r\n### Steps to reproduce\r\nhttps://codesandbox.io/s/18l8w90v34\r\n\r\n### What is expected?\r\nMultiple instance of a component with it's (namespaced) store should not share the same state, because I'm initializing the state with new function instance:\r\n\r\n``` js\r\n    export default {\r\n         namespaced: true,\r\n         state: function() {\r\n              // new instance for each component?\r\n              return {\r\n                 counter: 100\r\n              };\r\n          },\r\n        getters: {\r\n            counter: state => state.counter\r\n        },\r\n        mutations: {\r\n             updateCounter(state, counter) {\r\n                 state.counter = counter;\r\n             }\r\n         }\r\n     };\r\n```\r\n\r\n### What is actually happening?\r\nI have a `DepartmentContactSelectorRow `component with it's own store, and want to use that component in different sections of a page but Vuex using same state for all instances of `DepartmentContactSelectorRow`, although I return `state `with new function instance. I tried it with namespaced and not-namespaced but still same problem.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"319782991","IsPullRequest":false,"CreatedAt":"2018-05-03T04:11:42","Actor":"jackframework","Number":"8123","RawContent":null,"Title":"在Element属性中的转义字符在VUE单文件模板中没有生效","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jackframework/pn6jk62c/1/](https://jsfiddle.net/jackframework/pn6jk62c/1/)\r\n\r\n### Steps to reproduce\r\n在“VUE单文件组件”的template中插入带转义字符的属性 &lt;span content=\"&amp;#x41;\"&gt;&lt;/span&gt;\r\n\r\n### What is expected?\r\ncontent 属性应该被转义成Unicode字符A\r\n\r\n### What is actually happening?\r\ncontent 属性被原样输出成了未转义的字符串\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8123","RelatedDescription":"Open issue \"在Element属性中的转义字符在VUE单文件模板中没有生效\" (#8123)"},{"Id":"319762349","IsPullRequest":false,"CreatedAt":"2018-05-03T01:25:06","Actor":"weijuer","Number":"8122","RawContent":null,"Title":"V-for does not working in IE10 @Version 2.5.16: ‘invalid v-for alias “” in expression: v-for=“banner in bannerList”’","State":"open","Body":"### Version\r\nv2.5.16-v2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/weijuer/pen/VxWKww](https://codepen.io/weijuer/pen/VxWKww)\r\n\r\n### Steps to reproduce\r\nIE10列表展示不了\r\n\r\n### What is expected?\r\n正常遍历列表\r\n\r\n### What is actually happening?\r\nIE10列表展示不了\r\n\r\n---\r\n请用IE10浏览器浏览，而非调试的兼容模式！\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8122","RelatedDescription":"Open issue \"V-for does not working in IE10 @Version 2.5.16: ‘invalid v-for alias “” in expression: v-for=“banner in bannerList”’\" (#8122)"},{"Id":"319760208","IsPullRequest":false,"CreatedAt":"2018-05-03T01:07:20","Actor":"weijuer","Number":"8121","RawContent":null,"Title":"V-for not working in IE10 @Version 2.5.16: ‘invalid v-for alias “” in expression: v-for=“banner in bannerList”’","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8121","RelatedDescription":"Closed issue \"V-for not working in IE10 @Version 2.5.16: ‘invalid v-for alias “” in expression: v-for=“banner in bannerList”’\" (#8121)"},{"Id":"319718930","IsPullRequest":false,"CreatedAt":"2018-05-02T21:29:25","Actor":"KaelWD","Number":"8120","RawContent":null,"Title":"Typescript: Type 'null' is not assignable to type 'PropValidator<any>'","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n```ts\r\nVue.component('union-prop', {\r\n  props: {\r\n    anything: null,\r\n    primitive: [String, Number],\r\n    object: [Cat, User],\r\n    regex: RegExp,\r\n    mixed: [RegExp, Array],\r\n    union: [User, Number] as {new(): User | Number}[] // requires annotation\r\n  },\r\n  data() {\r\n    this.anything;\r\n    this.primitive;\r\n    this.object;\r\n    this.union;\r\n    this.regex.compile;\r\n    this.mixed;\r\n    return {\r\n      fixedSize: this.union,\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n### Steps to reproduce\r\nPaste it into `options-test.ts` and run `yarn test:types`\r\n\r\n### What is expected?\r\nNo errors, type should be `any`\r\n\r\n### What is actually happening?\r\n> Type 'null' is not assignable to type 'PropValidator<any>'\r\n\r\nIt works with `strictNullChecks` disabled, but the type is `{}` instead of `any`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8120","RelatedDescription":"Open issue \"Typescript: Type 'null' is not assignable to type 'PropValidator<any>'\" (#8120)"},{"Id":"318598092","IsPullRequest":true,"CreatedAt":"2018-05-02T21:28:05","Actor":"TheLarkInn","Number":"8099","RawContent":null,"Title":"chore(package.json): Add sideEffects: false field in package.json","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: `package.json` field addition\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [X] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\nThis PR adds the `\"sideEffects\": false` property in vue's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vue's original source files (instead of the flattened esm bundles) and want to remove flow type through a babel-transform, then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system. \r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`).\r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) \r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8099","RelatedDescription":"Closed or merged PR \"chore(package.json): Add sideEffects: false field in package.json\" (#8099)"},{"Id":"319537390","IsPullRequest":false,"CreatedAt":"2018-05-02T18:26:06","Actor":"salessesk","Number":"8117","RawContent":null,"Title":"Keep-alive not working inside v-for containing v-if ","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/332626/](https://jsfiddle.net/50wL7mdz/332626/)\r\n\r\n### Steps to reproduce\r\nClick on the toggle button multiple times\r\n\r\n### What is expected?\r\n\"With v-show\" and \"with v-if\" should toggle between two values computed on creation of the components.\r\n\r\n### What is actually happening?\r\n\"With v-if\" values change each time the toggle button is clicked. A new instance of the component is created every time.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8117","RelatedDescription":"Closed issue \"Keep-alive not working inside v-for containing v-if \" (#8117)"},{"Id":"319430551","IsPullRequest":false,"CreatedAt":"2018-05-02T17:23:17","Actor":"sanchitgn","Number":"8116","RawContent":null,"Title":"Falsy values in `data-*` attributes not present on element","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/sanchitgn/attrs](https://github.com/sanchitgn/attrs)\r\n\r\n### Steps to reproduce\r\n1. Add `:data-*='false'` attribute to `div`\r\n2. Open devtools and observe `div`\r\n\r\n\r\n### What is expected?\r\nThere should be `data-*=\"false\"` present on the element\r\n\r\n### What is actually happening?\r\nNo `data-*` attribute is present on element\r\n\r\n---\r\n*This may be the expected behaviour. What would the workaround be for this?*\r\n\r\n#### My use-case:\r\nI have `data-valid` (`true/false`) attributes for each form input. The form is dynamically generated and components can be arbitrarily nested. I need to query the data-valid attribute to check for the complete form validity\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8116","RelatedDescription":"Closed issue \"Falsy values in `data-*` attributes not present on element\" (#8116)"},{"Id":"319537996","IsPullRequest":false,"CreatedAt":"2018-05-02T15:10:05","Actor":"mariolamacchia","Number":"8118","RawContent":null,"Title":"Vue.mixin clearing Vue.options.components","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[http://jsbin.com/vegujagawe/1/edit?js,console](http://jsbin.com/vegujagawe/1/edit?js,console)\r\n\r\n### Steps to reproduce\r\n- Import Vue\r\n- Register a global component (it will be added to `Vue.options.components`)\r\n- Register any global mixin\r\n\r\n### What is expected?\r\n`Vue.options.components` shouldn't change\r\n\r\n### What is actually happening?\r\nAll the global components registered before the mixins are removed from `Vue.options.components`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8118","RelatedDescription":"Closed issue \"Vue.mixin clearing Vue.options.components\" (#8118)"},{"Id":"319553870","IsPullRequest":false,"CreatedAt":"2018-05-02T13:32:39","Actor":"onehacking","Number":"8119","RawContent":null,"Title":"Vue doesn't listen to item value of array changes","State":"closed","Body":"array[index]= !array[index]  => vDom not update\r\n\r\narray.splice(index , 1 !array[index] );   => vDom update done\r\n\r\nIs this a bug ?  or principle","Url":"https://github.com/vuejs/vue/issues/8119","RelatedDescription":"Closed issue \"Vue doesn't listen to item value of array changes\" (#8119)"},{"Id":"319172879","IsPullRequest":false,"CreatedAt":"2018-05-01T11:09:15","Actor":"vee2046","Number":"8115","RawContent":null,"Title":"v-for面对Canvas标签的问题","State":"closed","Body":"canvas和其他标签不一样，画布里会绘制很多东西，如果仅仅使用修改数组来达到控制已有canvas的删除、排序，就表现出来了混乱。\r\n有没有大神遇到过这种情况，如何处理？有没有针对canvas标签的数据驱动类或插件？","Url":"https://github.com/vuejs/vue/issues/8115","RelatedDescription":"Closed issue \"v-for面对Canvas标签的问题\" (#8115)"},{"Id":"319171381","IsPullRequest":true,"CreatedAt":"2018-05-01T11:00:52","Actor":"javoski","Number":"8114","RawContent":null,"Title":"fix(compiler): maybeComponent should return true when \"is\" attribute exists","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\nfix #8101 .","Url":"https://github.com/vuejs/vue/pull/8114","RelatedDescription":"Open PR \"fix(compiler): maybeComponent should return true when \"is\" attribute exists\" (#8114)"},{"Id":"319095185","IsPullRequest":true,"CreatedAt":"2018-05-01T02:06:57","Actor":"xudaashuai","Number":"8113","RawContent":null,"Title":"Update config.js use string literals","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nuse string literals","Url":"https://github.com/vuejs/vue/pull/8113","RelatedDescription":"Open PR \"Update config.js use string literals\" (#8113)"},{"Id":"319074833","IsPullRequest":false,"CreatedAt":"2018-04-30T23:55:49","Actor":"alfonsobries","Number":"8112","RawContent":null,"Title":"Autofocus is lost once vue is loaded","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/alfonsobries/u83vkLe1/](https://jsfiddle.net/alfonsobries/u83vkLe1/)\r\n\r\n### Steps to reproduce\r\nWhen you add the autofocus attribute to an input it will be focused once is loaded, but when you init a Vue app the focus is lost so you need to manual focus an element\r\n\r\nIn this second link (witouth Vue the autofocus works)\r\n[Autofocus not lost](https://jsfiddle.net/alfonsobries/7k2r7oyd/)\r\n\r\n### What is expected?\r\nThat an input keep focused if has the autofocus attribute\r\n\r\n### What is actually happening?\r\nthe focus is lost\r\n\r\n---\r\nIts possible to emulate this behaviour but i think it should work witouth need to \"emulate\" the behaivour\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8112","RelatedDescription":"Open issue \"Autofocus is lost once vue is loaded\" (#8112)"},{"Id":"319002405","IsPullRequest":false,"CreatedAt":"2018-04-30T20:37:22","Actor":"FEA5T","Number":"8111","RawContent":null,"Title":"Better documentation around array (nested object) reactivity","State":"closed","Body":"### What problem does this feature solve?\r\nA common occurrence within vue is getting a fresh array hot off the api.  I then replace an existing array with the fresh array.\r\n```\r\ndata: {\r\n   items: []\r\n},\r\nmethods: {\r\n    refresh: function () {\r\n        var newArray = apiCall();\r\n        this.items = newArray; // could use this.$set() as well\r\n    }\r\n}\r\n```\r\nMy question is, what are the reactivity implications of replacing an array (or deep object) in vue?  Will this.items remain reactive?  Will this.items be diff'd and take advantage of performance optimizations?  Are the answers to these questions yes only if setters are used?  Does this object swap wipe out any watchers?\r\n\r\nCan anyone clarify the expected outcome/offer guidance how to approach this common problem in the best way?\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nRe-observation of deeply nested objects\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8111","RelatedDescription":"Closed issue \"Better documentation around array (nested object) reactivity\" (#8111)"},{"Id":"318971767","IsPullRequest":false,"CreatedAt":"2018-04-30T17:33:46","Actor":"acoshift","Number":"8110","RawContent":null,"Title":"Weird behavior with browser back button","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/t1gw7hdL/](https://jsfiddle.net/t1gw7hdL/)\r\n\r\n### Steps to reproduce\r\n1. Click \"Other Page\"\r\n2. Click Back button on Browser\r\n\r\n### What is expected?\r\nCheckbox should check like before redirect\r\n\r\n### What is actually happening?\r\nCheckbox show wrong checked\r\n\r\n---\r\nChrome 66.0.3359.139, After step 2, can repeat all steps again, all checks disappear\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8110","RelatedDescription":"Open issue \"Weird behavior with browser back button\" (#8110)"},{"Id":"318881216","IsPullRequest":false,"CreatedAt":"2018-04-30T12:59:18","Actor":"wen911119","Number":"8109","RawContent":null,"Title":"在ios的safari上bfcache失效","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/wen911119/vue-bfcache-bug-report](https://github.com/wen911119/vue-bfcache-bug-report)\r\n\r\n### Steps to reproduce\r\n1.git clone\r\n2.npm install\r\n3.npm start\r\n4.用iphone的safari浏览器打开页面\r\n5.滑动一下列表\r\n6.点击跳转到下一页按钮\r\n7.在下一页滑屏返回\r\n\r\n\r\n\r\n### What is expected?\r\n在滑屏返回后从bfcache读取页面。页面生命周期不会再次触发，列表也保持在原来位置。\r\n\r\n### What is actually happening?\r\nonpageshow事件的event.persisted属性为false，说明没有从缓存读取。页面的mounted被重新触发了，列表回到了顶部。\r\n\r\n---\r\n一直用的vue，这个bug我原以为是safari设计的不好。直到今天试了下react，发现react没有这个问题。才意识到这个是vue的问题，作为对比，我也用react创建了个一样的测试例子。https://github.com/wen911119/react-bfcache-test\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8109","RelatedDescription":"Open issue \"在ios的safari上bfcache失效\" (#8109)"},{"Id":"318861732","IsPullRequest":false,"CreatedAt":"2018-04-30T11:38:11","Actor":"goodqd","Number":"8108","RawContent":null,"Title":"async component   loading cannot show","State":"closed","Body":"const AsyncComponent = () => ({\r\n  // 需要加载的组件 (应该是一个 `Promise` 对象)\r\n  component: import('./MyComponent.vue'),\r\n  // 异步组件加载时使用的组件\r\n  loading: LoadingComponent,\r\n  // 加载失败时使用的组件\r\n  error: ErrorComponent,\r\n  // 展示加载时组件的延时时间。默认值是 200 (毫秒)\r\n  delay: 200,\r\n  // 如果提供了超时时间且组件加载也超时了，\r\n  // 则使用加载失败时使用的组件。默认值是：`Infinity`\r\n  timeout: 3000\r\n})\r\n\r\nI write a component     LoadingComponent  but not show\r\n我写了一个加载动画组件 但是没有显示\r\n\r\n\r\n我理解这个异步组件  当去加载的时候  LoadingComponent应该是一个加载的动画 ，他显示的位置应该默认是这个异步组件的位置，但是我写了放上面没有任何反应， 请问是不是我用错了， 有啥参考的写法没\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/8108","RelatedDescription":"Closed issue \"async component   loading cannot show\" (#8108)"},{"Id":"318845258","IsPullRequest":false,"CreatedAt":"2018-04-30T10:29:38","Actor":"ivanivanyuk1993job","Number":"8107","RawContent":null,"Title":"Mixin of mixin does not see properties of first entity","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/8107","RelatedDescription":"Closed issue \"Mixin of mixin does not see properties of first entity\" (#8107)"},{"Id":"318756939","IsPullRequest":false,"CreatedAt":"2018-04-30T06:15:19","Actor":"rhengles","Number":"8106","RawContent":null,"Title":"Dynamic Component Factory","State":"closed","Body":"### What problem does this feature solve?\r\nI have a problem that, in the architecture of my apps, I want to load all the components of my application asynchronally. But in Vue, to declare a async component, I must define a constructor function for each one, thus I need to have a list of each and every component name that exists in my app, even if it isn't loaded.\r\n\r\nThis is how my first app works, you can see in this file, I have an array called `componentsList`:\r\n\r\nhttps://www.portaldorevendedorraizen.com.br/js/index.js\r\n\r\nI want to have a function, a **Dynamic Component Factory,** that receives the name of a component encountered in a template or render function, and tries to load this component dynamically. This is mostly useful with Async Components, which then tries to load the component definition over the network, and resolve with a component constructor.\r\n\r\nI already have a modified version of Vue with these changes, and I successfully use this technique to build and ship three different web apps. Currently, this dynamic component factory is injected by a mixin into the $options object.\r\n\r\nI want to define the lowest-level interface possible, designed to be implemented by a plugin which can be customized further with more options and provide a high-level interface.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nMyPlugin.install = function (Vue, options) {\r\n  Vue.prototype._dynamicComponent = function (id) {\r\n    // if the \"id\" matches some expected pattern,\r\n    // return a component constructor - probably an async constructor.\r\n    // otherwise, return nothing and the normal process continues\r\n  }\r\n}\r\n\r\nVue.use(MyPlugin, { someOption: true })\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8106","RelatedDescription":"Closed issue \"Dynamic Component Factory\" (#8106)"},{"Id":"318725271","IsPullRequest":false,"CreatedAt":"2018-04-29T16:03:28","Actor":"ereztdev","Number":"8105","RawContent":null,"Title":"Vue not rendering options from array","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://github.com/ereztdev/spoilMe](https://github.com/ereztdev/spoilMe)\r\n\r\n### Steps to reproduce\r\npull my  repo: https://github.com/ereztdev/spoilMe\r\n\r\nnpm install\r\n\r\nnpm run dev\r\n\r\nwhen you go to app, the created method is supposed to render the option list in the select element on load.\r\n\r\nThe backend that sends Vue the payload is a node express server that parses a large 28MB JSON, and sends this payload to the frontend.\r\n\r\nYou can pull it here so you will have the full stack:\r\nhttps://github.com/ereztdev/node-express-city-parser\r\n\r\n### What is expected?\r\nrender the cityNames array ( `$store.getters.cityNames` ) into the options dropdown list  that are coming from my state:\r\n\r\n\r\n### What is actually happening?\r\nState is populated correctly yet not rendering into options with v-for, no error either.\r\n\r\n---\r\nIf you want to reproduce with backend, please pull my node repo here:\r\nhttps://github.com/ereztdev/node-express-city-parser\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8105","RelatedDescription":"Closed issue \"Vue not rendering options from array\" (#8105)"},{"Id":"318547498","IsPullRequest":false,"CreatedAt":"2018-04-29T15:10:10","Actor":"emileber","Number":"8098","RawContent":null,"Title":"Make it possible to set static classes within the attrs hash on a data object","State":"closed","Body":"### What problem does this feature solve?\r\n\r\nThe doc on [data objects](https://vuejs.org/v2/guide/render-function.html#The-Data-Object-In-Depth) is kind of misleading:\r\n\r\n> ```\r\n>   // Normal HTML attributes\r\n>   attrs: {\r\n>     id: 'foo'\r\n>   },\r\n> ```\r\n\r\nSince [`staticClass` isn't listed](https://github.com/vuejs/vuejs.org/pull/621), I was wondering why my `attrs: { class: 'static-class' } }` wasn't added to an element. I find it odd to have to do `class: { 'static-class': true }`. This is a simplified example that doesn't translate all the problems that comes with merging arrays, objects and strings.\r\n\r\n### What does the proposed API look like?\r\n\r\n@chrisvfritz [said in the doc issue on static class](https://github.com/vuejs/vuejs.org/pull/621#issuecomment-384812777):\r\n\r\n> I think `attrs: { class: 'my-class' } }` might make sense as an alias for `class: { 'my-class': true }`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8098","RelatedDescription":"Closed issue \"Make it possible to set static classes within the attrs hash on a data object\" (#8098)"},{"Id":"318651254","IsPullRequest":false,"CreatedAt":"2018-04-29T14:59:14","Actor":"SnosMe","Number":"8100","RawContent":null,"Title":"GC v-for elements","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/2w1397zw70](https://codesandbox.io/s/2w1397zw70)\r\n\r\n### Steps to reproduce\r\n1. Open [https://2w1397zw70.codesandbox.io/#/gc](https://2w1397zw70.codesandbox.io/#/gc)\r\n2. Open DevTools and watch DOM Nodes\r\n3. Click on the \"Add\" button (don`t click \"Clear\")\r\n4. Follow the \"Go back\" link\r\n5. Collect garbage\r\n\r\n### What is expected?\r\nDOM Nodes are GC`ed\r\n\r\n### What is actually happening?\r\nNothing\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8100","RelatedDescription":"Closed issue \"GC v-for elements\" (#8100)"},{"Id":"318721466","IsPullRequest":false,"CreatedAt":"2018-04-29T14:28:28","Actor":"ereztdev","Number":"8104","RawContent":null,"Title":"Vue not rendering state array into options","State":"closed","Body":"Hi, I am trying to render 200,000 options into the select table, and even though its in state, it's not rendering.\r\nIt maybe a weird thing to do, yet there is no reason why this shouldn't be rendered.\r\nThis array is brought in via node backend, so no heavy parsing on Vue's side.\r\n\r\n- I see all options set in store state via Vuex in console.\r\n- No errors are displayed\r\n- Options are empty and not rendering the state cityNames array\r\n- `main.js` is exporting store to all components\r\n\r\n###`store.js`\r\n```\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport axios from 'axios';\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\nstate: {\r\n        isTrue: true,\r\n        cityNames: [],\r\n    },\r\n\r\n    getters:{\r\n        getCityNames(state){\r\n            return state.cityNames;\r\n        }\r\n    },\r\n    mutations: {\r\n        SetCityNames(state, cityNames){\r\n            state.cityNames = cityNames\r\n    },\r\n    actions: {\r\n        loadData({commit}){\r\n            axios.get('http://localhost:3000/allCities')\r\n                .then(function (response) {\r\n                    commit('SetCityNames', response.data)\r\n                }).catch(function (error) {\r\n                    console.log(error);\r\n            });\r\n\r\n        }\r\n    },\r\n});\r\n```\r\n\r\n###component script\r\n\r\n```\r\nexport default {\r\n    name: \"Weather\",\r\n    methods: {\r\n        allCityNames() {\r\n            this.$store.dispatch('loadData')\r\n        }\r\n    },\r\n    created() {\r\n        this.allCityNames();\r\n    }\r\n}\r\n```\r\n\r\n###component template\r\n\r\n```\r\n        <select>\r\n            <option disabled value=\"\">Please select one</option>\r\n            <option v-for=\"cityName in $store.getters.cityNames\">{{cityName}}</option>\r\n        </select>\r\n```","Url":"https://github.com/vuejs/vue/issues/8104","RelatedDescription":"Closed issue \"Vue not rendering state array into options\" (#8104)"},{"Id":"318712428","IsPullRequest":false,"CreatedAt":"2018-04-29T12:14:49","Actor":"DanielSharkov","Number":"8103","RawContent":null,"Title":"Vue.js mustach not correctly rendered only after indenting root element","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/6jnlpno3lw](https://codesandbox.io/s/6jnlpno3lw)\r\n\r\n### Steps to reproduce\r\nThis issue happens, when the root element is not indented and the mustache is split into several lines.\r\n```html\r\n<template>\r\n<div>\r\n\t<p>{{\r\n\t\tmyVar\r\n\t}}</p>\r\n</div>\r\n</template>\r\n```\r\n\r\nOnly when the root element is indented, the mustache gets rendered correctly.\r\n```html\r\n<template>\r\n\t<div>\r\n\t\t<p>{{\r\n\t\t\tmyVar\r\n\t\t}}</p>\r\n\t</div>\r\n</template>\r\n```\r\n\r\nWhat also works, is when mustache is put into a single line and the root element is not indented.\r\n```html\r\n<template>\r\n<div>\r\n\t<p>{{ myVar }}</p>\r\n</div>\r\n</template>\r\n```\r\n\r\n### What is expected?\r\nThe mustache should bind data\r\n\r\n### What is actually happening?\r\nThe mustache gets rendered plain text\r\n\r\n---\r\nOnly wanted to prettify my code, so I split the mustache into several lines and removed the indent of the root element.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8103","RelatedDescription":"Open issue \"Vue.js mustach not correctly rendered only after indenting root element\" (#8103)"},{"Id":"318675267","IsPullRequest":false,"CreatedAt":"2018-04-29T01:06:54","Actor":"baikunz","Number":"8102","RawContent":null,"Title":"Broken reactivity on class instance array property","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/baikunz/rswxt9u6/2/](https://jsfiddle.net/baikunz/rswxt9u6/2/)\r\n\r\n### Steps to reproduce\r\nWait 5 seconds, first array (the one replaced) is not redrawn, while the mutated array is redrawn\r\n\r\n### What is expected?\r\nBoth arrays should be redrawn after 5 seconds\r\n\r\n### What is actually happening?\r\nOnly the mutated array is being redrawn\r\n\r\n---\r\nNot sure if this is really a bug or something I'm doing wrong, but there is clearly something here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8102","RelatedDescription":"Closed issue \"Broken reactivity on class instance array property\" (#8102)"},{"Id":"318660318","IsPullRequest":false,"CreatedAt":"2018-04-28T18:54:38","Actor":"lykahb","Number":"8101","RawContent":null,"Title":"Functional component fails depending on the siblings around it","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/lykahb/9grbbt4b/](https://jsfiddle.net/lykahb/9grbbt4b/)\r\n\r\n### Steps to reproduce\r\n1. Create a functional component that returns several root nodes\r\n2. Use it with is binding, like `<div is='my-component'>` with no siblings around it\r\n3. Render the template\r\n\r\n### What is expected?\r\nRenders correctly\r\n\r\n### What is actually happening?\r\nRenders a string \"undefined\" with no console errors\r\n\r\n---\r\nIt is interesting that it may render successfully depending on the siblings around it. There are several examples in the link.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8101","RelatedDescription":"Open issue \"Functional component fails depending on the siblings around it\" (#8101)"},{"Id":"318289548","IsPullRequest":false,"CreatedAt":"2018-04-27T06:15:01","Actor":"chrisbell08","Number":"8097","RawContent":null,"Title":"Feature Request - v-switch directive","State":"open","Body":"### What problem does this feature solve?\r\nSyntax sugar on several v-if, v-else-if, v-else-if etc\r\n\r\nAn example syntax could be: \r\n\r\n    <div class=\"wrapper\" v-switch=\"headingType\">\r\n        <h1 v-case=\"big\">Headline</h1>\r\n        <h2 v-case=\"small\">Headline</h2>\r\n        <h3 v-case=\"smaller\">Headline</h3>\r\n    </div>\r\n\r\nTo do this in the current setup would be:\r\n\r\n    <div class=\"wrapper\">\r\n        <h1 v-if=\"headingType === 'big'\">Headline</h1>\r\n        <h2 v-else-if=\"headingType === 'small'\">Headline</h2>\r\n        <h3 v-else-if=\"headingType === 'smaller'\">Headline</h3>\r\n    </div>\r\n\r\nYou can see how the switch statement would make the html markup so much cleaner \r\n\r\n### What does the proposed API look like?\r\n    <div class=\"wrapper\" v-switch=\"headingType\">\r\n        <h1 v-case=\"big\">Headline</h1>\r\n        <h2 v-case=\"small\">Headline</h2>\r\n        <h3 v-case=\"smaller\">Headline</h3>\r\n     </div>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8097","RelatedDescription":"Open issue \"Feature Request - v-switch directive\" (#8097)"},{"Id":"318210271","IsPullRequest":true,"CreatedAt":"2018-04-26T23:35:35","Actor":"championswimmer","Number":"8095","RawContent":null,"Title":"[types] lifecycle hooks run in context of instance","State":"closed","Body":"beforeCreate was correct. all others did not have `this` properly defined\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8095","RelatedDescription":"Closed or merged PR \"[types] lifecycle hooks run in context of instance\" (#8095)"},{"Id":"318216250","IsPullRequest":true,"CreatedAt":"2018-04-26T22:19:01","Actor":"championswimmer","Number":"8096","RawContent":null,"Title":"add test to show methods are not added to instance","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8096","RelatedDescription":"Closed or merged PR \"add test to show methods are not added to instance\" (#8096)"},{"Id":"318125721","IsPullRequest":false,"CreatedAt":"2018-04-26T17:47:44","Actor":"deckar01","Number":"8094","RawContent":null,"Title":"Render SIngle-File Components Without Wrapper Boilerplate","State":"closed","Body":"### What problem does this feature solve?\r\nEach single-file Vue component that I treat as an \"entry point\" for rendering in the DOM requires a boilerplate script to bootstrap it:\r\n\r\n```js\r\nimport Vue from 'vue';\r\nimport App from './app.vue';\r\n\r\nexport const view = new Vue({\r\n  el: '#app',\r\n  render: h => h(App),\r\n});\r\n```\r\n\r\nThis seems unnecessary, but there doesn't currently seem to be a way to compile a component as a self-rendering entry point.\r\n\r\n### What does the proposed API look like?\r\n```vue\r\n<template>...</template>\r\n\r\n<script>\r\n  ...\r\n  export default {\r\n    el: '#app',\r\n    ...\r\n  }\r\n</script>\r\n\r\n...\r\n```\r\n\r\nAdding `el` would indicate that the component is meant to include its pre-compiled template into the DOM and initialize as soon as the generated script loads. Currently, single-file component do not support the `el` attribute.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8094","RelatedDescription":"Closed issue \"Render SIngle-File Components Without Wrapper Boilerplate\" (#8094)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"319475424","IsPullRequest":false,"CreatedAt":"2018-05-02T22:09:43","Actor":"sheggi","Number":"2183","RawContent":null,"Title":"Configruation for enable/disable ensureSlash() in hash mode ","State":"closed","Body":"### What problem does this feature solve?\r\nUse Case:\r\nvue-route is used beside other scripts, where plain anchors are used.\r\nClicking a link for `#top` we get `#/top` because of ensureSlash() in hash mode. (There is no route defined for `/top`).\r\nTherefore the other script can't complete because the hash with slash is not recognized.\r\n\r\nI guess the ensureSlash() is only required for matching the `/` home route or `/any...` any other route.\r\n\r\nIs there otherwise a dependency I don't see, where ensureHash() is required?\r\n\r\n### What does the proposed API look like?\r\nHaving a configuration is preferable for disabling the default behaviour.\r\n\r\n```js\r\nrouter  = new VueRouter({\r\n    ensureHash: false\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2183","RelatedDescription":"Closed issue \"Configruation for enable/disable ensureSlash() in hash mode \" (#2183)"},{"Id":"318599337","IsPullRequest":true,"CreatedAt":"2018-05-02T21:51:31","Actor":"TheLarkInn","Number":"2180","RawContent":null,"Title":"chore(package.json): add sideEffects: false field to package.json","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR adds the `\"sideEffects\": false` property in vue-router's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vue-routers's original source files (instead of the flattened esm bundles) and want to remove flow type through a babel-transform, then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system (if they exist!)\r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`).\r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) ","Url":"https://github.com/vuejs/vue-router/pull/2180","RelatedDescription":"Closed or merged PR \"chore(package.json): add sideEffects: false field to package.json\" (#2180)"},{"Id":"319171358","IsPullRequest":false,"CreatedAt":"2018-05-01T11:00:45","Actor":"nowy","Number":"2182","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include arrays","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/en/essentials/navigation.html](https://router.vuejs.org/en/essentials/navigation.html)\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as an array. E.g.\r\n``` json\r\n{\r\n  \"foo\": [\"bar\"]\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work\r\n\r\n### What is actually happening?\r\nIn `router.d.ts`, the typing for `query`, under `Location` is set to:\r\n`Dictionary<string>`.\r\n\r\nThis should be set to allow arrays too. Potentially numbers as well?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2182","RelatedDescription":"Open issue \"Typescript: `Location` interface typing for query should include arrays\" (#2182)"},{"Id":"318926327","IsPullRequest":false,"CreatedAt":"2018-04-30T20:48:02","Actor":"mgarcia96","Number":"2181","RawContent":null,"Title":"Vue router push not working on Firefox","State":"closed","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/332372/](https://jsfiddle.net/50wL7mdz/332372/)\r\n\r\n### Steps to reproduce\r\n[Firefox - Last version]\r\n\r\nJust added a event to a link, add a param to the vuex and then push the step-2 route, and it doens't works on firefox\r\n\r\n### What is expected?\r\nChange url\r\n\r\n### What is actually happening?\r\nNot working url\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2181","RelatedDescription":"Closed issue \"Vue router push not working on Firefox\" (#2181)"},{"Id":"318302414","IsPullRequest":false,"CreatedAt":"2018-04-27T07:43:34","Actor":"adityarw","Number":"2179","RawContent":null,"Title":"am unable to use multiple views giving error","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/posva/6du90epg/](https://jsfiddle.net/posva/6du90epg/)\r\n\r\n### Steps to reproduce\r\nam new to vue please help me..\r\n\r\nrouting code :\r\n\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport HelloWorld from '@/components/HelloWorld'\r\nimport HelloWorlds from '@/components/HelloWorlds'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\nroutes: [\r\n{\r\npath: '/',\r\ncomponent: {\r\ndefault: HelloWorld,\r\nb: HelloWorlds\r\n}\r\n},\r\n{\r\npath: 'nav',\r\nname: 'HelloWorlds',\r\ncomponent: HelloWorlds\r\n}\r\n]\r\n})\r\n\r\nVue component\r\n\r\n<script> export default { name: 'App' } </script> <style> #app { font-family: 'Avenir', Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; text-align: center; color: #2c3e50; margin-top: 60px; } </style>\r\n\r\n### What is expected?\r\ni need to show 2 view one above the other. \r\n\r\n### What is actually happening?\r\ngiving error like this\r\n[Vue warn]: Failed to mount component: template or render function not defined.\r\n\r\nfound in\r\n\r\n---> <Anonymous>\r\n       <App> at src/App.vue\r\n         <Root>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2179","RelatedDescription":"Closed issue \"am unable to use multiple views giving error\" (#2179)"},{"Id":"318269072","IsPullRequest":true,"CreatedAt":"2018-04-27T03:51:09","Actor":"Matsukiyo","Number":"2178","RawContent":null,"Title":"fix typo for navigation.md","State":"open","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2178","RelatedDescription":"Open PR \"fix typo for navigation.md\" (#2178)"},{"Id":"318063301","IsPullRequest":false,"CreatedAt":"2018-04-26T14:47:33","Actor":"guarah","Number":"2177","RawContent":null,"Title":"Route switching increases memory consume","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/guarah/memory-leak](https://github.com/guarah/memory-leak)\r\n\r\n### Steps to reproduce\r\n1 - yarn install\r\n2 - yarn serve\r\n3 - select a main route\r\n4 - switch multiple times between child routes\r\n5 - check the memory consume\r\n\r\n### What is expected?\r\nIncreasing memory when switching routes\r\n\r\n### What is actually happening?\r\nWhen switching between child routes multiple times, the memory consume increases a lot.\r\n\r\n---\r\nIn our company we have an app with this basic setup, loading a few cards in kanban placed in child routes.\r\nWhen switching from one kanban to another, the memory increases and take so long to decrease.\r\nApparently the route components keeps in cache. Is there some way to destroy theese components?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2177","RelatedDescription":"Open issue \"Route switching increases memory consume\" (#2177)"},{"Id":"317844506","IsPullRequest":true,"CreatedAt":"2018-04-26T07:35:02","Actor":"Yakima-Teng","Number":"2176","RawContent":null,"Title":"redundant use of Object.keys","State":"closed","Body":"`configs` exported from `configs.js` is already an array.","Url":"https://github.com/vuejs/vue-router/pull/2176","RelatedDescription":"Closed or merged PR \"redundant use of Object.keys\" (#2176)"},{"Id":"317498966","IsPullRequest":false,"CreatedAt":"2018-04-25T06:52:18","Actor":"Fdango","Number":"2175","RawContent":null,"Title":"Vue-router Nesting problems","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2175","RelatedDescription":"Closed issue \"Vue-router Nesting problems\" (#2175)"},{"Id":"317496725","IsPullRequest":false,"CreatedAt":"2018-04-25T06:42:24","Actor":"Fdango","Number":"2174","RawContent":null,"Title":"I Want to ask next，add template How to jump?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[``](https://codepen.io/fdango/pen/zjBvNq?editors=1010)","Url":"https://github.com/vuejs/vue-router/issues/2174","RelatedDescription":"Closed issue \"I Want to ask next，add template How to jump?\" (#2174)"},{"Id":"317469376","IsPullRequest":false,"CreatedAt":"2018-04-25T03:45:55","Actor":"umardraz","Number":"2173","RawContent":null,"Title":"Help required on router.push","State":"closed","Body":"Hi\r\n\r\nI need a little help to understand why one of my router.push not working as per my requirement.\r\n\r\nI have a search box and on submit I am using router.push and then sending the search box value as keyword here is the example\r\n\r\n```\r\nsubmitSearch () {\r\n      this.$router.push({\r\n        name: 'search',\r\n        params: { keyword: this.keyword }\r\n      })\r\n    }\r\n```\r\n\r\nFor live example you can see this on my site\r\n\r\n> https://www.umardraz.com/login\r\n> username = admin\r\n> password = Passw0rd\r\n> \r\n> \r\n\r\nYou can find the search box right sider the header.","Url":"https://github.com/vuejs/vue-router/issues/2173","RelatedDescription":"Closed issue \"Help required on router.push\" (#2173)"},{"Id":"317034262","IsPullRequest":true,"CreatedAt":"2018-04-24T09:18:56","Actor":"csg-coder","Number":"2172","RawContent":null,"Title":"docs(examples): typo fix","State":"closed","Body":"\r\n","Url":"https://github.com/vuejs/vue-router/pull/2172","RelatedDescription":"Closed or merged PR \"docs(examples): typo fix\" (#2172)"},{"Id":"316909265","IsPullRequest":false,"CreatedAt":"2018-04-23T20:17:03","Actor":"luchux","Number":"2171","RawContent":null,"Title":"Documentation link is down? ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/](https://router.vuejs.org/)\r\n\r\n### Steps to reproduce\r\nVisit links\r\n\r\n### What is expected?\r\nhttps://router.vuejs.org/ should open docs\r\nhttp://vuejs.github.io/vue-router should open docs\r\n\r\n### What is actually happening?\r\nhttps://router.vuejs.org/ (down) \r\nhttp://vuejs.github.io/vue-router (down)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2171","RelatedDescription":"Closed issue \"Documentation link is down? \" (#2171)"},{"Id":"316908030","IsPullRequest":false,"CreatedAt":"2018-04-23T17:27:45","Actor":"luchux","Number":"2170","RawContent":null,"Title":"Documentation link down? ","State":"closed","Body":"I can't access neither of those: \r\nhttp://vuejs.github.io/vue-router\r\nhttps://router.vuejs.org/\r\n\r\n![screen shot 2018-04-23 at 2 26 57 pm](https://user-images.githubusercontent.com/1475656/39142913-785c09e4-4702-11e8-9012-f59132717784.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2170","RelatedDescription":"Closed issue \"Documentation link down? \" (#2170)"},{"Id":"316052064","IsPullRequest":true,"CreatedAt":"2018-04-20T08:27:55","Actor":"ppulwey","Number":"2169","RawContent":null,"Title":"Corrected typo","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2169","RelatedDescription":"Closed or merged PR \"Corrected typo\" (#2169)"},{"Id":"316032028","IsPullRequest":false,"CreatedAt":"2018-04-19T20:38:48","Actor":"jordanramstad","Number":"2168","RawContent":null,"Title":"Allow option to adjust url encoding by path-to-regex","State":"open","Body":"### What problem does this feature solve?\r\nIf you need to use a permalink system, where your API routes need to use a path to get the response. An example of this is using Vue as a frontend for Wordpress, but allowing wordpress to dictate the url structure.\r\n\r\nSo for example\r\n\r\nwould have a route that looks like:\r\n```\r\n{\r\n      name: 'post',\r\n      path: '/:permalink([0-9] [/][0-9] [/][\\\\S] )',\r\n      component: StandardArticle\r\n}\r\n```\r\nand a page would have a route that looks like:\r\n```\r\n{\r\n     name: 'page',\r\n     path: '/:permalink*',\r\n     component: StandardPage\r\n}\r\n```\r\n\r\nThis would mean a post url would look like\r\n/2018/04/some-post\r\nand a page would look like\r\n/some-page\r\n\r\nThe regular expressions work but when you actually try to use them it would look like \r\n/2018%2F04%2Fsome-post\r\nfor the post route, page route would look fine since it does not have a / normally\r\n\r\nI see this is an option in path-to-regex but the option is not forwarded to vue-router. This means that if a path would have a / it would be urlencoded by path-to-regex and makes it seemingly impossible to get around (at least I have not found a way around it).\r\n\r\nThis would have additional benefits of, for instance being able to not urlencode but instead change / with _ or even encode it to base64 or something.\r\n\r\n### What does the proposed API look like?\r\nIt would just be passing the second parameter of path to regexp's compile function to the route.\r\n```\r\n{\r\n     name: 'post',\r\n     path: '/:permalink([0-9] [/][0-9] [/][\\\\S] )',\r\n     compile: {\r\n         encode: (value, token) => value\r\n     },\r\n     component: StandardArticle\r\n},\r\n```\r\nhttps://github.com/pillarjs/path-to-regexp#compile-reverse-path-to-regexp\r\n\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/params.js\r\non line 20 is where it would need to be passed in some way, `{ pretty: true }` is where the encoding can be changed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2168","RelatedDescription":"Open issue \"Allow option to adjust url encoding by path-to-regex\" (#2168)"},{"Id":"315969587","IsPullRequest":false,"CreatedAt":"2018-04-19T17:26:17","Actor":"abhipanda","Number":"2167","RawContent":null,"Title":"scrollBehavior with SSR ( savedPosition)","State":"closed","Body":"I cannot get scrollBehavior to work with SSR, do we have an example for this usecase? The savedPosition is always giving null.\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2167","RelatedDescription":"Closed issue \"scrollBehavior with SSR ( savedPosition)\" (#2167)"},{"Id":"315898576","IsPullRequest":false,"CreatedAt":"2018-04-19T14:18:17","Actor":"xiaoshengkai","Number":"2166","RawContent":null,"Title":"router 嵌套路由，二级路径名，按照 文档实例，无效","State":"closed","Body":"{\r\n      path: '/home/:id',\r\n      component: home,\r\n      children: [\r\n        {\r\n          path: '/publishOrder',\r\n          name: 'publishOrder',\r\n          component: publishOrder\r\n        },\r\n        {\r\n          path: '/todayOrder',\r\n          name: 'todayOrder',\r\n          component: todayOrder\r\n        },\r\n        {\r\n          path: '',\r\n          component: publishOrder\r\n        }\r\n      ]\r\n    }\r\n\r\n按照文档示例如此，二级路由匹配不到响应的二级路由组件\r\n其中，把二级路由改为 \r\n      {\r\n          path: '/home/publishOrder',\r\n          name: 'publishOrder',\r\n          component: publishOrder\r\n        },\r\n        {\r\n          path: '/home/todayOrder',\r\n          name: 'todayOrder',\r\n          component: todayOrder\r\n        }\r\n成功","Url":"https://github.com/vuejs/vue-router/issues/2166","RelatedDescription":"Closed issue \"router 嵌套路由，二级路径名，按照 文档实例，无效\" (#2166)"},{"Id":"315853368","IsPullRequest":false,"CreatedAt":"2018-04-19T12:22:54","Actor":"kunaldodiya","Number":"2165","RawContent":null,"Title":"Navigate back with previous state without refetching all data ???","State":"closed","Body":"I am using NativeScript Vue and vue router, everything works fine, but there is one problem i am facing please help.\r\n\r\nIn NativeScript default router, I can say\r\n\r\n`\r\nimport Detail from \"../pages/Detail\";\r\nexport default {\r\n   methods: {\r\n     navigate(){\r\n       this.$navigateTo(Detail)\r\n     }\r\n   }\r\n}\r\n`\r\n\r\nwhen i use default router, it let me come back with all data, so if i have fetch 20th page result from 3rd party api and on that page i found something that i wanna look. i can click on that go to detail page and come back, and still it is all there.. \r\n\r\nBut when i use Vue Router, and click on any result on 20th page.. yes, it take me to the detail page but when i press back.. again it make a call to 3rd party as Created method activated and i have to fetch all again.\r\n\r\nhow to just do achieve something like native routing on nativescript.. ????","Url":"https://github.com/vuejs/vue-router/issues/2165","RelatedDescription":"Closed issue \"Navigate back with previous state without refetching all data ???\" (#2165)"},{"Id":"315702603","IsPullRequest":false,"CreatedAt":"2018-04-19T05:23:35","Actor":"haizhilin2013","Number":"2164","RawContent":null,"Title":"有没有预加载的路由组件","State":"closed","Body":"### What problem does this feature solve?\r\n![default](https://user-images.githubusercontent.com/5070345/38925720-036c87b2-4333-11e8-874a-2afde7ac6bed.png)\r\n图上，用vue-router同时打开了好几个页面，因为每个页面有好多接口，有些接口请求比较慢，有没有一种机制是同时打开好多页面的时候，有个优先级，当打开到最后一个页面时先打开，然后依次载之前的数据呢？就好比队列一样的功能。\r\n\r\n### What does the proposed API look like?\r\nvue-router api\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2164","RelatedDescription":"Closed issue \"有没有预加载的路由组件\" (#2164)"},{"Id":"315530142","IsPullRequest":false,"CreatedAt":"2018-04-18T15:27:49","Actor":"yyx990803","Number":"2163","RawContent":null,"Title":"Scroll behavior: hash that starts with number","State":"open","Body":"ref: https://github.com/vuejs/vuepress/issues/121\r\n\r\nWhen the selector starts with `/^#\\d/`, should use `getElementById` instead.","Url":"https://github.com/vuejs/vue-router/issues/2163","RelatedDescription":"Open issue \"Scroll behavior: hash that starts with number\" (#2163)"},{"Id":"315457808","IsPullRequest":false,"CreatedAt":"2018-04-18T12:34:22","Actor":"shubich","Number":"2162","RawContent":null,"Title":"Nested routes doesn't mounting after router push named-routes","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/shubich/pen/MGWoMR](https://codepen.io/shubich/pen/MGWoMR)\r\n\r\n### Steps to reproduce\r\nclick button \"work\" and \"doesn't work\"\r\n\r\n### What is expected?\r\nNested routes mounting after router push named-routes\r\n\r\n### What is actually happening?\r\nNested routes doesn't mounting after router push named-routes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2162","RelatedDescription":"Closed issue \"Nested routes doesn't mounting after router push named-routes\" (#2162)"},{"Id":"315445349","IsPullRequest":false,"CreatedAt":"2018-04-18T11:45:50","Actor":"shubich","Number":"2161","RawContent":null,"Title":"Nested route don't mounting after router push","State":"closed","Body":"**router**\r\n``` javascript\r\nconst router = new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: ROUTES.TRENDS,\r\n      component: Trends,\r\n      children: [\r\n        { path: '', components: { [ROUTES.DETAILS]: Providers } },\r\n      ],\r\n      meta: { requiresAuth: true },\r\n    }, ...\r\n  ],\r\n});\r\n```\r\n**sidebar**\r\n``` html\r\n    <div class=\"sidebar\">\r\n      <app-logo />\r\n      <app-menu />\r\n      <router-view :name='ROUTES.DETAILS'/>\r\n    </div>\r\n```\r\n\r\n\r\n**loginform**\r\n``` javascript\r\n    watch: {\r\n      isAuthenticated() {\r\n        if (this.isAuthenticated) {\r\n          this.$router.push({ name: ROUTES.TRENDS });\r\n        }\r\n      }, ...\r\n    },\r\n```\r\n\r\n`<router-view :name='ROUTES.DETAILS'/>` doesn't mounting!\r\nBut it's working when I use ` this.$router.push('/);`\r\n\r\nWhat's wrong?\r\n","Url":"https://github.com/vuejs/vue-router/issues/2161","RelatedDescription":"Closed issue \"Nested route don't mounting after router push\" (#2161)"},{"Id":"315434084","IsPullRequest":false,"CreatedAt":"2018-04-18T11:07:08","Actor":"Limuyang1013","Number":"2160","RawContent":null,"Title":"video cannot resume play when using vue-router","State":"closed","Body":"#### Version\r\n3.0.1\r\n\r\n#### Reproduction link\r\nBecause this problem happened at a project which is in development so i cannot offer a demo temporarily\r\n\r\n#### Steps to reproduce\r\nAt first,I use vue-router in my project which has two pages, let me call them page A and page B\r\nthen,I put an video which is fullscreen display in page a, and i overlap a button on the video to control the video to play or pause\r\nwhen i pause the video,the app will jump from page A to pageB,\r\npaegB has also a button used to jump back to pageA，when i click button on pageB i will emit a event to pageA, and use router.back() to back to pageA, when pageA $on get the event emit in PageB,the paused video will resume to play, in my project, the code Running well in anyone Android machine，but in Iphone6s Iphone8 even in IphoneX when i come back from pageA, i cannot find the scene of the video,so i want to you to make sure,is this caused by vue-router or ios system? thanks a lot , i tried my best but cannot fix it\r\n\r\n#### What is expected?\r\nwhen i come back from pageB, i want to resume my video,but now i cannot see the video scene,and use video's official methods such as  play() or pause() seems useless,so i  reload the video and restart to play,but on any Android machine my code running well,so it make me confused\r\n","Url":"https://github.com/vuejs/vue-router/issues/2160","RelatedDescription":"Closed issue \"video cannot resume play when using vue-router\" (#2160)"},{"Id":"315416816","IsPullRequest":false,"CreatedAt":"2018-04-18T10:12:41","Actor":"haizhilin2013","Number":"2159","RawContent":null,"Title":"有没有预加载的路由组件","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\n![default](https://user-images.githubusercontent.com/5070345/38925720-036c87b2-4333-11e8-874a-2afde7ac6bed.png)\r\n图上，用vue-router同时打开了好几个页面，因为每个页面有好多接口，有些接口请求比较慢，有没有一种机制是同时打开好多页面的时候，有个优先级，最后一个页面先打开，然后依次载之前的数据呢？就好比队列一样的功能。","Url":"https://github.com/vuejs/vue-router/issues/2159","RelatedDescription":"Closed issue \"有没有预加载的路由组件\" (#2159)"},{"Id":"315388651","IsPullRequest":false,"CreatedAt":"2018-04-18T09:47:33","Actor":"sherlyseptiani","Number":"2158","RawContent":null,"Title":"Uncaught Error for Global Before Each","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sherlyseptiani/eywraw8t/47122/](https://jsfiddle.net/sherlyseptiani/eywraw8t/47122/)\r\n\r\n### Steps to reproduce\r\nimport the js file to main.js on webpack-simple vue-cli,\r\nthere will be an uncaught error without any explanation\r\n\r\n### What is expected?\r\nAny route will  redirect to certain path, for example '/signup'\r\n\r\n### What is actually happening?\r\nthe beforeEach throws an uncaught error if I fill the param of next function with any path, if the param is empty, it is fine\r\n\r\n---\r\nI make router.js which export the router instance, but before exporting I add a global navigation guard and it throws an uncaught error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2158","RelatedDescription":"Closed issue \"Uncaught Error for Global Before Each\" (#2158)"},{"Id":"314878354","IsPullRequest":false,"CreatedAt":"2018-04-17T07:39:03","Actor":"trusktr","Number":"2157","RawContent":null,"Title":"Property 'history' does not exist on type 'VueRouter'.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nn/a\r\n\r\n### Steps to reproduce\r\nI'm having a similar issue as https://github.com/vuejs/vue-router/issues/1080. I just made a fresh new app with no type defs added, and I'm only using whatever ships with Vue.\r\n\r\nThis code,\r\n\r\n```js\r\n        computed: {\r\n\r\n            hash() {\r\n\r\n                return this.$router.history.current.path\r\n\r\n            }\r\n\r\n        },\r\n```\r\n\r\ncauses this error:\r\n\r\n```\r\n[tsl] ERROR in /home/trusktr/src/project/src/components/Header.vue.ts(101,47)\r\n      TS2339: Property 'history' does not exist on type 'VueRouter'.\r\n```\r\n\r\nhowever when I log `this.$router` to the console, I do see a `history` property.\r\n\r\n### What is expected?\r\nI should be able to access the `history` property, because I see it is there.\r\n\r\n### What is actually happening?\r\nThe type def doesn't let me\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2157","RelatedDescription":"Closed issue \"Property 'history' does not exist on type 'VueRouter'.\" (#2157)"},{"Id":"314392069","IsPullRequest":false,"CreatedAt":"2018-04-15T08:06:53","Actor":"jaketoolson","Number":"2156","RawContent":null,"Title":"Creating query parameters with indexed arrays encodes array[] brackets incorrectly","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/zxnsmyz9/7/](https://jsfiddle.net/zxnsmyz9/7/)\r\n\r\n### Steps to reproduce\r\n```\r\nlet data = {\r\n  'filter[galaxy_id]': '1,2,3',\r\n  'filter[name]': 'abc',\r\n  'filter[amenities]': '4,5,6'\r\n};\r\n```\r\n```this.$router.push({to: '/', query: data});```\r\n\r\n### What is expected?\r\nhttp://travelr.local?filter[galaxy_id]=1,2,3&filter[name]=abc&filter[amenities]=4,5,6\r\n\r\n### What is actually happening?\r\nhttp://travelr.local?filter%5Bgalaxy_id%5D=1,2,3&filter%5Bname%5D=abc&filter%5Bamenities%5D=4,5,6\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2156","RelatedDescription":"Closed issue \"Creating query parameters with indexed arrays encodes array[] brackets incorrectly\" (#2156)"},{"Id":"314287620","IsPullRequest":false,"CreatedAt":"2018-04-14T12:03:44","Actor":"hlefebvre","Number":"2155","RawContent":null,"Title":"isSameRoute test order","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/2zlyzp6mm0](https://codesandbox.io/s/2zlyzp6mm0)\r\n\r\n### Steps to reproduce\r\nin the sample just click 'launch' and then 'fail'\r\n\r\nin general\r\n\r\n1. create a route in the router with a name and a component\r\n2. pragmatically change to the component using this.$router.push({ name: xxx, params: yyy })\r\n3. put some link/button inside the component that will call this.$router.push with the same name but different params\r\n\r\n\r\n### What is expected?\r\nin the sample: the text should update\r\n\r\nin general:\r\n\r\nThe router should update this.$route.params according to the new values given, the \"completion\" callback should be called\r\n\r\n### What is actually happening?\r\nin the sample: the text is not updated\r\n\r\nin general:\r\n\r\nThe router is not loading the new params, the \"abort\" callback is called\r\n\r\n---\r\nin the isSameRoute function there a several cases\r\nwhen there is a 'path' it is tested before when there is a 'name'\r\n'path' is mandatory, we cannot create routes without path\r\nthus the \"name/params\" comparison is never triggered and vue-router considers that the page is the same and aborts the navigation\r\n\r\ninverting the order of the tests (testing for name before path) will fix this issue but I do not know enough the vue-router internals do be sure it will not break some other functionalities\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2155","RelatedDescription":"Closed issue \"isSameRoute test order\" (#2155)"},{"Id":"313786109","IsPullRequest":false,"CreatedAt":"2018-04-12T15:49:24","Actor":"dev-shane","Number":"2154","RawContent":null,"Title":"base option is case sensitive","State":"open","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://github.com/dev-shane/vue-router-bug-demo](https://github.com/dev-shane/vue-router-bug-demo)\r\n\r\n### Steps to reproduce\r\nMy app is served under /app/, then I have config /src/router/index.js as follow\r\n```javascript\r\nexport default new Router({\r\n  mode: 'history',\r\n  base: '/app',\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'Index',\r\n      redirect: {name: 'Home'}\r\n    },\r\n    {\r\n      path: '/home',\r\n      name: 'Home',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '*',\r\n      name: '/error',\r\n      component: Error\r\n    }\r\n  ]\r\n})\r\n```\r\nBut I got this result\r\n[http://localhost:8080/app/home](http://localhost:8080/app/home) to /home  \r\n[http://localhost:8080/app/Home](http://localhost:8080/app/Home)  to /home  \r\n[http://localhost:8080/App/home](http://localhost:8080/App/home) to /error  \r\n[http://localhost:8080/App/Home](http://localhost:8080/App/Home) to /error  \r\n\r\n\r\n### What is expected?\r\n[http://localhost:8080/app/home](http://localhost:8080/app/home) to /home  \r\n[http://localhost:8080/app/Home](http://localhost:8080/app/Home)  to /home  \r\n[http://localhost:8080/App/home](http://localhost:8080/App/home) to /home  \r\n[http://localhost:8080/App/Home](http://localhost:8080/App/Home) to /home  \r\n\r\n### What is actually happening?\r\n[http://localhost:8080/app/home](http://localhost:8080/app/home) to /home  \r\n[http://localhost:8080/app/Home](http://localhost:8080/app/Home)  to /home  \r\n[http://localhost:8080/App/home](http://localhost:8080/App/home) to /error  \r\n[http://localhost:8080/App/Home](http://localhost:8080/App/Home) to /error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2154","RelatedDescription":"Open issue \"base option is case sensitive\" (#2154)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"319553989","IsPullRequest":false,"CreatedAt":"2018-05-02T13:32:58","Actor":"acan13","Number":"1257","RawContent":null,"Title":"registerModule option to preserve state while initializing attributes added since previous initialization","State":"open","Body":"### What problem does this feature solve?\r\nContext: Currently if you use registerModule with {preserveState: false} it will reinitialize the entire module state and overwrite all the values. If you use {preserveState: true} it will not do anything to the current values.\r\n\r\n\r\nProblem: What if you wish to preserve the values, but you have added attributes since the last time the module was initialized? If you use {preserveState: true} it will not add the new attribute (possible breaking things) while if you use {preserveState: false} it will overwrite all of the state already there. \r\n\r\n\r\nFeature request: Could there be a happy medium where vuex will only initialize attributes that aren't already present?\r\n\r\n\r\nUse case: We are using vue persisted state to persist UI settings stored in vuex. Because we reuse these settings in a few different apps, we store the module definitions in a shared folder and then import them into our different apps using registerModule. If we use {preserveState: false} then the settings in place are overwritten while if we use {preserveState: true} the new settings we add don't get added to the store.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nThe current behavior makes sense to me, so I would propose leaving it and adding another option. I have no idea what to call it, but something like:\r\n```javascript\r\nVue.registerModule('mymodule', myModule, {preserveState: true, updateAttributes: true});\r\n```\r\n\r\nI'm new to this, but I would be willing to look into how to implement it if people think it would be a good idea.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1257","RelatedDescription":"Open issue \"registerModule option to preserve state while initializing attributes added since previous initialization\" (#1257)"},{"Id":"319468849","IsPullRequest":false,"CreatedAt":"2018-05-02T08:58:31","Actor":"jatarga","Number":"1256","RawContent":null,"Title":"Module reusing is not working","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/18l8w90v34](https://codesandbox.io/s/18l8w90v34)\r\n\r\n### Steps to reproduce\r\nhttps://codesandbox.io/s/18l8w90v34\r\n\r\n### What is expected?\r\nMultiple instance of a component with it's (namespaced) store should not share the same state, because I'm initializing the state with new function instance:\r\n\r\n``` js\r\n    export default {\r\n         namespaced: true,\r\n         state: function() {\r\n              // new instance for each component?\r\n              return {\r\n                 counter: 100\r\n              };\r\n          },\r\n        getters: {\r\n            counter: state => state.counter\r\n        },\r\n        mutations: {\r\n             updateCounter(state, counter) {\r\n                 state.counter = counter;\r\n             }\r\n         }\r\n     };\r\n```\r\n\r\n### What is actually happening?\r\nI have a `DepartmentContactSelectorRow `component with it's own store, and want to use that component in different pages but Vuex using same store state for all instances of `DepartmentContactSelectorRow`, although I return `state `with new function instance. I tried it with namespaced and not-namespaced but still same problem. Please check the demo I provided.\r\n\r\nReference doc: https://vuex.vuejs.org/en/modules.html (bottom of page)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1256","RelatedDescription":"Open issue \"Module reusing is not working\" (#1256)"},{"Id":"318732713","IsPullRequest":false,"CreatedAt":"2018-04-30T08:51:17","Actor":"ChristianStornowski","Number":"1255","RawContent":null,"Title":"Vuex types are not working with Typescript 2.8.3 for a root store with modules and state key-value pairs","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex](https://github.com/vuejs/vuex)\r\n\r\n### Steps to reproduce\r\n1. clone https://github.com/vuejs/vuex\r\n2. change to typescript 2.8.3\r\n3. npm run test:types\r\n\r\n### What is expected?\r\nNo type error or warning was printed in console\r\n\r\n### What is actually happening?\r\nerror TS2345: Argument of type '{ state: { value: number; }; modules: { a: { modules: { b: { state: { value: number; }; }; }; }; ...' is not assignable to parameter of type 'StoreOptions<RootState>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '{ value: number; }' is not assignable to type 'RootState | undefined'.\r\n      Type '{ value: number; }' is not assignable to type 'RootState'.\r\n        Property 'a' is missing in type '{ value: number; }'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1255","RelatedDescription":"Closed issue \"Vuex types are not working with Typescript 2.8.3 for a root store with modules and state key-value pairs\" (#1255)"},{"Id":"318608492","IsPullRequest":true,"CreatedAt":"2018-04-28T07:24:06","Actor":"bibi7","Number":"1254","RawContent":null,"Title":"Fix: amend the code in eg.","State":"closed","Body":"Signed-off-by: wangzhaojie <wangzhaojie@antiy.cn>\r\nhey there,  today i'm learing vuex and i find that a little mistake which may be wrong in this md.\r\ni think use `this.state` instead of `state` may be good cuz the console will not go red\r\nhave fun : )","Url":"https://github.com/vuejs/vuex/pull/1254","RelatedDescription":"Closed or merged PR \"Fix: amend the code in eg.\" (#1254)"},{"Id":"318599035","IsPullRequest":true,"CreatedAt":"2018-04-28T04:22:31","Actor":"TheLarkInn","Number":"1253","RawContent":null,"Title":"chore(package.json): add sideEffects: false field to package.json","State":"open","Body":"This PR adds the `\"sideEffects\": false` property in vuex's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vuex's original source files (instead of the flattened esm bundles), then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system. \r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`). Users would still have to explicitly alias vuex (as it shows in your examples folder to realize these build speed and size wins). \r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) \r\n\r\nRelated: https://github.com/vuejs/vue/pull/8099","Url":"https://github.com/vuejs/vuex/pull/1253","RelatedDescription":"Open PR \"chore(package.json): add sideEffects: false field to package.json\" (#1253)"},{"Id":"317907922","IsPullRequest":true,"CreatedAt":"2018-04-26T07:26:40","Actor":"songzeng2016","Number":"1252","RawContent":null,"Title":"Modify object extended operator case","State":"open","Body":"Connected above, easier to understand.","Url":"https://github.com/vuejs/vuex/pull/1252","RelatedDescription":"Open PR \"Modify object extended operator case\" (#1252)"},{"Id":"317388828","IsPullRequest":false,"CreatedAt":"2018-04-24T20:46:35","Actor":"grimaldou","Number":"1251","RawContent":null,"Title":"Error installing issue","State":"closed","Body":"Hi guys, running the ```npm install --save vuex```\r\n\r\nthrows:\r\nnpm ERR! Could not install from \"vuex\" as it does not contain a package.json file. \r\n\r\nIm installing in a fresh repo and also some old projects I have since today display the same error\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1251","RelatedDescription":"Closed issue \"Error installing issue\" (#1251)"},{"Id":"316915655","IsPullRequest":false,"CreatedAt":"2018-04-24T09:06:07","Actor":"suau","Number":"1249","RawContent":null,"Title":"Vuex.Store.watch with immediate:true is too immediate","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/suaujs/8b9m301c/](https://jsfiddle.net/suaujs/8b9m301c/)\r\n\r\n### Steps to reproduce\r\nClick run in the jsfiddle and check the console\r\n\r\n### What is expected?\r\nThe Vuex.Store.watch method returns a unwatch function, which can be called to stop watching.\r\nWith the immediate option, the current value should be called and the unwatch() function should be available in the callback.\r\n\r\n### What is actually happening?\r\nThe issue arises when Vuex.Store.watch is used with the immediate option, which will trigger the callback synchronously within the watch() call.\r\ntherefore it isn't possible to unwatch from within the callback anymore as the callback is called before the watch() method returns the unwatch method.\r\n\r\n---\r\n### Why is this important/usecase:\r\nGet a store object until an expected value is returned, then stop watching and execute an action.\r\nExample 1: Get the \"user\" object from the store, let's assume:\r\n- undefined: the user hasn't been loaded from localstorage yet \r\n- null: means there is no user\r\n- object: the user is loaded and logged in\r\n\r\nhere is some code on how I'd do that (not working, due to mentioned behavior/bug):\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const unwatch = store.watch(\r\n            (state: any) => {\r\n                return state.user;\r\n            },\r\n            (value: any) => {\r\n                if (value || value === null) {\r\n                    unwatch(); // THIS WILL THROW AN ERROR IF IT IS THE FIRST VALUE RECEIVED\r\n                    resolve(value)\r\n                }\r\n            },\r\n            {\r\n                immediate: true\r\n            }\r\n        );\r\n    });\r\n}\r\n```\r\n\r\n### Possible solutions\r\n- Vuex.Store.watch should never run the getter or callback synchronously in the `watch()` call\r\n- pass in an unwatch function as the third parameter into the callback (see workaround wrapper below)\r\n- make use of the callbacks return value, e.g. `return true` will stop watching\r\n\r\n### Workaround\r\nManually check if the current state is already meeting your `unwatch()` expectations and only register a store watcher if that's not the case. Fix for Example 1:\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const user = store.state.user;\r\n        if (user || user === null) {\r\n            resolve(user);\r\n        } else {\r\n            const unwatch = store.watch(\r\n                (state: any) => {\r\n                    return state.user;\r\n                },\r\n                (value: any) => {\r\n                    if (value || value === null) {\r\n                        unwatch();\r\n                        resolve(value)\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    });\r\n}\r\n```\r\n### Workaround wrapper\r\nThis is a more general purpose wrapper as a workaround (not fully tested)\r\n```\r\nfunction wrapper(store: Store<any>, getter: (state?: any, getters?: any) => any,\r\n                  callback: (newValue?: any, oldValue?: any, unwatch?: () => void) => void, options?: any): () => void {\r\n    // callback receives a unwatch function as third parameter\r\n    if (options.immediate) {\r\n        let shouldStop = false;\r\n        const current = getter(store.state, store.getters);\r\n        callback(current, undefined, () => {\r\n            shouldStop = true;\r\n        });\r\n        if (shouldStop) {\r\n            return () => {};\r\n        }\r\n    }\r\n    const unwatch = store.watch(\r\n        getter,\r\n        (newValue: any, oldValue: any) => {\r\n            callback(newValue, oldValue, unwatch);\r\n        },\r\n        Object.assign({}, options, {immediate: false}));\r\n    return unwatch;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1249","RelatedDescription":"Closed issue \"Vuex.Store.watch with immediate:true is too immediate\" (#1249)"},{"Id":"316927011","IsPullRequest":false,"CreatedAt":"2018-04-23T18:23:11","Actor":"levimichael","Number":"1250","RawContent":null,"Title":"Need more specific errors for missing mapping helpers","State":"closed","Body":"Hello! I've run into this issue a few times over the past few weeks. When setting up my mapState, etc, I often forget to import the function from vuex into my component. I realize that this is a result of my own forgetfulness, however the error \"Cannot read property 'middleware' of undefined\" is not helpful.\r\n\r\nAlthough by now I'm starting to catch myself by attributing that error to missing an import. 😆\r\n\r\nNot sure what can be done with this specifically, but it would be nice to see more specific errors until I break this habit of forgetting. ","Url":"https://github.com/vuejs/vuex/issues/1250","RelatedDescription":"Closed issue \"Need more specific errors for missing mapping helpers\" (#1250)"},{"Id":"316911432","IsPullRequest":false,"CreatedAt":"2018-04-23T17:37:12","Actor":"suau","Number":"1248","RawContent":null,"Title":"Vuex.Store.watch with immediate:true is too immediate","State":"closed","Body":"### Expected:\r\nThe `Vuex.Store.watch` method returns a `unwatch function`, which can be called to stop watching.\r\nThis can be called from within the callback as expected. (note: the callback will only be called on changes, the initial value will only be returned if the immediate option is used)\r\n\r\n### Issue:\r\nThe issue arises when `Vuex.Store.watch` is used with the `immediate option`, which will trigger the callback immediately with the current value of the expression.\r\nUsing `immediate: true` it isn't possible to unwatch from within the callback anymore as the callback is called before the watch() method returns the unwatch method.\r\n\r\n### Why is this important/usecase:\r\nGet a store object until an expected value is returned, then stop watching and execute an action.\r\nExample 1: Get the \"user\" object from the store, let's assume:\r\n- undefined: the user hasn't been loaded from localstorage yet \r\n- null: means there is no user\r\n- object: the user is loaded and logged in\r\n\r\nhere is some code on how I'd do that (not working, due to mentioned behavior/bug):\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const unwatch = store.watch(\r\n            (state: any) => {\r\n                return state.user;\r\n            },\r\n            (value: any) => {\r\n                if (value || value === null) {\r\n                    unwatch(); // THIS WILL THROW AN ERROR IF IT IS THE FIRST VALUE RECEIVED\r\n                    resolve(value)\r\n                }\r\n            },\r\n            {\r\n                immediate: true\r\n            }\r\n        );\r\n    });\r\n}\r\n```\r\n\r\nI've created a fiddle here to showcase the issue, (just set immediate: false to see how it should work):\r\nhttps://jsfiddle.net/suaujs/8b9m301c/\r\n\r\n### Possible solutions\r\n- Vuex.Store.watch should never run the getter or callback synchronously in the `watch()` call\r\n- pass in an unwatch function as the third parameter into the callback (see workaround wrapper below)\r\n- make use of the callbacks return value, e.g. `return true` will stop watching\r\n\r\n### Workaround\r\nManually check if the current state is already meeting your `unwatch()` expectations and only register a store watcher if that's not the case. Fix for Example 1:\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const user = store.state.user;\r\n        if (user || user === null) {\r\n            resolve(user);\r\n        } else {\r\n            const unwatch = store.watch(\r\n                (state: any) => {\r\n                    return state.user;\r\n                },\r\n                (value: any) => {\r\n                    if (value || value === null) {\r\n                        unwatch();\r\n                        resolve(value)\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    });\r\n}\r\n```\r\n### Workaround wrapper\r\nThis is a more general purpose wrapper as a workaround (not fully tested)\r\n```\r\nfunction wrapper(store: Store<any>, getter: (state?: any, getters?: any) => any,\r\n                  callback: (newValue?: any, oldValue?: any, unwatch?: () => void) => void, options?: any): () => void {\r\n    // callback receives a unwatch function as third parameter\r\n    if (options.immediate) {\r\n        let shouldStop = false;\r\n        const current = getter(store.state, store.getters);\r\n        callback(current, undefined, () => {\r\n            shouldStop = true;\r\n        });\r\n        if (shouldStop) {\r\n            return () => {};\r\n        }\r\n    }\r\n    const unwatch = store.watch(\r\n        getter,\r\n        (newValue: any, oldValue: any) => {\r\n            callback(newValue, oldValue, unwatch);\r\n        },\r\n        Object.assign({}, options, {immediate: false}));\r\n    return unwatch;\r\n}\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1248","RelatedDescription":"Closed issue \"Vuex.Store.watch with immediate:true is too immediate\" (#1248)"},{"Id":"316233065","IsPullRequest":false,"CreatedAt":"2018-04-23T14:12:30","Actor":"frissdiegurke","Number":"1243","RawContent":null,"Title":"Inconsistent reference to replaced state","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/frissdiegurke/50wL7mdz/326656/](https://jsfiddle.net/frissdiegurke/50wL7mdz/326656/)\r\n\r\n### Steps to reproduce\r\n1. Use `store.replaceState` with some new state object that is not the same as the current state.\r\n\r\n### What is expected?\r\n`store._modules.root.state` and `store._modules.root.context.state` should both reference the new state object\r\n\r\n### What is actually happening?\r\n`store._modules.root.state` instead still references the old (detached) state object\r\n\r\n---\r\nI know that `_modules` is a considered private attribute (as the leading `_` tells me), but I thought I should notify you anyways since this is probably unintentional behavior (e.g. it does block garbage collection of the old state) and could lead to further internal issues.\r\n\r\nFor namespaced modules the behavior within `_modulesNamespaceMap` is as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1243","RelatedDescription":"Closed issue \"Inconsistent reference to replaced state\" (#1243)"},{"Id":"316170183","IsPullRequest":true,"CreatedAt":"2018-04-22T15:00:26","Actor":"flytux","Number":"1242","RawContent":null,"Title":"Update actions.md","State":"closed","Body":"revise korean word for mutations -> from 돌연변이 to 상태변이 : line 48","Url":"https://github.com/vuejs/vuex/pull/1242","RelatedDescription":"Closed or merged PR \"Update actions.md\" (#1242)"},{"Id":"316500949","IsPullRequest":true,"CreatedAt":"2018-04-22T12:28:36","Actor":"Jinjiang","Number":"1246","RawContent":null,"Title":"[docs][zh-cn] updates","State":"closed","Body":"https://github.com/vuejs/vuex/compare/6e965c9...ea1e4ef","Url":"https://github.com/vuejs/vuex/pull/1246","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] updates\" (#1246)"},{"Id":"316569097","IsPullRequest":false,"CreatedAt":"2018-04-22T10:55:19","Actor":"gorbypark","Number":"1247","RawContent":null,"Title":"Support ES6 import from <script type=\"module\"> tag inside browser","State":"open","Body":"### What problem does this feature solve?\r\nUsing vuex in the browser is possible, by using a standard html ```<script src='\"vuex.js\">``` tag, but if you want to use something like mapGetters, it require something like ```import { mapGetters } from 'vuex'```.  This is in theory possible in the browser by using a tag like \r\n```\r\n<script type=\"module>\r\n  import { mapGetters } from './vuex.js'\r\n  ...\r\n</script>\r\n``` \r\nbut appears to not work with vuex.  Vue itself, using the vue.esm.browser.js bundle from unpkg works this way, but if vuex.esm.js is used it produces an error.\r\n```\r\nReferenceError: process is not defined\r\n    at Vue.mappedGetter (vuex.esm.js:848)\r\n    at Watcher.get (vue.js:3140)\r\n    at Watcher.evaluate (vue.js:3247)\r\n    at Proxy.computedGetter (vue.js:3503)\r\n    at Proxy.eval (eval at createFunction (vue.js:10667), <anonymous>:3:144)\r\n    at Vue._render (vue.js:4535)\r\n    at Vue.updateComponent (vue.js:2788)\r\n    at Watcher.get (vue.js:3140)\r\n    at new Watcher (vue.js:3129)\r\n    at mountComponent (vue.js:2795)\r\n```\r\n\r\n### What does the proposed API look like?\r\n```import { ... } from 'vuex.esm.js'``` should work inside the browser.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1247","RelatedDescription":"Open issue \"Support ES6 import from <script type=\"module\"> tag inside browser\" (#1247)"},{"Id":"316343995","IsPullRequest":true,"CreatedAt":"2018-04-20T17:04:54","Actor":"periscuelo","Number":"1245","RawContent":null,"Title":"Fixes for pt-br translation","State":"open","Body":"@ktsn I made a little more of revisions.\r\nI believe now we have a good correction pack to make a update.\r\nCan you or @ErickPetru review it for us?\r\nThanks =)","Url":"https://github.com/vuejs/vuex/pull/1245","RelatedDescription":"Open PR \"Fixes for pt-br translation\" (#1245)"},{"Id":"316273159","IsPullRequest":false,"CreatedAt":"2018-04-20T13:42:36","Actor":"Vic-Dev","Number":"1244","RawContent":null,"Title":"Access module namespace from within module","State":"open","Body":"### What problem does this feature solve?\r\nI want to be able to return different data from my module's getter if the name of the module matches the route name. Ie, I have many modules that all use the same underlying store, but are stored under different namespaces. Each module has a getter that attempts to compare it's namespace with the current route name, and then returns different data if the namespace matches the route name.\r\n\r\n### What does the proposed API look like?\r\nThere's a number of ways of making this information available within a store module. You could have it be another parameter that gets passed in to each function. Eg,\r\n```\r\ngetters: {\r\n  thing: (state, getters, rootState, rootGetters, namespace) {\r\n    console.log(namespace);\r\n  }\r\n}\r\n```\r\n\r\nOr you could make it a property on the state I guess:\r\n\r\n```\r\ngetters: {\r\n  thing: (state, getters, rootState, rootGetters) {\r\n    console.log(state._namespace);\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1244","RelatedDescription":"Open issue \"Access module namespace from within module\" (#1244)"},{"Id":"314096808","IsPullRequest":false,"CreatedAt":"2018-04-20T00:43:25","Actor":"isaacguerreir","Number":"1230","RawContent":null,"Title":"[docs] I want to write a Portuguese version","State":"closed","Body":"### What problem does this feature solve?\r\nI'm from Brazil and using Vuex in my work. I want to translate the documentation to Portuguese. I have to do something before start the translation?\r\n\r\n### What does the proposed API look like?\r\nI will only create a paste in docs with the Portuguese version of the documentation, like other languages do.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1230","RelatedDescription":"Closed issue \"[docs] I want to write a Portuguese version\" (#1230)"},{"Id":"315592634","IsPullRequest":true,"CreatedAt":"2018-04-20T00:36:53","Actor":"periscuelo","Number":"1238","RawContent":null,"Title":"(Add pt-br language) Fixes pullrequest of DavidWilliamBalbino ","State":"closed","Body":"I made this pullrequest just to help make the merge of a translation as fast as possible. Thank you all for looking it for us. If need more fixes please, let me know.\r\n\r\nThank you again","Url":"https://github.com/vuejs/vuex/pull/1238","RelatedDescription":"Closed or merged PR \"(Add pt-br language) Fixes pullrequest of DavidWilliamBalbino \" (#1238)"},{"Id":"315820263","IsPullRequest":true,"CreatedAt":"2018-04-19T10:34:13","Actor":"hungphongbk","Number":"1241","RawContent":null,"Title":"🇻🇳Vietnamese translation","State":"open","Body":"Vietnamese translation of Vuex docs. Hope this translation helps many others come from Vietnam join the Vue community.","Url":"https://github.com/vuejs/vuex/pull/1241","RelatedDescription":"Open PR \"🇻🇳Vietnamese translation\" (#1241)"},{"Id":"315708441","IsPullRequest":true,"CreatedAt":"2018-04-19T02:52:38","Actor":"bichikim","Number":"1240","RawContent":null,"Title":"update add isProduction function","State":"closed","Body":" - change using isProduction instead of process.env.NODE_ENV\r\nvuex frequently uses process.env.NODE_ENV so It needs a isProdunction function\r\n","Url":"https://github.com/vuejs/vuex/pull/1240","RelatedDescription":"Closed or merged PR \"update add isProduction function\" (#1240)"},{"Id":"315359436","IsPullRequest":false,"CreatedAt":"2018-04-19T02:39:00","Actor":"aloerina01","Number":"1236","RawContent":null,"Title":"Modify documentation(jp) to remove 'silent commit'","State":"closed","Body":"### What problem does this feature solve?\r\nA user, especially Japanese user, use 'silent' option by mistake.\r\n\r\n### What does the proposed API look like?\r\nRemove or modify below.  \r\n[サイレントコミット · Vuex](https://github.com/vuejs/vuex/blob/5c0050b8861f1995118c9b49a50da25bbd9354ce/docs/ja/mutations.md#%E3%82%B5%E3%82%A4%E3%83%AC%E3%83%B3%E3%83%88%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88)\r\n\r\nRefs:\r\n- [adds mutation filtering to Vuex tab](https://github.com/vuejs/vue-devtools/pull/172)\r\n- [https://github.com/vuejs/vuex/blob/38b236803d592efda141384387bddaf4e0025e2c/src/store.js#L109-L110](https://github.com/vuejs/vuex/blob/38b236803d592efda141384387bddaf4e0025e2c/src/store.js#L109-L110)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1236","RelatedDescription":"Closed issue \"Modify documentation(jp) to remove 'silent commit'\" (#1236)"},{"Id":"315700615","IsPullRequest":true,"CreatedAt":"2018-04-19T02:38:40","Actor":"aloerina01","Number":"1239","RawContent":null,"Title":"docs: Modify document to remove 'silent commit'","State":"closed","Body":"refs: #1236","Url":"https://github.com/vuejs/vuex/pull/1239","RelatedDescription":"Closed or merged PR \"docs: Modify document to remove 'silent commit'\" (#1239)"},{"Id":"315368689","IsPullRequest":false,"CreatedAt":"2018-04-18T08:08:11","Actor":"willypuzzle","Number":"1237","RawContent":null,"Title":"Pass options in mapGetters for computed","State":"closed","Body":"### What problem does this feature solve?\r\nFor example when I use mapGetters, I need the resulting computed ones have cache:false flag set. But it could be valid even for other flags.\r\n\r\n### What does the proposed API look like?\r\n```\r\ncomputed: {\r\n   ...mapGetters('module', {\r\n               simpleGetter: {\r\n                        options: {\r\n                                 cache: false\r\n                        },\r\n                       handler: 'simpleGetter'\r\n               }\r\n      })\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1237","RelatedDescription":"Closed issue \"Pass options in mapGetters for computed\" (#1237)"},{"Id":"315333082","IsPullRequest":true,"CreatedAt":"2018-04-18T08:05:35","Actor":"baooab","Number":"1235","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1235","RelatedDescription":"Closed or merged PR \"Fix typo\" (#1235)"},{"Id":"314511018","IsPullRequest":false,"CreatedAt":"2018-04-16T06:25:17","Actor":"rcholic","Number":"1234","RawContent":null,"Title":"handle async action with promise call to REST API","State":"closed","Body":"### What problem does this feature solve?\r\nI posted the following question on Stackoverflow in the first place, but then I realized I should have probably asked you guys first: [https://stackoverflow.com/questions/49849725/vuex-handle-async-action-with-promise-call-to-rest-api](https://stackoverflow.com/questions/49849725/vuex-handle-async-action-with-promise-call-to-rest-api)\r\n\r\n\r\nI use TypeScript with Vue/Vuex to create a toy app, in which I need to load a list of items from remote API upon rendering a component. In the actions below, I use the library `axios` to make http request, and I return it as a promise:\r\n\r\n```ts\r\n    const actions = {    \r\n      getCurrentSession(context: Context) {\r\n        return axios.get(\"http://localhost:3000/sessions/current\")\r\n          .then((res) => {\r\n            commitSharedFiles(context, res.data.shared_files);\r\n          })\r\n          .catch((e: string) => {\r\n            console.error(e);\r\n          });\r\n      }\r\n    };\r\n    \r\n    // export action\r\n    export const dispatchGetSharedFiles = dispatch(actions.getCurrentSession);\r\n\r\n    // commit\r\n    export const commitSharedFiles = commit(mutations.setSharedFileList);\r\n    \r\n    // mutations to the state tree\r\n    const mutations = {\r\n      setSharedFileList(state: State, sharedFiles: StoreState.DirFile[]) {\r\n        state.sharedFileList = sharedFiles;\r\n      }\r\n    };\r\n```\r\nBecause of the asynchronous nature of the actions, I have to resolve the promise before retrieving the fetched list of files from the store/state tree:\r\n```ts\r\n    // this is called in the mounted() life cycle method:\r\n    Store.dispatchGetSharedFiles(this.$store).then(res => {\r\n                this.sharedFiles = Store.readSharedFilesList(this.$store);\r\n    });\r\n```\r\nThis works, but I think it is very convoluted to resolve the promise and then get the data. Is there a better way to use async actions in Vuex? thanks\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nno idea\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1234","RelatedDescription":"Closed issue \"handle async action with promise call to REST API\" (#1234)"},{"Id":"314392378","IsPullRequest":true,"CreatedAt":"2018-04-15T07:29:25","Actor":"wiiikiii","Number":"1233","RawContent":null,"Title":"Problem in safari double id's","State":"closed","Body":"It seams to be a problem with the app when having id app more than once.","Url":"https://github.com/vuejs/vuex/pull/1233","RelatedDescription":"Closed or merged PR \"Problem in safari double id's\" (#1233)"},{"Id":"314313053","IsPullRequest":true,"CreatedAt":"2018-04-14T09:14:33","Actor":"muronglove","Number":"1232","RawContent":null,"Title":"test-pr","State":"closed","Body":"nothing, just test...","Url":"https://github.com/vuejs/vuex/pull/1232","RelatedDescription":"Closed or merged PR \"test-pr\" (#1232)"},{"Id":"314249264","IsPullRequest":false,"CreatedAt":"2018-04-13T21:01:16","Actor":"MrVichr","Number":"1231","RawContent":null,"Title":"A small fix in typings for StoreOptions","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l2wzjwp4vm](https://codesandbox.io/s/l2wzjwp4vm)\r\n\r\n### Steps to reproduce\r\nSorry I'm not going to spend several hours making a minimal demo project and uploading it to github just to have 8 letters added. The error and fix should be obvious.\r\n```typescript\r\n// src/datamodel/appstore.ts\r\nclass TAppStore {\r\n  counter: number=0;\r\n};\r\n\r\nexport var AppStore=new Vuex.Store<TAppStore>({ \r\n  state: function() {\r\n    console.log('creating AppStore'); //gets called just fine\r\n    return new TAppStore();\r\n  }\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\nNo errors reported on compilation.\r\n\r\n### What is actually happening?\r\n```\r\nERROR in j:\\types\\CML\\front\\src\\datamodel\\appstore.ts\r\n[tsl] ERROR in j:\\types\\CML\\front\\src\\datamodel\\appstore.ts(44,2)\r\n      TS2345: Argument of type '{ state: () => TAppStore; }' is not assignable to parameter of type 'StoreOptions<TAppStore>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '() => TAppStore' is not assignable to type 'TAppStore | undefined'.\r\n      Type '() => TAppStore' is not assignable to type 'TAppStore'.\r\n        Property 'counter' is missing in type '() => TAppStore'.\r\n\r\n  Build failed with errors.\r\n```\r\n\r\n---\r\nIt seems that vuex/types/index.d.ts, in interface StoreOptions, is missing the possibility of using a function instead of an object.\r\nThis is the recommended way to initialize state: https://vuex.vuejs.org/en/modules.html (chapter Module Reuse, at the very bottom).\r\nAn easy fix would be editing the vuex/types/index.d.ts StoreOptions:\r\n```diff\r\nexport interface StoreOptions<S> {\r\n- state?: S;\r\n  state?: S|(()=>S);\r\n  getters?: GetterTree<S, S>;\r\n  actions?: ActionTree<S, S>;\r\n  mutations?: MutationTree<S>;\r\n  modules?: ModuleTree<S>;\r\n  plugins?: Plugin<S>[];\r\n  strict?: boolean;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1231","RelatedDescription":"Open issue \"A small fix in typings for StoreOptions\" (#1231)"},{"Id":"314034522","IsPullRequest":false,"CreatedAt":"2018-04-13T09:30:01","Actor":"dongnaebi","Number":"1229","RawContent":null,"Title":"[ssr] getters can't get data in client-side","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Steps to reproduce\r\nI use Vuex module in vue-ssr,`this.$store.getters['product/screening']` in server-side is work,but in client-side is undefined,how can i solve this problem?or it's a bug?here's my code\r\n```javascript\r\n  import {mapState} from 'Vuex'\r\n  import product from '~/store/modules/product'\r\n  import 'vue-awesome/icons/map-marker-alt'\r\n  export default {\r\n    asyncData ({ store, route }) {\r\n      store.registerModule('product', product)\r\n      return store.dispatch('product/getProductList', {coll: '2', page: 1})\r\n    },\r\n    destroyed () {\r\n      this.$store.unregisterModule('product')\r\n    },\r\n    data: () => ({\r\n      \r\n    }),\r\n    computed: {\r\n      ...mapState({\r\n        list: state => state.product.productList.product,\r\n      }),\r\n      screening () {\r\n        let screening = this.$store.getters['product/screening']\r\n        console.log(screening) // server-side is work,client-side is undefined\r\n        ...\r\n        return screening\r\n      }\r\n    }\r\n  }\r\n```\r\n```javascript\r\n// product.js\r\nimport fetch from '../../api'\r\nexport default {\r\n  namespaced: true,\r\n  state: () => ({\r\n    productList: null\r\n  }),\r\n  getters: {\r\n    screening: state => {\r\n      state.productList.screening.forEach(s => {\r\n        s.value = [{id: 0, name: '全部'}].concat(s.value)\r\n      })\r\n      return state.productList.screening\r\n    }\r\n  },\r\n  mutations: {\r\n    setProductList (state, data) {\r\n      state.productList = data\r\n    }\r\n  },\r\n  actions: {\r\n    async getProductList ({commit, dispatch, rootState}, params = {coll: '', keyword: '', productId: 0, page: 1}) {\r\n      const res = await dispatch('handleError', await fetch(rootState, '/web/api/products/v1', params), { root: true })\r\n      commit('setProductList', res.data)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\n`this.$store.getters['product/screening']` do not undefined\r\n\r\n### What is actually happening?\r\n`this.$store.getters['product/screening']` return undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1229","RelatedDescription":"Open issue \"[ssr] getters can't get data in client-side\" (#1229)"},{"Id":"314030129","IsPullRequest":false,"CreatedAt":"2018-04-13T09:17:06","Actor":"dongnaebi","Number":"1228","RawContent":null,"Title":"[ssr] getters can't get data in client-side","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Steps to reproduce\r\nI use Vuex module in vue-ssr,`this.$store.getters['product/screening']` in server-side is work,but in client-side is undefined,how can i solve this problem?here's my code\r\n```javascript\r\n  import {mapState} from 'Vuex'\r\n  import product from '~/store/modules/product'\r\n  import 'vue-awesome/icons/map-marker-alt'\r\n  export default {\r\n    asyncData ({ store, route }) {\r\n      store.registerModule('product', product)\r\n      return store.dispatch('product/getProductList', {coll: '2', page: 1})\r\n    },\r\n    destroyed () {\r\n      this.$store.unregisterModule('product')\r\n    },\r\n    data: () => ({\r\n      \r\n    }),\r\n    computed: {\r\n      ...mapState({\r\n        list: state => state.product.productList.product,\r\n      }),\r\n      screening () {\r\n        let screening = this.$store.getters['product/screening']\r\n        console.log(screening) // server-side is work,client-side is undefined\r\n        ...\r\n        return screening\r\n      }\r\n    }\r\n  }\r\n```\r\n```javascript\r\n// product.js\r\nimport fetch from '../../api'\r\nexport default {\r\n  namespaced: true,\r\n  state: () => ({\r\n    productList: null\r\n  }),\r\n  getters: {\r\n    screening: state => {\r\n      state.productList.screening.forEach(s => {\r\n        s.value = [{id: 0, name: '全部'}].concat(s.value)\r\n      })\r\n      return state.productList.screening\r\n    }\r\n  },\r\n  mutations: {\r\n    setProductList (state, data) {\r\n      state.productList = data\r\n    }\r\n  },\r\n  actions: {\r\n    async getProductList ({commit, dispatch, rootState}, params = {coll: '', keyword: '', productId: 0, page: 1}) {\r\n      const res = await dispatch('handleError', await fetch(rootState, '/web/api/products/v1', params), { root: true })\r\n      commit('setProductList', res.data)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\n`this.$store.getters['product/screening']` do not undefined\r\n\r\n### What is actually happening?\r\n`this.$store.getters['product/screening']` return undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1228","RelatedDescription":"Closed issue \"[ssr] getters can't get data in client-side\" (#1228)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-05-03T05:30:36.7900416Z","RunDurationInMilliseconds":4709}