{"Data":{"Blog":{"FeedItems":[{"Title":"Styling for Multiple Device Resolutions","PublishedOn":"2019-06-28T18:26:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Guest Post: Charlin Agramonte is a Microsoft MVP and co-founder of CrossGeeks. She writes Xamarin articles in her blog http://xamgirl.com/. Find her on twitter as @Chard003.\nA few months ago we...","Href":"https://devblogs.microsoft.com/xamarin/styling-for-multiple-device-resolutions/","RawContent":null},{"Title":"Migrating MacOS Apps to 64-bit Before the Apple Transition","PublishedOn":"2019-06-26T19:27:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has been moving towards 64-bit only applications on macOS for a number of releases. Last June, Apple started requiring Apps on the macOS App Store to be 64-bit only and macOS 10.13.4 and above...","Href":"https://devblogs.microsoft.com/xamarin/apple-transition-migrate-macos-apps-to-64-bit/","RawContent":null},{"Title":"Faster Xamarin.Android Builds & Smaller Dex Files","PublishedOn":"2019-06-24T18:02:55+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"One of our current focus areas in Xamarin.Android is build performance. The &#8220;inner dev loop&#8221; directly impacts developer productivity&#8211;the time it takes to make a small code change and...","Href":"https://devblogs.microsoft.com/xamarin/dex-counting-xamarin-android-improved/","RawContent":null},{"Title":"Get Started with Free Xamarin Training on Microsoft Learn","PublishedOn":"2019-06-21T19:10:22+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Learn how to build cross-platform mobile applications on Android and iOS with the new Xamarin.Forms content on Microsoft Learn. The new and completely free platform where you can earn points and...","Href":"https://devblogs.microsoft.com/xamarin/microsoft-learn-free-xamarin-training/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio for Mac","PublishedOn":"2019-06-19T18:21:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Visual Studio 2019 for Mac version 8.2 is officially available as a preview. Now featuring significant improvements to the XAML editing experience for Xamarin developers. The Xamarin.Forms XAML...","Href":"https://devblogs.microsoft.com/xamarin/xaml-intellisense-vs4m-xamarin-forms/","RawContent":null},{"Title":"Automatic Android SDK Management","PublishedOn":"2019-06-17T20:24:08+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"As a mobile developer building apps for Android, there are many tools used under the hood to build, deploy, and debug your Android applications. We know this can be an intimidating process. So to...","Href":"https://devblogs.microsoft.com/xamarin/automatic-android-sdk-management/","RawContent":null},{"Title":"Xamarin Podcast: Xamarin.Forms 4 And So Much More!","PublishedOn":"2019-06-14T16:08:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Keeping up with the latest in .NET, C#, Xamarin, and Azure is easier than ever. Co-hosts Matt Soucoup and James Montemagno cover a range of topics relevant to Xamarin developers from designing mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-xamarin-forms-4/","RawContent":null},{"Title":"Grial UI Kit: Building Beautiful Xamarin.Forms Apps, Faster","PublishedOn":"2019-06-12T17:07:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Leonardo Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UI Kit and Gorilla Player. UXDivers specializes in designing and coding...","Href":"https://devblogs.microsoft.com/xamarin/grial-ui-kit-xamarin-forms/","RawContent":null},{"Title":"Join the Microsoft Team at Xamarin Developer Summit","PublishedOn":"2019-06-10T16:54:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"On July 11-12th, the community-run Xamarin Developer Summit is set to launch in Houston, Texas. The two-day conference is packed full of amazing Xamarin content, covering a wide range of mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-developer-summit/","RawContent":null},{"Title":"Use Maps to Display and Navigate Users with Xamarin.Essentials","PublishedOn":"2019-06-07T16:26:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"A common scenario for mobile apps is to help their users get to a specific location. This may be a restaurant, office, or the trailhead for the most amazing hike in the pacific northwest. We can...","Href":"https://devblogs.microsoft.com/xamarin/maps-navagation-xamarin-essentials/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9920953301","Type":"IssuesEvent","CreatedAt":"2019-06-30T14:10:19","Actor":"cra0zy","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3311","RelatedDescription":"Opened issue \"DllImport code does not work when compile from Linux\" (#3311) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add the code bellow anywhere\r\n2. Call it\r\n\r\n```\r\n[DllImport(\"dl\")]\r\npublic static extern IntPtr dlopen(string path, int flags);\r\n```\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nNo crashing.\r\n\r\n### Actual Behavior\r\n\r\nDllNotFoundException gets called.\r\n\r\n### Version Information\r\n\r\nLast stable Linux build.\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\nFull logcat: https://gist.github.com/cra0zy/8af965b4f44ec0b954b30f382ca0fdb8\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9920659021","Type":"PullRequestEvent","CreatedAt":"2019-06-30T11:32:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3308","RelatedDescription":"Merged pull request \"[xaprepare] Use NuGet binary we download\" (#3308) at xamarin/xamarin-android","RelatedBody":"`NuGetRunner` doesn't properly specify full path to the nuget binary we download\r\nas part of the prepare run and, thus, it depends on any random version of the\r\nutility in the user's `$PATH` (if at all) which may lead to random errors\r\ndepending on the nuget version. Fix the issue by passing the full path to the\r\ndownloaded binary.\r\n\r\nAdditionally, fix `ToolRunner` to properly add arguments when managed\r\nruntime (`mono`) is used on Unix. Until now any initial arguments were passed\r\nto **mono** in such case, instead of to the managed executable. Doh."},{"Id":"9919440567","Type":"IssuesEvent","CreatedAt":"2019-06-29T20:49:35","Actor":"the-vindicar","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3310","RelatedDescription":"Opened issue \"Designer breaks when attempting to change layout\" (#3310) at xamarin/xamarin-android","RelatedBody":"Disclaimer: I'm attemtping to follow [this quickstart guide from Microsoft](https://docs.microsoft.com/en-us/xamarin/android/get-started/hello-android/hello-android-quickstart?pivots=windows).\r\n\r\n### Steps to Reproduce\r\n1. Ensure Android API 22 is installed.\r\n2. Create a project of type \"Android App (Xamarin)\"\r\n3. In template dialog, select \"Blank App\" template and Minimum Android Version of 5.1.\r\n4. Open _Resources/layout/activity_main.axml_ \r\n5. According to the guide, I should replace default RelativeLayout with LinearLayout. Select the layout block in the designer and delete it. \r\n6. Drag and drop \"LinearLayout (Vertical)\" from the Tools panel.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n[XamarinWHY.zip](https://github.com/xamarin/xamarin-android/files/3342298/XamarinWHY.zip)\r\n\r\n### Expected Behavior\r\nLinearLayout block is placed in the window, with corresponding changes to axml file.\r\n\r\n### Actual Behavior\r\nDesigner shows loading animation for indefinite amount of time. Attempting to close and reopen the solution results in layout not being rendered by designer at all.\r\n\r\n### Version Information\r\nDisclaimer: I had to back-translate this version info back to English.\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.9.13\r\nVisualStudio.15.Release/15.9.13+28307.718\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA636\r\nMicrosoft Visual C++ 2017\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nGitHub.VisualStudio   2.9.1.7781\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nVisual F# Tools 10.2 для F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 для F# 4.5\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.83 (d15-9@23fa80172)\r\nVisual Studio extension enabling development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.30 (e0af99a34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.4.0.64 (9c8d8e0)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\nPackage manager NuGet   4.6.0\r\nPackage manager NuGet for Visual Studio. \r\n\r\nVisual Studio tools for CMake   1.0\r\nVisual Studio for CMake\r\n\r\nWizards Microsoft Visual C++   1.0\r\nWizards Microsoft Visual C++\r\n\r\nPackage VC Microsoft Visual Studio   1.0\r\nPackage VC Microsoft Visual Studio\r\n\r\nResourcePackage Extension  1.0\r\n\r\nResourcePackage Extension  1.0\r\n\r\nC# Tools  2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\n\r\nJavaScript Language Service   2.0\r\n\r\n### Log File\r\nAbsent, since app was never launched.\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9916937804","Type":"PullRequestEvent","CreatedAt":"2019-06-28T21:42:06","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3287","RelatedDescription":"Merged pull request \"Remove nl.c from libmonodroid.so builds\" (#3287) at xamarin/xamarin-android","RelatedBody":"A bug in mono required changing the signature of CreateNLSocket and CloseNLSocket, and now that those are icalls on Android this is the easiest way to enable changing the signature."},{"Id":"9916811274","Type":"PullRequestEvent","CreatedAt":"2019-06-28T21:13:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3290","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix up DesignTime build Resource.Designer.cs\" (#3290) at xamarin/xamarin-android","RelatedBody":"One of the problems we have with the `ManagedResourceParser` is\r\nthat it uses the `R.txt` to generate the `Resource.Designer.cs`\r\nfile. The issue there is that if the user modifies a layout file\r\n(say adds or changes and id) that will NOT be picked up until\r\nthe next build. This is because the `R.txt` file is generated\r\nby `aapt/aapt2` and those tools are not called for DesignTime\r\nBuilds.\r\n\r\nSo what we need to do is pass in the `$(_AndroidResFlagFile)`\r\ninto the `GenerateResourceDesigner`. This will allow us to\r\ndo a last modified date time check against the `R.txt` file.\r\nIf the `$(_AndroidResFlagFile)` is newer then we should NOT\r\nuse the `R.txt` and parse the layout files to pick up changes."},{"Id":"9916784695","Type":"PullRequestEvent","CreatedAt":"2019-06-28T21:07:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3292","RelatedDescription":"Merged pull request \"[tests] fix for ExistingProject\" (#3292) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/c00095b6e560077bfb94185b6e0b9a36996d3b8b\r\nContext: https://github.com/xamarin/monodroid/pull/1007\r\n\r\nWe have been getting the following error on monodroid builds:\r\n\r\n    /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/Release/bin/xabuild /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/TestRelease/temp/HelloFormsFalse/HelloForms.sln /t:Restore /noconsolelogger \"/flp1:LogFile=/Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/TestRelease/temp/HelloFormsFalse/build.log;Encoding=UTF-8;Verbosity=diagnostic\" @\"/Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/TestRelease/temp/HelloFormsFalse/project.rsp\"\r\n    Microsoft (R) Build Engine version 16.0.42-preview+g804bde742b for Mono\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    MSBUILD : error MSB1009: Project file does not exist.\r\n    Switch: /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/TestRelease/temp/HelloFormsFalse/HelloForms.sln\r\n\r\nIn c00095b, the tests were passing on xamarin-android builds, but they\r\nfail when running in monodroid builds? This appears to be due to\r\ndifferences in test ordering.\r\n\r\nThere was a code path where `ProjectBuilder` was deleting its\r\n`ProjectDirectory` and calling `Populate()` on the project.\r\n\r\nFor an `ExistingProject` in `DeleteBinObjTest`, this would nuke the\r\ndirectory we just extracted from a zip file--causing MSBuild to fail.\r\n\r\nThe fix is to add a new `ShouldPopulate` flag we can set to `false` to\r\nskip the directory deletion."},{"Id":"9916766836","Type":"PullRequestEvent","CreatedAt":"2019-06-28T21:03:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3304","RelatedDescription":"Merged pull request \"[Mono.Android] Add MetaKeyStates.None. [#3180]\" (#3304) at xamarin/xamarin-android","RelatedBody":"Fixes https://github.com/xamarin/xamarin-android/issues/3180.\r\n\r\nDiff against `Mono.Android.dll`:\r\n\r\n```\r\ndiff --git a/mono.android-android-28/mcw/Android.Views.MetaKeyStates.cs b/mono.android-android-28/mcw/Android.Views.MetaKeyStates.cs\r\nindex ee50c45..df2bfa9 100644\r\n--- a/mono.android-android-28/mcw/Android.Views.MetaKeyStates.cs\r\n+++ b/mono.android-android-28/mcw/Android.Views.MetaKeyStates.cs\r\n@@ -28,6 +28,8 @@ namespace Android.Views {\r\n     MetaOn = 65536,\r\n     [global::Android.Runtime.IntDefinition (null, JniField = \"android/view/KeyEvent.META_META_RIGHT_ON\")]\r\n     MetaRightOn = 262144,\r\n+    [global::Android.Runtime.IntDefinition (null, JniField = \"\")]\r\n+    None = 0,\r\n     [global::Android.Runtime.IntDefinition (null, JniField = \"android/view/KeyEvent.META_NUM_LOCK_ON\")]\r\n     NumLockOn = 2097152,\r\n     [global::Android.Runtime.IntDefinition (null, JniField = \"android/view/KeyEvent.META_SCROLL_LOCK_ON\")]\r\n```"},{"Id":"9916766824","Type":"IssuesEvent","CreatedAt":"2019-06-28T21:03:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3180","RelatedDescription":"Closed issue \"Android.Views.MetaKeyStates is enum and should have None = 0\" (#3180) at xamarin/xamarin-android","RelatedBody":"Since wanting to express that no Meta keys are pressed, not having a magical 0 in the source code would be better."},{"Id":"9916592398","Type":"PullRequestEvent","CreatedAt":"2019-06-28T20:27:24","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3309","RelatedDescription":"Opened pull request \"[xaprepare] Fix bundle name generation for PRs\" (#3309) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/microsoft/azure-pipelines-agent/issues/2330\r\n\r\nWe've been running into an issue on Azure Pipelines where the bundle\r\ncreated in our 'Prepare' stage has a different name than the one that is\r\ncalculated later during build stages. This is because we're building a\r\nmerge commit on Azure pipelines, and if the target branch of the PR\r\nchanges in between stages, the merge commit that is checked out will\r\nvary. We'll attempt to work around this (hopefully temporarily) by using\r\nthe HEAD of the source branch of a PR to calculate the bundle hashes,\r\nrather than the HEAD of the source that is checked out at any given time."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9922672392","Type":"PullRequestEvent","CreatedAt":"2019-07-01T03:54:51","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6724","RelatedDescription":"Opened pull request \"Cp uitest4597 fix\" (#6724) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nCherry pick https://github.com/xamarin/Xamarin.Forms/pull/6654 back to 4.0\r\n"},{"Id":"9922017735","Type":"IssuesEvent","CreatedAt":"2019-06-30T23:41:25","Actor":"ZeProgFactory","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6723","RelatedDescription":"Opened issue \"[Bug] [WPF] Images size and position\" (#6723) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nImage sizes and positions not always correctly in WPF.\r\n\r\n### Steps to Reproduce\r\nIf you place an image directly in a page\r\n```\r\n<ContentPage … >\r\n   <Image x:Name=\"image\" HorizontalOptions=\"Center\" VerticalOptions=\"Center\" />\r\n</ContentPage>\r\n```\r\n\r\n### Expected Behavior\r\nAs in UWP the image should be placed in the center of the page and the size should not vary in function of the page size.\r\n\r\n### Actual Behavior\r\nThe image is placed on the left side of the page, and if you resize the page, the image will resize in function of the page height.\r\n\r\n### Basic Information\r\n- Versions with issue:  Xamarin.Forms (Xamarin.Forms.Platform.WPF)  4.0.0.540366, 3.6.0.539721\r\n- IDE: VS 2019\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/17034030/60403657-6ef2f680-9ba0-11e9-8e47-3b76e98ee712.png)\r\n\r\n### Reproduction Link\r\nhttps://github.com/ZeProgFactory/XFTestWPF_Image\r\n"},{"Id":"9921937922","Type":"IssuesEvent","CreatedAt":"2019-06-30T22:52:53","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6722","RelatedDescription":"Opened issue \"Unhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. occurred #713[Bug] \" (#6722) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nI am trying below code to Pick a Photo but getting this error on the MessagingCenter.Send line:\r\n\r\n> Unhandled Exception:\r\n> \r\n> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. occurred\r\n> \r\n\r\n\r\n\r\n**** The TakePhotoAsync MessagingCenter.Send is working perfectly without error..\r\n\r\n\r\nHere is the code:\r\n\r\n```\r\nasync void ImageKidPhotoTapped(object sender, System.EventArgs e)\r\n{\r\n    string action = await DisplayActionSheet(\"كيف تريد تحديث الصورة؟\", \"إلغاء\", null, \"الكاميرا\", \"الألبوم\");\r\n\r\n    if (action == \"الكاميرا\")\r\n    {\r\n        await CrossMedia.Current.Initialize();\r\n\r\n        if (!CrossMedia.Current.IsCameraAvailable || !CrossMedia.Current.IsTakePhotoSupported)\r\n        {\r\n            await DisplayAlert(\"No Camera\", \":( No camera available.\", \"OK\");\r\n            return;\r\n        }\r\n\r\n        var file = await CrossMedia.Current.TakePhotoAsync(new Plugin.Media.Abstractions.StoreCameraMediaOptions\r\n        {\r\n            AllowCropping = true,\r\n            SaveToAlbum = false,\r\n            Directory = \"JafariaImages\",\r\n            Name = \"StudentPhoto.png\"\r\n        });\r\n\r\n        if (file == null) return;\r\n\r\n        MyKidPhoto.Source = ImageSource.FromStream(() =>\r\n        {\r\n            var stream = file.GetStream();\r\n            return stream;\r\n        });\r\n\r\n        new_photo = file;\r\n\r\n        MessagingCenter.Send<object>(this, \"UpdateStudentPhoto\");\r\n    }\r\n    else if (action == \"الألبوم\")\r\n    {\r\n        if (!CrossMedia.Current.IsPickPhotoSupported)\r\n        {\r\n            await DisplayAlert(\"Photos Not Supported\", \":( Permission not granted to photos.\", \"OK\");\r\n            return;\r\n        }\r\n\r\n        var file = await Plugin.Media.CrossMedia.Current.PickPhotoAsync(new Plugin.Media.Abstractions.PickMediaOptions\r\n        {\r\n            PhotoSize = Plugin.Media.Abstractions.PhotoSize.Medium,\r\n        });\r\n\r\n\r\n        if (file == null)\r\n            return;\r\n\r\n        MyKidPhoto.Source = ImageSource.FromStream(() =>\r\n        {\r\n            var stream = file.GetStream();\r\n            file.Dispose();\r\n            return stream;\r\n        });\r\n\r\n        new_photo = file;\r\n\r\n        // HERE is my Error Thrown;\r\n         MessagingCenter.Send<object>(this, \"UpdateStudentPhoto\");\r\n    }\r\n}\r\n\r\n```\r\nThanks,\r\n[Jassim](https://www.softnames.com)\r\n\r\n"},{"Id":"9921185011","Type":"PullRequestEvent","CreatedAt":"2019-06-30T16:00:35","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6704","RelatedDescription":"Merged pull request \"[Android] RequestLayout of button if measure has changed otherwise call force layout to ensure the content will layout correctly\" (#6704) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/6329 added a ForceLayout call when calling GetDesiredSize.  This fixed the text layout issue but it now causes the button to not relayout if the WxH  has changed. So in a case where the button was going from not visible to visible and the height and width would go from zero to not zero then the force layout would just layout the control without redrawing it with the new width and height.\r\n\r\nThis PR calls ForceLayout only if the height and width haven't changed. If the height and width have changed then it calls RequestLayout if there's not a pending layout request. \r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Testing Procedure ###\r\n- ui test 53179 on various APIs with FR's enabled\r\n- ui test Issue6282 on various APIs\r\n- whatever other type of button layout you feel like testing\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard"},{"Id":"9920742433","Type":"IssuesEvent","CreatedAt":"2019-06-30T12:20:41","Actor":"dmariogatto","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6721","RelatedDescription":"Opened issue \"[Bug] ListView blank cells when CachingStrategy=\"RetainElement\" on Android\" (#6721) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen ListView `CachingStrategy=\"RetainElement\"` some cells appear blank in Android when scrolling. Tested in iOS but seems fine. Using `RecycleElement` works as expected.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create ListView\r\n2. Set CachingStrategy=\"RetainElement\"\r\n3. Start scrolling\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.540366 \r\n- Last known good version: 3.6.0.539721\r\n- Affected Devices: tested and found issue with Android Pie, Nougat & Marshmallow\r\n\r\n### Screenshots\r\n\r\n![Blank view cells](https://raw.githubusercontent.com/dmariogatto/xf4-retainelement/master/screenshots/android.png)\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/dmariogatto/xf4-retainelement\r\n"},{"Id":"9920690891","Type":"PullRequestEvent","CreatedAt":"2019-06-30T11:51:48","Actor":"kvpt","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6720","RelatedDescription":"Opened pull request \"[Android] Uniformize handler name (CollectionView)\" (#6720) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nI notificed in a previous change that handler name was not uniform.\r\nSo before that the 4.1.0 is release, I make this PR to fix it.\r\n\r\n### Issues Resolved ### \r\nNone, just housekeeping\r\n\r\n### API Changes ###\r\nChanged:\r\n - void ItemsViewRenderer.LayoutOnPropertyChanged=> void ItemsViewRenderer.OnLayoutPropertyChanged\r\n\r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nNot applicable\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"9920543450","Type":"IssuesEvent","CreatedAt":"2019-06-30T10:22:30","Actor":"leshy06","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6719","RelatedDescription":"Opened issue \"[Bug] Using FontImageSource for a ToolbarItem makes problems with using the font for a Label in Android\" (#6719) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI have two pages. On the first page this a ToolbarItem with Icon as FontImageSource.\r\n\r\nOn the second page there is a Label, which uses the same Font as FontImageSource on the first page.\r\n\r\nBy navigating first time to second page everything is OK. After navigating back and again to the second page the displayed image in the Label is corrupt.\r\n\r\nThe problem occurs only in Android.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.540366\r\n\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/884112/60395171-d6249280-9b2f-11e9-984b-9484efcb6545.png)\r\n![image](https://user-images.githubusercontent.com/884112/60395177-f2c0ca80-9b2f-11e9-87c7-0b9b208fcc14.png)\r\n![image](https://user-images.githubusercontent.com/884112/60395186-1126c600-9b30-11e9-8b76-6fdd12797c0e.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://downloads.membrain-it.com/bugs/app1.zip\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9920446775","Type":"PullRequestEvent","CreatedAt":"2019-06-30T09:22:37","Actor":"dahlbyk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6718","RelatedDescription":"Opened pull request \"[Core] Missing await in Device.InvokeOnMainThreadAsync(Func<Task>)\" (#6718) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nStumbled on https://github.com/xamarin/Xamarin.Forms/pull/5028 as I was considering submitting an equivalent PR myself, and happened to notice a bug: `InvokeOnMainThreadAsync(Func<Task>)` doesn't `await`. I had originally just fixed the bug (note commit timestamps), but figured I might as well practice writing async tests. Pushing what should be a failing test before I push the fix.\r\n\r\nAlso:\r\n- Accepted VS suggestion to use local functions (microoptimization)\r\n- Gave `dummyFunc` more useful names\r\n- Renamed `func`/`funcTask` to `function`, in alignment with `Task.Run(...)` overloads\r\n  - Not sure if you consider renaming public arguments an API change?\r\n\r\n### API Changes ###\r\n\r\nChanged:\r\n - Names of some public arguments from `func`/`funcTask` to `function`\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nTried breaking the working code to hit each `Assert`.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9920352383","Type":"PullRequestEvent","CreatedAt":"2019-06-30T08:25:54","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6708","RelatedDescription":"Merged pull request \"fix NRE in InvokeOnMainThreadAsync\" (#6708) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nDon't return a `null` task from `InvokeOnMainThreadAsync`\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes https://github.com/xamarin/Xamarin.Forms/issues/6705\r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- Core\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nSee issue\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9920352379","Type":"IssuesEvent","CreatedAt":"2019-06-30T08:25:54","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6705","RelatedDescription":"Closed issue \"InvokeOnMainThreadAsync throws NullReferenceException\" (#6705) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n`InvokeOnMainThreadAsync` throws `NullReferenceException`\r\n\r\n### Steps to Reproduce\r\n\r\nDownload reproduction sample: https://github.com/brminnick/InvokeOnMainThreadAsync_Repro\r\n\r\n**Reproduction Steps, iOS**\r\n\r\n1. Open `InvokeOnMainThreadAsync_Repro.sln` in Visual Studio or Visual Studio for Mac\r\n2. Build/Deploy `InvokeOnMainThreadAsync_Repro.iOS` to an iOS Device or Simulator\r\n3. Tap the Button titled `No Crash`\r\n4. Confirm the animation completes successfully\r\n5. Tap the Button titled `Crash1`\r\n6. Confirm the app crashes with `NullReferenceException`\r\n7. Build/Deploy `InvokeOnMainThreadAsync_Repro.iOS` to an iOS Device or Simulator\r\n8. Tap the Button titled `Crash2`\r\n9. Confirm the app crashes with `NullReferenceException`\r\n\r\n**Reproduction Steps, Android**\r\n\r\n1. Open `InvokeOnMainThreadAsync_Repro.sln` in Visual Studio or Visual Studio for Mac\r\n2. Build/Deploy `InvokeOnMainThreadAsync_Repro.Android` to an iOS Device or Simulator\r\n3. Tap the Button titled `No Crash`\r\n4. Confirm the animation completes successfully\r\n5. Tap the Button titled `Crash1`\r\n6. Confirm the app crashes with `NullReferenceException`\r\n7. Build/Deploy `InvokeOnMainThreadAsync_Repro.Android` to an iOS Device or Simulator\r\n8. Tap the Button titled `Crash2`\r\n9. Confirm the app crashes with `NullReferenceException`\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: v4.1.0.496342-pre2\r\n- Last known good version: Unknown\r\n- Environment: (Below)\r\n\r\n### Screenshots\r\n\r\n![](https://user-images.githubusercontent.com/13558917/60371567-7488ea80-99ae-11e9-8228-a1d8dcee6bc9.gif)\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/brminnick/InvokeOnMainThreadAsync_Repro\r\n\r\n### Environment\r\n\r\n=== Visual Studio Enterprise 2019 for Mac (Preview) ===\r\n\r\nVersion 8.2 Preview (8.2 build 874)\r\nInstallation UUID: cc9e7f9a-b3f2-4071-84c4-dd78154d98de\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.14.0.83 (d16-2 / f08d4e3e)\r\n\r\n\tPackage version: 600000296\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 6.0.0.296 (2019-02/1e9f3bfbc5a) (64-bit)\r\n\tPackage version: 600000296\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.1.0.6013\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.0.0-preview6-27804-01\r\n\t3.0.0-preview5-27626-15\r\n\t3.0.0-preview3-27503-5\r\n\t3.0.0-preview-27324-5\r\n\t3.0.0-preview-27122-01\r\n\t2.2.4\r\n\t2.2.0\r\n\t2.2.0-preview3-27014-02\r\n\t2.1.9\r\n\t2.1.8\r\n\t2.1.6\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.6\r\n\t2.0.5\r\n\t1.1.10\r\n\t1.0.13\r\nSDK: /usr/local/share/dotnet/sdk/3.0.100-preview6-012264/Sdks\r\nSDK Versions:\r\n\t3.0.100-preview6-012264\r\n\t3.0.100-preview5-011568\r\n\t2.2.203\r\n\t2.1.505\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/6.0.0/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.10\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2.1 (14490.122)\r\nBuild 10E1001\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.2.0.325\r\nHash: f10cfbf83\r\nBranch: remotes/origin/d16-2\r\nBuild date: 2019-06-19 19:00:46 UTC\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.4.0.34 (Visual Studio Enterprise)\r\nCommit: xamarin-android/d16-2/7cce305\r\nAndroid SDK: /Users/bramin/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.2\r\nSDK Build Tools Version: 28.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2019-02@c6edaa62f94\r\nJava.Interop: xamarin/java.interop/d16-2@b2b2610\r\nLibZipSharp: grendello/LibZipSharp/d16-2@caa0c74\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/master@4f717b6\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/bramin/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.58\r\nHash: d03e3ea\r\nBranch: remotes/origin/d16-2\r\nBuild date: 2019-06-19 16:30:22 UTC\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.14.0.91 (Visual Studio Enterprise)\r\nHash: 2f1cc7bb\r\nBranch: d16-2\r\nBuild date: 2019-06-07 02:49:23-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.14.0.91 (Visual Studio Enterprise)\r\nHash: 2f1cc7bb\r\nBranch: d16-2\r\nBuild date: 2019-06-07 02:49:22-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 802000874\r\nGit revision: e57770efe0d2b92ade1e1b75e52731614e5f9487\r\nBuild date: 2019-06-25 19:43:32+00\r\nBuild branch: release-8.2-preview2\r\nXamarin extensions: a74fb3eb8717fbcb82500b3a107694ad5185aa48\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.5\r\nDarwin 18.6.0 Darwin Kernel Version 18.6.0\r\n    Thu Apr 25 23:16:27 PDT 2019\r\n    root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nNuGet Package Management Extensions 0.19"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9920913809","Type":"PullRequestEvent","CreatedAt":"2019-06-30T13:51:13","Actor":"joconte","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6464","RelatedDescription":"Opened pull request \"[tests/README.md] Fix a typing error \" (#6464) at xamarin/xamarin-macios","RelatedBody":"Xamairn -> Xamarin"},{"Id":"9920505598","Type":"PullRequestEvent","CreatedAt":"2019-06-30T09:59:20","Actor":"joconte","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6463","RelatedDescription":"Opened pull request \"[xammac-test/MapKit/PinAnnotationView] Changed assertion of PinTintColor property to work on other language than English\" (#6463) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/xamarin/xamarin-macios/issues/6462"},{"Id":"9919532907","Type":"IssuesEvent","CreatedAt":"2019-06-29T21:52:31","Actor":"Therzok","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6108","RelatedDescription":"Closed issue \"NSView Tooltip property should allow setting `null`\" (#6108) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. `new NSView().Tooltip = null;`\r\n\r\n### Expected Behavior\r\nCall native `setTooltip:` with `nil`\r\n### Actual Behavior\r\n`throw new ArgumentNullException (\"value\");`\r\n### Environment\r\n```\r\n=== Visual Studio Community 2019 (Preview) for Mac ===\r\n\r\nVersion 8.2 Preview (8.2 build 386)\r\nInstallation UUID: 9bbbfbc6-8200-4909-a2e5-5d531e451a6f\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.25 (d16-0 / 50f75273)\r\n\r\n\tPackage version: 518010026\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.26 (pull-request-14392/d76505c27ee) (64-bit)\r\n\tPackage version: 518010026\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.0.2.5988\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.4\r\n\t2.1.10\r\n\t2.1.1\r\n\t2.1.0-preview1-25802-02\r\n\t2.0.0\r\n\t2.0.0-preview2-25407-01\r\nSDK: /usr/local/share/dotnet/sdk/2.2.203/Sdks\r\nSDK Versions:\r\n\t2.2.203\r\n\t2.1.603\r\n\t2.1.301\r\n\t2.1.0-preview1-007306\r\n\t2.1.0-preview1-006958\r\n\t2.0.0-preview3-006889\r\n\t2.0.0-preview2-006497\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.6.0.25 (Visual Studio Community)\r\nHash: 50f75273\r\nBranch: d16-0\r\nBuild date: 2019-03-05 11:50:33-0800\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.5.1 (Visual Studio Community)\r\nCommit: HEAD/234003d1a\r\nAndroid SDK: /Users/davidkarlas/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1    (API level 16)\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.0\r\nSDK Build Tools Version: 27.0.0\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/davidkarlas/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.55\r\nHash: 642726c\r\nBranch: remotes/origin/d16-2~1\r\nBuild date: 2019-05-21 15:24:32 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.6.0.25 (Visual Studio Community)\r\nHash: 50f75273\r\nBranch: d16-0\r\nBuild date: 2019-03-05 11:50:33-0800\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.1.99.640\r\nHash: b48589cbe\r\nBranch: remotes/origin/master\r\nBuild date: 2019-05-14 05:55:14 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 802000386\r\nGit revision: 34a93111b2bf726303e5906342b2680c11c09e37\r\nBuild date: 2019-05-22 13:31:13+00\r\nBuild branch: pr-david-dragDrop\r\nXamarin extensions: 19d1763237df85952f65b24fb18756fb05c0d614\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n\r\n```\r\n"},{"Id":"9919203739","Type":"IssuesEvent","CreatedAt":"2019-06-29T18:27:19","Actor":"joconte","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6462","RelatedDescription":"Opened issue \"[xammac tests / Mac / Debug] test failing because machine language is in frenc\" (#6462) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1144685402965643277","CreatedAt":"2019-06-28T19:14:01+00:00","UserScreenname":"xamarinhq","Text":"We realized that making UI *look* good is not enough; it has to be truly adaptive. See how to handle this by using… https://t.co/CtEZskZmJ9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":109,"FavoriteCount":36,"RawContent":null},{"Id":"1144326789239644160","CreatedAt":"2019-06-27T19:29:01+00:00","UserScreenname":"xamarinhq","Text":"This week’s Xamarin Essential API, we look at the Email API; enabling you to open a pre-populated e-mail (with atta… https://t.co/oaob7atjW7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":14,"RawContent":null},{"Id":"1144002014592061441","CreatedAt":"2019-06-26T21:58:29+00:00","UserScreenname":"xamarinhq","Text":"Reminder: Though new Xamarin .Mac applications target 64-bit by default, existing Xamarin .Mac applications that ta… https://t.co/3k5pQmlyq9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":28,"FavoriteCount":13,"RawContent":null},{"Id":"1143968928076640257","CreatedAt":"2019-06-26T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/YssrTsTPHN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":23,"FavoriteCount":4,"RawContent":null},{"Id":"1143283413757190148","CreatedAt":"2019-06-24T22:23:01+00:00","UserScreenname":"xamarinhq","Text":"We've reevaluated our Xamarin .Android codebase and made changes that sped up builds and made smaller Dex Files. Se… https://t.co/H3JE59pryL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":67,"RawContent":null},{"Id":"1143177825882726403","CreatedAt":"2019-06-24T15:23:27+00:00","UserScreenname":"xamarinhq","Text":"Get better at building cross-platform mobile apps with the new Xamarin.Forms. Microsoft Learn is all new and a comp… https://t.co/Kb8hT5LkIZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":84,"FavoriteCount":41,"RawContent":null},{"Id":"1142066359947407362","CreatedAt":"2019-06-21T13:46:53+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto… https://t.co/zcg70tbgE9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"1141695710716469249","CreatedAt":"2019-06-20T13:14:03+00:00","UserScreenname":"xamarinhq","Text":"Thanks to your feedback, #VS4Mac 8.2 has some really great improvements to the XAML editing experience; including i… https://t.co/vv0DVw9957","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":9,"RawContent":null},{"Id":"1141064668477345794","CreatedAt":"2019-06-18T19:26:31+00:00","UserScreenname":"xamarinhq","Text":"On this episode of the #XamarinShow, @JamesMontemagno and #MSMVP @DanJSiegel show us a super-cool feature of Prism… https://t.co/GLEhnDlQjp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":16,"RawContent":null},{"Id":"1140735760875872256","CreatedAt":"2019-06-17T21:39:33+00:00","UserScreenname":"xamarinhq","Text":"We want to make sure you’re using the latest tooling. The new and improved Automatic Android SDK Management tool is… https://t.co/H0CSaxzj9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":29,"RawContent":null},{"Id":"1140660631273652224","CreatedAt":"2019-06-17T16:41:01+00:00","UserScreenname":"xamarinhq","Text":"On the latest Xamarin.Essential API of the week show, we take a look at the File System Helpers API which contains… https://t.co/GOGKCwXu6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":34,"FavoriteCount":12,"RawContent":null},{"Id":"1139589442732285953","CreatedAt":"2019-06-14T17:44:30+00:00","UserScreenname":"xamarinhq","Text":"Keeping up w/the latest in #dotNET, C#, &amp; #Xamarin is easier than ever. \nThis week’s #XamarinPodcast includes:\n- hi… https://t.co/FDDO27QHDh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1138875870553300995","CreatedAt":"2019-06-12T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"We make it simple for .NET developers to build beautiful cross-platform apps, fast.\nTake a look at how Grial UI Kit… https://t.co/vceU8u475R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":108,"FavoriteCount":48,"RawContent":null},{"Id":"1138511096380309504","CreatedAt":"2019-06-11T18:19:32+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @chewamanda, App Center Program Manager, shows us the latest features in App Center… https://t.co/VHxAknaumJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":17,"RawContent":null},{"Id":"1138151096067792898","CreatedAt":"2019-06-10T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"Join us at Xamarin Developer Summit - July 11-12. With 35+ sessions, there is something for everyone:\n- Mobile DevO… https://t.co/Ez5mDpM1Az","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":84,"FavoriteCount":35,"RawContent":null},{"Id":"1137049335273840640","CreatedAt":"2019-06-07T17:31:01+00:00","UserScreenname":"xamarinhq","Text":"Our cross-platform API library enables any mobile app that uses the Maps API to launch a map w/ a specific location… https://t.co/BWS4qeqtyU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":34,"RawContent":null},{"Id":"1136679096954449921","CreatedAt":"2019-06-06T16:59:49+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1136666060189573120","CreatedAt":"2019-06-06T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Compass API; enabling you to monitor the de… https://t.co/6Iq1tNqo0B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":13,"RawContent":null},{"Id":"1136362715805552641","CreatedAt":"2019-06-05T20:02:38+00:00","UserScreenname":"xamarinhq","Text":"Now available... the pre-release version of Xamarin.Forms 4.1. And we're happy to say that CheckBox &amp; improved text… https://t.co/BGmdIAVxAO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":156,"FavoriteCount":68,"RawContent":null}]}},"RunOn":"2019-07-01T05:30:54.7089617Z","RunDurationInMilliseconds":3392}