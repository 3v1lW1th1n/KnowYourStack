{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core 2.1 June Update","PublishedOn":"2018-06-22T21:08:25+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We released .NET Core 2.1.1. This update includes .NET Core SDK 2.1.301, ASP.NET Core 2.1.1 and .NET Core 2.1.1. See .NET Core 2.1.1 release notes for complete details on the release. Quality Updates...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/","RawContent":null},{"Title":".NET Core 2.0 will reach End of Life on October 1, 2018","PublishedOn":"2018-06-20T19:12:38+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Last Updated: 6/22/2018 .NET Core 2.0 was released on August 14, 2017. As a non-LTS release, it is supported for 3 months after the next release. .NET Core 2.1 was released on May 30th, 2018. As a...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/","RawContent":null},{"Title":"The RyuJIT transition is complete!","PublishedOn":"2018-06-19T22:53:27+00:00","CommentsCount":26,"FacebookCount":0,"Summary":"RyuJIT is the code name for the .NET just-in-time compiler, one of the foundational components of the .NET runtime. In contrast, the Roslyn C# compiler compiles C# code to IL byte code. The RyuJIT...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/19/the-ryujit-transition-is-complete/","RawContent":null},{"Title":"Staying up-to-date with .NET Container Images","PublishedOn":"2018-06-18T18:59:03+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"This post describes the container images that we produce and update for you, that you can use with Docker, Kubernetes and other systems. When you are using .NET and Docker together, you are probably...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/","RawContent":null},{"Title":"Using .NET and Docker Together – DockerCon 2018 Update","PublishedOn":"2018-06-14T00:15:31+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"I posted about Using .NET and Docker Together last year. With DockerCon 2018 being this week, it seemed like a great time to give you an update.  Since my last post, we&#8217;ve enabled a set of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/using-net-and-docker-together-dockercon-2018-update/","RawContent":null},{"Title":".NET Framework June 2018 Security and Quality Rollup","PublishedOn":"2018-06-13T19:29:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the June 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework May 2018 Security and Quality Rollup for the latest security updates. Quality and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3621!","PublishedOn":"2018-06-06T21:19:43+00:00","CommentsCount":38,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.8 Early Access build 3621 for your feedback. This is one of the in-development builds of the next version of the .NET Framework. The changes in this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/","RawContent":null},{"Title":"Announcing ML.NET 0.2","PublishedOn":"2018-06-06T04:36:25+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Last month at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework. We would like to thank the community for the engagement so far in helping us shape ML.NET....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/05/announcing-ml-net-0-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":71,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7896820874","Type":"IssuesEvent","CreatedAt":"2018-06-29T09:52:53","Actor":"tomkerkhove","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Opened issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"},{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7916266527","Type":"PullRequestEvent","CreatedAt":"2018-07-04T05:10:09","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18778","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-03004-01 (master)\" (#18778) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7916061598","Type":"PullRequestEvent","CreatedAt":"2018-07-04T03:36:32","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18773","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview1-26704-01, preview1-26704-01, respectively (master)\" (#18773) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7915931598","Type":"IssuesEvent","CreatedAt":"2018-07-04T02:42:54","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18777","RelatedDescription":"Opened issue \"JIT alloc assert \"!s_pagePool.isPoolPage(page)\" running corefx tests in CI\" (#18777) at dotnet/coreclr","RelatedBody":"https://ci.dot.net/job/dotnet_coreclr/job/master/job/x64_checked_windows_nt_corefx_innerloop_prtest/388/consoleText\r\n```\r\nAssert failure(PID 7036 [0x00001b7c], Thread: 6744 [0x1a58]): Assertion failed '!s_pagePool.isPoolPage(page)' in 'Xunit.Sdk.ExtensibilityPointFactory:Dispose()' (IL size 21)\r\n\r\n    File: d:\\j\\workspace\\x64_checked_w---43686a05\\src\\jit\\alloc.cpp Line: 301\r\n    Image: D:\\j\\workspace\\x64_checked_w---43686a05\\bin\\tests\\Windows_NT.x64.Checked\\testhost\\dotnet.exe\r\n```"},{"Id":"7915923972","Type":"PullRequestEvent","CreatedAt":"2018-07-04T02:39:48","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18776","RelatedDescription":"Opened pull request \"Remove mention of security transparency from message and comment\" (#18776) at dotnet/coreclr","RelatedBody":""},{"Id":"7915759392","Type":"PullRequestEvent","CreatedAt":"2018-07-04T01:30:34","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18697","RelatedDescription":"Merged pull request \"Delete InternalsVisibleTo attributes from S.P.CoreLib\" (#18697) at dotnet/coreclr","RelatedBody":"Remove InternalsVisibleTo(\"System.Runtime.WindowsRuntime) in S.P.Corelib."},{"Id":"7915573476","Type":"PullRequestEvent","CreatedAt":"2018-07-04T00:07:21","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18757","RelatedDescription":null,"RelatedBody":""},{"Id":"7915573371","Type":"PullRequestEvent","CreatedAt":"2018-07-04T00:07:17","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18757","RelatedDescription":"Closed pull request \"Port the fix for Issue 17969 to Rel/2.1\" (#18757) at dotnet/coreclr","RelatedBody":""},{"Id":"7915509894","Type":"PullRequestEvent","CreatedAt":"2018-07-03T23:41:36","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18650","RelatedDescription":null,"RelatedBody":"**NO MERGE**"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7916191014","Type":"IssuesEvent","CreatedAt":"2018-07-04T04:36:15","Actor":"ramsubbaraoc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/792","RelatedDescription":"Closed issue \"vs2017 csproj don't have <ItemGroup> <Compile/> tag\" (#792) at dotnet/standard","RelatedBody":"This is not an issue.Just for information\r\nWhen i create a netstandard project in VS2017, the csproj file doesn't contain the list of cs files which are part of the solution/project. \r\nOld csproj(which have been created using older VS version) contain the list of files and using that for command-line wasn't a problem\r\n\r\n If i have to use csproj/sln file(created with VS2017) to compile the code from command-line how do i do it?"},{"Id":"7911966456","Type":"IssuesEvent","CreatedAt":"2018-07-03T11:33:03","Actor":"ramsubbaraoc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/792","RelatedDescription":"Opened issue \"vs2017 csproj don't have <ItemGroup> <Compile/> tag\" (#792) at dotnet/standard","RelatedBody":"This is not an issue.Just for information\r\nWhen i create a netstandard project in VS2017, the csproj file doesn't contain the list of cs files which are part of the solution/project. \r\nOld csproj(which have been created using older VS version) contain the list of files and using that for command-line wasn't a problem\r\n\r\n If i have to use csproj/sln file(created with VS2017) to compile the code from command-line how do i do it?"},{"Id":"7910306192","Type":"IssuesEvent","CreatedAt":"2018-07-03T05:19:07","Actor":"EEVblog","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/791","RelatedDescription":"Opened issue \"When Building a UWP app with .netstandard 2.0 and Compile With Native Tool Chain, Build Hangs forever\" (#791) at dotnet/standard","RelatedBody":"I have a project that I have released into the windows app store and have an update which included porting from xamarin forms project to a .net standard project.\r\n\r\nAfter porting the project I have found that any time I build the app with the:\r\n\r\n\"Compile with .NET Native tool chain\" checked the build hangs forever. It will hang on any platform when this item is checked.\r\n\r\nI have tried the following flags in an attempt to fix it in my project build settings:\r\n\r\n<ShortcutGenericAnalysis>true</ShortcutGenericAnalysis>\r\n<SingleThreadNUTC>true</SingleThreadNUTC>\r\n<Use64BitCompiler>true</Use64BitCompiler>\r\n\r\nI have tried deleting obj and bin folders, no success.\r\nI have all of the latest VS updates and the latest package updates. "},{"Id":"7909110492","Type":"IssuesEvent","CreatedAt":"2018-07-02T21:47:15","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/787","RelatedDescription":"Closed issue \"nsboard GitHub team is not public\" (#787) at dotnet/standard","RelatedBody":"> There is also a (public) GitHub team [nsboard](https://github.com/orgs/dotnet/teams/nsboard) you can\r\nuse when you want the board to take a look at a particular issue\r\n\r\nActually nsboard team is not public. Following the above link leads to:\r\n\r\n\r\n![nsboard](https://user-images.githubusercontent.com/801959/42095457-f63bf5a6-7bb2-11e8-8e98-dff65911b038.png)\r\n\r\n\r\n\r\n"},{"Id":"7909102076","Type":"IssuesEvent","CreatedAt":"2018-07-02T21:45:00","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/682","RelatedDescription":"Closed issue \".Net Standard 2.1?\" (#682) at dotnet/standard","RelatedBody":"_From @jherby2k on March 7, 2018 19:35_\n\nI can't find any information about a .net standard 2.1.\r\n\r\nI really want to use the new Span-ified methods like Stream.Read in my class libraries, but it looks like that stuff isn't in System.Memory but rather the .net core 2.1 SDK. Any other way to get these APIs, or do I have to wait for .net standard 2.1. And is there any ETA on that?\n\n_Copied from original issue: dotnet/coreclr#16806_"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7916270267","Type":"IssuesEvent","CreatedAt":"2018-07-04T05:11:41","Actor":"mokeyish","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/30829","RelatedDescription":"Closed issue \" Is there a more efficient way to append `StringBuilder` to another?\" (#30829) at dotnet/corefx","RelatedBody":"```c#\r\nvar a = new StringBuilder('a');\r\nvar b = new StringBuilder('b');\r\n\r\n// merge `a` and `b` by appending `b` to `a`\r\nvar result1 = a.Append(v); / * equal to */ var result2 = a.Append(b.ToString())\r\n\r\n\r\n```\r\nIs it possible to set `m_ChunkPrevious`  of `StringBuilder` with `b` directly and update length and offset？ \r\n\r\n[StringBuilder.cs](https://github.com/dotnet/corefx/blob/844415759d3f1525bf1f5d1bd79453c6aa8493f8/src/Common/src/CoreLib/System/Text/StringBuilder.cs)"},{"Id":"7916084211","Type":"PullRequestEvent","CreatedAt":"2018-07-04T03:46:35","Actor":"morganbr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30831","RelatedDescription":"Merged pull request \"Revert \"Manually update the version of Microsoft.TargetingPack.Private.NETNative\"\" (#30831) at dotnet/corefx","RelatedBody":"Reverts dotnet/corefx#30827. It doesn't build."},{"Id":"7916083447","Type":"PullRequestEvent","CreatedAt":"2018-07-04T03:46:14","Actor":"morganbr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30831","RelatedDescription":"Opened pull request \"Revert \"Manually update the version of Microsoft.TargetingPack.Private.NETNative\"\" (#30831) at dotnet/corefx","RelatedBody":"Reverts dotnet/corefx#30827. It doesn't build."},{"Id":"7916062504","Type":"PullRequestEvent","CreatedAt":"2018-07-04T03:36:55","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30796","RelatedDescription":"Merged pull request \"Replace custom synchronized text writer\" (#30796) at dotnet/corefx","RelatedBody":"TextWriter.Synchronized does this and isn't missing APIs, which can cause derived methods to not be called. Test added.\r\n\r\nWill follow up with TextReader and link in old related issues."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7915821123","Type":"PullRequestEvent","CreatedAt":"2018-07-04T01:57:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6049","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#6049) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7915808029","Type":"PullRequestEvent","CreatedAt":"2018-07-04T01:51:39","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6049","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#6049) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7915761712","Type":"PullRequestEvent","CreatedAt":"2018-07-04T01:31:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6048","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#6048) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7915604064","Type":"PullRequestEvent","CreatedAt":"2018-07-04T00:20:26","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6048","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#6048) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7913424684","Type":"PullRequestEvent","CreatedAt":"2018-07-03T15:42:29","Actor":"BredPet","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6047","RelatedDescription":"Opened pull request \"[Linux] Fix build for new clang versions\" (#6047) at dotnet/corert","RelatedBody":"@dotnet/arm32-corert-contrib please review"},{"Id":"7913316430","Type":"IssuesEvent","CreatedAt":"2018-07-03T15:25:02","Actor":"SomeAnon42","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6046","RelatedDescription":"Opened issue \"COM: CoInitialize has not been called\" (#6046) at dotnet/corert","RelatedBody":"Now that #5587 is resolved, there's only a few issues left that prevent me from using corert for my project. This one also happens to be related to the usage of SharpDX.\r\nHere's a simple repro (that you can [download here](https://github.com/dotnet/corert/files/2160000/repro.zip)):\r\n```CSharp\r\nusing SharpDX.XAudio2;\r\n\r\nnamespace XAudioSample\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var device = new XAudio2(XAudio2Flags.None, ProcessorSpecifier.DefaultProcessor);\r\n            var masteringVoice = new MasteringVoice(device);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"SharpDX.XAudio2\" Version=\"4.0.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <!--1.0.0-alpha-26703-02 was the latest build at the time of writing this-->\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nStack trace:\r\n```\r\nUnhandled Exception: SharpDX.SharpDXException: HRESULT: [0x800401F0], Module: [Unknown], ApiCode: [Unknown/Unknown], Message: CoInitialize has not been called.\r\n\r\n   at SharpDX.Result.CheckError() + 0x2e\r\n   at SharpDX.XAudio2.XAudio2.CreateMasteringVoice(MasteringVoice, Int32, Int32, Int32, String, Nullable`1, AudioStreamCategory) + 0x149\r\n   at SharpDX.XAudio2.MasteringVoice..ctor(XAudio2, Int32, Int32) + 0xcf\r\n   at XAudioSample.Program.Main(String[]) + 0x3b\r\n   at XAudioSample!<BaseAddress>+0x15ee66\r\n```\r\n\r\nI believe [this is the line](https://github.com/sharpdx/SharpDX/blob/a9cb7e8975aead8561863bdee5a37d32bb4d9a3e/Source/SharpDX.XAudio2/XAudio2.cs#L223) where it crashes.\r\n\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1013052742326280192","CreatedAt":"2018-06-30T13:32:50+00:00","UserScreenname":"dotnet","Text":"Tune in for Jeff's Saturday show, learn how to use C# and @ASPNET Core.  Always a good time https://t.co/KJoRPYHnHt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":8,"RawContent":null},{"Id":"1010269960948465665","CreatedAt":"2018-06-22T21:15:03+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 End of Life Extended to October 1, 2018 https://t.co/KQAlfqjfGv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":53,"RawContent":null}]}},"RunOn":"2018-07-04T05:30:34.8508446Z","RunDurationInMilliseconds":6705}