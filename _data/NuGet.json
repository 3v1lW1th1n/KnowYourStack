{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11908532525","Type":"PullRequestEvent","CreatedAt":"2020-03-31T01:14:37","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7925","RelatedDescription":"Merged pull request \"Add link to search for pending validations\" (#7925) at NuGet/NuGetGallery","RelatedBody":"Today the on-call engineer has to connect to the database to find the pending validations. This adds a link to the admin panel to fetch the currently pending validations:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/77881538-0eb6e100-7214-11ea-8ecd-54188763e25c.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7926\r\n\r\nBuild: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3595685\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=628330"},{"Id":"11907140060","Type":"PullRequestEvent","CreatedAt":"2020-03-30T21:40:01","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7927","RelatedDescription":"Opened pull request \"[A11y]Accessibility fixes 1\" (#7927) at NuGet/NuGetGallery","RelatedBody":"Addresses the following issues:\r\n[A11y]'MIT' Link is not descriptive. #7882\r\n - Updated link description to read \"License {LicenseType}\" instead of \"{LicenseType}\"\r\n\r\n[A11y]\"Learn more\" link is not descriptive. #7879\r\n - Update link description to read \"Learn more about Organizations on NuGet.Org\" from \"Learn more\"\r\n\r\n[A11y]Focus is not visible on the expand/collapse button #7885\r\n - This was actually introduced by #7326 when trying to address #7305\r\n - Undo this change, reintroduces #7305 on click.\r\n\r\n[A11y]Narrator is reading improper role for Expand/Collapse button #7889\r\n - Gave element attribute role=\"button\"\r\n\r\n[A11y]Narrator does not announce the error message \"At least one scope must be selected\" after unchecking the 'Push' button. #7876\r\n - Added aria-live region and role=\"alert\"\r\n - Delayed update of text for readme alerts so element can become visible before being updated (updating invisible elements are not read out)."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11932996934","Type":"IssuesEvent","CreatedAt":"2020-04-02T01:50:19","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9384","RelatedDescription":"Opened issue \"{CPVM] Discuss the behavior for transitive dependencies when defined with floating versions. \" (#9384) at NuGet/Home","RelatedBody":"\r\n\r\n## Details about Problem\r\n\r\nDiscuss the behavior for transitive dependencies when defined with floating versions.\r\n\r\n- Allowed/Not allowed\r\n- If they are not allowed what is the desired behavior\r\n\r\n\r\n"},{"Id":"11932457118","Type":"IssuesEvent","CreatedAt":"2020-04-02T00:00:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9381","RelatedDescription":"Closed issue \"WorkspaceCommandHandler.Exec should return unsupported\" (#9381) at NuGet/Home","RelatedBody":"Specifically the bug is here:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/9d97fbb3e401ba99fb67f2165d8045ca850a1524/src/NuGet.Clients/NuGet.VisualStudio.OnlineEnvironment.Client/SolutionExplorer/NuGetWorkspaceCommandHandler.cs#L57\r\n\r\nWe should return `Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_NOTSUPPORTED` "},{"Id":"11932431393","Type":"IssuesEvent","CreatedAt":"2020-04-01T23:55:54","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9383","RelatedDescription":"Opened issue \"RestoreNetCore_MultipleProjects_SameTool_OverlappingVersionRanges_DoesNoOpAsync is flaky\" (#9383) at NuGet/Home","RelatedBody":""},{"Id":"11932408497","Type":"PullRequestEvent","CreatedAt":"2020-04-01T23:51:19","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9382","RelatedDescription":"Opened pull request \"add in notes on plan for net5 platform feature\" (#9382) at NuGet/Home","RelatedBody":"Ref: https://github.com/NuGet/Home/issues/9240"},{"Id":"11932193013","Type":"IssuesEvent","CreatedAt":"2020-04-01T23:11:44","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9362","RelatedDescription":"Closed issue \"Write to the Package Manager output in VS OE scenarios\" (#9362) at NuGet/Home","RelatedBody":"In on-build restore scenarios, NuGet usually writes to the build output window.\r\nIn Online Environments we can't do that yet, so as a workaround until we have the ability to do it, we will write to the same output window as auto-restore and explicit restore.\r\n\r\nSpecifically this is a workaround until https://github.com/NuGet/Home/issues/9270 is unblocked."},{"Id":"11931500795","Type":"IssuesEvent","CreatedAt":"2020-04-01T21:27:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9381","RelatedDescription":"Opened issue \"WorkspaceCommandHandler.Exec should return unsupported\" (#9381) at NuGet/Home","RelatedBody":"Specifically the bug is here:\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/9d97fbb3e401ba99fb67f2165d8045ca850a1524/src/NuGet.Clients/NuGet.VisualStudio.OnlineEnvironment.Client/SolutionExplorer/NuGetWorkspaceCommandHandler.cs#L57\r\n\r\nWe should return `Microsoft.VisualStudio.OLE.Interop.Constants.OLECMDERR_E_NOTSUPPORTED` "},{"Id":"11930932019","Type":"IssuesEvent","CreatedAt":"2020-04-01T20:18:59","Actor":"egavrilenko","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9380","RelatedDescription":"Opened issue \"\"update\" command breaks conditional markup in csproj\" (#9380) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe | VS UI | Package Manager Console\r\n\r\nNuGet version (x.x.x.xxx): all versions\r\n\r\nVS version (if appropriate): 2017, 2019\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): any\r\n\r\nWorked before? If so, with which NuGet version: no. never\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. create csproj with condition for reference package\r\n\r\n```\r\n<Choose>\r\n    <When Condition=\"false\">\r\n      <ItemGroup>\r\n      </ItemGroup>\r\n    </When>\r\n    <Otherwise>\r\n      <ItemGroup>\r\n        <Reference Include=\"your_package\"...\r\n        </Reference>\r\n      </ItemGroup>\r\n    </Otherwise>\r\n  </Choose>\r\n```\r\n\r\n\r\n2. execute nuget update -Id <your_package>\r\n\r\nExpected result: package version is updated. Chose/When/Otherwise is not changed\r\nActual result: package version is updated. But it is moved from Otherwise section to common pool of References"},{"Id":"11930636901","Type":"IssuesEvent","CreatedAt":"2020-04-01T19:44:53","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9379","RelatedDescription":"Opened issue \"add a local tools manifest with t4 configured and run dotnet tool restore as part of configure.ps1\" (#9379) at NuGet/Home","RelatedBody":"from feedback during this PR: https://github.com/NuGet/NuGet.Client/pull/3253#discussion_r401186216"},{"Id":"11930229876","Type":"IssuesEvent","CreatedAt":"2020-04-01T18:59:35","Actor":"syakimchik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9378","RelatedDescription":"Opened issue \"Issue with load list of package versions (nuget list [search terms] [options])\" (#9378) at NuGet/Home","RelatedBody":"When I call:\r\n`nuget list [search terms] [options]`\r\nfor example:\r\n`nuget list Xamarin.Android.Arch.Core.Common`\r\nI expect, as descripted in documentation, that this command will return a list of versions for current package. But instead of this, the command is loaded all packages with latest versions. It takes a lot of time.\r\nAs I remember, previous version was loaded only list of versions available for current package\r\n\r\nNuGet Version: 5.5.0.6382\r\nOS: MacOS"},{"Id":"11928789701","Type":"IssuesEvent","CreatedAt":"2020-04-01T16:28:27","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9377","RelatedDescription":"Opened issue \"GeneratePackageOnBuild generates invalid package for WinForms control library\" (#9377) at NuGet/Home","RelatedBody":"_From @lextm on Saturday, March 28, 2020 5:43:13 PM_\r\n\r\nNot sure if this is an MSBuild or NuGet issue, so post it here first.\r\n\r\n### Steps to reproduce\r\n\r\nI was trying to build NuGet packages for an open source project. The goal is to compile a WinForms control (DockPanel Suite) for three platforms, .NET Core 3.1, .NET Framework 4.0 and 3.5.\r\n\r\nSo the main project can be found here,\r\n\r\nhttps://github.com/dockpanelsuite/dockpanelsuite/blob/86dd840c3f3c12676c2fff5d107ea27ae76c3622/WinFormsUI/WinFormsUI.csproj\r\n\r\n`GeneratePackageOnBuild` is set to `true` so NuGet packages can be generated during build.\r\n\r\n### Expected behavior\r\n\r\nThe generated NuGet packages should be valid to consume.\r\n\r\n### Actual behavior\r\n\r\nThe generated NuGet package references itself, so cannot be consumed at all.\r\n\r\nYou can refer to this CI build for more information,\r\n\r\nhttps://github.com/dockpanelsuite/dockpanelsuite/runs/541996859?check_suite_focus=true\r\n\r\nThe invalid package (`DockPanelSuite.3.1.0-beta6.nupkg`) contains .nuspec fragment like,\r\n\r\n    <dependencies>\r\n      <group targetFramework=\".NETFramework4.0\">\r\n        <dependency id=\"DockPanelSuite\" version=\"3.1.0-beta6\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n      <group targetFramework=\".NETCoreApp3.1\">\r\n        <dependency id=\"DockPanelSuite\" version=\"3.1.0-beta6\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n\r\n### Environment data\r\nMSBuild version can be seen from the CI log,\r\n\r\nMicrosoft (R) Build Engine version 16.5.0+d4cbfca49 for .NET Framework\r\n\r\nThe CI image is windows-latest.\r\n\r\n_Copied from original issue: microsoft/msbuild#5208_"},{"Id":"11928769120","Type":"IssuesEvent","CreatedAt":"2020-04-01T16:26:28","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9376","RelatedDescription":"Opened issue \"PackageReferences of Runtime dependencies are not copied over\" (#9376) at NuGet/Home","RelatedBody":"_From @elangelo on Wednesday, April 1, 2020 7:12:13 AM_\r\n\r\n### Steps to reproduce\r\n\r\nEither include a project sample, attach a zipped project, or provide IDE / CLI steps to create the project and repro the behaviour. Example of a project sample:\r\n\r\nAttached zip file\r\n[Solution.zip](https://github.com/microsoft/msbuild/files/4413317/Solution.zip)\r\n\r\n\r\nDirectory contents:\r\n```\r\n/\r\n- Solution.sln\r\n- Interfaces/\r\n   - Interfaces.csproj\r\n   - IStorage.cs\r\n- Runtime\r\n   - Runtime.csproj\r\n   - Program.cs\r\n- RuntimeDependency\r\n   - RuntimeDependency.csproj\r\n   - AzureStorage.cs\r\n```\r\n\r\nCommand line\r\n```\r\nmsbuild Solution.sln\r\n```\r\n### Expected behavior\r\nAs RunTimeDependency.csproj has a depedency on Microsoft.Azure.Storage.DataMovement I would expect that library to be copied over in the Runtime's bin directory\r\n\r\n### Actual behavior\r\nOnly the RunTimeDependency.dll is copied over. It's depedencies are ignored.\r\n\r\n### Environment data\r\n`msbuild /version` output:\r\n```\r\nmsbuild /version\r\nMicrosoft (R) Build Engine version 16.4.0+e901037fe for .NET Framework\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n16.4.0.56107\r\n```\r\nOS info:\r\nWindows 10, Version 1909 (OS Build 18363.752)\r\n\r\nIf applicable, version of the tool that invokes MSBuild (Visual Studio, dotnet CLI, etc):\r\nSame results with Visual Studio 2019 and dotnet build  (dotnet version: 3.1.101)\r\n\r\n_Copied from original issue: microsoft/msbuild#5219_"},{"Id":"11928620328","Type":"IssuesEvent","CreatedAt":"2020-04-01T16:12:25","Actor":"stevenbrix","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9375","RelatedDescription":"Opened issue \"Allow for a \"Debug\" or \"Developer\" mode of package\" (#9375) at NuGet/Home","RelatedBody":"Many times when dealing with local Nugets, it can be very easy to be in a state where someone tries to build your project, only to have different behavior, only to realize later that it's because the nuget was already restored and that's why behavior is different. It would be great if there was a concept of a \"Debug\" or \"Developer\" mode package that would always restore so that you know it's up to date.\r\n"},{"Id":"11927836355","Type":"IssuesEvent","CreatedAt":"2020-04-01T15:04:04","Actor":"clairernovotny","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9374","RelatedDescription":"Opened issue \"dotnet pack with NuSpec removes repository element\" (#9374) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\ndotnet pack with a supplied NuSpec that contains a parameterized repository element strips the repository element from the generated nupkg. Same NuSpec with NuGet.exe pack works.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\ndotnet.exe 5.x (all versions)\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nNuspec with \r\n\r\n`<repository type=\"$RepositoryType$\" url=\"$RepositoryUrl$\" commit=\"$RepositoryCommit$\" />`\r\n\r\nSample NuSpec:\r\nhttps://github.com/Humanizr/Humanizer/blob/91334d23cc96135462a568dd3985c07db8cebdfa/NuSpecs/Humanizer.Core.nuspec\r\n\r\ndotnet command that strips out the element even though the properties are passed in:\r\nhttps://github.com/Humanizr/Humanizer/blob/91334d23cc96135462a568dd3985c07db8cebdfa/azure-pipelines.yml#L47-L54\r\n\r\nNuGet command that works:\r\nhttps://github.com/Humanizr/Humanizer/blob/4d9d85c91c8e01dff9d34e0537486a0b53d8ebc8/azure-pipelines.yml#L53-L57\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-04-02T05:30:41.6495883Z","RunDurationInMilliseconds":2030}