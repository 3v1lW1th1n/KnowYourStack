{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing C# Source Generators","PublishedOn":"2020-04-29T20:46:09+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"We&#8217;re pleased to introduce the first preview of Source Generators, a new C# compiler feature that lets C# developers inspect user code and generate new C# source files that can be added to a...","Href":"https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/","RawContent":null},{"Title":"Work flow of diagnosing memory performance issues – Part 2","PublishedOn":"2020-04-27T20:02:47+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Work flow of diagnosing memory performance issues – Part 0\nWork flow of diagnosing memory performance issues – Part 1\nWork flow of diagnosing memory performance issues – Part 2 (this post)\nIn this...","Href":"https://devblogs.microsoft.com/dotnet/work-flow-of-diagnosing-memory-performance-issues-part-2/","RawContent":null},{"Title":"Announcing .NET 5.0 Preview 3","PublishedOn":"2020-04-23T18:05:20+00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 3. It contains a set of new features and performance improvements. We&#8217;re continuing to work on the bigger features that will define the 5.0 release....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 5.0 Preview 3","PublishedOn":"2020-04-23T17:17:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we are excited to announce the third preview release of EF Core 5.0.\nThe third previews of .NET 5 and ASP.NET Core 5.0 are also available now.\nPrerequisites\nThe previews of EF Core 5.0 require...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-3/","RawContent":null},{"Title":"Help us shape the future of deep learning in .NET","PublishedOn":"2020-04-21T17:32:14+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Deep learning is a subset of machine learning used for tasks such as image classification, object detection, and natural language processing. It uses algorithms known as neural networks to learn and...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-deep-learning-in-net/","RawContent":null},{"Title":"Using .NET Core to provide Power Query for Excel on Mac","PublishedOn":"2020-04-16T03:23:08+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Power Query is a data connection technology that enables you to discover, connect, combine, and refine data sources to meet your analysis needs. Features in Power Query are available in Excel and...","Href":"https://devblogs.microsoft.com/dotnet/using-net-core-to-provide-power-query-for-excel-on-mac/","RawContent":null},{"Title":"Work flow of diagnosing memory performance issues – Part 1","PublishedOn":"2020-04-13T01:57:02+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Work flow of diagnosing memory performance issues – Part 0\nWork flow of diagnosing memory performance issues – Part 1  (this post)\nWork flow of diagnosing memory performance issues – Part 2\nIn this...","Href":"https://devblogs.microsoft.com/dotnet/work-flow-of-diagnosing-memory-performance-issues-part-1/","RawContent":null},{"Title":"Work flow of diagnosing memory performance issues – Part 0","PublishedOn":"2020-04-06T00:55:50+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Work flow of diagnosing memory performance issues – Part 0 (this post)\nWork flow of diagnosing memory performance issues – Part 1\nWork flow of diagnosing memory performance issues – Part 2\nI wanted to...","Href":"https://devblogs.microsoft.com/dotnet/work-flow-of-diagnosing-memory-performance-issues-part-0/","RawContent":null},{"Title":"Regex Performance Improvements in .NET 5","PublishedOn":"2020-04-02T21:19:49+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"The System.Text.RegularExpressions namespace has been in .NET for years, all the way back to .NET Framework 1.1. It&#8217;s used in hundreds of places within the .NET implementation itself, and...","Href":"https://devblogs.microsoft.com/dotnet/regex-performance-improvements-in-net-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 5.0 Preview 2","PublishedOn":"2020-04-02T17:02:30+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Announcing Entity Framework Core 5.0 Preview 2\nToday we are excited to announce the second preview release of EF Core 5.0.\nThe second previews of .NET 5 and ASP.NET Core 5.0 are also available...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"12207129416","Type":"PullRequestEvent","CreatedAt":"2020-04-30T15:40:28","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Closed pull request \"Fix broken links\" (#154) at dotnet/foundation","RelatedBody":""},{"Id":"12194500050","Type":"PullRequestEvent","CreatedAt":"2020-04-29T15:53:42","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/191","RelatedDescription":"Merged pull request \"Fix broken links\" (#191) at dotnet/foundation","RelatedBody":""},{"Id":"12194328779","Type":"PullRequestEvent","CreatedAt":"2020-04-29T15:39:00","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/191","RelatedDescription":"Opened pull request \"Fix broken links\" (#191) at dotnet/foundation","RelatedBody":""},{"Id":"12193219033","Type":"PullRequestEvent","CreatedAt":"2020-04-29T14:06:16","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Merged pull request \"Fix broken links\" (#190) at dotnet/foundation","RelatedBody":""},{"Id":"12193217084","Type":"PullRequestEvent","CreatedAt":"2020-04-29T14:06:06","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Merged pull request \"Fix broken links\" (#189) at dotnet/foundation","RelatedBody":""},{"Id":"12069320388","Type":"PullRequestEvent","CreatedAt":"2020-04-16T15:55:03","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Opened pull request \"Fix broken links\" (#190) at dotnet/foundation","RelatedBody":""},{"Id":"12057488269","Type":"PullRequestEvent","CreatedAt":"2020-04-15T15:55:05","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Opened pull request \"Fix broken links\" (#189) at dotnet/foundation","RelatedBody":""},{"Id":"12047631812","Type":"PullRequestEvent","CreatedAt":"2020-04-14T19:06:28","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/188","RelatedDescription":"Merged pull request \"Added Unity Contaienr project\" (#188) at dotnet/foundation","RelatedBody":""},{"Id":"12047420263","Type":"PullRequestEvent","CreatedAt":"2020-04-14T18:43:47","Actor":"ENikS","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/188","RelatedDescription":"Opened pull request \"Added Unity Contaienr project\" (#188) at dotnet/foundation","RelatedBody":""},{"Id":"12035753653","Type":"PullRequestEvent","CreatedAt":"2020-04-13T18:28:43","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/187","RelatedDescription":"Merged pull request \"Fix broken links\" (#187) at dotnet/foundation","RelatedBody":""},{"Id":"12034367798","Type":"PullRequestEvent","CreatedAt":"2020-04-13T15:55:05","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/187","RelatedDescription":"Opened pull request \"Fix broken links\" (#187) at dotnet/foundation","RelatedBody":""},{"Id":"12028630454","Type":"PullRequestEvent","CreatedAt":"2020-04-13T00:27:33","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/186","RelatedDescription":"Merged pull request \"update for Prism contacts / links\" (#186) at dotnet/foundation","RelatedBody":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts"},{"Id":"12028591498","Type":"PullRequestEvent","CreatedAt":"2020-04-13T00:15:13","Actor":"dansiegel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/186","RelatedDescription":"Opened pull request \"update for Prism contacts / links\" (#186) at dotnet/foundation","RelatedBody":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12219335394","Type":"IssuesEvent","CreatedAt":"2020-05-01T21:27:33","Actor":"brianrob","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Opened issue \"JCC Erratum Impact on .NET Core\" (#153) at dotnet/announcements","RelatedBody":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the MCU.  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**"},{"Id":"11789505984","Type":"IssuesEvent","CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Opened issue \"March 2020 .NET Updates\" (#152) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"12167026154","Type":"PullRequestEvent","CreatedAt":"2020-04-27T10:12:07","Actor":"janvorli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28036","RelatedDescription":"Opened pull request \"Port to 3.1 - Fix DynamicMethodDesc::Destroy vs code heap enum. race\" (#28036) at dotnet/coreclr","RelatedBody":"Port of https://github.com/dotnet/runtime/pull/713\r\nThere is a race between DynamicMethodDesc::Destroy called from\r\nthe finalizer thread and the MethodDescs enumeration called from\r\nETW::MethodLog::SendEventsForJitMethods at process exit.\r\nDynamicMethodDesc::Destroy cleans up its members m_pSig and\r\nm_pszMethodName and then it calls GetLCGMethodResolver()->Destroy();\r\nThat calls EEJitManager::FreeCodeMemory, which tries to take the\r\nm_CodeHeapCritSec lock. But this lock is already held by\r\nthe ETW::MethodLog::SendEventsForJitMethods.\r\nSo the iterator can see half-destroyed DynamicMethodDesc and\r\na crash happens when trying to get the dynamic method name\r\nfrom the m_pszMethodName for the ETW event purposes.\r\n\r\nThe fix is to call the GetLCGMethodResolver()->Destroy() before\r\ndestroying the m_pSig and m_pszMethodName.\r\n\r\n# Customer impact\r\nThe bug is causing random crashes, one of our teams had to turn off AppInsights temporarily as a workaround.\r\n\r\n# Regression?\r\nNo\r\n\r\n# Testing\r\nLocal testing and all libraries and coreclr tests in the runtime repo - this change has been in the runtime master since December.\r\n\r\n# Risk\r\nLow, the change just prolongs lifetime of two DynamicMethodDesc members beyond the point when other code can access them.\r\n"},{"Id":"12158954948","Type":"PullRequestEvent","CreatedAt":"2020-04-26T06:51:33","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28035","RelatedDescription":null,"RelatedBody":"This represents the minimum set of changes required to\r\nbe able to build the Cross DAC out of band.\r\n\r\nThis fixes the layout difference between the Windows\r\ncompiler and the clang Linux compiler.\r\n\r\nThe code adds `alignas` directives to allow cross OS compilation type layouts to match.\r\nAlso moves a bool into a bitfield. \r\n\r\n# Customer impact\r\n\r\nThis allows us to develop and test a new 3.1 feature (#28027) allowing triage of Linux dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is in support of a new 3.1 feature.\r\n\r\n # Testing\r\n\r\nThis has been tested by using a PDB to Dwarf comparison tool to check type layouts.\r\n\r\nThis is based on a PR which has been in the 5.0 branch for a ~6 weeks.\r\n\r\n # Risk\r\n\r\nLow\r\n"},{"Id":"12158954842","Type":"PullRequestEvent","CreatedAt":"2020-04-26T06:51:31","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28035","RelatedDescription":"Closed pull request \"Backport Cross DAC runtime layout changes\" (#28035) at dotnet/coreclr","RelatedBody":"This represents the minimum set of changes required to\r\nbe able to build the Cross DAC out of band.\r\n\r\nThis fixes the layout difference between the Windows\r\ncompiler and the clang Linux compiler.\r\n\r\nThe code adds `alignas` directives to allow cross OS compilation type layouts to match.\r\nAlso moves a bool into a bitfield. \r\n\r\n# Customer impact\r\n\r\nThis allows us to develop and test a new 3.1 feature (#28027) allowing triage of Linux dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is in support of a new 3.1 feature.\r\n\r\n # Testing\r\n\r\nThis has been tested by using a PDB to Dwarf comparison tool to check type layouts.\r\n\r\nThis is based on a PR which has been in the 5.0 branch for a ~6 weeks.\r\n\r\n # Risk\r\n\r\nLow\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"12225395133","Type":"PullRequestEvent","CreatedAt":"2020-05-03T05:00:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13350","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13350) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200502.7\r\n- **Date Produced**: 5/3/2020 12:40 AM\r\n- **Commit**: 6047903fd599e7704e8d97b9203ce004a4409942\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20251.5 to 3.1.400-preview.20252.7\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"},{"Id":"12224797787","Type":"PullRequestEvent","CreatedAt":"2020-05-03T00:53:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13350","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13350) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200502.7\r\n- **Date Produced**: 5/3/2020 12:40 AM\r\n- **Commit**: 6047903fd599e7704e8d97b9203ce004a4409942\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20251.5 to 3.1.400-preview.20252.7\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"},{"Id":"12219979808","Type":"PullRequestEvent","CreatedAt":"2020-05-01T23:29:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13348","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13348) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200430.5\r\n- **Date Produced**: 4/30/2020 8:15 PM\r\n- **Commit**: 5fd50687c9a9f39bd2ee8221165ea9c1b3f565d9\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.19607.3 to 1.0.0-beta.20230.5\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"12219975989","Type":"PullRequestEvent","CreatedAt":"2020-05-01T23:28:15","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13349","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13349) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200501.5\r\n- **Date Produced**: 5/1/2020 9:36 PM\r\n- **Commit**: cef5a2b74edc55e5fd4680a1424e2eafe6dfb69f\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20214.15 to 3.1.400-preview.20251.5\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"},{"Id":"12219468893","Type":"PullRequestEvent","CreatedAt":"2020-05-01T21:49:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13349","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13349) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200501.5\r\n- **Date Produced**: 5/1/2020 9:36 PM\r\n- **Commit**: cef5a2b74edc55e5fd4680a1424e2eafe6dfb69f\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20214.15 to 3.1.400-preview.20251.5\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n"},{"Id":"12219131974","Type":"PullRequestEvent","CreatedAt":"2020-05-01T20:57:21","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/13345","RelatedDescription":"Closed pull request \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13345) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7c87b7fc-1d68-435f-7062-08d7e6f19e0b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 7c87b7fc-1d68-435f-7062-08d7e6f19e0b\r\n- **Build**: 5.7.0.6592\r\n- **Date Produced**: 4/25/2020 3:36 PM\r\n- **Commit**: 4dbf16e68eabf507b9f156c801b1b7c3b0586e43\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.6.0-preview.3.6558 to 5.7.0-preview.1.6592\r\n\r\n[marker]: <> (End:7c87b7fc-1d68-435f-7062-08d7e6f19e0b)\r\n\r\n"},{"Id":"12219128480","Type":"PullRequestEvent","CreatedAt":"2020-05-01T20:56:49","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13347","RelatedDescription":"Merged pull request \"update nuget\" (#13347) at dotnet/cli","RelatedBody":"…5.7.0.6592\r\n\r\n- NuGet.Build.Tasks: 5.6.0-preview.3.6558 -> 5.7.0-preview.1.6592"},{"Id":"12210694481","Type":"PullRequestEvent","CreatedAt":"2020-04-30T21:52:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13348","RelatedDescription":"Opened pull request \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13348) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200430.5\r\n- **Date Produced**: 4/30/2020 8:15 PM\r\n- **Commit**: 5fd50687c9a9f39bd2ee8221165ea9c1b3f565d9\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.19607.3 to 1.0.0-beta.20230.5\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n"},{"Id":"12208469924","Type":"PullRequestEvent","CreatedAt":"2020-04-30T17:41:12","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13347","RelatedDescription":"Opened pull request \"Update dependencies from https://github.com/NuGet/NuGet.Client build …\" (#13347) at dotnet/cli","RelatedBody":"…5.7.0.6592\r\n\r\n- NuGet.Build.Tasks: 5.6.0-preview.3.6558 -> 5.7.0-preview.1.6592"},{"Id":"12196925772","Type":"PullRequestEvent","CreatedAt":"2020-04-29T19:51:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13346","RelatedDescription":"Merged pull request \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13346) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200429.6\r\n- **Date Produced**: 4/29/2020 5:53 PM\r\n- **Commit**: 42ea8278db4c13727a7ac5db923228716e986bfa\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20214.15 to 3.1.300-preview.20229.6\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"12228652322","Type":"PullRequestEvent","CreatedAt":"2020-05-03T20:20:58","Actor":"leotsarev","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Opened pull request \"Oren → Claire\" (#1761) at dotnet/standard","RelatedBody":""},{"Id":"12187989629","Type":"IssuesEvent","CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Opened issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760) at dotnet/standard","RelatedBody":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?"},{"Id":"12146868331","Type":"PullRequestEvent","CreatedAt":"2020-04-24T12:00:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1759) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200421.14\r\n- **Date Produced**: 4/21/2020 10:41 PM\r\n- **Commit**: e13ae00db986456a5012f2d9d479d893b3f5aff6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20221.14\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"12220010495","Type":"PullRequestEvent","CreatedAt":"2020-05-01T23:36:16","Actor":"vcsjones","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42916","RelatedDescription":"Opened pull request \"[release/2.1] Handle additional chain statuses for X509Chain on macOS\" (#42916) at dotnet/corefx","RelatedBody":"Ports the following PRs from runtime in to the release/2.1 branch.\r\n\r\n* dotnet/runtime#35347\r\n* dotnet/runtime#35488\r\n* dotnet/runtime#35548\r\n* dotnet/corefx#40117\r\n\r\nThis omits the unit tests from 35347 because the tests depend on new functionality not present in the release/3.1 branch.\r\n\r\nThis omits the unit test changes from 40117 because that test does not exist in release/2.1\r\n\r\n## Description\r\n\r\n`X509Chain.Build` can receive unknown status strings from the underlying platform, macOS, when building an X509 chain. An unknown status string causes a CryptographicException to be thrown due to the missing mappings.\r\n\r\nThe fix is to correctly handle these additional statuses, mapping them such that the behavior matches what Windows and Linux do.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#35238. Customers that attempt to build an `X509Chain` on macOS with a certificate that causes one of the unknown statuses to be triggered will receive a `CryptographicException` instead of the `X509ChainStatusFlags` which other platforms correctly report. This may cause compatibility issues as developers are porting from other platforms to macOS.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nContains unit tests for all but the basic constraints scenario due to missing functionality in release 2.1 to aid testing. All are tested in dotnet/runtime.\r\n\r\n## Risk\r\n\r\n**Low.**  All of the new codes have been encountered in testing and measured against Windows for cross-platform consistency.  The existing tests ensure that the change isn't accidentally doing subtle remaps of established values."},{"Id":"12217965097","Type":"PullRequestEvent","CreatedAt":"2020-05-01T18:19:03","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42915","RelatedDescription":"Opened pull request \"Merging Blazor feature branch into release/3.1\" (#42915) at dotnet/corefx","RelatedBody":"cc: @ericstj @pranavkm @Jozkee @Anipik @safern \r\n\r\nThis was mostly a straight forward merge except for the following conflicts/changes I made:\r\n\r\n- eng\\Versions.props: We had done some special branding for blazor feature branch, I kept source as it was on release/3.1 branch as that is what we wanted.\r\n- src\\packages.builds: We had conflicts here since the packages that were being built were different. I kept source as it was on release/3.1.\r\n- eng\\corefx-base.yml and eng\\windows.yml: We made some changes on the blazor feature branch in order to ONLY ship the http json package on these yml files. I removed those changes and kept source as it was on release/3.1\r\n- packageIndex.json: I manually added the 3.2.0 as stable version, as it will have shipped by the time we merge this PR\r\n\r\nOther than the above details, this was just a direct merge and I didn't have to edit anything else."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"12230320516","Type":"PullRequestEvent","CreatedAt":"2020-05-04T04:18:25","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/43939","RelatedDescription":"Opened pull request \"Fix lowering for records\" (#43939) at dotnet/roslyn","RelatedBody":""},{"Id":"12230138820","Type":"PullRequestEvent","CreatedAt":"2020-05-04T03:31:17","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41798","RelatedDescription":"Merged pull request \"Convert RemoveUnnecessaryImportsTests to the new test framework\" (#41798) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"12223377366","Type":"PullRequestEvent","CreatedAt":"2020-05-02T17:19:26","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8128","RelatedDescription":"Opened pull request \"Add simple marshaller which marshal only null COM interfaces\" (#8128) at dotnet/corert","RelatedBody":"This idea was proposed by @MichalStrehovsky in #7994\r\n\r\nImplemented only marshalling of `in` parameters, since this is case which I found in the stack trace of the issue. I think other directions can be implemented in same way, I just lack of examples for testing.\r\n\r\nTested code\r\n```\r\n// [DllImport(Libraries.UiaCore, CharSet = CharSet.Unicode)]\r\n// public static extern IntPtr UiaReturnRawElementProvider(IntPtr hwnd, IntPtr wParam, IntPtr lParam, IRawElementProviderSimple el);\r\nIntPtr result = UiaCore.UiaReturnRawElementProvider(IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, null);\r\n```\r\n\r\nCloses #7994"},{"Id":"12222949527","Type":"PullRequestEvent","CreatedAt":"2020-05-02T15:30:01","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8125","RelatedDescription":"Merged pull request \"Wasm: add support for exception filters\" (#8125) at dotnet/corert","RelatedBody":"This PR adds support for exception filters.  There's one nasty bit in here where it handles crudely the extra space used in the landing pad and first pass on the shadow stack, otherwise follows the pattern already there.  Not done passing in the generic context if required to the filter, I can't see how that's handled, I could just add a parameter to `RhpCallFilterFunclet` but non-Wasm must be doing it another way?\r\n\r\nAdded a test from the Simple/Exceptions project."},{"Id":"12222908739","Type":"IssuesEvent","CreatedAt":"2020-05-02T15:19:04","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8127","RelatedDescription":"Opened issue \"Wasm: align generic context handling in exception catch and filter blocks\" (#8127) at dotnet/corert","RelatedBody":"Currently Wasm catch funclets get the generic context passed and filter funclets do not get it at all.  To be consistent with the other backends, Wasm should store the generic context in a local in the main funclet, as per comment at https://github.com/dotnet/corert/pull/8125#issuecomment-622962485"},{"Id":"12222454694","Type":"PullRequestEvent","CreatedAt":"2020-05-02T13:18:46","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8126","RelatedDescription":"Opened pull request \"Expose `--ildump` via MSBuild property\" (#8126) at dotnet/corert","RelatedBody":"This can help with debugging marshalling for example."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"12227818388","Type":"PullRequestEvent","CreatedAt":"2020-05-03T16:47:23","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11548","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#11548) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200503.1\r\n- **Date Produced**: 5/3/2020 4:36 PM\r\n- **Commit**: 862dbec4c0972aac6373cbd61faa7aa3def6d074\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20252.3 to 5.0.0-preview.5.20253.1\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"12227195429","Type":"PullRequestEvent","CreatedAt":"2020-05-03T14:18:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11524","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/aspnetcore-tooling\" (#11524) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: ed1c2bc3-ada8-4f10-fd59-08d7a4f28342\r\n- **Build**: 20200502.1\r\n- **Date Produced**: 5/2/2020 1:18 PM\r\n- **Commit**: 29bc51011782dec11c84741c1fe9842223a38392\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.5.20227.11 to 5.0.0-preview.5.20252.1\r\n\r\n[marker]: <> (End:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"12226712041","Type":"PullRequestEvent","CreatedAt":"2020-05-03T12:13:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11547","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/fsharp\" (#11547) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: c167c97f-374f-4f20-31ff-08d7a4f3bc87\r\n- **Build**: 20200502.1\r\n- **Date Produced**: 5/2/2020 9:00 PM\r\n- **Commit**: d1b4e95965fe840245708c462011ad48549e9109\r\n- **Branch**: refs/heads/release/fsharp5\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 11.0.0-beta.20251.2 to 11.0.0-beta.20252.1\r\n\r\n[marker]: <> (End:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n\r\n"},{"Id":"12226708124","Type":"PullRequestEvent","CreatedAt":"2020-05-03T12:12:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11546","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/websdk\" (#11546) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n## From https://github.com/dotnet/websdk\r\n- **Subscription**: 83e6badd-2490-46c6-4ef2-08d7a4f251c6\r\n- **Build**: 20200502.2\r\n- **Date Produced**: 5/2/2020 12:46 PM\r\n- **Commit**: 5900d73d81971485c8e52dc7424adefc10dc5e51\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.5.20251.1 to 5.0.100-preview.5.20252.2\r\n\r\n[marker]: <> (End:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n\r\n"},{"Id":"12224829687","Type":"PullRequestEvent","CreatedAt":"2020-05-03T01:06:22","Actor":"rseanhall","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11545","RelatedDescription":"Opened pull request \"Add the frameworkName property to runtimepack libraries\" (#11545) at dotnet/sdk","RelatedBody":"This is the dotnet/sdk part of https://github.com/dotnet/sdk/issues/3339. It is dependent on the dotnet/runtime part from https://github.com/dotnet/runtime/pull/35764."},{"Id":"12224724276","Type":"PullRequestEvent","CreatedAt":"2020-05-03T00:23:26","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11457","RelatedDescription":"Merged pull request \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#11457) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bcb3f090-5f90-4eb8-b9a4-08d7e6f5568f)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: bcb3f090-5f90-4eb8-b9a4-08d7e6f5568f\r\n- **Build**: 5.7.0.6592\r\n- **Date Produced**: 4/25/2020 3:36 PM\r\n- **Commit**: 4dbf16e68eabf507b9f156c801b1b7c3b0586e43\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.6.0-preview.3.6558 to 5.7.0-preview.1.6592\r\n\r\n[marker]: <> (End:bcb3f090-5f90-4eb8-b9a4-08d7e6f5568f)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"609156777","IsPullRequest":true,"CreatedAt":"2020-04-29T15:53:41","Actor":"NextTurn","Number":"191","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/191","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#191)"},{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:15","Actor":"NextTurn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-29T14:06:05","Actor":"NextTurn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"NextTurn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"NextTurn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"NextTurn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"NextTurn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-04-07T01:58:57","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/182","RelatedDescription":"Open PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"},{"Id":"577522629","IsPullRequest":true,"CreatedAt":"2020-03-08T16:27:23","Actor":"AArnott","Number":"162","RawContent":null,"Title":"Create nerdbank-gitversioning.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/162","RelatedDescription":"Closed or merged PR \"Create nerdbank-gitversioning.md\" (#162)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"607419146","IsPullRequest":true,"CreatedAt":"2020-04-27T10:12:07","Actor":"janvorli","Number":"28036","RawContent":null,"Title":"Port to 3.1 - Fix DynamicMethodDesc::Destroy vs code heap enum. race","State":"open","Body":"Port of https://github.com/dotnet/runtime/pull/713\r\nThere is a race between DynamicMethodDesc::Destroy called from\r\nthe finalizer thread and the MethodDescs enumeration called from\r\nETW::MethodLog::SendEventsForJitMethods at process exit.\r\nDynamicMethodDesc::Destroy cleans up its members m_pSig and\r\nm_pszMethodName and then it calls GetLCGMethodResolver()->Destroy();\r\nThat calls EEJitManager::FreeCodeMemory, which tries to take the\r\nm_CodeHeapCritSec lock. But this lock is already held by\r\nthe ETW::MethodLog::SendEventsForJitMethods.\r\nSo the iterator can see half-destroyed DynamicMethodDesc and\r\na crash happens when trying to get the dynamic method name\r\nfrom the m_pszMethodName for the ETW event purposes.\r\n\r\nThe fix is to call the GetLCGMethodResolver()->Destroy() before\r\ndestroying the m_pSig and m_pszMethodName.\r\n\r\n# Customer impact\r\nThe bug is causing random crashes, one of our teams had to turn off AppInsights temporarily as a workaround.\r\n\r\n# Regression?\r\nNo\r\n\r\n# Testing\r\nLocal testing and all libraries and coreclr tests in the runtime repo - this change has been in the runtime master since December.\r\n\r\n# Risk\r\nLow, the change just prolongs lifetime of two DynamicMethodDesc members beyond the point when other code can access them.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28036","RelatedDescription":"Open PR \"Port to 3.1 - Fix DynamicMethodDesc::Destroy vs code heap enum. race\" (#28036)"},{"Id":"604969346","IsPullRequest":true,"CreatedAt":"2020-04-22T18:27:17","Actor":"sdmaclea","Number":"28035","RawContent":null,"Title":"Backport Cross DAC runtime layout changes","State":"open","Body":"This represents the minimum set of changes required to\r\nbe able to build the Cross DAC out of band.\r\n\r\nThis fixes the layout difference between the Windows\r\ncompiler and the clang Linux compiler.\r\n\r\nThe code adds `alignas` directives to allow cross OS compilation type layouts to match.\r\nAlso moves a bool into a bitfield. \r\n\r\n# Customer impact\r\n\r\nThis allows us to develop and test a new 3.1 feature (#28027) allowing triage of Linux dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is in support of a new 3.1 feature.\r\n\r\n # Testing\r\n\r\nThis has been tested by using a PDB to Dwarf comparison tool to check type layouts.\r\n\r\nThis is based on a PR which has been in the 5.0 branch for a ~6 weeks.\r\n\r\n # Risk\r\n\r\nLow\r\n","Url":"https://github.com/dotnet/coreclr/pull/28035","RelatedDescription":"Open PR \"Backport Cross DAC runtime layout changes\" (#28035)"},{"Id":"580316086","IsPullRequest":true,"CreatedAt":"2020-04-17T19:59:21","Actor":"sdmaclea","Number":"28028","RawContent":null,"Title":"WIP Support older 3.x releases with cross OS backport (for testing)","State":"closed","Body":"This is a little more than #28027","Url":"https://github.com/dotnet/coreclr/pull/28028","RelatedDescription":"Closed or merged PR \"WIP Support older 3.x releases with cross OS backport (for testing)\" (#28028)"},{"Id":"564266501","IsPullRequest":true,"CreatedAt":"2020-04-17T17:12:54","Actor":"GrabYourPitchforks","Number":"28015","RawContent":null,"Title":"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`. __This has already impacted at least one first-party application__, and they are requesting a backported fix for UWP.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28015","RelatedDescription":"Closed or merged PR \"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28015)"},{"Id":"599126504","IsPullRequest":true,"CreatedAt":"2020-04-13T20:46:51","Actor":"dotnet-maestro-bot","Number":"28034","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx to rc1-05113-01, servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28034","RelatedDescription":"Open PR \"Update BuildTools, CoreClr, CoreFx to rc1-05113-01, servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28034)"},{"Id":"567714729","IsPullRequest":true,"CreatedAt":"2020-03-31T21:15:35","Actor":"dotnet-maestro-bot","Number":"28022","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28022)"},{"Id":"584089447","IsPullRequest":true,"CreatedAt":"2020-03-27T03:30:09","Actor":"janvorli","Number":"28029","RawContent":null,"Title":"Port to 3.1 - Fix handling thread abort in HelperMethodFrame","State":"closed","Body":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)","Url":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix handling thread abort in HelperMethodFrame\" (#28029)"},{"Id":"588639746","IsPullRequest":true,"CreatedAt":"2020-03-26T18:36:55","Actor":"sdmaclea","Number":"28033","RawContent":null,"Title":"For 3.1 Backport #25958 Modify amd64walker to use table based decode","State":"open","Body":"Fixes dotnet/runtime#34109\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/coreclr/pull/25958). This PR ports that fix to _release/3.1_.\r\n\r\n## Customer Impact\r\n\r\nSetting a debugger breakpoint on Amd64 (x64) can result in incorrect calculation of floating point values. \r\n\r\n## Regression?\r\n\r\nThis was a known and difficult to fix issue. The hand written Amd64 instruction parser was flaky and nearly impossible to maintain.\r\n\r\nThe problem arose because the debugger must determine the length and form of the instruction where the breakpoint is inserted. The original code was a minimal implementation which only covered the instruction form historically used by the JIT.  As new forms and especially intrinsics were added, the code was not updated because the complexity was far too high. \r\n\r\nWe completely missed decode of all x64 simd instruction forms.\r\n\r\nThe fix required was this substantial change. At the time we missed the 3.0 branch and we did not have sufficient feedback to consider backport to 3.x.\r\n\r\n## Testing\r\n\r\n+ This code was manually tested to fix the originally reported issue.\r\n+ The code has been in the 5.0 branch for more than 6 months with no new regressions\r\n+ The 5.0 code has been tested against recently reported similar issues\r\n+ The internal diagnostic test suite was amended to test for this issue and prevent further identical regressions.\r\n\r\n## Risk\r\nLow. \r\n+ dotnet/coreclr#25958 has been in 5.0 since 9/2019\r\n  + Shipped in all .NET Core 5.0 previews to date\r\n  + Over the last 90 days, there have been \r\n     + 184K debugging sessions launched on .NET Core 5 previews\r\n     + from 3.3K unique MAC addresses\r\n  + We have no reports of issues linked to this fix\r\n  + We have several confirmation that this issue observed in 3.0/3.1 has been fixed by 5.0 \r\n+ Only affects x64 debugger operation. \r\n+ Removes a flaky instruction parser and replaces it with a machine generated one.  \r\n  + Rewrites one function `NativeWalker::DecodeInstructionForPatchSkip()`.  Used only for debugging x64 code.\r\n  + Adds 1 new machine generated instruction decode table. (10k lines)\r\n+ Adds tools to regenerate the parser tables\r\n  + Add 3 files to archive the tool used to generate the decode table.to machine generate. (Only used in development) \r\n+ Adds documentation (1 file)\r\n \r\n## Code Reviewers\r\n@hoyosjs @tannergooding @noahfalk @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28033","RelatedDescription":"Open PR \"For 3.1 Backport #25958 Modify amd64walker to use table based decode\" (#28033)"},{"Id":"587768007","IsPullRequest":true,"CreatedAt":"2020-03-26T17:08:27","Actor":"gbalykov","Number":"28032","RawContent":null,"Title":"[release/3.1] Fix Runtime_1241 test build","State":"closed","Body":"Runtime_1241 test doesn't build without this change.\r\n\r\ncc @alpencolt ","Url":"https://github.com/dotnet/coreclr/pull/28032","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Runtime_1241 test build\" (#28032)"},{"Id":"570086508","IsPullRequest":true,"CreatedAt":"2020-03-25T23:18:18","Actor":"AndyAyersMS","Number":"28024","RawContent":null,"Title":"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)","State":"closed","Body":"If we're promoting a long field, make sure `compLongUsed` gets set.\r\nOtherwise we may fail to properly decompose a long later on, leading\r\nto access violations in the jit.\r\n\r\nSee dotnet/runtime#32059 for the original bug report, and\r\ndotnet/runtime#32702 for the fix in 5.0.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash in the jit. No easy workaround.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: fix is surgical and enables existing long operand handling in\r\nthe jit in one case that can be overlooked. Only impacts x86 and arm\r\ncodegen. Problematic IL patterns may not be reachable from C#.","Url":"https://github.com/dotnet/coreclr/pull/28024","RelatedDescription":"Closed or merged PR \"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)\" (#28024)"},{"Id":"579461507","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:42","Actor":"omajid","Number":"28026","RawContent":null,"Title":"[release/3.1] Fix build with clang 10","State":"closed","Body":"This fixes 3 different sets of build issues that are seen when compiling with clang 10.\r\n\r\n- Clang 10 fails to compile slist.h because the code contained is   actually invalid. The assignment operator being used doesn't exist.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/33096\r\n\r\n- Clang 10 has moved exception-handling mismatches in function declarations under the -fms-compatibility flag (instead of the -fms-extensions flag). Our declarations of atoll and other similar functions are missing the exception declaration `throw()`. This mismatch in exception declarations makes clang 10 unable to build this code. Fix it by defining THROW_DECL as `throw()` which is supported at least as far back as clang 3.3.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/32837\r\n\r\n- Clang 10 has enabled additional warnings. Lets turn of -Werror globally in this release branch by making the `-ignorewarnings` switch  to `./build.sh` be the default.","Url":"https://github.com/dotnet/coreclr/pull/28026","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build with clang 10\" (#28026)"},{"Id":"577917254","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:25","Actor":"janvorli","Number":"28025","RawContent":null,"Title":"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle","State":"closed","Body":"When there is a race calling RuntimeType.InitializeCache, each of the\r\nracing threads creates a new GC handle using\r\nnew\r\nRuntimeTypeHandle(this).GetGCHandle(GCHandleType.WeakTrackResurrection);\r\nThis ends up calling RuntimeTypeHandle::GetGCHandle native method that\r\nadds the allocated handle into the handle cleanup list of the\r\nAssemblyLoaderAllocator specific for the runtime type.\r\nAll but the winning thread then call GCHandle.InternalFree on the just\r\nallocated handle. That frees the handle, but leaves it on the cleanup\r\nlist of the loader allocator. The same handle can be later allocated for\r\nsome\r\nother purpose. When the AssemblyLoaderAllocator is being destroyed, all\r\nthe handles on the cleanup list are destroyed too. So it destroys also\r\nthe handle that was left on the cleanup list incorrectly. That can cause\r\nall kinds of hard to diagnose issues, like the\r\nhttps://github.com/dotnet/runtime/issues/32171.\r\n\r\nThis change fixes it by adding a FreeGCHandle method on the\r\nRuntimeTypeHandle that besides freeing the handle also removes it from\r\nthe cleanup list of the related AssemblyLoadContext.\r\n\r\n ## Customer impact\r\nHard to diagnose crashes in the runtime caused by closing of random\r\nGC handles. The customer that has reported this issue was using\r\ncollectible assemblies and it was resulting in collecting\r\nLoaderAllocator that was still in use and it lead to crashes at various\r\nplaces.\r\n\r\n ## Regression?\r\nYes, it was introduced in 3.0. In 2.1 and 2.2, the thread that loses\r\nthe race destroys the handle only if the type was not in a collectible\r\nassembly. Since the non-collectible assemblies LoaderAllocator is never\r\ndestroyed, the handles were never cleaned up and so no problem could occur.\r\nIt was introduced in https://github.com/dotnet/coreclr/pull/21737\r\n\r\n ## Testing\r\nCustomer affected by the issue heavily has tested a fixed version and\r\nreported the issue doesn't occur anymore.\r\n\r\n ## Risk\r\nLow, the new code is executed at single place once per process runtine\r\nonly when a thread races for allocating the GC handle with another one\r\nand loses the race.","Url":"https://github.com/dotnet/coreclr/pull/28025","RelatedDescription":"Closed or merged PR \"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle\" (#28025)"},{"Id":"569148773","IsPullRequest":true,"CreatedAt":"2020-03-25T20:35:59","Actor":"hoyosjs","Number":"28023","RawContent":null,"Title":"[3.1 port] Fix debugger crash during unload of assemblies in ALC","State":"closed","Body":"Issue dotnet/runtime#2317 reports that trying to use unloadable ALCs under the debugger often ends up in a crash. There was a missing implementation when removing values from the module cache which in turn triggered a sporadic bad error in the DAC\r\n\r\nThis has already been fixed in .NET 5 (see dotnet/runtime#32311). This PR ports that fix down to _release/3.1_.\r\n\r\nFixes dotnet/runtime#2317\r\n\r\n## Customer Impact\r\nInner loop get's heavily impacted for plugin scenarios. From dotnet/runtime#2317 \r\n> Developing/using the use cases that where described in the .net core announcement under [Assembly Unloadability](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0) is slowed down as it is not possible to debug any scenario that requires assembly unloading. Without this fix the application must be restarted or tested without a debugger attached. This makes plugin development very annoying and less attractive.\r\n\r\nAlso see https://developercommunity.visualstudio.com/content/problem/698374/vs2019-and-fatal-error-has-occurred-and-debugging.html\r\n\r\n## Regression?\r\nNot a regression. Unloadable ALC's were introduced in the 3.0/3.1 time-frame as a new feature. However, adoption is cumbersome on inner loop due to this. \r\n\r\n## Testing\r\nThere's currently work in flight to add ALCs and unloadability verification for debugger scenarios. \r\n\r\n## Risk\r\nLow. The only code path that reaches this is exactly the one that's getting fixed and that still has somewhat low adoption. \r\n\r\n## Code Reviewer\r\n@sdmaclea ","Url":"https://github.com/dotnet/coreclr/pull/28023","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix debugger crash during unload of assemblies in ALC\" (#28023)"},{"Id":"587357484","IsPullRequest":true,"CreatedAt":"2020-03-25T18:36:02","Actor":"Anipik","Number":"28030","RawContent":null,"Title":"update branding for coreclr to 3.1.4","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28030","RelatedDescription":"Closed or merged PR \"update branding for coreclr to 3.1.4\" (#28030)"},{"Id":"587368335","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:19","Actor":"Anipik","Number":"28031","RawContent":null,"Title":"update branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28031","RelatedDescription":"Closed or merged PR \"update branding for 2.1.18\" (#28031)"},{"Id":"580315472","IsPullRequest":true,"CreatedAt":"2020-03-13T01:29:34","Actor":"sdmaclea","Number":"28027","RawContent":null,"Title":"Port Cross OS DAC to 3.1","State":"open","Body":"This represents the changes required to enable Cross OS/Arch DAC for the 3.1 product. This new feature will allow triage and debug of \r\n\r\nThis is currently a superset of #28035, which is the minimum changes to the runtime to allow us to build the Cross DAC out of band and have it work correctly.\r\n\r\n**_This patch set is still under development._**  \r\n+ It is still missing the CI changes required to sign and publish the Cross DAC binaries.\r\n+ It is not fully tested.  This is blocked by a release containing #28035.\r\n+ Depending on partner requirements this change set could grow (likely to support full stack unwind support).\r\n\r\n# Customer impact\r\n\r\nThis implements a new diagnostic feature allowing triage of Linux/Linux-Alpine dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is new 3.1 feature\r\n\r\n # Testing\r\n\r\nThis is based on a series of PR's from the 5.0 branch.\r\n\r\nWe will have Partner sign-off before we consider merging this PR.\r\n\r\nWe have initial manual test results for the new feature from our testing team.\r\n\r\n # Risk\r\n\r\nModerate\r\n\r\nThe intent is to make no functional changes to the runtime.  \r\n\r\nHowever, this change is large.  It introduces lots of changes to the build system and `#if` related to the `Target` and `Host` platform. This is not expected to change the runtime, because for the runtime `Target` == `Host`.  However due to the shear number of changes the change is difficult to exhaustively review.\r\n\r\nThe risk is mitigated in part because errors in the build systems and `#if` would typically trigger compile errors.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28027","RelatedDescription":"Open PR \"Port Cross OS DAC to 3.1\" (#28027)"},{"Id":"557359179","IsPullRequest":true,"CreatedAt":"2020-02-18T21:46:38","Actor":"kouvel","Number":"28006","RawContent":null,"Title":"[3.1] Fail FuncEval if slot backpatching lock is held by any thread","State":"closed","Body":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\n### Customer impact\r\n\r\n- This is a top feedback item for VS on 3.x: [feedback ticket](https://developercommunity.visualstudio.com/content/problem/855101/to-prevent-an-unsafe-abort-popup-appears-often-in.html)\r\n\r\n### Regression?\r\n\r\nYes, regression from 2.x, starting in 3.0\r\n\r\n### Testing\r\n\r\n- It's a timing issue and was reproduced by inducing specific timings in various phases of tiering\r\n- Verified that the timeout does not occur after the fix in the vast majority of cases. Instead, the FuncEval is failed when the lock is held and VS falls back to alternate means for evaluating the expression. See more in risks below.\r\n- Checked debugger-broken stacks at various phases of tiering to verify that the poll for debugger suspension is working as expected\r\n- Standard tests\r\n\r\n### Risks\r\n\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537","Url":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Closed or merged PR \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006)"},{"Id":"564203743","IsPullRequest":true,"CreatedAt":"2020-02-18T21:32:58","Actor":"GrabYourPitchforks","Number":"28014","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28014","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28014)"},{"Id":"566357453","IsPullRequest":true,"CreatedAt":"2020-02-18T21:31:54","Actor":"eiriktsarpalis","Number":"28019","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression","State":"closed","Body":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0 [here](https://github.com/dotnet/corefx/pull/34747/files#diff-e388668f95442712879e252fb0d48001R193) - original issue [here](https://github.com/dotnet/runtime/issues/28365)). Reported by 2 customers. \r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28019","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#28019)"},{"Id":"567089433","IsPullRequest":true,"CreatedAt":"2020-02-18T18:55:37","Actor":"tqinli","Number":"28021","RawContent":null,"Title":"Please ignore this PR, I made a mistake to create this here.","State":"closed","Body":"Please ignore this PR, I made a mistake to create this here.","Url":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Closed or merged PR \"Please ignore this PR, I made a mistake to create this here.\" (#28021)"},{"Id":"563480826","IsPullRequest":true,"CreatedAt":"2020-02-18T18:27:24","Actor":"omajid","Number":"28012","RawContent":null,"Title":"[release/3.1] Fix build on systems with glibc >= 2.30","State":"closed","Body":"## Issue\r\n\r\nrelease/3.1 does not build on newer Linux distros, due to glibc deprecation warnings being treated as errors. The fix for release/3.1 is to disable this warning. (We have proper fix for .NET 5.)\r\n\r\n## Customer Impact\r\n\r\nCustomers building .NET Runtime from sources have to apply private patches to keep the build working.\r\n\r\n## Regression?\r\n\r\nRegression from older Linux distros.\r\n\r\n---\r\n\r\nOn newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off.","Url":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012)"},{"Id":"563610462","IsPullRequest":true,"CreatedAt":"2020-02-18T18:06:39","Actor":"GrabYourPitchforks","Number":"28013","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance\" (#28013)"},{"Id":"562935739","IsPullRequest":true,"CreatedAt":"2020-02-14T17:49:00","Actor":"sdmaclea","Number":"28011","RawContent":null,"Title":"WIP -- Port linuxdac from master","State":"closed","Body":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Closed or merged PR \"WIP -- Port linuxdac from master\" (#28011)"},{"Id":"565025740","IsPullRequest":true,"CreatedAt":"2020-02-14T01:45:09","Actor":"dotnet-maestro[bot]","Number":"28018","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018)"},{"Id":"564882854","IsPullRequest":true,"CreatedAt":"2020-02-13T22:24:20","Actor":"Anipik","Number":"28016","RawContent":null,"Title":"update branding for 3.1.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Closed or merged PR \"update branding for 3.1.3\" (#28016)"},{"Id":"564883079","IsPullRequest":true,"CreatedAt":"2020-02-13T20:26:57","Actor":"Anipik","Number":"28017","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#28017)"},{"Id":"561936487","IsPullRequest":true,"CreatedAt":"2020-02-13T19:59:55","Actor":"omajid","Number":"28010","RawContent":null,"Title":"[release/3.1] Support glibc deprecation of sys/sysctl.h ","State":"closed","Body":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`","Url":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Closed or merged PR \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010)"},{"Id":"558155384","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:51","Actor":"stephentoub","Number":"28008","RawContent":null,"Title":"Delete ISSUE_TEMPLATE.md","State":"closed","Body":"All issues have been transferred to dotnet/runtime, and issues in coreclr have been disabled.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28008","RelatedDescription":"Closed or merged PR \"Delete ISSUE_TEMPLATE.md\" (#28008)"},{"Id":"558156253","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:03","Actor":"stephentoub","Number":"28009","RawContent":null,"Title":"Fix readme link in contributed.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28009","RelatedDescription":"Closed or merged PR \"Fix readme link in contributed.md\" (#28009)"},{"Id":"557644837","IsPullRequest":true,"CreatedAt":"2020-01-31T14:20:41","Actor":"WenningQiu","Number":"28007","RawContent":null,"Title":"CSG stop-gap change on AsyncLocal for .NET Core 3.1","State":"closed","Body":"Stop-gap change for https://github.com/dotnet/docs/issues/9965","Url":"https://github.com/dotnet/coreclr/pull/28007","RelatedDescription":"Closed or merged PR \"CSG stop-gap change on AsyncLocal for .NET Core 3.1\" (#28007)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"611305685","IsPullRequest":true,"CreatedAt":"2020-05-03T05:00:26","Actor":"dotnet-maestro[bot]","Number":"13350","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200502.7\r\n- **Date Produced**: 5/3/2020 12:40 AM\r\n- **Commit**: 6047903fd599e7704e8d97b9203ce004a4409942\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.400-preview.20251.5 to 3.1.400-preview.20252.7\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13350","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13350)"},{"Id":"610411291","IsPullRequest":true,"CreatedAt":"2020-05-01T23:29:12","Actor":"dotnet-maestro[bot]","Number":"13348","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1a036064-b3ed-4667-c908-08d7e6f11f14\r\n- **Build**: 20200430.5\r\n- **Date Produced**: 4/30/2020 8:15 PM\r\n- **Commit**: 5fd50687c9a9f39bd2ee8221165ea9c1b3f565d9\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.19607.3 to 1.0.0-beta.20230.5\r\n\r\n[marker]: <> (End:1a036064-b3ed-4667-c908-08d7e6f11f14)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13348","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/arcade\" (#13348)"},{"Id":"610985393","IsPullRequest":true,"CreatedAt":"2020-05-01T23:28:14","Actor":"dotnet-maestro[bot]","Number":"13349","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 74485d57-5bac-4f07-aa46-08d7e6f22aae\r\n- **Build**: 20200501.5\r\n- **Date Produced**: 5/1/2020 9:36 PM\r\n- **Commit**: cef5a2b74edc55e5fd4680a1424e2eafe6dfb69f\r\n- **Branch**: refs/heads/release/3.1.4xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20214.15 to 3.1.400-preview.20251.5\r\n\r\n[marker]: <> (End:74485d57-5bac-4f07-aa46-08d7e6f22aae)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13349","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from dotnet/sdk\" (#13349)"},{"Id":"607905872","IsPullRequest":true,"CreatedAt":"2020-05-01T20:57:20","Actor":"dotnet-maestro[bot]","Number":"13345","RawContent":null,"Title":"[release/3.1.4xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7c87b7fc-1d68-435f-7062-08d7e6f19e0b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 7c87b7fc-1d68-435f-7062-08d7e6f19e0b\r\n- **Build**: 5.7.0.6592\r\n- **Date Produced**: 4/25/2020 3:36 PM\r\n- **Commit**: 4dbf16e68eabf507b9f156c801b1b7c3b0586e43\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.6.0-preview.3.6558 to 5.7.0-preview.1.6592\r\n\r\n[marker]: <> (End:7c87b7fc-1d68-435f-7062-08d7e6f19e0b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13345","RelatedDescription":"Closed or merged PR \"[release/3.1.4xx] Update dependencies from nuget/nuget.client\" (#13345)"},{"Id":"610265534","IsPullRequest":true,"CreatedAt":"2020-05-01T20:56:48","Actor":"wli3","Number":"13347","RawContent":null,"Title":"update nuget","State":"closed","Body":"…5.7.0.6592\r\n\r\n- NuGet.Build.Tasks: 5.6.0-preview.3.6558 -> 5.7.0-preview.1.6592","Url":"https://github.com/dotnet/cli/pull/13347","RelatedDescription":"Closed or merged PR \"update nuget\" (#13347)"},{"Id":"609255484","IsPullRequest":true,"CreatedAt":"2020-04-29T19:51:53","Actor":"dotnet-maestro[bot]","Number":"13346","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200429.6\r\n- **Date Produced**: 4/29/2020 5:53 PM\r\n- **Commit**: 42ea8278db4c13727a7ac5db923228716e986bfa\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20214.15 to 3.1.300-preview.20229.6\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13346","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13346)"},{"Id":"607856353","IsPullRequest":true,"CreatedAt":"2020-04-27T23:33:08","Actor":"dotnet-maestro[bot]","Number":"13344","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6591\r\n- **Date Produced**: 4/25/2020 1:44 AM\r\n- **Commit**: 636570e68732c1f718ede9ca07802d7b1cc69aa0\r\n- **Branch**: release-5.6.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.6.0-preview.3.6558 to 5.6.0-rtm.6591\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13344","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13344)"},{"Id":"600820737","IsPullRequest":true,"CreatedAt":"2020-04-16T18:20:10","Actor":"v-chmart","Number":"13343","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli release/3.1.3xx | 20200416","State":"closed","Body":"Localization update","Url":"https://github.com/dotnet/cli/pull/13343","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/cli release/3.1.3xx | 20200416\" (#13343)"},{"Id":"599938219","IsPullRequest":true,"CreatedAt":"2020-04-15T15:52:29","Actor":"dotnet-maestro[bot]","Number":"13342","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200414.15\r\n- **Date Produced**: 4/15/2020 12:06 AM\r\n- **Commit**: 6f0edb1dfaf5a6c780719794a7dd7d945c320ebf\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20210.1 to 3.1.300-preview.20214.15\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13342","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13342)"},{"Id":"599201023","IsPullRequest":true,"CreatedAt":"2020-04-14T02:46:38","Actor":"mmitche","Number":"13341","RawContent":null,"Title":"[release/2.1.8xx] Merge from 2.1.6xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13341","RelatedDescription":"Closed or merged PR \"[release/2.1.8xx] Merge from 2.1.6xx\" (#13341)"},{"Id":"599162695","IsPullRequest":true,"CreatedAt":"2020-04-13T23:03:41","Actor":"mmitche","Number":"13340","RawContent":null,"Title":"[release/2.1.6xx] Merge from 2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13340","RelatedDescription":"Closed or merged PR \"[release/2.1.6xx] Merge from 2.1.5xx\" (#13340)"},{"Id":"599135961","IsPullRequest":true,"CreatedAt":"2020-04-13T21:59:20","Actor":"mmitche","Number":"13339","RawContent":null,"Title":"Update buildtools","State":"closed","Body":"Contains fix https://github.com/dotnet/buildtools/pull/2271, which keeps the build from failing if a retry of an upload passes.","Url":"https://github.com/dotnet/cli/pull/13339","RelatedDescription":"Closed or merged PR \"Update buildtools\" (#13339)"},{"Id":"597925022","IsPullRequest":true,"CreatedAt":"2020-04-10T15:37:23","Actor":"dotnet-maestro[bot]","Number":"13338","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200410.1\r\n- **Date Produced**: 4/10/2020 2:29 PM\r\n- **Commit**: 6f3d0952c6f206eca675ea1b9ed87f5e8cde2791\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20179.9 to 3.1.300-preview.20210.1\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13338","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13338)"},{"Id":"596161722","IsPullRequest":true,"CreatedAt":"2020-04-09T03:04:57","Actor":"dotnet-maestro[bot]","Number":"13336","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6558\r\n- **Date Produced**: 4/6/2020 10:48 PM\r\n- **Commit**: 863fc6bb184cccfe12caa03bea91b0ddc48843da\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.6.0-preview.2.6532 to 5.6.0-preview.3.6558\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13336","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13336)"},{"Id":"596672984","IsPullRequest":true,"CreatedAt":"2020-04-08T22:28:56","Actor":"mmitche","Number":"13337","RawContent":null,"Title":"[release/3.1.3xx] Revert to 3.1.2 templates","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13337","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Revert to 3.1.2 templates\" (#13337)"},{"Id":"596128162","IsPullRequest":true,"CreatedAt":"2020-04-08T21:24:49","Actor":"mmitche","Number":"13335","RawContent":null,"Title":"[release/3.1.3xx] Revert to 3.1.2 runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13335","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Revert to 3.1.2 runtime\" (#13335)"},{"Id":"596057168","IsPullRequest":true,"CreatedAt":"2020-04-07T21:02:37","Actor":"mmitche","Number":"13334","RawContent":null,"Title":"[release/2.1.5xx] Update feed tasks versions","State":"closed","Body":"Fix up the feed task version to match core-setup's 2.1 branch. Going on the hunch that the errors seen are not seen in core-setup.","Url":"https://github.com/dotnet/cli/pull/13334","RelatedDescription":"Closed or merged PR \"[release/2.1.5xx] Update feed tasks versions\" (#13334)"},{"Id":"595947380","IsPullRequest":true,"CreatedAt":"2020-04-07T18:13:28","Actor":"mmitche","Number":"13333","RawContent":null,"Title":"[release/2.1.8xx] Merge from 2.1.5xx and 2.1.6xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13333","RelatedDescription":"Closed or merged PR \"[release/2.1.8xx] Merge from 2.1.5xx and 2.1.6xx\" (#13333)"},{"Id":"595947109","IsPullRequest":true,"CreatedAt":"2020-04-07T18:13:07","Actor":"mmitche","Number":"13332","RawContent":null,"Title":"[release/2.1.6xx] Merge from release/2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13332","RelatedDescription":"Closed or merged PR \"[release/2.1.6xx] Merge from release/2.1.5xx\" (#13332)"},{"Id":"595497861","IsPullRequest":true,"CreatedAt":"2020-04-07T13:52:23","Actor":"mmitche","Number":"13331","RawContent":null,"Title":"[release/2.1.5xx] Enable TLS 1.2","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13331","RelatedDescription":"Closed or merged PR \"[release/2.1.5xx] Enable TLS 1.2\" (#13331)"},{"Id":"593287142","IsPullRequest":true,"CreatedAt":"2020-04-03T10:37:45","Actor":"v-chmart","Number":"13330","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli master | 20200403","State":"open","Body":"Localization update.","Url":"https://github.com/dotnet/cli/pull/13330","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/cli master | 20200403\" (#13330)"},{"Id":"592091086","IsPullRequest":true,"CreatedAt":"2020-04-02T03:44:09","Actor":"dotnet-maestro[bot]","Number":"13329","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200401.6\r\n- **Date Produced**: 4/1/2020 5:23 PM\r\n- **Commit**: 06bdc9ce0f3f21c365b998a34165c9c6a8019589\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20201.6\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13329","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13329)"},{"Id":"591476705","IsPullRequest":true,"CreatedAt":"2020-04-01T16:03:25","Actor":"dotnet-maestro[bot]","Number":"13324","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6532\r\n- **Date Produced**: 3/25/2020 11:01 PM\r\n- **Commit**: 1c2681b16a0bb9be9271abe043a1cbf892761ef8\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.6.0-preview.2.6532\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13324","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13324)"},{"Id":"591660841","IsPullRequest":true,"CreatedAt":"2020-04-01T16:00:03","Actor":"dotnet-maestro[bot]","Number":"13327","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13327","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13327)"},{"Id":"591660845","IsPullRequest":true,"CreatedAt":"2020-04-01T15:59:56","Actor":"dotnet-maestro[bot]","Number":"13328","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9a2d95d4-e7b6-4af1-24a3-08d7c517f22b\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13328","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore\" (#13328)"},{"Id":"591503112","IsPullRequest":true,"CreatedAt":"2020-04-01T15:56:15","Actor":"dotnet-maestro[bot]","Number":"13325","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: cadcf242-0374-4d70-4f28-08d7c5f06407\r\n- **Build**: 20200331.2\r\n- **Date Produced**: 4/1/2020 2:44 AM\r\n- **Commit**: 57d5bbb58f17a8cb3a82c81839c9379b4fcfe0d8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.4-servicing.20181.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.4\r\n\r\n[marker]: <> (End:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13325","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#13325)"},{"Id":"591660832","IsPullRequest":true,"CreatedAt":"2020-04-01T06:51:04","Actor":"dotnet-maestro[bot]","Number":"13326","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13326","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13326)"},{"Id":"590782764","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:55","Actor":"wli3","Number":"13321","RawContent":null,"Title":"Change mac build pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13321","RelatedDescription":"Closed or merged PR \"Change mac build pool\" (#13321)"},{"Id":"590783573","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:40","Actor":"wli3","Number":"13322","RawContent":null,"Title":"Change mac pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13322","RelatedDescription":"Closed or merged PR \"Change mac pool\" (#13322)"},{"Id":"590814958","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:33","Actor":"wli3","Number":"13323","RawContent":null,"Title":"Change mac pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13323","RelatedDescription":"Closed or merged PR \"Change mac pool\" (#13323)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"611498622","IsPullRequest":true,"CreatedAt":"2020-05-03T20:20:58","Actor":"leotsarev","Number":"1761","RawContent":null,"Title":"Oren → Claire","State":"open","Body":"","Url":"https://github.com/dotnet/standard/pull/1761","RelatedDescription":"Open PR \"Oren → Claire\" (#1761)"},{"Id":"608746802","IsPullRequest":false,"CreatedAt":"2020-04-29T03:12:02","Actor":"viralmodi","Number":"1760","RawContent":null,"Title":"How to do file/folder access control when targeting .NET Standard 2.0?","State":"open","Body":"As per https://github.com/dotnet/standard/issues/15. there are not file/folder access control APIs supported in .NET standard 2.0. If I have a product/tool targeting .NET Standard 2.0 (need cross platform support), what is the best way to enable use of file access control APIs?\r\n\r\nDoes this work - https://www.nuget.org/packages/System.IO.FileSystem.AccessControl/? or do you have any other suggestion?","Url":"https://github.com/dotnet/standard/issues/1760","RelatedDescription":"Open issue \"How to do file/folder access control when targeting .NET Standard 2.0?\" (#1760)"},{"Id":"606261411","IsPullRequest":true,"CreatedAt":"2020-04-24T12:00:39","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200428.4\r\n- **Date Produced**: 4/28/2020 7:20 PM\r\n- **Commit**: 590a102630c7efc7ca6f652f7c6c47dee4c4086c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20228.4\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20228.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20228.4\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20228.4\r\n  - **Microsoft.DotNet.GenAPI**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20228.4\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20201.2 to 5.0.0-beta.20228.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1759","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1759)"},{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"},{"Id":"603537790","IsPullRequest":false,"CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Number":"1757","RawContent":null,"Title":"Expression.Call(Expression, MethodInfo, Expression) overload","State":"open","Body":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?","Url":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Open issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757)"},{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"},{"Id":"597037757","IsPullRequest":false,"CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Number":"1755","RawContent":null,"Title":"NetFX20 TypeLibType to .Net Standard","State":"open","Body":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Open issue \"NetFX20 TypeLibType to .Net Standard\" (#1755)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-04-07T15:43:35","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"closed","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"595131445","IsPullRequest":false,"CreatedAt":"2020-04-06T13:46:58","Actor":"Nekuskus","Number":"1754","RawContent":null,"Title":"System.TypeInitializationException","State":"open","Body":"I keep getting `System.TypeInitializationException: System.IO.FileNotFoundException: Can't find file or assembly 'System.Private.CoreLib, Version=4.0.0.0', Culture=neutral, PublicKeyToken=7cec85d7bea7798e` exception after moving my app from .NET Core to .NET Framework 4.7.2. I tried a few solutions including adding `<PackageReference Include=\"NETStandard.Library.NETFramework\" Version=\"2.0.0-preview2-25405-01\" />`. However nothing works. The exception occurs before executing any code.","Url":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Open issue \"System.TypeInitializationException\" (#1754)"},{"Id":"594269060","IsPullRequest":false,"CreatedAt":"2020-04-05T05:25:41","Actor":"Mordahlhuilhulh","Number":"1753","RawContent":null,"Title":"Memory leak when build X509 chain","State":"open","Body":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n","Url":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Open issue \"Memory leak when build X509 chain\" (#1753)"},{"Id":"592577113","IsPullRequest":true,"CreatedAt":"2020-04-02T12:20:49","Actor":"dotnet-maestro[bot]","Number":"1752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 4:57 PM\r\n- **Commit**: bce0a98620c1c5a110b2bba9912f3d5929069c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20201.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1752)"},{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"},{"Id":"585023231","IsPullRequest":true,"CreatedAt":"2020-03-20T12:15:48","Actor":"dotnet-maestro[bot]","Number":"1745","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1745)"},{"Id":"584362093","IsPullRequest":true,"CreatedAt":"2020-03-19T12:25:52","Actor":"dotnet-maestro[bot]","Number":"1744","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1744","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1744)"},{"Id":"582961986","IsPullRequest":true,"CreatedAt":"2020-03-18T22:09:09","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1742)"},{"Id":"584020602","IsPullRequest":true,"CreatedAt":"2020-03-18T22:08:19","Actor":"gugavaro","Number":"1743","RawContent":null,"Title":"Updating ApiCompat baselines files","State":"closed","Body":"Updating ApiCompat baselines files","Url":"https://github.com/dotnet/standard/pull/1743","RelatedDescription":"Closed or merged PR \"Updating ApiCompat baselines files\" (#1743)"},{"Id":"580556512","IsPullRequest":true,"CreatedAt":"2020-03-13T12:15:46","Actor":"dotnet-maestro[bot]","Number":"1740","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200312.3\r\n- **Date Produced**: 3/12/2020 5:55 PM\r\n- **Commit**: 16d4350184cf362cd59807b589d1c93803025abc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20162.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1740","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1740)"},{"Id":"579889900","IsPullRequest":true,"CreatedAt":"2020-03-12T12:10:44","Actor":"dotnet-maestro[bot]","Number":"1739","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200311.5\r\n- **Date Produced**: 3/12/2020 1:01 AM\r\n- **Commit**: df7ef03819d65500711edd0bceac091264b464b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20161.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1739","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1739)"},{"Id":"579213194","IsPullRequest":true,"CreatedAt":"2020-03-11T12:25:51","Actor":"dotnet-maestro[bot]","Number":"1738","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200310.4\r\n- **Date Produced**: 3/10/2020 8:42 PM\r\n- **Commit**: 9a9422d109520d942711e07fae8c662c20e7b6e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20160.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1738","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1738)"},{"Id":"578529521","IsPullRequest":true,"CreatedAt":"2020-03-10T12:35:54","Actor":"dotnet-maestro[bot]","Number":"1737","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200309.2\r\n- **Date Produced**: 3/9/2020 3:47 PM\r\n- **Commit**: d9a664e151f9973f1a3679f48d24c3407d77c9b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20159.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1737","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1737)"},{"Id":"577855009","IsPullRequest":true,"CreatedAt":"2020-03-09T12:10:53","Actor":"dotnet-maestro[bot]","Number":"1736","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200308.2\r\n- **Date Produced**: 3/8/2020 11:45 PM\r\n- **Commit**: 527179abfbb5cd738035c4ac2d2566c571ce85db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20158.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1736","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1736)"},{"Id":"577489994","IsPullRequest":true,"CreatedAt":"2020-03-08T12:10:56","Actor":"dotnet-maestro[bot]","Number":"1735","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200307.1\r\n- **Date Produced**: 3/7/2020 2:29 PM\r\n- **Commit**: ca67e6af5b3c6d94755f0912c5365bea44130b12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20157.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1735","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1735)"},{"Id":"577331751","IsPullRequest":true,"CreatedAt":"2020-03-07T13:20:45","Actor":"dotnet-maestro[bot]","Number":"1734","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200306.4\r\n- **Date Produced**: 3/6/2020 6:36 PM\r\n- **Commit**: 8ff203f47d83e89ac4b9310b4e902188e0344bf0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20156.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1734","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1734)"},{"Id":"576916652","IsPullRequest":true,"CreatedAt":"2020-03-06T13:10:41","Actor":"dotnet-maestro[bot]","Number":"1733","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200305.4\r\n- **Date Produced**: 3/6/2020 12:19 AM\r\n- **Commit**: 08eea2b992d991297fc23de413bddfb9b3db5082\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20155.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1733","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1733)"},{"Id":"576236548","IsPullRequest":true,"CreatedAt":"2020-03-05T13:25:48","Actor":"dotnet-maestro[bot]","Number":"1732","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200304.1\r\n- **Date Produced**: 3/4/2020 2:28 PM\r\n- **Commit**: 5d8c586ca1bed15f630ba7d2ed16f591be06eafd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20154.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1732","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1732)"},{"Id":"575382239","IsPullRequest":true,"CreatedAt":"2020-03-04T13:25:52","Actor":"dotnet-maestro[bot]","Number":"1731","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200303.1\r\n- **Date Produced**: 3/3/2020 2:12 PM\r\n- **Commit**: 421b20fb860907c45673de791177e3fd61402197\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20153.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1731","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1731)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"611046209","IsPullRequest":true,"CreatedAt":"2020-05-01T23:36:15","Actor":"vcsjones","Number":"42916","RawContent":null,"Title":"[release/2.1] Handle additional chain statuses for X509Chain on macOS","State":"open","Body":"Ports the following PRs in to the release/2.1 branch.\r\n\r\n* dotnet/runtime#35347\r\n* dotnet/runtime#35488\r\n* dotnet/runtime#35548\r\n* dotnet/corefx#40117\r\n\r\nThis omits the unit tests from 35347 because the tests depend on new functionality not present in the release/2.1 branch.\r\n\r\nThis omits the unit test changes from 40117 because that test does not exist in release/2.1\r\n\r\n## Description\r\n\r\n`X509Chain.Build` can receive unknown status strings from the underlying platform, macOS, when building an X509 chain. An unknown status string causes a CryptographicException to be thrown due to the missing mappings.\r\n\r\nThe fix is to correctly handle these additional statuses, mapping them such that the behavior matches what Windows and Linux do.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#35238. Customers that attempt to build an `X509Chain` on macOS with a certificate that causes one of the unknown statuses to be triggered will receive a `CryptographicException` instead of the `X509ChainStatusFlags` which other platforms correctly report. This may cause compatibility issues as developers are porting from other platforms to macOS.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nContains unit tests for all but the basic constraints scenario due to missing functionality in release 2.1 to aid testing. All are tested in dotnet/runtime.\r\n\r\n## Risk\r\n\r\n**Low.**  All of the new codes have been encountered in testing and measured against Windows for cross-platform consistency.  The existing tests ensure that the change isn't accidentally doing subtle remaps of established values.","Url":"https://github.com/dotnet/corefx/pull/42916","RelatedDescription":"Open PR \"[release/2.1] Handle additional chain statuses for X509Chain on macOS\" (#42916)"},{"Id":"610893020","IsPullRequest":true,"CreatedAt":"2020-05-01T18:19:02","Actor":"joperezr","Number":"42915","RawContent":null,"Title":"Merging Blazor feature branch into release/3.1","State":"open","Body":"cc: @ericstj @pranavkm @Jozkee @Anipik @safern \r\n\r\nThis was mostly a straight forward merge except for the following conflicts/changes I made:\r\n\r\n- **[Merge Conflict]** eng\\Versions.props: We had done some special branding for blazor feature branch, I kept source as it was on release/3.1 branch as that is what we wanted.\r\n- **[Merge Conflict]** src\\packages.builds: We had conflicts here since the packages that were being built were different. I kept source as it was on release/3.1.\r\n- **[Post-Merge manual change]** eng\\corefx-base.yml and eng\\windows.yml: We made some changes on the blazor feature branch in order to ONLY ship the http json package on these yml files. I removed those changes and kept source as it was on release/3.1\r\n- **[Post-Merge manual change]** packageIndex.json: I manually added the 3.2.0 as stable version, as it will have shipped by the time we merge this PR\r\n\r\nOther than the above details, this was just a direct merge and I didn't have to edit anything else.","Url":"https://github.com/dotnet/corefx/pull/42915","RelatedDescription":"Open PR \"Merging Blazor feature branch into release/3.1\" (#42915)"},{"Id":"608486062","IsPullRequest":true,"CreatedAt":"2020-04-28T17:23:55","Actor":"vcsjones","Number":"42914","RawContent":null,"Title":"[release/3.1] Handle additional chain statuses for X509Chain on macOS","State":"open","Body":"Ports the following PRs from runtime in to the release/3.1 branch.\r\n\r\n* dotnet/runtime#35347\r\n* dotnet/runtime#35488\r\n* dotnet/runtime#35548\r\n\r\nThis omits the unit tests from 35347 because the tests depend on new functionality not present in the release/3.1 branch.\r\n\r\n## Description\r\n\r\n`X509Chain.Build` can receive unknown status strings from the underlying platform, macOS, when building an X509 chain. An unknown status string causes a CryptographicException to be thrown due to the missing mappings.\r\n\r\nThe fix is to correctly handle these additional statuses, mapping them such that the behavior matches what Windows and Linux do.\r\n\r\n## Customer Impact\r\n\r\nInitially reported by a customer in dotnet/runtime#35238. Customers that attempt to build an `X509Chain` on macOS with a certificate that causes one of the unknown statuses to be triggered will receive a `CryptographicException` instead of the `X509ChainStatusFlags` which other platforms correctly report. This may cause compatibility issues as developers are porting from other platforms to macOS.\r\n\r\n## Regression\r\n\r\nNo.\r\n\r\n## Testing\r\n\r\nContains unit tests for all but the basic constraints scenario due to missing functionality in release 3.1 to aid testing. All are tested in dotnet/runtime.\r\n\r\n## Risk\r\n\r\n**Low.**  All of the new codes have been encountered in testing and measured against Windows for cross-platform consistency.  The existing tests ensure that the change isn't accidentally doing subtle remaps of established values.","Url":"https://github.com/dotnet/corefx/pull/42914","RelatedDescription":"Open PR \"[release/3.1] Handle additional chain statuses for X509Chain on macOS\" (#42914)"},{"Id":"607782633","IsPullRequest":true,"CreatedAt":"2020-04-27T20:10:29","Actor":"pranavkm","Number":"42913","RawContent":null,"Title":"Produce stable builds of System.Net.Http.Json","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42913","RelatedDescription":"Closed or merged PR \"Produce stable builds of System.Net.Http.Json\" (#42913)"},{"Id":"605904437","IsPullRequest":true,"CreatedAt":"2020-04-24T17:27:45","Actor":"joperezr","Number":"42911","RawContent":null,"Title":"Making System.Net.Http.Json to depend on inbox version of System.Net.Http for net461","State":"closed","Body":"cc: @ericstj \r\n\r\nAs expected, System.Net.Http.Json net461 configuration incorrectly depends on System.Net.Http.dll version 4.2.0.0. This is fine for now since HttpJson package depends on the netstandard facades, but this will change once this branch is merged to release/3.1 so it is important to make sure that we address this now. I have verified that after this change the package reflects the change only on the lib/net461 asset by downgrading its System.Net.Http dependency from 4.2.0.0 down to 4.0.0.0. Apart from that, the package remains unchanged.\r\n\r\nFYI: @Jozkee ","Url":"https://github.com/dotnet/corefx/pull/42911","RelatedDescription":"Closed or merged PR \"Making System.Net.Http.Json to depend on inbox version of System.Net.Http for net461\" (#42911)"},{"Id":"605929794","IsPullRequest":true,"CreatedAt":"2020-04-23T23:08:41","Actor":"mconnew","Number":"42912","RawContent":null,"Title":"Fix serialization of read-only IEnumerable's for DCS","State":"open","Body":"Servicing change for dotnet/runtime#34151","Url":"https://github.com/dotnet/corefx/pull/42912","RelatedDescription":"Open PR \"Fix serialization of read-only IEnumerable's for DCS\" (#42912)"},{"Id":"605120509","IsPullRequest":true,"CreatedAt":"2020-04-22T22:44:31","Actor":"joperezr","Number":"42910","RawContent":null,"Title":"Ensuring WinHttpHandler will reference TargetingPack assembly versions for netfx builds","State":"open","Body":"cc: @ericstj @Anipik @wtgodbe \r\n\r\nThese changes will fix WinHttpHandler to make it build against the net461 targeting pack first to avoid regression when the netstandard facades are not injected by the package automatically. This should unblock us from shipping WinHttpHandler package again now without the need of the netstandard facades.\r\n\r\nFYI: @karelz after this is in, we will be able to ship the pending change on WinHttpHandler package.\r\n\r\nI will add the No Merge label since this is not supposed to ship until next release and branches are locked right now.\r\n\r\nFYI: @Jozkee we will most likely need to do the same changes to the package we are shipping for Blazor.","Url":"https://github.com/dotnet/corefx/pull/42910","RelatedDescription":"Open PR \"Ensuring WinHttpHandler will reference TargetingPack assembly versions for netfx builds\" (#42910)"},{"Id":"605073774","IsPullRequest":true,"CreatedAt":"2020-04-22T21:03:44","Actor":"joperezr","Number":"42909","RawContent":null,"Title":"[Test-only change]Enable running VerifyReferenceClousre for netfx OOB packages","State":"open","Body":"We recently merged https://github.com/dotnet/corefx/pull/42901 which main purpose was to remove the need of the netstandard facades when using our OOB packages in net461+. Unfortunately by doing this we did find a side-effect (by using manual verification) with the System.Net.Http.WinHttpHandler package so we had to undo shipping that package with https://github.com/dotnet/corefx/pull/42908. We could have caught this in our package testing if we had enabled VerifyReferenceClosure for netfx, but that was currently disabled. This PR will enable those checks to make sure we never regress this scenario again.\r\n\r\ncc: @ericstj @Anipik @wtgodbe \r\nFYI: @karelz \r\n\r\nThis is a test-only change. The branch is locked right now because of the release process so I will add the NoMerge label, but will remove it once branch is unlocked.","Url":"https://github.com/dotnet/corefx/pull/42909","RelatedDescription":"Open PR \"[Test-only change]Enable running VerifyReferenceClousre for netfx OOB packages\" (#42909)"},{"Id":"604162038","IsPullRequest":true,"CreatedAt":"2020-04-21T20:25:19","Actor":"joperezr","Number":"42908","RawContent":null,"Title":"Disable build of System.Net.Http.WinHttpHandler to avoid problem on net461","State":"closed","Body":"cc: @wtgodbe @Anipik @mmitche @ericstj \r\n\r\nThis will undo the build of System.Net.Http.WinHttpHandler\r\n\r\nFYI: @karelz @alnikola as this affects #42888 fix.\r\n","Url":"https://github.com/dotnet/corefx/pull/42908","RelatedDescription":"Closed or merged PR \"Disable build of System.Net.Http.WinHttpHandler to avoid problem on net461\" (#42908)"},{"Id":"601680398","IsPullRequest":true,"CreatedAt":"2020-04-17T21:57:41","Actor":"Jozkee","Number":"42906","RawContent":null,"Title":"[release/3.1-blazor] Fix Http.Json serialization performance by using static options (#35040)","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/35040\r\n\r\ncc @ericstj @jeffhandley ","Url":"https://github.com/dotnet/corefx/pull/42906","RelatedDescription":"Closed or merged PR \"[release/3.1-blazor] Fix Http.Json serialization performance by using static options (#35040)\" (#42906)"},{"Id":"602197177","IsPullRequest":true,"CreatedAt":"2020-04-17T19:49:27","Actor":"cheenamalhotra","Number":"42907","RawContent":null,"Title":"[Release/3.1] Address MARS TDS header contained errors","State":"open","Body":"Ports PR https://github.com/dotnet/SqlClient/pull/490 that fixes issue https://github.com/dotnet/SqlClient/issues/85\r\n\r\n### Summary\r\nFixes issue https://github.com/dotnet/SqlClient/issues/85 where client applications fail intermittently with below exception:\r\n\r\n`System.Data.SqlClient.SqlException (0x80131904): The incoming tabular data stream (TDS) protocol stream is incorrect. The MARS TDS header contained errors.`\r\n\r\n### Customer Impact\r\nHigh. A lot of customers are impacted with this bug.\r\n\r\n### Regression?\r\nNo\r\n\r\n### Testing\r\nPreviously SqlClient tests did not cover this use-case, but test has been added to cover this scenario in this PR.\r\n\r\n### Risk\r\n**Low**: The fix has been verified with all bound tests, EF Core tests and many customers have also reported they are able to now run their applications in heavy load successfully.\r\n\r\ncc: @danmosemsft @saurabh500 @David-Engel \r\n\r\n_Edit: We're holding on to merge this PR right now, will re-activate when ready._","Url":"https://github.com/dotnet/corefx/pull/42907","RelatedDescription":"Open PR \"[Release/3.1] Address MARS TDS header contained errors\" (#42907)"},{"Id":"601512593","IsPullRequest":true,"CreatedAt":"2020-04-17T04:24:35","Actor":"ericstj","Number":"42905","RawContent":null,"Title":"Update branding to rc","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42905","RelatedDescription":"Closed or merged PR \"Update branding to rc\" (#42905)"},{"Id":"599733444","IsPullRequest":true,"CreatedAt":"2020-04-14T22:05:24","Actor":"dotnet-maestro[bot]","Number":"42904","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20200413.4\r\n- **Date Produced**: 4/13/2020 7:11 PM\r\n- **Commit**: 1a55276ab9d16792cec595ba870df39a9d97d5ca\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 2.4.1-beta.20113.5 to 2.4.1-beta.20213.4\r\n  - **Microsoft.DotNet.XUnitConsoleRunner**: from 2.5.1-beta.20113.5 to 2.5.1-beta.20213.4\r\n  - **Microsoft.DotNet.VersionTools.Tasks**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.ApiCompat**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: from 2.2.0-beta.20113.5 to 2.2.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.CoreFxTesting**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.GenAPI**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.GenFacades**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 2.0.0-beta.20113.5 to 2.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42904","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42904)"},{"Id":"596769835","IsPullRequest":true,"CreatedAt":"2020-04-14T17:27:48","Actor":"joperezr","Number":"42901","RawContent":null,"Title":"Adding .NET Framework configurations to OOB packages so that they won't require the netstandard shims when targeting .NET Framework","State":"closed","Body":"cc: @ericstj @Anipik @safern \r\nFixes https://github.com/dotnet/runtime/issues/1625\r\n\r\n**Description**\r\n\r\nThis PR will finish the work on the release/3.1 branch that was started with PR https://github.com/dotnet/corefx/pull/42849 on release/2.1 branch. It is adding .NET Framework configurations to our OOB packages so that they won't require netsandard shims for projects ingesting them and targeting .NET Framework.\r\n\r\nThings that need to happen before merging this PR:\r\n\r\n- [X] Add Net461 configurations to all projects that today ship as NuGet packages and have a .NET Standard asset when consumer targets .NET Framework 4.6.1/4.6.2/4.7/4.7.1/4.7.2/4.8. (This will be done with the first commit, so that it is easier to review this commit by commit.)\r\n- [X] Add Net461 configuration to OpenSSL OOB package which also needs it, but it will be treated specially given that it requires some special types in S.S.C.Algorithms that are not present in 461. (Done with commit 10df782)\r\n- [x] Baseline all of the packages that have new configurations from steps 1 and 2, and now service all packages above that depend on them so that all new package versions will depend on these new packages that have the new configs. After doing this, all of our latest NuGet packages should not require the .NET Standard shims. (Done with 14b5db5)\r\n- [x] Do some extensive testing to make sure API wasn't regressed by adding these new configurations. (I have more info on how I did this here https://github.com/dotnet/corefx/pull/42901#issuecomment-611770142).\r\n\r\n**Customer Impact**\r\n\r\nCustomers that have hit problems caused by this issue have been trying to add manual workarounds on their projects and custom logic for deploying. Once this is fixed, customers will have to remove those workarounds from their projects and reference the new packages in order to get the benefits of not needing the extra facades or binding redirects for their application.\r\n\r\n**Regression?**\r\n\r\nNo.\r\n\r\n**Packaging reviewed?**\r\n\r\nIt will involve packaging changes, so it will require a review by packaging experts.\r\n\r\n**Risk**\r\n\r\nLow. We didn't increase Assembly Version in order to not require new binding redirects from apps. The risk here is that we are effectively causing NuGet to use a different asset from the package to pass to the compiler and a different one as well for the implementation, but we did extensive testing to ensure that we were not removing or adding API and that there was no visible difference between the assets that they used to get and the ones they will get now.\r\n","Url":"https://github.com/dotnet/corefx/pull/42901","RelatedDescription":"Closed or merged PR \"Adding .NET Framework configurations to OOB packages so that they won't require the netstandard shims when targeting .NET Framework\" (#42901)"},{"Id":"599126181","IsPullRequest":true,"CreatedAt":"2020-04-13T21:23:23","Actor":"dotnet-maestro-bot","Number":"42903","RawContent":null,"Title":"Update BuildTools to rc1-05113-01 (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42903","RelatedDescription":"Closed or merged PR \"Update BuildTools to rc1-05113-01 (release/2.1)\" (#42903)"},{"Id":"597967932","IsPullRequest":true,"CreatedAt":"2020-04-10T20:32:09","Actor":"pranavkm","Number":"42902","RawContent":null,"Title":"Update branding to preview5","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42902","RelatedDescription":"Closed or merged PR \"Update branding to preview5\" (#42902)"},{"Id":"587757768","IsPullRequest":true,"CreatedAt":"2020-04-10T16:19:35","Actor":"alnikola","Number":"42888","RawContent":null,"Title":"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler","State":"closed","Body":"This is port of dotnet/runtime#33158.\r\n\r\n**Description**\r\nPre-release WinHTTP's version supports client certificate-based authentication over HTTP/2, but the feature must be explicitly opted-in. PR sets WINHTTP_OPTION_ENABLE_HTTP2_PLUS_CLIENT_CERT to TRUE before invoking WinHttpConnect if the request's protocol is HTTP/2 and scheme is HTTPS.\r\n\r\n**Customer impact**\r\nWithout this change, it's not possible to use client certificate-based authentication on HTTP/2 in .Net Framework 4.7.2 and 4.8.\r\n\r\n**Regression?**\r\nNo\r\n\r\n**Packaging review**\r\nChange affects System.Net.Http.WinHttpHandler.dll which is distributed in System.Net.Http.WinHttpHandler package.\r\n\r\n**Risk**\r\n**Low**, covered by functional tests in master branch, but only manually tested for 3.1","Url":"https://github.com/dotnet/corefx/pull/42888","RelatedDescription":"Closed or merged PR \"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler\" (#42888)"},{"Id":"593547117","IsPullRequest":true,"CreatedAt":"2020-04-03T17:56:26","Actor":"omajid","Number":"42900","RawContent":null,"Title":"[release/3.1] Fix corefx to build on clang 10","State":"open","Body":"Clang 10 adds/enables new warnings, some of which is affecting the corefx code.\r\n\r\nClang 10 has added `-Walloca` to warn about uses of `alloca()`. Clang 10 has also added `-Wimplicit-int-float-conversion`. This commit disables those warnings where applicable.\r\n\r\nThis is a backport of dotnet/runtime#33734 to corefx.\r\n\r\nAfter this commit, I can build all of corefx with Clang 10.","Url":"https://github.com/dotnet/corefx/pull/42900","RelatedDescription":"Open PR \"[release/3.1] Fix corefx to build on clang 10\" (#42900)"},{"Id":"591386734","IsPullRequest":true,"CreatedAt":"2020-03-31T22:29:33","Actor":"Anipik","Number":"42899","RawContent":null,"Title":"Stablise the 3.1 branch","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42899","RelatedDescription":"Closed or merged PR \"Stablise the 3.1 branch\" (#42899)"},{"Id":"590339010","IsPullRequest":true,"CreatedAt":"2020-03-30T14:37:07","Actor":"s-tarasov","Number":"42898","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42898","RelatedDescription":"Closed or merged PR \"Update README.md\" (#42898)"},{"Id":"588584064","IsPullRequest":true,"CreatedAt":"2020-03-27T15:18:16","Actor":"joperezr","Number":"42894","RawContent":null,"Title":"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better","State":"closed","Body":"This is porting the last 3 commits that went into https://github.com/dotnet/runtime/pull/33459.\r\n\r\ncc: @Jozkee @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42894","RelatedDescription":"Closed or merged PR \"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better\" (#42894)"},{"Id":"587989374","IsPullRequest":true,"CreatedAt":"2020-03-27T03:12:16","Actor":"Anipik","Number":"42890","RawContent":null,"Title":"rev up assembly and package versions and add package to package builds","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42890","RelatedDescription":"Closed or merged PR \"rev up assembly and package versions and add package to package builds\" (#42890)"},{"Id":"588766967","IsPullRequest":true,"CreatedAt":"2020-03-26T23:06:51","Actor":"Anipik","Number":"42897","RawContent":null,"Title":"building platforms package","State":"closed","Body":"Related PR https://github.com/dotnet/corefx/pull/42872","Url":"https://github.com/dotnet/corefx/pull/42897","RelatedDescription":"Closed or merged PR \"building platforms package\" (#42897)"},{"Id":"588726249","IsPullRequest":true,"CreatedAt":"2020-03-26T22:51:13","Actor":"dotnet-maestro[bot]","Number":"42896","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200326.1\r\n- **Date Produced**: 3/26/2020 5:57 PM\r\n- **Commit**: 83c2d68edf0cc18cf06b12fb2d7eb41031676a3f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20176.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20176.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20176.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42896","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42896)"},{"Id":"588631300","IsPullRequest":true,"CreatedAt":"2020-03-26T22:47:01","Actor":"safern","Number":"42895","RawContent":null,"Title":"Bump branding to preview4 in 3.1-blazor branch","State":"closed","Body":"I looked at aspnetcore branding and they already moved to preview4.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/blazor-wasm/eng/Versions.props#L12","Url":"https://github.com/dotnet/corefx/pull/42895","RelatedDescription":"Closed or merged PR \"Bump branding to preview4 in 3.1-blazor branch\" (#42895)"},{"Id":"588053330","IsPullRequest":true,"CreatedAt":"2020-03-26T17:22:38","Actor":"dotnet-maestro[bot]","Number":"42893","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200325.3\r\n- **Date Produced**: 3/26/2020 12:32 AM\r\n- **Commit**: f5d8d52a3033bccda3ed798ba25fcfd988f78019\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20175.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20175.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20175.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42893","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42893)"},{"Id":"588040516","IsPullRequest":true,"CreatedAt":"2020-03-26T02:17:35","Actor":"safern","Number":"42892","RawContent":null,"Title":"Publish only on all configurations and only publish Json package","State":"closed","Body":"This prevents us from publishing any transport packages in release/3.1-blazor package, and will only publish the json package added in: https://github.com/dotnet/corefx/pull/42889\r\n\r\nOnce that PR is merged, I'll test this on an official build and if green add the default channel and then merge.\r\n\r\ncc: @joperezr @ericstj","Url":"https://github.com/dotnet/corefx/pull/42892","RelatedDescription":"Closed or merged PR \"Publish only on all configurations and only publish Json package\" (#42892)"},{"Id":"587871901","IsPullRequest":true,"CreatedAt":"2020-03-26T01:14:17","Actor":"joperezr","Number":"42889","RawContent":null,"Title":"Add new System.Net.Http.Json project/namespace","State":"closed","Body":"Porting #42879 to new blazor branch. The 3.1 PR was already approved for servicing. It includes all commits from PR https://github.com/dotnet/runtime/pull/33459 up to https://github.com/dotnet/runtime/pull/33459/commits/4970a538111515c734bec677d2bc4cf8e8c88a75\r\n\r\ncc: @ericstj @Jozkee @jeffhandley @stephentoub @terrajobst @mkArtakMSFT @safern @GrabYourPitchforks ","Url":"https://github.com/dotnet/corefx/pull/42889","RelatedDescription":"Closed or merged PR \"Add new System.Net.Http.Json project/namespace\" (#42889)"},{"Id":"587999955","IsPullRequest":true,"CreatedAt":"2020-03-25T22:24:07","Actor":"dotnet-maestro[bot]","Number":"42891","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200325.1\r\n- **Date Produced**: 3/25/2020 7:29 PM\r\n- **Commit**: 9d9b5795356a138fb834dc4b7ff7141002904244\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20175.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20175.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20175.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42891","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42891)"},{"Id":"587368089","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:47","Actor":"Anipik","Number":"42887","RawContent":null,"Title":"branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42887","RelatedDescription":"Closed or merged PR \"branding for 2.1.18\" (#42887)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"611593314","IsPullRequest":true,"CreatedAt":"2020-05-04T04:18:25","Actor":"agocke","Number":"43939","RawContent":null,"Title":"Fix lowering for records","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43939","RelatedDescription":"Open PR \"Fix lowering for records\" (#43939)"},{"Id":"611566676","IsPullRequest":true,"CreatedAt":"2020-05-04T02:21:11","Actor":"sharwell","Number":"43938","RawContent":null,"Title":"Fix MEF usage in several tests","State":"open","Body":"See #42814","Url":"https://github.com/dotnet/roslyn/pull/43938","RelatedDescription":"Open PR \"Fix MEF usage in several tests\" (#43938)"},{"Id":"611558847","IsPullRequest":false,"CreatedAt":"2020-05-04T01:40:01","Actor":"NMSAzulX","Number":"43937","RawContent":null,"Title":"'COM Interop is not supported on this platform.' when writing debug info on Mac","State":"open","Body":"https://github.com/dotnet/roslyn/issues/43534\r\n\r\n```C#\r\npublic static EmitResult Emit(this Compilation compilation, string outputPath, string? pdbPath = null, string? xmlDocPath = null, string? win32ResourcesPath = null, IEnumerable<ResourceDescription>? manifestResources = null, CancellationToken cancellationToken = default(CancellationToken))\r\n        {\r\n            if (compilation == null)\r\n            {\r\n                throw new ArgumentNullException(\"compilation\");\r\n            }\r\n            using (Stream peStream = FileUtilities.CreateFileStreamChecked(File.Create, outputPath, \"outputPath\"))\r\n            {\r\n                using (Stream pdbStream = (pdbPath == null) ? null : FileUtilities.CreateFileStreamChecked(File.Create, pdbPath, \"pdbPath\"))\r\n                {\r\n                    using (Stream xmlDocumentationStream = (xmlDocPath == null) ? null : FileUtilities.CreateFileStreamChecked(File.Create, xmlDocPath, \"xmlDocPath\"))\r\n                    {\r\n                        using (Stream win32Resources = (win32ResourcesPath == null) ? null : FileUtilities.CreateFileStreamChecked(File.OpenRead, win32ResourcesPath, \"win32ResourcesPath\"))\r\n                        {\r\n                            return compilation.Emit(peStream, pdbStream, xmlDocumentationStream, win32Resources, manifestResources, new EmitOptions(metadataOnly: false, (DebugInformationFormat)0, pdbPath, null, 0, 0uL), cancellationToken);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\nso I need rewrite a new extension method?\r\nWhat's different in DebugInformationFormat.Pdb 、DebugInformationFormat.PortablePdb and DebugInformationFormat.Embedded ?\r\nDoes the OptimizationLevel.Release parameter of Compilation affect DebugInformationFormat?","Url":"https://github.com/dotnet/roslyn/issues/43937","RelatedDescription":"Open issue \"'COM Interop is not supported on this platform.' when writing debug info on Mac\" (#43937)"},{"Id":"611517944","IsPullRequest":false,"CreatedAt":"2020-05-03T21:58:12","Actor":"gurustron","Number":"43936","RawContent":null,"Title":"Code after finally in IAsyncEnumerable is not executed in some cases.","State":"open","Body":"From [this ](https://stackoverflow.com/questions/61577394/code-not-executing-in-iasyncenumerable-iterator-after-lock-in-finally) stackoverflow question.\r\n\r\nRepro:\r\n\r\nTargetFramework: netcoreapp3.1\r\n.NET Core SDK (reflecting any global.json):\r\nVersion: 3.1.201\r\nCommit: b1768b4ae7\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18362\r\n\r\n```\r\n    class Program\r\n    {\r\n        static async Task Main()\r\n        {\r\n            await foreach (var item in new MyAsyncIterator<int>(GetStream()))\r\n            {\r\n                Console.WriteLine($\"Received: {item}\");\r\n            }\r\n            Console.WriteLine($\"Done\");\r\n        }\r\n\r\n        static async IAsyncEnumerable<int> GetStream()\r\n        {\r\n            await Task.Delay(1);\r\n            try\r\n            {\r\n                yield return 1;\r\n                yield return 2;\r\n            }\r\n            finally\r\n            {\r\n                try {}\r\n                finally{}\r\n                Console.WriteLine(\"This will not be printed if '_taken++' is not commented\");\r\n            }\r\n            Console.WriteLine(\"This will not be printed if '_taken++' is not commented\");\r\n        }\r\n    }\r\n\r\n    public class MyAsyncIterator<T> : IAsyncEnumerable<T>, IAsyncEnumerator<T>\r\n    {\r\n        private readonly IAsyncEnumerable<T> _source;\r\n        private IAsyncEnumerator<T>? _enumerator;\r\n         T _current = default!;\r\n        public T Current => _current;\r\n\r\n        public MyAsyncIterator(IAsyncEnumerable<T> source)\r\n        {\r\n            _source = source;\r\n        }\r\n\r\n        public IAsyncEnumerator<T> GetAsyncEnumerator(CancellationToken cancellationToken = new CancellationToken()) => this;\r\n\r\n        public async ValueTask DisposeAsync()\r\n        {\r\n            if (_enumerator != null)\r\n            {\r\n                await _enumerator.DisposeAsync().ConfigureAwait(false);\r\n                _enumerator = null;\r\n            }\r\n        }\r\n\r\n        private int _taken;\r\n        public async ValueTask<bool> MoveNextAsync()\r\n        {\r\n            _enumerator ??= _source.GetAsyncEnumerator();\r\n\r\n            if (_taken < 1 && await _enumerator!.MoveNextAsync().ConfigureAwait(false))\r\n            {\r\n                 _taken++; // COMMENTING IT OUT MAKES IT WORK\r\n                _current = _enumerator.Current;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n```\r\n\r\nIL like this is generated after the finally blocks:\r\n```\r\n          IL_0120: ldarg.0      // this\r\n          IL_0121: ldfld        bool TestAsyncEnum.Program/'<GetStream>d__1'::'<>w__disposeMode'\r\n          IL_0126: brfalse.s    IL_012a\r\n          IL_0128: br.s         IL_0136\r\n\r\n          // [31 17 - 31 63]\r\n          IL_012a: ldstr        \"This will not be printed\"\r\n          IL_012f: call         void [System.Console]System.Console::WriteLine(string)\r\n          IL_0134: nop\r\n\r\n          // [32 13 - 32 14]\r\n          IL_0135: nop\r\n\r\n          IL_0136: endfinally\r\n        } // end of finally\r\n``` \r\nSo if the enumerator has not enumerated fully `w__disposeMode` is set to true and code after finally is not executed.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/43936","RelatedDescription":"Open issue \"Code after finally in IAsyncEnumerable is not executed in some cases.\" (#43936)"},{"Id":"611352749","IsPullRequest":false,"CreatedAt":"2020-05-03T18:49:22","Actor":"markvrc","Number":"43931","RawContent":null,"Title":"Omitting collection type in object initializer results in NullReferenceException","State":"closed","Body":"**Version Used**: C# 8.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. \r\n```\r\npublic class MyClass\r\n{\r\n    public Dictionary<int, int> dictionary {get; set;}\r\n}\r\n```\r\n2.\r\n```\r\nvar a = new MyClass()\r\n{     \r\n    dictionary = new Dictionary<int, int>\r\n    { \r\n        {5, 6},\r\n        {7, 8}\r\n    }\r\n}; \r\n```\r\n3. Omit `new Dictionary<int, int>`\r\n\r\n**Expected Behavior**:\r\nThe compiler infers the type and everything works the same with less code\r\n**Actual Behavior**:\r\nNullreference exception is thrown in the constructor.\r\n\r\nThis is what C# gets generated (based on IL) when you omit \"new Dictionary<int, int>\" part:\r\n\r\n```\r\nMyClass myClass = new MyClass();\r\nmyClass.dictionary.Add(5, 6);\r\nmyClass.dictionary.Add(7, 8);\r\n```\r\n\r\nSame thing with List<T> and probably other collections too.","Url":"https://github.com/dotnet/roslyn/issues/43931","RelatedDescription":"Closed issue \"Omitting collection type in object initializer results in NullReferenceException\" (#43931)"},{"Id":"611456406","IsPullRequest":true,"CreatedAt":"2020-05-03T16:52:10","Actor":"RikkiGibson","Number":"43935","RawContent":null,"Title":"Merge features/partial-methods to master","State":"closed","Body":"\r\nThis is an automatically generated pull request from features/partial-methods into master.\r\n(created from a manual run of the PR generation tool)\\n\r\n``` bash\r\ngit fetch --all\r\ngit checkout merges/features/partial-methods-to-master\r\ngit reset --hard upstream/master\r\ngit merge upstream/features/partial-methods\r\n# Fix merge conflicts\r\ngit commit\r\ngit push upstream merges/features/partial-methods-to-master --force\r\n```\r\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43935","RelatedDescription":"Closed or merged PR \"Merge features/partial-methods to master\" (#43935)"},{"Id":"611430467","IsPullRequest":false,"CreatedAt":"2020-05-03T14:50:23","Actor":"xfoxfu","Number":"43934","RawContent":null,"Title":"Roslyn incorrectly suggests \"Remove unnecessary parentheses\" on tuples","State":"open","Body":"**Version Used**: master (10 Mar 2020)\r\n\r\n**Steps to Reproduce**:\r\n\r\nConsider the following code:\r\n\r\n```c#\r\nusing System;\r\npublic class C {\r\n    public void M()\r\n    {\r\n        var T = 1;\r\n        var U = 8;\r\n        var N = 9;\r\n        var x = ((N < T), (U > (5 + 0)));\r\n    }\r\n    \r\n    public void M2()\r\n    {\r\n        var T = 1;\r\n        var U = 8;\r\n        var N = 9;\r\n        var x = (N < T, U > (5 + 0));\r\n    }\r\n}\r\n```\r\n\r\nThe first `M()` is legal, while the second is not. When writing code like `M()`, the compiler will suggest two parentheses removals, for `(N < T)` and `(U > (5 + 0))`. However, after such removal, the code would be parsed as a generic function instantiation, while `T` and `U` are not types, so it emits a compile error. If either pair of parentheses exists, then the code will compile successfully.\r\n\r\nFor anybody's convenience, here is a playground link: <https://sharplab.io/#v2:EYLgtghgzgLgpgJwD4AEDMACFAmDBhDAbwFgAoDCrTFAFgwFkAKASjMqLfcoDcIEMAKhgC8GAIwBuTlwy9+AVREYAHFPIzZfDADklATjUbN/AB5LGjXQB5BzADQZGigHyOArBgDUGAAzN/hpQAvtIYoehYdPTYLKEk6jJygkqSoexJiqKqaTxauqIGORRJZqKWGDYCDi7uXr4BoSGkQUA===>\r\n\r\n**Expected Behavior**:\r\n\r\nThe compiler should not suggest such parentheses removal because it would break the code.\r\n\r\nThe parentheses of `((N < T), U > (5 + 0))` and `(N < T, (U > (5 + 0)))` cannot be removed.\r\n\r\n**Actual Behavior**:\r\n\r\nThe compiler suggests two parentheses removal, and when executed, the code breaks.\r\n\r\n```\r\n    error CS0118: 'T' is a variable but is used like a type\r\n    error CS0118: 'U' is a variable but is used like a type\r\n    error CS0307: The variable 'N' cannot be used with type arguments\r\n```","Url":"https://github.com/dotnet/roslyn/issues/43934","RelatedDescription":"Open issue \"Roslyn incorrectly suggests \"Remove unnecessary parentheses\" on tuples\" (#43934)"},{"Id":"611385778","IsPullRequest":false,"CreatedAt":"2020-05-03T11:02:52","Actor":"dedale","Number":"43933","RawContent":null,"Title":"VisualBasicCompilation: Missing reference to netstandard for [Object]","State":"open","Body":"**Version Used**: \r\n.NET Standard 2.0\r\n.NET Core App 3.1\r\nMicrosoft.CodeAnalysis.VisualBasic 3.5.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nCode is available at https://github.com/dedale/dotnet_roslyn_issue\r\nTrying to update a .NET Framework 4.5.2 application to .NET Standard 2.0 + .NET Core App 3.1.\r\nUsing VisualBasicCompilation to compile user scripts at runtime.\r\n\r\n**Expected Behavior**:\r\n\r\nCompilation succeeds.\r\n\r\n**Actual Behavior**:\r\n\r\nCompilation fails:\r\n\r\n> error BC30652: Reference required to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' containing the type '[Object]'. Add one to your project.\r\n\r\nI have added a reference to object assembly (which is System.Private.Core.Lib).\r\nError message is misleading since netstandard does not contain Object type.\r\nWorks fine with .NET 4.5.2 + MCA.VB 1.3.2 ✔️\r\nFails with .NET Standard 2.0 + System.CodeDom 4.6.0 + MCA.VB 1.3.2 ❌\r\nAlso fails with MCA.VB 3.5.0 ❌","Url":"https://github.com/dotnet/roslyn/issues/43933","RelatedDescription":"Open issue \"VisualBasicCompilation: Missing reference to netstandard for [Object]\" (#43933)"},{"Id":"611379495","IsPullRequest":true,"CreatedAt":"2020-05-03T10:25:01","Actor":"agocke","Number":"43932","RawContent":null,"Title":"Add support for nominal records","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43932","RelatedDescription":"Open PR \"Add support for nominal records\" (#43932)"},{"Id":"611320624","IsPullRequest":true,"CreatedAt":"2020-05-03T07:29:13","Actor":"dotnet-bot","Number":"43929","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43929","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#43929)"},{"Id":"611303488","IsPullRequest":true,"CreatedAt":"2020-05-03T05:15:14","Actor":"tmat","Number":"43928","RawContent":null,"Title":"More RemoteHostClient refactoring","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43928","RelatedDescription":"Closed or merged PR \"More RemoteHostClient refactoring\" (#43928)"},{"Id":"611299374","IsPullRequest":true,"CreatedAt":"2020-05-03T01:35:54","Actor":"dotnet-bot","Number":"43924","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43924","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#43924)"},{"Id":"611299456","IsPullRequest":true,"CreatedAt":"2020-05-03T01:35:46","Actor":"dotnet-bot","Number":"43925","RawContent":null,"Title":"Merge master to features/source-generators","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/source-generators.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/source-generators\ngit reset --hard upstream/features/source-generators\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/source-generators --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43925","RelatedDescription":"Closed or merged PR \"Merge master to features/source-generators\" (#43925)"},{"Id":"611299348","IsPullRequest":true,"CreatedAt":"2020-05-03T01:25:44","Actor":"dotnet-bot","Number":"43923","RawContent":null,"Title":"Merge release/dev16.7-preview1 to release/dev16.7-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.7-preview1 into release/dev16.7-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.7-preview1-to-release/dev16.7-preview1-vs-deps\ngit reset --hard upstream/release/dev16.7-preview1-vs-deps\ngit merge upstream/release/dev16.7-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.7-preview1-to-release/dev16.7-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43923","RelatedDescription":"Closed or merged PR \"Merge release/dev16.7-preview1 to release/dev16.7-preview1-vs-deps\" (#43923)"},{"Id":"611299505","IsPullRequest":true,"CreatedAt":"2020-05-03T00:03:50","Actor":"dotnet-bot","Number":"43927","RawContent":null,"Title":"Merge master to features/function-pointers","State":"open","Body":"\nThis is an automatically generated pull request from master into features/function-pointers.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/function-pointers\ngit reset --hard upstream/features/function-pointers\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/function-pointers --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43927","RelatedDescription":"Open PR \"Merge master to features/function-pointers\" (#43927)"},{"Id":"611299487","IsPullRequest":true,"CreatedAt":"2020-05-03T00:03:40","Actor":"dotnet-bot","Number":"43926","RawContent":null,"Title":"Merge master to features/UsedAssemblyReferences","State":"open","Body":"\nThis is an automatically generated pull request from master into features/UsedAssemblyReferences.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/UsedAssemblyReferences\ngit reset --hard upstream/features/UsedAssemblyReferences\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/UsedAssemblyReferences --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43926","RelatedDescription":"Open PR \"Merge master to features/UsedAssemblyReferences\" (#43926)"},{"Id":"611299183","IsPullRequest":true,"CreatedAt":"2020-05-03T00:01:41","Actor":"dotnet-bot","Number":"43922","RawContent":null,"Title":"Merge release/dev16.7-preview1 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.7-preview1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.7-preview1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.7-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.7-preview1-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43922","RelatedDescription":"Open PR \"Merge release/dev16.7-preview1 to master\" (#43922)"},{"Id":"611297961","IsPullRequest":false,"CreatedAt":"2020-05-02T23:51:44","Actor":"KirillOsenkov","Number":"43921","RawContent":null,"Title":"IDE is using wrong default checksum (Sha1) and compiler switched to Sha256","State":"open","Body":"SourceText.From factory methods are still defaulting to checksum Sha1:\r\nhttp://sourceroslyn.io/#Microsoft.CodeAnalysis/Text/SourceText.cs,d444ba9c80426d47\r\n\r\nMeanwhile the compiler has switched to Sha256:\r\nhttps://github.com/dotnet/roslyn/pull/24820\r\n\r\nAlso there's a disconnect that the compiler does not respect the user-specified checksum and hardcodes Sha256:\r\nhttps://github.com/dotnet/roslyn/issues/24735\r\n\r\nThis can result in confusion as the checksum algorithm specified by the workspace host doesn't matter.\r\n\r\n@tmat @gafter ","Url":"https://github.com/dotnet/roslyn/issues/43921","RelatedDescription":"Open issue \"IDE is using wrong default checksum (Sha1) and compiler switched to Sha256\" (#43921)"},{"Id":"611291663","IsPullRequest":false,"CreatedAt":"2020-05-02T23:00:50","Actor":"TETYYS","Number":"43920","RawContent":null,"Title":"Misleading error message","State":"open","Body":"**Version Used**: \r\n.NET Core 3.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\nusing System;\r\n\r\npublic class Program\r\n{\r\n\tstatic void A(string a, params string[] b) { }\r\n\r\n\tpublic static void Main()\r\n\t{\r\n\t\tvar a = new[] { \"\" };\r\n\t\tA(a, \"\");\r\n\t}\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nnot sure honestly\r\n\r\n**Actual Behavior**:\r\n```\r\nCompilation error (line 11, col 5): Argument 1: cannot convert from 'string[]' to 'string'\r\nCompilation error (line 11, col 8): Argument 2: cannot convert from 'string' to 'string' <<< ???\r\n```","Url":"https://github.com/dotnet/roslyn/issues/43920","RelatedDescription":"Open issue \"Misleading error message\" (#43920)"},{"Id":"611290666","IsPullRequest":true,"CreatedAt":"2020-05-02T22:53:01","Actor":"CyrusNajmabadi","Number":"43919","RawContent":null,"Title":"Update Contributing-Code.md","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43919","RelatedDescription":"Open PR \"Update Contributing-Code.md\" (#43919)"},{"Id":"611242899","IsPullRequest":true,"CreatedAt":"2020-05-02T22:31:02","Actor":"dotnet-bot","Number":"43911","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43911","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#43911)"},{"Id":"611285407","IsPullRequest":false,"CreatedAt":"2020-05-02T22:15:03","Actor":"weitzhandler","Number":"43918","RawContent":null,"Title":"C# Interactive REPL - NuGet support","State":"open","Body":"**Version Used**: \r\n\r\n3.5.0-beta4-20153-05\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Please open REPL\r\n2. Add package `Microsoft.Data.SqlClient` to project\r\n3. `> #r \"nuget: Microsoft.Data.SqlClient\"`\r\n\r\n**Expected Behavior**:\r\n\r\nPackage should be added\r\n\r\n**Actual Behavior**:\r\n\r\nGetting error:\r\n>(1,1): error CS0006: Metadata file 'nuget: Microsoft.Data.SqlClient' could not be found\r\n","Url":"https://github.com/dotnet/roslyn/issues/43918","RelatedDescription":"Open issue \"C# Interactive REPL - NuGet support\" (#43918)"},{"Id":"611282225","IsPullRequest":false,"CreatedAt":"2020-05-02T21:56:27","Actor":"jnm2","Number":"43917","RawContent":null,"Title":"Refactoring to convert to static member and vice versa","State":"open","Body":"There is no 'make static' refactoring for methods, so I have to fix up the call sites by hand if I ever want to do that.\r\n\r\nIt also seems like there could be a code fix for \"CS0176 Member cannot be accessed with an instance reference; qualify it with a type name instead.\"\r\n\r\n@mavasani Cyrus said roslyn-analyzers has this and that I should ask you to port it.","Url":"https://github.com/dotnet/roslyn/issues/43917","RelatedDescription":"Open issue \"Refactoring to convert to static member and vice versa\" (#43917)"},{"Id":"611276141","IsPullRequest":false,"CreatedAt":"2020-05-02T21:19:30","Actor":"u7pro","Number":"43916","RawContent":null,"Title":"Source generators: Net Framework compatibility","State":"open","Body":"We tried the new source generators feature present in Visual Studio 16.6 preview 5 and it works like a charm for our POCs.\r\n\r\nWe are planning to remove all heavy components using reflection like AutoMapper for all our projects.\r\n\r\nWe have a mix of net standard and net framework 4.7.1 projects, so we have to support both of them and today the source generators works without any problems, especially for net framework projects...\r\n\r\nBut when we looked at the planning of @chsienki, we find a card stating to limit the functionnality to only netstandard / netcoreapp projects\r\nhttps://github.com/dotnet/roslyn/projects/54#card-34860099\r\n\r\nWhy this limitation ? and could you consider to let a minimal support for net framework for such a great feature ?","Url":"https://github.com/dotnet/roslyn/issues/43916","RelatedDescription":"Open issue \"Source generators: Net Framework compatibility\" (#43916)"},{"Id":"611273304","IsPullRequest":true,"CreatedAt":"2020-05-02T21:02:13","Actor":"dotnet-bot","Number":"43915","RawContent":null,"Title":"Merge release/dev16.7-preview1-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.7-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.7-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.7-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.7-preview1-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/43915","RelatedDescription":"Open PR \"Merge release/dev16.7-preview1-vs-deps to master-vs-deps\" (#43915)"},{"Id":"611269663","IsPullRequest":true,"CreatedAt":"2020-05-02T20:40:07","Actor":"CyrusNajmabadi","Number":"43914","RawContent":null,"Title":"Move more of FindRefs OOP","State":"open","Body":"The previous model was that FindRefs would call into OOP and OOP would report *symbols* it found.  This worked, but required the host to then do the work to rehydrate those symbols/compilations on the VS side.  This is extraneous work we don't need for FAR.  \r\n\r\nNow, we ask OOP to do the work, and OOP just reports back the *results* that can be directly shown in the UI.  This means no extra work necessary on hte host side.  We can just immediately display the work and not cause any symbols/compilations to be created.\r\n\r\nAlso did teh above for FindImpls.\r\n\r\nThis should be reviewed one commit at a time.","Url":"https://github.com/dotnet/roslyn/pull/43914","RelatedDescription":"Open PR \"Move more of FindRefs OOP\" (#43914)"},{"Id":"611248825","IsPullRequest":true,"CreatedAt":"2020-05-02T18:35:04","Actor":"vanashimko","Number":"43913","RawContent":null,"Title":"Code fix for CS0109 (The new keyword is not required)","State":"open","Body":"Closes #43661.\r\n\r\nWhat bothers me in this implementation is hacking through trivia manually. Not sure if it should be done this way, but did not find anything built-in for `SyntaxToken` removing with trivia handling (only for `SyntaxNode`). Would be great if somebody shows me the right way (if it is not).","Url":"https://github.com/dotnet/roslyn/pull/43913","RelatedDescription":"Open PR \"Code fix for CS0109 (The new keyword is not required)\" (#43913)"},{"Id":"611248515","IsPullRequest":true,"CreatedAt":"2020-05-02T18:33:25","Actor":"loic-sharma","Number":"43912","RawContent":null,"Title":"Fix link in readme","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43912","RelatedDescription":"Open PR \"Fix link in readme\" (#43912)"},{"Id":"611240537","IsPullRequest":true,"CreatedAt":"2020-05-02T17:49:27","Actor":"loic-sharma","Number":"43910","RawContent":null,"Title":"Fix source generators cookbook example","State":"open","Body":"The snippet's curly braces should be escaped due to the `$`. The `$` isn't actually necessary, so I removed it.","Url":"https://github.com/dotnet/roslyn/pull/43910","RelatedDescription":"Open PR \"Fix source generators cookbook example\" (#43910)"},{"Id":"611238436","IsPullRequest":true,"CreatedAt":"2020-05-02T17:38:23","Actor":"jnm2","Number":"43909","RawContent":null,"Title":"Update module initializers feature status","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43909","RelatedDescription":"Open PR \"Update module initializers feature status\" (#43909)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"611235064","IsPullRequest":true,"CreatedAt":"2020-05-02T17:19:25","Actor":"kant2002","Number":"8128","RawContent":null,"Title":"Add simple marshaller which marshal only null COM interfaces","State":"open","Body":"This idea was proposed by @MichalStrehovsky in #7994\r\n\r\nImplemented only marshalling of `in` parameters, since this is case which I found in the stack trace of the issue. I think other directions can be implemented in same way, I just lack of examples for testing.\r\n\r\nTested code\r\n```\r\n// [DllImport(Libraries.UiaCore, CharSet = CharSet.Unicode)]\r\n// public static extern IntPtr UiaReturnRawElementProvider(IntPtr hwnd, IntPtr wParam, IntPtr lParam, IRawElementProviderSimple el);\r\nIntPtr result = UiaCore.UiaReturnRawElementProvider(IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, null);\r\n```\r\n\r\nCloses #7994","Url":"https://github.com/dotnet/corert/pull/8128","RelatedDescription":"Open PR \"Add simple marshaller which marshal only null COM interfaces\" (#8128)"},{"Id":"611101775","IsPullRequest":true,"CreatedAt":"2020-05-02T15:30:00","Actor":"yowl","Number":"8125","RawContent":null,"Title":"Wasm: add support for exception filters","State":"closed","Body":"This PR adds support for exception filters.  There's one nasty bit in here where it handles crudely the extra space used in the landing pad and first pass on the shadow stack, otherwise follows the pattern already there.  Not done passing in the generic context if required to the filter, I can't see how that's handled, I could just add a parameter to `RhpCallFilterFunclet` but non-Wasm must be doing it another way?\r\n\r\nAdded a test from the Simple/Exceptions project.","Url":"https://github.com/dotnet/corert/pull/8125","RelatedDescription":"Closed or merged PR \"Wasm: add support for exception filters\" (#8125)"},{"Id":"611211756","IsPullRequest":false,"CreatedAt":"2020-05-02T15:19:03","Actor":"yowl","Number":"8127","RawContent":null,"Title":"Wasm: align generic context handling in exception catch and filter blocks","State":"open","Body":"Currently Wasm catch funclets get the generic context passed and filter funclets do not get it at all.  To be consistent with the other backends, Wasm should store the generic context in a local in the main funclet, as per comment at https://github.com/dotnet/corert/pull/8125#issuecomment-622962485","Url":"https://github.com/dotnet/corert/issues/8127","RelatedDescription":"Open issue \"Wasm: align generic context handling in exception catch and filter blocks\" (#8127)"},{"Id":"611187853","IsPullRequest":true,"CreatedAt":"2020-05-02T13:18:46","Actor":"kant2002","Number":"8126","RawContent":null,"Title":"Expose `--ildump` via MSBuild property","State":"open","Body":"This can help with debugging marshalling for example.","Url":"https://github.com/dotnet/corert/pull/8126","RelatedDescription":"Open PR \"Expose `--ildump` via MSBuild property\" (#8126)"},{"Id":"610866484","IsPullRequest":true,"CreatedAt":"2020-05-02T05:30:45","Actor":"MichalStrehovsky","Number":"8122","RawContent":null,"Title":"Update compiler from dotnet/runtime","State":"closed","Body":"Contains breaking change: NativeCallableAttribute was renamed to UnmanagedCallersOnlyAttribute as part of making it a public attribute.","Url":"https://github.com/dotnet/corert/pull/8122","RelatedDescription":"Closed or merged PR \"Update compiler from dotnet/runtime\" (#8122)"},{"Id":"610956776","IsPullRequest":false,"CreatedAt":"2020-05-01T20:37:12","Actor":"jkotas","Number":"8124","RawContent":null,"Title":"XmlSerialization: Deserialization of empty List<string>","State":"open","Body":"Repro:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Xml.Serialization;\r\n\r\n[XmlRoot(ElementName = \"CounterSet\")]\r\npublic class CounterSet\r\n{\r\n    [XmlAttribute(AttributeName = \"name\")]\r\n    public string EventName { get; set; }\r\n\r\n    [XmlElement(ElementName = \"Counter\")]\r\n    public List<string> Counters { get; set; }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        XmlSerializer serializer = new XmlSerializer(typeof(CounterSet));\r\n\r\n        CounterSet cs = (CounterSet)serializer.Deserialize(new StringReader(\"<CounterSet name=\\\"MyCounters\\\"></CounterSet>\"));\r\n\r\n        if (cs.Counters != null)\r\n        {\r\n            Console.WriteLine($\"PASSED: Counters.Count={cs.Counters.Count}\");\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(\"FAILED: NULL\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nActual: `FAILED: NULL`\r\nExpected: PASSED: Counters.Count=0","Url":"https://github.com/dotnet/corert/issues/8124","RelatedDescription":"Open issue \"XmlSerialization: Deserialization of empty List<string>\" (#8124)"},{"Id":"607891597","IsPullRequest":true,"CreatedAt":"2020-05-01T18:47:21","Actor":"yowl","Number":"8115","RawContent":null,"Title":"Wasm: Enable release build","State":"closed","Body":"This PR removes the restriction on the release build of Wasm from the platform matrix.  \r\n\r\nWIP while check it works and depends on #8114 ","Url":"https://github.com/dotnet/corert/pull/8115","RelatedDescription":"Closed or merged PR \"Wasm: Enable release build\" (#8115)"},{"Id":"610890105","IsPullRequest":true,"CreatedAt":"2020-05-01T18:12:47","Actor":"kant2002","Number":"8123","RawContent":null,"Title":"Cast to proper type in nested generics","State":"open","Body":"Make sure that when working with fields inside nested gnerics when invoke block in the shared instantiation, convert to type of field declared in shared instantiation.\r\n\r\nI guard code which detect actual type of the field, since I do not sure that such conversion is appropriate everywhere.\r\n\r\nCloses: #8118","Url":"https://github.com/dotnet/corert/pull/8123","RelatedDescription":"Open PR \"Cast to proper type in nested generics\" (#8123)"},{"Id":"610630610","IsPullRequest":true,"CreatedAt":"2020-05-01T13:00:59","Actor":"kant2002","Number":"8120","RawContent":null,"Title":"Do not generate dispatchMapModule and eagerCctorTable tables","State":"closed","Body":"Do not generate dispatchMapModule and eagerCctorTable tables if no data in them.\r\nThis prevent `dotnet publish /p:NativeCodeGen=cpp` when operating in NoRuntime mode\r\n\r\nCloses #8119","Url":"https://github.com/dotnet/corert/pull/8120","RelatedDescription":"Closed or merged PR \"Do not generate dispatchMapModule and eagerCctorTable tables\" (#8120)"},{"Id":"610629491","IsPullRequest":false,"CreatedAt":"2020-05-01T13:00:58","Actor":"kant2002","Number":"8119","RawContent":null,"Title":"[CppCodeGen]  error C2466: cannot allocate an array of constant size 0","State":"closed","Body":"When run on ZeroSharp NoRuntime `dotnet publish /p:NativeCodeGen=cpp -r win-x64 -c Release` then compiler complain about following code\r\n```\r\nvoid * dispatchMapModule[0] = {\r\n\r\n\t};void * eagerCctorTable[0] = {\r\n};\r\n```\r\n\r\nCompiler error:\r\n```\r\nerror C2466: cannot allocate an array of constant size 0\r\n```","Url":"https://github.com/dotnet/corert/issues/8119","RelatedDescription":"Closed issue \"[CppCodeGen]  error C2466: cannot allocate an array of constant size 0\" (#8119)"},{"Id":"605889649","IsPullRequest":false,"CreatedAt":"2020-05-01T10:31:13","Actor":"andreakarasho","Number":"8111","RawContent":null,"Title":"WebClient exception","State":"closed","Body":"```csharp\r\nWebClient client = new WebClient();\r\nclient.Proxy = null;\r\nclient.Headers.Add(\"user-agent\", \"Other\");\r\n\r\nstring xml = client.DownloadString(MY_URL); // crash\r\n```\r\n\r\n```Unhandled Exception: System.NullReferenceException: Arg_NullReferenceException\r\nStackTrace_AtWordSystem.Diagnostics.Tracing.EventSource.WriteEvent(Int32, Int32) + 0x1b\r\nStackTrace_AtWordSystem.Threading.PortableThreadPoolEventSource.WorkerThreadStart(Int16) + 0x26\r\n```\r\n\r\nUbuntu and osx  x64\r\nnetcore 3.1\r\nlatest corert","Url":"https://github.com/dotnet/corert/issues/8111","RelatedDescription":"Closed issue \"WebClient exception\" (#8111)"},{"Id":"610664617","IsPullRequest":false,"CreatedAt":"2020-05-01T09:32:33","Actor":"kant2002","Number":"8121","RawContent":null,"Title":"[CppCodeGen] Linker errors in NoRuntime mode","State":"open","Body":"After fixing #8119 in ZeroSharp NoRuntime I start getting linker errors\r\non unresolved symbols `bootstrappercpp.lib` and `PortableRuntime.lib`. I will skip them for clarity.\r\n\r\nI remove them, and add `libucrtd.lib` using\r\n```\r\n<ItemGroup>\r\n    <NativeLibrary Include=\"libucrtd.lib\" />\r\n</ItemGroup>\r\n```\r\n\r\nNow I have only 5 linker errors on unresolved symbols for\r\n- `__load_string_literal`\r\n- `__reverse_pinvoke`\r\n- `__reverse_pinvoke_return`\r\n- `__pinvoke`\r\n- `__pinvoke_return`\r\n\r\nPinvoke-xxx stuff can be be taken from `src\\Native\\Bootstrap\\main.cpp`, but `__load_string_literal` require `RhNewArray` and as such it would be quite involved for simple `dotnet publish` experience.\r\n\r\nSo I decide check how `bootstrappercpp.lib` would work. I have following list of errors\r\n```\r\n  noruntime.cpp\r\nbootstrappercpp.lib(main.obj) : error LNK2005: __fail_fast already defined in noruntime.obj [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2001: unresolved external symbol GetRuntimeException [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2001: unresolved external symbol FailFast [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\n    Hint on symbols that are defined and could potentially match:\r\n      \"public: static void __cdecl noruntime::Internal::Runtime::CompilerHelpers::StartupCodeHelpers::FailFast(void)\" (?FailFast@StartupCodeHelpers@CompilerHelpers@Runtime@Internal@noruntime@@SAXXZ)\r\nbootstrappercpp.lib(main.obj) : error LNK2001: unresolved external symbol AppendExceptionStackFrame [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2001: unresolved external symbol GetSystemArrayEEType [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2001: unresolved external symbol OnFirstChanceException [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhNewObject referenced in function __allocate_object [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhNewArray referenced in function __allocate_array [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhTypeCast_IsInstanceOf referenced in function __isinst [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhTypeCast_CheckCast referenced in function __castclass [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhpStelemRef referenced in function __stelem_ref [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhpLdelemaRef referenced in function __ldelema_ref [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhDebugBreak referenced in function __debug_break [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhpPInvoke2 referenced in function \"void __cdecl __pinvoke(struct PInvokeTransitionFrame *)\" (?__pinvoke@@YAXPEAUPInvokeTransitionFrame@@@Z) [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhpPInvokeReturn2 referenced in function \"void __cdecl __pinvoke_return(struct PInvokeTransitionFrame *)\" (?__pinvoke_return@@YAXPEAUPInvokeTransitionFrame@@@Z) [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol \"public: static class MethodTable * __cdecl System_Private_CoreLib::System::String::__getMethodTable(void)\" (?__getMethodTable@String@System@System_Private_CoreLib@@SAPEAVMethodTable@@XZ) referenced in function \"class Object * __cdecl __load_string_literal(char const *)\" (?__load_string_literal@@YAPEAVObject@@PEBD@Z) [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhInitialize referenced in function \"int __cdecl InitializeRuntime(void)\" (?InitializeRuntime@@YAHXZ) [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhpEnableConservativeStackReporting referenced in function \"int __cdecl InitializeRuntime(void)\" (?InitializeRuntime@@YAHXZ) [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol RhpShutdown referenced in function wmain [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbootstrappercpp.lib(main.obj) : error LNK2019: unresolved external symbol InitializeModules referenced in function \"int __cdecl InitializeRuntime(void)\" (?InitializeRuntime@@YAHXZ) [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nbin\\x64\\Debug\\netcoreapp3.1\\win-x64\\native\\noruntime.exe : fatal error LNK1120: 19 unresolved externals [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\nD:\\d\\kant\\GitHub\\dotnet\\corert\\bin\\Windows_NT.x64.Debug\\build\\Microsoft.NETCore.Native.targets(310,5): error MSB3073: The command \"link  @\"obj\\x64\\Debug\\netcoreapp3.1\\win-x64\\native\\link.rsp\"\" exited with code 1120. [D:\\d\\kant\\GitHub\\zerosharp\\no-runtime\\noruntime.csproj]\r\n```\r\n\r\nSo I'm not sure how to move forward. Given how simple NoRuntime was in C# only code, I expect that this is factoring issues in the `bootstrappercpp` or `PortableRuntime` where dependencies drag whole runtime when not needed. If you have any thought how I can move forward, I really appreciate.","Url":"https://github.com/dotnet/corert/issues/8121","RelatedDescription":"Open issue \"[CppCodeGen] Linker errors in NoRuntime mode\" (#8121)"},{"Id":"609360399","IsPullRequest":false,"CreatedAt":"2020-04-29T21:06:57","Actor":"kant2002","Number":"8118","RawContent":null,"Title":"[CppCodeGen] Cannot read file","State":"open","Body":"Given simple program\r\n```\r\nusing System;\r\nusing System.IO.File;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace HelloWorld\r\n{\r\n    class Program\r\n    {\r\n        static async Task Main(string[] args)\r\n        {\r\n            var content = await File.ReadAllTextAsync(@\"HelloWorld.csproj\");\r\n            Console.WriteLine(content);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput\r\n\r\n```\r\ndotnet publish /p:NativeCodeGen=cpp -r win-x64 -c Release\r\nMicrosoft (R) Build Engine version 16.5.0+d4cbfca49 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 51.13 ms for F:\\d\\kant\\HelloWorld\\HelloWorld.csproj.\r\n  HelloWorld -> F:\\d\\kant\\HelloWorld\\bin\\x64\\Release\\netcoreapp3.1\\win-x64\\HelloWorld.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  The method or operation is not implemented. ([S.P.CoreLib]System.Globalization.CultureNotFoundException..ctor(SerializationInfo,StreamingContext))\r\n  The method or operation is not implemented. ([S.P.CompilerGenerated]Internal.CompilerGenerated.<Module>.InvokeRetO<Nullable`1<int32>>(object,native int,ArgSetupState&,bool))\r\n  HelloWorld.cpp\r\nF:\\d\\kant\\HelloWorld\\Program.cs(321553): error C2440: '=': cannot convert from 'System_Private_CoreLib::System::Runtime::CompilerServices::IAsyncStateMachine *' to 'System::__Canon *' [F:\\d\\kant\\HelloWorld\\HelloWorld.csproj]\r\n  F:\\d\\kant\\HelloWorld\\Program.cs(321553): note: Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast\r\nF:\\d\\kant\\HelloWorld\\Program.cs(326281): error C2440: '=': cannot convert from 'System_Private_CoreLib::System::Runtime::CompilerServices::IAsyncStateMachine *' to 'System::__Canon *' [F:\\d\\kant\\HelloWorld\\HelloWorld.csproj]\r\n  F:\\d\\kant\\HelloWorld\\Program.cs(326281): note: Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast\r\nF:\\d\\kant\\HelloWorld\\Program.cs(326412): error C2440: '=': cannot convert from 'System_Private_CoreLib::System::Runtime::CompilerServices::IAsyncStateMachine *' to 'System::__Canon *' [F:\\d\\kant\\HelloWorld\\HelloWorld.csproj]\r\n  F:\\d\\kant\\HelloWorld\\Program.cs(326412): note: Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast\r\nF:\\d\\kant\\HelloWorld\\Program.cs(328317): error C2440: '=': cannot convert from 'System_Private_CoreLib::System::Runtime::CompilerServices::IAsyncStateMachine *' to 'System::__Canon *' [F:\\d\\kant\\HelloWorld\\HelloWorld.csproj]\r\n  F:\\d\\kant\\HelloWorld\\Program.cs(328317): note: Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast\r\nF:\\d\\kant\\HelloWorld\\Program.cs(509972): error C2440: '=': cannot convert from 'System_Private_CoreLib::System::Runtime::CompilerServices::IAsyncStateMachine *' to 'System::__Canon *' [F:\\d\\kant\\HelloWorld\\HelloWorld.csproj]\r\n  F:\\d\\kant\\HelloWorld\\Program.cs(509972): note: Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast\r\nD:\\kant\\cache\\nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28829-02\\build\\Microsoft.NETCore.Native.targets(251,5): error MSB3073: The command \"cl @\"obj\\x64\\Release\\netcoreapp3.1\\win-x64\\native\\cl.rsp\"\" exited with code 2. [F:\\d\\kant\\HelloWorld\\HelloWorld.csproj]\r\n```\r\n\r\nExample of generated code which trigger the error\r\n```\r\n_bb54: {\r\n\r\n::System_Private_CoreLib::System::Diagnostics::Debugger::NotifyOfCrossThreadDependency();\r\nvoid* _18 = _l2;\r\n::System_IO_FileSystem::System::IO::File__InternalReadAllLinesAsync_d__78* _19 = (::System_IO_FileSystem::System::IO::File__InternalReadAllLinesAsync_d__78*)_a0;\r\n::System_IO_FileSystem::System::IO::File__InternalReadAllLinesAsync_d__78 _20 = *(::System_IO_FileSystem::System::IO::File__InternalReadAllLinesAsync_d__78*)_19;void* _21 = __allocate_object(::System_IO_FileSystem::System::IO::File__InternalReadAllLinesAsync_d__78::__getMethodTable());\r\n*(::System_IO_FileSystem::System::IO::File__InternalReadAllLinesAsync_d__78 *)((void **)_21 + 1) = _20;\r\n((::System_Private_CoreLib::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1_AsyncStateMachineBox_1_A__System___Canon___System___Canon_V_*)_18)->StateMachine = (::System_Private_CoreLib::System::Runtime::CompilerServices::IAsyncStateMachine*)_21;\r\n}\r\n```\r\n\r\nAnd appears the error in IL transformation for following line\r\nhttps://github.com/dotnet/corert/blob/b8b7cb6abc9175e13ce3ff11d65980774db65a06/src/System.Private.CoreLib/shared/System/Runtime/CompilerServices/AsyncTaskMethodBuilderT.cs#L228\r\n\r\nFor sure this is likely error in producing correct Generic code, then code of `AsyncTaskMethodBuilder<T>` itself. Not sure where this can be in CppCodeGen","Url":"https://github.com/dotnet/corert/issues/8118","RelatedDescription":"Open issue \"[CppCodeGen] Cannot read file\" (#8118)"},{"Id":"609030992","IsPullRequest":true,"CreatedAt":"2020-04-29T15:27:10","Actor":"benaadams","Number":"8117","RawContent":null,"Title":"Check if PortableThreadPoolEventSource is enabled before logging","State":"closed","Body":"Resolves https://github.com/dotnet/corert/issues/8116","Url":"https://github.com/dotnet/corert/pull/8117","RelatedDescription":"Closed or merged PR \"Check if PortableThreadPoolEventSource is enabled before logging\" (#8117)"},{"Id":"608979415","IsPullRequest":false,"CreatedAt":"2020-04-29T15:27:10","Actor":"stangelandcl","Number":"8116","RawContent":null,"Title":"Reflection-free Task.Run crashes","State":"closed","Body":"A crash occurs when calling `Task.Run()` in Reflection-free mode. It works when reflection-free mode is disabled in the csproj via `<IlcDisableReflection>false</IlcDisableReflection>`.\r\n\r\nHere is the error output on Fedora 31 x64:\r\n```\r\nHello World!\r\nUnhandled Exception: EETypeRva:0x003132B0: Arg_NullReferenceException\r\nStackTrace_AtWordSystem.Diagnostics.Tracing.EventSource.WriteEvent(Int32, Int32) + 0x1b\r\nStackTrace_AtWordSystem.Threading.PortableThreadPoolEventSource.WorkerThreadStart(Int16) + 0x26\r\nStackTrace_AtWordSystem.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart() + 0x97\r\nStackTrace_AtWordThreadTest!<BaseAddress>+0x1c73eb\r\nStackTrace_AtWordSystem.Threading.Thread.StartThread(IntPtr) + 0x16b\r\nStackTrace_AtWordSystem.Threading.Thread.ThreadEntryPoint(IntPtr) + 0x20\r\nAborted (core dumped)\r\n\r\n```\r\n\r\nProgram.cs:\r\n```csharp\r\nusing System;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ThreadTest\r\n{\r\n    public static class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var task = Task.Run(() => Console.WriteLine(\"In a thread\"));\r\n            Console.WriteLine(\"Hello World!\");\r\n            task.Wait();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThreadTest.csproj:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n    <Platforms>x64</Platforms>\r\n    <IlcDisableReflection>true</IlcDisableReflection>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8116","RelatedDescription":"Closed issue \"Reflection-free Task.Run crashes\" (#8116)"},{"Id":"607801325","IsPullRequest":true,"CreatedAt":"2020-04-27T22:22:02","Actor":"yowl","Number":"8114","RawContent":null,"Title":"Wasm: use consistent offset for padding locals on shadow stack","State":"closed","Body":"Fixes #8012 \r\n\r\nSometimes the padding was done starting from 0, other times from the end of the locals in the frame.  This change makes the padding consistent and fixes `build wasm release`.  To be honest it seems arbitrary anyway for longs/doubles as the shadow stack passed into the frame is not 8 byte aligned.  I did a bit of investigation and it seems that it's possible that aligning 8 byte values at 8 byte boundaries can give a performance increase for Wasm depending on the rest of the tooling and the Wasm runtime.  So I've left the 8 byte padding logic in there so that at some point it will be easier to align with real addresses.\r\n\r\nCleaned up some unused variables and out parameters.  The significant change is the passing of `GetTotalRealLocalOffset()` at \r\n\r\n```\r\nGetSpillOffsetAtIndex(index, GetTotalRealLocalOffset()\r\n```","Url":"https://github.com/dotnet/corert/pull/8114","RelatedDescription":"Closed or merged PR \"Wasm: use consistent offset for padding locals on shadow stack\" (#8114)"},{"Id":"607130627","IsPullRequest":true,"CreatedAt":"2020-04-27T14:26:59","Actor":"yowl","Number":"8113","RawContent":null,"Title":"Wasm: Make offset used in unbox stub match RhUnbox/RhBox","State":"closed","Body":"This PR fixes an issue with unboxing 64 bit value types.  This is part of trying the get `build wasm release` working again, #8012,  where I think the issues are related to padding/offsets of longs (and probably doubles) in the shadow stack.  The debug build is working at the moment, but that's probably more luck due to the different number of locals it creates.  The changes here bring the offset used in the unboxing stub into line with the offset used in RhUnbox, i.e. the one returned by `obj.GetRawData()` which is the offset of a byte field.  `long`s were using the field offset from `ldflda` which gets 8 byte aligned and hence does not match the offset for a `byte` (4).  Added a test for various box/unbox value types which was failing and now passes.\r\n\r\nThere's some additional discussion in the original task, #5005, where curiously the IL suggested uses `GetRawData` but for some reason, perhaps as `ldflda` is shorter and there were no failing tests at the time, it was not used.","Url":"https://github.com/dotnet/corert/pull/8113","RelatedDescription":"Closed or merged PR \"Wasm: Make offset used in unbox stub match RhUnbox/RhBox\" (#8113)"},{"Id":"607027446","IsPullRequest":true,"CreatedAt":"2020-04-26T14:35:35","Actor":"MichalStrehovsky","Number":"8112","RawContent":null,"Title":"Enable more HW intrinsics","State":"open","Body":"This switches ILC over to the plan from crossgen2 in the runtime repo.\r\n\r\nWe now have baseline supported intrinsics (this set doesn't change from what was available before - so it's up to SSE2 on x64), and optimistically supported intrinsics (this is ISA extensions that are expected to be guarded by IsIntrinsic checks).\r\n\r\nWhat's new is that we have command line option to specify a higher baseline (e.g. SSE4.2). The runtime will check whether the baseline meets the target at startup. It's not ideal, I would want to do multi-versioning, but that's a mini-RyuJIT feature and those are hard to get.\r\n\r\nThe optimistic set is calculated based on the baseline - so if e.g. AVX is the basline, BMI1/2 are optimistically supported (they don't work otherwise because they require enabling VEX encoding in RyuJIT).\r\n\r\nPotentially this allows us to enable up to AVX2, but I think we're not preserving upper halves of YMM registers in places for AVX, so I don't expect this to actually work reliably.","Url":"https://github.com/dotnet/corert/pull/8112","RelatedDescription":"Open PR \"Enable more HW intrinsics\" (#8112)"},{"Id":"605737191","IsPullRequest":false,"CreatedAt":"2020-04-23T18:51:52","Actor":"teobugslayer","Number":"8109","RawContent":null,"Title":"Sample for using Avalonia UI and CoreRT","State":"closed","Body":"Hi team,\r\n\r\nI have prepared a sample how to integrate Avalonia and CoreRT. You can find it [here](https://github.com/teobugslayer/AvaloniaCoreRTDemo). Do you think it would benefit the community if you link to it, or adopt it in the CoreRT codebase?\r\n\r\nAlso, I am open to critiques if something can be improved in my code.","Url":"https://github.com/dotnet/corert/issues/8109","RelatedDescription":"Closed issue \"Sample for using Avalonia UI and CoreRT\" (#8109)"},{"Id":"605772901","IsPullRequest":true,"CreatedAt":"2020-04-23T18:51:44","Actor":"teobugslayer","Number":"8110","RawContent":null,"Title":"Add Avalonia sample","State":"closed","Body":"I've noticed that the current Avalonia demo is a video, and the source code associated with it no longer exists.\r\nI am submitting a new sample, which can also be used as a skeleton for creating projects based on Avalonia and CoreRT.\r\n\r\nAddresses https://github.com/dotnet/corert/issues/8109","Url":"https://github.com/dotnet/corert/pull/8110","RelatedDescription":"Closed or merged PR \"Add Avalonia sample\" (#8110)"},{"Id":"605466365","IsPullRequest":true,"CreatedAt":"2020-04-23T11:45:42","Actor":"kant2002","Number":"8108","RawContent":null,"Title":"Add sample CMake configuration for VS","State":"open","Body":"This allows to view native cmponents inside VS CMake Targets view without much efforts.\r\nI try to mimic setup for `gen-buildsys-win.bat` for Windows only.\r\nMaybe maintaining this file in addition to `gen-buildsys-win.bat` then it can be found his place in the documentation somewhere.\r\nI prefer to work inside Visual Studio and having such file significantly improve discoverability for native components from which CoreRT made up of.\r\n\r\n![image](https://user-images.githubusercontent.com/4257079/80095726-376b9580-858a-11ea-9b96-c2fc97cad870.png)\r\n","Url":"https://github.com/dotnet/corert/pull/8108","RelatedDescription":"Open PR \"Add sample CMake configuration for VS\" (#8108)"},{"Id":"604608666","IsPullRequest":false,"CreatedAt":"2020-04-23T07:59:56","Actor":"kant2002","Number":"8106","RawContent":null,"Title":"Improve understanding of errors during ILC compilation","State":"closed","Body":"I try to compile No Runtime example on Linux for SeeSharpSnake and it gives me following error:\r\n```\r\n  System.InvalidOperationException: Expected type 'Internal.Runtime.CompilerHelpers.InteropHelpers' not found in module 'SeeSharpSnake'\r\n     at Internal.IL.HelperExtensions.GetKnownType(ModuleDesc module, String namespace, String name)\r\n     at Internal.IL.HelperExtensions.GetHelperType(TypeSystemContext context, String name)\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitPInvokeCall(PInvokeILCodeStreams ilCodeStreams)\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitIL()\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitIL(MethodDesc method, PInvokeILEmitterConfiguration pinvokeILEmitterConfiguration, InteropStateManager interopStateManager)\r\n     at ILCompiler.Compilation.CombinedILProvider.GetMethodIL(MethodDesc method)\r\n     at ILCompiler.Compilation.ILCache.CreateValueFromKey(MethodDesc key)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.Compilation.GetMethodIL(MethodDesc method)\r\n     at Internal.IL.ILImporter..ctor(ILScanner compilation, MethodDesc method, MethodIL methodIL)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nFrom this stack trace this is non-actionable for me without building CoreRT myself. I definitely can do that, but what if somebody read article and just try to go with out-of-box experience. Current message not very friendly. \r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8106","RelatedDescription":"Closed issue \"Improve understanding of errors during ILC compilation\" (#8106)"},{"Id":"604292610","IsPullRequest":true,"CreatedAt":"2020-04-23T07:49:37","Actor":"kant2002","Number":"8105","RawContent":null,"Title":"Print information about method which fails the IL compilation process","State":"closed","Body":"This allow to better understsand what part of code break application","Url":"https://github.com/dotnet/corert/pull/8105","RelatedDescription":"Closed or merged PR \"Print information about method which fails the IL compilation process\" (#8105)"},{"Id":"604733607","IsPullRequest":true,"CreatedAt":"2020-04-22T12:53:03","Actor":"samcragg","Number":"8107","RawContent":null,"Title":"Allow publishing of ilc with newer SDKs","State":"open","Body":"This is to address #8084 - there shouldn't be any observable changes, however, it does mean that you are able to run `dotnet publish` on the ilc project with your local SDK so hopefully it's of some use to others.","Url":"https://github.com/dotnet/corert/pull/8107","RelatedDescription":"Open PR \"Allow publishing of ilc with newer SDKs\" (#8107)"},{"Id":"602799103","IsPullRequest":false,"CreatedAt":"2020-04-21T22:45:50","Actor":"yowl","Number":"8100","RawContent":null,"Title":"Wasm: Question: what is CORINFO_EH_CLAUSE_SAMETRY for?","State":"closed","Body":"Wasm backend doesn't do anything with this flag and maybe it should.  What would be some c# or IL  that would cause that to be set?\r\n\r\nhttps://github.com/dotnet/corert/blob/e0e4531dd844e05596a794f74bd2e038815df96a/src/JitInterface/src/CorInfoTypes.cs#L659","Url":"https://github.com/dotnet/corert/issues/8100","RelatedDescription":"Closed issue \"Wasm: Question: what is CORINFO_EH_CLAUSE_SAMETRY for?\" (#8100)"},{"Id":"604036599","IsPullRequest":true,"CreatedAt":"2020-04-21T17:02:17","Actor":"kant2002","Number":"8104","RawContent":null,"Title":"Fix link to CoreCLR sources","State":"closed","Body":"and give exposure to ILVerify sources","Url":"https://github.com/dotnet/corert/pull/8104","RelatedDescription":"Closed or merged PR \"Fix link to CoreCLR sources\" (#8104)"},{"Id":"602809588","IsPullRequest":false,"CreatedAt":"2020-04-21T16:28:21","Actor":"kant2002","Number":"8101","RawContent":null,"Title":"Expected type 'System.Runtime.CompilerServices.ICastable' not found in module","State":"closed","Body":"I messing up with custom runtime, and something start falling.\r\n\r\n```\r\nEXEC : error : Expected type 'System.Runtime.CompilerServices.ICastable' not found in module 'EfiRuntime' [D:\\d\\kant\\my\\EfiTools\\UefiSnake\\UefiSnake.csproj]\r\n  System.InvalidOperationException: Expected type 'System.Runtime.CompilerServices.ICastable' not found in module 'EfiRuntime'\r\n     at Internal.IL.HelperExtensions.GetKnownType(ModuleDesc module, String namespace, String name)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.get_ICastableInterface()\r\n     at ILCompiler.DependencyAnalysis.EETypeNode.OutputFlags(NodeFactory factory, ObjectDataBuilder& objData)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode.GetData(NodeFactory factory, Boolean relocsOnly)\r\n     at ILCompiler.DependencyAnalysis.ObjectNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.ILScanner.ILCompiler.IILScanner.Scan()\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nSeems to be it is falling in this code\r\nhttps://github.com/dotnet/corert/blob/bee1832d86cf8fe795f307579e152700a9770c52/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/EETypeNode.cs#L563-L573\r\nbecause I do not implement  `ICastable`.\r\n\r\nIf I do not have ICastable defined, maybe I do not care, and Node flag `EETypeFlags.ICastableFlag` should not be set at all?","Url":"https://github.com/dotnet/corert/issues/8101","RelatedDescription":"Closed issue \"Expected type 'System.Runtime.CompilerServices.ICastable' not found in module\" (#8101)"},{"Id":"603589145","IsPullRequest":true,"CreatedAt":"2020-04-21T16:27:01","Actor":"kant2002","Number":"8103","RawContent":null,"Title":"Remove ICastable","State":"closed","Body":"Closes #8101","Url":"https://github.com/dotnet/corert/pull/8103","RelatedDescription":"Closed or merged PR \"Remove ICastable\" (#8103)"},{"Id":"603399138","IsPullRequest":true,"CreatedAt":"2020-04-20T23:03:46","Actor":"kant2002","Number":"8102","RawContent":null,"Title":"If ICastable is not defined in Runtime library, do not perform specific processing","State":"closed","Body":"I see references to have ICastable removed, but anyway there nothing specific in my code which seems to be require presence of this interface in custom classlib\r\n\r\nCloses #8101","Url":"https://github.com/dotnet/corert/pull/8102","RelatedDescription":"Closed or merged PR \"If ICastable is not defined in Runtime library, do not perform specific processing\" (#8102)"},{"Id":"602772172","IsPullRequest":true,"CreatedAt":"2020-04-19T21:14:07","Actor":"MichalStrehovsky","Number":"8099","RawContent":null,"Title":"Allow generic types through marshalling infra","State":"closed","Body":"This might require other fixes once we actually run CoreCLR tests for the newly allowed marshalling of blittable generics, but this is enough to restore compatible behavior with `Marshal.OffsetOf<SomeGenericType<Arg>>(\"foo\")`.\r\n\r\nCLR didn't do a good job blocking generics in that particular code path and there is code out there taking advantage of that.\r\n\r\nFixes a compiler crash that would happen because the instantiation on the native type was unexpected.","Url":"https://github.com/dotnet/corert/pull/8099","RelatedDescription":"Closed or merged PR \"Allow generic types through marshalling infra\" (#8099)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"611455551","IsPullRequest":true,"CreatedAt":"2020-05-03T16:47:23","Actor":"dotnet-maestro[bot]","Number":"11548","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200503.1\r\n- **Date Produced**: 5/3/2020 4:36 PM\r\n- **Commit**: 862dbec4c0972aac6373cbd61faa7aa3def6d074\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20252.3 to 5.0.0-preview.5.20253.1\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11548","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11548)"},{"Id":"610721483","IsPullRequest":true,"CreatedAt":"2020-05-03T14:18:26","Actor":"dotnet-maestro[bot]","Number":"11524","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore-tooling","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: ed1c2bc3-ada8-4f10-fd59-08d7a4f28342\r\n- **Build**: 20200502.1\r\n- **Date Produced**: 5/2/2020 1:18 PM\r\n- **Commit**: 29bc51011782dec11c84741c1fe9842223a38392\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.5.20227.11 to 5.0.0-preview.5.20252.1\r\n\r\n[marker]: <> (End:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11524","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore-tooling\" (#11524)"},{"Id":"611399099","IsPullRequest":true,"CreatedAt":"2020-05-03T12:13:02","Actor":"dotnet-maestro[bot]","Number":"11547","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: c167c97f-374f-4f20-31ff-08d7a4f3bc87\r\n- **Build**: 20200502.1\r\n- **Date Produced**: 5/2/2020 9:00 PM\r\n- **Commit**: d1b4e95965fe840245708c462011ad48549e9109\r\n- **Branch**: refs/heads/release/fsharp5\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 11.0.0-beta.20251.2 to 11.0.0-beta.20252.1\r\n\r\n[marker]: <> (End:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11547","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/fsharp\" (#11547)"},{"Id":"611398823","IsPullRequest":true,"CreatedAt":"2020-05-03T12:11:59","Actor":"dotnet-maestro[bot]","Number":"11546","RawContent":null,"Title":"[master] Update dependencies from dotnet/websdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n## From https://github.com/dotnet/websdk\r\n- **Subscription**: 83e6badd-2490-46c6-4ef2-08d7a4f251c6\r\n- **Build**: 20200502.2\r\n- **Date Produced**: 5/2/2020 12:46 PM\r\n- **Commit**: 5900d73d81971485c8e52dc7424adefc10dc5e51\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.5.20251.1 to 5.0.100-preview.5.20252.2\r\n\r\n[marker]: <> (End:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11546","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/websdk\" (#11546)"},{"Id":"611307079","IsPullRequest":true,"CreatedAt":"2020-05-03T01:06:21","Actor":"rseanhall","Number":"11545","RawContent":null,"Title":"Add the frameworkName property to runtimepack libraries","State":"open","Body":"This is the dotnet/sdk part of https://github.com/dotnet/sdk/issues/3339. It is dependent on the dotnet/runtime part from https://github.com/dotnet/runtime/pull/35764.","Url":"https://github.com/dotnet/sdk/pull/11545","RelatedDescription":"Open PR \"Add the frameworkName property to runtimepack libraries\" (#11545)"},{"Id":"611258042","IsPullRequest":true,"CreatedAt":"2020-05-02T21:14:43","Actor":"dotnet-maestro[bot]","Number":"11543","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200502.3\r\n- **Date Produced**: 5/2/2020 6:48 PM\r\n- **Commit**: a4c45262fb8549bdb4f5e4f76b16f98a795211ae\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20252.2 to 5.0.0-preview.5.20252.3\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11543","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11543)"},{"Id":"611278576","IsPullRequest":false,"CreatedAt":"2020-05-02T20:44:14","Actor":"tebeco","Number":"11544","RawContent":null,"Title":"DefineConstant is still NETCOREAPP5_0 for Net5.0 ?","State":"open","Body":"Hello,\r\n\r\nAfter installing `dotnet-sdk 5.0.0-preview3`, changed `TargetFramework` from `netcoreapp5.0` to `net5.0`, i also tried to change macro relying on existing `DefineConstant` from\r\n```csharp\r\n#if NETCOREAPP5_0\r\n#endif\r\n```\r\nto\r\n\r\n```csharp\r\n#if NET5_0\r\n#endif\r\n```\r\nIt seems that it's still `NETCOREAPP5_0` and not `NET5_0`\r\nIs this intended to still use `NETCOREAPP5_0` while the `TargetFramework` just moved out ?","Url":"https://github.com/dotnet/sdk/issues/11544","RelatedDescription":"Open issue \"DefineConstant is still NETCOREAPP5_0 for Net5.0 ?\" (#11544)"},{"Id":"611181091","IsPullRequest":true,"CreatedAt":"2020-05-02T19:40:16","Actor":"dotnet-maestro[bot]","Number":"11542","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:91a94d90-8ff5-4956-30bf-08d7d677f4fe)\r\n## From https://github.com/dotnet/websdk\r\n- **Subscription**: 91a94d90-8ff5-4956-30bf-08d7d677f4fe\r\n- **Build**: 20200502.1\r\n- **Date Produced**: 5/2/2020 12:39 PM\r\n- **Commit**: e6596e8d8a80c7a65fb7db3792ba78a57ae03963\r\n- **Branch**: refs/heads/release/5.0.1xx-preview4\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.4.20227.2 to 5.0.100-preview.4.20252.1\r\n\r\n[marker]: <> (End:91a94d90-8ff5-4956-30bf-08d7d677f4fe)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11542","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/websdk\" (#11542)"},{"Id":"611119509","IsPullRequest":true,"CreatedAt":"2020-05-02T19:25:30","Actor":"dotnet-maestro[bot]","Number":"11536","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200502.2\r\n- **Date Produced**: 5/2/2020 4:33 PM\r\n- **Commit**: d902e041f98a6ca8467b93316e2afef759d82ad8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20251.9 to 5.0.0-preview.5.20252.2\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11536","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11536)"},{"Id":"611172610","IsPullRequest":true,"CreatedAt":"2020-05-02T18:46:12","Actor":"dotnet-maestro[bot]","Number":"11538","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c1beccfa-b173-4021-38cb-08d7d6783975)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c1beccfa-b173-4021-38cb-08d7d6783975\r\n- **Build**: 20200502.1\r\n- **Date Produced**: 5/2/2020 11:26 AM\r\n- **Commit**: e129d00910dace96203fac093ab144aac7706665\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20228.15 to 5.0.0-preview.4.20252.1\r\n\r\n[marker]: <> (End:c1beccfa-b173-4021-38cb-08d7d6783975)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11538","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore\" (#11538)"},{"Id":"611079699","IsPullRequest":false,"CreatedAt":"2020-05-02T17:36:34","Actor":"wes-novack","Number":"11533","RawContent":null,"Title":"Fedora 32: No SDKs were found","State":"closed","Body":"Hello! I followed the instructions here: https://docs.microsoft.com/en-us/dotnet/core/install/linux-package-manager-fedora32\r\n\r\nFor installing dotnet core SDK and runtime using the Fedora package manager, using the commands:\r\n```\r\nsudo dnf install dotnet-sdk-3.1\r\nsudo dnf install aspnetcore-runtime-3.1\r\nsudo dnf install dotnet-runtime-3.1\r\n```\r\n\r\nNote that the 2nd and 3rd command above did nothing, because the first command for the sdk installed everything.\r\n\r\nAfter successfully installing, I can see that I have all the packages:\r\n```\r\n$ sudo dnf list installed 'dotnet*'\r\nInstalled Packages\r\ndotnet-apphost-pack-3.1.x86_64                              3.1.3-1.fc32                             @updates                    \r\ndotnet-host.x86_64                                          3.1.3-1.fc32                             @updates                    \r\ndotnet-hostfxr-3.1.x86_64                                   3.1.3-1.fc32                             @updates                    \r\ndotnet-runtime-3.1.x86_64                                   3.1.3-1.fc32                             @updates                    \r\ndotnet-sdk-3.1.x86_64                                       3.1.201-1                                @packages-microsoft-com-prod\r\ndotnet-targeting-pack-3.1.x86_64                            3.1.3-1.fc32                             @updates                    \r\n```\r\n\r\nThe problem is, however, that no SDK's are detected\r\n```\r\n$ dotnet --info\r\n  It was not possible to find any installed .NET Core SDKs\r\n  Did you mean to run .NET Core SDK commands? Install a .NET Core SDK from:\r\n      https://aka.ms/dotnet-download\r\n\r\nHost (useful for support):\r\n  Version: 3.1.3\r\n  Commit:  4a9f85e9f8\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.3 [/usr/lib64/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nSystem info\r\n```\r\n$ cat /etc/*release\r\nFedora release 32 (Thirty Two)\r\nNAME=Fedora\r\nVERSION=\"32 (Workstation Edition)\"\r\nID=fedora\r\nVERSION_ID=32\r\nVERSION_CODENAME=\"\"\r\nPLATFORM_ID=\"platform:f32\"\r\nPRETTY_NAME=\"Fedora 32 (Workstation Edition)\"\r\nANSI_COLOR=\"0;34\"\r\nLOGO=fedora-logo-icon\r\nCPE_NAME=\"cpe:/o:fedoraproject:fedora:32\"\r\nHOME_URL=\"https://fedoraproject.org/\"\r\nDOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/f32/system-administrators-guide/\"\r\nSUPPORT_URL=\"https://fedoraproject.org/wiki/Communicating_and_getting_help\"\r\nBUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\nREDHAT_BUGZILLA_PRODUCT=\"Fedora\"\r\nREDHAT_BUGZILLA_PRODUCT_VERSION=32\r\nREDHAT_SUPPORT_PRODUCT=\"Fedora\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=32\r\nPRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\r\nVARIANT=\"Workstation Edition\"\r\nVARIANT_ID=workstation\r\nFedora release 32 (Thirty Two)\r\nFedora release 32 (Thirty Two)\r\n```\r\nIf I check my path for my non-root user, the only dotnet related entry is `/home/wes/.dotnet/tools`.\r\n\r\nI've tried uninstalling and reinstalling this half a dozen times and I can't get it to recognize or detect the SDK. What can I do to get this working?\r\n","Url":"https://github.com/dotnet/sdk/issues/11533","RelatedDescription":"Closed issue \"Fedora 32: No SDKs were found\" (#11533)"},{"Id":"611173527","IsPullRequest":true,"CreatedAt":"2020-05-02T14:53:53","Actor":"dotnet-maestro[bot]","Number":"11541","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: c167c97f-374f-4f20-31ff-08d7a4f3bc87\r\n- **Build**: 20200501.2\r\n- **Date Produced**: 5/2/2020 5:26 AM\r\n- **Commit**: e4661d8cab81fb7d52fdb55d415ec2dcdb68f3c2\r\n- **Branch**: refs/heads/release/fsharp5\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 11.0.0-beta.20230.6 to 11.0.0-beta.20251.2\r\n\r\n[marker]: <> (End:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11541","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/fsharp\" (#11541)"},{"Id":"611173329","IsPullRequest":true,"CreatedAt":"2020-05-02T14:32:50","Actor":"dotnet-maestro[bot]","Number":"11540","RawContent":null,"Title":"[master] Update dependencies from dotnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n## From https://github.com/dotnet/websdk\r\n- **Subscription**: 83e6badd-2490-46c6-4ef2-08d7a4f251c6\r\n- **Build**: 20200501.1\r\n- **Date Produced**: 5/1/2020 12:46 PM\r\n- **Commit**: bd4f18a265240a73cff949de99f32ede249fdd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.5.20227.3 to 5.0.100-preview.5.20251.1\r\n\r\n[marker]: <> (End:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11540","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/websdk\" (#11540)"},{"Id":"611173077","IsPullRequest":true,"CreatedAt":"2020-05-02T12:10:45","Actor":"dotnet-maestro[bot]","Number":"11539","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200502.7\r\n- **Date Produced**: 5/3/2020 4:03 AM\r\n- **Commit**: 3e835d4b232057dd90b68dbe3a4493edd84bb9d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20251.1 to 5.0.0-preview.5.20252.7\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11539","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#11539)"},{"Id":"611153631","IsPullRequest":false,"CreatedAt":"2020-05-02T10:17:25","Actor":"Mardoxx","Number":"11537","RawContent":null,"Title":"3.1.201 release/tag point to broken build","State":"open","Body":"![image](https://user-images.githubusercontent.com/239665/80861082-34e0fe00-8c64-11ea-9233-bcd5b66645d8.png)\r\nThis tag https://github.com/dotnet/sdk/tree/v3.1.201 points to commit\r\nhttps://github.com/dotnet/sdk/commit/71a64324486da0e404b372399f11ceb83682bb9c which has an associated failed build #20200306.15.\r\n\r\nHowever, the merge request here: https://github.com/dotnet/sdk/pull/10782 points to commit https://github.com/dotnet/sdk/commit/f2b169c2c73a4dfd4761159c79fbf29658944301 with associated successful build #20200306.9\r\n\r\nWhich build is actually released?","Url":"https://github.com/dotnet/sdk/issues/11537","RelatedDescription":"Open issue \"3.1.201 release/tag point to broken build\" (#11537)"},{"Id":"611096406","IsPullRequest":true,"CreatedAt":"2020-05-02T05:40:28","Actor":"dotnet-maestro[bot]","Number":"11535","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200501.9\r\n- **Date Produced**: 5/2/2020 2:43 AM\r\n- **Commit**: 3eb812a3f5b4d36331e6d992f77d90f2d1037e4e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20251.4 to 5.0.0-preview.5.20251.9\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11535","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11535)"},{"Id":"611083242","IsPullRequest":true,"CreatedAt":"2020-05-02T03:51:59","Actor":"dotnet-maestro[bot]","Number":"11534","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20228.5 to 5.0.0-preview.4.20251.1 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:56f67902-1694-48d9-38ce-08d7d6783975)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 56f67902-1694-48d9-38ce-08d7d6783975\r\n- **Build**: 20200501.1\r\n- **Date Produced**: 5/2/2020 1:27 AM\r\n- **Commit**: 976abc3b7d9b9b182a00ff1d3d2a8d1699f3cac1\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.4.20229.1 to 5.0.0-preview.4.20251.1\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20228.5 to 5.0.0-preview.4.20251.1\r\n\r\n[marker]: <> (End:56f67902-1694-48d9-38ce-08d7d6783975)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11534","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop\" (#11534)"},{"Id":"611068264","IsPullRequest":true,"CreatedAt":"2020-05-02T02:14:45","Actor":"dotnet-maestro[bot]","Number":"11532","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore-tooling","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db3a6699-65b4-4945-4531-08d7d6786c95)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: db3a6699-65b4-4945-4531-08d7d6786c95\r\n- **Build**: 20200501.2\r\n- **Date Produced**: 5/1/2020 11:50 PM\r\n- **Commit**: 56c0dbb97a3c542fa9865aad33fe442341786a09\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.4.20228.2 to 5.0.0-preview.4.20251.2\r\n\r\n[marker]: <> (End:db3a6699-65b4-4945-4531-08d7d6786c95)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11532","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore-tooling\" (#11532)"},{"Id":"611010081","IsPullRequest":true,"CreatedAt":"2020-05-02T00:45:27","Actor":"dotnet-maestro[bot]","Number":"11531","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8b2fd006-4c04-4352-30c0-08d7d677f4fe)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 8b2fd006-4c04-4352-30c0-08d7d677f4fe\r\n- **Build**: 20200501.6\r\n- **Date Produced**: 5/1/2020 9:51 PM\r\n- **Commit**: 47ec733ba79b196e4e09d0c89bad245155002353\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20227.9 to 5.0.0-preview.4.20251.6\r\n\r\n[marker]: <> (End:8b2fd006-4c04-4352-30c0-08d7d677f4fe)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11531","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/runtime\" (#11531)"},{"Id":"610570467","IsPullRequest":false,"CreatedAt":"2020-05-02T00:19:41","Actor":"richlander","Number":"11520","RawContent":null,"Title":".NET Core 3.1 project depends on Windows Desktop","State":"closed","Body":"I tried to run the PowerShell tool on Windows ARM64. I wasn't expecting to see the dependence on the Windows Desktop framework. I ran a 3.0 app to demonstrate that roll-forward works.\r\n\r\nThis is what I saw:\r\n\r\n```console\r\nC:\\git\\testapps\\versioninfo>set DOTNET_ROLL_FORWARD=LatestMajor\r\n\r\nC:\\git\\testapps\\versioninfo>bin\\Debug\\netcoreapp3.0\\versioninfo.exe\r\n**.NET Core info**\r\nVersion: 5.0.0\r\nFrameworkDescription: .NET 5.0.0-preview.4.20227.9\r\nCoreCLR Build: 5.0.0-preview.4.20227.9\r\nCoreCLR Hash: 6d1f7e01d3429054ec3dcb7c75b3450b9fe1429e\r\nCoreFX Build: 5.0.0-preview.4.20227.9\r\nCoreFX Hash: 6d1f7e01d3429054ec3dcb7c75b3450b9fe1429e\r\n\r\n**Environment info**\r\nOSVersion: Microsoft Windows NT 10.0.16299.0\r\nOSDescription: Microsoft Windows 10.0.16299\r\nOSArchitecture: Arm64\r\nProcessorCount: 8\r\n\r\n\r\nC:\\git\\testapps\\versioninfo>pwsh\r\nIt was not possible to find any compatible framework version\r\nThe framework 'Microsoft.WindowsDesktop.App', version '3.1.0' was not found.\r\n  - No frameworks were found.\r\n\r\nYou can resolve the problem by installing the specified framework and/or SDK.\r\n\r\nThe specified framework can be found at:\r\n  - https://aka.ms/dotnet-core-applaunch?framework=Microsoft.WindowsDesktop.App&framework_version=3.1.0&arch=arm64&rid=win10-arm64\r\n```","Url":"https://github.com/dotnet/sdk/issues/11520","RelatedDescription":"Closed issue \".NET Core 3.1 project depends on Windows Desktop\" (#11520)"},{"Id":"610972351","IsPullRequest":true,"CreatedAt":"2020-05-01T23:16:27","Actor":"dotnet-maestro[bot]","Number":"11529","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200501.4\r\n- **Date Produced**: 5/1/2020 8:30 PM\r\n- **Commit**: 3bd9d3803f879c7f2f551ab7990181c215d14328\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20230.3 to 5.0.0-preview.5.20251.4\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11529","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11529)"},{"Id":"610979594","IsPullRequest":false,"CreatedAt":"2020-05-01T21:33:26","Actor":"vatsan-madhavan","Number":"11530","RawContent":null,"Title":"Provide a way to turn off Diagnostic Tracing in projects","State":"open","Body":"Today, tracing support is always enabled by default, unless it is overridden externally (to the project), for e.g., at the msbuild command-line. There seems to be no way - at least no easy way - to control this in a project. \r\n\r\nhttps://github.com/dotnet/sdk/blob/bc5c514a45a1a900b71d39a3541196bc2cf1bb0d/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.CSharp.props#L21-L24\r\n\r\nThis could be made opt-in by supplying a property - for e.g., `EnableDiagnosticTracing` - that's `true` by default for compatibility purposes. \r\n\r\n```xml\r\n  <PropertyGroup>\r\n    <DefineConstants Condition=\" '$(DefineConstants)' != '' \">$(DefineConstants);</DefineConstants>\r\n    <DefineConstants Condition=\"'$(EnableDiagnosticTracing)'!='false'\">$(DefineConstants)TRACE</DefineConstants>\r\n  </PropertyGroup>\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/11530","RelatedDescription":"Open issue \"Provide a way to turn off Diagnostic Tracing in projects\" (#11530)"},{"Id":"610967044","IsPullRequest":true,"CreatedAt":"2020-05-01T21:02:21","Actor":"dotnet-maestro-bot","Number":"11528","RawContent":null,"Title":"[automated] Merge branch 'release/5.0.1xx-preview4' => 'master'","State":"open","Body":"I detected changes in the release/5.0.1xx-preview4 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/5.0.1xx-preview4 by the following committers:\n\n* wli3\n* swaroop-sridhar\n* mmitche\n* dotnet-maestro[bot]\n* dsplaisted\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/5.0.1xx-preview4\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/5.0.1xx-preview4\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview4-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview4-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/5.0.1xx-preview4-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/5.0.1xx-preview4-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/5.0.1xx-preview4-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview4-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/5.0.1xx-preview4-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/5.0.1xx-preview4-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/5.0.1xx-preview4-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/11528","RelatedDescription":"Open PR \"[automated] Merge branch 'release/5.0.1xx-preview4' => 'master'\" (#11528)"},{"Id":"610905449","IsPullRequest":true,"CreatedAt":"2020-05-01T18:44:45","Actor":"dougbu","Number":"11527","RawContent":null,"Title":"Correct `$(IntermediateDepsFilePath)` logic","State":"open","Body":"- restore previous behaviour of this target in the non-single-file case\r\n  - ensure `$(PublishDepsFilePath)` exists after `GeneratePublishDependencyFile` target runs","Url":"https://github.com/dotnet/sdk/pull/11527","RelatedDescription":"Open PR \"Correct `$(IntermediateDepsFilePath)` logic\" (#11527)"},{"Id":"610721691","IsPullRequest":true,"CreatedAt":"2020-05-01T15:09:13","Actor":"dotnet-maestro[bot]","Number":"11525","RawContent":null,"Title":"[master] Update dependencies from dotnet/fsharp","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n## From https://github.com/dotnet/fsharp\r\n- **Subscription**: c167c97f-374f-4f20-31ff-08d7a4f3bc87\r\n- **Build**: 20200430.6\r\n- **Date Produced**: 5/1/2020 3:31 AM\r\n- **Commit**: 20de0e8671fc17d54f7f3deaeeb3b223d6125461\r\n- **Branch**: refs/heads/release/fsharp5\r\n- **Updates**:\r\n  - **Microsoft.FSharp.Compiler**: from 11.0.0-beta.20229.3 to 11.0.0-beta.20230.6\r\n\r\n[marker]: <> (End:c167c97f-374f-4f20-31ff-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11525","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/fsharp\" (#11525)"},{"Id":"610722602","IsPullRequest":true,"CreatedAt":"2020-05-01T14:56:30","Actor":"dotnet-maestro[bot]","Number":"11526","RawContent":null,"Title":"[master] Update dependencies from mono/linker","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 769e6472-e796-4bcb-a0ac-08d7dbf4acc5\r\n- **Build**: 20200430.3\r\n- **Date Produced**: 5/1/2020 7:24 AM\r\n- **Commit**: d3eb4ea8179516b0554a3d3089c71062496bd6f0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: from 5.0.0-preview.3.20229.1 to 5.0.0-preview.3.20230.3\r\n\r\n[marker]: <> (End:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11526","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from mono/linker\" (#11526)"},{"Id":"610721076","IsPullRequest":true,"CreatedAt":"2020-05-01T14:22:14","Actor":"dotnet-maestro[bot]","Number":"11523","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200501.1\r\n- **Date Produced**: 5/1/2020 11:02 AM\r\n- **Commit**: a97e47483409bc8e02c302c44e9a395ab019b180\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20229.5 to 5.0.0-preview.5.20251.1\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11523","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#11523)"},{"Id":"610682273","IsPullRequest":true,"CreatedAt":"2020-05-01T12:38:36","Actor":"ViktorHofer","Number":"11522","RawContent":null,"Title":"Stop adding PublishDepsFilePath twice to publish","State":"closed","Body":"Fixes https://github.com/dotnet/sdk/issues/11521\r\n\r\nI'm likely merging this after CI is green to unblock P4 and Arcade SDK progress.\r\n\r\ncc @dougbu @dsplaisted ","Url":"https://github.com/dotnet/sdk/pull/11522","RelatedDescription":"Closed or merged PR \"Stop adding PublishDepsFilePath twice to publish\" (#11522)"},{"Id":"610669222","IsPullRequest":false,"CreatedAt":"2020-05-01T12:38:36","Actor":"ViktorHofer","Number":"11521","RawContent":null,"Title":"DepsFile is added twice to ResolvedFileToPublish which causes NU5118","State":"closed","Body":"The generated deps file is added to `ResolvedFileToPublish` in [PackTool.targets](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.PackTool.targets#L36) and [Microsoft.NET.Publish.targets](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L1034-L1036).\r\n\r\nThis results in the deps file being added to the item twice and causes a NU5118 error:\r\n![image](https://user-images.githubusercontent.com/7412651/80797138-4f05d800-8ba1-11ea-8f4e-1f25cb079f20.png)\r\n\r\ncc @dougbu @swaroop-sridhar @dsplaisted ","Url":"https://github.com/dotnet/sdk/issues/11521","RelatedDescription":"Closed issue \"DepsFile is added twice to ResolvedFileToPublish which causes NU5118\" (#11521)"},{"Id":"610561491","IsPullRequest":false,"CreatedAt":"2020-05-01T04:52:08","Actor":"richlander","Number":"11519","RawContent":null,"Title":".NET 5.0 projects depend of Windows Desktop","State":"open","Body":"I'm sure this is point-in-time, but this is what I see on my Windows ARM64 machine. I can use a NuGet.config to fix it, but that shouldn't be necessary.\r\n\r\n```console\r\nC:\\git\\testapps\\versioninfo>type versioninfo.csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n\r\nC:\\git\\testapps\\versioninfo>\\dotnet\\dotnet.exe build\r\nMicrosoft (R) Build Engine version 16.7.0-preview-20220-01+80e487bff for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Determining projects to restore...\r\nC:\\git\\testapps\\versioninfo\\versioninfo.csproj : error NU1102: Unable to find package Microsoft.WindowsDesktop.App.Ref with version (= 5.0.0-preview.4.20229.1)\r\nC:\\git\\testapps\\versioninfo\\versioninfo.csproj : error NU1102:   - Found 16 version(s) in nuget.org [ Nearest version: 5.0.0-preview.3.20214.2 ]\r\n  Failed to restore C:\\git\\testapps\\versioninfo\\versioninfo.csproj (in 1.07 sec).\r\n\r\nBuild FAILED.\r\n```","Url":"https://github.com/dotnet/sdk/issues/11519","RelatedDescription":"Open issue \".NET 5.0 projects depend of Windows Desktop\" (#11519)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"610977267","IsPullRequest":false,"CreatedAt":"2020-05-01T21:27:32","Actor":"brianrob","Number":"153","RawContent":null,"Title":"JCC Erratum Impact on .NET Core","State":"open","Body":"# JCC Erratum Impact on .NET Core\r\nIn November 2019, Intel announced the Jump Conditional Code (JCC) erratum which may occur under conditions involving jump instructions that span 64-byte boundaries.  Intel is resolving the JCC erratum via a microcode update that has a potential performance side-effect.  The goal of this investigation was to determine whether or not we need to do any work in the runtime or framework to mitigate the impact of the microcode update.\r\n\r\nFor more details on the JCC erratum, or how applications can mitigate the performance impact, see https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf.\r\n\r\nThanks to everyone who participated in discussions around the JCC erratum in https://github.com/dotnet/runtime/issues/13794 and https://github.com/dotnet/runtime/issues/13795.\r\n\r\n### Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n - https://github.com/dotnet/runtime/issues/35730\r\n\r\n### The Bottom Line\r\nWhile we do see some impact from the JCC microcode update on our microbenchmark results on both Windows and Linux, we don’t see any negative impact on the “real world” scenarios that we A/B tested.  **As a result, we do not intend to implement any mitigations in the runtime or framework at this time.  Instead, our ask of you, is to help us identify your business-critical scenarios where you are seeing an unacceptable impact.**  We will use this data to inform future work in this space.\r\n\r\n### Comparison Setup\r\nIn order to do a clean comparison, we setup two identical machines each with an identical Skylake processor.  One machine was setup with a internal-only test build of Windows, and the other was setup with a publicly available build of Linux (Ubuntu 18.04).  Both were able to deploy and revert the microcode update (MCU).  This allowed for A/B comparisons and switching between the two versions of microcode on each machine.\r\n\r\n### Testing Strategy\r\nThe testing strategy was to run a selection of microbenchmarks and a set of larger scenarios across Windows and Linux, with the goal of understanding how impactful the JCC microcode update is to .NET Core.\r\n\r\n### Scenario Results\r\nThe scenarios used for this test are:\r\n - Linux: Cloud-scale app throughput - TechEmpower Plaintext and JSON\r\n - Windows: WPF app start-up - Real world app (Name withheld)\r\n - Windows: ASP.NET app start-up - [Link-A-Thon](https://github.com/rynowak/link-a-thon) (This is an ASP.NET Core app that has been used for many experiments recently)\r\n\r\n**Most scenario averages are within 1%, with the exception of TechEmpower JSON which improves with the microcode update by 2.45%.**\r\n\r\nNote: Negative percentages are regressions and positive percentages are improvements.\r\n\r\n#### TechEmpower Plaintext - Linux\r\n|       | Before       | After        | Diff (%) |\r\n|-------|--------------|--------------|----------|\r\n| Avg   | 6,628,782.80 | 6,608,739.60 | -0.30%   |\r\n| Stdev | 10,334.67    | 40,146.37    |          |\r\n| Min   | 6,605,400.00 | 6,496,095.00 | -1.65%   |\r\n| Max   | 6,645,216.00 | 6,632,308.00 | -0.19%   |\r\n\r\n#### Techempower Json - Linux\r\n|       | Before     | After      | Diff (%) |\r\n|-------|------------|------------|----------|\r\n| Avg   | 568,352.00 | 582,285.40 | 2.45%    |\r\n| Stdev | 60,443.60  | 38,572.44  |          |\r\n| Min   | 437,075.00 | 513,170.00 | 17.41%   |\r\n| Max   | 667,430.00 | 631,945.00 | -5.32%   |\r\n\r\n#### WPF Real-World App Startup - Windows\r\n|     | Before   | After    | Diff (%) |\r\n|-----|----------|----------|----------|\r\n| Avg | 2740.761 | 2734.087 | -0.24%   |\r\n| Min | 2725.215 | 2696.806 | -1.04%   |\r\n| Max | 2773.128 | 2758.793 | -0.52%   |\r\n\r\n#### ASP.NET Core Link-A-Thon Startup - Windows\r\n|     | Before  | After   | Diff (%) |\r\n|-----|---------|---------|----------|\r\n| Avg | 340.604 | 338.521 | -0.61%   |\r\n| Min | 325.59  | 329.391 | 0.12%    |\r\n| Max | 375.822 | 346.351 | -7.84%   |\r\n\r\n### Microbenchmark Results\r\nThe microbenchmark suite contained 1673 benchmarks when run for this investigation.  The benchmarks were run both with and without the microcode update applied.  The graphs below represent the grouping of differences between the benchmarks with and without the microcode update applied.\r\n\r\nAxes:\r\n - X: Ratio of after/before.  Stated another way, the ratio is (withmcu/withoutmcu).  Ratios less than 1 mean the benchmark performed better with the JCC microcode update applied.  Ratios greater than 1 mean the benchmark performed worse with the JCC microcode update applied.\r\n - Y: Count of benchmarks in the bucket.\r\n![image](https://user-images.githubusercontent.com/6210322/80840714-ba0bda80-8bb2-11ea-8869-07ec55182661.png)\r\n**While there are some outliers, for the most part, the benchmarks are clustered around a ratio of 1 with the most benchmarks in the 1.038 – 1.085 bucket, which represents single digit percentage degradation.**","Url":"https://github.com/dotnet/announcements/issues/153","RelatedDescription":"Open issue \"JCC Erratum Impact on .NET Core\" (#153)"},{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1256637074842640384","CreatedAt":"2020-05-02T17:30:00+00:00","UserScreenname":"dotnet","Text":"🔥BBQ, Bots and .NET Core 🔥\n\nFind out how @camsoper is using .NET Core to help smoke great BBQ ribs 😎… https://t.co/FcO6jUahNz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":44,"FavoriteCount":16,"RawContent":null},{"Id":"1256315454836011008","CreatedAt":"2020-05-01T20:12:00+00:00","UserScreenname":"dotnet","Text":"Minimize the amount of data that transferred between a service and a client for reporting and analytical scenarios.… https://t.co/lvOMMmECm6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":16,"RawContent":null},{"Id":"1256275193607176192","CreatedAt":"2020-05-01T17:32:01+00:00","UserScreenname":"dotnet","Text":"In the first post of a new series from @shahedC, we get some really great production tips for #ASP.NET Core. He giv… https://t.co/fB0Pqwv5Sc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"1256238926832062464","CreatedAt":"2020-05-01T15:07:54+00:00","UserScreenname":"dotnet","Text":"Join us for the inaugural Entity Framework Community Standup on Wed May 6th 2020 at 10am PT/1pm ET. Ask questions d… https://t.co/msBiTJ55d9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"1255952821398142976","CreatedAt":"2020-04-30T20:11:01+00:00","UserScreenname":"dotnet","Text":"Get the 411 on what's coming in .NET 5 from @lyalindotcom and @oliagavrysh as they handle the latest #dotNET Commun… https://t.co/6KNfKDEH4B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":36,"FavoriteCount":14,"RawContent":null},{"Id":"1255906813620310016","CreatedAt":"2020-04-30T17:08:12+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"1255600241849573376","CreatedAt":"2020-04-29T20:50:00+00:00","UserScreenname":"dotnet","Text":"...but wait. There's more. #ASPNET Core has also been updated in #dotNET 5 Preview 3. Get started with it now:… https://t.co/od4oqFRtqS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":25,"RawContent":null},{"Id":"1255553438567608320","CreatedAt":"2020-04-29T17:44:01+00:00","UserScreenname":"dotnet","Text":"...also just released...\n🔥 Blazor WebAssembly 3.2.0 Preview 5 is now available. \nNew goodies include:\n✔️ Read confi… https://t.co/u9gr2W14wS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":37,"RawContent":null},{"Id":"1255524744285130752","CreatedAt":"2020-04-29T15:50:00+00:00","UserScreenname":"dotnet","Text":"Did you know that C# supports pattern matching? Check it out in this short video\n\nhttps://t.co/Fz8KaQzZP4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":73,"FavoriteCount":19,"RawContent":null},{"Id":"1255517231062175744","CreatedAt":"2020-04-29T15:20:08+00:00","UserScreenname":"dotnet","Text":"We just released #dotNET 5.0 Preview 3, complete with new features and performance improvements.  \n\nGet all the res… https://t.co/Pq1jXQ9m82","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":155,"FavoriteCount":80,"RawContent":null},{"Id":"1255232324586831873","CreatedAt":"2020-04-28T20:28:01+00:00","UserScreenname":"dotnet","Text":"Drop in on the latest #ASPNET Community Standup and follow along in the conversation as @briacht and Luis Quintanil… https://t.co/z9x5DlluHz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":11,"RawContent":null},{"Id":"1255193315319910402","CreatedAt":"2020-04-28T17:53:01+00:00","UserScreenname":"dotnet","Text":"Learn how to create a #dotNET Standard library and then share it with other devs via #NuGet in @SayediHashimi's lat… https://t.co/FebRSKJgF2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":77,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2020-05-04T05:30:32.315012Z","RunDurationInMilliseconds":12872}