{"Data":{"Blog":{"FeedItems":[{"Title":"Extend Xamarin.Forms Controls Functionality with Behaviors","PublishedOn":"2018-02-16T18:48:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms provides a way to build 100% native, cross-platform applications with both a shared logic layer and a shared user-interface layer. Built-in Xamarin.Forms controls also provide a ton of...","Href":"https://blog.xamarin.com/extend-xamarin-forms-controls-functionality-with-behaviors/","RawContent":null},{"Title":"Xamarin.iOS and Xcode 9.3 Web Preview","PublishedOn":"2018-02-15T20:36:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The next release of Xcode, version 9.3, is currently in beta. Development of Xamarin.iOS to support the new Xcode 9.3 version is in-progress and available now as a web preview. Participating in...","Href":"https://blog.xamarin.com/xcode-9-3-web-preview-high-sierra-required/","RawContent":null},{"Title":"Add a Search Bar to Your Xamarin Apps in iOS 11","PublishedOn":"2018-02-12T20:00:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As described in the Go Large with iOS 11 post, view controllers in iOS 11 can use large titles to improve the clarity of an app&#8217;s user interface. To complement a view controller&#8217;s large...","Href":"https://blog.xamarin.com/add-search-bar-xamarin-ios-11/","RawContent":null},{"Title":"Podcast: Rapid UI Prototyping with Ink to Code, Merged Dictionaries in Xamarin.Forms, & Android Emulator Tips","PublishedOn":"2018-02-09T19:33:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I talk about a new tool that turns drawings into Android or UWP layouts, merged dictionaries coming to Xamarin.Forms, ways to make your...","Href":"https://blog.xamarin.com/podcast-rapid-ui-prototyping-ink-code-merged-dictionaries-xamarin-forms-android-emulator-tips/","RawContent":null},{"Title":"Add Languages to Your Xamarin Apps with Multilingual App Toolkit","PublishedOn":"2018-02-08T20:10:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With Xamarin, you can extend your cross-platform apps with support for native speakers, reaching markets that might otherwise be overlooked. However, managing multiple languages and keeping everything...","Href":"https://blog.xamarin.com/add-languages-to-your-apps-with-xamarin-and-multilingual-app-toolkit/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Building Your First Intelligent App with Xamarin and Microsoft Cognitive Services","PublishedOn":"2018-02-07T19:39:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today&#8217;s apps must be “intelligent” to win app users’ loyalty, whether for a consumer app or a business app. With Xamarin.Forms and Microsoft Cognitive Services, you can easily create your first...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-building-first-intelligent-app-xamarin-microsoft-cognitive-services/","RawContent":null},{"Title":"Draw your Next App Idea with Ink to Code","PublishedOn":"2018-02-05T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Imagine that you&#8217;ve just been struck by inspiration for your next great app. You might start by jotting some notes and sketching out screens. If you&#8217;re thinking about reaching for a...","Href":"https://blog.xamarin.com/draw-next-app-idea-ink-code/","RawContent":null},{"Title":"Lose the Cables: Make Deploying to an iOS or tvOS Device Easier","PublishedOn":"2018-02-02T19:59:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One thing most developers consistently do during app development is deploy to a testing device. One main drawback during this process is the struggle to find a cable, connect it to a computer, plug it...","Href":"https://blog.xamarin.com/lose-cables-make-deploying-ios-tvos-device-easier/","RawContent":null},{"Title":"Just Push Play: Using Google Play on an Android Emulator","PublishedOn":"2018-02-01T20:22:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The needs of an Android developer using the Android emulator continuously expand. The latest emulator development from Google provides a system image for the Google Play Store, which includes a fully...","Href":"https://blog.xamarin.com/just-push-play-using-google-play-android-emulator/","RawContent":null},{"Title":"Xamarin Developer Events in February","PublishedOn":"2018-01-31T19:26:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you haven&#8217;t started working on your new year&#8217;s resolutions yet, we have the perfect solution: get out there and start building on your mobile app development education by networking...","Href":"https://blog.xamarin.com/xamarin-developer-events-february/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7258343257","Type":"IssuesEvent","CreatedAt":"2018-02-17T05:56:10","Actor":"JoshaMunnik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1319","RelatedDescription":"Opened issue \"Binding Library properties shows class-parse but jar2xml is used by default\" (#1319) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new Android Binding Library\r\n2. Add jar/aar (for example firebase-messaging-11.8.0.jar)\r\n3. Open properties, Android Class Parser shows \"class-parse\"\r\n4. Set MSBUILD to Diagnostic (Tools ->Options -> Projects and Solutions -> Build and Run)\r\n5. Build\r\n6. Output shows some JAR2XML warnings\r\n\r\n### Expected Behavior\r\nClass-parse being used\r\n\r\n### Actual Behavior\r\nJar2xml being used\r\n\r\n### Workaround\r\n1. Open properties\r\n2. Switch Android Class Parser to \"jar2xml\"\r\n3. Save\r\n4. Switch Android Class Parse to \"class-parse\"\r\n5. Save\r\n\r\nWhen build/rebuilding class-parse gets used.\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.5.6\r\nVisualStudio.15.Release/15.5.6+27130.2027\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\nInstalled Version: Community\r\nVisual Basic 2017   00369-60000-00001-AA733\r\nMicrosoft Visual Basic 2017\r\nVisual C# 2017   00369-60000-00001-AA733\r\nMicrosoft Visual C# 2017\r\nVisual F# 4.1   00369-60000-00001-AA733\r\nMicrosoft Visual F# 4.1\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nASP.NET and Web Tools 2017   15.0.31127.0\r\nASP.NET and Web Tools 2017\r\nASP.NET Core Razor Language Services   1.0\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nCommon Azure Tools   1.10\r\nFabric.DiagnosticEvents   1.0\r\nFile Nesting   2.6.67\r\nJavaScript Language Service   2.0\r\nJetBrains ReSharper Ultimate 2017.3    Build 111.0.20171218.133305\r\nMerq   1.1.17-rc (cba4571)\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.0\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51120.3\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nMicrosoft JVM Debugger   1.0\r\nMicrosoft MI-Based Debugger   1.0\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nNuGet Package Manager   4.5.0\r\nSQL Server Data Tools   15.1.61710.120\r\nTypeScript Tools   15.5.11025.1\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nVisual Studio Tools for Unity   3.5.0.3\r\nVisualStudio.Mac   1.0\r\nWeb Compiler   1.11.326\r\nWebJobs Tools v1.0.0   15.0.31201.0\r\nXamarin   4.8.0.760 (fc93f3f5b)\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nXamarin.Android SDK   8.1.5.0 (HEAD/75f8c6838)\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.4 (db807ec)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n"},{"Id":"7257465174","Type":"PullRequestEvent","CreatedAt":"2018-02-16T22:09:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1318","RelatedDescription":"Merged pull request \"Bump to mono:2017-12\" (#1318) at xamarin/xamarin-android","RelatedBody":"We want that to start working on the Mono SDKs integration to XA."},{"Id":"7256948247","Type":"PullRequestEvent","CreatedAt":"2018-02-16T20:02:53","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1318","RelatedDescription":"Opened pull request \"Bump to mono:2017-12\" (#1318) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7256103402","Type":"PullRequestEvent","CreatedAt":"2018-02-16T16:56:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1317","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/15cf8c1, mono/2017-12/fbc4f05\" (#1317) at xamarin/xamarin-android","RelatedBody":"java.interop: https://github.com/xamarin/java.interop/commit/15cf8c12176d6b46995732b9702f09d60135b976\r\n\r\nmono: https://github.com/mono/mono/compare/2ad3f0bf9ed6b0943c302cc3d9a917e0782b5328...fbc4f0546d3994984f775b1a7ade5289ae6bfe92"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7260002476","Type":"IssuesEvent","CreatedAt":"2018-02-18T03:06:40","Actor":"gregmercer","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1911","RelatedDescription":"Opened issue \"iOS ListView items Layout View Rendering \" (#1911) at xamarin/Xamarin.Forms","RelatedBody":"# ListFrames2\r\n\r\n###Description\r\n\r\nOn iOS the Slots are not rendered (or invisible?). Displays a blank open space where the Slots should have been rendered.\r\n\r\n**UI Structure**\r\n\r\n```\r\nXamarin Forms \r\n  Content Page\r\n    StackLayout\r\n      ListView\r\n        ItemTemplate \r\n          DataTemplate\r\n            StackLayout\r\n              Label\r\n              Label\r\n              TimeSlotsWrapLayout (Layout<View>)\r\n                BindingProperty (TimeSlotsSourceProperty TimeSlots)\r\n                  Frame (Random number of Frames - Slots)\r\n                    Label \r\n```                  \r\n\r\nNot using groups \r\n\r\n###Code @\r\nhttps://github.com/gregmercer/ListFrames2\r\n\r\n###Stack Trace\r\n\r\nna\r\n\r\n###Steps to Reproduce\r\n- When App opens the FramesPage gets OnAppearing. Shows page with UI structure heirarchy shown above.\r\n- Tab to second page - OtherPage.\r\n- Tab back to Frames page.\r\n\r\n###Actual Behavior\r\n- Scroll. Notice Slots are not being rendered (or invisible?).\r\n\r\n###Expected Behavior\r\n- The Slots should be displaying correctly for each ListView row.\r\n\r\n###Some findings:\r\n\r\n> Running with local build of Xamarin Forms I've found that if I changed the \r\n\r\n> RendererPool.cs UpdateNewElement method to have the following new testing code it \r\n\r\n> seemed to cause the Slots to render correctly:\r\n\r\n```\r\npublic void UpdateNewElement(VisualElement newElement)\r\n\r\n    ...\r\n\r\n      if (oldChildren.Count == newChildren.Count)\r\n      {\r\n        for (var i = 0; i < oldChildren.Count; i++)\r\n        {\r\n          if (oldChildren[i].GetType() != newChildren[i].GetType())\r\n          {\r\n            sameChildrenTypes = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      else\r\n        sameChildrenTypes = false;\r\n\r\n<testing code added>\r\n\r\n      if (sameChildrenTypes) \r\n      {\r\n          if (newElement is StackLayout)\r\n          {\r\n              //sameChildrenTypes = false;\r\n              ClearRenderers(_parent);\r\n              FillChildrenWithRenderers(newElement);\r\n              return;\r\n          }\r\n      }\r\n\r\n</testing code added>\r\n```\r\n\r\n###Basic Information\r\n\r\n> Version with issue: - Include=\"Xamarin.Forms\" Version=\"2.5.0\" a356efc\r\nLast known good version: - New issue\r\n\r\n> IDE: - Visual Studio\r\n\r\n> Platform Target Frameworks:\r\niOS: Renders incorectly, or invisible.\r\nAndroid: Works fine\r\n\r\n###Nuget Packages:\r\nXamarin Forms\r\n\r\n###Affected Devices:\r\nIOS emulator and iPhone 6 (real device)\r\n\r\nScreenshots\r\nimage\r\n"},{"Id":"7259640482","Type":"PullRequestEvent","CreatedAt":"2018-02-17T22:07:39","Actor":"bmacombe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1910","RelatedDescription":"Opened pull request \"Feature/1670 hide scroll view scroll bars\" (#1910) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded vertical and horizontal scroll bar visibility properties to ScrollView and updated UWP, WPF, iOS and Android renderers\r\n\r\nI noticed on Android when the ScrollView.Orientation = ScrollOrientation.Both that a horizontal scroll bar is never shown, only the vertical.  I did not try to change this to avoid making a default behavior change.\r\n\r\nUnit Tests are not included as I'm not sure what to test right now besides that basic properties were set.\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n\r\n```\r\n public enum ScrollBarVisibility\r\n {\r\n\tDefault,\r\n\tAlways,\r\n\tNever,\r\n} \r\n```\r\n - ScrollBarVisibility ScrollView.HorizontalScrollBarVisibility {get; set;};\r\n - ScrollBarVisibility ScrollView.VerticalScrollBarVisibility {get;set;};\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"7259556969","Type":"IssuesEvent","CreatedAt":"2018-02-17T21:10:34","Actor":"softsan","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1909","RelatedDescription":"Opened issue \"Xamarin.forms 2.5.0.280555 and android circle button issue\" (#1909) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nUpdated to new xamarin.forms nuget package and we have some issue regarding button on android. please see attached image.\r\n\r\nXAML:\r\n \r\n```\r\n<Button\r\n                Grid.Row=\"2\"\r\n                BackgroundColor=\"Red\"\r\n                CornerRadius=\"32\"\r\n                BorderWidth=\"0\"\r\n                Clicked=\"DoEnd\"\r\n                FontFamily=\"FontAwesome\"\r\n                FontSize=\"36\"\r\n                HeightRequest=\"64\"\r\n                HorizontalOptions=\"Center\"\r\n                Rotation=\"135\"\r\n                Text=\"{Binding Source={x:Static theme:UXFontIcons.FAPhone}}\"\r\n                TextColor=\"White\"\r\n                VerticalOptions=\"Center\"\r\n                WidthRequest=\"64\" />\r\n```\r\nButtonRenderer on Android:\r\n \r\n ```\r\n[assembly: ExportRenderer(typeof(Button), typeof(FlatButtonRenderer))]\r\n namespace SampleTest.Droid\r\n{\r\n    public class FlatButtonRenderer : ButtonRenderer\r\n{\r\n    Dictionary<string, string> CustomFontsDictionary = new Dictionary<string, string>()\r\n    {\r\n        { \"FontAwesome\", \"fontawesome-webfont.ttf\" },\r\n        { \"Lato\", \"latoRegular.woff\" },\r\n        { \"Lato Hairline\", \"latoThin.woff\" }\r\n    };\r\n\r\n\r\n    public FlatButtonRenderer(Context context) : base(context)\r\n    {\r\n    }\r\n\r\n    protected override void OnElementChanged(ElementChangedEventArgs<Button> e)\r\n    {\r\n        base.OnElementChanged(e);\r\n\r\n        if (this.Control != null && this.Element != null)\r\n        {\r\n            var nativeButton = (Android.Widget.Button)Control;\r\n            nativeButton.SetShadowLayer(0, 0, 0, Android.Graphics.Color.Transparent);\r\n\r\n                             nativeButton.Elevation = 0;\r\n            if (this.CheckIsCustomFont())\r\n            {\r\n                var typeFace = this.GetTypeFace();\r\n                var typeFaceStyle = this.GetTypeFaceStyle();\r\n                if (typeFace != null)\r\n                {\r\n                    nativeButton.SetTypeface(typeFace, typeFaceStyle);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    bool CheckIsCustomFont()\r\n    {\r\n        string fontFamily = this.Element.FontFamily;\r\n        if (string.IsNullOrWhiteSpace(fontFamily))\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return CustomFontsDictionary.ContainsKey(fontFamily);\r\n    }\r\n\r\n    Typeface GetTypeFace()\r\n    {\r\n        string fontFamily = this.Element.FontFamily;\r\n        return Typeface.CreateFromAsset(this.Context.Assets, CustomFontsDictionary[fontFamily]);             \r\n    }\r\n\r\n    TypefaceStyle GetTypeFaceStyle()\r\n    {\r\n        if (this.Element.FontAttributes == FontAttributes.None)\r\n        {\r\n            return TypefaceStyle.Normal;\r\n        }\r\n\r\n        if (this.Element.FontAttributes == FontAttributes.Bold)\r\n        {\r\n            return TypefaceStyle.Bold;\r\n        }\r\n\r\n        if (this.Element.FontAttributes == FontAttributes.Italic)\r\n        {\r\n            return TypefaceStyle.Italic;\r\n        }\r\n\r\n        return TypefaceStyle.Normal;\r\n    }\r\n}\r\n```\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nCircle button\r\n### Actual Behavior\r\nslightly rectangular button (please see attached image)\r\n### Basic Information\r\n\r\n- Version with issue:2.5.0.280555\r\n- Last known good version:2.5.0.122203\r\n- IDE:Visual studio on Mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android:  6,7.1,8\r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: Xamarin.Forms Version 2.5.0.280555\r\n- Affected Devices:All android device\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, \r\n\r\nplease include screenshots showing the problem if possible -->\r\n![androidbutton](https://user-images.githubusercontent.com/7391319/36345632-021a6a26-1455-11e8-9d67-295034a0859f.png)\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7259541265","Type":"IssuesEvent","CreatedAt":"2018-02-17T21:00:38","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1908","RelatedDescription":"Opened issue \"[Android]  Use drawables from resources opposed to creating bitmaps in order to improve performance\" (#1908) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n@jonathanpeppers outlines some issues here with how images are loaded with Android\r\n\r\nhttp://jonathanpeppers.com/Blog/xamarin-forms-performance-on-android\r\n\r\n> Notice how many Android.Graphics.Bitmaps get created here... If two rows in a ListView use the same image, they each use a copy of the exact same image. If you scroll a cell off screen and bring it back, it will load a new Bitmap object when it is brought back onto the screen. \r\n\r\nOn android if we use a Drawable when present instead of the bitmap this helps with reuse of the same image.\r\n\r\nAlso looking into caching the Resource Ids against the names might be useful as the ResourceManager currently uses reflection\r\n\r\n\r\n### Steps to Reproduce\r\nCreate a large number of images all based on the same Drawable in Android\r\n```\r\nStackLayout listView = new StackLayout();\r\n             \r\n            for (int i = 0; i < 1000; i++)\r\n            {\r\n                listView.Children.Add(new Image(){ Source = \"oasis.jpg\"});                \r\n            }\r\n\r\n            return new ContentPage()\r\n            {\r\n                Content = new ScrollView(){ Content = listView}\r\n            };\r\n```\r\nCurrently this will crash with an out of memory exception. \r\n\r\n### Expected Behavior\r\nUse drawables where you can instead of constructing  bitmaps so listviews can handle lots of repetative images.\r\n\r\n### Actual Behavior\r\nCrashes with out of memory when using too many images\r\n\r\n### Implementation\r\n\r\nI've worked up a PoC here\r\nhttps://github.com/xamarin/Xamarin.Forms/tree/ImagePerf\r\n\r\n### Backwards Compatibility\r\nDoes this need to be a platform opt in? or will it work just dropped in. What dependencies are there if the ImageView has always been set via a bitmap\r\n\r\nIf the user isn't using Drawable does the extra check for a Drawable cause them a performance decrease for the lookup of the ID? \r\n\r\nCan the names inside ResourceManager all just be cached against ids? \r\n\r\nReflection performance vs \r\nhttps://developer.android.com/reference/android/content/res/Resources.html#getIdentifier(java.lang.String,%20java.lang.String,%20java.lang.String)\r\n"},{"Id":"7259392380","Type":"IssuesEvent","CreatedAt":"2018-02-17T19:23:40","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1898","RelatedDescription":"Closed issue \"Samsung Device, Numeric Keyboard -> No comma, dot event not fired\" (#1898) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen i create an entry with keyboardtype numeric and run my app on samsung devices, the keyboard shows not a comma key (,). It only shows a dot key (.). But when i press the dot key, the TextChanged event is not fired.\r\n\r\nWe confirmed this behavior on a Samsung Galaxy Tab A (2016) and Samsung A5. When we install an other keyboard than the standard samsung keyboard (like SwiftKey) it works but this would be not an user-friendly solution. Numeric keyboard works correctly on devices from HTC, Sony, LG etc.\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\nXamarin.Forms.Entry entry = new Xamarin.Forms.Entry();\r\nentry.Keyboard = Xamarin.Forms.Keyboard.Numeric;\r\n```\r\n\r\nRun this on an actual samsung device.\r\n\r\n### Expected Behavior\r\n\r\nIt would be optimal if the comma key is displayed and working. Alternatively, but should at least the dot key fire the TextChanged Event.\r\n\r\n### Actual Behavior\r\n\r\nThe keyboard shows not a comma key (,). It only shows a dot key (.). But when i press the dot key, the TextChanged ist not fired.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.91635\r\n- Last known good version: I do not know exactly but any version of august or september 2017\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:  \r\n  - iOS:  9.0\r\n  - Android: 8.0\r\n- Affected Devices: All actual Samsung devices\r\n\r\n### Screenshots\r\n\r\nhttps://ibb.co/hiTnFn\r\n"},{"Id":"7259033912","Type":"IssuesEvent","CreatedAt":"2018-02-17T15:35:35","Actor":"ozielguimaraes","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1907","RelatedDescription":"Opened issue \"Editor Placeholder/PlaceholderColor\" (#1907) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nWhy Editor doesn't have a property Placeholder and PlaceholderColor?\r\n\r\n### Steps to Reproduce\r\n\r\n1. Missing property Placeholder\r\n2. Missing property PlaceholderColor\r\n\r\n### Expected Behavior\r\nPlaceholder and PlaceholderColor properties for Editor as the Entry element.\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7258250213","Type":"PullRequestEvent","CreatedAt":"2018-02-17T04:27:47","Actor":"vargaz","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3521","RelatedDescription":"Opened pull request \"Ios sdk\" (#3521) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7257714660","Type":"PullRequestEvent","CreatedAt":"2018-02-16T23:22:19","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3520","RelatedDescription":"Opened pull request \"[Intents] Fix xtro output - Backport of #3512\" (#3520) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7257258970","Type":"IssuesEvent","CreatedAt":"2018-02-16T21:17:22","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3137","RelatedDescription":"Closed issue \"WKWebView MediaTypesRequiringUserActionForPlayback\" (#3137) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Setup application to load HTML5 audio page in WKWebView\r\n2. WKWebView MediaTypesRequiringUserActionForPlayback configuration set for 'None' \r\n3. Run app to see if audio autostarts\r\n\r\nOne should note that the same code for iOS Swift works without a problem.\r\n\r\n### Expected Behavior\r\nThe audio should play on page load.\r\n### Actual Behavior\r\nThe audio does not play and requires user interaction to start the audio. Does not respect the MediaTypesRequiringUserActionForPlayback param.\r\n### Environment\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3 (build 799)\r\nInstallation UUID: a2d3a4a7-526c-464e-971f-b895e9683478\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t1.1.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t1.0.0-preview2-1-003177\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.2 (Visual Studio Community)\r\nHash: 6857dfcc\r\nBranch: xcode9.2\r\nBuild date: 2017-12-04 21:20:41-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.0.24 (Visual Studio Community)\r\nAndroid SDK: /Users/perfectedtech/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.0\r\nSDK Build Tools Version: 27.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_152\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_152-b16)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.3.2\r\nHash: 461f09a\r\nBranch: 1.3-release\r\nBuild date: Tue, 03 Oct 2017 18:26:57 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.214 (Visual Studio Community)\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703000799\r\nGit revision: df590420ea5bc681994baefff2eabdaad889fba9\r\nBuild date: 2017-12-05 09:23:45-05\r\nXamarin addins: 51068d6eaf3b6fb4fbc72b33cb869b0ebff04ec5\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.0\r\nDarwin 17.0.0 Darwin Kernel Version 17.0.0\r\n    Thu Aug 24 21:48:19 PDT 2017\r\n    root:xnu-4570.1.46~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n\r\n```\r\nWebView = new WKWebView(instance.webview.Frame, new WKWebViewConfiguration()\r\n                {\r\n                    AllowsInlineMediaPlayback = true,\r\n                    MediaTypesRequiringUserActionForPlayback = WKAudiovisualMediaTypes.None,\r\n                    RequiresUserActionForMediaPlayback = false\r\n                });\r\n```\r\n"},{"Id":"7257251266","Type":"PullRequestEvent","CreatedAt":"2018-02-16T21:15:27","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3518","RelatedDescription":"Merged pull request \"Fix XM version for 15.7\" (#3518) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7257078011","Type":"PullRequestEvent","CreatedAt":"2018-02-16T20:33:24","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3519","RelatedDescription":"Merged pull request \"Bump XI XM version numbers\" (#3519) at xamarin/xamarin-macios","RelatedBody":"Bump XI XM version numbers"},{"Id":"7257060566","Type":"PullRequestEvent","CreatedAt":"2018-02-16T20:29:19","Actor":"MSylvia","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3519","RelatedDescription":"Opened pull request \"Bump XI XM version numbers\" (#3519) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"965038410061754371","CreatedAt":"2018-02-18T01:41:01+00:00","UserScreenname":"xamarinhq","Text":"Minimizes the complexity of video playback across Android, iOS, and Windows environments to deliver rich media expe… https://t.co/RWk7OAQZFR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":10,"RawContent":null},{"Id":"964574735530065920","CreatedAt":"2018-02-16T18:58:32+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/7nB0W3r0xF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":17,"RawContent":null},{"Id":"964541888152920064","CreatedAt":"2018-02-16T16:48:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/WXW0TRw6LE","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":10,"RawContent":null},{"Id":"964239391743979520","CreatedAt":"2018-02-15T20:46:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the just-released Xamarin.iOS and Xcode 9.3 Web Preview: https://t.co/2zZi61OBFp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"964183272367579136","CreatedAt":"2018-02-15T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss next week's webinar with @XamarinU on building your first intelligent app with #Xamarin and Microsoft… https://t.co/Dn5JtYz3iz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":16,"RawContent":null},{"Id":"963815851416834049","CreatedAt":"2018-02-14T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":22,"RawContent":null},{"Id":"963459759562199040","CreatedAt":"2018-02-13T17:08:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/mH5kYVNNvT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":19,"RawContent":null},{"Id":"963145186711830528","CreatedAt":"2018-02-12T20:18:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/ZG5Y2IRf3r","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":20,"RawContent":null},{"Id":"963094603065937920","CreatedAt":"2018-02-12T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the open source suite of SmartHotel360 reference #XamarinForms, Xamarin.iOS, and… https://t.co/5bwxwaCxyV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":129,"FavoriteCount":44,"RawContent":null},{"Id":"962828622875815936","CreatedAt":"2018-02-11T23:20:06+00:00","UserScreenname":"xamarinhq","Text":"Our own @jamesmontemagno shows you how to leverage the #Xamarin Live Player with your iOS applications:… https://t.co/389iYhDt9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":42,"RawContent":null},{"Id":"962480803748999168","CreatedAt":"2018-02-11T00:18:00+00:00","UserScreenname":"xamarinhq","Text":"Get a quick overview of the latest updates to the Xamarin iOS designer, including a new toolbar for managing trait… https://t.co/eJkPovjm0G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":16,"RawContent":null},{"Id":"962049464084062208","CreatedAt":"2018-02-09T19:44:00+00:00","UserScreenname":"xamarinhq","Text":"This week on the @XamarinPodcast, @JamesMontemagno and @pierceboggan talk rapid UI prototyping with Ink to Code, me… https://t.co/FTH39xKI1K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":19,"RawContent":null},{"Id":"962005422142967809","CreatedAt":"2018-02-09T16:49:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0Fi4MU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":94,"FavoriteCount":35,"RawContent":null},{"Id":"961696657250443269","CreatedAt":"2018-02-08T20:22:05+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/pUb6M2pQLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":85,"FavoriteCount":33,"RawContent":null},{"Id":"961642559880749056","CreatedAt":"2018-02-08T16:47:07+00:00","UserScreenname":"xamarinhq","Text":"Expand your app horizons by building your first #tvOS app with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/utcp887bgL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"961326059965870080","CreatedAt":"2018-02-07T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar with @XamarinU on building your first intelligent app with #Xamarin and Micro… https://t.co/lEsIH9mU1Q","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":41,"RawContent":null},{"Id":"961281908750635008","CreatedAt":"2018-02-07T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/48PO2bI3Mt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":19,"RawContent":null},{"Id":"960921785641455616","CreatedAt":"2018-02-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/OXIdlOPZyn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":13,"RawContent":null},{"Id":"960588991375511552","CreatedAt":"2018-02-05T19:00:37+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/sIDGF4Kcp0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":255,"FavoriteCount":129,"RawContent":null}]}},"RunOn":"2018-02-18T05:30:38.5858227Z","RunDurationInMilliseconds":3776}