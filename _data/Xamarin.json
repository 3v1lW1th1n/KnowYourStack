{"Data":{"Blog":{"FeedItems":[{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null},{"Title":"Xamarin.Forms and Zeplin: Speed Up Your Design to Development Process","PublishedOn":"2018-10-23T18:53:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Arnstein Johansen, a Norwegian software engineer interested in mobile and web development. He works for Itema AS, a consultant agency in Trondheim, Norway and a...","Href":"https://blog.xamarin.com/xamarin-forms-and-zeplin-speed-up-your-design-to-development-process/","RawContent":null},{"Title":"Xamarin.Forms 3.3.0: Little Things, Huge Difference","PublishedOn":"2018-10-18T19:06:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin.Forms team has been working closely with our open-source community to help fill in the “little things”. Things you’ve told us are important to building your mobile apps and being supremely...","Href":"https://blog.xamarin.com/xamarin-forms-3-3-0-little-things-huge-difference/","RawContent":null},{"Title":"Complex Animations in Xamarin.Forms using Finite State Machine","PublishedOn":"2018-10-16T17:32:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff, a Principal Engineer at Binwell. Microsoft MVP and Xamarin Certified experienced mobile cross-platform and native developer. Also, a previously...","Href":"https://blog.xamarin.com/complex-animations-xamarin-forms-using-finite-state-machine/","RawContent":null},{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8673530604","Type":"PullRequestEvent","CreatedAt":"2018-11-30T02:51:06","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2471","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] set $(AndroidSdkDirectory) if blank\" (#2471) at xamarin/xamarin-android","RelatedBody":"Commit 6e7be95b, applied to `Xamarin.Android.Binding.targets` too.\r\n\r\nAs with 6e7be95b, a downstream project in `monodroid` imports\r\n`Xamarin.Android.Bindings.targets` and uses `$(JavaSdkDirectory)`\r\nwithout otherwise setting it, resulting in build failures when it\r\nattempts to execute `/bin/javac`.\r\n\r\nAs with 6e7be95b, set the `$(JavaSdkPath)`, `$(AndroidNdkPath)`, and\r\n`$(AndroidSdkPath)` MSBuild properties if they're not already set."},{"Id":"8672595935","Type":"IssuesEvent","CreatedAt":"2018-11-29T22:40:02","Actor":"sensboston","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2470","RelatedDescription":"Opened issue \"Can't deploy/debug app to Samsung Galaxy S9 since last week\" (#2470) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Connect Samsung Galaxy S9 phone (dev. mode enabled, adb works, Android Studio works perfectly)\r\n2. Start deploying/debugging\r\n3. It takes forever (but 100% worked a couple of weeks ago), communication exception isn't handled correctly by Xamarin plugin. \r\n\r\n### Expected Behavior\r\nIt should work as it worked before, two weeks ago (with this SGS9). By the way, it works with another Android phone, LG G3.\r\n\r\n### Actual Behavior\r\nFrom the logs: I'm getting an exception:\r\n``\r\nMonoDroidLog: Error: 0: [E:]:                     Deployment failed\r\nMono.AndroidTools.AdbException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. ---> System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n   at System.Net.Sockets.Socket.EndReceive(IAsyncResult asyncResult)\r\n   at System.Net.Sockets.NetworkStream.EndRead(IAsyncResult asyncResult)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Sockets.NetworkStream.EndRead(IAsyncResult asyncResult)\r\n   at Mono.AndroidTools.Adb.AdbClient.ReadText_OnReadText(IAsyncResult ar) in E:\\A\\_work\\157\\s\\External\\androidtools\\Mono.AndroidTools\\Adb\\AdbClient.cs:line 548\r\n   --- End of inner exception stack trace ---\r\n   at Mono.AndroidTools.Util.AggregateAsyncResult.CheckError(CancellationToken token) in E:\\A\\_work\\157\\s\\External\\androidtools\\Mono.AndroidTools\\Util\\AggregateAsyncResult.cs:line 72\r\n   at Mono.AndroidTools.Adb.AdbClient.EndReadText(IAsyncResult ar) in E:\\A\\_work\\157\\s\\External\\androidtools\\Mono.AndroidTools\\Adb\\AdbClient.cs:line 563\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n``\r\n\r\n**Please note**: there is NOTHING wrong with the phone and my PC setup; adb, Android Studio are working correctly, USB 3.0 connection is fast as a hell. The issue is in Xamarin but I'm unsure about the roots: latest Xamarin update or SGS9 update. \r\n\r\n### Version Information\r\n[version.txt.zip](https://github.com/xamarin/xamarin-android/files/2631137/version.txt.zip)\r\n\r\n### Log File\r\n[logs.zip](https://github.com/xamarin/xamarin-android/files/2631134/logs.zip)\r\n\r\n"},{"Id":"8670598517","Type":"PullRequestEvent","CreatedAt":"2018-11-29T16:52:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2381","RelatedDescription":"Merged pull request \"Enable Aapt2 by default\" (#2381) at xamarin/xamarin-android","RelatedBody":"This Commit enables `aapt2` as the default resource processor. \r\nIt can be disabled by setting the `AndroidUseAapt2` to false in your csproj.\r\n\r\nThis Commit also fixes a small issue with compiling library resources. The scenario is as follows.\r\nThe main app project references a library which contains resources. \r\n\r\n`Resource\\drawable\\foo.png`\r\n`Resource\\layout\\foo.xml`\r\n\r\nOn first build this works as expected. Then the user updates `foo.xml`. The next build will NOT refresh the `flata` file for the library. This is because `CollectNonEmptyDirectories` only looks for the first file in the library `res` directory. This file was then used as an input to the targets `_ConvertLibraryResourcesCases` and `_CompileAndroidLibraryResources`. The problem is that first file probably didn't change. And in this example it doesn't. As a result the `flata` file will not be updated. \r\n\r\nWhat we should have been doing was using the library `stamp` file as the inputs. This is because when we do extract new/updated files from the library that `stamp` file is modified. By using the `stamp` file for the inputs we know that those targets will be run."},{"Id":"8669729556","Type":"PullRequestEvent","CreatedAt":"2018-11-29T14:56:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2469","RelatedDescription":"Opened pull request \"[build] Do not build obsolete Mono.Android assemblies\" (#2469) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1032\r\n\r\nWe previously obsoleted support for API levels earlier than API-19;\r\nsee commit 66e1b655.\r\n\r\nNext up: stop *building* `Mono.Android.dll` and related assemblies for\r\nAPI levels earlier than API-19, and stop *shipping* `Mono.Android.dll`\r\nassemblies for `$(TargetFrameworkVersion)` values before `v4.4` (19).\r\n\r\nPR #1032 previously tried to do this, and failed, because it attempted\r\nto do \"too much,\" removing code from `Mono.Android.dll` *as well as*\r\nremoving support for *building* the obsolete API levels.\r\n\r\nSimplify things by *just* altering the build system and *not* the\r\nsource code within `Mono.Android.dll`."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8673812733","Type":"PullRequestEvent","CreatedAt":"2018-11-30T04:22:53","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4522","RelatedDescription":"Merged pull request \"[Shell] The glorious Shell\" (#4522) at xamarin/Xamarin.Forms","RelatedBody":"the glorious shell, as-is, behind a feature flag. some parts still need love/fixes\r\n\r\nfixes #2415"},{"Id":"8673812725","Type":"IssuesEvent","CreatedAt":"2018-11-30T04:22:53","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2415","RelatedDescription":"Closed issue \"Xamarin.Forms.Shell Spec\" (#2415) at xamarin/Xamarin.Forms","RelatedBody":"# Xamarin.Forms Shell Spec\r\nMake it simple and straightforward for new developers to get a complete app experience that is properly structured, uses the right elements, with very little effort and a clear path to being good by default.\r\n\r\nShell is an opinionated API at points, it does not always default every value to some .Default which may change based on the running platform. Instead it may set a value which is then respected across all platforms regardless what the platform default is.\r\n\r\nNote: Drawing Spec moved to: #2452\r\n\r\n# Visual Treatment\r\nNeeds screenshots...\r\n\r\n# Shell Hierarchy\r\nUnderstanding the Shell hierarchy at first can seem overwhelming at first. It represents a complex hierarchy and provides powerful mechanisms for minimizing the amount of boilerplate xaml required to create rich hierarchies.\r\n\r\nThus when first learning shell it is easiest to learn without the shortcuts first, and then introduce the shortcuts to see how to easily minimize the amount of XAML being written.\r\n\r\nNote that all samples that follow do not use templated ShellContent's, which are discussed elsewhere in the spec. Failure to properly use ShellContents with a ContentTemplate will result in all pages being loaded at startup, which will negatively impact startup performance. These samples are for learning purposes only.\r\n\r\nFortunately using ShellContents with ContentTemplates is usually more concise than not using them.\r\n\r\n## No shortcuts\r\nMany of these samples will look needlessly complex, and in reality they are. In the next section these will get simplified.\r\n\r\n### A simple one page app\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n    <ShellSection>\r\n      <ShellContent>\r\n        <local:HomePage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n![step1](https://user-images.githubusercontent.com/30443/40998552-09aa2c7e-68bd-11e8-9ba3-e92d8ec76344.PNG)\r\n\r\nThe top bar can be hidden entirely by setting `Shell.NavBarVisible=\"false\"` on the MainPage. The Flyout would also look rather sparse in this mode and is thus disabled in this sample.\r\n\r\n### Two page app with bottom tabs\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n\r\n    <ShellSection Title=\"Home\" Icon=\"home.png\">\r\n      <ShellContent>\r\n        <local:HomePage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n\r\n    <ShellSection Title=\"Notifications\" Icon=\"bell.png\">\r\n      <ShellContent>\r\n        <local:NotificationsPage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n![step2](https://user-images.githubusercontent.com/30443/40998559-0e9fb3b6-68bd-11e8-819e-9dcdee3d396e.PNG)\r\n\r\nBy adding a section `ShellSection` to the `ShellItem` another bottom tab appears. Settings the approriate title and icon allows control over the Tab item title and icon.\r\n\r\n### Two page app with top and bottom tabs\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n\r\n    <ShellSection Title=\"Home\" Icon=\"home.png\">\r\n      <ShellContent>\r\n        <local:HomePage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n\r\n    <ShellSection Title=\"Notifications\" Icon=\"bell.png\">\r\n\r\n      <ShellContent Title=\"Recent\">\r\n        <local:NotificationsPage />\r\n      </ShellContent>\r\n\r\n      <ShellContent Title=\"Alert Settings\">\r\n        <local:SettingsPage />\r\n      </ShellContent>\r\n\r\n    </ShellSection>\r\n\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n![step3](https://user-images.githubusercontent.com/30443/40998570-140b5382-68bd-11e8-968d-f7c6b87d50bf.PNG)\r\n\r\nBy adding a second `ShellContent` to the `ShellSection` a top tab bar is added and the pages can be flipped between when the bottom tab is selected.\r\n\r\n### Two page app using flyout navigation\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <Shell.FlyoutHeader>\r\n    <local:FlyoutHeader />\r\n  </Shell.FlyoutHeader>\r\n\r\n  <ShellItem Title=\"Home\" Icon=\"home.png\">\r\n    <ShellSection>\r\n      <ShellContent>\r\n        <local:HomePage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n  </ShellItem>\r\n\r\n  <ShellItem Title=\"Notifications\" Icon=\"bell.png\">\r\n    <ShellSection>\r\n      <ShellContent>\r\n        <local:NotificationsPage />\r\n      </ShellContent>\r\n    </ShellSection>\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n![step4](https://user-images.githubusercontent.com/30443/40998574-17ca458c-68bd-11e8-8d45-639933e0dfd7.PNG)\r\n\r\nThe flyout is re-enabled in this sample. Here the user can switch between the two pages using the flyout as an intermediary. A header has also been added to look nice.\r\n\r\n## Using shorthand syntax\r\n\r\nNow that all levels of the hierarchy have been shown and breifly explained, it is possible to leave most of the unneeded wrapping out when defining a hierarchy. `Shell` only ever contains `ShellItem`s which only ever contain `ShellSection`s which in turn only ever contain `ShellContent`s. However there are implicit conversion operators in place to allow for automatic up-wrapping.\r\n\r\n### A simple one page app\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <local:HomePage />\r\n</Shell>\r\n```\r\n\r\nWith implicit wrapping the Page is automatically wrapped all the way up to a `ShellItem`. It is not needed to write out all the intermiedate layers. The `Title` and `Icon` from the `Page` will be bound up to any implicitly generated parents.\r\n\r\n### Two page app with bottom tabs\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n    <local:HomePage Icon=\"home.png\" />\r\n    <local:NotificationsPage Icon=\"bell.png\" />\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\nThe pages are now implicitly wrapped up into ShellContent and their own ShellSections. This results in two different tabs being created, just like before.\r\n\r\n### Two page app with top and bottom tabs\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem>\r\n    <local:HomePage Icon=\"home.png\" />\r\n\r\n    <ShellSection Title=\"Notifications\" Icon=\"bell.png\">\r\n        <local:NotificationsPage />\r\n        <local:SettingsPage />\r\n    </ShellSection>\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n\r\n### Two page app using flyout navigation\r\n```xaml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n       xmlns:local=\"clr-namespace:MyStore\"\r\n       x:Class=\"MyStore.Shell\">\r\n\r\n  <Shell.FlyoutHeader>\r\n    <local:FlyoutHeader />\r\n  </Shell.FlyoutHeader>\r\n\r\n  <local:HomePage Icon=\"home.png\" />\r\n  <local:NotificationsPage Icon=\"bell.png\" />\r\n</Shell>\r\n```\r\n\r\nHere the implicit wrapping goes all the way up to shell item so there is no need for us to do any wrapping ourselves.\r\n\r\n# Navigation Model\r\n## Push Navigation\r\n\r\nAll navigation is based on the View’s .Navigation property. Pushes go into the current ShellSection that is displayed. This means in a push event the top tabs will go away and the bottom tabs will remain.\r\n\r\n## URI Navigation\r\nThe Shell can be navigated using the standard Navigation property as discussed above, however shell introduces a far more convenient navigation mechanism.\r\n\r\nNavigation URI's are formatted as follows:\r\n\r\n```\r\n[Shell.RouteScheme]://[Shell.RouteHost]/[Shell]/[ShellItem]/[ShellSection]/[ShellContent]/[NavStack1]/[NavStack2]...\r\n```\r\n\r\nAll items in the shell hierarchy have a route associated with them. If the route is not set by the developer, the route is generated at runtime. Runtime generated routes are not gauranteed to be stable across different runs of the app and thus are not useful for deep linking.\r\n\r\n# Handling the Back Button\r\n\r\nSince Shell will be in the enviable position of not having to use native controls, all forms of back button overriding can and should be supported.\r\n\r\nProper handling of the back button needs to support the following features:\r\n\r\n\r\n- Intercepting interactions and stopping them\r\n- Replacing the back button with something else\r\n- Hiding the back button entirely when desired\r\n- Work for software and hardware buttons\r\n\r\nThe API needs to be granular to the page level for ease of use, but also be able to be handled further up the stack in a more general level.\r\n\r\n# Code Samples and API\r\n## Samples\r\n```xaml\r\n<Shell>\r\n  <Shell.FlyoutHeaderTemplate>\r\n    <DataTemplate>\r\n      <Grid>\r\n        <Label Text=\"{x:Bind HeaderText}\" />\r\n      </Grid>\r\n    </DataTemplate>\r\n  </Shell.FlyoutHeaderTemplate>\r\n  \r\n  // Flyout Item 1\r\n  <ShellItem Title=\"My music\" ItemsSource=\"{x:Bind MyMusicModels}\" TabLocation=\"Bottom\">\r\n    <ShellItem.ItemTemplate>\r\n      <local:MyMusicItemTemplateSelection />\r\n    </ShellItem.ItemTemplate>\r\n  </ShellItem>\r\n  \r\n  // Flyout Item 2\r\n  <ShellItem Title=\"Home\" Icon=\"home.png\" GroupBehavior=\"ShowTabs\">\r\n    <ShellContent Title=\"My Friends\">\r\n      <local:FriendsPage />\r\n    </ShellContent>\r\n    <local:FeedPage />\r\n    <local:ProfilePage />\r\n  </ShellItem>\r\n  \r\n  // Flyout Item 3\r\n  <local:SettingsPage />\r\n  \r\n  // Flyout Item 4\r\n  <MenuItem Text=\"Log Out\" Command=\"{x:Bind LogOutCommand}\" />\r\n</Shell>\r\n```\r\n### Single Page App using Shell\r\n```xaml\r\n<Shell FlyoutVisibility=\"Disabled\">\r\n  <local:MyPage />\r\n</Shell>\r\n```\r\n### Single Group of Tabs app (no Flyout)\r\n```xaml\r\n<Shell FlyoutVisibility=\"Disabled\">\r\n  <ShellItem>\r\n    <local:MyPage />\r\n    <local:MySecondPage />\r\n    <local:MyThirdPage />\r\n  </ShellItem>\r\n</Shell>\r\n```\r\n### Multiple pages in flyout with no tabs\r\n```xaml\r\n<Shell FlyoutVisibility=\"Disabled\">\r\n  <local:MyPage />\r\n  <local:MySecondPage />\r\n  <local:MyThirdPage />\r\n</Shell>\r\n```\r\n### Single Page Searchable App\r\n```xaml\r\n<Shell FlyoutVisibility=\"Disabled\">\r\n  <local:MyPage />\r\n</Shell>\r\n```\r\n```csharp\r\npublic class MyPage : ContentPage\r\n{\r\n  public class MyPageSearchHandler : SearchHandler\r\n  {\r\n    public MyPageHandler ()\r\n    {\r\n      SearchBoxVisibility = SearchBoxVisibility.Collapsed;\r\n      IsSearchEnabled = true;\r\n      Placeholder = \"Search me!\";\r\n    }\r\n\r\n    protected override async void OnSearchConfirmed (string query)\r\n    {\r\n      IsSearching = true;\r\n    \r\n      await PerformSearch (query);\r\n      UpdateResults ();\r\n      \r\n      IsSearching = false;\r\n    }\r\n    \r\n    protected override void OnSearchChanged (string oldValue, string newValue)\r\n    {\r\n      // Do nothing, we will wait for confirmation\r\n    }\r\n  }\r\n\r\n  public MyPage ()\r\n  {\r\n    Shell.SetSearchHandler (this, new MyPageSearchHandler ());\r\n  }\r\n}\r\n```\r\n## API Definition\r\n\r\n### Shell\r\nThis is the base class for Shell's. It defines a somewhat strict navigational model however all shells must adhere to it in general. It does not include any theming or design language specific features.\r\n\r\n```csharp\r\n[ContentProperty(\"Items\")]\r\npublic class Shell : Page, IShellController\r\n{\r\n  // Attached Properties\r\n  public static readonly BindableProperty BackButtonBehaviorProperty;\r\n  public static readonly BindableProperty FlyoutBehaviorProperty;\r\n  public static readonly BindableProperty NavBarVisibleProperty;\r\n  public static readonly BindableProperty SearchHandlerProperty;\r\n  public static readonly BindableProperty SetPaddingInsetsProperty;\r\n  public static readonly BindableProperty TabBarVisibleProperty;\r\n  public static readonly BindableProperty TitleViewProperty;\r\n  public static readonly BindableProperty ShellBackgroundColorProperty;\r\n  public static readonly BindableProperty ShellDisabledColorProperty;\r\n  public static readonly BindableProperty ShellForegroundColorProperty;\r\n  public static readonly BindableProperty ShellTabBarBackgroundColorProperty;\r\n  public static readonly BindableProperty ShellTabBarDisabledColorProperty;\r\n  public static readonly BindableProperty ShellTabBarForegroundColorProperty;\r\n  public static readonly BindableProperty ShellTabBarTitleColorProperty;\r\n  public static readonly BindableProperty ShellTabBarUnselectedColorProperty;\r\n  public static readonly BindableProperty ShellTitleColorProperty;\r\n  public static readonly BindableProperty ShellUnselectedColorProperty;\r\n\r\n  public static BackButtonBehavior GetBackButtonBehavior(BindableObject obj);\r\n  public static FlyoutBehavior GetFlyoutBehavior(BindableObject obj);\r\n  public static bool GetNavBarVisible(BindableObject obj);\r\n  public static SearchHandler GetSearchHandler(BindableObject obj);\r\n  public static bool GetSetPaddingInsets(BindableObject obj);\r\n  public static bool GetTabBarVisible(BindableObject obj);\r\n  public static View GetTitleView(BindableObject obj);\r\n  public static void SetBackButtonBehavior(BindableObject obj, BackButtonBehavior behavior);\r\n  public static void SetFlyoutBehavior(BindableObject obj, FlyoutBehavior value);\r\n  public static void SetNavBarVisible(BindableObject obj, bool value);\r\n  public static void SetSearchHandler(BindableObject obj, SearchHandler handler);\r\n  public static void SetSetPaddingInsets(BindableObject obj, bool value);\r\n  public static void SetTabBarVisible(BindableObject obj, bool value);\r\n  public static void SetTitleView(BindableObject obj, View value);\r\n  public static Color GetShellBackgroundColor(BindableObject obj);\r\n  public static Color GetShellDisabledColor(BindableObject obj);\r\n  public static Color GetShellForegroundColor(BindableObject obj);\r\n  public static Color GetShellTabBarBackgroundColor(BindableObject obj);\r\n  public static Color GetShellTabBarDisabledColor(BindableObject obj);\r\n  public static Color GetShellTabBarForegroundColor(BindableObject obj);\r\n  public static Color GetShellTabBarTitleColor(BindableObject obj);\r\n  public static Color GetShellTabBarUnselectedColor(BindableObject obj);\r\n  public static Color GetShellTitleColor(BindableObject obj);\r\n  public static Color GetShellUnselectedColor(BindableObject obj);\r\n  public static void SetShellBackgroundColor(BindableObject obj, Color value);\r\n  public static void SetShellDisabledColor(BindableObject obj, Color value);\r\n  public static void SetShellForegroundColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarBackgroundColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarDisabledColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarForegroundColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarTitleColor(BindableObject obj, Color value);\r\n  public static void SetShellTabBarUnselectedColor(BindableObject obj, Color value);\r\n  public static void SetShellTitleColor(BindableObject obj, Color value);\r\n  public static void SetShellUnselectedColor(BindableObject obj, Color value);\r\n\r\n  // Bindable Properties\r\n  public static readonly BindableProperty CurrentItemProperty;\r\n  public static readonly BindableProperty CurrentStateProperty;\r\n  public static readonly BindableProperty FlyoutBackgroundColorProperty;\r\n  public static readonly BindableProperty FlyoutHeaderBehaviorProperty;\r\n  public static readonly BindableProperty FlyoutHeaderProperty;\r\n  public static readonly BindableProperty FlyoutHeaderTemplateProperty;\r\n  public static readonly BindableProperty FlyoutIsPresentedProperty;\r\n  public static readonly BindableProperty GroupHeaderTemplateProperty;\r\n  public static readonly BindableProperty ItemsProperty;\r\n  public static readonly BindableProperty ItemTemplateProperty;\r\n  public static readonly BindableProperty MenuItemsProperty;\r\n  public static readonly BindableProperty MenuItemTemplateProperty;\r\n\r\n  public Shell();\r\n\r\n  public event EventHandler<ShellNavigatedEventArgs> Navigated;\r\n\r\n  public event EventHandler<ShellNavigatingEventArgs> Navigating;\r\n\r\n  public ShellItem CurrentItem {get; set;}\r\n\r\n  public ShellNavigationState CurrentState {get; }\r\n\r\n  public Color FlyoutBackgroundColor {get; set;}\r\n\r\n  public FlyoutBehavior FlyoutBehavior {get; set;}\r\n\r\n  public object FlyoutHeader {get; set;}\r\n\r\n  public FlyoutHeaderBehavior FlyoutHeaderBehavior {get; set;}\r\n\r\n  public DataTemplate FlyoutHeaderTemplate {get; set;}\r\n\r\n  public bool FlyoutIsPresented {get; set;}\r\n\r\n  public DataTemplate GroupHeaderTemplate {get; set;}\r\n\r\n  public ShellItemCollection Items {get; }\r\n\r\n  public DataTemplate ItemTemplate {get; set;}\r\n\r\n  public MenuItemCollection MenuItems {get; }\r\n\r\n  public DataTemplate MenuItemTemplate {get; set;}\r\n\r\n  public string Route {get; set;}\r\n\r\n  public string RouteHost { get; set; }\r\n\r\n  public string RouteScheme { get; set; }\r\n\r\n  public async Task GoToAsync(ShellNavigationState state, bool animate = true);\r\n\r\n  protected virtual void OnNavigated(ShellNavigatedEventArgs args);\r\n\r\n  protected virtual void OnNavigating(ShellNavigatingEventArgs args);\r\n}\r\n```\r\n#### Description\r\n\r\nAttached Properties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| SearchHandlerProperty | Attached property for the definition of a page level Search capability. Can be attached at multiple points in the hierarchy.   Uses some of the features defined here https://material.io/guidelines/patterns/search.html#search-in-app-search |\r\n| BackButtonBehavior | Allows complete override of how the back button behaves. Applies to on-screen and physical back buttons. |\r\n| FlyoutBehavior | Defines how the Flyout should present itself. This can be attached to `ShellItem`s, `ShellContent`s, or `Page`s to override the default behavior. |\r\n| NavBarVisibleProperty | Property set on a `Page` to define if the NavBar should be visible when it is presented |\r\n| SetPaddingInsetsProperty | Setting this property on a `Page` will cause its `Padding` to be set such that its content will not flow under any Shell chrome. |\r\n| TabBarVisibleProperty | Property set on a `Page` to define if the TabBar should be visible when it is presented |\r\n| TitleViewProperty | Property set on a `Page` to define the `TitleView` |\r\n| ShellBackgroundColorProperty | Describes the background color which should be used for the chrome elements of the Shell. This color will not fill in behind the Content of the Shell. |\r\n| ShellDisabledColorProperty | The color to shade text/icons which are disabled |\r\n| ShellForegroundColorProperty | The color to shade normal text/icons in the shell |\r\n| ShellTabBarBackgroundColorProperty | Override of ShellBackgroudnColor for the TabBar. If not set ShellBackgroundColor will be used |\r\n| ShellTabBarDisabledColorProperty | Override of ShellDisabledColor for the TabBar. If not set ShellDisabledColorProperty will be used |\r\n| ShellTabBarForegroundColorProperty | Override of ShellForegroundColorProperty for the TabBar. If not set ShellForegroundColorProperty will be used |\r\n| ShellTabBarTitleColorProperty | Override of ShellTitleColorProperty for the TabBar. If not set ShellTitleColorProperty will be used |\r\n| ShellTabBarUnselectedColorProperty | Override of ShellUnselectedColorProperty for the TabBar. If not set ShellUnselectedColorProperty will be used |\r\n| ShellTitleColorProperty | The color used for the title of the current Page |\r\n| ShellUnselectedColorProperty | The color used for unselected text/icons in the shell chrome |\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| CurrentItem | The currently selected ShellItem |\r\n| CurrentState | The current navigation state of the Shell. Passing this state back to GoToAsync will cause the Shell to return to navigate back state. |\r\n| FlyoutBackgroundColorProperty | The background color of the Flyout menu |\r\n| FlyoutBehavior | Sets the default `FlyoutBehavior` for the `Shell`. |\r\n| FlyoutHeader | The object used as the Header of the Flyout. If `FlyoutHeaderTemplate` is not null, this is passed as the `BindingContext` to the inflated object. If `FlyoutHeaderTemplate` is null and `FlyoutHeader` is of type `View` it will be used directly. Otherwise it will be shown by calling ToString() and displaying the result. |\r\n| FlyoutHeaderBehavior | Sets the behavior of the `FlyoutHeader` when the Flyout needs to be scrolled to show contents. |\r\n| FlyoutHeaderTemplate | The template used to create a header for the Flyout. |\r\n| FlyoutIsPresented | Gets or sets whether or not the Flyout is current visible |\r\n| GroupHeaderTemplate | The `DataTemplate` used to show a Group Header if a `ShellItem` requests to be displayed as a Group of Tabs in the Flyout. If null, no header is displayed. |\r\n| Items | The primary Content of a Shell. Items define the list of items that will show in the Flyout as well as the content that will be displayed when a sidebar item is selected. |\r\n| ItemTemplate | The `DataTemplate` used to show items from the `Items` collection in the Flyout. Allows the developer to control visuals in the Flyout. |\r\n| MenuItems | A collection of `MenuItem`s which will show up in the flyout in their own section. |\r\n| MenuItemTemplate | The `DataTemplate` to use when displayed a `MenuItem` in the Flyout. |\r\n| Route | The route part to address this element when performing deep linking. |\r\n| RouteHost | The string to place in the host portion of the URI generated when creating deep-links |\r\n| RouteScheme | The string to place in the scheme portion of the URI generated when creating deep-links |\r\n\r\nPublic Methods:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| GoToAsync | Navigate to a `ShellNavigationState`. Returns a Task which will complete once the animation has completed. |\r\n\r\nPublic Events:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Navigating | The `Shell` is about to perform a Navigation either due to user interaction or the developer calling an API. The developer may cancel Navigation here if possible. |\r\n| Navigated | The `Shell` has completed a Navigation event. |\r\n\r\n### ShellItemCollection\r\nA collection for `ShellItem`s\r\n```csharp\r\npublic sealed class ShellItemCollection : IEnumerable<ShellItem>, IList<ShellItem>\r\n```\r\n\r\n### MenuItemCollection\r\nA collection for `MenuItem`s\r\n```csharp\r\npublic sealed class MenuItemCollection : IEnumerable<MenuItem>, IList<MenuItem>\r\n```\r\n\r\n### ShellSectionCollection\r\nA collection for `ShellSection`s\r\n```csharp\r\npublic sealed class ShellSectionCollection : IEnumerable<ShellSection>, IList<ShellSection>\r\n```\r\n\r\n### ShellContentCollection\r\nA collection for `ShellContent`s\r\n```csharp\r\npublic sealed class ShellContentCollection : IEnumerable<ShellContent>, IList<ShellContent>\r\n```\r\n\r\n### ShellNavigatingEventArgs\r\nAn `EventArgs` used to describe a navigation event which is about to occur. The `ShellNavigationEventArgs` may also be used to cancel the navigation event if the developer desires.\r\n```csharp\r\npublic class ShellNavigatingEventArgs : EventArgs\r\n{\r\n  public ShellNavigationState Current { get; }\r\n\r\n  public ShellNavigationState Target { get; }\r\n\r\n  public ShellNavigationSource Source { get; }\r\n\r\n  public bool CanCancel { get; }\r\n\r\n  public bool Cancel ();\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Current | The current NavigationState of the `Shell`. Calling `GoToAsync` with this `ShellNavigationState` will effectively undo this navigation event. |\r\n| Target | The state the `Shell` will be in after this navigation event completes. |\r\n| Source | The type of navigation which occurred to trigger this event. There may be multiple flags set. |\r\n| CanCancel | Whether or not the navigation event is cancellable. Not all events can be cancelled. |\r\n\r\nPublic Methods:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Cancel | Cancels the current navigation event. Returns true if the cancellation was succesful. |\r\n\r\n### ShellNavigatedEventArgs\r\n```csharp\r\npublic class ShellNavigatedEventArgs : EventArgs\r\n{\r\n  public ShellNavigationState Previous { get; }\r\n\r\n  public ShellNavigationState Current { get; }\r\n\r\n  public ShellNavigationSource Source { get; }\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Previous | The prior NavigationState of the `Shell`. |\r\n| Current | The new state the `Shell` is in when this navigation event completed. |\r\n| Source | The type of navigation which occurred to trigger this event. There may be multiple flags set. |\r\n\r\n### ShellNavigationState\r\n```csharp\r\npublic class ShellNavigationState\r\n{\r\n  public Uri Location { get; set; }\r\n\r\n  public ShellNavigationState ();\r\n  public ShellNavigationState (string location);\r\n  public ShellNavigationState (Uri uri);\r\n\r\n  public static implicit operator ShellNavigationState (Uri uri);\r\n  public static implicit operator ShellNavigationState (String value);\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Location | The Uri which describes the navigation state of the `Shell` |\r\n\r\nConstructors:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| (void) | Creates a new `ShellNavigationState` with a null Location |\r\n| (String) | Creates a new `ShellNavigationState` with the Location set to the supplied `string` |\r\n| (Uri) | Creates a new `ShellNavigationState` with the Location set to the supplied `Uri` |\r\n\r\n\r\n### ShellNavigationSource\r\n```csharp\r\n[Flags]\r\npublic enum ShellNavigationSource\r\n{\r\n  Unknown = 0,\r\n  Push,\r\n  Pop,\r\n  PopToRoot,\r\n  Insert,\r\n  Remove,\r\n  ShellItemChanged,\r\n  ShellSectionChanged,\r\n  ShellContentChanged,\r\n}\r\n```\r\n\r\n### BaseShellItem\r\n```caharp\r\npublic class BaseShellItem : NavigableElement\r\n{\r\n  public static readonly BindableProperty FlyoutIconProperty;\r\n  public static readonly BindableProperty IconProperty;\r\n  public static readonly BindableProperty IsCheckedProperty;\r\n  public static readonly BindableProperty IsEnabledProperty;\r\n  public static readonly BindableProperty TitleProperty;\r\n\r\n  public ImageSource FlyoutIcon { get; set; }\r\n\r\n  public ImageSource Icon { get; set; }\r\n\r\n  public bool IsChecked { get; }\r\n\r\n  public bool IsEnabled { get; set; }\r\n\r\n  public string Route { get; set; }\r\n\r\n  public string Title { get; set; }\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| FlyoutIcon | The default icon to use when displayed in the Flyout. Will default to Icon if not set. |\r\n| Icon | The icon to display in parts of the chrome which are not the Flyout. |\r\n| IsChecked | If the `BaseShellItem` is currently checked in the Flyout (and thus should be highlighted) |\r\n| IsEnabled | If the the `BaseShellItem` is selectable in the chrome |\r\n| Route | Equivelant to setting Routing.Route |\r\n| Title | The Title to display in the UI |\r\n\r\n### ShellGroupItem\r\n\r\n```csharp\r\npublic class ShellGroupItem : BaseShellItem\r\n{\r\n  public static readonly BindableProperty FlyoutDisplayOptionsProperty;;\r\n\r\n  public FlyoutDisplayOptions FlyoutDisplayOptions { get; set; }\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| FlyoutDisplayOptions | Controls how this item and its children are displayed in the flyout |\r\n\r\n### ShellItem\r\n```csharp\r\n[ContentProperty(\"Items\")]\r\npublic class ShellItem : ShellGroupItem, IShellItemController, IElementConfiguration<ShellItem>\r\n{\r\n  public static readonly BindableProperty CurrentItemProperty;\r\n\r\n  public ShellItem();\r\n\r\n  public ShellSection CurrentItem { get; set; }\r\n\r\n  public ShellSectionCollection Items;\r\n\r\n  public static implicit operator ShellItem(ShellSection shellSection);\r\n\r\n  public static implicit operator ShellItem(ShellContent shellContent);\r\n\r\n  public static implicit operator ShellItem(TemplatedPage page);\r\n\r\n  public static implicit operator ShellItem(MenuItem menuItem);\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| CurrentItem | The selected `ShellSection`. |\r\n| Items | The `ShellSectionCollection` which is the primary content of a ShellItem. This collection defines all the tabs within a ShellItem. |\r\n\r\n### ShellSection\r\n```csharp\r\n[ContentProperty(\"Items\")]\r\npublic class ShellSection : ShellGroupItem, IShellSectionController\r\n{\r\n  public static readonly BindableProperty CurrentItemProperty;\r\n  public static readonly BindableProperty ItemsProperty\r\n\r\n  public ShellSection();\r\n\r\n  public ShellContent CurrentItem { get; set; }\r\n\r\n  public ShellContentCollection Items { get; }\r\n\r\n  public IReadOnlyList<Page> Stack { get; }\r\n\r\n  public static implicit operator ShellSection(ShellContent shellContent);\r\n\r\n  public virtual async Task GoToAsync(List<string> routes, IDictionary<string, string> queryData, bool animate);\r\n\r\n  protected virtual IReadOnlyList<Page> GetNavigationStack();\r\n\r\n  protected virtual void OnInsertPageBefore(Page page, Page before);\r\n\r\n  protected async virtual Task<Page> OnPopAsync(bool animated);\r\n\r\n  protected virtual async Task OnPopToRootAsync(bool animated);\r\n\r\n  protected virtual Task OnPushAsync(Page page, bool animated);\r\n\r\n  protected virtual void OnRemovePage(Page page);\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| CurrentItem | The selected `ShellContent` of the ShellSection. |\r\n| Items | The `ShellContentCollection` which is the root content of the ShellSection. |\r\n| Stack | The current pushed navigation stack on the ShellSection. |\r\n\r\nMethods:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| GoToAsync | Used by deep-linking to navigate to a known location. Should not need to be called directly in most cases. |\r\n| GetNavigationStack | Returns the current navigation stack |\r\n| OnInsertPageBefore | Called when the `INavigation` interfaces `InsertPageBefore` method is called |\r\n| OnPopAsync | Called when the `INavigation` interfaces `PopAsync` method is called |\r\n| OnPopToRootAsync | Called when the `INavigation` interfaces `PopToRootAsync` method is called |\r\n| OnPushAsync | Called when the `INavigation` interfaces `PushAsync` method is called |\r\n| OnRemovePage | Called when the `INavigation` interfaces `RemovePage` method is called |\r\n\r\n### ShellContent\r\n```csharp\r\n[ContentProperty(\"Content\")]\r\npublic class ShellContent : BaseShellItem, IShellContentController\r\n{\r\n  public static readonly BindableProperty ContentProperty;\r\n  public static readonly BindableProperty ContentTemplateProperty;\r\n  public static readonly BindableProperty MenuItemsProperty;\r\n\r\n  public ShellContent();\r\n\r\n  public object Content { get; set; }\r\n\r\n  public DataTemplate ContentTemplate { get; set; }\r\n\r\n  public MenuItemCollection MenuItems { get; }\r\n\r\n  public static implicit operator ShellContent(TemplatedPage page);\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Content | The Content of a ShellContent. Usually a `ContentPage` or the `BindingContext` of the `Page` inflated by the `ContentTemplate` |\r\n| ContentTemplate | Used to dynamically inflate the content of the `ShellContent`. The `Content` property will be set as the `BindingContext` after inflation. |\r\n| MenuItems | The items to display in the Flyout when this ShellContent is the presented page |\r\n\r\n### SearchHandler\r\n```csharp\r\npublic class SearchHandler : BindableObject, ISearchHandlerController\r\n{\r\n  public static readonly BindableProperty ClearIconHelpTextProperty;\r\n  public static readonly BindableProperty ClearIconNameProperty;\r\n  public static readonly BindableProperty ClearIconProperty;\r\n  public static readonly BindableProperty ClearPlaceholderCommandParameterProperty;\r\n  public static readonly BindableProperty ClearPlaceholderCommandProperty;\r\n  public static readonly BindableProperty ClearPlaceholderEnabledProperty;\r\n  public static readonly BindableProperty ClearPlaceholderHelpTextProperty;\r\n  public static readonly BindableProperty ClearPlaceholderIconProperty;\r\n  public static readonly BindableProperty ClearPlaceholderNameProperty;\r\n  public static readonly BindableProperty CommandParameterProperty;\r\n  public static readonly BindableProperty CommandProperty;\r\n  public static readonly BindableProperty DisplayMemberNameProperty;\r\n  public static readonly BindableProperty IsSearchEnabledProperty;\r\n  public static readonly BindableProperty ItemsSourceProperty;\r\n  public static readonly BindableProperty ItemTemplateProperty;\r\n  public static readonly BindableProperty PlaceholderProperty;\r\n  public static readonly BindableProperty QueryIconHelpTextProperty;\r\n  public static readonly BindableProperty QueryIconNameProperty;\r\n  public static readonly BindableProperty QueryIconProperty;\r\n  public static readonly BindableProperty QueryProperty;\r\n  public static readonly BindableProperty SearchBoxVisibilityProperty;\r\n  public static readonly BindableProperty ShowsResultsProperty;\r\n\r\n  public ImageSource ClearIcon { get; set; }\r\n\r\n  public string ClearIconHelpText { get; set; }\r\n\r\n  public string ClearIconName { get; set; }\r\n\r\n  public ICommand ClearPlaceholderCommand { get; set; }\r\n\r\n  public object ClearPlaceholderCommandParameter { get; set; }\r\n\r\n  public bool ClearPlaceholderEnabled { get; set; }\r\n\r\n  public string ClearPlaceholderHelpText { get; set; }\r\n\r\n  public ImageSource ClearPlaceholderIcon { get; set; }\r\n\r\n  public string ClearPlaceholderName { get; set; }\r\n\r\n  public ICommand Command { get; set; }\r\n\r\n  public object CommandParameter { get; set; }\r\n\r\n  public string DisplayMemberName { get; set; }\r\n\r\n  public bool IsSearchEnabled { get; set; }\r\n\r\n  public IEnumerable ItemsSource { get; set; }\r\n\r\n  public DataTemplate ItemTemplate { get; set; }\r\n\r\n  public string Placeholder { get; set; }\r\n\r\n  public string Query { get; set; }\r\n\r\n  public ImageSource QueryIcon { get; set; }\r\n\r\n  public string QueryIconHelpText { get; set; }\r\n\r\n  public string QueryIconName { get; set; }\r\n\r\n  public SearchBoxVisiblity SearchBoxVisibility { get; set; }\r\n\r\n  public bool ShowsResults { get; set; }\r\n\r\n  protected virtual void OnClearPlaceholderClicked();\r\n\r\n  protected virtual void OnItemSelected(object item);\r\n\r\n  protected virtual void OnQueryChanged(string oldValue, string newValue);\r\n\r\n  protected virtual void OnQueryConfirmed();\r\n}\r\n```\r\n\r\nProperties:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| ClearIconHelpText | The accessible help text for the clear icon |\r\n| ClearIconNameProperty | The name of the clear icon for usage with screen readers |\r\n| ClearIcon | The icon displayed to clear the contents of the search box. |\r\n| ClearPlaceholderCommandParameter | The paramter for the `ClearPlaceholderCommand` |\r\n| ClearPlacehodlerCommand | The command to execute when the ClearPlaceholder icon is tapped |\r\n| ClearPlaceholderEnabled | The enabled state of the ClearPlaceholderIcon. Default is true. |\r\n| ClearPlaceholderHelpText | The accessible help text for the clear placeholder icon |\r\n| ClearPlaceholderIcon | The icon displayed in the `ClearIcon` location when the search box is empty. |\r\n| ClearPlaceholderName | The name of the clear placeholder icon for usage with screen readers |\r\n| CommandParameter | The parameter for the `Command` |\r\n| Command | The `ICommand` to execute when a query is confirmed\r\n| DisplayMemberPath | The name or path of the property that is displayed for each the data item in the `ItemsSource`. |\r\n| IsSearchEnabled | Controls the enabled state of the search box. |\r\n| ItemsSource | A collection of items to display in the suggestion area. |\r\n| ItemTemplate | A template for the items displayed in the suggestion area. |\r\n| Placeholder | A string to display when the search box is empty. |\r\n| QueryIconHelpTextProperty | The accessible help text for the query icon |\r\n| QueryIconNameProperty | The name of the query icon for usage with screen readers |\r\n| QueryIcon | The icon used to indicate to the user that search is available |\r\n| Query | The current string in the search box. |\r\n| SearchBoxVisibility | Defines the visibility of the search box in the `Shell`s chrome. |\r\n| ShowsResults | Determines if search results should be expected on text entry |\r\n\r\nProtected Methods:\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| OnClearPlaceholderClicked | Called whenever the ClearPlaceholder icon has been pressed. |\r\n| OnItemSelected | Called whenever a search result is pressed by the user |\r\n| OnQueryConfirmed | Called whenever the user pressed enter or confirms their entry in the search box. |\r\n| OnQueryChanged | Called when the `Query` is changed. |\r\n\r\n### SearchBoxVisiblity\r\n```csharp\r\npublic enum SearchBoxVisiblity\r\n{\r\n  Hidden,\r\n  Collapsable,\r\n  Expanded\r\n}\r\n```\r\n\r\n| Value | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Hidden | The search box is not visible or accessible. |\r\n| Collapsable | The search box is hidden until the user performs an action to reveal it. |\r\n| Expanded | The search box is visible as a fully expanded entry. |\r\n\r\n### BackButtonBehavior\r\n```csharp\r\npublic class BackButtonBehavior : BindableObject\r\n{\r\n  public ImageSource IconOverride { get; set; }\r\n  public string TextOverride { get; set; }\r\n  public ICommand Command { get; set; }\r\n  public object CommandParameter { get; set; }\r\n}\r\n```\r\n\r\n| API | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| IconOverride | Changes the Icon used for the back button. |\r\n| TextOverride | Changes the Text used to indicate backwards navigation if text is used. |\r\n| Command | Provides a replacement command to invoke when the back button is pressed. |\r\n| CommandParameter | The command parameter used with `Command` |\r\n\r\n### FlyoutDisplayOptions\r\nDetermines how the `ShellGroupItem` should display in the FlyoutMenu.\r\n```csharp\r\n  public enum FlyoutDisplayOptions\r\n  {\r\n    AsSingleItem,\r\n    AsMultipleItems,\r\n  }\r\n```\r\n\r\n| Value | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| AsSingleItem | The `ShellGroupItem` will be visible as a single entry in the Flyout. |\r\n| AsMultipleItems | The `ShellGroupItem` will be visible as a group of items, one for each child in the Flyout. |\r\n\r\n### FlyoutHeaderBehavior\r\nControls the behavior of the FlyoutHeader when scrolling.\r\n```csharp\r\npublic enum FlyoutHeaderBehavior {\r\n  Default,\r\n  Fixed,\r\n  Scroll,\r\n  CollapseOnScroll,\r\n}\r\n```\r\n\r\n| Value | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Default | Platform default behavior. |\r\n| Fixed | Header remains visible and unchanged at all times |\r\n| Scroll | Header scrolls out of view as user scrolls menu |\r\n| CollapseOnScroll | Header collapses to title only as user scrolls |\r\n\r\n### FlyoutBehavior\r\n```csharp\r\npublic enum FlyoutBehavior\r\n{\r\n  Disabled,\r\n  Flyout,\r\n  Locked\r\n}\r\n```\r\n\r\n| Value | Description |\r\n| -----------| ----------------------------------------------------------------------------------------------|\r\n| Disabled | The flyout cannot be acccessed by the user. |\r\n| Flyout | The Flyout is works as a normal flyout which can be open/closed by the user. |\r\n| Locked | The Flyout is locked out and cannot be closed by the user, it does not overalp content. |\r\n\r\n### DataTemplateExtension\r\nThis extension quickly converts a type into a ControlTemplate. This is useful for instances where the template would otherwise be specified as\r\n```xaml\r\n<ListView>\r\n  <ListView.ItemTemplate>\r\n    <DataTemplate>\r\n      <local:MyCell />\r\n    </DataTemplate>\r\n  </ListView.ItemTemplate>\r\n</ListView>\r\n```\r\n\r\nThis can then be condensed down to\r\n```xaml\r\n<ListView ItemTemplate=\"{DataTemplate local:MyCell}\" />\r\n```\r\n\r\n```csharp\r\npublic sealed class ControlTemplateExtension : IBindingExtension<ControlTemplate>\r\n```\r\n\r\n```csharp\r\npublic sealed class DataTemplateExtension : IBindingExtension<DataTemplate>\r\n```\r\n## Odds and Ends\r\n\r\n### What happens when you select a tab in Flyout which has been pushed to?\r\nThis is the equivalent of focusing the tab and calling PopToRoot on it.\r\n\r\n### What happens when I switch ShellItems and there are items on the backstack of a ShellContent of the old ShellItem\r\nIf the old ShellItem is templated, the back stack is lost. If the ShellItem is not templated the BackStack stays intact and when switching back to the old ShellItem the backstack will be properly reflected. Switching back may clear the backstack however as indicated in the above answer.\r\n\r\n# Effecient loading of pages\r\nA major problem with using the Shell is the ease by which a user can end up loading all pages at the start of their application run. This large frontloaded allocation can result in quite poor startup performance if a large number of content pages are needed. In order to fix this templating should be employed when possible.\r\n\r\n## Templated ShellContents\r\nTemplating shell tab items is the most granular form of templating available, it is fortunately also the easiest to do. Take the following shell.\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<MaterialShell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n               xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n               xmlns:local=\"clr-namespace:MyStore\"\r\n               x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem Title=\"My apps &amp; games\">\r\n    <local:UpdatesPage />\r\n    <local:InstalledPage />\r\n    <local:LibraryPage />\r\n  </ShellItem>\r\n\r\n  <ShellItem GroupBehavior=\"ShowTabs\">\r\n    <local:HomePage />\r\n    <local:GamesPage />\r\n    <local:MoviesTVPage />\r\n    <local:BooksPage />\r\n    <local:MusicPage />\r\n    <local:NewsstandPage />\r\n  </ShellItem>\r\n</MaterialShell>\r\n```\r\n\r\nWhen this Shell loads, all 9 pages will be inflated at once. This is because no templating is employed. To employ basic templating we can convert this into:\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<MaterialShell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n               xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n               xmlns:local=\"clr-namespace:MyStore\"\r\n               x:Class=\"MyStore.Shell\">\r\n\r\n  <ShellItem Title=\"My apps &amp; games\">\r\n    <ShellContent Title=\"Updates\"        Icon=\"updates.png\" ContentTemplate=\"{DataTemplate local:UpdatesPage}\" />\r\n    <ShellContent Title=\"Installed Apps\" Icon=\"apps.png\"    ContentTemplate=\"{DataTemplate local:InstalledPage}\" />\r\n    <ShellContent Title=\"Library\"        Icon=\"library.png\" ContentTemplate=\"{DataTemplate local:LibraryPage}\" />\r\n  </ShellItem>\r\n\r\n  <ShellItem GroupBehavior=\"ShowTabs\">\r\n    <ShellContent Title=\"Home\"          Icon=\"updates.png\"   ContentTemplate=\"{DataTemplate local:HomePage}\" />\r\n    <ShellContent Title=\"Games\"         Icon=\"games.png\"     ContentTemplate=\"{DataTemplate local:GamesPage}\" />\r\n    <ShellContent Title=\"Movies and TV\" Icon=\"moviesTV.png\"  ContentTemplate=\"{DataTemplate local:MoviesTVPage}\" />\r\n    <ShellContent Title=\"Books\"         Icon=\"books.png\"     ContentTemplate=\"{DataTemplate local:BooksPage}\" />\r\n    <ShellContent Title=\"Music\"         Icon=\"music.png\"     ContentTemplate=\"{DataTemplate local:MusicPage}\" />\r\n    <ShellContent Title=\"Newsstand\"     Icon=\"newsstand.png\" ContentTemplate=\"{DataTemplate local:NewsstandPage}\" />\r\n  </ShellItem>\r\n</MaterialShell>\r\n```\r\n\r\nPages are now only loaded as needed and can be unloaded as needed as well. If needed the ShellItem's themselves can also be templated with a collection and a DataTemplateSelector which prevents even the ShellContents from having to be loaded eagerly, however this is largely unneeded and templating ShellItem is more useful for Shells that have ShellItems with large numbers of otherwise similar tabs. Templating the ShellContent should be the key area to provide templating for performance concerns.\r\n\r\n# Reconstructing the Google Play Store User Interface\r\nPlease note this is not intended to be a demo of the best way to code an application, but really the most concise format to shove together the UI for GPS. It also makes no attempt to virtualize the relevant pages by using ViewModels and DataTemplateSelector's. This means this would be quite bad performing as all pages would be loaded at app start. Reader is warned.\r\n\r\nAll page content is assumed to be working right, this is only to get the general idea of the chrome.\r\n## Shell.xaml\r\nA proper implementation of this would use ShellItems for every page and set the ItemsSource and ItemTemplate. This would allow each page to only be loaded once it is needed and unloaded when no longer needed.\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<MaterialShell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n               xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n               xmlns:local=\"clr-namespace:MyStore\"\r\n               x:Class=\"MyStore.Shell\"\r\n               FlyoutHeaderBehavior=\"Fixed\"\r\n               FlyoutHeader=\"{x:Bind HeaderViewModel}\">\r\n  <MaterialShell.FlyoutHeaderTemplate>\r\n    <local:CircleImageAndLabelControl HeightRequest=\"350\" />\r\n  </MaterialShell.FlyoutHeaderTempalte>\r\n\r\n  <ShellItem Title=\"My apps &amp; games\">\r\n    <ShellItem.ShellAppearance>\r\n      <MaterialShellAppearance NavBarCollapseStyle=\"Full\">\r\n    </ShellItem.ShellAppearance>\r\n    <local:UpdatesPage />\r\n    <local:InstalledPage />\r\n    <local:LibraryPage />\r\n  </ShellItem>\r\n\r\n  <local:NotificationsPage Title=\"My notifications\" />\r\n\r\n  <local:SubscriptionsPage />\r\n\r\n  <ShellItem GroupBehavior=\"ShowTabs\">\r\n    <ShellItem.ShellAppearance>\r\n      <MaterialShellAppearance NavBarCollapseStyle=\"Full\" TabBarCollapseStyle=\"Full\" UseSwipeGesture=\"false\">\r\n    </ShellItem.ShellAppearance>\r\n    <local:HomePage />\r\n    <local:GamesPage />\r\n    <ShellContent Title=\"Movies &amp; TV\" Icon=\"moviesTV.png\" ContentTemplate=\"{DataTemplate local:MoviesTVPage}\">\r\n      <ShellContent.MenuItems>\r\n        <MenuItem Title=\"Open Movies &amp; TV app\" Command=\"{xBind MoviesTVAppCommand}\" />\r\n      </ShellContent.MenuItems>\r\n    </ShellContent>\r\n    <ShellContent Title=\"Books\" Icon=\"books.png\" ContentTemplate=\"{DataTemplate local:BooksPage}\">\r\n      <ShellContent.MenuItems>\r\n        <MenuItem Title=\"Open Books app\" Command=\"{xBind BooksAppCommand}\" />\r\n      </ShellContent.MenuItems>\r\n    </ShellContent>\r\n    <ShellContent Title=\"Music\" Icon=\"music.png\" ContentTemplate=\"{DataTemplate local:MusicPage}\">\r\n      <ShellContent.MenuItems>\r\n        <MenuItem Title=\"Open Music app\" Command=\"{xBind MusicAppCommand}\" />\r\n      </ShellContent.MenuItems>\r\n    </ShellContent>\r\n    <ShellContent Title=\"Newsstand\" Icon=\"newsstand.png\" ContentTemplate=\"{DataTemplate local:NewsstandPage}\">\r\n      <ShellContent.MenuItems>\r\n        <MenuItem Title=\"Open Newsstand app\" Command=\"{xBind NewsstandAppCommand}\" />\r\n      </ShellContent.MenuItems>\r\n  </ShellItem>\r\n\r\n  <local:AccountPage />\r\n\r\n  <MenuItem Title=\"Redeem\" Icon=\"redeem.png\" Command=\"{x:Bind RedeemCommand}\" />\r\n\r\n  <local:WishlistPage />\r\n\r\n  <MenuItem Title=\"Play Protect\" Icon=\"protect.png\" Command=\"{x:Bind NavigateCommand}\" CommandParameter=\"ProtectPage\" />\r\n\r\n  <MenuItem Title=\"Settings\" Icon=\"settings.png\" Command=\"{x:Bind SettingsCommand}\" CommandParameter=\"SettingsPage\" />\r\n\r\n  <MaterialShell.MenuItems>\r\n    <MenuItem Title=\"Help &amp; feedback\" Command=\"{x:Bind NavigateCommand}\" CommandParameter=\"HelpPage\" />\r\n    <MenuItem Title=\"Parent Guide\" Command=\"{x:Bind NavigateCommand}\" CommandParameter=\"ParentPage\" />\r\n    <MenuItem Title=\"Help &amp; feedback\" Command=\"{x:Bind UrlCommand}\" CommandParameter=\"http://support.google.com/whatever\" />\r\n  </MaterialShell.MenuItems>\r\n</MaterialShell>\r\n```\r\n\r\n## The store pages\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:MyStore\"\r\n             x:Class=\"MyStore.HomePage\"\r\n             Title=\"Home\"\r\n             Icon=\"home.png\"\r\n             ShellAppearance.BackgroundColor=\"Green\">\r\n  <Label Text=\"Home content here\" />\r\n</ContentPage>\r\n```\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:MyStore\"\r\n             x:Class=\"MyStore.MoviesTVPage\"\r\n             Title=\"Movies &amp; TV\"\r\n             Icon=\"movies.png\"\r\n             ShellAppearance.BackgroundColor=\"Red\">\r\n  <Label Text=\"Movies and TV content here\" />\r\n</ContentPage>\r\n```\r\n\r\nAnd to add the search bar.\r\n\r\n```csharp\r\npublic class HomePage : ContentPage\r\n{\r\n  public class HomeSearchHandler : SearchHandler\r\n  {\r\n    public HomeSearchHandler ()\r\n    {\r\n      SearchBoxVisibility = SearchBoxVisibility.Expanded;\r\n      IsSearchEnabled = true;\r\n      Placeholder = \"Google Play\";\r\n      CancelPlaceholderIcon = \"microphone.png\"\r\n    }\r\n\r\n    protected override void OnSearchConfirmed (string query)\r\n    \r\n{      // Navigate to search results page here\r\n    }\r\n    \r\n    protected override void OnSearchChanged (string oldValue, string newValue)\r\n    {\r\n    }\r\n\r\n    protected override void OnCancelPlaceholderPressed ()\r\n    {\r\n      // Trigger voice API here\r\n    }\r\n  }\r\n\r\n  public HomePage\r\n  {\r\n    Shell.SetSearchHandler (this, new HomeSearchHandler ());\r\n  }  \r\n}\r\n```\r\n\r\nAnd so on and so on setting the colors and the content correctly.\r\n\r\nFor pages like the Settings page where the flyout should not be accessible until the back button is pressed:\r\n\r\n```xaml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:MyStore\"\r\n             x:Class=\"MyStore.SettingsPage\"\r\n             Title=\"Settings\"\r\n             Icon=\"settings.png\"\r\n             ShellAppearance.BackgroundColor=\"Grey\"\r\n             MaterialShell.FlyoutBehavior=\"Disabled\">\r\n  <Label Text=\"Settings content here\" />\r\n</ContentPage>\r\n```\r\n\r\n\r\n# TODO\r\n- [x] Add API for search box\r\n- [x] Add API for ContentSafeArea handling\r\n- [x] Add API for floating menu\r\n- [x] Add API for window menu items\r\n- [x] Add API for snackbar\r\n- [x] Add API for navigation interruption\r\n- [x] Add API for bottom sheet\r\n- [x] Add API to position FAB\r\n- [ ] Add stories to make navigation ideas clearer (partially done)\r\n- [x] Add LeftBarButton style API\r\n- [x] Add mechanism for getting Back Stack from ShellContent\r\n- [x] Add API for changing color of the ribbon based on selected tab\r\n- [x] Add optional suggestion support for SearchHandler\r\n- [x] Add support for configuring always expanded search bar vs search bar as icon\r\n- [x] Add API for getting the \"Current\" page from the MaterialShell class. Needed for some navigation scenarios.\r\n- [x] Add API for saving \"states\" to the back stack\r\n- [x] Add API to block flyout from coming out\r\n- [x] Add API for \"submenu\" items for ShellContent's ala GPS -> Music -> Open Music app\r\n- [x] Add API for CancelPlaceholder Command and Icon (usually used for microphone icon for voice search)\r\n- [x] Segue API\r\n- [x] Work out what to do with INavigation\r\n- [ ] Expand Bottom Sheet API to match Google Maps capabilities\r\n- [x] API to handle Flyout presentation\r\n- [ ] API to disable Flyout gesture when needed\r\n- [ ] Large title API\r\n- [ ] Transitions API\r\n\r\n# Issues\r\n\r\n## ISearchHandler [FIXED]\r\n\r\nThere is a lot this interface is doing and worse it's probably going to need to be expanded as time goes on. Therefor it stands to reason that it should probably instead be an abstract base class the user can implement. This unfortunate means yet another object allocation. However it maintains flexibility in the future. It is likely this change will happen.\r\n\r\n## Floating Menu\r\n\r\nThe attachment API is a bit heavy and perhaps too confusing for users. Worse it might not map very well to all platforms to make sure the attachment works with animations. More work is required to validate this API."},{"Id":"8673349138","Type":"IssuesEvent","CreatedAt":"2018-11-30T01:58:13","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4580","RelatedDescription":"Closed issue \"CPU usage is maintained at 25% when scrolling through the ListView \" (#4580) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### CPU usage is maintained at 25% when scrolling through the ListView \r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample attached\r\n2. Scroll through the listview at fast rate \r\n\r\n### Expected Behavior\r\nItems in the ListView should be visible when scrolling instead of getting the black background color \r\n### Actual Behavior\r\n CPU usage is at 25% continously ; ListView is with a black background color and the items are not visible \r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: 3.1.0.69\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n\r\n[ScrollingListView.zip](https://github.com/xamarin/Xamarin.Forms/files/2628660/ScrollingListView.zip)\r\n\r\n![cpuusage](https://user-images.githubusercontent.com/25817167/49215610-2d725100-f3ef-11e8-89a1-4590f147d2c7.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n[FWListView.zip](https://github.com/xamarin/Xamarin.Forms/files/2628657/FWListView.zip)\r\n"},{"Id":"8673302796","Type":"PullRequestEvent","CreatedAt":"2018-11-30T01:44:29","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4588","RelatedDescription":"Merged pull request \"[UWP] add missing xbf files to nuspec\" (#4588) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdd missing xbf files to UAP nuspec\r\n\r\n### Issues Resolved ### \r\n- fixes #\r\n\r\n### Platforms Affected ### \r\n- UWP\r\n\r\n### Testing Procedure ###\r\nInstall NUGET into UWP app and see if it runs\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"8673050289","Type":"PullRequestEvent","CreatedAt":"2018-11-30T00:31:41","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4588","RelatedDescription":"Opened pull request \"[UWP] add missing xbf files to nuspec\" (#4588) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdd missing xbf files to UAP nuspec\r\n\r\n### Issues Resolved ### \r\n- fixes #\r\n\r\n### Platforms Affected ### \r\n- UWP\r\n\r\n### Testing Procedure ###\r\nInstall NUGET into UWP app and see if it runs\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"8672988916","Type":"PullRequestEvent","CreatedAt":"2018-11-30T00:14:15","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4534","RelatedDescription":"Merged pull request \"Set ImageButton property of Android.ImageButtonRenderer public\" (#4534) at xamarin/Xamarin.Forms","RelatedBody":"Set ImageButton property public.\r\n\r\n### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8673544413","Type":"PullRequestEvent","CreatedAt":"2018-11-30T02:55:12","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5205","RelatedDescription":"Opened pull request \"[d15-9] Bump maccore to head of d15-9 branch\" (#5205) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8673412498","Type":"IssuesEvent","CreatedAt":"2018-11-30T02:16:42","Actor":"wjk","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5204","RelatedDescription":"Opened issue \"RegistrarAttribute without explicit name isn't honored by Xcode project generator\" (#5204) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download and open the repro project linked below.\r\n2. Open the Main.storyboard file. Notice how the `AppDelegate` ObjC class files are present. Quit Xcode.\r\n3. Open `AppDelegate.cs`, and change the line `[Register(\"AppDelegate\")]` to just `Register`.\r\n4. Reopen the Main.storyboard file. Notice how the AppDelegate ObjC classes are now missing.\r\n\r\n### Expected Behavior\r\n\r\nThe Xcode project generator should generate a name automatically from the full name of the C# class [like the registrar does](https://github.com/xamarin/xamarin-macios/blob/8a81607279c08a36021b562154f911e692a1c87b/src/ObjCRuntime/Registrar.cs#L2522-L2523), and write that name into the generated ObjC files in the Xcode project.\r\n\r\n### Actual Behavior\r\n\r\nIt doesn't do this, and ignores the AppDelegate class when generating the Xcode project. This will cause problems later, when I try to edit the storyboard or run the app.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.11 (build 9)\r\nInstallation UUID: 2f7490c4-93db-429d-9511-4b9317c93fbc\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.3\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.401/Sdks\r\nSDK Versions:\r\n\t2.1.401\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Community)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.1.0.15 (Visual Studio Community)\r\nHash: cbfb047a\r\nBranch: xcode10.1\r\nBuild date: 2018-10-30 22:57:23-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706110009\r\nGit revision: d7cd66f5e3acd3d46ba0b94a0c935378f828bde0\r\nBuild date: 2018-10-31 17:17:12+00\r\nBuild branch: release-7.6\r\nXamarin extensions: bc9b985bfcb480b04a208a6d4045adc443a07857\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.1\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Fri Oct  5 19:41:49 PDT 2018\r\n    root:xnu-4903.221.2~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nEditorConfig 1.2\r\nEto.Forms Support Addin 2.4.0.0\r\nAddinMaker 1.4.3\r\n.NET Core Extended Target Framework Support 1.0\r\nEditorConfig Support 0.1\r\n```\r\n\r\n### Build Logs\r\n\r\nI don't see how these are relevant, as this isn't a build issue.\r\n\r\n### Example Project\r\n\r\n[RegistrarRepro.zip](https://github.com/xamarin/xamarin-macios/files/2631685/RegistrarRepro.zip)\r\n"},{"Id":"8672983992","Type":"IssuesEvent","CreatedAt":"2018-11-30T00:12:54","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5188","RelatedDescription":"Closed issue \"An issue of binding c library\" (#5188) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\nHi all, I am currently have an issue of binding c library. I am following the introduction from this link: https://www.youtube.com/watch?v=ZUoPLcmnf1o. However, I am stuck at the last step: using functions from the c library, it always shows \"Native linking failed, undefined symbol ...\". I have tried to solve it for around 2 days, but did not go any further, may I ask for your help? Thank you very much in advance.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Environment: iOS: macOS High Sierra, xcode: 10.1, SDK: 12.1, IDE: Visual Studio for Mac \r\n2. All steps are followed as the video said: except that I only get .a lib for x86_64 and arm64 arch\r\n --- 1) the information of the .a lib file is shown below:\r\n$ file libexample.a\r\nlibexample.a: Mach-O universal binary with 2 architectures: [x86_64:current ar archive random library] [arm64:current ar archive random library]\r\nlibexample.a (for architecture x86_64):\tcurrent ar archive random library\r\nlibexample.a (for architecture arm64):\tcurrent ar archive random library\r\n--- 2) exported function from the lib:\r\n$ nm libexample.a\r\nlibexample.a(example_wrap.o):\r\n0000000000000160 T _CSharp_My_variable_get\r\n0000000000000130 T _CSharp_My_variable_set\r\n0000000000000190 T _CSharp_fact\r\n0000000000000200 T _CSharp_get_time\r\n00000000000001c0 T _CSharp_my_mod\r\n                 U _My_variable\r\n00000000000000d0 T _SWIGRegisterExceptionArgumentCallbacks_example\r\n0000000000000000 T _SWIGRegisterExceptionCallbacks_example\r\n0000000000000110 T _SWIGRegisterStringCallback_example\r\n                 U __Z4facti\r\n                 U __Z6my_modii\r\n                 U __Z8get_timev\r\n0000000000000240 d __ZL22SWIG_csharp_exceptions\r\n0000000000001658 b __ZL27SWIG_csharp_string_callback\r\n00000000000002f0 d __ZL31SWIG_csharp_exceptions_argument\r\nlibexample.a(example.o):\r\n0000000000000098 D _My_variable\r\n                 U _ctime\r\n0000000000000000 T _fact\r\n0000000000000070 T _get_time\r\n0000000000000050 T _my_mod\r\n                 U _time\r\n3. The compiler error log is shown below:\r\n... \r\n_xamarin_CGPoint__VNImagePointForFaceLandmarkPoint_Vector2_CGRect_nuint_nuint_string -u _UIApplicationMain -u _xamarin_localized_string_format -u _xamarin_localized_string_format_1 -u _xamarin_localized_string_format_2 -u _xamarin_localized_string_format_3 -u _xamarin_localized_string_format_4 -u _xamarin_localized_string_format_5 -u _xamarin_localized_string_format_6 -u _xamarin_localized_string_format_7 -u _xamarin_localized_string_format_8 -u _xamarin_localized_string_format_9 -u _xamarin_init_nsthread -u _CreateZStream -u _CloseZStream -u _Flush -u _ReadZStream -u _WriteZStream -u _SWIGRegisterExceptionCallbacks_example -u _SWIGRegisterExceptionArgumentCallbacks_example -u _SWIGRegisterStringCallback_example -u _CSharp_My_variable_set -u _CSharp_My_variable_get -u _CSharp_fact -u _CSharp_my_mod -u _CSharp_get_time -u _mono_pmip -u _xamarin_dyn_objc_msgSend -u _xamarin_dyn_objc_msgSendSuper -u _xamarin_dyn_objc_msgSend_stret -u _xamarin_dyn_objc_msgSendSuper_stret\r\n    Undefined symbols for architecture x86_64:\r\n      \"fact(int)\", referenced from:\r\n          _CSharp_fact in libexample.a(example_wrap.o)\r\n      \"my_mod(int, int)\", referenced from:\r\n          _CSharp_my_mod in libexample.a(example_wrap.o)\r\n      \"get_time()\", referenced from:\r\n          _CSharp_get_time in libexample.a(example_wrap.o)\r\n    ld: symbol(s) not found for architecture x86_64\r\n    clang : error : linker command failed with exit code 1 (use -v to see invocation)\r\n    \r\n    MTOUCH : error MT5210: Native linking failed, undefined symbol: fact(int). Please verify that all the necessary frameworks have been referenced and native libraries are properly linked in.\r\n    MTOUCH : error MT5210: Native linking failed, undefined symbol: my_mod(int, int). Please verify that all the necessary frameworks have been referenced and native libraries are properly linked in.\r\n    MTOUCH : error MT5210: Native linking failed, undefined symbol: get_time(). Please verify that all the necessary frameworks have been referenced and native libraries are properly linked in.\r\n    MTOUCH : error MT5201: Native linking failed. Please review the build log and the user flags provided to gcc: -L/Users/stonechen/Desktop/Sample_Binding_C_Proj/ExampleLib/SimpleBinding -lexample -force_load /Users/stonechen/Desktop/Sample_Binding_C_Proj/ExampleLib/SimpleBinding/libexample.a\r\n    MTOUCH : error MT5202: Native linking failed. Please review the build log.\r\nDone building target \"_CompileToNative\" in project \"SimpleBinding.csproj\" -- FAILED.\r\n\r\nDone building project \"SimpleBinding.csproj\" -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n...\r\n\r\n### Expected Behavior\r\nJust load the funtion defined in C library in my Xamarin iOS project as the video shows.\r\n\r\n### Actual Behavior\r\nI cannot find the methods defined in the C library in my program\r\n\r\n### Environment\r\nMy environment is different from the one shown in the video,. Mine is: Environment: iOS: macOS High Sierra, xcode: 10.1, SDK: 12.1, IDE: Visual Studio for Mac .\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\nHere is my project settings:\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n<img width=\"1180\" alt=\"screenshots of project settings\" src=\"https://user-images.githubusercontent.com/8136658/49094687-c5fabb00-f2a1-11e8-8f06-6fe022aec55d.png\">\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[Sample_Project_for_Binding.zip](https://github.com/xamarin/xamarin-macios/files/2623134/Sample_Project_for_Binding.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8672694626","Type":"IssuesEvent","CreatedAt":"2018-11-29T23:01:03","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5203","RelatedDescription":"Opened issue \"MMP should use LinkWith variable not own native_references\" (#5203) at xamarin/xamarin-macios","RelatedBody":"MMP currently uses a XM specific `native_references` variable instead of the common `LinkWith`. This forced a small hack in this PR: https://github.com/xamarin/xamarin-macios/pull/5167"},{"Id":"8671792299","Type":"IssuesEvent","CreatedAt":"2018-11-29T20:09:57","Actor":"praeclarum","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5202","RelatedDescription":"Opened issue \"FinderInfo metadata can make builds unsignable\" (#5202) at xamarin/xamarin-macios","RelatedBody":"It's possible to add BundleResource files to a project that contain metadata (xattrs) that later will cause a build to be unsignable with this error:\r\n\r\n```\r\nTool /usr/bin/codesign execution started with arguments: -v --force --sign 8300ADA869DB5BDFFBE11F6BE2AD4A6616EDFE8C --entitlements /Users/fak/Dropbox/Projects/Circuit2/Circuit/obj/iPhone/Release/Entitlements.xcent /Users/fak/Dropbox/Projects/Circuit2/Circuit/bin/iPhone/Release/Circuit2.app\r\n    bin/iPhone/Release/Circuit2.app : error : /Users/fak/Dropbox/Projects/Circuit2/Circuit/bin/iPhone/Release/Circuit2.app: resource fork, Finder information, or similar detritus not allowed\r\n```\r\n\r\nThe culprit is `com.apple.FinderInfo` and is clearable using instructions here: https://stackoverflow.com/questions/39652867/code-sign-error-in-macos-high-sierra-xcode-resource-fork-finder-information\r\n\r\n### Steps to Reproduce\r\n\r\nYou need a file with `com.apple.FinderInfo`, here's one silly way to create one:\r\n\r\n1. Open a JPEG in Preview.app\r\n2. Duplicate it (Shift-Cmd-S)\r\n3. Resize it (Tools, Adjust Size...)\r\n4. Save it\r\n\r\n### Expected Behavior\r\n\r\nIt would be nice if the tooling cleared the metadata for me.\r\n\r\nAlternatively, just giving a better error and locating the bad files is OK too.\r\n\r\n### Actual Behavior\r\n\r\nError\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.7 (build 1868)\r\nInstallation UUID: 4ba352e1-73e8-4dab-a9db-28012ca05af8\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.7.0.5148\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.0-preview2-26406-04\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.300-preview2-008530\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.11 (Visual Studio Enterprise)\r\nHash: 5ef73d34\r\nBranch: \r\nBuild date: 2018-11-21 00:03:25-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.11 (Visual Studio Enterprise)\r\nHash: 5ef73d34\r\nBranch: d15-9\r\nBuild date: 2018-11-21 00:03:24-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.0.38 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/fak/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /Users/fak/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\nopenjdk version \"1.8.0-9\"\r\nOpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\nOpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.7.1.0\r\nHash: 06ceaea1\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707001868\r\nGit revision: 8bcdfa96d67c8c88dc45728cc968a2f84b55322f\r\nBuild date: 2018-11-22 12:19:29+00\r\nBuild branch: release-7.7\r\nXamarin extensions: d66dbedcda237cd9b546abfecfeecafba6f8e3cb\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.1\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Fri Oct  5 19:41:49 PDT 2018\r\n    root:xnu-4903.221.2~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nMSBuild Editor 2.1.0\r\n```\r\n\r\n"},{"Id":"8671742752","Type":"IssuesEvent","CreatedAt":"2018-11-29T20:01:10","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5003","RelatedDescription":"Closed issue \"WebSocketException is thrown when using ClientWebSocket ConnectAsync\" (#5003) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Use System.Net.WebSockets.ClientWebSocket.\r\n2. Use ConnectAsync method to make a wss (web socket secure) connection, it throws exception.\r\n3. Same code works in Windows 10.\r\n\r\n### Expected Behavior\r\nMade a wss (web socket secure) connection successfully.\r\n\r\n### Actual Behavior\r\nSystem.Net.WebSocketException is thrown.\r\n\r\n### Environment\r\nMacOS Sierra -- version 10.12.6\r\n\r\n### Sample Code\r\n```\r\nvar webSocketEndpoint = \"wss://example.com\";\r\nvar webSocket = new ClientWebSocket();\r\nwebSocket.ConnectAsync(new Uri(webSocketEndpoint), tokenSourceConnect.None);\r\n```\r\n\r\n### Debug Logs\r\n`at System.Net.WebSockets.WebSocketHandle+<ParseAndValidateConnectResponseAsync>d__30.MoveNext () [0x000fd] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/external/corefx/src/System.Net.WebSockets.Client/src/System/Net/WebSockets/WebSocketHandle.Managed.cs:331 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable 1+ConfiguredTaskAwaiter[TResult].GetResult () [0x00000] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:535 \r\n  at System.Net.WebSockets.WebSocketHandle+<ConnectAsyncCore>d__26.MoveNext () [0x00383] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/external/corefx/src/System.Net.WebSockets.Client/src/System/Net/WebSockets/WebSocketHandle.Managed.cs:142 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult () [0x00000] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:447 \r\n  at System.Net.WebSockets.ClientWebSocket+<ConnectAsyncCore>d__16.MoveNext () [0x000d1] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/external/corefx/src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs:157 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in /Users/{user}/WorkSpace/Xamarin/xamarin-macios/external/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:113 \r\n`\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":76,"FavoriteCount":39,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":101,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":15,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":112,"FavoriteCount":58,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":24,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":29,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":19,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":28,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":37,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":32,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":31,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":110,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":55,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":47,"RawContent":null}]}},"RunOn":"2018-11-30T05:31:29.4786282Z","RunDurationInMilliseconds":3793}