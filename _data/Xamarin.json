{"Data":{"Blog":{"FeedItems":[{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null},{"Title":"Xamarin Developer Events in May","PublishedOn":"2018-05-02T18:35:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET user groups are hosting recap events around the world all month long to ensure every developer gets the most they can out of Microsoft Build. Continue your Xamarin development...","Href":"https://blog.xamarin.com/xamarin-developer-events-may/","RawContent":null},{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null},{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null},{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7674192123","Type":"PullRequestEvent","CreatedAt":"2018-05-15T02:25:39","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1680","RelatedDescription":"Closed pull request \"[tests] change NUnit result format on Windows\" (#1680) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1685026\r\n\r\nOn master, Windows builds have been frequently timing out on the\r\ncompletion of the Xamarin.Android.Build.Tests NUnit tests:\r\n\r\n    2018-05-14T16:11:30.6755378Z   Test Run Summary\r\n    2018-05-14T16:11:30.6755639Z     Overall result: Warning\r\n    2018-05-14T16:11:30.6755977Z     Test Count: 314, Passed: 275, Failed: 0, Warnings: 0, Inconclusive: 0, Skipped: 39\r\n    2018-05-14T16:11:30.6756344Z       Skipped Tests - Ignored: 39, Explicit: 0, Other: 0\r\n    2018-05-14T16:11:30.6758931Z     Start time: 2018-05-14 15:48:47Z\r\n    2018-05-14T16:11:30.6772121Z       End time: 2018-05-14 16:11:30Z\r\n    2018-05-14T16:11:30.6772666Z       Duration: 1362.691 seconds\r\n    2018-05-14T16:11:30.6772900Z\r\n    2018-05-14T16:11:30.6989428Z   Results (nunit2) saved as TestResult-Xamarin.Android.Build.Tests.xml\r\n    2018-05-14T19:34:35.2647344Z Attempting to cancel the build...\r\n    2018-05-14T19:34:40.2864864Z ##[warning]build-tools\\scripts\\RunTests.targets(30,5): Warning MSB4220: Waiting for the currently executing task \"Exec\" to cancel.\r\n\r\nVSTS is hitting the 4 hour build timeout we have configured, and so\r\nVSTS is cancelling the running `<Exec />` MSBuild task. It is very\r\nstrange, because it seems to be timing out *after* it starts writing\r\nthe test results file...\r\n\r\nSince the tests appear to be completed, seeing if using the default\r\n`nunit3` result format on Windows will solve the problem."},{"Id":"7673894256","Type":"PullRequestEvent","CreatedAt":"2018-05-15T00:35:05","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1680","RelatedDescription":"Opened pull request \"[tests] change NUnit result format on Windows\" (#1680) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1685026\r\n\r\nOn master, Windows builds have been frequently timing out on the\r\ncompletion of the Xamarin.Android.Build.Tests NUnit tests:\r\n\r\n    2018-05-14T16:11:30.6755378Z   Test Run Summary\r\n    2018-05-14T16:11:30.6755639Z     Overall result: Warning\r\n    2018-05-14T16:11:30.6755977Z     Test Count: 314, Passed: 275, Failed: 0, Warnings: 0, Inconclusive: 0, Skipped: 39\r\n    2018-05-14T16:11:30.6756344Z       Skipped Tests - Ignored: 39, Explicit: 0, Other: 0\r\n    2018-05-14T16:11:30.6758931Z     Start time: 2018-05-14 15:48:47Z\r\n    2018-05-14T16:11:30.6772121Z       End time: 2018-05-14 16:11:30Z\r\n    2018-05-14T16:11:30.6772666Z       Duration: 1362.691 seconds\r\n    2018-05-14T16:11:30.6772900Z\r\n    2018-05-14T16:11:30.6989428Z   Results (nunit2) saved as TestResult-Xamarin.Android.Build.Tests.xml\r\n    2018-05-14T19:34:35.2647344Z Attempting to cancel the build...\r\n    2018-05-14T19:34:40.2864864Z ##[warning]build-tools\\scripts\\RunTests.targets(30,5): Warning MSB4220: Waiting for the currently executing task \"Exec\" to cancel.\r\n\r\nVSTS is hitting the 4 hour build timeout we have configured, and so\r\nVSTS is cancelling the running `<Exec />` MSBuild task. It is very\r\nstrange, because it seems to be timing out *after* it starts writing\r\nthe test results file...\r\n\r\nSince the tests appear to be completed, seeing if using the default\r\n`nunit3` result format on Windows will solve the problem."},{"Id":"7673663039","Type":"IssuesEvent","CreatedAt":"2018-05-14T23:16:14","Actor":"garuma","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1625","RelatedDescription":"Closed issue \"Support ConstraintLayout in the VS Designer\" (#1625) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new project\r\n2. Change the Main view to use ConstraintLayout\r\n3. Switch to the designer\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nI can use the designer as usual, with drag&drop and etc.\r\n\r\n### Actual Behavior\r\n\r\nOne of those three, depending on Xamarin's mood:\r\n\r\n1. A mock view labeled \"ConstraintLayout\"\r\n2. A red screen\r\n3. A correctly rendered view, but unable to be edited (unable to use drag&drop)\r\n\r\n### Version Information\r\nVisual Studio 2017, Xamarin 8.1, Xamarin.Android.Support.Constraint.Layout 1.1.0 Nuget package\n\n> VS bug [#609834](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/609834)"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7674572945","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:55:23","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2671","RelatedDescription":"Closed issue \"[Android] Release build crashes on launch\" (#2671) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen deploying a release build to a device with either \"ProGuard\" or \"Bundle assemblies into native code\" enabled, the app crashes on launch.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Xamarin Forms Mobile App.\r\n2. Change solution configuration to Release.\r\n3. Under Android options, enabled either \"ProGuard\" or \"Bundle assemblies into native code\".\r\n4. Deploy to a **device.**\r\n\r\n### Expected Behavior\r\nApp to launch successfully.\r\n\r\n### Actual Behavior\r\nCrashes on launch.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.446417\r\n- Last known good version: 2.5.1.527436\r\n- IDE: Visual Studio Enterprise 2017 v15.7.1\r\n- Platform Target Frameworks:\r\n  - Android: 8.1\r\n\r\n.NET Framework 4.7.2\r\nAndroid SDK Platform-Tools 27.0.1\r\nAndroid SDK Build-Tools 27.0.3\r\nProguard 6.0.3\r\nJDK 8 Update 171\r\nAndroid NDK R17\r\n\r\n### Reproduction Link\r\n\r\n[App1.zip](https://github.com/xamarin/Xamarin.Forms/files/1994395/App1.zip)"},{"Id":"7674566503","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:52:36","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2709","RelatedDescription":"Opened issue \"[Android] Include basic proguard file so starting Xamarin Forms project can release with proguard enabled\" (#2709) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe current starter Xamarin Forms Android project will not deploy as is with proguard enabled. \r\n\r\nThe minimum configuration currently required is a proguard file with the following entry\r\n\r\n```\r\n-keep class android.support.v7.widget.FitWindowsFrameLayout { *; }\r\n-dontwarn android.support.v7.widget.FitWindowsFrameLayout\r\n```\r\n\r\nThe support libraries all include proguard.txt files as part of their nuget packages so Xamarin Forms could also include the above minimum.\r\n\r\nIt is debatable whether this is useful since as a user grows and application and uses more things they are going to have to learn how to interact with proguard and modify the file. It is just the inevitable outcome of having proguard enabled\r\n\r\n\r\n### Steps to Reproduce\r\n- Create a new Xamarin Forms Mobile App.\r\n- Under Android options, enabled either \"ProGuard\" \r\n- Set Linker to Link SDK Assemblies\r\n- Deploy to a **device.**\r\n\r\n### Expected Behavior\r\nApp to launch successfully.\r\n\r\n### Actual Behavior\r\nCrashes on launch.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.446417\r\n- Last known good version: 2.5.1.527436\r\n- IDE: Visual Studio Enterprise 2017 v15.7.1\r\n- Platform Target Frameworks:\r\n  - Android: 8.1\r\n\r\n.NET Framework 4.7.2\r\nAndroid SDK Platform-Tools 27.0.1\r\nAndroid SDK Build-Tools 27.0.3\r\nProguard 6.0.3\r\nJDK 8 Update 171\r\nAndroid NDK R17\r\n\r\n### Reproduction Link\r\n\r\n[App1.zip](https://github.com/xamarin/Xamarin.Forms/files/1994395/App1.zip)\r\n\r\n### RELATED Tickets\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/2671\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/2491\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/2457\r\nhttps://github.com/xamarin/Xamarin.Forms/issues/2495\r\n\r\n"},{"Id":"7674564454","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:51:40","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2491","RelatedDescription":"Closed issue \"Xamarin Forms Android app crash on boot in Release config with ProGuard on after updated to 27.0.2\" (#2491) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nThis happens after I upgraded `Xamarin.Android.Support.*` packages to version 27.0.2. App works when I build and run in Debug but failed when published to the Store. I tried Release config and it indeed crashes on boot\r\n\r\nI followed the suggestion here https://bugzilla.xamarin.com/show_bug.cgi?id=36287 and turned off ProGuard for Release config\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin Forms project\r\n2. Update all packages to the latest version\r\n3. Turn on Proguard in Release Config\r\n4. Build in Release and deploy to physical device\r\n\r\n### Expected Behavior\r\n\r\nNot crash on boot\r\n\r\n### Actual Behavior\r\n\r\nCrash on boot\r\n\r\n### Basic Information\r\n\r\n- Version with issue: `Xamarin.Android.Support.*` 27.0.2\r\n- Last known good version: `Xamarin.Android.Support.*` 26.1.0.1\r\n- IDE: VS for Mac 7.4.3 (build 10) Stable Channel\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: target API Level 27\r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: Xamarin.Forms 2.5.0.280555\r\n- Affected Devices: all Android versions\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7674544954","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:43:14","Actor":"TrustEEI","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2708","RelatedDescription":"Opened issue \"StyleSheet Reference Tag Throws Build Error. \" (#2708) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n    <ContentPage.Resources>\r\n        <StyleSheet Source=\"/Assets/Style/style.css\" />\r\n    </ContentPage.Resources>\r\n\r\nThe above code is causing the application to fail during build with a generic error message. \r\n\r\n### Steps to Reproduce\r\n\r\n1.  Browse to https://github.com/xamarin/Xamarin.Forms/issues/1552. At the bottom of the page, find the CSS.zip file. Download and open Xamarin Project. \r\n2.  Attempt to Build and Deploy project to via Xamarin Live or an emulator.  \r\n3.  Error is Thrown. Build Fails.\r\n\r\nThis also occurs on the Monkey CSS Project as well. \r\n\r\n### Expected Behavior\r\n1. Project Successfully Builds. \r\n2. CSS is properly referenced in the app and effects the styling of the app.\r\n\r\n\r\n### Actual Behavior\r\n1. Build Fails. Throws the same error message as reported in 1552. The Same issue is references in Ticket 1553. \r\n\r\nThe behavior also occurs with the Monkey CSS Example App. https://developer.xamarin.com/samples/xamarin-forms/UserInterface/Styles/MonkeyAppCSS/\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 3.0.0.446417\r\n[Xamarin-StyleSheet-Issue-ScreenShots.docx](https://github.com/xamarin/Xamarin.Forms/files/2003481/Xamarin-StyleSheet-Issue-ScreenShots.docx)\r\n\r\n- Last known good version: Unknown.\r\n\r\n### Screenshots\r\nAttached\r\n\r\n"},{"Id":"7674528380","Type":"IssuesEvent","CreatedAt":"2018-05-15T04:36:10","Actor":"PavithraSyncfusion","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2707","RelatedDescription":"Opened issue \"Null reference exception has been thrown while using SearchBar in NavigationPage in Xamarin.Forms.UWP\" (#2707) at xamarin/Xamarin.Forms","RelatedBody":"Hi, \r\n\r\nWhile using SearchBar in NavigationPage, Null reference has been thrown from SearchBarRenderer.OnControlLoaded() event.\r\n\r\nXamarin Version: 3.0\r\nTarget Platform: Xamarin.Forms.UWP\r\nPlatform Target Version: Windows 10 Fall Creators Update (10.0; Build 16299)\r\n\r\nI have attached a sample that replicates the issue. \r\n\r\nProcedure to replicate the issue:\r\n\r\n 1. Click the SearchBarClass.\r\n 2. Note exception has been thrown. \r\n\r\nPlease find the below attached screenshot for further reference.\r\n\r\n![searchbarisuue](https://user-images.githubusercontent.com/27993223/40036733-bb79cf88-5826-11e8-88f1-5a9381745a7e.png)\r\n\r\nRegards,\r\nPavithra S\r\n\r\n[SearchBarIssue.zip](https://github.com/xamarin/Xamarin.Forms/files/2003470/SearchBarIssue.zip)\r\n\r\n"},{"Id":"7674477473","Type":"PullRequestEvent","CreatedAt":"2018-05-15T04:14:36","Actor":"WonyoungChoi","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2706","RelatedDescription":"Opened pull request \"Add net461 support to Xamarin.Forms.Build.Tasks\" (#2706) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis adds net461 support to XFBT and makes use of Xamarin.Forms.Build.Tasks built with net461 when MSBuildRuntimeType is not 'Core'. \r\nThis is a temporary solution before net471 is fully settled.\r\n\r\n### Bugs Fixed ###\r\n\r\nFixes https://github.com/xamarin/Xamarin.Forms/issues/2690\r\n\r\n### API Changes ###\r\n\r\nN/A\r\n\r\n### Behavioral Changes ###\r\n\r\nN/A\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7673134977","Type":"IssuesEvent","CreatedAt":"2018-05-14T21:03:41","Actor":"nodoid","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2705","RelatedDescription":"Closed issue \"Adding a stylesheet causes a build error\" (#2705) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI'm adding a css stylesheet programatically to my forms page following the documentation on the microsoft website. The stylesheet is in the Assets directory of the .NET Standard forms project and set to be an embedded resource.\r\n\r\nWhen I try to compile, I get the error \"StyleSheet does not exist in the current context\". Looking at intellisense, this does seem to be true - there is no StyleSheet class.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a XAML page.\r\n2. In the code behind add\r\n\r\nResources.Add(StyleSheet.FromAssemblyResource(IntrospectionExtensions.GetTypeInfo(typeof(StyledPage)).Assembly, filename));\r\n\r\n(filename is the full path to the css file)\r\n\r\n### Expected Behavior\r\n\r\nCode compiles as per the Microsoft example\r\n\r\n### Actual Behavior\r\n\r\nCompiler fails to build saying \"StyleSheet not found in this context\" - it makes no difference if Resources is preceded or not by this.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.446417\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  10+\r\n  - Android: 8.1\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/nodoid/multisheets/tree/master\r\n"},{"Id":"7673110189","Type":"IssuesEvent","CreatedAt":"2018-05-14T20:58:43","Actor":"nodoid","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2705","RelatedDescription":"Opened issue \"Adding a stylesheet causes a build error\" (#2705) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI'm adding a css stylesheet programatically to my forms page following the documentation on the microsoft website. The stylesheet is in the Assets directory of the .NET Standard forms project and set to be an embedded resource.\r\n\r\nWhen I try to compile, I get the error \"StyleSheet does not exist in the current context\". Looking at intellisense, this does seem to be true - there is no StyleSheet class.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a XAML page.\r\n2. In the code behind add\r\n\r\nResources.Add(StyleSheet.FromAssemblyResource(IntrospectionExtensions.GetTypeInfo(typeof(StyledPage)).Assembly, filename));\r\n\r\n(filename is the full path to the css file)\r\n\r\n### Expected Behavior\r\n\r\nCode compiles as per the Microsoft example\r\n\r\n### Actual Behavior\r\n\r\nCompiler fails to build saying \"StyleSheet not found in this context\" - it makes no difference if Resources is preceded or not by this.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.446417\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  10+\r\n  - Android: 8.1\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/nodoid/multisheets/tree/master\r\n"},{"Id":"7673081461","Type":"IssuesEvent","CreatedAt":"2018-05-14T20:53:02","Actor":"VladislavAntonyuk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2704","RelatedDescription":"Opened issue \"Page doesn't render\" (#2704) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nPage doesn't render if init navigation not in constructor\r\n\r\n### Steps to Reproduce\r\n1. Create Xamarin Forms app with Android and wpf projects.\r\n\r\n2 In Xamarin Forms app change method to this\r\npublic App()\r\n        {\r\n            InitializeComponent();\r\n            InitApp();     // used for DI        \r\n        }\r\n\r\nprotected override async void OnStart()\r\n        {\r\n            base.OnStart();\r\n            await  InitNavigation();\r\n            OnResume();\r\n        }\r\n\r\nprivate static Task InitNavigation()\r\n        {\r\n            var navigationService = IoC.Container.GetInstance<INavigationService>();\r\n            return navigationService.InitializeAsync(); // Navigate to page NavigateToAsync<MainViewModel>()\r\n        }\r\n\r\n3. Run on Android. The page is rendered.\r\n4. Run on WPF. The page is not rendered\r\n\r\n### Expected Behavior\r\nPage is rendered on wpf\r\n\r\n### Actual Behavior\r\nThe page can be rendered on WPF if run InitNavigation on Constructor\r\n\r\npublic App()\r\n        {\r\n            InitializeComponent();\r\n            InitApp();\r\n            InitNavigation();          \r\n        }\r\n\r\nprotected override async void OnStart()\r\n        {\r\n            base.OnStart();\r\n            OnResume();\r\n        }\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.469394-pre1, the same on previous\r\n- Last known good version:\r\n- IDE: VS2017 15.7.1\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7672971656","Type":"IssuesEvent","CreatedAt":"2018-05-14T20:31:12","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4033","RelatedDescription":"Closed issue \"The contents of response files aren't taken into account when determining whether the cache is still valid or not\" (#4033) at xamarin/xamarin-macios","RelatedBody":"Repro:\r\n\r\n0. Enable diagnostic build log.\r\n1. Create a new project.\r\n2. Add something to the additional mtouch arguments (for instance `-gcc_flags -v`).\r\n3. Build\r\n4. Change the additional mtouch arguments (for instance to `-gcc_flags -v -v`).\r\n5. Build again. The build log should state that the cache was cleared:\r\n\r\n> A full rebuild has been forced because the cache for ... is not valid.\r\n\r\nSupport for response files was added in d15-7, and since we changed the MSBuild tasks to write arguments into response files, this is a functional regression.\r\n\r\n> VS bug [#611119](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/611119), VS bug [#611121](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/611121)"},{"Id":"7672834848","Type":"PullRequestEvent","CreatedAt":"2018-05-14T20:04:37","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4071","RelatedDescription":"Merged pull request \"[d15-7] Fix default values for touchbar APIs in NSTextViewDelegate. (#3843)\" (#4071) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7670205345","Type":"IssuesEvent","CreatedAt":"2018-05-14T12:18:26","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4077","RelatedDescription":"Closed issue \"AOT failure if ref readonly with generics is used\" (#4077) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\nCompile attached project in **Debug**\r\n\r\n### Expected Behavior\r\n\r\nIt compiles\r\n\r\n### Actual Behavior\r\n\r\nIt doesn't compile. Fails on AOTing\r\n\r\n### Environment\r\n\r\n```\r\nXamarin.iOS\r\nVersion: 11.10.1.177 (Visual Studio Community)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n```\r\n\r\n### Build Logs\r\n\r\n```\r\n/Users/antonl/Projects/monosyne/Samples/Scene/Projects/IOS/MTOUCH: Error MT3001: Could not AOT the assembly '/Users/antonl/Projects/monosyne/Samples/Scene/Projects/IOS/obj/iPhone/Debug/mtouch-cache/64/Build/Scene.exe' (MT3001) (Scene.IOS)\r\n```\r\n### Example Project (If Possible)\r\n\r\n[Scene.zip](https://github.com/xamarin/xamarin-macios/files/1995134/Scene.zip)\r\n\r\n### Important Code \r\n\r\n```\r\npublic ref readonly Components<T> GetComponents()\r\n{\r\n    return ref _components;\r\n}\r\n```"},{"Id":"7668735273","Type":"IssuesEvent","CreatedAt":"2018-05-14T07:14:49","Actor":"manuelpa-ms","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4088","RelatedDescription":"Opened issue \"Xamarin.iOS: Could not find the assembly 'Xamarin.iOS.dll' in the app. \" (#4088) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\n\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\n\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\nIPA submitted to Apple for review crashes on startup. Cannot reproduce locally, only with the Release IPA; cleaned the solution and re-submitted, startup crash persists. Crash log contains the following line:\r\n\r\nMay  4 16:47:50 iPhone-8plus MasterLinkiOS[407] <Notice>: Xamarin.iOS: Could not find the assembly 'Xamarin.iOS.dll' in the app. This is usually fixed by cleaning and rebuilding your project; if that doesn't work, please file a bug report: http://bugzilla.xamarin.com\r\n\r\nThe app is already published to the App Store, this is just an updated version.\r\n\r\n### Expected Behavior\r\nApp works correctly.\r\n\r\n### Actual Behavior\r\nSee above\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nVisual Studio Community 2017 for Mac Version 7.3.3(Build 17)\r\nXamarin .iOS Version 11.6.1.4\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n[XCode Crash Log.txt](https://github.com/xamarin/xamarin-macios/files/1999652/XCode.Crash.Log.txt)\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\nNot possible at this time.\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7666061717","Type":"IssuesEvent","CreatedAt":"2018-05-13T04:14:31","Actor":"praeclarum","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4087","RelatedDescription":"Opened issue \"Crash when setting RenderingApi on SCNRenderingOptions\" (#4087) at xamarin/xamarin-macios","RelatedBody":"The key for `RenderingApi` seems to be incorrect on iOS 11.3 and using it results in an ArgumentNull exception.\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\nnew SCNView (UIScreen.MainScreen.Bounds, new SCNRenderingOptions {\r\n            RenderingApi = SCNRenderingApi.Metal,\r\n        })\r\n```\r\n\r\n1. Run that code on iOS 11.3\r\n2. Note the crash\r\n\r\n### Expected Behavior\r\n\r\nSCNView is created with Meta.\r\n\r\n### Actual Behavior\r\n\r\nCrash\r\n\r\n```\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: key\r\n  at Foundation.DictionaryContainer.NullCheckAndRemoveKey (Foundation.NSString key, System.Boolean removeEntry) [0x0001e] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.10.1.174/src/Xamarin.iOS/Foundation/DictionaryContainer.cs:330 \r\n  at Foundation.DictionaryContainer.SetNumberValue (Foundation.NSString key, System.Nullable`1[T] value) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.10.1.174/src/Xamarin.iOS/Foundation/DictionaryContainer.cs:390 \r\n  at SceneKit.SCNRenderingOptions.set_RenderingApi (System.Nullable`1[T] value) [0x00009] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.10.1.174/src/Xamarin.iOS/SceneKit/SCNRenderingOptions.cs:20 \r\n```\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.5 Preview (7.5 build 1222)\r\nInstallation UUID: 4ba352e1-73e8-4dab-a9db-28012ca05af8\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.0-preview2-26406-04\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.300-preview2-008530/Sdks\r\nSDK Versions:\r\n\t2.1.300-preview2-008530\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.173 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.18 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/fak/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_152\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_152-b16)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.174 (Visual Studio Enterprise)\r\nHash: f4933226\r\nBranch: d15-7\r\nBuild date: 2018-04-18 02:19:00-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705001222\r\nGit revision: 48907c13172f883a9a64ea79b87bfc3f2d6bc146\r\nBuild date: 2018-04-20 18:20:07-04\r\nXamarin addins: 93dd8547539f9bdd2b69598711c4661d53ece262\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Tue Dec 19 10:52:05 PST 2017\r\n    root:xnu-4570.47.16~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nMSBuild Editor 2.0.3\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n\r\n"},{"Id":"7664208629","Type":"IssuesEvent","CreatedAt":"2018-05-12T04:06:21","Actor":"stvansolano","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4086","RelatedDescription":"Opened issue \"Xamarin.iOS Binding for native SDK gets \"ObjCRuntime\\Trampolines.g.cs\" class file broken\" (#4086) at xamarin/xamarin-macios","RelatedBody":"I implemented a Xamarin.iOS binding library using Sharpie for a mobile SDK native available for iOS only.\r\n\r\nI ran over most of the documentation about Sharpie but I'm facing this issue when building the project:\r\n\r\n* After creating the binding and use it for a Xamarin.Forms (iOS only) it It gets a compiling issue for a generated class file. \r\n* I'm able to fix it manually by changing the misinterpreted type to a \"var\" and that's it.\r\n* Unfortunately, my CI pipeline can't do that so it gets broken builds too.\r\n\r\nOutput file in VS for Mac\r\n../[ProjectName.iOS]/obj/Debug/ios/ObjCRuntime/Trampolines.g.cs\r\n\r\n![Trampolines.cs](https://pbs.twimg.com/media/DZd9BKJWsAEsoDW.jpg)\r\n### Steps to Reproduce\r\n\r\n1. Create a Xamarin binding project\r\n2. Bring a .framework file\r\n3. Use Sharpie for creating the Binding\r\n4. Reference your new binding as part of a Xamarin iOS project (aka Xamarin.Forms flavored project)\r\n5. Clean All and build the project\r\n\r\n### Expected Behavior\r\nBuilding the Xamarin Binding shouldn't bring up compiling issues on internal/generated tooling classes\r\n\r\n### Actual Behavior\r\nLocal development build broken, CI/CD pipeline got broken too\r\n\r\n### Environment\r\nVS For Mac\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.5 (build 1254)\r\nInstallation UUID: e907c918-e368-4331-846d-fc7bd7838c7f\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 510010047\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\nXamarin.Mac\r\nVersion: 4.4.1.176 (Visual Studio Community)\r\n\r\nXamarin.iOS\r\nVersion: 11.10.1.177 (Visual Studio Community)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n\r\nXamarin.Android\r\nVersion: 8.3.0.19 (Visual Studio Community)\r\nAndroid SDK: /Users/stvansolano/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 705001254\r\nGit revision: 498923ea36d2c7fe440c4e4b8cfb75bd50bbd748\r\nBuild date: 2018-05-05 10:35:24-04\r\nXamarin addins: 219f1c4943b4693b837b4173dd10ea982a47c852\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\nOperating System\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed addins\r\nEditorConfig 1.2\r\n```\r\n\r\n### No Example Project provided\r\n* Action item: Contact for a Private project access or setup the binding or invitation or call to follow-up: stvansolano@gmail.com\r\n"},{"Id":"7663905361","Type":"PullRequestEvent","CreatedAt":"2018-05-12T00:11:37","Actor":"emaf","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4080","RelatedDescription":"Merged pull request \"[msbuild] Adds minimum support for XM binding projects from VS\" (#4080) at xamarin/xamarin-macios","RelatedBody":"Minimum support means:\r\n- Letting users open XM binding projects\r\n- Building XM binding projects offline (not connected to the Mac)"},{"Id":"7663408455","Type":"PullRequestEvent","CreatedAt":"2018-05-11T21:12:09","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4085","RelatedDescription":"Opened pull request \"[xharness] Create simulators if they don't already exist.\" (#4085) at xamarin/xamarin-macios","RelatedBody":"Create any needed simulators, instead of relying on them already existing (or\nsomeone manually creating them).\n\nA nice side effect is that it will become possible to delete all simulators on\na bot (to reclaim space), and they'll be re-created when needed."},{"Id":"7663399940","Type":"PullRequestEvent","CreatedAt":"2018-05-11T21:09:58","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4084","RelatedDescription":"Opened pull request \"[xharness] Don't make a potentially blocking call to enumerate device candidates in VerifyRun.\" (#4084) at xamarin/xamarin-macios","RelatedBody":"Enumerating device candidates can block (if the devices haven't been populated\nyet), so make the whole thing async-based instead."},{"Id":"7663359015","Type":"PullRequestEvent","CreatedAt":"2018-05-11T20:59:48","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4083","RelatedDescription":"Opened pull request \"[xharness] Wait for a build to finish even if it has started.\" (#4083) at xamarin/xamarin-macios","RelatedBody":"Because build tasks might be shared between tests, and if another test already\nstarted a build, this test must still wait until the build finishes."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996099804915814401","CreatedAt":"2018-05-14T18:47:54+00:00","UserScreenname":"xamarinhq","Text":"Avoid compromises in the next version of macOS by updating your Xamarin.Mac apps for 64-bit today: https://t.co/IB6aLnHlAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"996040460673142784","CreatedAt":"2018-05-14T14:52:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/Z262pfyFdQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":18,"RawContent":null},{"Id":"995782486859964418","CreatedAt":"2018-05-13T21:47:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":30,"RawContent":null},{"Id":"995405503118430215","CreatedAt":"2018-05-12T20:49:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"995013274252009473","CreatedAt":"2018-05-11T18:50:25+00:00","UserScreenname":"xamarinhq","Text":"On this week's epsiode of the #XamarinPodcast, get the #MSBuild 2018 recap for mobile developers: https://t.co/UhjdSxsePY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":9,"RawContent":null},{"Id":"994975698736570368","CreatedAt":"2018-05-11T16:21:06+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/iXX9NqH3wX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"994612280980660225","CreatedAt":"2018-05-10T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/TjAVAcfe1a","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":21,"RawContent":null},{"Id":"994284793184563200","CreatedAt":"2018-05-09T18:35:42+00:00","UserScreenname":"xamarinhq","Text":"Everything the #Xamarin developer should know from #MSBuild, all in one place: https://t.co/wZn2oaz7l5 https://t.co/GmsEImV7Bq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":139,"FavoriteCount":76,"RawContent":null},{"Id":"993570225420406784","CreatedAt":"2018-05-07T19:16:16+00:00","UserScreenname":"xamarinhq","Text":"Try the latest release of #XamarinForms 3.0: https://t.co/UlSNk3NClU https://t.co/dGpHZriLc4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":162,"FavoriteCount":113,"RawContent":null}]}},"RunOn":"2018-05-15T05:30:45.4337001Z","RunDurationInMilliseconds":4426}